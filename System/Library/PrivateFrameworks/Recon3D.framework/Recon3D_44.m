__n128 sub_224298504(__n128 **a1, __n128 *a2, __n128 *a3)
{
  __n128 *v4;
  uint64_t v5;
  __n128 result;
  std::__shared_weak_count *v7;
  char v8;

  v4 = *a1;
  v5 = (*a1)[1].n128_u32[2];
  if ((_DWORD)v5 == -1)
    goto LABEL_6;
  if ((_DWORD)v5 != 3)
  {
    ((void (*)(char *, __n128 *))off_24EC70110[v5])(&v8, v4);
LABEL_6:
    result = *a3;
    *v4 = *a3;
    a3->n128_u64[0] = 0;
    a3->n128_u64[1] = 0;
    v4[1].n128_u32[2] = 3;
    return result;
  }
  result = *a3;
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  v7 = (std::__shared_weak_count *)a2->n128_u64[1];
  *a2 = result;
  if (v7)
    std::__shared_weak_count::__release_weak(v7);
  return result;
}

void sub_224298594(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

void sub_2242985D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (**v4)();
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __int128 *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t (**v31)();
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t (**v46)();
  uint64_t (**v47)();
  std::__shared_weak_count *v48;
  __int128 v49;
  uint64_t v50;
  uint64_t (**v51)();
  std::__shared_weak_count *v52;
  std::__shared_weak_count *v53;

  v3 = operator new();
  v4 = (uint64_t (**)())v3;
  v5 = *(std::__shared_weak_count **)(v1 + 8);
  v6 = *(std::__shared_weak_count **)(v1 + 16);
  v51 = &off_24EC715B8;
  v52 = v5;
  v53 = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v47 = (uint64_t (**)())v5;
    v48 = v6;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v47 = (uint64_t (**)())v5;
    v48 = 0;
  }
  v46 = &off_24EC715B8;
  sub_22426C204(v3, (uint64_t)&v46);
  v46 = &off_24EC715B8;
  v10 = v48;
  if (v48)
  {
    v11 = (unint64_t *)&v48->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  *v4 = (uint64_t (*)())off_24EC711E0;
  v51 = &off_24EC715B8;
  v13 = v53;
  if (v53)
  {
    v14 = (unint64_t *)&v53->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v46 = &off_24EC70180;
  v51 = v4;
  v16 = (std::__shared_weak_count *)operator new();
  v17 = v16;
  v16->__shared_owners_ = 0;
  v18 = (unint64_t *)&v16->__shared_owners_;
  v16->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F4F8;
  v16->__shared_weak_owners_ = 0;
  v16[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  v52 = v16;
  do
    v19 = __ldxr(v18);
  while (__stxr(v19 + 1, v18));
  v47 = v4;
  v48 = v16;
  do
    v20 = __ldxr(v18);
  while (__stxr(v20 + 1, v18));
  do
    v21 = __ldaxr(v18);
  while (__stlxr(v21 - 1, v18));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v17);
  }
  (*((void (**)(uint64_t (**)(), uint64_t))*v4 + 8))(v4, 1);
  v22 = *(__int128 **)(v2 - 56);
  v23 = *((_QWORD *)v22 + 2);
  v49 = *v22;
  v50 = v23;
  *(_QWORD *)(v2 - 56) = 0;
  MEMORY[0x227684CE8]();
  v24 = v48;
  if (v48)
  {
    v25 = (unint64_t *)&v48->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
    do
      v27 = __ldaxr(v25);
    while (__stlxr(v27 - 1, v25));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v28 = v52;
  if (v52)
  {
    v29 = (unint64_t *)&v52->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  *(_QWORD *)v0 = &off_24EC28CD0;
  v31 = v47;
  v32 = v48;
  if (v48)
  {
    v33 = (unint64_t *)&v48->__shared_owners_;
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 1, v33));
    v35 = HIDWORD(v50);
    v36 = *((_QWORD *)&v49 + 1);
    v37 = v49;
    do
      v38 = __ldxr(v33);
    while (__stxr(v38 + 1, v33));
    do
      v39 = __ldxr(v33);
    while (__stxr(v39 + 1, v33));
  }
  else
  {
    v35 = HIDWORD(v50);
    v36 = *((_QWORD *)&v49 + 1);
    v37 = v49;
  }
  *(_QWORD *)(v0 + 8) = v31;
  *(_QWORD *)(v0 + 16) = v32;
  *(_QWORD *)(v0 + 24) = v36;
  *(_DWORD *)(v0 + 32) = v35;
  *(_QWORD *)(v0 + 40) = v37;
  *(_DWORD *)(v0 + 48) = 1;
  *(_WORD *)(v0 + 52) = 256;
  if (v32)
  {
    v40 = (unint64_t *)&v32->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
    do
      v42 = __ldaxr(v40);
    while (__stlxr(v42 - 1, v40));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v46 = &off_24EC70180;
  v43 = v48;
  if (v48)
  {
    v44 = (unint64_t *)&v48->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
}

void sub_22429B584()
{
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)&unk_2245B2725, 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_22457406C);
  abort();
}

void sub_22429B5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  sub_223167354(v11);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22429B5D4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)v1 = off_24EC6F8F0;
  v4 = *(unsigned int *)(v1 + 40);
  if ((_DWORD)v4 != -1)
    ((void (*)(uint64_t, uint64_t))off_24EC70110[v4])(v2 - 56, v1 + 16);
  *(_DWORD *)(v1 + 40) = -1;
  MEMORY[0x227684CE8](v1, 0x10A3C40ED729E16);
  _Unwind_Resume(a1);
}

void sub_22429B9F8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)v1 = off_24EC6F7D0;
  v4 = *(unsigned int *)(v1 + 40);
  if ((_DWORD)v4 != -1)
    ((void (*)(uint64_t, uint64_t))off_24EC70110[v4])(v2 - 56, v1 + 16);
  *(_DWORD *)(v1 + 40) = -1;
  MEMORY[0x227684CE8](v1, 0x10A3C40A1F8E8FFLL);
  _Unwind_Resume(a1);
}

_QWORD *sub_22429BB30(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70180;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429BBA4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70180;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429BC18()
{
  return 1;
}

uint64_t sub_22429BC20(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_22429BC28@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_22429BC3C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429BCB8(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70278;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429BD2C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70278;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429BDA0()
{
  return 2;
}

uint64_t sub_22429BDA8(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_22429BDB0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_22429BDC8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429BE44(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70370;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429BEB8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70370;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429BF2C()
{
  return 3;
}

uint64_t sub_22429BF34(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_22429BF3C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_22429BF54(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429BFD0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70468;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429C044(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70468;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429C0B8()
{
  return 4;
}

uint64_t sub_22429C0C0(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_22429C0C8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_22429C0E0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429C15C(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70560;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429C1D0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70560;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429C244()
{
  return 5;
}

uint64_t sub_22429C24C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_22429C254@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_22429C268(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429C2E4(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70658;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429C358(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70658;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429C3CC()
{
  return 7;
}

uint64_t sub_22429C3D4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_22429C3DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_22429C3F4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429C470(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70750;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429C4E4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70750;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429C558()
{
  return 8;
}

uint64_t sub_22429C560(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_22429C568@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_22429C580(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429C5FC(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70848;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429C670(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70848;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429C6E4()
{
  return 21;
}

uint64_t sub_22429C6EC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_22429C6F4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_22429C708(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429C784(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70940;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429C7F8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70940;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429C86C()
{
  return 22;
}

uint64_t sub_22429C874(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_22429C87C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_22429C894(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429C910(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70A38;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429C984(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70A38;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429C9F8()
{
  return 25;
}

uint64_t sub_22429CA00(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_22429CA08@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_22429CA1C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429CA98(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70B30;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429CB0C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70B30;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429CB80()
{
  return 31;
}

uint64_t sub_22429CB88(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_22429CB90@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_22429CBA8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429CC24(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70C28;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429CC98(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70C28;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429CD0C()
{
  return 32;
}

uint64_t sub_22429CD14(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_22429CD1C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_22429CD34(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429CDB0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70D20;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429CE24(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70D20;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429CE98()
{
  return 37;
}

uint64_t sub_22429CEA0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_22429CEA8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_22429CEBC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

_QWORD *sub_22429CF38(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC70E18;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22429CFAC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC70E18;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22429D020()
{
  return 38;
}

uint64_t sub_22429D028(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_22429D030@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_22429D048(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

size_t sub_22429D0C4(_QWORD **a1)
{
  _DWORD *v1;
  const char *v2;
  uint64_t v3;
  size_t result;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v1 = (_DWORD *)**a1;
  v2 = (const char *)(*a1)[1];
  v3 = v1[6];
  if ((_DWORD)v3 != -1)
    ((void (*)(char *, _DWORD *))off_24EC70F00[v3])(&v9, v1);
  v1[6] = -1;
  result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v5 = result;
  if (result >= 0x17)
  {
    v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17)
      v7 = result | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    *((_QWORD *)v1 + 1) = v5;
    *((_QWORD *)v1 + 2) = v8 | 0x8000000000000000;
    *(_QWORD *)v1 = v6;
  }
  else
  {
    *((_BYTE *)v1 + 23) = result;
    v6 = v1;
    if (!result)
      goto LABEL_11;
  }
  result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((_BYTE *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_22429D1B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  void *v6;
  const char *v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  _BYTE v15[15];
  char v16;
  void *__p[2];
  unint64_t v18;
  _QWORD v19[3];

  v19[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 16);
  *(_QWORD *)((char *)v19 + 7) = *(_QWORD *)(a2 + 15);
  v4 = *(void **)a2;
  v19[0] = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v14 = v4;
  *(_QWORD *)v15 = v19[0];
  *(_QWORD *)&v15[7] = *(_QWORD *)((char *)v19 + 7);
  v16 = v5;
  memset(v19, 0, 15);
  v6 = __p;
  v7 = *(const char **)(v2 + 24);
  v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v6 = operator new(v11 + 1);
    __p[1] = v9;
    v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((_BYTE *)v9 + (_QWORD)v6) = 0;
    v10 = *(unsigned int *)(v3 + 24);
    if ((_DWORD)v10 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v10 = *(unsigned int *)(v3 + 24);
  if ((_DWORD)v10 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24EC70F00[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_22319BD1C((_QWORD *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0)
    goto LABEL_15;
}

void sub_22429D368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22429D3AC(uint64_t a1, void **a2)
{
  const void *v3;
  _BYTE *v4;
  _QWORD *v5;
  size_t v6;
  size_t v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  size_t v18;
  size_t v19;
  void *v20;
  char *v21;
  void **v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  void **v27;

  v3 = *(const void **)(*(_QWORD *)a1 + 32);
  v5 = a2[1];
  v4 = a2[2];
  if (v5 < (_QWORD *)v4)
  {
    v6 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    v7 = v6;
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v8 = operator new(v14 + 1);
      v5[1] = v7;
      v5[2] = v15 | 0x8000000000000000;
      *v5 = v8;
    }
    else
    {
      *((_BYTE *)v5 + 23) = v6;
      v8 = v5;
      if (!v6)
        goto LABEL_19;
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((_BYTE *)v8 + v7) = 0;
    v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (_BYTE *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_22316E078();
  v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (_BYTE *)*a2) >> 3);
  v11 = 2 * v10;
  if (2 * v10 <= v9 + 1)
    v11 = v9 + 1;
  if (v10 >= 0x555555555555555)
    v12 = 0xAAAAAAAAAAAAAAALL;
  else
    v12 = v11;
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL)
      sub_223174E94();
    v13 = (char *)operator new(24 * v12);
  }
  else
  {
    v13 = 0;
  }
  v17 = &v13[24 * v9];
  v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  v19 = v18;
  if (v18 >= 0x17)
  {
    v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v24 = v18 | 7;
    v25 = v24 + 1;
    v20 = operator new(v24 + 1);
    *((_QWORD *)v17 + 1) = v19;
    *((_QWORD *)v17 + 2) = v25 | 0x8000000000000000;
    *(_QWORD *)v17 = v20;
  }
  else
  {
    v17[23] = v18;
    v20 = v17;
    if (!v18)
    {
      v21 = &v13[24 * v12];
      *v17 = 0;
      v16 = v17 + 24;
      v22 = (void **)*a2;
      v23 = (void **)a2[1];
      if (v23 == *a2)
        goto LABEL_36;
      do
      {
LABEL_30:
        v26 = *(_OWORD *)(v23 - 3);
        *((_QWORD *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      v23 = (void **)*a2;
      v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0)
          operator delete(*(v27 - 3));
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  v21 = &v13[24 * v12];
  *((_BYTE *)v20 + v19) = 0;
  v16 = v17 + 24;
  v22 = (void **)*a2;
  v23 = (void **)a2[1];
  if (v23 != *a2)
    goto LABEL_30;
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23)
    operator delete(v23);
LABEL_39:
  a2[1] = v16;
}

void sub_22429D63C(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_22429D654(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_22429D65C(int a1)
{
  uint64_t result;
  int v3;
  int v4;
  unsigned int v5;

  result = 1;
  if (a1 <= 1278226487)
  {
    if (a1 > 875704421)
    {
      if (a1 > 875836533)
      {
        if (a1 != 875836534)
        {
          if (a1 == 1094862674)
            return result;
          v3 = 1111970369;
          goto LABEL_37;
        }
      }
      else if (a1 != 875704422 && a1 != 875704438 && a1 != 875836518)
      {
        goto LABEL_39;
      }
      return 2;
    }
    if (a1 > 843264055)
    {
      v4 = -843264056;
LABEL_23:
      v5 = a1 + v4;
      if (v5 > 0x30 || ((1 << v5) & 0x1400000000001) == 0)
        goto LABEL_39;
      return result;
    }
    if (a1 != 24 && a1 != 32)
    {
      v3 = 842285639;
      goto LABEL_37;
    }
  }
  else
  {
    if (a1 <= 1647392358)
    {
      if (a1 > 1278226741)
      {
        if (a1 > 1380410944)
        {
          if (a1 == 1380410945)
            return result;
          v3 = 1380411457;
        }
        else
        {
          if (a1 == 1278226742)
            return result;
          v3 = 1380401729;
        }
        goto LABEL_37;
      }
      v4 = -1278226488;
      goto LABEL_23;
    }
    if (a1 > 1717855599)
    {
      if (a1 > 1751410031)
      {
        if (a1 == 1751410032)
          return result;
        v3 = 1751411059;
      }
      else
      {
        if (a1 == 1717855600)
          return result;
        v3 = 1717856627;
      }
LABEL_37:
      if (a1 == v3)
        return result;
LABEL_39:
      sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/PixelFormat/include/Kit/PixelFormat/Properties.h", 396, (uint64_t)&unk_2245B2725, 0, (uint64_t)"not yet implemented", 19, (void (*)(void **))sub_22457406C);
      abort();
    }
    if (a1 != 1647392359 && a1 != 1647589490)
    {
      v3 = 1647719521;
      goto LABEL_37;
    }
  }
  return result;
}

size_t *sub_22429D898(size_t *result)
{
  size_t v1;
  size_t v2;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BYTE *v17;
  size_t *v18;
  _BYTE *v19;
  int v20;

  v2 = *result;
  v1 = result[1];
  if (*(_DWORD *)(*result + 20) == 1 && *(_DWORD *)(v1 + 20) == 1)
    return sub_22429D9B4(result);
  v4 = *(_DWORD *)(v2 + 12);
  v5 = *(_DWORD *)(v2 + 16);
  if (*(_DWORD *)(v2 + 8))
    v6 = v4 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v8 = v4 - 1;
    v9 = *(unsigned int *)(v2 + 24);
    v10 = *(unsigned int *)(v1 + 24);
    v11 = *(_BYTE **)v2;
    v12 = *(_BYTE **)v1;
    v13 = v5 - 1;
    if (v13)
    {
      v14 = *(unsigned int *)(v1 + 28);
      v15 = *(unsigned int *)(v2 + 28);
      if (v8)
      {
        v16 = 0;
        v17 = v11 + 1;
        result = (size_t *)(v12 + 1);
        do
        {
          v18 = result;
          v19 = v17;
          v20 = v8;
          do
          {
            *((_BYTE *)v18 - 1) = *(v19 - 1);
            *(_BYTE *)v18 = *v19;
            v19 += v9;
            v18 = (size_t *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *((_BYTE *)v18 - 1) = *(v19 - 1);
          *(_BYTE *)v18 = *v19;
          v11 += v15;
          v12 += v14;
          ++v16;
          v17 += v15;
          result = (size_t *)((char *)result + v14);
        }
        while (v16 != v13);
      }
      else
      {
        do
        {
          *v12 = *v11;
          v12[1] = v11[1];
          v11 += v15;
          v12 += v14;
          --v13;
        }
        while (v13);
      }
    }
    for (; v8; --v8)
    {
      *v12 = *v11;
      v12[1] = v11[1];
      v11 += v9;
      v12 += v10;
    }
    *v12 = *v11;
    v12[1] = v11[1];
  }
  return result;
}

size_t *sub_22429D9B4(size_t *result)
{
  size_t v1;
  size_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  BOOL v8;
  size_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  unint64_t v19;

  v1 = *result;
  v2 = result[1];
  v3 = *(unsigned int *)(*result + 24);
  v4 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v3 == (_DWORD)v4)
  {
    v5 = *(_DWORD *)(v1 + 8);
    if ((_DWORD)v3 == *(_DWORD *)(v1 + 20) * v5)
      return sub_22429DA88(result);
  }
  else
  {
    v5 = *(_DWORD *)(v1 + 8);
  }
  v10 = v5;
  v7 = *(_DWORD *)(v1 + 12);
  v6 = *(_DWORD *)(v1 + 16);
  if (v5)
    v8 = v7 == 0;
  else
    v8 = 1;
  if (!v8 && v6 != 0)
  {
    v13 = 0;
    v14 = v5 - 1;
    v15 = *(unsigned int *)(v1 + 20) | ((unint64_t)*(unsigned int *)(v2 + 20) << 32);
    v16 = v7 - 1;
    v17 = v3 | (v4 << 32);
    v18 = v6 - 1;
    v19 = *(unsigned int *)(v1 + 28) | ((unint64_t)*(unsigned int *)(v2 + 28) << 32);
    v12 = *(const void **)v1;
    v11 = *(void **)v2;
    return (size_t *)sub_22429DCE8(&v13, &v10, &v12, &v11);
  }
  return result;
}

size_t *sub_22429DA88(size_t *result)
{
  size_t v1;
  size_t v2;
  int v3;
  int v4;
  size_t v5;
  char *v6;
  BOOL v7;
  int v8;
  BOOL v9;
  size_t v11;

  v1 = *result;
  v2 = result[1];
  v3 = *(_DWORD *)(*result + 28);
  v4 = *(_DWORD *)(*result + 12);
  if (v3 == *(_DWORD *)(v2 + 28) && v3 == *(_DWORD *)(v1 + 24) * v4)
  {
    v5 = (*(_DWORD *)(v1 + 8) * v4 * *(_DWORD *)(v1 + 16));
    v6 = *(char **)v1;
    if ((_DWORD)v5)
      v7 = v6 == 0;
    else
      v7 = 0;
    if (v7)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
    }
    else if (!(_DWORD)v5)
    {
      return result;
    }
    return (size_t *)memmove(*(void **)v2, v6, v5);
  }
  v8 = *(_DWORD *)(v1 + 8);
  v11 = (v8 * v4);
  if (v8)
    v9 = v4 == 0;
  else
    v9 = 1;
  if (!v9 && *(_DWORD *)(v1 + 16) != 0)
    return sub_22429DB94(&v11, (char **)v1, (char **)v2);
  return result;
}

size_t *sub_22429DB94(size_t *result, char **a2, char **a3)
{
  int v3;
  BOOL v4;
  size_t *v6;
  char *v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  size_t v13;

  v3 = *((_DWORD *)a2 + 4);
  if (*((_DWORD *)a2 + 2))
    v4 = *((_DWORD *)a2 + 3) == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v6 = result;
    v7 = *a2;
    v8 = *a3;
    v9 = v3 - 1;
    if (v3 != 1)
    {
      v10 = *((unsigned int *)a3 + 7);
      v11 = *((unsigned int *)a2 + 7);
      do
      {
        v12 = *v6;
        if (!v7 && v12)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
          {
            goto LABEL_22;
          }
        }
        else if (!v12)
        {
          goto LABEL_14;
        }
        result = (size_t *)memmove(v8, v7, v12);
LABEL_14:
        v7 += v11;
        v8 += v10;
        --v9;
      }
      while (v9);
    }
    v13 = *v6;
    if (!v7 && v13)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
LABEL_22:
        abort();
      }
      return (size_t *)memmove(v8, v7, v13);
    }
    if (v13)
      return (size_t *)memmove(v8, v7, v13);
  }
  return result;
}

_DWORD *sub_22429DCE8(_DWORD *result, size_t *a2, const void **a3, void **a4)
{
  size_t *v4;
  _DWORD *v5;
  char *v6;
  char *v7;
  int v8;
  unsigned __int8 *v9;
  char *v10;
  unsigned int v11;
  char *v12;
  char *v13;
  int v14;
  size_t v15;
  unsigned __int8 v16;
  unsigned __int8 *v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, const char *, uint64_t, void *, _QWORD);
  size_t v23;
  unsigned int v24;
  unsigned int i;
  char *v26;
  _BOOL4 v27;
  size_t v28;
  char *v29;
  size_t v30;
  size_t v31;
  BOOL v32;
  char *v33;
  _BOOL4 v34;
  int v35;
  char *v36;
  char *v37;

  v4 = a2;
  v5 = result;
  v6 = (char *)*a3;
  v7 = (char *)*a4;
  if (result[8])
  {
    v8 = 0;
    v9 = (unsigned __int8 *)&qword_255795680;
    do
    {
      v35 = v8;
      v11 = v5[5];
      v36 = v7;
      v37 = v6;
      v12 = v7;
      v13 = v6;
      if (v11)
      {
        v14 = 0;
        v12 = v7;
        v13 = v37;
        while (1)
        {
          v15 = *v4;
          if (!v13)
          {
            if (v15)
              break;
          }
          if (v15)
            goto LABEL_9;
LABEL_10:
          v13 += v5[6];
          v12 += v5[7];
          if (++v14 >= v11)
            goto LABEL_26;
        }
        sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C);
        v16 = atomic_load(v9);
        if ((v16 & 1) == 0 && __cxa_guard_acquire((__guard *)v9))
        {
          __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
          __cxa_guard_release((__guard *)v9);
        }
        v17 = v9;
        if (!byte_255795670 || byte_255795678)
        {
          v19 = qword_255795648;
          v20 = qword_255795650;
          while (v19 != v20)
          {
            v22 = *(void (**)(uint64_t, const char *, uint64_t, void *, _QWORD))v19;
            v21 = *(_QWORD *)(v19 + 8);
            v19 += 16;
            v22(v21, "ptr != nullptr || size == 0", 27, &unk_2245B2725, 0);
          }
        }
        v9 = v17;
        v18 = atomic_load(v17);
        if ((v18 & 1) == 0 && __cxa_guard_acquire((__guard *)v17))
        {
          __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
          __cxa_guard_release((__guard *)v17);
        }
        v4 = a2;
        if (!byte_255795670)
          goto LABEL_48;
        qword_255795660(*(_QWORD *)algn_255795668, "ptr != nullptr || size == 0", 27, &unk_2245B2725, 0);
LABEL_9:
        result = memmove(v12, v13, v15);
        v11 = v5[5];
        goto LABEL_10;
      }
LABEL_26:
      v23 = *v4;
      if (!v13 && v23)
      {
        v10 = v37;
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_48;
        }
      }
      else
      {
        v10 = v37;
        if (!v23)
          goto LABEL_5;
      }
      result = memmove(v12, v13, v23);
LABEL_5:
      v6 = &v10[v5[9]];
      v7 = &v36[v5[10]];
      v8 = v35 + 1;
    }
    while ((v35 + 1) < v5[8]);
  }
  v24 = v5[5];
  if (v24)
  {
    for (i = 0; i < v24; ++i)
    {
      v30 = *v4;
      if (!v6 && v30)
      {
        v26 = v7;
        v27 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C);
        v7 = v26;
        if (v27)
          goto LABEL_48;
      }
      else if (!v30)
      {
        goto LABEL_34;
      }
      v28 = v30;
      v29 = v7;
      result = memmove(v7, v6, v28);
      v7 = v29;
      v24 = v5[5];
LABEL_34:
      v6 += v5[6];
      v7 += v5[7];
    }
  }
  v31 = *v4;
  if (v6)
    v32 = 1;
  else
    v32 = v31 == 0;
  if (!v32)
  {
    v33 = v7;
    v34 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C);
    v7 = v33;
    if (v34)
LABEL_48:
      abort();
    return memmove(v7, v6, v31);
  }
  if (v31)
    return memmove(v7, v6, v31);
  return result;
}

uint64_t sub_22429E098(uint64_t a1, _DWORD *a2)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  if (a2[1])
    v3 = *a2 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a2;
  if (v3)
    v4 = 0;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  LODWORD(v6) = v5 * v4;
  if (HIDWORD(v4))
    v6 = v6;
  else
    v6 = 0;
  LODWORD(v8) = 1;
  *(_QWORD *)((char *)&v8 + 4) = v5 | (v6 << 32);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = __PAIR64__(v4, 3);
  *(_DWORD *)(a1 + 16) = HIDWORD(v4);
  *(_QWORD *)(a1 + 20) = v8;
  *(_DWORD *)(a1 + 28) = v6;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)((char *)&v8 + 4);
  if ((_DWORD)v6 * HIDWORD(v4) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  return a1;
}

void sub_22429E1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  int v20;

  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 24);
    v9 = *(unsigned int *)(a3 + 24);
    v10 = *(_BYTE **)a2;
    v11 = *(_BYTE **)a3;
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 28);
      v14 = *(unsigned int *)(a2 + 28);
      if (v7)
      {
        v15 = 0;
        v16 = v11 + 3;
        v17 = v10 + 1;
        do
        {
          v18 = v17;
          v19 = v16;
          v20 = v7;
          do
          {
            *(v19 - 3) = *(v18 - 1);
            *(v19 - 2) = *v18;
            *(v19 - 1) = v18[1];
            *v19 = v18[2];
            v19 += v9;
            v18 += v8;
            --v20;
          }
          while (v20);
          *(v19 - 3) = *(v18 - 1);
          *(v19 - 2) = *v18;
          *(v19 - 1) = v18[1];
          *v19 = v18[2];
          v10 += v14;
          v11 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    *v11 = *v10;
    v11[1] = v10[1];
    v11[2] = v10[2];
    v11[3] = v10[3];
  }
}

uint64_t *sub_22429E300(uint64_t *result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  int v7;
  BOOL v8;
  int v9;
  char *v10;
  _WORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _WORD *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  BOOL v26;
  uint64_t v27;
  char *v28;
  BOOL v29;
  uint64_t v30;

  v3 = *((unsigned int *)result + 4);
  v4 = *(unsigned int *)(a2 + 16);
  if ((_DWORD)v3 == 1 && (_DWORD)v4 == 1)
  {
    v23 = *((_DWORD *)result + 5);
    v24 = *((_DWORD *)result + 2);
    if (v23 == *(_DWORD *)(a2 + 20) && v23 == v24)
    {
      v27 = (*((_DWORD *)result + 3) * v23);
      v28 = (char *)*result;
      if ((_DWORD)v27)
        v29 = v28 == 0;
      else
        v29 = 0;
      if (v29)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
      }
      else if (!(_DWORD)v27)
      {
        return result;
      }
      return (uint64_t *)memmove(*(void **)a2, v28, 2 * v27);
    }
    v30 = *((unsigned int *)result + 2);
    if (v24)
      v26 = *((_DWORD *)result + 3) == 0;
    else
      v26 = 1;
    if (!v26)
      return sub_22429E4DC(&v30, (char **)result, (char **)a2);
  }
  else
  {
    v6 = *((_DWORD *)result + 2);
    v7 = *((_DWORD *)result + 3);
    if (v6)
      v8 = v7 == 0;
    else
      v8 = 1;
    if (!v8)
    {
      v9 = v6 - 1;
      v10 = (char *)*result;
      v11 = *(_WORD **)a2;
      v12 = v7 - 1;
      if (v12)
      {
        v13 = *(unsigned int *)(a2 + 20);
        v14 = *((unsigned int *)result + 5);
        if (!v9)
        {
          do
          {
            *v11 = *(_WORD *)v10;
            v10 += 2 * v14;
            v11 += v13;
            --v12;
          }
          while (v12);
LABEL_38:
          *v11 = *(_WORD *)v10;
          return result;
        }
        v15 = 0;
        v16 = 2 * v14;
        v17 = 2 * v13;
        result = (uint64_t *)(2 * v4);
        do
        {
          v18 = v11;
          v19 = v10;
          v20 = v9;
          do
          {
            *v18 = *(_WORD *)v19;
            v19 += 2 * v3;
            v18 = (_WORD *)((char *)result + (_QWORD)v18);
            --v20;
          }
          while (v20);
          *v18 = *(_WORD *)v19;
          v10 += v16;
          v11 = (_WORD *)((char *)v11 + v17);
          ++v15;
        }
        while (v15 != v12);
      }
      if (v9)
      {
        v21 = 2 * v3;
        v22 = 2 * v4;
        do
        {
          *v11 = *(_WORD *)v10;
          v10 += v21;
          v11 = (_WORD *)((char *)v11 + v22);
          --v9;
        }
        while (v9);
      }
      goto LABEL_38;
    }
  }
  return result;
}

uint64_t *sub_22429E4DC(uint64_t *result, char **a2, char **a3)
{
  int v3;
  BOOL v4;
  uint64_t *v5;
  char *v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *((_DWORD *)a2 + 3);
  if (*((_DWORD *)a2 + 2))
    v4 = v3 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v5 = result;
    v6 = *a2;
    v7 = *a3;
    v8 = v3 - 1;
    if (v3 != 1)
    {
      v9 = 2 * *((unsigned int *)a2 + 5);
      v10 = 2 * *((unsigned int *)a3 + 5);
      do
      {
        v11 = *v5;
        if (!v6 && v11)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
          {
            goto LABEL_19;
          }
        }
        else if (!v11)
        {
          goto LABEL_11;
        }
        result = (uint64_t *)memmove(v7, v6, 2 * v11);
LABEL_11:
        v6 += v9;
        v7 += v10;
        --v8;
      }
      while (v8);
    }
    v12 = *v5;
    if (!v6 && v12)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
LABEL_19:
        abort();
      }
      return (uint64_t *)memmove(v7, v6, 2 * v12);
    }
    if (v12)
      return (uint64_t *)memmove(v7, v6, 2 * v12);
  }
  return result;
}

uint64_t sub_22429E630(uint64_t result, unint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v7;
  unsigned int i;
  const __int16 *v9;
  uint64_t v10;
  __int16 *v11;
  BOOL v12;
  int16x8_t v13;
  int16x8_t *v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  uint64_t *v18;
  const __int16 *v19;
  uint64_t v20;
  BOOL v21;
  __int16 *v22;
  uint64_t v23;
  int16x8_t v24;
  int16x8_t *v25;
  unint64_t v26;
  unint64_t v27;

  v4 = a4;
  *a2 = a4;
  if (*(_DWORD *)(result + 12))
  {
    v7 = result;
    for (i = 0; i < *(_DWORD *)(v7 + 12); ++i)
    {
      *a2 = v4;
      v9 = *(const __int16 **)(a3 + 16);
      v10 = **(_QWORD **)(a3 + 8);
      if (!v4)
      {
        if (v10)
        {
          result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C);
          if ((_DWORD)result)
            goto LABEL_39;
        }
      }
      if (v10 >= 1)
      {
        if ((unint64_t)v10 >= 0x10)
        {
          v12 = v4 >= (unint64_t)(v9 + 1) || (unint64_t)v9 >= v4 + 2 * v10;
          v11 = (__int16 *)v4;
          if (v12)
          {
            v11 = (__int16 *)(v4 + 2 * (v10 & 0xFFFFFFFFFFFFFFF0));
            v13 = vld1q_dup_s16(v9);
            v14 = (int16x8_t *)(v4 + 16);
            v15 = v10 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v14[-1] = v13;
              *v14 = v13;
              v14 += 2;
              v15 -= 16;
            }
            while (v15);
            v16 = v10 == (v10 & 0x7FFFFFFFFFFFFFF0);
            v10 &= 0xFu;
            if (v16)
              goto LABEL_3;
          }
        }
        else
        {
          v11 = (__int16 *)v4;
        }
        v17 = v10 + 1;
        do
        {
          *v11++ = *v9;
          --v17;
        }
        while (v17 > 1);
      }
LABEL_3:
      v4 += 2 * *(unsigned int *)(v7 + 16);
    }
  }
  *a2 = v4;
  v18 = *(uint64_t **)(a3 + 8);
  v19 = *(const __int16 **)(a3 + 16);
  v20 = *v18;
  if (!v4)
  {
    if (v20)
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C);
      if ((_DWORD)result)
LABEL_39:
        abort();
    }
  }
  if (v20 >= 1)
  {
    if ((unint64_t)v20 < 0x10
      || (v4 < (unint64_t)(v19 + 1) ? (v21 = (unint64_t)v19 >= v4 + 2 * v20) : (v21 = 1), !v21))
    {
      v22 = (__int16 *)v4;
      v23 = v20;
LABEL_36:
      v27 = v23 + 1;
      do
      {
        *v22++ = *v19;
        --v27;
      }
      while (v27 > 1);
      return result;
    }
    v22 = (__int16 *)(v4 + 2 * (v20 & 0xFFFFFFFFFFFFFFF0));
    v23 = v20 & 0xF;
    v24 = vld1q_dup_s16(v19);
    v25 = (int16x8_t *)(v4 + 16);
    v26 = v20 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v25[-1] = v24;
      *v25 = v24;
      v25 += 2;
      v26 -= 16;
    }
    while (v26);
    if (v20 != (v20 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_36;
  }
  return result;
}

uint64_t *sub_22429E838(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;
  char *v8;
  BOOL v9;
  BOOL v10;
  uint64_t v12;

  v1 = *result;
  v2 = result[1];
  v3 = *(_DWORD *)(*result + 24);
  if (v3 == *(_DWORD *)(v2 + 24))
  {
    v4 = *(_DWORD *)(v1 + 8);
    if (v3 == *(_DWORD *)(v1 + 20) * v4)
    {
      v5 = *(_DWORD *)(v1 + 28);
      if (v5 != *(_DWORD *)(v2 + 28))
        return (uint64_t *)sub_22429E96C((_DWORD *)*result, (char **)v2);
      v6 = *(_DWORD *)(v1 + 12);
      if (v5 != v6 * v3)
        return (uint64_t *)sub_22429E96C((_DWORD *)*result, (char **)v2);
      v7 = v6 * v4 * *(_DWORD *)(v1 + 16);
      v8 = *(char **)v1;
      if ((_DWORD)v7)
        v9 = v8 == 0;
      else
        v9 = 0;
      if (v9)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
      }
      else if (!(_DWORD)v7)
      {
        return result;
      }
      return (uint64_t *)memmove(*(void **)v2, v8, 2 * v7);
    }
  }
  else
  {
    v4 = *(_DWORD *)(v1 + 8);
  }
  v12 = v4;
  if (v4)
    v10 = *(_DWORD *)(v1 + 12) == 0;
  else
    v10 = 1;
  if (!v10 && *(_DWORD *)(v1 + 16) != 0)
    return sub_22429EAC0(&v12, (char **)v1, (char **)v2);
  return result;
}

_DWORD *sub_22429E96C(_DWORD *result, char **a2)
{
  int v2;
  int v3;
  int v4;
  BOOL v5;
  uint64_t v7;
  char *v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v2 = result[2];
  v3 = result[3];
  v4 = result[4];
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = (v3 * v2);
    v8 = *(char **)result;
    v9 = *a2;
    v10 = v4 - 1;
    if (v4 == 1)
    {
LABEL_17:
      if (!(_DWORD)v7 || v8)
      {
        if (!(_DWORD)v7)
          return result;
      }
      else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_16;
      }
      return memmove(v9, v8, 2 * v7);
    }
    if ((_DWORD)v7)
    {
      v11 = 2 * result[7];
      v12 = 2 * *((unsigned int *)a2 + 7);
      while (v8
           || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
        result = memmove(v9, v8, 2 * v7);
        v8 += v11;
        v9 += v12;
        if (!--v10)
          goto LABEL_17;
      }
LABEL_16:
      abort();
    }
  }
  return result;
}

uint64_t *sub_22429EAC0(uint64_t *result, char **a2, char **a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  int v9;
  char *v10;
  int v11;
  unsigned __int8 *v12;
  char *v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, const char *, uint64_t, void *, _QWORD);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t *v44;

  v44 = result;
  v3 = *((_DWORD *)a2 + 3);
  v4 = *((_DWORD *)a2 + 4);
  if (*((_DWORD *)a2 + 2))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v43 = *((unsigned int *)a2 + 6);
    v8 = *((unsigned int *)a3 + 6);
    v9 = v4 - 1;
    v5 = v9 == 0;
    v41 = v9;
    v10 = *a2;
    if (!v5)
    {
      if (v3 != 1)
      {
        v11 = 0;
        v12 = (unsigned __int8 *)&qword_255795680;
        v13 = *a3;
        v36 = *((unsigned int *)a2 + 7);
        v37 = *((unsigned int *)a3 + 7);
        v42 = v3 - 1;
        while (1)
        {
          v38 = v11;
          v14 = 0;
          v39 = v13;
          v40 = v10;
          v15 = v10;
          do
          {
            v16 = v15;
            v17 = *v44;
            if (v16 || !v17)
            {
              if (!v17)
                goto LABEL_19;
            }
            else
            {
              v18 = v8;
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C);
              v19 = atomic_load(v12);
              if ((v19 & 1) == 0 && __cxa_guard_acquire((__guard *)v12))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release((__guard *)v12);
              }
              v20 = v12;
              if (!byte_255795670 || byte_255795678)
              {
                v22 = qword_255795648;
                v23 = qword_255795650;
                while (v22 != v23)
                {
                  v25 = *(void (**)(uint64_t, const char *, uint64_t, void *, _QWORD))v22;
                  v24 = *(_QWORD *)(v22 + 8);
                  v22 += 16;
                  v25(v24, "ptr != nullptr || size == 0", 27, &unk_2245B2725, 0);
                }
              }
              v12 = v20;
              v21 = atomic_load(v20);
              if ((v21 & 1) == 0 && __cxa_guard_acquire((__guard *)v20))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release((__guard *)v20);
              }
              if (!byte_255795670)
                goto LABEL_52;
              v8 = v18;
              qword_255795660(*(_QWORD *)algn_255795668, "ptr != nullptr || size == 0", 27, &unk_2245B2725, 0);
              v7 = v42;
            }
            result = (uint64_t *)memmove(v13, v16, 2 * v17);
LABEL_19:
            v15 = &v16[2 * v43];
            v13 += 2 * v8;
            ++v14;
          }
          while (v14 != v7);
          v26 = *v44;
          if (!v16 && v26)
          {
            if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
            {
LABEL_14:
              result = (uint64_t *)memmove(v13, v15, 2 * v26);
              goto LABEL_15;
            }
LABEL_52:
            abort();
          }
          if (v26)
            goto LABEL_14;
LABEL_15:
          v10 = &v40[2 * v36];
          v13 = &v39[2 * v37];
          v11 = v38 + 1;
          if (v38 + 1 == v41)
            goto LABEL_40;
        }
      }
      v32 = 2 * *((unsigned int *)a2 + 7);
      v33 = 2 * *((unsigned int *)a3 + 7);
      v13 = *a3;
      while (1)
      {
        v34 = *v44;
        v35 = v10;
        if (!v10 && v34)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
          {
            goto LABEL_52;
          }
        }
        else if (!v34)
        {
          goto LABEL_58;
        }
        result = (uint64_t *)memmove(v13, v35, 2 * v34);
LABEL_58:
        v10 = &v35[v32];
        v13 += v33;
        if (!--v41)
          goto LABEL_40;
      }
    }
    v13 = *a3;
LABEL_40:
    v27 = v13;
    v28 = v10;
    if (v7)
    {
      v29 = 2 * v8;
      do
      {
        v30 = *v44;
        if (!v28 && v30)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
          {
            goto LABEL_52;
          }
        }
        else if (!v30)
        {
          goto LABEL_44;
        }
        result = (uint64_t *)memmove(v27, v28, 2 * v30);
LABEL_44:
        v28 += 2 * v43;
        v27 += v29;
        --v7;
      }
      while (v7);
    }
    v31 = *v44;
    if (!v28 && v31)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_52;
      }
      return (uint64_t *)memmove(v27, v28, 2 * v31);
    }
    if (v31)
      return (uint64_t *)memmove(v27, v28, 2 * v31);
  }
  return result;
}

void sub_22429EF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  _WORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _WORD *v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  int v20;

  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 24);
    v9 = *(unsigned int *)(a3 + 24);
    v10 = *(_WORD **)a2;
    v11 = *(_WORD **)a3;
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 28);
      v14 = *(unsigned int *)(a2 + 28);
      if (!v7)
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        *v11 = *v10;
        v11[1] = v10[1];
        v11[2] = v10[2];
        v11[3] = v10[3];
        return;
      }
      v15 = 0;
      v16 = v11 + 2;
      v17 = v10 + 2;
      do
      {
        v18 = v17;
        v19 = v16;
        v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19[1] = v18[1];
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *v19 = *v18;
        v19[1] = v18[1];
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
}

__int16 sub_22429F0A8@<H0>(uint64_t *a1@<X0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  int v8;
  BOOL v9;
  int v10;
  _WORD *v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _WORD *v21;
  _WORD *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  __int128 v28;
  _WORD *v29;
  unint64_t v30;
  __int16 *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  __int128 *v35;
  _OWORD *v36;
  unint64_t v37;
  __int128 v38;
  __int16 v39;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(unsigned int *)(v2 + 16);
  v5 = *(unsigned int *)(v3 + 16);
  if ((_DWORD)v4 == 1 && (_DWORD)v5 == 1)
  {
    v24 = *(_DWORD *)(v2 + 20);
    if (v24 != *(_DWORD *)(v3 + 20) || v24 != *(_DWORD *)(v2 + 8))
    {
      LOWORD(v28) = sub_22429F2D0((uint64_t *)v2, (uint64_t *)v3);
      return v28;
    }
    v25 = (*(_DWORD *)(v2 + 12) * v24);
    v26 = *(_QWORD *)v2;
    if ((_DWORD)v25)
      v27 = v26 == 0;
    else
      v27 = 0;
    if (v27)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
    }
    else if (!(_DWORD)v25)
    {
      return v28;
    }
    v29 = *(_WORD **)v3;
    v30 = (v25 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v30 < 0xF)
    {
      v31 = (__int16 *)v26;
    }
    else
    {
      v31 = (__int16 *)v26;
      if ((unint64_t)v29 - v26 >= 0x20)
      {
        v32 = v30 + 1;
        v33 = v32 & 0xFFFFFFFFFFFFFFF0;
        v34 = &v29[v33];
        v31 = (__int16 *)(v26 + v33 * 2);
        v35 = (__int128 *)(v26 + 16);
        v36 = v29 + 8;
        v37 = v32 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v28 = *(v35 - 1);
          v38 = *v35;
          *(v36 - 1) = v28;
          *v36 = v38;
          v35 += 2;
          v36 += 2;
          v37 -= 16;
        }
        while (v37);
        v29 = v34;
        if (v32 == (v32 & 0xFFFFFFFFFFFFFFF0))
          return v28;
      }
    }
    do
    {
      v39 = *v31++;
      LOWORD(v28) = v39;
      *v29++ = v39;
    }
    while (v31 != (__int16 *)(v26 + 2 * v25));
    return v28;
  }
  v7 = *(_DWORD *)(v2 + 8);
  v8 = *(_DWORD *)(v2 + 12);
  if (v7)
    v9 = v8 == 0;
  else
    v9 = 1;
  if (!v9)
  {
    v10 = v7 - 1;
    v11 = *(_WORD **)v2;
    v12 = *(_WORD **)v3;
    v13 = 2 * v4;
    v14 = 2 * v5;
    v15 = v8 - 1;
    if (v15)
    {
      v16 = *(unsigned int *)(v3 + 20);
      v17 = *(unsigned int *)(v2 + 20);
      if (v10)
      {
        v18 = 0;
        v19 = 2 * v17;
        v20 = 2 * v16;
        do
        {
          v21 = v12;
          v22 = v11;
          v23 = v10;
          do
          {
            *v21 = *v22;
            v22 = (_WORD *)((char *)v22 + v13);
            v21 = (_WORD *)((char *)v21 + v14);
            --v23;
          }
          while (v23);
          *v21 = *v22;
          v11 = (_WORD *)((char *)v11 + v19);
          v12 = (_WORD *)((char *)v12 + v20);
          ++v18;
        }
        while (v18 != v15);
      }
      else
      {
        do
        {
          *v12 = *v11;
          v11 += v17;
          v12 += v16;
          --v15;
        }
        while (v15);
      }
    }
    for (; v10; --v10)
    {
      *v12 = *v11;
      v11 = (_WORD *)((char *)v11 + v13);
      v12 = (_WORD *)((char *)v12 + v14);
    }
    LOWORD(v28) = *v11;
    *v12 = *v11;
  }
  return v28;
}

__int16 sub_22429F2D0@<H0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>)
{
  int v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  _WORD *v16;
  __int16 *v17;
  uint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int16 v22;
  _BOOL4 v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _WORD *v27;
  __int16 *v28;
  __int128 *v29;
  _OWORD *v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  __int16 v34;
  uint64_t v36;
  uint64_t v37;

  v3 = *((unsigned int *)a1 + 2);
  v2 = *((_DWORD *)a1 + 3);
  if ((_DWORD)v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v5 = *a1;
    v6 = *a2;
    v7 = v2 - 1;
    v36 = *((unsigned int *)a1 + 2);
    if (v2 != 1)
    {
      v8 = 0;
      v9 = 2 * *((unsigned int *)a2 + 5);
      v10 = 2 * *((unsigned int *)a1 + 5);
      v11 = (v3 - 1) & 0x7FFFFFFFFFFFFFFFLL;
      v12 = (v11 + 1) & 0xFFFFFFFFFFFFFFF0;
      v37 = 2 * v12;
      v13 = *a2;
      v14 = *a1;
      while (1)
      {
        if (!v14)
        {
          v15 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C);
          v3 = v36;
          if (v15)
            goto LABEL_29;
        }
        v16 = (_WORD *)v13;
        v17 = (__int16 *)v14;
        if (v11 < 0xF)
          goto LABEL_33;
        v16 = (_WORD *)v13;
        v17 = (__int16 *)v14;
        if ((unint64_t)(v6 + v9 * v8 - (v5 + v10 * v8)) < 0x20)
          goto LABEL_33;
        v18 = 0;
        v16 = (_WORD *)(v13 + v37);
        v17 = (__int16 *)(v14 + v37);
        v19 = (v11 + 1) & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v20 = (_OWORD *)(v13 + v18);
          v21 = *(_OWORD *)(v14 + v18 + 16);
          *v20 = *(_OWORD *)(v14 + v18);
          v20[1] = v21;
          v18 += 32;
          v19 -= 16;
        }
        while (v19);
        if (v11 + 1 != v12)
        {
LABEL_33:
          do
          {
            v22 = *v17++;
            *v16++ = v22;
          }
          while (v17 != (__int16 *)(v14 + 2 * v3));
        }
        v14 += v10;
        v13 += v9;
        if ((_DWORD)++v8 == v7)
          goto LABEL_18;
      }
    }
    v13 = *a2;
    v14 = *a1;
LABEL_18:
    if (!v14)
    {
      v23 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C);
      v3 = v36;
      if (v23)
LABEL_29:
        abort();
    }
    v24 = (v3 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v24 < 0xF || (unint64_t)(v13 - v14) < 0x20)
    {
      v27 = (_WORD *)v13;
      v28 = (__int16 *)v14;
    }
    else
    {
      v25 = v24 + 1;
      v26 = (v24 + 1) & 0xFFFFFFFFFFFFFFF0;
      v27 = (_WORD *)(v13 + 2 * v26);
      v28 = (__int16 *)(v14 + 2 * v26);
      v29 = (__int128 *)(v14 + 16);
      v30 = (_OWORD *)(v13 + 16);
      v31 = v26;
      do
      {
        v32 = *(v29 - 1);
        v33 = *v29;
        *(v30 - 1) = v32;
        *v30 = v33;
        v29 += 2;
        v30 += 2;
        v31 -= 16;
      }
      while (v31);
      if (v25 == v26)
        return v32;
    }
    do
    {
      v34 = *v28++;
      LOWORD(v32) = v34;
      *v27++ = v34;
    }
    while (v28 != (__int16 *)(v14 + 2 * v3));
  }
  return v32;
}

unsigned __int16 sub_22429F504@<H0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, __n128 a5@<Q0>)
{
  unint64_t v5;
  unsigned int i;
  const __int16 *v10;
  uint64_t v11;
  __int16 *v12;
  BOOL v13;
  __n128 *v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  uint64_t *v18;
  const __int16 *v19;
  uint64_t v20;
  BOOL v21;
  __int16 *v22;
  uint64_t v23;
  __n128 *v24;
  unint64_t v25;
  unint64_t v26;

  v5 = a4;
  *a2 = a4;
  if (*(_DWORD *)(a1 + 12))
  {
    for (i = 0; i < *(_DWORD *)(a1 + 12); ++i)
    {
      *a2 = v5;
      v10 = *(const __int16 **)(a3 + 16);
      v11 = **(_QWORD **)(a3 + 8);
      if (!v5
        && v11
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_39;
      }
      if (v11 >= 1)
      {
        if ((unint64_t)v11 >= 0x10)
        {
          v13 = v5 >= (unint64_t)(v10 + 1) || (unint64_t)v10 >= v5 + 2 * v11;
          v12 = (__int16 *)v5;
          if (v13)
          {
            v12 = (__int16 *)(v5 + 2 * (v11 & 0xFFFFFFFFFFFFFFF0));
            a5 = (__n128)vld1q_dup_s16(v10);
            v14 = (__n128 *)(v5 + 16);
            v15 = v11 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v14[-1] = a5;
              *v14 = a5;
              v14 += 2;
              v15 -= 16;
            }
            while (v15);
            v16 = v11 == (v11 & 0x7FFFFFFFFFFFFFF0);
            v11 &= 0xFu;
            if (v16)
              goto LABEL_3;
          }
        }
        else
        {
          v12 = (__int16 *)v5;
        }
        v17 = v11 + 1;
        do
        {
          a5.n128_u16[0] = *v10;
          *v12++ = *v10;
          --v17;
        }
        while (v17 > 1);
      }
LABEL_3:
      v5 += 2 * *(unsigned int *)(a1 + 16);
    }
  }
  *a2 = v5;
  v18 = *(uint64_t **)(a3 + 8);
  v19 = *(const __int16 **)(a3 + 16);
  v20 = *v18;
  if (!v5
    && v20
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
  {
LABEL_39:
    abort();
  }
  if (v20 >= 1)
  {
    if ((unint64_t)v20 < 0x10
      || (v5 < (unint64_t)(v19 + 1) ? (v21 = (unint64_t)v19 >= v5 + 2 * v20) : (v21 = 1), !v21))
    {
      v22 = (__int16 *)v5;
      v23 = v20;
LABEL_36:
      v26 = v23 + 1;
      do
      {
        a5.n128_u16[0] = *v19;
        *v22++ = *v19;
        --v26;
      }
      while (v26 > 1);
      return a5.n128_u16[0];
    }
    v22 = (__int16 *)(v5 + 2 * (v20 & 0xFFFFFFFFFFFFFFF0));
    v23 = v20 & 0xF;
    a5 = (__n128)vld1q_dup_s16(v19);
    v24 = (__n128 *)(v5 + 16);
    v25 = v20 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v24[-1] = a5;
      *v24 = a5;
      v24 += 2;
      v25 -= 16;
    }
    while (v25);
    if (v20 != (v20 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_36;
  }
  return a5.n128_u16[0];
}

__int16 sub_22429F70C@<H0>(uint64_t *a1@<X0>)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  _WORD *v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  _WORD *v20;
  int v21;
  int v22;
  unsigned int v23;
  double v24;
  BOOL v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v1 = *a1;
  v2 = a1[1];
  if (*(_DWORD *)(*a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v22 = *(_DWORD *)(v1 + 24);
    if (v22 == *(_DWORD *)(v2 + 24))
    {
      v23 = *(_DWORD *)(v1 + 8);
      if (v22 == v23)
      {
        v24 = sub_22429F8AC(a1);
        return LOWORD(v24);
      }
    }
    else
    {
      v23 = *(_DWORD *)(v1 + 8);
    }
    v30 = v23;
    if (v23)
      v25 = *(_DWORD *)(v1 + 12) == 0;
    else
      v25 = 1;
    if (!v25 && *(_DWORD *)(v1 + 16) != 0)
      v24 = sub_22429FCC4(&v30, v1, v2);
  }
  else
  {
    v4 = *(_DWORD *)(v1 + 12);
    v5 = *(_DWORD *)(v1 + 16);
    if (*(_DWORD *)(v1 + 8))
      v6 = v4 == 0;
    else
      v6 = 1;
    if (!v6 && v5 != 0)
    {
      v8 = v4 - 1;
      v9 = *(_WORD **)v1;
      v10 = *(_WORD **)v2;
      v11 = 2 * *(unsigned int *)(v1 + 24);
      v12 = 2 * *(unsigned int *)(v2 + 24);
      v13 = v5 - 1;
      if (v13)
      {
        v14 = *(unsigned int *)(v2 + 28);
        v15 = *(unsigned int *)(v1 + 28);
        if (v8)
        {
          v16 = 0;
          v17 = v9 + 1;
          v18 = v10 + 1;
          do
          {
            v19 = v18;
            v20 = v17;
            v21 = v8;
            do
            {
              *(v19 - 1) = *(v20 - 1);
              *v19 = *v20;
              v20 = (_WORD *)((char *)v20 + v11);
              v19 = (_WORD *)((char *)v19 + v12);
              --v21;
            }
            while (v21);
            *(v19 - 1) = *(v20 - 1);
            *v19 = *v20;
            v9 += v15;
            v10 += v14;
            ++v16;
            v17 += v15;
            v18 += v14;
          }
          while (v16 != v13);
        }
        else
        {
          v27 = 2 * v15;
          v28 = 2 * v14;
          do
          {
            *v10 = *v9;
            v10[1] = v9[1];
            v9 = (_WORD *)((char *)v9 + v27);
            v10 = (_WORD *)((char *)v10 + v28);
            --v13;
          }
          while (v13);
        }
      }
      for (; v8; --v8)
      {
        *v10 = *v9;
        v10[1] = v9[1];
        v9 = (_WORD *)((char *)v9 + v11);
        v10 = (_WORD *)((char *)v10 + v12);
      }
      *v10 = *v9;
      LOWORD(v24) = v9[1];
      v10[1] = LOWORD(v24);
    }
  }
  return LOWORD(v24);
}

double sub_22429F8AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  int v9;
  int v10;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  _WORD *v18;
  unint64_t v19;
  __int16 *v20;
  unint64_t v21;
  unint64_t v22;
  _WORD *v23;
  __int128 *v24;
  _OWORD *v25;
  unint64_t v26;
  __int128 v27;
  __int16 v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  _OWORD v38[3];

  v1 = *a1;
  v2 = a1[1];
  v3 = *(unsigned int *)(*a1 + 28);
  v4 = *(unsigned int *)(v2 + 28);
  v5 = *(_DWORD *)(*a1 + 12);
  if ((_DWORD)v3 == (_DWORD)v4 && (_DWORD)v3 == *(_DWORD *)(v1 + 24) * v5)
  {
    v6 = (*(_DWORD *)(v1 + 8) * v5 * *(_DWORD *)(v1 + 16));
    v7 = *(_QWORD *)v1;
    if ((_DWORD)v6)
      v8 = v7 == 0;
    else
      v8 = 0;
    if (v8)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
    }
    else if (!(_DWORD)v6)
    {
      return *(double *)&v17;
    }
    v18 = *(_WORD **)v2;
    v19 = (v6 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v19 < 0xF)
    {
      v20 = (__int16 *)v7;
      do
      {
LABEL_25:
        v28 = *v20++;
        LOWORD(v17) = v28;
        *v18++ = v28;
      }
      while (v20 != (__int16 *)(v7 + 2 * v6));
      return *(double *)&v17;
    }
    v20 = (__int16 *)v7;
    if ((unint64_t)v18 - v7 < 0x20)
      goto LABEL_25;
    v21 = v19 + 1;
    v22 = v21 & 0xFFFFFFFFFFFFFFF0;
    v23 = &v18[v22];
    v20 = (__int16 *)(v7 + v22 * 2);
    v24 = (__int128 *)(v7 + 16);
    v25 = v18 + 8;
    v26 = v21 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v17 = *(v24 - 1);
      v27 = *v24;
      *(v25 - 1) = v17;
      *v25 = v27;
      v24 += 2;
      v25 += 2;
      v26 -= 16;
    }
    while (v26);
    v18 = v23;
    if (v21 != (v21 & 0xFFFFFFFFFFFFFFF0))
      goto LABEL_25;
  }
  else
  {
    v9 = *(_DWORD *)(v1 + 8);
    v30 = (v9 * v5);
    v10 = *(_DWORD *)(v1 + 16);
    if (v9)
      v11 = v5 == 0;
    else
      v11 = 1;
    if (!v11 && v10 != 0)
    {
      v32 = v9 - 1;
      v13 = *(unsigned int *)(v1 + 24);
      v14 = *(unsigned int *)(v2 + 24);
      v33 = *(unsigned int *)(v1 + 20) | ((unint64_t)*(unsigned int *)(v2 + 20) << 32);
      v31 = 0;
      v34 = v5 - 1;
      v35 = v13 | (v14 << 32);
      v36 = v10 - 1;
      v37 = v3 | (v4 << 32);
      v15 = *(_QWORD *)v1;
      v16 = *(_QWORD *)v2;
      memset(v38, 0, sizeof(v38));
      *(_QWORD *)&v17 = sub_22429FA74((unsigned int *)&v31, (uint64_t)v38, &v30, v15, v16);
    }
  }
  return *(double *)&v17;
}

__int16 sub_22429FA74@<H0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int i;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _WORD *v21;
  __int16 *v22;
  __int128 *v23;
  _OWORD *v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int16 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _WORD *v33;
  __int16 *v34;
  __int128 *v35;
  _OWORD *v36;
  unint64_t v37;
  __int128 v38;
  __int16 v39;

  v5 = a5;
  v6 = a4;
  v9 = a1[6];
  v10 = a1[7];
  v11 = a1[3] | (unint64_t)(v9 << 32);
  v12 = a1[4] | (unint64_t)(v10 << 32);
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = a5;
  *(_QWORD *)(a2 + 32) = v12;
  *(_DWORD *)(a2 + 40) = v10;
  v13 = a1[8];
  if (v13)
  {
    for (i = 0; i < v13; ++i)
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 24) = v5;
      v16 = *a3;
      if (v6 || !v16)
      {
        v17 = v5;
        if (!v16)
          goto LABEL_4;
      }
      else
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_33;
        }
        v17 = *(_QWORD *)(a2 + 24);
      }
      v18 = (v16 - 1) & 0x7FFFFFFFFFFFFFFFLL;
      if (v18 < 0xF || (unint64_t)(v17 - v6) < 0x20)
      {
        v21 = (_WORD *)v17;
        v22 = (__int16 *)v6;
      }
      else
      {
        v19 = v18 + 1;
        v20 = (v18 + 1) & 0xFFFFFFFFFFFFFFF0;
        v21 = (_WORD *)(v17 + 2 * v20);
        v22 = (__int16 *)(v6 + 2 * v20);
        v23 = (__int128 *)(v6 + 16);
        v24 = (_OWORD *)(v17 + 16);
        v25 = v20;
        do
        {
          v26 = *(v23 - 1);
          v27 = *v23;
          *(v24 - 1) = v26;
          *v24 = v27;
          v23 += 2;
          v24 += 2;
          v25 -= 16;
        }
        while (v25);
        if (v19 == v20)
          goto LABEL_3;
      }
      do
      {
        v28 = *v22++;
        LOWORD(v26) = v28;
        *v21++ = v28;
      }
      while (v22 != (__int16 *)(v6 + 2 * v16));
LABEL_3:
      v13 = a1[8];
LABEL_4:
      v6 += 2 * a1[9];
      v5 += 2 * a1[10];
    }
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 24) = v5;
  v29 = *a3;
  if (v6 || !v29)
  {
    if (!v29)
      return v26;
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
    {
LABEL_33:
      abort();
    }
    v5 = *(_QWORD *)(a2 + 24);
  }
  v30 = (v29 - 1) & 0x7FFFFFFFFFFFFFFFLL;
  if (v30 < 0xF || (unint64_t)(v5 - v6) < 0x20)
  {
    v33 = (_WORD *)v5;
    v34 = (__int16 *)v6;
    do
    {
LABEL_31:
      v39 = *v34++;
      LOWORD(v26) = v39;
      *v33++ = v39;
    }
    while (v34 != (__int16 *)(v6 + 2 * v29));
    return v26;
  }
  v31 = v30 + 1;
  v32 = (v30 + 1) & 0xFFFFFFFFFFFFFFF0;
  v33 = (_WORD *)(v5 + 2 * v32);
  v34 = (__int16 *)(v6 + 2 * v32);
  v35 = (__int128 *)(v6 + 16);
  v36 = (_OWORD *)(v5 + 16);
  v37 = v32;
  do
  {
    v26 = *(v35 - 1);
    v38 = *v35;
    *(v36 - 1) = v26;
    *v36 = v38;
    v35 += 2;
    v36 += 2;
    v37 -= 16;
  }
  while (v37);
  if (v31 != v32)
    goto LABEL_31;
  return v26;
}

double sub_22429FCC4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  double result;
  uint64_t v15;
  int v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  _OWORD v22[2];

  v4 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  v5 = *(_DWORD *)(a2 + 16);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v16 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 24);
    v10 = *(unsigned int *)(a3 + 24);
    v17 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v15 = 0;
    v18 = v3 - 1;
    v19 = v9 | (v10 << 32);
    v21 = *(unsigned int *)(a2 + 28) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v11 = *(_QWORD *)a2;
    v12 = *(_QWORD *)a3;
    memset(v22, 0, sizeof(v22));
    v20 = v5 - 1;
    if (v5 != 1)
    {
      v13 = 0;
      do
      {
        sub_22429FDB0(&v15, v22, a1, v11, v12);
        v11 += 2 * v21;
        v12 += 2 * HIDWORD(v21);
        ++v13;
      }
      while (v13 < v20);
    }
    *(_QWORD *)&result = sub_22429FDB0(&v15, v22, a1, v11, v12);
  }
  return result;
}

__int16 sub_22429FDB0@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v9;
  unsigned int i;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _WORD *v17;
  __int16 *v18;
  __int128 *v19;
  _OWORD *v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  __int16 v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _WORD *v29;
  __int16 *v30;
  __int128 *v31;
  _OWORD *v32;
  unint64_t v33;
  __int128 v34;
  __int16 v35;

  v5 = a5;
  v6 = a4;
  *a2 = a4;
  a2[2] = a5;
  v9 = a1[5];
  if (v9)
  {
    for (i = 0; i < v9; ++i)
    {
      *a2 = v6;
      a2[2] = v5;
      v12 = *a3;
      if (v6 || !v12)
      {
        v13 = v5;
        if (!v12)
          goto LABEL_4;
      }
      else
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_33;
        }
        v13 = a2[2];
      }
      v14 = (v12 - 1) & 0x7FFFFFFFFFFFFFFFLL;
      if (v14 < 0xF || (unint64_t)(v13 - v6) < 0x20)
      {
        v17 = (_WORD *)v13;
        v18 = (__int16 *)v6;
      }
      else
      {
        v15 = v14 + 1;
        v16 = (v14 + 1) & 0xFFFFFFFFFFFFFFF0;
        v17 = (_WORD *)(v13 + 2 * v16);
        v18 = (__int16 *)(v6 + 2 * v16);
        v19 = (__int128 *)(v6 + 16);
        v20 = (_OWORD *)(v13 + 16);
        v21 = v16;
        do
        {
          v22 = *(v19 - 1);
          v23 = *v19;
          *(v20 - 1) = v22;
          *v20 = v23;
          v19 += 2;
          v20 += 2;
          v21 -= 16;
        }
        while (v21);
        if (v15 == v16)
          goto LABEL_3;
      }
      do
      {
        v24 = *v18++;
        LOWORD(v22) = v24;
        *v17++ = v24;
      }
      while (v18 != (__int16 *)(v6 + 2 * v12));
LABEL_3:
      v9 = a1[5];
LABEL_4:
      v6 += 2 * a1[6];
      v5 += 2 * a1[7];
    }
  }
  *a2 = v6;
  a2[2] = v5;
  v25 = *a3;
  if (v6 || !v25)
  {
    if (!v25)
      return v22;
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
    {
LABEL_33:
      abort();
    }
    v5 = a2[2];
  }
  v26 = (v25 - 1) & 0x7FFFFFFFFFFFFFFFLL;
  if (v26 < 0xF || (unint64_t)(v5 - v6) < 0x20)
  {
    v29 = (_WORD *)v5;
    v30 = (__int16 *)v6;
    do
    {
LABEL_31:
      v35 = *v30++;
      LOWORD(v22) = v35;
      *v29++ = v35;
    }
    while (v30 != (__int16 *)(v6 + 2 * v25));
    return v22;
  }
  v27 = v26 + 1;
  v28 = (v26 + 1) & 0xFFFFFFFFFFFFFFF0;
  v29 = (_WORD *)(v5 + 2 * v28);
  v30 = (__int16 *)(v6 + 2 * v28);
  v31 = (__int128 *)(v6 + 16);
  v32 = (_OWORD *)(v5 + 16);
  v33 = v28;
  do
  {
    v22 = *(v31 - 1);
    v34 = *v31;
    *(v32 - 1) = v22;
    *v32 = v34;
    v31 += 2;
    v32 += 2;
    v33 -= 16;
  }
  while (v33);
  if (v27 != v28)
    goto LABEL_31;
  return v22;
}

double sub_22429FFE8(_QWORD *a1)
{
  _DWORD *v1;
  uint64_t v2;
  BOOL v4;
  double result;
  int v7;
  unsigned int v8;
  BOOL v9;
  char v11;
  char *v12;

  v1 = (_DWORD *)*a1;
  v2 = a1[1];
  if (*(_DWORD *)(*a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v7 = v1[6];
    if (v7 == *(_DWORD *)(v2 + 24))
    {
      v8 = v1[2];
      if (v7 == v8)
        return sub_22429F8AC(a1);
    }
    else
    {
      v8 = v1[2];
    }
    v12 = (char *)v8;
    if (v8)
      v9 = v1[3] == 0;
    else
      v9 = 1;
    if (!v9 && v1[4] != 0)
      return sub_22429FCC4((uint64_t *)&v12, (uint64_t)v1, v2);
  }
  else
  {
    v11 = 0;
    if (v1[2])
      v4 = v1[3] == 0;
    else
      v4 = 1;
    if (!v4 && v1[4] != 0)
    {
      v12 = &v11;
      *(_QWORD *)&result = sub_2242A00A0((uint64_t)&v12, (uint64_t)v1, v2);
    }
  }
  return result;
}

__int16 sub_2242A00A0@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  _WORD *v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _WORD *v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  __int16 result;

  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(_WORD **)a2;
    v9 = *(_WORD **)a3;
    v10 = 2 * *(unsigned int *)(a2 + 24);
    v11 = 2 * *(unsigned int *)(a3 + 24);
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 28);
      v14 = *(unsigned int *)(a2 + 28);
      if (v7)
      {
        v15 = 0;
        v16 = v9 + 2;
        v17 = v8 + 2;
        do
        {
          v18 = v17;
          v19 = v16;
          v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *v19 = *v18;
            v19[1] = v18[1];
            v19 = (_WORD *)((char *)v19 + v11);
            v18 = (_WORD *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19[1] = v18[1];
          v8 += v14;
          v9 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        v21 = 2 * v14;
        v22 = 2 * v13;
        do
        {
          *v9 = *v8;
          v9[1] = v8[1];
          v9[2] = v8[2];
          v9[3] = v8[3];
          v8 = (_WORD *)((char *)v8 + v21);
          v9 = (_WORD *)((char *)v9 + v22);
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *v9 = *v8;
      v9[1] = v8[1];
      v9[2] = v8[2];
      v9[3] = v8[3];
      v8 = (_WORD *)((char *)v8 + v10);
      v9 = (_WORD *)((char *)v9 + v11);
    }
    *v9 = *v8;
    v9[1] = v8[1];
    v9[2] = v8[2];
    result = v8[3];
    v9[3] = result;
  }
  return result;
}

uint64_t sub_2242A0208(uint64_t result, unint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v7;
  unsigned int i;
  const float *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  float32x4_t v16;
  float32x4_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  const float *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  unint64_t v27;
  float32x4_t v28;
  float32x4_t *v29;
  unint64_t v30;

  v4 = a4;
  *a2 = a4;
  if (*(_DWORD *)(result + 12))
  {
    v7 = result;
    for (i = 0; i < *(_DWORD *)(v7 + 12); ++i)
    {
      *a2 = v4;
      v9 = *(const float **)(a3 + 16);
      v10 = **(_QWORD **)(a3 + 8);
      if (!v4)
      {
        if (v10)
        {
          result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C);
          if ((_DWORD)result)
            goto LABEL_37;
        }
      }
      if (v10 >= 1)
      {
        v11 = v10 & 0x3FFFFFFFFFFFFFFFLL;
        v12 = (v10 & 0x3FFFFFFFFFFFFFFFLL) - ((v10 & 0x3FFFFFFFFFFFFFFFLL) != 0) + 1;
        if (v12 >= 0x10)
        {
          v14 = -4;
          if (!v11)
            v14 = 0;
          if (v4 >= (unint64_t)(v9 + 1)
            || (v15 = v4 + v14 + 4 * v10 + 4, v13 = (_DWORD *)v4, (unint64_t)v9 >= v15))
          {
            v13 = (_DWORD *)(v4 + 4 * (v12 & 0xFFFFFFFFFFFFFFF8));
            v11 -= v12 & 0xFFFFFFFFFFFFFFF8;
            v16 = vld1q_dup_f32(v9);
            v17 = (float32x4_t *)(v4 + 16);
            v18 = v12 & 0xFFFFFFFFFFFFFFF8;
            do
            {
              v17[-1] = v16;
              *v17 = v16;
              v17 += 2;
              v18 -= 8;
            }
            while (v18);
            if (v12 == (v12 & 0xFFFFFFFFFFFFFFF8))
              goto LABEL_3;
          }
        }
        else
        {
          v13 = (_DWORD *)v4;
        }
        v19 = v11 + 1;
        do
        {
          *v13++ = *(_DWORD *)v9;
          --v19;
        }
        while (v19 > 1);
      }
LABEL_3:
      v4 += 4 * *(unsigned int *)(v7 + 16);
    }
  }
  *a2 = v4;
  v20 = *(uint64_t **)(a3 + 8);
  v21 = *(const float **)(a3 + 16);
  v22 = *v20;
  if (!v4)
  {
    if (v22)
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C);
      if ((_DWORD)result)
LABEL_37:
        abort();
    }
  }
  if (v22 >= 1)
  {
    v23 = v22 & 0x3FFFFFFFFFFFFFFFLL;
    v24 = (v22 & 0x3FFFFFFFFFFFFFFFLL) - ((v22 & 0x3FFFFFFFFFFFFFFFLL) != 0) + 1;
    if (v24 < 0x10)
      goto LABEL_29;
    v25 = 4 * v22;
    if (!v23)
      v25 = 4;
    if (v4 < (unint64_t)(v21 + 1) && (unint64_t)v21 < v4 + v25)
    {
LABEL_29:
      v26 = (_DWORD *)v4;
LABEL_30:
      v27 = v23 + 1;
      do
      {
        *v26++ = *(_DWORD *)v21;
        --v27;
      }
      while (v27 > 1);
      return result;
    }
    v26 = (_DWORD *)(v4 + 4 * (v24 & 0xFFFFFFFFFFFFFFF8));
    v23 -= v24 & 0xFFFFFFFFFFFFFFF8;
    v28 = vld1q_dup_f32(v21);
    v29 = (float32x4_t *)(v4 + 16);
    v30 = v24 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v29[-1] = v28;
      *v29 = v28;
      v29 += 2;
      v30 -= 8;
    }
    while (v30);
    if (v24 != (v24 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_30;
  }
  return result;
}

float sub_2242A0454(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  float *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  _DWORD *v20;
  int v21;
  float result;

  v2 = *a1;
  v1 = a1[1];
  if (*(_DWORD *)(*a1 + 20) == 1 && *(_DWORD *)(v1 + 20) == 1)
  {
    sub_2242A0590(a1);
    return result;
  }
  v4 = *(_DWORD *)(v2 + 12);
  v5 = *(_DWORD *)(v2 + 16);
  if (*(_DWORD *)(v2 + 8))
    v6 = v4 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v8 = v4 - 1;
    v9 = *(unsigned int *)(v2 + 24);
    v10 = *(unsigned int *)(v1 + 24);
    v11 = *(float **)v2;
    v12 = *(float **)v1;
    v13 = v5 - 1;
    if (v13)
    {
      v14 = *(unsigned int *)(v1 + 28);
      v15 = *(unsigned int *)(v2 + 28);
      if (!v8)
      {
        do
        {
          *v12 = *v11;
          v12[1] = v11[1];
          v11 += v15;
          v12 += v14;
          --v13;
        }
        while (v13);
LABEL_23:
        *v12 = *v11;
        result = v11[1];
        v12[1] = result;
        return result;
      }
      v16 = 0;
      v17 = v11 + 1;
      v18 = v12 + 1;
      do
      {
        v19 = v18;
        v20 = v17;
        v21 = v8;
        do
        {
          *(v19 - 1) = *(v20 - 1);
          *v19 = *v20;
          v20 += v9;
          v19 += v10;
          --v21;
        }
        while (v21);
        *(v19 - 1) = *(v20 - 1);
        *v19 = *v20;
        v11 += v15;
        v12 += v14;
        ++v16;
        v17 += v15;
        v18 += v14;
      }
      while (v16 != v13);
    }
    for (; v8; --v8)
    {
      *v12 = *v11;
      v12[1] = v11[1];
      v11 += v9;
      v12 += v10;
    }
    goto LABEL_23;
  }
  return result;
}

uint64_t *sub_2242A0590(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;
  char *v8;
  BOOL v9;
  BOOL v10;
  uint64_t v12;

  v1 = *result;
  v2 = result[1];
  v3 = *(_DWORD *)(*result + 24);
  if (v3 == *(_DWORD *)(v2 + 24))
  {
    v4 = *(_DWORD *)(v1 + 8);
    if (v3 == *(_DWORD *)(v1 + 20) * v4)
    {
      v5 = *(_DWORD *)(v1 + 28);
      if (v5 != *(_DWORD *)(v2 + 28))
        return (uint64_t *)sub_2242A06C4((_DWORD *)*result, (char **)v2);
      v6 = *(_DWORD *)(v1 + 12);
      if (v5 != v6 * v3)
        return (uint64_t *)sub_2242A06C4((_DWORD *)*result, (char **)v2);
      v7 = v6 * v4 * *(_DWORD *)(v1 + 16);
      v8 = *(char **)v1;
      if ((_DWORD)v7)
        v9 = v8 == 0;
      else
        v9 = 0;
      if (v9)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
      }
      else if (!(_DWORD)v7)
      {
        return result;
      }
      return (uint64_t *)memmove(*(void **)v2, v8, 4 * v7);
    }
  }
  else
  {
    v4 = *(_DWORD *)(v1 + 8);
  }
  v12 = v4;
  if (v4)
    v10 = *(_DWORD *)(v1 + 12) == 0;
  else
    v10 = 1;
  if (!v10 && *(_DWORD *)(v1 + 16) != 0)
    return sub_2242A0818(&v12, (char **)v1, (char **)v2);
  return result;
}

_DWORD *sub_2242A06C4(_DWORD *result, char **a2)
{
  int v2;
  int v3;
  int v4;
  BOOL v5;
  uint64_t v7;
  char *v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v2 = result[2];
  v3 = result[3];
  v4 = result[4];
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = (v3 * v2);
    v8 = *(char **)result;
    v9 = *a2;
    v10 = v4 - 1;
    if (v4 == 1)
    {
LABEL_17:
      if (!(_DWORD)v7 || v8)
      {
        if (!(_DWORD)v7)
          return result;
      }
      else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_16;
      }
      return memmove(v9, v8, 4 * v7);
    }
    if ((_DWORD)v7)
    {
      v11 = 4 * result[7];
      v12 = 4 * *((unsigned int *)a2 + 7);
      while (v8
           || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
        result = memmove(v9, v8, 4 * v7);
        v8 += v11;
        v9 += v12;
        if (!--v10)
          goto LABEL_17;
      }
LABEL_16:
      abort();
    }
  }
  return result;
}

uint64_t *sub_2242A0818(uint64_t *result, char **a2, char **a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  int v9;
  char *v10;
  int v11;
  unsigned __int8 *v12;
  char *v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, const char *, uint64_t, void *, _QWORD);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t *v44;

  v44 = result;
  v3 = *((_DWORD *)a2 + 3);
  v4 = *((_DWORD *)a2 + 4);
  if (*((_DWORD *)a2 + 2))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v43 = *((unsigned int *)a2 + 6);
    v8 = *((unsigned int *)a3 + 6);
    v9 = v4 - 1;
    v5 = v9 == 0;
    v41 = v9;
    v10 = *a2;
    if (!v5)
    {
      if (v3 != 1)
      {
        v11 = 0;
        v12 = (unsigned __int8 *)&qword_255795680;
        v13 = *a3;
        v36 = *((unsigned int *)a2 + 7);
        v37 = *((unsigned int *)a3 + 7);
        v42 = v3 - 1;
        while (1)
        {
          v38 = v11;
          v14 = 0;
          v39 = v13;
          v40 = v10;
          v15 = v10;
          do
          {
            v16 = v15;
            v17 = *v44;
            if (v16 || !v17)
            {
              if (!v17)
                goto LABEL_19;
            }
            else
            {
              v18 = v8;
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C);
              v19 = atomic_load(v12);
              if ((v19 & 1) == 0 && __cxa_guard_acquire((__guard *)v12))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release((__guard *)v12);
              }
              v20 = v12;
              if (!byte_255795670 || byte_255795678)
              {
                v22 = qword_255795648;
                v23 = qword_255795650;
                while (v22 != v23)
                {
                  v25 = *(void (**)(uint64_t, const char *, uint64_t, void *, _QWORD))v22;
                  v24 = *(_QWORD *)(v22 + 8);
                  v22 += 16;
                  v25(v24, "ptr != nullptr || size == 0", 27, &unk_2245B2725, 0);
                }
              }
              v12 = v20;
              v21 = atomic_load(v20);
              if ((v21 & 1) == 0 && __cxa_guard_acquire((__guard *)v20))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release((__guard *)v20);
              }
              if (!byte_255795670)
                goto LABEL_52;
              v8 = v18;
              qword_255795660(*(_QWORD *)algn_255795668, "ptr != nullptr || size == 0", 27, &unk_2245B2725, 0);
              v7 = v42;
            }
            result = (uint64_t *)memmove(v13, v16, 4 * v17);
LABEL_19:
            v15 = &v16[4 * v43];
            v13 += 4 * v8;
            ++v14;
          }
          while (v14 != v7);
          v26 = *v44;
          if (!v16 && v26)
          {
            if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
            {
LABEL_14:
              result = (uint64_t *)memmove(v13, v15, 4 * v26);
              goto LABEL_15;
            }
LABEL_52:
            abort();
          }
          if (v26)
            goto LABEL_14;
LABEL_15:
          v10 = &v40[4 * v36];
          v13 = &v39[4 * v37];
          v11 = v38 + 1;
          if (v38 + 1 == v41)
            goto LABEL_40;
        }
      }
      v32 = 4 * *((unsigned int *)a2 + 7);
      v33 = 4 * *((unsigned int *)a3 + 7);
      v13 = *a3;
      while (1)
      {
        v34 = *v44;
        v35 = v10;
        if (!v10 && v34)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
          {
            goto LABEL_52;
          }
        }
        else if (!v34)
        {
          goto LABEL_58;
        }
        result = (uint64_t *)memmove(v13, v35, 4 * v34);
LABEL_58:
        v10 = &v35[v32];
        v13 += v33;
        if (!--v41)
          goto LABEL_40;
      }
    }
    v13 = *a3;
LABEL_40:
    v27 = v13;
    v28 = v10;
    if (v7)
    {
      v29 = 4 * v8;
      do
      {
        v30 = *v44;
        if (!v28 && v30)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
          {
            goto LABEL_52;
          }
        }
        else if (!v30)
        {
          goto LABEL_44;
        }
        result = (uint64_t *)memmove(v27, v28, 4 * v30);
LABEL_44:
        v28 += 4 * v43;
        v27 += v29;
        --v7;
      }
      while (v7);
    }
    v31 = *v44;
    if (!v28 && v31)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B2725, 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_52;
      }
      return (uint64_t *)memmove(v27, v28, 4 * v31);
    }
    if (v31)
      return (uint64_t *)memmove(v27, v28, 4 * v31);
  }
  return result;
}

void sub_2242A0C8C()
{
  JUMPOUT(0x227684CE8);
}

void sub_2242A0CA0(int a1@<W1>, uint64_t a2@<X8>)
{
  sub_2242A21B8(a2, a1);
}

void sub_2242A0CC8(uint64_t a1, int a2)
{
  __asm { BR              X12 }
}

uint64_t sub_2242A0D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)();
  int v11;
  _BYTE v12[24];
  unsigned int v13;
  __int128 v14;
  _QWORD v15[16];

  if (v3)
    v5 = a3 << 32;
  else
    v5 = 0;
  v15[0] = a3;
  v15[1] = v5 | ((_DWORD)a3 != 0);
  sub_22427E690((uint64_t)&v10, (uint64_t)v15);
  result = operator new();
  v7 = result;
  *(_QWORD *)result = off_24EC6F230;
  v8 = v13;
  *(_DWORD *)(result + 8) = v11;
  *(_BYTE *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    *(_OWORD *)(result + 48) = v14;
    *(_QWORD *)result = off_24EC711E0;
  }
  else
  {
    result = ((uint64_t (*)(_QWORD *, uint64_t, _BYTE *))off_24EC70130[v8])(v15, result + 16, v12);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v13;
    *(_OWORD *)(v7 + 48) = v14;
    *(_QWORD *)v7 = off_24EC711E0;
    v10 = off_24EC6F230;
    if ((_DWORD)v9 != -1)
      result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC70110[v9])(v15, v12);
  }
  *v4 = v7;
  return result;
}

void sub_2242A1D7C()
{
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)&unk_2245B2725, 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_22457406C);
  abort();
}

void sub_2242A1DB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2242A21B8(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2242A220C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  double v7;
  uint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void (**v23)();
  int v24;
  _BYTE v25[24];
  unsigned int v26;
  __int128 v27;
  char v28;
  unsigned int v29[6];
  void **v30;

  LODWORD(v5) = *a3;
  v6 = *a3 != 0;
  if (*a3 <= 0x20u)
    LODWORD(v5) = 32;
  if (a3[1])
    v5 = v5;
  else
    v5 = 32;
  *v3 = *(_QWORD *)a3;
  v3[1] = v6 | (v5 << 32);
  v28 = 0;
  v23 = off_24EC6F230;
  v24 = 0;
  sub_22426B5F8(0, 1, v29, (uint64_t)v25);
  if (v29[0] && v29[1])
  {
    *(_QWORD *)&v27 = sub_22426B9DC(0, (uint64_t)v25, v7);
    *((_QWORD *)&v27 + 1) = v8;
  }
  else
  {
    v27 = *(_OWORD *)v3;
  }
  if ((sub_22426CB18((uint64_t)&v23) & 1) == 0)
  {
    sub_22426CCF8((uint64_t)&v23, (_QWORD *)(v4 - 144));
    sub_22426CDEC((uint64_t)&v23, (uint64_t *)(v4 - 184));
    v3[3] = v4 - 184;
    v3[4] = &v28;
    sub_223316AD0(&v30);
    v9 = (uint64_t *)v3[15];
    if (v9)
    {
      v11 = *v9;
      v10 = (std::__shared_weak_count *)v9[1];
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v13 = __ldxr(p_shared_owners);
        while (__stxr(v13 + 1, p_shared_owners));
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      if (v11)
        sub_2242AEA98(v3[15]);
    }
    v3[14] = &off_24EC715B8;
    v15 = (std::__shared_weak_count *)v3[16];
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  v23 = (void (**)())off_24EC711E0;
  result = operator new();
  v19 = result;
  *(_QWORD *)result = off_24EC6F230;
  v20 = v26;
  *(_DWORD *)(result + 8) = v24;
  *(_BYTE *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = -1;
  if ((_DWORD)v20 == -1)
  {
    *(_OWORD *)(result + 48) = v27;
    *(_QWORD *)result = off_24EC711E0;
  }
  else
  {
    result = ((uint64_t (*)(uint64_t, uint64_t, _BYTE *))off_24EC70130[v20])(v4 - 144, result + 16, v25);
    *(_DWORD *)(v19 + 40) = v20;
    v21 = v26;
    *(_OWORD *)(v19 + 48) = v27;
    *(_QWORD *)v19 = off_24EC711E0;
    v23 = off_24EC6F230;
    if ((_DWORD)v21 != -1)
      result = ((uint64_t (*)(uint64_t, _BYTE *))off_24EC70110[v21])(v4 - 144, v25);
  }
  *v22 = v19;
  return result;
}

void sub_2242A5EF8()
{
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)&unk_2245B2725, 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_22457406C);
  abort();
}

void sub_2242A5F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v6;
  va_list va;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  sub_2242A89DC(va1);
  sub_22427D4E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A63B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22427D4E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A63C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22427A684((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A63D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22426BF74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A63EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2242762F8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A6400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22426EFA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A6414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2242779A8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A6428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_224278C60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A643C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_224272150((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A6450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22427BC94((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A6464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22426D75C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A6478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_224273548((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A648C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_224274AB0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A64AC(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2231E0B40();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 1uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_2242A65A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_22319BB48(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2242A65D4(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2231A26C8();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 1uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_2242A66D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_22319BB48(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2242A66FC(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2231E279C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 1uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_2242A67F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_22319BB48(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2242A6824(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2231EA464();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 1uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_2242A6920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_22319BB48(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2242A694C(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2231F29A8();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 1uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_2242A6A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_22319BB48(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2242A6A74(unsigned int *a1@<X0>, unsigned int a2@<W1>, uint64_t *a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  std::__shared_weak_count *v11;
  CFMutableDictionaryRef v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  void *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  __int128 v36;
  unsigned int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *value[2];

  v37 = a2;
  v39 = 0;
  v40 = 0;
  v38 = (uint64_t)&v39;
  sub_2245314F4(&v38, value);
  *(_OWORD *)a6 = *(_OWORD *)value;
  sub_22323DF84((uint64_t)&v38, v39);
  sub_2242A6FA8(a6, (const void *)*MEMORY[0x24BDC56B8], &v37);
  v38 = *a1;
  sub_2238A5104(a6, (const void *)*MEMORY[0x24BDC5708], &v38);
  value[0] = (void *)a1[1];
  sub_2238A5104(a6, (const void *)*MEMORY[0x24BDC5650], (uint64_t *)value);
  if (a4 > 1)
    goto LABEL_43;
  v39 = 0;
  v40 = 0;
  v38 = (uint64_t)&v39;
  sub_2245314F4(&v38, value);
  v36 = *(_OWORD *)value;
  sub_22323DF84((uint64_t)&v38, v39);
  sub_2244E16D8((uint64_t)&v36, a3);
  v12 = *(CFMutableDictionaryRef *)a6;
  v11 = *(std::__shared_weak_count **)(a6 + 8);
  if (!v11)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    if (!v12)
      goto LABEL_36;
  }
  else
  {
LABEL_7:
    if (!v12)
      goto LABEL_36;
  }
  sub_2231AEC20(&v38, (uint64_t)&v36);
  v16 = (void *)v38;
  v17 = (std::__shared_weak_count *)v39;
  if (v39)
  {
    v18 = (unint64_t *)(v39 + 8);
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    value[0] = v16;
    value[1] = v17;
    do
      v20 = __ldxr(v18);
    while (__stxr(v20 + 1, v18));
    do
      v21 = __ldaxr(v18);
    while (__stlxr(v21 - 1, v18));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  else
  {
    value[0] = (void *)v38;
    value[1] = 0;
  }
  v22 = (std::__shared_weak_count *)v39;
  if (v39)
  {
    v23 = (unint64_t *)(v39 + 8);
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v26 = value[0];
  v25 = (std::__shared_weak_count *)value[1];
  if (value[1])
  {
    v27 = (unint64_t *)((char *)value[1] + 8);
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
    do
      v29 = __ldaxr(v27);
    while (__stlxr(v29 - 1, v27));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
      if (!v26)
        goto LABEL_31;
      goto LABEL_30;
    }
  }
  if (v26)
LABEL_30:
    CFDictionarySetValue(*(CFMutableDictionaryRef *)a6, (const void *)*MEMORY[0x24BDC5668], value[0]);
LABEL_31:
  v30 = (std::__shared_weak_count *)value[1];
  if (value[1])
  {
    v31 = (unint64_t *)((char *)value[1] + 8);
    do
      v32 = __ldaxr(v31);
    while (__stlxr(v32 - 1, v31));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
LABEL_36:
  v33 = (std::__shared_weak_count *)*((_QWORD *)&v36 + 1);
  if (!*((_QWORD *)&v36 + 1))
    goto LABEL_40;
  v34 = (unint64_t *)(*((_QWORD *)&v36 + 1) + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_40:
    if (a4)
      goto LABEL_43;
    goto LABEL_41;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (!a4)
  {
LABEL_41:
    v38 = 0x4000;
    sub_2238A5104(a6, (const void *)*MEMORY[0x24BDC56C8], &v38);
  }
LABEL_43:
  if (*(_BYTE *)(a5 + 8))
    sub_2238A5104(a6, (const void *)*MEMORY[0x24BDC55D0], (uint64_t *)a5);
}

void sub_2242A6DAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1);
  _Unwind_Resume(a1);
}

void sub_2242A6DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v15;

  sub_223167354((uint64_t)&a15);
  sub_223167354((uint64_t)&a9);
  sub_223167354(v15);
  _Unwind_Resume(a1);
}

void sub_2242A6DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  uint64_t v13;

  sub_22323DF84((uint64_t)&a12, a13);
  sub_223167354(v13);
  _Unwind_Resume(a1);
}

void sub_2242A6E10(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1);
  _Unwind_Resume(a1);
}

void sub_2242A6E24(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1);
  _Unwind_Resume(a1);
}

void sub_2242A6E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_2242A6E50(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1);
  _Unwind_Resume(a1);
}

void sub_2242A6E64(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  std::__shared_weak_count *v4;
  CFDictionaryRef v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  const void *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  _BYTE v14[8];
  std::__shared_weak_count *v15;
  char v16;

  v5 = *(CFDictionaryRef *)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      if (v5)
        goto LABEL_7;
LABEL_18:
      *a2 = 0;
      a2[16] = 0;
      return;
    }
  }
  if (!v5)
    goto LABEL_18;
LABEL_7:
  v9 = (const void *)*MEMORY[0x24BDC5668];
  *(_QWORD *)&v13 = 0;
  if (!v9)
    goto LABEL_18;
  if (!CFDictionaryGetValueIfPresent(*(CFDictionaryRef *)a1, v9, (const void **)&v13))
    goto LABEL_18;
  sub_2232AD45C((const void *)v13, (uint64_t)v14);
  if (!v16)
    goto LABEL_18;
  sub_223677448(&v13, (uint64_t)v14);
  *(_OWORD *)a2 = v13;
  a2[16] = 1;
  if (v16)
  {
    v10 = v15;
    if (v15)
    {
      v11 = (unint64_t *)&v15->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
}

void sub_2242A6F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_223224234((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2242A6FA8(uint64_t a1, const void *a2, unsigned int *a3)
{
  std::__shared_weak_count *v6;
  CFMutableDictionaryRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL8 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  void *value;
  std::__shared_weak_count *v22;
  unsigned int v23;

  v7 = *(CFMutableDictionaryRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (v7)
        goto LABEL_7;
      return 0;
    }
  }
  if (!v7)
    return 0;
LABEL_7:
  v23 = *a3;
  sub_224527474(&v23, (CFNumberRef *)&value);
  v12 = value;
  v11 = v22;
  if (v22)
  {
    v13 = (unint64_t *)&v22->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      v16 = v12 != 0;
      if (!v12)
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  v16 = v12 != 0;
  if (v12)
LABEL_13:
    CFDictionarySetValue(*(CFMutableDictionaryRef *)a1, a2, value);
LABEL_14:
  v17 = v22;
  if (v22)
  {
    v18 = (unint64_t *)&v22->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return v16;
}

void sub_2242A7100(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

std::__shared_weak_count_vtbl **sub_2242A7114(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;

  if (a3 && cf)
    CFRetain(cf);
  v5 = (std::__shared_weak_count *)operator new();
  v6 = v5;
  v5->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71300;
  v5->__shared_weak_owners_ = 0;
  v5[1].__vftable = cf;
  *a1 = cf;
  a1[1] = (std::__shared_weak_count_vtbl *)v5;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v6);
  }
  return a1;
}

void sub_2242A71F4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242A7208()
{
  __break(1u);
}

void sub_2242A7234()
{
  __cxa_end_catch();
  JUMPOUT(0x2242A723CLL);
}

std::__shared_weak_count_vtbl **sub_2242A7248(std::__shared_weak_count_vtbl **a1, uint64_t a2, uint64_t a3)
{
  const __CFDictionary *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  CFDictionaryRef pixelBufferAttributes;
  std::__shared_weak_count *v14;
  const __CFDictionary *v15;
  std::__shared_weak_count *v16;
  CVPixelBufferPoolRef poolOut;

  sub_2231AEC20(&v15, a2);
  v5 = v15;
  sub_2231AEC20(&pixelBufferAttributes, a3);
  poolOut = 0;
  CVPixelBufferPoolCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], v5, pixelBufferAttributes, &poolOut);
  sub_2242A7114(a1, (std::__shared_weak_count_vtbl *)poolOut, 0);
  v6 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = v16;
  if (!v16)
    return a1;
  v10 = (unint64_t *)&v16->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_2242A7354(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2242A7370(CVPixelBufferPoolRef *a1@<X0>, uint64_t a2@<X8>)
{
  CVReturn v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  CVPixelBufferRef v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  char *v10;
  char *v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  CVPixelBufferRef v18;
  std::__shared_weak_count *v19;
  _BYTE v20[15];
  char v21;
  CVPixelBufferRef pixelBufferOut;

  pixelBufferOut = 0;
  v3 = CVPixelBufferPoolCreatePixelBuffer((CFAllocatorRef)*MEMORY[0x24BDBD240], *a1, &pixelBufferOut);
  if (v3)
  {
    sub_2242AAB30(&v18, v3, (uint64_t)"PixelBuffer creation from pool failed", 37);
    v4 = (int)v18;
    v5 = *(_QWORD *)v20;
    v6 = *(_QWORD *)&v20[7];
    *(_QWORD *)(a2 + 8) = v19;
    *(_QWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 23) = v6;
    LOBYTE(v5) = v21;
    *(_DWORD *)a2 = v4;
    *(_WORD *)(a2 + 31) = v5;
  }
  else
  {
    v7 = pixelBufferOut;
    if (!pixelBufferOut)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferPoolRef.cpp", 75, (uint64_t)"cv_pixel_buffer", 15, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = pixelBufferOut;
    }
    v18 = v7;
    v8 = (std::__shared_weak_count *)operator new();
    v8->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71350;
    v8->__shared_weak_owners_ = 0;
    v8[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
    v19 = v8;
    v10 = (char *)operator new(0xA0uLL);
    v11 = v10;
    *((_QWORD *)v10 + 1) = 0;
    *((_QWORD *)v10 + 2) = 0;
    *(_QWORD *)v10 = &off_24EC71430;
    v12 = v10 + 24;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    *((_QWORD *)v10 + 3) = v7;
    *((_QWORD *)v10 + 4) = v8;
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *((_DWORD *)v10 + 10) = 0;
    *((_QWORD *)v10 + 6) = 0;
    *((_QWORD *)v10 + 7) = 0;
    *((_QWORD *)v10 + 8) = 850045863;
    *(_OWORD *)(v10 + 72) = 0u;
    *(_OWORD *)(v10 + 88) = 0u;
    *(_OWORD *)(v10 + 104) = 0u;
    *((_QWORD *)v10 + 15) = 0;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
    *((_OWORD *)v11 + 8) = 0u;
    *((_OWORD *)v11 + 9) = 0u;
    *(_QWORD *)a2 = &off_24EC715B8;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v11;
    *(_BYTE *)(a2 + 32) = 1;
    if (v19)
    {
      v16 = &v19->__shared_owners_;
      do
        v17 = __ldaxr((unint64_t *)v16);
      while (__stlxr(v17 - 1, (unint64_t *)v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
  }
}

void sub_2242A758C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A75A0(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242A75B8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2242A75D0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2242A75F4(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_2242A7614(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP19__CVPixelBufferPoolEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP19__CVPixelBufferPoolEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP19__CVPixelBufferPoolEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP19__CVPixelBufferPoolEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_2242A7688(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2242A76AC(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_2242A76CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

size_t sub_2242A773C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  size_t result;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 272, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_23;
  }
LABEL_9:
  if ((sub_2242A78F0(a1) != 1278226488 || sub_2242A7A28(a1))
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 273, (uint64_t)"F == Format() && !IsPlanar()", 28, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_23;
  }
  v10 = sub_2242A8318(a1, 0);
  v11 = sub_2242A9B5C(a1);
  v12 = sub_2242A9C94(a1);
  result = sub_2242A9DCC(a1);
  v14 = v11;
  v15 = v11 | ((unint64_t)v12 << 32);
  v16 = !v12 || v14 == 0;
  v17 = v16 ? 0 : v15;
  *a2 = v10;
  a2[1] = v17;
  a2[2] = (result << 32) | 1;
  if (HIDWORD(v17) * (_DWORD)result == -1)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
LABEL_23:
      abort();
  }
  return result;
}

uint64_t sub_2242A78F0(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 233, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetPixelFormatType(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetPixelFormatType(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetPixelFormatType(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetPixelFormatType(v9);
}

BOOL sub_2242A7A28(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 176, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = *(__CVBuffer **)v8;
    v10 = *(std::__shared_weak_count **)(v8 + 8);
    if (v10)
    {
      v11 = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
      do
        v13 = __ldaxr(v11);
      while (__stlxr(v13 - 1, v11));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  else
  {
    v9 = 0;
  }
  return CVPixelBufferIsPlanar(v9) != 0;
}

size_t sub_2242A7B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  size_t result;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  uint64_t v18;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 272, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_23;
  }
LABEL_9:
  if ((sub_2242A78F0(a1) != 1111970369 || sub_2242A7A28(a1))
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 273, (uint64_t)"F == Format() && !IsPlanar()", 28, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_23;
  }
  v10 = sub_2242A8318(a1, 0);
  v11 = sub_2242A9B5C(a1);
  v12 = sub_2242A9C94(a1);
  result = sub_2242A9DCC(a1);
  v14 = v11;
  v15 = v11 | ((unint64_t)v12 << 32);
  v16 = !v12 || v14 == 0;
  v17 = v16 ? 0 : v15;
  HIDWORD(v18) = v17;
  LODWORD(v18) = 4;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v18;
  *(_DWORD *)(a2 + 16) = HIDWORD(v17);
  *(_QWORD *)(a2 + 20) = 0x400000001;
  *(_DWORD *)(a2 + 28) = result;
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = (result << 32) | 4;
  if (HIDWORD(v17) * (_DWORD)result == -1)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
LABEL_23:
      abort();
  }
  return result;
}

size_t sub_2242A7D74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  size_t result;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 272, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_23;
  }
LABEL_9:
  if ((sub_2242A78F0(a1) != 1278226534 || sub_2242A7A28(a1))
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 273, (uint64_t)"F == Format() && !IsPlanar()", 28, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_23;
  }
  v10 = sub_2242A8318(a1, 0);
  v11 = sub_2242A9B5C(a1);
  v12 = sub_2242A9C94(a1);
  result = sub_2242A9DCC(a1);
  v14 = v11;
  v15 = v11 | ((unint64_t)v12 << 32);
  v16 = !v12 || v14 == 0;
  v17 = v16 ? 0 : v15;
  *a2 = v10;
  a2[1] = v17;
  a2[2] = ((unint64_t)(result >> 2) << 32) | 1;
  if (HIDWORD(v17) * (result >> 2) == -1)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
LABEL_23:
      abort();
  }
  return result;
}

size_t sub_2242A7F2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  size_t result;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 272, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_23;
  }
LABEL_9:
  if ((sub_2242A78F0(a1) != 1717855600 || sub_2242A7A28(a1))
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 273, (uint64_t)"F == Format() && !IsPlanar()", 28, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_23;
  }
  v10 = sub_2242A8318(a1, 0);
  v11 = sub_2242A9B5C(a1);
  v12 = sub_2242A9C94(a1);
  result = sub_2242A9DCC(a1);
  v14 = v11;
  v15 = v11 | ((unint64_t)v12 << 32);
  v16 = !v12 || v14 == 0;
  v17 = v16 ? 0 : v15;
  *a2 = v10;
  a2[1] = v17;
  a2[2] = ((unint64_t)(result >> 2) << 32) | 1;
  if (HIDWORD(v17) * (result >> 2) == -1)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
LABEL_23:
      abort();
  }
  return result;
}

size_t sub_2242A80E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  size_t result;
  size_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 272, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_23;
  }
LABEL_9:
  if ((sub_2242A78F0(a1) != 1380410945 || sub_2242A7A28(a1))
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 273, (uint64_t)"F == Format() && !IsPlanar()", 28, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_23;
  }
  v10 = sub_2242A8318(a1, 0);
  v11 = sub_2242A9B5C(a1);
  v12 = sub_2242A9C94(a1);
  result = sub_2242A9DCC(a1);
  v14 = result >> 2;
  v15 = v11;
  v16 = v11 | ((unint64_t)v12 << 32);
  v17 = !v12 || v15 == 0;
  v18 = v17 ? 0 : v16;
  HIDWORD(v19) = v18;
  LODWORD(v19) = 4;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v19;
  *(_DWORD *)(a2 + 16) = HIDWORD(v18);
  *(_QWORD *)(a2 + 20) = 0x400000001;
  *(_DWORD *)(a2 + 28) = v14;
  *(_QWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = ((unint64_t)(result >> 2) << 32) | 4;
  if (HIDWORD(v18) * (_DWORD)v14 == -1)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
LABEL_23:
      abort();
  }
  return result;
}

uint64_t sub_2242A8318(uint64_t a1, unsigned int a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t **v16;
  uint64_t *v17;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 250, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_18;
  }
LABEL_9:
  v15 = *(_QWORD *)(a1 + 8);
  v10 = v15;
  v11 = atomic_load((unint64_t *)(v15 + 104));
  if (v11 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v15 + 104), &v16, (void (__cdecl *)(void *))sub_2242ADA5C);
  }
  if (a2 >= (unint64_t)((uint64_t)(*(_QWORD *)(v10 + 120) - *(_QWORD *)(v10 + 112)) >> 3)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 251, (uint64_t)"idx < p_->GetCachedBaseAddress().size()", 39, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
LABEL_18:
    abort();
  }
  v12 = *(_QWORD *)(a1 + 8);
  v15 = v12;
  v13 = atomic_load((unint64_t *)(v12 + 104));
  if (v13 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v12 + 104), &v16, (void (__cdecl *)(void *))sub_2242ADA5C);
  }
  return *(_QWORD *)(*(_QWORD *)(v12 + 112) + 8 * a2);
}

_QWORD *sub_2242A849C(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_24EC715B8;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_24EC71528;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_2242AE7CC(a1[1]);
  }
  return a1;
}

void sub_2242A8560(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *v1 = v2;
  v4 = (std::__shared_weak_count *)v1[2];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2242A85A8(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_24EC715B8;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_24EC71528;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_2242AE7CC(a1[1]);
  }
  return a1;
}

void sub_2242A866C(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *v1 = v2;
  v4 = (std::__shared_weak_count *)v1[2];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2242A86B4(_QWORD *a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = (uint64_t *)a1[1];
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
        if (!v4)
          goto LABEL_9;
        goto LABEL_8;
      }
    }
    if (v4)
LABEL_8:
      sub_2242AE9A8(a1[1]);
  }
LABEL_9:
  *a1 = &off_24EC715B8;
  v8 = (std::__shared_weak_count *)a1[2];
  if (!v8)
    return a1;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    return a1;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_2242A87A0(_QWORD *a1)
{
  sub_2242A86B4(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242A87C4(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_24EC715B8;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_24EC71548;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_2242AE8BC(a1[1]);
  }
  return a1;
}

void sub_2242A8888(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *v1 = v2;
  v4 = (std::__shared_weak_count *)v1[2];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2242A88D0(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_24EC715B8;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_24EC71548;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_2242AE8BC(a1[1]);
  }
  return a1;
}

void sub_2242A8994(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *v1 = v2;
  v4 = (std::__shared_weak_count *)v1[2];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2242A89DC(_QWORD *a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = (uint64_t *)a1[1];
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
        if (!v4)
          goto LABEL_9;
        goto LABEL_8;
      }
    }
    if (v4)
LABEL_8:
      sub_2242AEA98(a1[1]);
  }
LABEL_9:
  *a1 = &off_24EC715B8;
  v8 = (std::__shared_weak_count *)a1[2];
  if (!v8)
    return a1;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    return a1;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_2242A8AC8(_QWORD *a1)
{
  sub_2242A89DC(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242A8AEC(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24EC71568;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_2242A8B4C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242A8B64(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *sub_2242A8B78(_QWORD *a1, std::__shared_weak_count_vtbl *cf, int a3, int a4)
{
  std::__shared_weak_count *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v28;

  if (a3 && cf)
    CFRetain(cf);
  v7 = (std::__shared_weak_count *)operator new();
  v8 = v7;
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71350;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = cf;
  v28 = v7;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v8);
  }
  if (v28)
  {
    v12 = (unint64_t *)&v28->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *a1 = &off_24EC715B8;
  v14 = (char *)operator new(0xA0uLL);
  v15 = v14;
  *((_QWORD *)v14 + 1) = 0;
  *((_QWORD *)v14 + 2) = 0;
  *(_QWORD *)v14 = &off_24EC71430;
  v16 = v14 + 24;
  if (v28)
  {
    v17 = (unint64_t *)&v28->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    *((_QWORD *)v14 + 3) = cf;
    *((_QWORD *)v14 + 4) = v28;
    do
      v19 = __ldxr(v17);
    while (__stxr(v19 + 1, v17));
  }
  else
  {
    *((_QWORD *)v14 + 3) = cf;
    *((_QWORD *)v14 + 4) = 0;
  }
  *((_DWORD *)v14 + 10) = a4;
  *((_QWORD *)v14 + 6) = a4 == 1;
  *((_QWORD *)v14 + 7) = a4 == 2;
  *((_QWORD *)v14 + 8) = 850045863;
  v20 = 0uLL;
  *(_OWORD *)(v14 + 72) = 0u;
  *(_OWORD *)(v14 + 88) = 0u;
  *(_OWORD *)(v14 + 104) = 0u;
  *((_QWORD *)v14 + 15) = 0;
  if (v28)
  {
    v21 = (unint64_t *)&v28->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
      v20 = 0uLL;
    }
  }
  *((_OWORD *)v15 + 8) = v20;
  *((_OWORD *)v15 + 9) = v20;
  a1[1] = v16;
  a1[2] = v15;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v28)
  {
    v25 = (unint64_t *)&v28->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  return a1;
}

void sub_2242A8DC0(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242A8DD4()
{
  __break(1u);
}

void sub_2242A8E00()
{
  __cxa_end_catch();
  JUMPOUT(0x2242A8E08);
}

void sub_2242A8E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a11);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2242A8E30(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t *a4, uint64_t a5)
{
  std::runtime_error *exception;
  int *v8;
  std::string v9;
  uint64_t (**v10)(_QWORD);
  __int128 v11;
  char v12;

  sub_2242AAD08(a2, a3, a4, a5, (uint64_t)&v10);
  if (!v12)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v8 = (int *)sub_2242A9770((uint64_t)&v10);
    sub_2242AC48C("Failed to create CVPixelBuffer: ", v8);
    std::runtime_error::runtime_error(exception, &v9);
    __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *(_QWORD *)a1 = &off_24EC715B8;
  *(_OWORD *)(a1 + 8) = v11;
  v11 = 0uLL;
  return (*v10)(&v10);
}

void sub_2242A8EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
    {
LABEL_6:
      sub_2232B6080((uint64_t)&a15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

_QWORD *sub_2242A8F3C(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24EC715B8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2242A8FB0(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t *a4, unsigned int a5)
{
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _BYTE v13[16];
  __int128 v14;
  _BYTE v15[24];

  v13[0] = 0;
  v13[8] = 0;
  sub_2242A6A74(a2, a3, a4, a5, (uint64_t)v13, (uint64_t)v15);
  v14 = *(_OWORD *)v15;
  sub_2242A8E30((uint64_t)v15, a2, a3, a4, (uint64_t)&v14);
  *(_QWORD *)a1 = &off_24EC715B8;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&v15[8];
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (!*((_QWORD *)&v14 + 1))
    return a1;
  v10 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_2242A9098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A90AC(unsigned int *a1@<X0>, OSType a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void *p_p;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  CVReturn v18;
  CVPixelBufferRef v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  char *v22;
  char *v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  CVPixelBufferRef v35;
  void *__p;
  uint64_t v37;
  unsigned __int8 v38;
  int v39;
  uint64_t v40;
  __int128 v41;
  OSType pixelFormatType;
  char v43;
  _DWORD v44[6];
  int v45;
  CVPixelBufferRef v46;
  const char *v47;
  _DWORD *v48;
  const char *v49;
  const char *v50;
  CVPixelBufferRef *v51;

  pixelFormatType = a2;
  if (sub_22429D65C(a2) >= 2)
  {
    v45 = 0;
    sub_223C8F630(v44, "MakeViewPixelBuffer");
    v46 = (CVPixelBufferRef)v44;
    v47 = " cannot be used to create a planar view CVPixelBufferRef, but given format is planar ";
    v48 = v44;
    v49 = " cannot be used to create a planar view CVPixelBufferRef, but given format is planar ";
    v50 = " cannot be used to create a planar view CVPixelBufferRef, but given format is planar ";
    if (v45 == -1)
      sub_22316DD70();
    v51 = &v46;
    ((void (*)(CVPixelBufferRef **, _DWORD *))off_24EC714E8[v45])(&v51, v44);
    sub_223C8BD48((uint64_t)&v46, (uint64_t)v44, &pixelFormatType);
    if (v45 == -1)
      sub_22316DD70();
    v46 = (CVPixelBufferRef)&v51;
    ((void (*)(void **__return_ptr, CVPixelBufferRef *, _DWORD *))off_24EC71408[v45])(&__p, &v46, v44);
    if (v45 != -1)
      ((void (*)(CVPixelBufferRef *, _DWORD *))off_24EC713D8[v45])(&v46, v44);
    if ((v38 & 0x80u) == 0)
      p_p = &__p;
    else
      p_p = __p;
    if ((v38 & 0x80u) == 0)
      v13 = v38;
    else
      v13 = v37;
    sub_2242AAB30(&v39, -6661, (uint64_t)p_p, v13);
LABEL_51:
    v33 = v39;
    v34 = v41;
    *(_QWORD *)(a6 + 8) = v40;
    *(_QWORD *)(a6 + 16) = v34;
    *(_QWORD *)(a6 + 23) = *(_QWORD *)((char *)&v41 + 7);
    LOBYTE(v34) = HIBYTE(v41);
    v41 = 0uLL;
    v40 = 0;
    *(_DWORD *)a6 = v33;
    *(_WORD *)(a6 + 31) = v34;
    if ((char)v38 < 0)
      operator delete(__p);
    return;
  }
  v35 = 0;
  if ((a4 & 0xFF00000000) == 0)
  {
    v16 = *a1;
    LODWORD(a4) = sub_2242AB408(a2) * v16;
    v17 = sub_2242AD6AC(a2) - 1;
    if (v17 > 2)
    {
      if (!*(_BYTE *)(a5 + 32))
        goto LABEL_23;
    }
    else
    {
      LODWORD(a4) = a4 * dword_2246A6B1C[(char)v17];
      if (!*(_BYTE *)(a5 + 32))
        goto LABEL_23;
    }
LABEL_15:
    v14 = (_QWORD *)operator new();
    v15 = *(_QWORD *)(a5 + 24);
    if (v15)
    {
      if (v15 == a5)
      {
        v14[3] = v14;
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a5 + 24))(a5, v14);
LABEL_38:
        v18 = CVPixelBufferCreateWithBytes((CFAllocatorRef)*MEMORY[0x24BDBD240], *a1, a1[1], pixelFormatType, a3, a4, (CVPixelBufferReleaseBytesCallback)sub_2242AD91C, v14, 0, &v35);
        if (v18)
          goto LABEL_39;
        goto LABEL_24;
      }
      v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 16))(v15);
    }
    v14[3] = v15;
    goto LABEL_38;
  }
  if (*(_BYTE *)(a5 + 32))
    goto LABEL_15;
LABEL_23:
  v18 = CVPixelBufferCreateWithBytes((CFAllocatorRef)*MEMORY[0x24BDBD240], *a1, a1[1], a2, a3, a4, 0, 0, 0, &v35);
  if (v18)
  {
LABEL_39:
    v45 = 0;
    sub_223C8F630(v44, "MakeViewPixelBuffer");
    v46 = (CVPixelBufferRef)v44;
    v47 = " for format ";
    v48 = v44;
    v49 = " for format ";
    v50 = " for format ";
    if (v45 == -1)
      sub_22316DD70();
    v51 = &v46;
    ((void (*)(CVPixelBufferRef **, _DWORD *))off_24EC714A0[v45])(&v51, v44);
    sub_223C8BD48((uint64_t)&v43, (uint64_t)v44, &pixelFormatType);
    v46 = (CVPixelBufferRef)v44;
    v47 = " and size ";
    v48 = v44;
    v49 = " and size ";
    v50 = " and size ";
    if (v45 == -1)
      sub_22316DD70();
    v51 = &v46;
    ((void (*)(CVPixelBufferRef **, _DWORD *))off_24EC714B8[v45])(&v51, v44);
    sub_2231BFC9C((uint64_t)&v46, (uint64_t)v44, a1);
    if (v45 == -1)
      sub_22316DD70();
    v46 = (CVPixelBufferRef)&v51;
    ((void (*)(void **__return_ptr, CVPixelBufferRef *, _DWORD *))off_24EC71408[v45])(&__p, &v46, v44);
    if (v45 != -1)
      ((void (*)(CVPixelBufferRef *, _DWORD *))off_24EC713D8[v45])(&v46, v44);
    if ((v38 & 0x80u) == 0)
      v31 = &__p;
    else
      v31 = __p;
    if ((v38 & 0x80u) == 0)
      v32 = v38;
    else
      v32 = v37;
    sub_2242AAB30(&v39, v18, (uint64_t)v31, v32);
    goto LABEL_51;
  }
LABEL_24:
  v19 = v35;
  v46 = v35;
  v20 = (std::__shared_weak_count *)operator new();
  v20->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v20->__shared_owners_;
  v20->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71350;
  v20->__shared_weak_owners_ = 0;
  v20[1].__vftable = (std::__shared_weak_count_vtbl *)v19;
  v47 = (const char *)v20;
  v22 = (char *)operator new(0xA0uLL);
  v23 = v22;
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *(_QWORD *)v22 = &off_24EC71430;
  v24 = v22 + 24;
  do
    v25 = __ldxr(p_shared_owners);
  while (__stxr(v25 + 1, p_shared_owners));
  *((_QWORD *)v22 + 3) = v19;
  *((_QWORD *)v22 + 4) = v20;
  do
    v26 = __ldxr(p_shared_owners);
  while (__stxr(v26 + 1, p_shared_owners));
  *((_DWORD *)v22 + 10) = 0;
  *((_QWORD *)v22 + 6) = 0;
  *((_QWORD *)v22 + 7) = 0;
  *((_QWORD *)v22 + 8) = 850045863;
  *(_OWORD *)(v22 + 72) = 0u;
  *(_OWORD *)(v22 + 88) = 0u;
  *(_OWORD *)(v22 + 104) = 0u;
  *((_QWORD *)v22 + 15) = 0;
  do
    v27 = __ldaxr(p_shared_owners);
  while (__stlxr(v27 - 1, p_shared_owners));
  if (!v27)
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
  *((_OWORD *)v23 + 8) = 0u;
  *((_OWORD *)v23 + 9) = 0u;
  *(_QWORD *)a6 = &off_24EC715B8;
  *(_QWORD *)(a6 + 8) = v24;
  *(_QWORD *)(a6 + 16) = v23;
  *(_BYTE *)(a6 + 32) = 1;
  v28 = (std::__shared_weak_count *)v47;
  if (v47)
  {
    v29 = (unint64_t *)(v47 + 8);
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_2242A9620(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_2242A9634(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242A964C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2242A96E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A96F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A970C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A9720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A9734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A9748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242A975C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242A9770(uint64_t result)
{
  _QWORD *exception;

  if (*(_BYTE *)(result + 32))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC1FCC0;
    __cxa_throw(exception, (struct type_info *)&unk_24EC1FC98, (void (*)(void *))std::exception::~exception);
  }
  return result;
}

void sub_2242A97B0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24EC715B8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

unint64_t sub_2242A9824(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int Width;
  uint64_t v15;
  __CVBuffer *v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 187, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = *(__CVBuffer **)v8;
    v10 = *(std::__shared_weak_count **)(v8 + 8);
    if (v10)
    {
      v11 = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
      do
        v13 = __ldaxr(v11);
      while (__stlxr(v13 - 1, v11));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    Width = CVPixelBufferGetWidth(v9);
    v15 = *(_QWORD *)(a1 + 8);
    if (v15)
      goto LABEL_17;
LABEL_24:
    v16 = 0;
    return Width | ((unint64_t)CVPixelBufferGetHeight(v16) << 32);
  }
  Width = CVPixelBufferGetWidth(0);
  v15 = *(_QWORD *)(a1 + 8);
  if (!v15)
    goto LABEL_24;
LABEL_17:
  v16 = *(__CVBuffer **)v15;
  v17 = *(std::__shared_weak_count **)(v15 + 8);
  if (v17)
  {
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return Width | ((unint64_t)CVPixelBufferGetHeight(v16) << 32);
}

unint64_t sub_2242A99B8(uint64_t a1, size_t planeIndex)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int WidthOfPlane;
  uint64_t v17;
  __CVBuffer *v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 197, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = *(__CVBuffer **)v10;
    v12 = *(std::__shared_weak_count **)(v10 + 8);
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    WidthOfPlane = CVPixelBufferGetWidthOfPlane(v11, planeIndex);
    v17 = *(_QWORD *)(a1 + 8);
    if (v17)
      goto LABEL_17;
LABEL_24:
    v18 = 0;
    return WidthOfPlane | ((unint64_t)CVPixelBufferGetHeightOfPlane(v18, planeIndex) << 32);
  }
  WidthOfPlane = CVPixelBufferGetWidthOfPlane(0, planeIndex);
  v17 = *(_QWORD *)(a1 + 8);
  if (!v17)
    goto LABEL_24;
LABEL_17:
  v18 = *(__CVBuffer **)v17;
  v19 = *(std::__shared_weak_count **)(v17 + 8);
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  return WidthOfPlane | ((unint64_t)CVPixelBufferGetHeightOfPlane(v18, planeIndex) << 32);
}

size_t sub_2242A9B5C(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 203, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetWidth(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetWidth(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetWidth(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetWidth(v9);
}

size_t sub_2242A9C94(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 213, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetHeight(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetHeight(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetHeight(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetHeight(v9);
}

size_t sub_2242A9DCC(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 223, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetBytesPerRow(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetBytesPerRow(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetBytesPerRow(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetBytesPerRow(v9);
}

size_t sub_2242A9F04(uint64_t a1, size_t planeIndex)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 228, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  if (!v10)
    return CVPixelBufferGetBytesPerRowOfPlane(0, planeIndex);
  v11 = *(__CVBuffer **)v10;
  v12 = *(std::__shared_weak_count **)(v10 + 8);
  if (!v12)
    return CVPixelBufferGetBytesPerRowOfPlane(v11, planeIndex);
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
    return CVPixelBufferGetBytesPerRowOfPlane(v11, planeIndex);
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return CVPixelBufferGetBytesPerRowOfPlane(v11, planeIndex);
}

uint64_t sub_2242AA04C(uint64_t a1, unsigned int a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t **v16;
  uint64_t *v17;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 244, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_18;
  }
LABEL_9:
  v15 = *(_QWORD *)(a1 + 8);
  v10 = v15;
  v11 = atomic_load((unint64_t *)(v15 + 104));
  if (v11 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v15 + 104), &v16, (void (__cdecl *)(void *))sub_2242ADA5C);
  }
  if (a2 >= (unint64_t)((uint64_t)(*(_QWORD *)(v10 + 120) - *(_QWORD *)(v10 + 112)) >> 3)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 245, (uint64_t)"idx < p_->GetCachedBaseAddress().size()", 39, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
LABEL_18:
    abort();
  }
  v12 = *(_QWORD *)(a1 + 8);
  v15 = v12;
  v13 = atomic_load((unint64_t *)(v12 + 104));
  if (v13 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v12 + 104), &v16, (void (__cdecl *)(void *))sub_2242ADA5C);
  }
  return *(_QWORD *)(*(_QWORD *)(v12 + 112) + 8 * a2);
}

_QWORD *sub_2242AA1D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *IOSurface;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 256, (uint64_t)"IsValid()", 9, (uint64_t)&unk_2245B31B5, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = *(__CVBuffer **)v10;
    v12 = *(std::__shared_weak_count **)(v10 + 8);
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  else
  {
    v11 = 0;
  }
  IOSurface = (std::__shared_weak_count_vtbl *)CVPixelBufferGetIOSurface(v11);
  return sub_2244E0D64(a2, IOSurface, 1, 0);
}

uint64_t sub_2242AA2FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  const void *v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  uint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  const void *v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;

  v3 = *(uint64_t **)(a1 + 8);
  if (!v3)
    goto LABEL_34;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      goto LABEL_25;
  }
  else
  {
LABEL_7:
    if (!v6)
      goto LABEL_25;
  }
  v10 = *(uint64_t **)(a2 + 8);
  if (!v10)
    goto LABEL_25;
  v12 = *v10;
  v11 = (std::__shared_weak_count *)v10[1];
  if (v11)
  {
    v13 = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      if (v12)
        goto LABEL_15;
LABEL_25:
      v22 = *(uint64_t **)(a1 + 8);
      if (v22)
      {
        v24 = *v22;
        v23 = (std::__shared_weak_count *)v22[1];
        if (!v23)
          goto LABEL_31;
        v25 = (unint64_t *)&v23->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
          if (v24)
            return 0;
        }
        else
        {
LABEL_31:
          if (v24)
            return 0;
        }
      }
LABEL_34:
      v29 = *(uint64_t **)(a2 + 8);
      if (!v29)
        return 1;
      v31 = *v29;
      v30 = (std::__shared_weak_count *)v29[1];
      if (!v30)
        return v31 == 0;
      v32 = (unint64_t *)&v30->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (v34)
        return v31 == 0;
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
      return v31 == 0;
    }
  }
  if (!v12)
    goto LABEL_25;
LABEL_15:
  v16 = *(_QWORD *)(a1 + 8);
  if (v16)
  {
    v17 = *(const void **)v16;
    v18 = *(std::__shared_weak_count **)(v16 + 8);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
  }
  else
  {
    v17 = 0;
  }
  v35 = *(_QWORD *)(a2 + 8);
  if (v35)
  {
    v36 = *(const void **)v35;
    v37 = *(std::__shared_weak_count **)(v35 + 8);
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
      do
        v40 = __ldaxr(v38);
      while (__stlxr(v40 - 1, v38));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
  }
  else
  {
    v36 = 0;
  }
  return CFEqual(v17, v36) != 0;
}

BOOL sub_2242AA5A8(uint64_t a1, CFTypeRef cf2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  const void **v11;
  const void *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  const void *v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;

  v3 = *(uint64_t **)(a1 + 8);
  if (!v3)
  {
    v17 = 0;
    v10 = cf2 != 0;
    return (v17 == 0) & ~v10;
  }
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v10 = cf2 != 0;
    v11 = *(const void ***)(a1 + 8);
    if (!cf2)
    {
LABEL_18:
      if (v11)
      {
        v17 = *v11;
        v18 = (std::__shared_weak_count *)v11[1];
        if (v18)
        {
          v19 = (unint64_t *)&v18->__shared_owners_;
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
          do
            v21 = __ldaxr(v19);
          while (__stlxr(v21 - 1, v19));
          if (!v21)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
      }
      else
      {
        v17 = 0;
      }
      return (v17 == 0) & ~v10;
    }
  }
  else
  {
LABEL_7:
    v10 = cf2 != 0;
    v11 = *(const void ***)(a1 + 8);
    if (!cf2)
      goto LABEL_18;
  }
  if (!v6)
    goto LABEL_18;
  if (v11)
  {
    v12 = *v11;
    v13 = (std::__shared_weak_count *)v11[1];
    if (v13)
    {
      v14 = (unint64_t *)&v13->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
  }
  else
  {
    v12 = 0;
  }
  return CFEqual(v12, cf2) != 0;
}

_QWORD *sub_2242AA730(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  size_t v11;
  void **v12;
  unint64_t v13;
  unint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  void *__p[2];
  unsigned __int8 v28;
  _DWORD v29[6];
  int v30;
  void *__dst[2];
  unint64_t v32;
  _QWORD v33[5];
  _QWORD *v34;

  v3 = *(uint64_t **)(a2 + 8);
  if (!v3)
  {
    v30 = 0;
    goto LABEL_12;
  }
  v4 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
LABEL_7:
    v30 = 0;
    if (v4)
      goto LABEL_8;
LABEL_12:
    sub_2231A0D14(v29, "nullptr");
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  v30 = 0;
  if (!v4)
    goto LABEL_12;
LABEL_8:
  v9 = operator new();
  *(_QWORD *)(v9 + 272) = 0;
  *(_OWORD *)(v9 + 240) = 0u;
  *(_OWORD *)(v9 + 256) = 0u;
  *(_OWORD *)(v9 + 208) = 0u;
  *(_OWORD *)(v9 + 224) = 0u;
  *(_OWORD *)(v9 + 176) = 0u;
  *(_OWORD *)(v9 + 192) = 0u;
  *(_OWORD *)(v9 + 144) = 0u;
  *(_OWORD *)(v9 + 160) = 0u;
  *(_OWORD *)(v9 + 112) = 0u;
  *(_OWORD *)(v9 + 128) = 0u;
  *(_OWORD *)(v9 + 80) = 0u;
  *(_OWORD *)(v9 + 96) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_OWORD *)(v9 + 64) = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)v9 = 0u;
  sub_223195210(v9);
  v33[0] = v9;
  std::ostream::operator<<();
  v10 = *(_DWORD *)(v9 + 120);
  if ((v10 & 0x10) != 0)
  {
    v13 = *(_QWORD *)(v9 + 112);
    v14 = *(_QWORD *)(v9 + 72);
    if (v13 < v14)
    {
      *(_QWORD *)(v9 + 112) = v14;
      v13 = v14;
    }
    v15 = *(const void **)(v9 + 64);
    v11 = v13 - (_QWORD)v15;
    if (v13 - (unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_45;
  }
  else
  {
    if ((v10 & 8) == 0)
    {
      v11 = 0;
      HIBYTE(v32) = 0;
      v12 = __dst;
      goto LABEL_25;
    }
    v26 = *(_QWORD *)(v9 + 56);
    v15 = *(const void **)(v9 + 40);
    v11 = v26 - (_QWORD)v15;
    if ((unint64_t)(v26 - (_QWORD)v15) >= 0x7FFFFFFFFFFFFFF8)
LABEL_45:
      sub_22316DBC0();
  }
  if (v11 >= 0x17)
  {
    v16 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17)
      v16 = v11 | 7;
    v17 = v16 + 1;
    v12 = (void **)operator new(v16 + 1);
    __dst[1] = (void *)v11;
    v32 = v17 | 0x8000000000000000;
    __dst[0] = v12;
  }
  else
  {
    HIBYTE(v32) = v11;
    v12 = __dst;
    if (!v11)
      goto LABEL_25;
  }
  memmove(v12, v15, v11);
LABEL_25:
  *((_BYTE *)v12 + v11) = 0;
  v18 = v33[0];
  if (v33[0])
  {
    v19 = MEMORY[0x24BEDB7F0];
    v20 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v33[0] = *MEMORY[0x24BEDB7F0];
    v21 = *(_QWORD *)(v19 + 72);
    *(_QWORD *)(v18 + *(_QWORD *)(v20 - 24)) = *(_QWORD *)(v19 + 64);
    *(_QWORD *)(v18 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v18 + 16) = v21;
    if (*(char *)(v18 + 111) < 0)
      operator delete(*(void **)(v18 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v18 + 128);
    MEMORY[0x227684CE8](v18, 0x10B2C40EED050F3);
  }
  v33[0] = v29;
  v33[1] = __dst;
  v33[2] = v29;
  v33[3] = __dst;
  v33[4] = __dst;
  if (v30 == -1)
    sub_22316DD70();
  v34 = v33;
  ((void (*)(_QWORD **, _DWORD *))off_24EC713F0[v30])(&v34, v29);
  if (SHIBYTE(v32) < 0)
    operator delete(__dst[0]);
LABEL_32:
  if (v30 == -1)
    sub_22316DD70();
  v33[0] = __dst;
  ((void (*)(void **__return_ptr, _QWORD *, _DWORD *))off_24EC71408[v30])(__p, v33, v29);
  if (v30 != -1)
    ((void (*)(_QWORD *, _DWORD *))off_24EC713D8[v30])(v33, v29);
  if ((v28 & 0x80u) == 0)
    v22 = __p;
  else
    v22 = (void **)__p[0];
  if ((v28 & 0x80u) == 0)
    v23 = v28;
  else
    v23 = (uint64_t)__p[1];
  v24 = sub_2231813E8(a1, (uint64_t)v22, v23);
  if ((char)v28 < 0)
    operator delete(__p[0]);
  return v24;
}

void sub_2242AAA7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  MEMORY[0x227684CE8](v4, 0x10B2C40EED050F3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242AAAAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25)
{
  if (a24 < 0)
  {
    operator delete(__p);
    sub_22319B964((uint64_t)&a15);
    _Unwind_Resume(a1);
  }
  sub_22319B964((uint64_t)&a15);
  _Unwind_Resume(a1);
}

_DWORD *sub_2242AAB30(_DWORD *a1, int a2, uint64_t a3, uint64_t a4)
{
  std::string *v6;
  uint64_t v7;
  uint64_t *v8;
  int v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  char v18;
  _QWORD v19[2];
  __int128 v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  *a1 = a2;
  v6 = (std::string *)(a1 + 2);
  *(_QWORD *)&v17 = a3;
  *((_QWORD *)&v17 + 1) = a4;
  sub_2242AC9CC();
  v7 = qword_2540CFAE0;
  if (!qword_2540CFAE0)
    goto LABEL_11;
  v8 = &qword_2540CFAE0;
  do
  {
    v9 = *(_DWORD *)(v7 + 32);
    v10 = v9 < a2;
    if (v9 >= a2)
      v11 = (uint64_t *)v7;
    else
      v11 = (uint64_t *)(v7 + 8);
    if (!v10)
      v8 = (uint64_t *)v7;
    v7 = *v11;
  }
  while (*v11);
  if (v8 != &qword_2540CFAE0 && *((_DWORD *)v8 + 8) <= a2)
  {
    sub_2242AC9CC();
    v20 = v17;
    v21 = ": ";
    v22 = 2;
    v14 = v8[5];
    v13 = v8 + 5;
    v12 = v14;
    v15 = *((unsigned __int8 *)v13 + 23);
    if ((v15 & 0x80u) != 0)
      v15 = v13[1];
    else
      v12 = (uint64_t)v13;
    v23 = v12;
    v24 = v15;
    sub_2231A9820((uint64_t)&v20, (uint64_t)v25, 0, 0, v6);
  }
  else
  {
LABEL_11:
    sub_2242AC9CC();
    LODWORD(v22) = 0;
    sub_223663638((uint64_t)v19, (uint64_t)&v20, (uint64_t)&v17);
    if ((_DWORD)v22 == -1)
      sub_22316DD70();
    v19[0] = &v18;
    ((void (*)(_QWORD *, __int128 *))off_24EC71408[v22])(v19, &v20);
    if ((_DWORD)v22 != -1)
      ((void (*)(_QWORD *, __int128 *))off_24EC713D8[v22])(v19, &v20);
  }
  return a1;
}

void sub_2242AACBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,int a21)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_22316DC48(exception_object);
}

void sub_2242AAD08(unsigned int *a1@<X0>, unsigned int a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  size_t v12;
  size_t v13;
  OSType v14;
  CVReturn v15;
  int v16;
  std::__shared_weak_count *size;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::string::__raw *v24;
  int data;
  size_t v26;
  void **v27;
  const void **v28;
  std::string::size_type v29;
  std::string::size_type v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  std::string *v34;
  uint64_t v35;
  uint64_t v36;
  std::string::size_type v37;
  void **v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  void *__p[2];
  unsigned __int8 v46;
  int v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  CVPixelBufferRef pixelBufferOut;
  OSType v53;
  char v54;
  char v55;
  int v56;
  std::__shared_weak_count *v57;
  char v58;
  int v59;
  void *__dst[2];
  unint64_t v61;
  std::string v62;
  const char *v63;
  const char *v64;
  std::string *v65;

  v53 = a2;
  pixelBufferOut = 0;
  sub_223677448(&v50, a4);
  sub_2242A6E64((uint64_t)&v50, &v56);
  if (v58)
  {
    sub_2244E1614((uint64_t)&v56, &v62);
    if ((_BYTE)v63)
    {
      if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v62.__r_.__value_.__l.__data_);
    }
    else
    {
      sub_2244E16D8((uint64_t)&v56, a3);
    }
    if (v58)
    {
      v9 = v57;
      if (v57)
      {
        p_shared_owners = (unint64_t *)&v57->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
  }
  v12 = *a1;
  v13 = a1[1];
  v14 = v53;
  sub_2231AEC20(&v62, (uint64_t)&v50);
  v15 = CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], v12, v13, v14, (CFDictionaryRef)v62.__r_.__value_.__l.__data_, &pixelBufferOut);
  v16 = v15;
  size = (std::__shared_weak_count *)v62.__r_.__value_.__l.__size_;
  if (!v62.__r_.__value_.__l.__size_)
    goto LABEL_16;
  v18 = (unint64_t *)(v62.__r_.__value_.__l.__size_ + 8);
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_16:
    if (v15)
      goto LABEL_17;
LABEL_28:
    sub_2242A8B78(&v62, (std::__shared_weak_count_vtbl *)pixelBufferOut, 0, 0);
    *(_QWORD *)a5 = &off_24EC715B8;
    *(_OWORD *)(a5 + 8) = *(_OWORD *)&v62.__r_.__value_.__r.__words[1];
    *(_BYTE *)(a5 + 32) = 1;
    goto LABEL_60;
  }
  ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
  std::__shared_weak_count::__release_weak(size);
  if (!v16)
    goto LABEL_28;
LABEL_17:
  v59 = 0;
  sub_223894774(&v56, "MakePixelBuffer");
  v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&v56;
  v62.__r_.__value_.__l.__size_ = (std::string::size_type)" for format ";
  v62.__r_.__value_.__r.__words[2] = (std::string::size_type)&v56;
  v63 = " for format ";
  v64 = " for format ";
  if (v59 == -1)
    sub_22316DD70();
  __dst[0] = &v62;
  ((void (*)(void **, int *))off_24EC714A0[v59])(__dst, &v56);
  sub_223C8BD48((uint64_t)&v55, (uint64_t)&v56, &v53);
  v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&v56;
  v62.__r_.__value_.__l.__size_ = (std::string::size_type)" and size ";
  v62.__r_.__value_.__r.__words[2] = (std::string::size_type)&v56;
  v63 = " and size ";
  v64 = " and size ";
  if (v59 == -1)
    sub_22316DD70();
  __dst[0] = &v62;
  ((void (*)(void **, int *))off_24EC714B8[v59])(__dst, &v56);
  sub_2242ADD74((uint64_t)&v54, (uint64_t)&v56, a1);
  v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&v56;
  v62.__r_.__value_.__l.__size_ = (std::string::size_type)", used attributes:\n";
  v62.__r_.__value_.__r.__words[2] = (std::string::size_type)&v56;
  v63 = ", used attributes:\n";
  v64 = ", used attributes:\n";
  if (v59 == -1)
    sub_22316DD70();
  __dst[0] = &v62;
  ((void (*)(void **, int *))off_24EC714D0[v59])(__dst, &v56);
  v20 = operator new();
  *(_QWORD *)(v20 + 272) = 0;
  *(_OWORD *)(v20 + 240) = 0u;
  *(_OWORD *)(v20 + 256) = 0u;
  *(_OWORD *)(v20 + 208) = 0u;
  *(_OWORD *)(v20 + 224) = 0u;
  *(_OWORD *)(v20 + 176) = 0u;
  *(_OWORD *)(v20 + 192) = 0u;
  *(_OWORD *)(v20 + 144) = 0u;
  *(_OWORD *)(v20 + 160) = 0u;
  *(_OWORD *)(v20 + 112) = 0u;
  *(_OWORD *)(v20 + 128) = 0u;
  *(_OWORD *)(v20 + 80) = 0u;
  *(_OWORD *)(v20 + 96) = 0u;
  *(_OWORD *)(v20 + 48) = 0u;
  *(_OWORD *)(v20 + 64) = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *(_OWORD *)(v20 + 32) = 0u;
  *(_OWORD *)v20 = 0u;
  sub_223195210(v20);
  v65 = (std::string *)v20;
  sub_2231AEC20(&v62, a4);
  sub_224532A28((_QWORD *)(v20 + 16), v62.__r_.__value_.__l.__data_);
  v21 = (std::__shared_weak_count *)v62.__r_.__value_.__l.__size_;
  if (v62.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v62.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      v24 = (std::string::__raw *)v65;
      data = (int)v65[5].__r_.__value_.__l.__data_;
      if ((data & 0x10) == 0)
        goto LABEL_25;
LABEL_31:
      v29 = v24[4].__words[2];
      v30 = v24[3].__words[0];
      if (v29 < v30)
      {
        v24[4].__words[2] = v30;
        v29 = v30;
      }
      v28 = (const void **)&v24[2].__words[2];
      goto LABEL_34;
    }
  }
  v24 = (std::string::__raw *)v65;
  data = (int)v65[5].__r_.__value_.__l.__data_;
  if ((data & 0x10) != 0)
    goto LABEL_31;
LABEL_25:
  if ((data & 8) == 0)
  {
    v26 = 0;
    HIBYTE(v61) = 0;
    v27 = __dst;
    goto LABEL_42;
  }
  v28 = (const void **)&v24[1].__words[2];
  v29 = v24[2].__words[1];
LABEL_34:
  v31 = *v28;
  v26 = v29 - (_QWORD)*v28;
  if (v26 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  if (v26 >= 0x17)
  {
    v32 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17)
      v32 = v26 | 7;
    v33 = v32 + 1;
    v27 = (void **)operator new(v32 + 1);
    __dst[1] = (void *)v26;
    v61 = v33 | 0x8000000000000000;
    __dst[0] = v27;
  }
  else
  {
    HIBYTE(v61) = v29 - *(_BYTE *)v28;
    v27 = __dst;
    if (!v26)
      goto LABEL_42;
  }
  memmove(v27, v31, v26);
LABEL_42:
  *((_BYTE *)v27 + v26) = 0;
  v34 = v65;
  if (v65)
  {
    v35 = MEMORY[0x24BEDB7F0];
    v36 = *MEMORY[0x24BEDB7F0];
    v65->__r_.__value_.__r.__words[0] = *MEMORY[0x24BEDB7F0];
    v37 = *(_QWORD *)(v35 + 72);
    *(std::string::size_type *)((char *)v34->__r_.__value_.__r.__words + *(_QWORD *)(v36 - 24)) = *(_QWORD *)(v35 + 64);
    v34[1].__r_.__value_.__r.__words[0] = MEMORY[0x24BEDB848] + 16;
    v34->__r_.__value_.__r.__words[2] = v37;
    if (v34[4].__r_.__value_.__s.__data_[15] < 0)
      operator delete((void *)v34[3].__r_.__value_.__r.__words[2]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](&v34[5].__r_.__value_.__r.__words[1]);
    MEMORY[0x227684CE8](v34, 0x10B2C40EED050F3);
  }
  v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&v56;
  v62.__r_.__value_.__l.__size_ = (std::string::size_type)__dst;
  v62.__r_.__value_.__r.__words[2] = (std::string::size_type)&v56;
  v63 = (const char *)__dst;
  v64 = (const char *)__dst;
  if (v59 == -1)
    sub_22316DD70();
  v65 = &v62;
  ((void (*)(std::string **, int *))off_24EC713F0[v59])(&v65, &v56);
  if (SHIBYTE(v61) < 0)
    operator delete(__dst[0]);
  if (v59 == -1)
    sub_22316DD70();
  v62.__r_.__value_.__r.__words[0] = (std::string::size_type)__dst;
  ((void (*)(void **__return_ptr, std::string *, int *))off_24EC71408[v59])(__p, &v62, &v56);
  if (v59 != -1)
    ((void (*)(std::string *, int *))off_24EC713D8[v59])(&v62, &v56);
  if ((v46 & 0x80u) == 0)
    v38 = __p;
  else
    v38 = (void **)__p[0];
  if ((v46 & 0x80u) == 0)
    v39 = v46;
  else
    v39 = (uint64_t)__p[1];
  sub_2242AAB30(&v47, v16, (uint64_t)v38, v39);
  v40 = v47;
  v41 = v49;
  *(_QWORD *)(a5 + 8) = v48;
  *(_QWORD *)(a5 + 16) = v41;
  *(_QWORD *)(a5 + 23) = *(_QWORD *)((char *)&v49 + 7);
  LOBYTE(v41) = HIBYTE(v49);
  v49 = 0uLL;
  v48 = 0;
  *(_DWORD *)a5 = v40;
  *(_WORD *)(a5 + 31) = v41;
  if ((char)v46 < 0)
    operator delete(__p[0]);
LABEL_60:
  v42 = v51;
  if (v51)
  {
    v43 = (unint64_t *)&v51->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
    }
  }
}

void sub_2242AB2F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  sub_223224234((uint64_t)&a23);
  sub_223167354((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242AB394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  sub_223167354(v8 - 112);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242AB3CC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0)
    operator delete(__p);
  JUMPOUT(0x2242AB3F0);
}

void sub_2242AB3EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  sub_22319B964((uint64_t)va1);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242AB408(int a1)
{
  uint64_t result;
  unsigned __int16 v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  result = 1;
  if (a1 <= 1278226487)
  {
    if (a1 > 875704421)
    {
      if (a1 > 875836533)
      {
        if (a1 == 875836534)
          return result;
        if (a1 != 1094862674)
        {
          v7 = 1111970369;
          goto LABEL_37;
        }
        return 4;
      }
      if (a1 == 875704422 || a1 == 875704438)
        return result;
      v4 = 875836518;
LABEL_41:
      if (a1 != v4)
        goto LABEL_43;
      return result;
    }
    if (a1 > 843264055)
    {
      v6 = a1 - 843264056;
      if (v6 <= 0x30 && ((1 << v6) & 0x1400000000001) != 0)
        return 2;
      goto LABEL_43;
    }
    if (a1 != 24)
    {
      if (a1 == 32)
        return 4;
      if (a1 != 842285639)
        goto LABEL_43;
    }
    return 3;
  }
  if (a1 > 1647392358)
  {
    if (a1 > 1717855599)
    {
      if (a1 > 1751410031)
      {
        if (a1 == 1751410032)
          return result;
        v4 = 1751411059;
      }
      else
      {
        if (a1 == 1717855600)
          return result;
        v4 = 1717856627;
      }
      goto LABEL_41;
    }
    if (a1 == 1647392359)
      return result;
    if (a1 != 1647589490)
    {
      v7 = 1647719521;
      goto LABEL_37;
    }
    return 3;
  }
  if (a1 <= 1278226741)
  {
    v5 = a1 - 1278226488;
    if (v5 > 0x30 || ((1 << v5) & 0x1400000000001) == 0)
      goto LABEL_43;
    return result;
  }
  if (a1 > 1380410944)
  {
    if (a1 != 1380410945)
    {
      v3 = 26689;
      goto LABEL_36;
    }
    return 4;
  }
  if (a1 != 1278226742)
  {
    v3 = 16961;
LABEL_36:
    v7 = v3 | 0x52470000;
LABEL_37:
    if (a1 == v7)
      return 4;
LABEL_43:
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/PixelFormat/include/Kit/PixelFormat/Properties.h", 420, (uint64_t)&unk_2245B31B5, 0, (uint64_t)"not yet implemented", 19, (void (*)(void **))sub_22457406C);
    abort();
  }
  return result;
}

void sub_2242AB678(uint64_t a1, uint64_t a2)
{
  int v4;
  unint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  __int16 v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  __int128 v50;
  unint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  int v54;
  __int16 v55;
  unint64_t v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  std::logic_error *exception;
  std::logic_error *v74;
  _QWORD v75[2];
  std::__shared_weak_count *v76;
  _QWORD v77[2];
  std::__shared_weak_count *v78;
  _QWORD v79[2];
  std::__shared_weak_count *v80;
  _BYTE v81[24];
  _BYTE v82[30];
  _QWORD v83[2];
  std::__shared_weak_count *v84;
  uint64_t (**v85)();
  __int128 v86;
  _BYTE v87[30];
  __int128 v88;
  std::string v89;
  _BYTE v90[30];

  v4 = sub_2242A78F0(a1);
  if (v4 != sub_2242A78F0(a2))
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    LODWORD(v85) = sub_2242A78F0(a1);
    *(_DWORD *)v81 = sub_2242A78F0(a2);
    sub_2242ABE3C((uint64_t)&v89, (unsigned int *)&v85, (unsigned int *)v81);
    std::logic_error::logic_error(exception, &v89);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v5 = sub_2242A9824(a1);
  if (v5 != sub_2242A9824(a2))
  {
    v74 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v85 = (uint64_t (**)())sub_2242A9824(a1);
    *(_QWORD *)v81 = sub_2242A9824(a2);
    sub_2242ABFB4((uint64_t)&v89, (unsigned int *)&v85, (unsigned int *)v81);
    std::logic_error::logic_error(v74, &v89);
    v74->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(v74, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v6 = sub_2242A78F0(a1);
  if (sub_22429D65C(v6) != 1)
  {
    v19 = sub_2242A78F0(a1);
    v20 = sub_22429D65C(v19);
    if (!v20)
      return;
    v21 = 0;
    v22 = v20;
    while (1)
    {
      v24 = *(_QWORD *)(a1 + 8);
      v23 = *(std::__shared_weak_count **)(a1 + 16);
      v77[0] = &off_24EC715B8;
      v77[1] = v24;
      v78 = v23;
      if (v23)
      {
        p_shared_owners = (unint64_t *)&v23->__shared_owners_;
        do
          v26 = __ldxr(p_shared_owners);
        while (__stxr(v26 + 1, p_shared_owners));
      }
      sub_224297894((uint64_t)v77, v21, (uint64_t)&v89);
      v85 = &off_24EC20EB8;
      v86 = *(_OWORD *)&v89.__r_.__value_.__r.__words[1];
      *(_OWORD *)v87 = *(_OWORD *)v90;
      *(_OWORD *)&v87[14] = *(_OWORD *)&v90[14];
      v28 = *(_QWORD *)(a2 + 8);
      v27 = *(std::__shared_weak_count **)(a2 + 16);
      v75[0] = &off_24EC715B8;
      v75[1] = v28;
      v76 = v27;
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
      }
      sub_224297894((uint64_t)v75, v21, (uint64_t)&v89);
      *(_QWORD *)v81 = &off_24EC20EB8;
      *(_OWORD *)&v81[8] = *(_OWORD *)&v89.__r_.__value_.__r.__words[1];
      *(_OWORD *)v82 = *(_OWORD *)v90;
      *(_OWORD *)&v82[14] = *(_OWORD *)&v90[14];
      sub_2242AC12C((uint64_t)&v85, (uint64_t)v81);
      v31 = *(std::__shared_weak_count **)&v81[16];
      if (!*(_QWORD *)&v81[16])
        goto LABEL_29;
      v32 = (unint64_t *)(*(_QWORD *)&v81[16] + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
        v75[0] = &off_24EC715B8;
        v34 = v76;
        if (!v76)
          goto LABEL_35;
      }
      else
      {
LABEL_29:
        v75[0] = &off_24EC715B8;
        v34 = v76;
        if (!v76)
          goto LABEL_35;
      }
      v35 = (unint64_t *)&v34->__shared_owners_;
      do
        v36 = __ldaxr(v35);
      while (__stlxr(v36 - 1, v35));
      if (!v36)
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v34);
      }
LABEL_35:
      v37 = (std::__shared_weak_count *)*((_QWORD *)&v86 + 1);
      if (!*((_QWORD *)&v86 + 1))
        goto LABEL_39;
      v38 = (unint64_t *)(*((_QWORD *)&v86 + 1) + 8);
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
        v77[0] = &off_24EC715B8;
        v40 = v78;
        if (v78)
        {
LABEL_40:
          v41 = (unint64_t *)&v40->__shared_owners_;
          do
            v42 = __ldaxr(v41);
          while (__stlxr(v42 - 1, v41));
          if (!v42)
          {
            ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
            std::__shared_weak_count::__release_weak(v40);
          }
        }
      }
      else
      {
LABEL_39:
        v77[0] = &off_24EC715B8;
        v40 = v78;
        if (v78)
          goto LABEL_40;
      }
      if (++v21 == v22)
        return;
    }
  }
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  v83[0] = &off_24EC715B8;
  v83[1] = v8;
  v84 = v7;
  if (v7)
  {
    v9 = (unint64_t *)&v7->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  sub_22429724C((uint64_t)v83, (uint64_t)&v89);
  v11 = *(_OWORD *)&v89.__r_.__value_.__r.__words[1];
  if (v89.__r_.__value_.__r.__words[2])
  {
    v12 = (unint64_t *)(v89.__r_.__value_.__r.__words[2] + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v14 = *(_QWORD *)&v90[16];
    v15 = *(_DWORD *)&v90[24];
    v16 = *(_WORD *)&v90[28];
    do
      v17 = __ldxr(v12);
    while (__stxr(v17 + 1, v12));
    *(_QWORD *)v81 = *(_QWORD *)v90;
    *(_DWORD *)&v81[8] = *(_DWORD *)&v90[8];
    do
      v18 = __ldaxr(v12);
    while (__stlxr(v18 - 1, v12));
    if (!v18)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v11 + 1) + 16))(*((_QWORD *)&v11 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v11 + 1));
    }
  }
  else
  {
    v14 = *(_QWORD *)&v90[16];
    v15 = *(_DWORD *)&v90[24];
    v16 = *(_WORD *)&v90[28];
    *(_QWORD *)v81 = *(_QWORD *)v90;
    *(_DWORD *)&v81[8] = *(_DWORD *)&v90[8];
  }
  v89.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24EC28CD0;
  v43 = (std::__shared_weak_count *)v89.__r_.__value_.__r.__words[2];
  if (v89.__r_.__value_.__r.__words[2])
  {
    v44 = (unint64_t *)(v89.__r_.__value_.__r.__words[2] + 8);
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
  v85 = &off_24EC20EB8;
  v86 = v11;
  *(_OWORD *)v87 = *(_OWORD *)v81;
  *(_QWORD *)&v87[16] = v14;
  *(_DWORD *)&v87[24] = v15;
  *(_WORD *)&v87[28] = v16;
  v47 = *(_QWORD *)(a2 + 8);
  v46 = *(std::__shared_weak_count **)(a2 + 16);
  v79[0] = &off_24EC715B8;
  v79[1] = v47;
  v80 = v46;
  if (v46)
  {
    v48 = (unint64_t *)&v46->__shared_owners_;
    do
      v49 = __ldxr(v48);
    while (__stxr(v49 + 1, v48));
  }
  sub_22429724C((uint64_t)v79, (uint64_t)&v89);
  v50 = *(_OWORD *)&v89.__r_.__value_.__r.__words[1];
  if (v89.__r_.__value_.__r.__words[2])
  {
    v51 = (unint64_t *)(v89.__r_.__value_.__r.__words[2] + 8);
    do
      v52 = __ldxr(v51);
    while (__stxr(v52 + 1, v51));
    v53 = *(_QWORD *)&v90[16];
    v54 = *(_DWORD *)&v90[24];
    v55 = *(_WORD *)&v90[28];
    do
      v56 = __ldxr(v51);
    while (__stxr(v56 + 1, v51));
    *(_QWORD *)&v88 = *(_QWORD *)v90;
    DWORD2(v88) = *(_DWORD *)&v90[8];
    do
      v57 = __ldaxr(v51);
    while (__stlxr(v57 - 1, v51));
    if (!v57)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v50 + 1) + 16))(*((_QWORD *)&v50 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v50 + 1));
    }
  }
  else
  {
    v53 = *(_QWORD *)&v90[16];
    v54 = *(_DWORD *)&v90[24];
    v55 = *(_WORD *)&v90[28];
    *(_QWORD *)&v88 = *(_QWORD *)v90;
    DWORD2(v88) = *(_DWORD *)&v90[8];
  }
  v89.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24EC28CD0;
  v58 = (std::__shared_weak_count *)v89.__r_.__value_.__r.__words[2];
  if (v89.__r_.__value_.__r.__words[2])
  {
    v59 = (unint64_t *)(v89.__r_.__value_.__r.__words[2] + 8);
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
  *(_QWORD *)v81 = &off_24EC20EB8;
  *(_OWORD *)&v81[8] = v50;
  *(_OWORD *)v82 = v88;
  *(_QWORD *)&v82[16] = v53;
  *(_DWORD *)&v82[24] = v54;
  *(_WORD *)&v82[28] = v55;
  sub_2242AC12C((uint64_t)&v85, (uint64_t)v81);
  v61 = *(std::__shared_weak_count **)&v81[16];
  if (*(_QWORD *)&v81[16])
  {
    v62 = (unint64_t *)(*(_QWORD *)&v81[16] + 8);
    do
      v63 = __ldaxr(v62);
    while (__stlxr(v63 - 1, v62));
    if (!v63)
    {
      ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
      std::__shared_weak_count::__release_weak(v61);
    }
  }
  v79[0] = &off_24EC715B8;
  v64 = v80;
  if (v80)
  {
    v65 = (unint64_t *)&v80->__shared_owners_;
    do
      v66 = __ldaxr(v65);
    while (__stlxr(v66 - 1, v65));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
      std::__shared_weak_count::__release_weak(v64);
    }
  }
  v67 = (std::__shared_weak_count *)*((_QWORD *)&v86 + 1);
  if (*((_QWORD *)&v86 + 1))
  {
    v68 = (unint64_t *)(*((_QWORD *)&v86 + 1) + 8);
    do
      v69 = __ldaxr(v68);
    while (__stlxr(v69 - 1, v68));
    if (!v69)
    {
      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
      std::__shared_weak_count::__release_weak(v67);
    }
  }
  v83[0] = &off_24EC715B8;
  v70 = v84;
  if (v84)
  {
    v71 = (unint64_t *)&v84->__shared_owners_;
    do
      v72 = __ldaxr(v71);
    while (__stlxr(v72 - 1, v71));
    if (!v72)
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
}

void sub_2242ABD48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,char a28)
{
  int v28;
  void *v29;
  uint64_t v30;

  if (*(char *)(v30 - 121) < 0)
  {
    operator delete(*(void **)(v30 - 144));
    if ((v28 & 1) == 0)
      goto LABEL_6;
  }
  else if (!v28)
  {
LABEL_6:
    _Unwind_Resume(exception_object);
  }
  __cxa_free_exception(v29);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242ABE3C(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t result;
  char v6;
  _DWORD v7[6];
  int v8;
  _QWORD v9[5];
  _QWORD *v10;

  v8 = 0;
  sub_2242AE6DC(v7, "Source and destination format do not match. Source: ");
  sub_223C8BD48((uint64_t)&v6, (uint64_t)v7, a2);
  v9[0] = v7;
  v9[1] = "Dst: ";
  v9[2] = v7;
  v9[3] = "Dst: ";
  v9[4] = "Dst: ";
  if (v8 == -1)
    sub_22316DD70();
  v10 = v9;
  ((void (*)(_QWORD **, _DWORD *))off_24EC71500[v8])(&v10, v7);
  sub_223C8BD48((uint64_t)v9, (uint64_t)v7, a3);
  if (v8 == -1)
    sub_22316DD70();
  v9[0] = &v10;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24EC71408[v8])(v9, v7);
  if (v8 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24EC713D8[v8])(v9, v7);
  return result;
}

void sub_2242ABF50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242ABF64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242ABF78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242ABF8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242ABFA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242ABFB4(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t result;
  char v6;
  _DWORD v7[6];
  int v8;
  _QWORD v9[5];
  _QWORD *v10;

  v8 = 0;
  sub_223C8F720(v7, "Source and destination size do not match. Source: ");
  sub_2231BFC9C((uint64_t)&v6, (uint64_t)v7, a2);
  v9[0] = v7;
  v9[1] = "Dst: ";
  v9[2] = v7;
  v9[3] = "Dst: ";
  v9[4] = "Dst: ";
  if (v8 == -1)
    sub_22316DD70();
  v10 = v9;
  ((void (*)(_QWORD **, _DWORD *))off_24EC71500[v8])(&v10, v7);
  sub_2231BFC9C((uint64_t)v9, (uint64_t)v7, a3);
  if (v8 == -1)
    sub_22316DD70();
  v9[0] = &v10;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24EC71408[v8])(v9, v7);
  if (v8 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24EC713D8[v8])(v9, v7);
  return result;
}

void sub_2242AC0C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242AC0DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242AC0F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242AC104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242AC118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242AC12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  __int16 v28;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  std::__shared_weak_count *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  __int16 v45;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_55;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_55;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_55:
    if (*(_BYTE *)(a1 + 53))
      goto LABEL_14;
LABEL_17:
    v38 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_37;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 53))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v38, v4, 1);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_37:
    v37 = 0;
    v39[0] = &off_24EC1F8C8;
    v22 = *(_QWORD *)(a1 + 8);
    v23 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v23)
      goto LABEL_38;
    goto LABEL_31;
  }
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_29;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_29;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!*(_BYTE *)(a2 + 53))
      goto LABEL_37;
  }
  else
  {
LABEL_29:
    if (!*(_BYTE *)(a2 + 53))
      goto LABEL_37;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v37, v13, 1);
  v39[0] = &off_24EC1F8C8;
  v22 = *(_QWORD *)(a1 + 8);
  v23 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v23)
  {
LABEL_38:
    v26 = *(_QWORD *)(a1 + 40);
    v27 = *(_DWORD *)(a1 + 48);
    v28 = *(_WORD *)(a1 + 52);
    goto LABEL_39;
  }
LABEL_31:
  v24 = (unint64_t *)&v23->__shared_owners_;
  do
    v25 = __ldxr(v24);
  while (__stxr(v25 + 1, v24));
  v26 = *(_QWORD *)(a1 + 40);
  v27 = *(_DWORD *)(a1 + 48);
  v28 = *(_WORD *)(a1 + 52);
  do
    v29 = __ldxr(v24);
  while (__stxr(v29 + 1, v24));
LABEL_39:
  v39[1] = v22;
  v40 = v23;
  v41 = *(_QWORD *)(a1 + 24);
  v42 = *(_DWORD *)(a1 + 32);
  v43 = v26;
  v44 = v27;
  v45 = v28;
  if (v23)
  {
    v30 = (unint64_t *)&v23->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  sub_2242E43A8(v39, (_DWORD *)a2);
  v32 = v40;
  if (v40)
  {
    v33 = (unint64_t *)&v40->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v37;
  v37 = 0;
  if (v35)
    (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
  result = v38;
  v38 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2242AC420(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242AC48C(char *__s, int *a2)
{
  uint64_t v3;
  void **v4;
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _DWORD v19[6];
  int v20;
  void *__dst[2];
  unint64_t v22;
  _QWORD *v23;
  void *__p[2];
  unsigned __int8 v25;
  _QWORD v26[3];
  int v27;
  std::string v28;
  std::string *v29;
  std::string *v30;
  _QWORD *v31;
  std::string *v32;
  std::string *v33;
  std::string **v34;

  v20 = 0;
  sub_2232C8A68(v19, __s);
  v3 = operator new();
  *(_QWORD *)(v3 + 272) = 0;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_OWORD *)(v3 + 256) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(_OWORD *)(v3 + 224) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)v3 = 0u;
  sub_223195210(v3);
  v23 = (_QWORD *)v3;
  v27 = 0;
  sub_2231ABA1C(v26, "{");
  std::to_string(&v28, *a2);
  v29 = (std::string *)v26;
  v30 = &v28;
  v31 = v26;
  v32 = &v28;
  v33 = &v28;
  if (v27 == -1)
    sub_22316DD70();
  v34 = &v29;
  ((void (*)(std::string ***, _QWORD *))off_24EC713F0[v27])(&v34, v26);
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v28.__r_.__value_.__l.__data_);
  v29 = (std::string *)v26;
  v30 = (std::string *)",";
  v31 = v26;
  v32 = (std::string *)",";
  v33 = (std::string *)",";
  if (v27 == -1)
    goto LABEL_44;
  v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
  ((void (*)(std::string *, _QWORD *))off_24EC71470[v27])(&v28, v26);
  v29 = (std::string *)v26;
  v30 = (std::string *)(a2 + 2);
  v31 = v26;
  v32 = (std::string *)(a2 + 2);
  v33 = (std::string *)(a2 + 2);
  if (v27 == -1
    || (v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29,
        ((void (*)(std::string *, _QWORD *))off_24EC71488[v27])(&v28, v26),
        v29 = (std::string *)v26,
        v30 = (std::string *)"}",
        v31 = v26,
        v32 = (std::string *)"}",
        v33 = (std::string *)"}",
        v27 == -1))
  {
LABEL_44:
    sub_22316DD70();
  }
  v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
  ((void (*)(std::string *, _QWORD *))off_24EC71470[v27])(&v28, v26);
  if (v27 == -1)
    sub_22316DD70();
  v29 = &v28;
  ((void (*)(void **__return_ptr, std::string **, _QWORD *))off_24EC71408[v27])(__p, &v29, v26);
  if (v27 != -1)
    ((void (*)(std::string **, _QWORD *))off_24EC713D8[v27])(&v29, v26);
  if ((v25 & 0x80u) == 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if ((v25 & 0x80u) == 0)
    v5 = v25;
  else
    v5 = (uint64_t)__p[1];
  sub_2231813E8((_QWORD *)(v3 + 16), (uint64_t)v4, v5);
  if (((char)v25 & 0x80000000) == 0)
  {
    v6 = *(_DWORD *)(v3 + 120);
    if ((v6 & 0x10) == 0)
      goto LABEL_18;
LABEL_21:
    v9 = *(_QWORD *)(v3 + 112);
    v10 = *(_QWORD *)(v3 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v3 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v3 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_43;
    goto LABEL_24;
  }
  operator delete(__p[0]);
  v6 = *(_DWORD *)(v3 + 120);
  if ((v6 & 0x10) != 0)
    goto LABEL_21;
LABEL_18:
  if ((v6 & 8) == 0)
  {
    v7 = 0;
    HIBYTE(v22) = 0;
    v8 = __dst;
    goto LABEL_31;
  }
  v11 = *(const void **)(v3 + 40);
  v7 = *(_QWORD *)(v3 + 56) - (_QWORD)v11;
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_43:
    sub_22316DBC0();
LABEL_24:
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v22 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_30;
  }
  HIBYTE(v22) = v7;
  v8 = __dst;
  if (v7)
LABEL_30:
    memmove(v8, v11, v7);
LABEL_31:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v23;
  if (v23)
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *v23 = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)((char *)v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    v14[3] = MEMORY[0x24BEDB848] + 16;
    v14[2] = v17;
    if (*((char *)v14 + 111) < 0)
      operator delete((void *)v14[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v14 + 16);
    MEMORY[0x227684CE8](v14, 0x10B2C40EED050F3);
  }
  v29 = (std::string *)v19;
  v30 = (std::string *)__dst;
  v31 = v19;
  v32 = (std::string *)__dst;
  v33 = (std::string *)__dst;
  if (v20 == -1)
    sub_22316DD70();
  v26[0] = &v29;
  ((void (*)(_QWORD *, _DWORD *))off_24EC713F0[v20])(v26, v19);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
  if (v20 == -1)
    sub_22316DD70();
  v29 = (std::string *)v26;
  result = ((uint64_t (*)(std::string **, _DWORD *))off_24EC71408[v20])(&v29, v19);
  if (v20 != -1)
    return ((uint64_t (*)(std::string **, _DWORD *))off_24EC713D8[v20])(&v29, v19);
  return result;
}

void sub_2242AC900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a25 < 0)
    operator delete(__p);
  sub_22456E764(&a19);
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2242AC9CC()
{
  unsigned __int8 v0;
  uint64_t v1;
  void *v2;
  __int128 v3;
  int v4;
  void *v5;
  __int128 v6;
  int v7;
  void *v8;
  __int128 v9;
  int v10;
  void *v11;
  __int128 v12;
  int v13;
  void *v14[3];
  int v15;
  void *v16;
  __int128 v17;
  int v18;
  void *v19;
  __int128 v20;
  int v21;
  void *v22;
  __int128 v23;
  int v24;
  void *v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  char v29;
  int v30;
  void *v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  char v35;
  int v36;
  void *v37;
  __int128 v38;
  int v39;
  void *v40;
  __int128 v41;
  int v42;
  void *v43;
  __int128 v44;
  int v45;
  void *v46;
  __int128 v47;
  int v48;
  void *v49;
  __int128 v50;
  int v51;
  void *__p;
  __int128 v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2540CFAD0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2540CFAD0))
  {
    LODWORD(v1) = 0;
    v2 = operator new(0x48uLL);
    v3 = xmmword_2245C44D0;
    strcpy((char *)v2, "kCVReturnSuccess: Function executed successfully without errors.");
    v4 = -6660;
    v5 = operator new(0x38uLL);
    v6 = xmmword_2245C4510;
    strcpy((char *)v5, "kCVReturnError: Function executed with unknown error.");
    v7 = -6661;
    v8 = operator new(0x78uLL);
    v9 = xmmword_2245C7880;
    strcpy((char *)v8, "kCVReturnInvalidArgument: At least one of the arguments passed in is not valid. Either out of range or the wrong type.");
    v10 = -6662;
    v11 = operator new(0x78uLL);
    v12 = xmmword_2245C6470;
    strcpy((char *)v11, "kCVReturnAllocationFailed: The allocation for a buffer or buffer pool failed. Most likely because of lack of resources.");
    v13 = -6663;
    HIBYTE(v14[2]) = 20;
    strcpy((char *)v14, "kCVReturnUnsupported");
    v15 = -6670;
    v16 = operator new(0x58uLL);
    v17 = xmmword_2245C4600;
    strcpy((char *)v16, "kCVReturnInvalidDisplay: A CVDisplayLink cannot be created for the given DisplayRef.");
    v18 = -6671;
    v19 = operator new(0x58uLL);
    v20 = xmmword_2245C45B0;
    strcpy((char *)v19, "kCVReturnDisplayLinkAlreadyRunning: The CVDisplayLink is already started and running.");
    v21 = -6672;
    v22 = operator new(0x48uLL);
    v23 = xmmword_2245C4590;
    strcpy((char *)v22, "kCVReturnDisplayLinkNotRunning: The CVDisplayLink has not been started.");
    v24 = -6673;
    v25 = operator new(0x48uLL);
    v26 = xmmword_2245C4550;
    strcpy((char *)v25, "kCVReturnDisplayLinkCallbacksNotSet: The output callback is not set.");
    sub_2242AD3EC((uint64_t)&v27, -6680, "kCVReturnInvalidPixelFormat: The requested pixelformat is not supported for the CVBuffer type.");
    v30 = -6681;
    v31 = operator new(0x68uLL);
    v32 = xmmword_2245B8D80;
    strcpy((char *)v31, "kCVReturnInvalidSize: The requested size (most likely too big) is not supported for the CVBuffer type.");
    sub_2242AD3EC((uint64_t)&v33, -6682, "kCVReturnInvalidPixelBufferAttributes: A CVBuffer cannot be created with the given attributes.");
    v36 = -6683;
    v37 = operator new(0xA0uLL);
    v38 = xmmword_2246A6940;
    strcpy((char *)v37, "kCVReturnPixelBufferNotOpenGLCompatible: The Buffer cannot be used with OpenGL as either its size, pixelformat or attributes are not supported by OpenGL.");
    v39 = -6684;
    v40 = operator new(0x98uLL);
    v41 = xmmword_2246A6950;
    strcpy((char *)v40, "kCVReturnPixelBufferNotMetalCompatible: The Buffer cannot be used with Metal as either its size, pixelformat or attributes are not supported by Metal.");
    v42 = -6689;
    v43 = operator new(0xB8uLL);
    v44 = xmmword_2246A6960;
    strcpy((char *)v43, "kCVReturnWouldExceedAllocationThreshold: The allocation request failed because it would have exceeded a specified allocation threshold (see kCVPixelBufferPoolAllocationThresholdKey).");
    v45 = -6690;
    v46 = operator new(0xA0uLL);
    v47 = xmmword_2246A6970;
    strcpy((char *)v46, "kCVReturnPoolAllocationFailed: The allocation for the buffer pool failed. Most likely because of lack of resources. Check if your parameters are in range.");
    v48 = -6691;
    v49 = operator new(0x60uLL);
    v50 = xmmword_2245C4610;
    strcpy((char *)v49, "kCVReturnInvalidPoolAttributes: A CVBufferPool cannot be created with the given attributes.");
    v51 = -6692;
    __p = operator new(0x88uLL);
    v53 = xmmword_2245C6400;
    strcpy((char *)__p, "kCVReturnRetry: a scan hasn't completely traversed the CVBufferPool due to a concurrent operation. The client can retry the scan.");
    sub_2242AD4A0(&v1, 18);
    if (SHIBYTE(v53) < 0)
    {
      operator delete(__p);
      if ((SHIBYTE(v50) & 0x80000000) == 0)
      {
LABEL_6:
        if ((SHIBYTE(v47) & 0x80000000) == 0)
          goto LABEL_7;
        goto LABEL_25;
      }
    }
    else if ((SHIBYTE(v50) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v49);
    if ((SHIBYTE(v47) & 0x80000000) == 0)
    {
LABEL_7:
      if ((SHIBYTE(v44) & 0x80000000) == 0)
        goto LABEL_8;
      goto LABEL_26;
    }
LABEL_25:
    operator delete(v46);
    if ((SHIBYTE(v44) & 0x80000000) == 0)
    {
LABEL_8:
      if ((SHIBYTE(v41) & 0x80000000) == 0)
        goto LABEL_9;
      goto LABEL_27;
    }
LABEL_26:
    operator delete(v43);
    if ((SHIBYTE(v41) & 0x80000000) == 0)
    {
LABEL_9:
      if ((SHIBYTE(v38) & 0x80000000) == 0)
        goto LABEL_10;
      goto LABEL_28;
    }
LABEL_27:
    operator delete(v40);
    if ((SHIBYTE(v38) & 0x80000000) == 0)
    {
LABEL_10:
      if ((v35 & 0x80000000) == 0)
        goto LABEL_11;
      goto LABEL_29;
    }
LABEL_28:
    operator delete(v37);
    if ((v35 & 0x80000000) == 0)
    {
LABEL_11:
      if ((SHIBYTE(v32) & 0x80000000) == 0)
        goto LABEL_12;
      goto LABEL_30;
    }
LABEL_29:
    operator delete(v34);
    if ((SHIBYTE(v32) & 0x80000000) == 0)
    {
LABEL_12:
      if ((v29 & 0x80000000) == 0)
        goto LABEL_13;
      goto LABEL_31;
    }
LABEL_30:
    operator delete(v31);
    if ((v29 & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v26) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_32;
    }
LABEL_31:
    operator delete(v28);
    if ((SHIBYTE(v26) & 0x80000000) == 0)
    {
LABEL_14:
      if ((SHIBYTE(v23) & 0x80000000) == 0)
        goto LABEL_15;
      goto LABEL_33;
    }
LABEL_32:
    operator delete(v25);
    if ((SHIBYTE(v23) & 0x80000000) == 0)
    {
LABEL_15:
      if ((SHIBYTE(v20) & 0x80000000) == 0)
        goto LABEL_16;
      goto LABEL_34;
    }
LABEL_33:
    operator delete(v22);
    if ((SHIBYTE(v20) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v17) & 0x80000000) == 0)
        goto LABEL_17;
      goto LABEL_35;
    }
LABEL_34:
    operator delete(v19);
    if ((SHIBYTE(v17) & 0x80000000) == 0)
    {
LABEL_17:
      if ((SHIBYTE(v14[2]) & 0x80000000) == 0)
        goto LABEL_18;
      goto LABEL_36;
    }
LABEL_35:
    operator delete(v16);
    if ((SHIBYTE(v14[2]) & 0x80000000) == 0)
    {
LABEL_18:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_19;
      goto LABEL_37;
    }
LABEL_36:
    operator delete(v14[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_19:
      if ((SHIBYTE(v9) & 0x80000000) == 0)
        goto LABEL_20;
      goto LABEL_38;
    }
LABEL_37:
    operator delete(v11);
    if ((SHIBYTE(v9) & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v6) & 0x80000000) == 0)
        goto LABEL_21;
      goto LABEL_39;
    }
LABEL_38:
    operator delete(v8);
    if ((SHIBYTE(v6) & 0x80000000) == 0)
    {
LABEL_21:
      if ((SHIBYTE(v3) & 0x80000000) == 0)
      {
LABEL_22:
        __cxa_atexit((void (*)(void *))sub_2242AD684, &qword_2540CFAD8, &dword_22314D000);
        __cxa_guard_release(&qword_2540CFAD0);
        return;
      }
LABEL_40:
      operator delete(v2);
      goto LABEL_22;
    }
LABEL_39:
    operator delete(v5);
    if ((SHIBYTE(v3) & 0x80000000) == 0)
      goto LABEL_22;
    goto LABEL_40;
  }
}

void sub_2242AD1A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  void *a67;
  char a72;
  void *a73;
  char a74;
  void *a75;
  char a76;
  void *a77;
  char a78;
  void *a79;
  char a80;
  void *a81;
  char a82;
  void *a83;
  char a84;
  void *a85;

  if (SLOBYTE(STACK[0x247]) < 0)
  {
    operator delete((void *)STACK[0x230]);
    if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_22;
    }
  }
  else if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete((void *)STACK[0x210]);
  if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
  {
LABEL_4:
    if ((a84 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a85);
  if ((a84 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a82 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a83);
  if ((a82 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a80 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a81);
  if ((a80 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a78 & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  operator delete(a79);
  if ((a78 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a76 & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  operator delete(a77);
  if ((a76 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a74 & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_27:
  operator delete(a75);
  if ((a74 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a72 & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_29;
  }
LABEL_28:
  operator delete(a73);
  if ((a72 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a65 & 0x80000000) == 0)
      goto LABEL_12;
    goto LABEL_30;
  }
LABEL_29:
  operator delete(a67);
  if ((a65 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a58 & 0x80000000) == 0)
      goto LABEL_13;
    goto LABEL_31;
  }
LABEL_30:
  operator delete(a60);
  if ((a58 & 0x80000000) == 0)
  {
LABEL_13:
    if ((a51 & 0x80000000) == 0)
      goto LABEL_14;
    goto LABEL_32;
  }
LABEL_31:
  operator delete(a53);
  if ((a51 & 0x80000000) == 0)
  {
LABEL_14:
    if ((a44 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_33;
  }
LABEL_32:
  operator delete(a46);
  if ((a44 & 0x80000000) == 0)
  {
LABEL_15:
    if ((a37 & 0x80000000) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_33:
  operator delete(a39);
  if ((a37 & 0x80000000) == 0)
  {
LABEL_16:
    if ((a30 & 0x80000000) == 0)
      goto LABEL_17;
    goto LABEL_35;
  }
LABEL_34:
  operator delete(a32);
  if ((a30 & 0x80000000) == 0)
  {
LABEL_17:
    if ((a23 & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_36;
  }
LABEL_35:
  operator delete(a25);
  if ((a23 & 0x80000000) == 0)
  {
LABEL_18:
    if ((a16 & 0x80000000) == 0)
    {
LABEL_38:
      __cxa_guard_abort(&qword_2540CFAD0);
      _Unwind_Resume(a1);
    }
LABEL_37:
    operator delete(a11);
    __cxa_guard_abort(&qword_2540CFAD0);
    _Unwind_Resume(a1);
  }
LABEL_36:
  operator delete(a18);
  if ((a16 & 0x80000000) == 0)
    goto LABEL_38;
  goto LABEL_37;
}

uint64_t sub_2242AD3EC(uint64_t a1, int a2, char *__s)
{
  void *v5;
  size_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = a2;
  v5 = (void *)(a1 + 8);
  v6 = strlen(__s);
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v7 = v6;
  if (v6 >= 0x17)
  {
    v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v8 = v6 | 7;
    v9 = v8 + 1;
    v5 = operator new(v8 + 1);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v9 | 0x8000000000000000;
    *(_QWORD *)(a1 + 8) = v5;
  }
  else
  {
    *(_BYTE *)(a1 + 31) = v6;
    if (!v6)
      goto LABEL_9;
  }
  memmove(v5, __s, v7);
LABEL_9:
  *((_BYTE *)v5 + v7) = 0;
  return a1;
}

uint64_t *sub_2242AD4A0(uint64_t *result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  BOOL v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  char *v13;
  _BYTE *v14;
  __int128 v15;

  qword_2540CFAE8 = 0;
  qword_2540CFAE0 = 0;
  qword_2540CFAD8 = (uint64_t)&qword_2540CFAE0;
  if (a2)
  {
    v2 = result;
    v3 = 0;
    v4 = &result[4 * a2];
    v5 = *(_DWORD *)result;
LABEL_6:
    v7 = &qword_2540CFAE0;
LABEL_10:
    if (v3)
    {
      v10 = v7 + 1;
      if (v7[1])
        goto LABEL_27;
    }
    else
    {
LABEL_20:
      v10 = &qword_2540CFAE0;
      v7 = &qword_2540CFAE0;
    }
LABEL_21:
    v13 = (char *)operator new(0x40uLL);
    *((_DWORD *)v13 + 8) = v5;
    v14 = v13 + 40;
    if (*((char *)v2 + 31) < 0)
    {
      sub_223197FA4(v14, (void *)v2[1], v2[2]);
    }
    else
    {
      v15 = *(_OWORD *)(v2 + 1);
      *((_QWORD *)v13 + 7) = v2[3];
      *(_OWORD *)v14 = v15;
    }
    *(_QWORD *)v13 = 0;
    *((_QWORD *)v13 + 1) = 0;
    *((_QWORD *)v13 + 2) = v7;
    *v10 = (uint64_t)v13;
    if (*(_QWORD *)qword_2540CFAD8)
    {
      qword_2540CFAD8 = *(_QWORD *)qword_2540CFAD8;
      v13 = (char *)*v10;
    }
    result = sub_2231A9A8C((uint64_t *)qword_2540CFAE0, (uint64_t *)v13);
    ++qword_2540CFAE8;
LABEL_27:
    while (1)
    {
      v2 += 4;
      if (v2 == v4)
        break;
      v3 = qword_2540CFAE0;
      v5 = *(_DWORD *)v2;
      if ((uint64_t *)qword_2540CFAD8 == &qword_2540CFAE0)
        goto LABEL_6;
      v6 = qword_2540CFAE0;
      if (qword_2540CFAE0)
      {
        do
        {
          v7 = (uint64_t *)v6;
          v6 = *(_QWORD *)(v6 + 8);
        }
        while (v6);
      }
      else
      {
        v8 = &qword_2540CFAE0;
        do
        {
          v7 = (uint64_t *)v8[2];
          v9 = *v7 == (_QWORD)v8;
          v8 = v7;
        }
        while (v9);
      }
      if (*((_DWORD *)v7 + 8) < v5)
        goto LABEL_10;
      if (!qword_2540CFAE0)
        goto LABEL_20;
      v11 = qword_2540CFAE0;
      while (1)
      {
        while (1)
        {
          v7 = (uint64_t *)v11;
          v12 = *(_DWORD *)(v11 + 32);
          if (v12 <= v5)
            break;
          v11 = *v7;
          v10 = v7;
          if (!*v7)
            goto LABEL_21;
        }
        if (v12 >= v5)
          break;
        v11 = v7[1];
        if (!v11)
        {
          v10 = v7 + 1;
          goto LABEL_21;
        }
      }
    }
  }
  return result;
}

void sub_2242AD64C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  sub_2236C8D34((char *)qword_2540CFAE0);
  _Unwind_Resume(a1);
}

void sub_2242AD670(_Unwind_Exception *a1)
{
  char *v1;

  sub_2236C8D34(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2242AD684(uint64_t a1)
{
  sub_2236C8D34(*(char **)(a1 + 8));
  return a1;
}

uint64_t sub_2242AD6AC(int a1)
{
  int v1;
  int v2;
  int v4;

  if (a1 <= 1278226533)
  {
    if (a1 > 875704421)
    {
      if (a1 <= 875836533)
      {
        if (a1 == 875704422 || a1 == 875704438)
          return 0;
        v1 = 875836518;
      }
      else
      {
        if (a1 <= 1111970368)
        {
          if (a1 != 875836534)
          {
            v1 = 1094862674;
            goto LABEL_38;
          }
          return 0;
        }
        if (a1 == 1111970369)
          return 0;
        v1 = 1278226488;
      }
LABEL_38:
      if (a1 == v1)
        return 0;
LABEL_44:
      sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/PixelFormat/include/Kit/PixelFormat/Properties.h", 303, (uint64_t)&unk_2245B31B5, 0, (uint64_t)"not yet implemented", 19, (void (*)(void **))sub_22457406C);
      abort();
    }
    if (a1 <= 843264055)
    {
      if (a1 == 24 || a1 == 32)
        return 0;
      v1 = 842285639;
      goto LABEL_38;
    }
    if (a1 == 843264056)
      return 0;
    if (a1 != 843264102)
    {
      v4 = 843264104;
      goto LABEL_42;
    }
    return 3;
  }
  if (a1 > 1647392358)
  {
    if (a1 > 1717855599)
    {
      if (a1 > 1751410031)
      {
        if (a1 == 1751410032)
          return 2;
        v4 = 1751411059;
        goto LABEL_42;
      }
      if (a1 != 1717855600 && a1 != 1717856627)
        goto LABEL_44;
      return 3;
    }
    if (a1 == 1647392359 || a1 == 1647589490)
      return 1;
    v2 = 1647719521;
LABEL_27:
    if (a1 != v2)
      goto LABEL_44;
    return 1;
  }
  if (a1 <= 1380401728)
  {
    if (a1 == 1278226534)
      return 3;
    if (a1 == 1278226536)
      return 2;
    v2 = 1278226742;
    goto LABEL_27;
  }
  if (a1 == 1380401729)
    return 0;
  if (a1 == 1380410945)
    return 3;
  v4 = 1380411457;
LABEL_42:
  if (a1 != v4)
    goto LABEL_44;
  return 2;
}

uint64_t sub_2242AD91C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;

  v7 = a2;
  v3 = a1[3];
  if (!v3)
    sub_223198474();
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v3 + 48))(v3, &v7);
  v4 = (_QWORD *)a1[3];
  if (v4 == a1)
  {
    v5 = 4;
    v4 = a1;
    goto LABEL_6;
  }
  if (v4)
  {
    v5 = 5;
LABEL_6:
    (*(void (**)(void))(*v4 + 8 * v5))();
  }
  return MEMORY[0x227684CE8](a1, 0x1020C40A5B76CDFLL);
}

void sub_2242AD9A8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2242AD9CC(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_2242AD9EC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_2242ADA5C(CVPixelBufferRef ****a1)
{
  CVPixelBufferRef **v1;
  CVPixelBufferRef *v2;
  IOSurfaceRef IOSurface;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __CVBuffer *v7;
  double result;
  std::__shared_weak_count *v9;
  __CVBuffer *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  size_t PlaneCount;
  unint64_t v14;
  char *v15;
  size_t v16;
  unint64_t *v17;
  unint64_t v18;
  __int128 v19;
  __CVBuffer *v20;
  IOSurfaceRef v21;
  std::__shared_weak_count *v22;

  v1 = **a1;
  v2 = *v1;
  IOSurface = CVPixelBufferGetIOSurface(**v1);
  sub_2242A8AEC(&v21, IOSurface);
  if (v21)
  {
    sub_2244E0C74(&v21, &v19);
    goto LABEL_3;
  }
  v10 = *v2;
  v9 = (std::__shared_weak_count *)v2[1];
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  if (!v10)
  {
    v19 = 0uLL;
    v20 = 0;
    if (!v9)
      goto LABEL_3;
    goto LABEL_24;
  }
  PlaneCount = CVPixelBufferGetPlaneCount(v10);
  if (PlaneCount <= 1)
    v14 = 1;
  else
    v14 = PlaneCount;
  sub_2242AE7CC((uint64_t)v2);
  v19 = 0uLL;
  v20 = 0;
  if (v14 >> 61)
    sub_22316E078();
  v15 = (char *)operator new(8 * v14);
  *(_QWORD *)&v19 = v15;
  v20 = (__CVBuffer *)&v15[8 * v14];
  bzero(v15, 8 * v14);
  v16 = 0;
  *((_QWORD *)&v19 + 1) = v20;
  do
  {
    *(_QWORD *)&v15[8 * v16] = CVPixelBufferGetBaseAddressOfPlane(v10, v16);
    ++v16;
  }
  while (v14 != v16);
  sub_2242AE9A8((uint64_t)v2);
  if (v9)
  {
LABEL_24:
    v17 = (unint64_t *)&v9->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
LABEL_3:
  v4 = v22;
  if (v22)
  {
    v5 = (unint64_t *)&v22->__shared_owners_;
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v2[14];
  if (v7)
  {
    v2[15] = v7;
    operator delete(v7);
  }
  result = *(double *)&v19;
  *((_OWORD *)v2 + 7) = v19;
  v2[16] = v20;
  return result;
}

void sub_2242ADC10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  std::__shared_weak_count *v14;
  void *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  operator delete(v15);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (a14)
  {
    v19 = (unint64_t *)&a14->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242ADCBC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71430;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2242ADCCC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71430;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2242ADCFC(uint64_t a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = *(void **)(a1 + 136);
  if (v2)
  {
    *(_QWORD *)(a1 + 144) = v2;
    operator delete(v2);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 64));
  v3 = *(std::__shared_weak_count **)(a1 + 32);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2242ADD74(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v21[0] = v5;
  sub_2242AE018((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_22316DBC0();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v14 + 128);
    MEMORY[0x227684CE8](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_22316DD70();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24EC713F0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_2242ADFC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2242ADFE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242AE004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22456E764((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2242AE018(_QWORD *a1, unsigned int *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_2231BFEBC((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_22316DD70();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC71408[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24EC713D8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_2231813E8(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_2242AE100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242AE11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242AE130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

size_t sub_2242AE144(_QWORD **a1)
{
  _DWORD *v1;
  const char *v2;
  uint64_t v3;
  size_t result;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v1 = (_DWORD *)**a1;
  v2 = (const char *)(*a1)[1];
  v3 = v1[6];
  if ((_DWORD)v3 != -1)
    ((void (*)(char *, _DWORD *))off_24EC713D8[v3])(&v9, v1);
  v1[6] = -1;
  result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v5 = result;
  if (result >= 0x17)
  {
    v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17)
      v7 = result | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    *((_QWORD *)v1 + 1) = v5;
    *((_QWORD *)v1 + 2) = v8 | 0x8000000000000000;
    *(_QWORD *)v1 = v6;
  }
  else
  {
    *((_BYTE *)v1 + 23) = result;
    v6 = v1;
    if (!result)
      goto LABEL_11;
  }
  result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((_BYTE *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_2242AE230(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  void *v6;
  const char *v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  _BYTE v15[15];
  char v16;
  void *__p[2];
  unint64_t v18;
  _QWORD v19[3];

  v19[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 16);
  *(_QWORD *)((char *)v19 + 7) = *(_QWORD *)(a2 + 15);
  v4 = *(void **)a2;
  v19[0] = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v14 = v4;
  *(_QWORD *)v15 = v19[0];
  *(_QWORD *)&v15[7] = *(_QWORD *)((char *)v19 + 7);
  v16 = v5;
  memset(v19, 0, 15);
  v6 = __p;
  v7 = *(const char **)(v2 + 24);
  v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v6 = operator new(v11 + 1);
    __p[1] = v9;
    v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((_BYTE *)v9 + (_QWORD)v6) = 0;
    v10 = *(unsigned int *)(v3 + 24);
    if ((_DWORD)v10 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v10 = *(unsigned int *)(v3 + 24);
  if ((_DWORD)v10 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24EC713D8[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_22319BD1C((_QWORD *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0)
    goto LABEL_15;
}

void sub_2242AE3E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2242AE42C(uint64_t a1, void **a2)
{
  const void *v3;
  _BYTE *v4;
  _QWORD *v5;
  size_t v6;
  size_t v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  size_t v18;
  size_t v19;
  void *v20;
  char *v21;
  void **v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  void **v27;

  v3 = *(const void **)(*(_QWORD *)a1 + 32);
  v5 = a2[1];
  v4 = a2[2];
  if (v5 < (_QWORD *)v4)
  {
    v6 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    v7 = v6;
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v8 = operator new(v14 + 1);
      v5[1] = v7;
      v5[2] = v15 | 0x8000000000000000;
      *v5 = v8;
    }
    else
    {
      *((_BYTE *)v5 + 23) = v6;
      v8 = v5;
      if (!v6)
        goto LABEL_19;
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((_BYTE *)v8 + v7) = 0;
    v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (_BYTE *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_22316E078();
  v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (_BYTE *)*a2) >> 3);
  v11 = 2 * v10;
  if (2 * v10 <= v9 + 1)
    v11 = v9 + 1;
  if (v10 >= 0x555555555555555)
    v12 = 0xAAAAAAAAAAAAAAALL;
  else
    v12 = v11;
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL)
      sub_223174E94();
    v13 = (char *)operator new(24 * v12);
  }
  else
  {
    v13 = 0;
  }
  v17 = &v13[24 * v9];
  v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  v19 = v18;
  if (v18 >= 0x17)
  {
    v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v24 = v18 | 7;
    v25 = v24 + 1;
    v20 = operator new(v24 + 1);
    *((_QWORD *)v17 + 1) = v19;
    *((_QWORD *)v17 + 2) = v25 | 0x8000000000000000;
    *(_QWORD *)v17 = v20;
  }
  else
  {
    v17[23] = v18;
    v20 = v17;
    if (!v18)
    {
      v21 = &v13[24 * v12];
      *v17 = 0;
      v16 = v17 + 24;
      v22 = (void **)*a2;
      v23 = (void **)a2[1];
      if (v23 == *a2)
        goto LABEL_36;
      do
      {
LABEL_30:
        v26 = *(_OWORD *)(v23 - 3);
        *((_QWORD *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      v23 = (void **)*a2;
      v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0)
          operator delete(*(v27 - 3));
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  v21 = &v13[24 * v12];
  *((_BYTE *)v20 + v19) = 0;
  v16 = v17 + 24;
  v22 = (void **)*a2;
  v23 = (void **)a2[1];
  if (v23 != *a2)
    goto LABEL_30;
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23)
    operator delete(v23);
LABEL_39:
  a2[1] = v16;
}

void sub_2242AE6BC(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_2242AE6D4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

_DWORD *sub_2242AE6DC(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24EC713D8[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2242AE7CC(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v5;
  CVPixelBufferLockFlags v6;
  int v7;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 24) + 1;
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      if (v3 && !*(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 1;
    }
    else
    {
      if (v4 != 2 || *(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v5);
    *(_DWORD *)(a1 + 16) = 0;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v6 = 0;
    v7 = 2;
LABEL_16:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = v7;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v6 = 1;
    v7 = 1;
    goto LABEL_16;
  }
LABEL_5:
  std::mutex::unlock(v2);
}

void sub_2242AE894(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2242AE8A8(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2242AE8BC(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v6;
  CVPixelBufferLockFlags v7;
  int v8;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32) + 1;
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      v6 = 1;
      if (*(_QWORD *)(a1 + 24) && !v3)
        goto LABEL_7;
    }
    else
    {
      if (v4 != 2 || v3 != 0)
        goto LABEL_7;
      v6 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = 0;
    v3 = *(_QWORD *)(a1 + 32);
  }
  if (v3)
  {
    v7 = 0;
    v8 = 2;
LABEL_18:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v7);
    *(_DWORD *)(a1 + 16) = v8;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v7 = 1;
    v8 = 1;
    goto LABEL_18;
  }
LABEL_7:
  std::mutex::unlock(v2);
}

void sub_2242AE980(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2242AE994(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2242AE9A8(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v5;
  CVPixelBufferLockFlags v6;
  int v7;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 24) - 1;
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      if (v3 && !*(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 1;
    }
    else
    {
      if (v4 != 2 || *(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v5);
    *(_DWORD *)(a1 + 16) = 0;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v6 = 0;
    v7 = 2;
LABEL_16:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = v7;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v6 = 1;
    v7 = 1;
    goto LABEL_16;
  }
LABEL_5:
  std::mutex::unlock(v2);
}

void sub_2242AEA70(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2242AEA84(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2242AEA98(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v6;
  CVPixelBufferLockFlags v7;
  int v8;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32) - 1;
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      v6 = 1;
      if (*(_QWORD *)(a1 + 24) && !v3)
        goto LABEL_7;
    }
    else
    {
      if (v4 != 2 || v3 != 0)
        goto LABEL_7;
      v6 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = 0;
    v3 = *(_QWORD *)(a1 + 32);
  }
  if (v3)
  {
    v7 = 0;
    v8 = 2;
LABEL_18:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v7);
    *(_DWORD *)(a1 + 16) = v8;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v7 = 1;
    v8 = 1;
    goto LABEL_18;
  }
LABEL_7:
  std::mutex::unlock(v2);
}

void sub_2242AEB5C(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2242AEB70(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2242AEB88()
{
  JUMPOUT(0x227684CE8);
}

std::__fs::filesystem::path *sub_2242AEB9C@<X0>(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  return std::__fs::filesystem::__absolute(a2, a1, 0);
}

std::__fs::filesystem::path *sub_2242AEBA8@<X0>(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  return std::__fs::filesystem::__canonical(a2, a1, 0);
}

std::__fs::filesystem::path *sub_2242AEBB4@<X0>(std::__fs::filesystem::path *__p@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  return std::__fs::filesystem::__weakly_canonical(a2, __p, 0);
}

void sub_2242AEBC0(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  std::__fs::filesystem::path v4;

  std::__fs::filesystem::__current_path(&v4, 0);
  sub_2242AEC40(a2, a1, &v4);
  if (SHIBYTE(v4.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v4.__pn_.__r_.__value_.__l.__data_);
}

void sub_2242AEC24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242AEC40(std::__fs::filesystem::path *a1, std::__fs::filesystem::path *__p, const std::__fs::filesystem::path *a3)
{
  std::__fs::filesystem::path __pa;
  std::__fs::filesystem::path v6;

  std::__fs::filesystem::__weakly_canonical(&v6, __p, 0);
  std::__fs::filesystem::__weakly_canonical(&__pa, a3, 0);
  std::__fs::filesystem::path::lexically_relative(a1, &v6, &__pa);
  if ((SHIBYTE(__pa.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v6.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v6.__pn_.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__pa.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v6.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_5;
}

void sub_2242AECD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_2242AED1C(std::__fs::filesystem::path *a1@<X1>, const std::__fs::filesystem::path *a2@<X2>, std::__fs::filesystem::path *a3@<X8>)
{
  sub_2242AEC40(a3, a1, a2);
}

void sub_2242AED24(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  std::__fs::filesystem::path v4;

  std::__fs::filesystem::__current_path(&v4, 0);
  sub_2242AEDA4(a2, a1, &v4);
  if (SHIBYTE(v4.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v4.__pn_.__r_.__value_.__l.__data_);
}

void sub_2242AED88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242AEDA4(std::__fs::filesystem::path *a1, std::__fs::filesystem::path *__p, const std::__fs::filesystem::path *a3)
{
  std::string::size_type size;
  char v6;
  std::__fs::filesystem::path __base;
  std::__fs::filesystem::path v8;
  std::__fs::filesystem::path v9;

  std::__fs::filesystem::__weakly_canonical(&v8, __p, 0);
  std::__fs::filesystem::__weakly_canonical(&__base, a3, 0);
  std::__fs::filesystem::path::lexically_relative(&v9, &v8, &__base);
  size = HIBYTE(v9.__pn_.__r_.__value_.__r.__words[2]);
  v6 = HIBYTE(v9.__pn_.__r_.__value_.__r.__words[2]);
  if ((v9.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v9.__pn_.__r_.__value_.__l.__size_;
  if (size)
  {
    *a1 = v9;
    goto LABEL_8;
  }
  if ((SHIBYTE(v8.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    *a1 = v8;
    if ((v6 & 0x80) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  sub_223197FA4(a1, v8.__pn_.__r_.__value_.__l.__data_, v8.__pn_.__r_.__value_.__l.__size_);
  if ((*((_BYTE *)&v9.__pn_.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_7:
    operator delete(v9.__pn_.__r_.__value_.__l.__data_);
LABEL_8:
  if ((SHIBYTE(__base.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v8.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_12:
    operator delete(v8.__pn_.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__base.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v8.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_12;
}

void sub_2242AEE9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  if (*(char *)(v21 - 17) < 0)
  {
    operator delete(*(void **)(v21 - 40));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a21 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a21 & 0x80000000) == 0)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_2242AEF10(std::__fs::filesystem::path *a1@<X1>, const std::__fs::filesystem::path *a2@<X2>, std::__fs::filesystem::path *a3@<X8>)
{
  sub_2242AEDA4(a3, a1, a2);
}

void sub_2242AEF18(int a1, std::__fs::filesystem::path *__from, std::__fs::filesystem::path *__to)
{
  std::__fs::filesystem::__copy(__from, __to, (std::__fs::filesystem::copy_options)0, 0);
}

void sub_2242AEF2C(int a1, std::__fs::filesystem::path *__from, std::__fs::filesystem::path *__to, std::__fs::filesystem::copy_options __opt)
{
  std::__fs::filesystem::__copy(__from, __to, __opt, 0);
}

BOOL sub_2242AEF40(int a1, std::__fs::filesystem::path *__from, std::__fs::filesystem::path *__to)
{
  return std::__fs::filesystem::__copy_file(__from, __to, (std::__fs::filesystem::copy_options)0, 0);
}

BOOL sub_2242AEF54(int a1, std::__fs::filesystem::path *__from, std::__fs::filesystem::path *__to, std::__fs::filesystem::copy_options __opt)
{
  return std::__fs::filesystem::__copy_file(__from, __to, __opt, 0);
}

void sub_2242AEF68(int a1, std::__fs::filesystem::path *__existing_symlink, std::__fs::filesystem::path *__new_symlink)
{
  std::__fs::filesystem::__copy_symlink(__existing_symlink, __new_symlink, 0);
}

BOOL sub_2242AEF78(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__create_directory(a2, 0);
}

BOOL sub_2242AEF84(int a1, std::__fs::filesystem::path *a2, std::__fs::filesystem::path *__attributes)
{
  return std::__fs::filesystem::__create_directory(a2, __attributes, 0);
}

BOOL sub_2242AEF94(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__create_directories(a2, 0);
}

void sub_2242AEFA0(int a1, std::__fs::filesystem::path *__to, std::__fs::filesystem::path *__new_hard_link)
{
  std::__fs::filesystem::__create_hard_link(__to, __new_hard_link, 0);
}

void sub_2242AEFB0(int a1, std::__fs::filesystem::path *__to, std::__fs::filesystem::path *__new_symlink)
{
  std::__fs::filesystem::__create_symlink(__to, __new_symlink, 0);
}

void sub_2242AEFC0(int a1, std::__fs::filesystem::path *__to, std::__fs::filesystem::path *__new_symlink)
{
  std::__fs::filesystem::__create_directory_symlink(__to, __new_symlink, 0);
}

std::__fs::filesystem::path *sub_2242AEFD0@<X0>(std::__fs::filesystem::path *a1@<X8>)
{
  return std::__fs::filesystem::__current_path(a1, 0);
}

void sub_2242AEFD8(int a1, std::__fs::filesystem::path *a2)
{
  std::__fs::filesystem::__current_path(a2, 0);
}

BOOL sub_2242AEFE4(int a1, std::__fs::filesystem::path *a2)
{
  BOOL v2;
  unsigned __int8 v4;

  std::__fs::filesystem::__status(a2, 0);
  if (v4)
    v2 = v4 == 255;
  else
    v2 = 1;
  return !v2;
}

BOOL sub_2242AF020(int a1, std::__fs::filesystem::path *a2, std::__fs::filesystem::path *a3)
{
  return std::__fs::filesystem::__equivalent(a2, a3, 0);
}

uintmax_t sub_2242AF030(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__file_size(a2, 0);
}

uintmax_t sub_2242AF03C(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__hard_link_count(a2, 0);
}

uint64_t sub_2242AF048(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__last_write_time(a2, 0).__d_.__rep_;
}

void sub_2242AF054(int a1, std::__fs::filesystem::path *a2, std::__fs::filesystem::perms a3, std::__fs::filesystem::perm_options a4)
{
  std::__fs::filesystem::__permissions(a2, a3, a4, 0);
}

std::__fs::filesystem::path *sub_2242AF068@<X0>(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  return std::__fs::filesystem::__read_symlink(a2, a1, 0);
}

BOOL sub_2242AF074(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__remove(a2, 0);
}

uintmax_t sub_2242AF080(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__remove_all(a2, 0);
}

void sub_2242AF08C(int a1, std::__fs::filesystem::path *__from, std::__fs::filesystem::path *__to)
{
  std::__fs::filesystem::__rename(__from, __to, 0);
}

void sub_2242AF09C(int a1, std::__fs::filesystem::path *a2, uintmax_t __size)
{
  std::__fs::filesystem::__resize_file(a2, __size, 0);
}

std::__fs::filesystem::space_info *sub_2242AF0AC@<X0>(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::space_info *a2@<X8>)
{
  return std::__fs::filesystem::__space(a2, a1, 0);
}

std::__fs::filesystem::file_status sub_2242AF0B8(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__status(a2, 0);
}

std::__fs::filesystem::file_status sub_2242AF0C4(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__symlink_status(a2, 0);
}

std::__fs::filesystem::path *sub_2242AF0D0@<X0>(std::__fs::filesystem::path *a1@<X8>)
{
  return std::__fs::filesystem::__temp_directory_path(a1, 0);
}

BOOL sub_2242AF0D8(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 4;
}

BOOL sub_2242AF110(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 5;
}

BOOL sub_2242AF148(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 2;
}

BOOL sub_2242AF180(int a1, std::__fs::filesystem::path *__p)
{
  return std::__fs::filesystem::__fs_is_empty(__p, 0);
}

BOOL sub_2242AF18C(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 1;
}

BOOL sub_2242AF1C4(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 6;
}

BOOL sub_2242AF1FC(int a1, std::__fs::filesystem::path *a2)
{
  unsigned __int8 v3;

  std::__fs::filesystem::__status(a2, 0);
  if (!v3)
    return 0;
  if (v3 == 255)
    return 0;
  return v3 - 4 < 0xFFFFFFFD;
}

BOOL sub_2242AF254(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 7;
}

BOOL sub_2242AF28C(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__symlink_status(a2, 0);
  return v3 == 3;
}

void sub_2242AF2C4(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;

  v2 = (_QWORD *)operator new();
  v3 = MEMORY[0x24BEDB838];
  v4 = MEMORY[0x24BEDB838] + 64;
  v2[53] = MEMORY[0x24BEDB838] + 64;
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  *v2 = v5;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(v5 - 24)) = v6;
  v2[1] = 0;
  v7 = (std::ios_base *)((char *)v2 + *(_QWORD *)(*v2 - 24));
  std::ios_base::init(v7, v2 + 2);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  *v2 = v3 + 24;
  v2[53] = v4;
  MEMORY[0x2276844F0](v2 + 2);
  std::ifstream::open();
  if (v2[17])
  {
    v8 = (std::__shared_weak_count *)operator new(0x30uLL);
    v8->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    v8->__shared_weak_owners_ = 0;
    v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC715D8;
    v10 = (_QWORD *)operator new();
    *v10 = &off_24EC71628;
    v10[1] = 0;
    v10[2] = 0;
    v10[3] = v2;
    v8[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71CA8;
    v8[1].__shared_owners_ = (uint64_t)v2;
    v8[1].__shared_weak_owners_ = (uint64_t)v10;
    *a1 = &off_24EC71BE8;
    a1[1] = v8 + 1;
    a1[2] = v8;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    a1[1] = 0;
    a1[2] = 0;
    *a1 = &off_24EC71BE8;
    (*(void (**)(_QWORD *))(*v2 + 8))(v2);
  }
}

void sub_2242AF4AC(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2242AF4D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2242AF4F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x227684BE0](v1 + 424);
  MEMORY[0x227684CE8](v1, 0x10F1C40A09425BCLL);
  _Unwind_Resume(a1);
}

void sub_2242AF534(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;

  v2 = (_QWORD *)operator new();
  v3 = MEMORY[0x24BEDB840];
  v4 = MEMORY[0x24BEDB840] + 64;
  v2[52] = MEMORY[0x24BEDB840] + 64;
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  *v2 = v5;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(v5 - 24)) = v6;
  v7 = (std::ios_base *)((char *)v2 + *(_QWORD *)(*v2 - 24));
  std::ios_base::init(v7, v2 + 1);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  *v2 = v3 + 24;
  v2[52] = v4;
  MEMORY[0x2276844F0](v2 + 1);
  std::ofstream::open();
  if (v2[16])
  {
    v8 = (std::__shared_weak_count *)operator new(0x30uLL);
    v8->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    v8->__shared_weak_owners_ = 0;
    v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71678;
    v10 = (_QWORD *)operator new();
    *v10 = &off_24EC716C8;
    v10[1] = 0;
    v10[2] = 0;
    v10[3] = v2;
    v8[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71CD0;
    v8[1].__shared_owners_ = (uint64_t)v2;
    v8[1].__shared_weak_owners_ = (uint64_t)v10;
    *a1 = &off_24EC71C10;
    a1[1] = v8 + 1;
    a1[2] = v8;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    a1[1] = 0;
    a1[2] = 0;
    *a1 = &off_24EC71C10;
    (*(void (**)(_QWORD *))(*v2 + 8))(v2);
  }
}

void sub_2242AF718(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2242AF740(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2242AF760(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x227684BE0](v1 + 416);
  MEMORY[0x227684CE8](v1, 0x10F1C4067547207);
  _Unwind_Resume(a1);
}

void sub_2242AF7A0(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  const std::__fs::filesystem::directory_entry *v7;
  const std::__fs::filesystem::directory_entry *v8;
  unint64_t v9;
  std::__fs::filesystem::perms non_sym_perms;
  __int128 v11;
  std::__shared_weak_count *cntrl;
  uint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t *v16;
  unint64_t v17;
  _QWORD v18[3];
  std::__fs::filesystem::directory_iterator v19;
  std::__fs::filesystem::directory_iterator v20;

  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  MEMORY[0x2276849C4](&v20, a1, 0, a2);
  v19 = v20;
  if (v20.__imp_.__cntrl_)
  {
    p_shared_owners = &v20.__imp_.__cntrl_->__shared_owners_;
    do
      v5 = __ldxr((unint64_t *)p_shared_owners);
    while (__stxr(v5 + 1, (unint64_t *)p_shared_owners));
  }
  v18[1] = 0;
  v18[2] = 0;
  while (v19.__imp_.__ptr_)
  {
    v7 = std::__fs::filesystem::directory_iterator::__dereference(&v19);
    v8 = std::__fs::filesystem::directory_iterator::__dereference(&v19);
    if (((1 << v8->__data_.__cache_type_) & 0x17) != 0)
    {
      std::__fs::filesystem::__status(&v8->__p_, 0);
      v9 = a3[1];
      if (v9 >= a3[2])
        goto LABEL_5;
    }
    else
    {
      non_sym_perms = v8->__data_.__non_sym_perms_;
      LOBYTE(v18[0]) = v8->__data_.__type_;
      HIDWORD(v18[0]) = non_sym_perms;
      v9 = a3[1];
      if (v9 >= a3[2])
      {
LABEL_5:
        v6 = sub_2242AFA28((uint64_t)a3, (uint64_t)v7, v18);
        goto LABEL_6;
      }
    }
    if (SHIBYTE(v7->__p_.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4((_BYTE *)v9, v7->__p_.__pn_.__r_.__value_.__l.__data_, v7->__p_.__pn_.__r_.__value_.__l.__size_);
    }
    else
    {
      v11 = *(_OWORD *)&v7->__p_.__pn_.__r_.__value_.__l.__data_;
      *(_QWORD *)(v9 + 16) = *((_QWORD *)&v7->__p_.__pn_.__r_.__value_.__l + 2);
      *(_OWORD *)v9 = v11;
    }
    *(_QWORD *)(v9 + 24) = v18[0];
    v6 = v9 + 32;
    a3[1] = v9 + 32;
LABEL_6:
    a3[1] = v6;
    std::__fs::filesystem::directory_iterator::__increment(&v19, 0);
  }
  cntrl = v19.__imp_.__cntrl_;
  if (v19.__imp_.__cntrl_)
  {
    v13 = &v19.__imp_.__cntrl_->__shared_owners_;
    do
      v14 = __ldaxr((unint64_t *)v13);
    while (__stlxr(v14 - 1, (unint64_t *)v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))cntrl->__on_zero_shared)(cntrl);
      std::__shared_weak_count::__release_weak(cntrl);
    }
  }
  v15 = v20.__imp_.__cntrl_;
  if (v20.__imp_.__cntrl_)
  {
    v16 = &v20.__imp_.__cntrl_->__shared_owners_;
    do
      v17 = __ldaxr((unint64_t *)v16);
    while (__stlxr(v17 - 1, (unint64_t *)v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_2242AF964(_Unwind_Exception *a1)
{
  void **v1;

  sub_223714960(v1);
  _Unwind_Resume(a1);
}

void sub_2242AF978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  va_list va;
  uint64_t v8;
  uint64_t v9;
  va_list va1;
  uint64_t v11;
  va_list va2;

  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v9 = va_arg(va2, _QWORD);
  v11 = va_arg(va2, _QWORD);
  *(_QWORD *)(v3 + 8) = v4;
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  sub_223167354((uint64_t)va2);
  sub_223714960((void **)v3);
  _Unwind_Resume(a1);
}

_UNKNOWN **sub_2242AF9B8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_255794BF8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255794BF8))
    return &off_2540CA628;
  __cxa_atexit((void (*)(void *))nullsub_660, &off_2540CA628, &dword_22314D000);
  __cxa_guard_release(&qword_255794BF8);
  return &off_2540CA628;
}

uint64_t sub_2242AFA28(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void **v4;
  void **v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  void **v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;

  v4 = *(void ***)a1;
  v5 = *(void ***)(a1 + 8);
  v6 = ((uint64_t)v5 - *(_QWORD *)a1) >> 5;
  v7 = v6 + 1;
  if ((unint64_t)(v6 + 1) >> 59)
    sub_22316E078();
  v10 = *(_QWORD *)(a1 + 16) - (_QWORD)v4;
  if (v10 >> 4 > v7)
    v7 = v10 >> 4;
  if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0)
    v11 = 0x7FFFFFFFFFFFFFFLL;
  else
    v11 = v7;
  if (v11)
  {
    if (v11 >> 59)
      sub_223174E94();
    v12 = operator new(32 * v11);
    v13 = (uint64_t)&v12[4 * v6];
    v18 = v13;
    v19 = v13;
    v20 = (char *)&v12[4 * v11];
    if ((*(char *)(a2 + 23) & 0x80000000) == 0)
    {
LABEL_10:
      *(_OWORD *)v13 = *(_OWORD *)a2;
      *(_QWORD *)(v13 + 16) = *(_QWORD *)(a2 + 16);
      v12[4 * v6 + 3] = *a3;
      v14 = v13 + 32;
      if (v5 == v4)
        goto LABEL_20;
      goto LABEL_14;
    }
  }
  else
  {
    v12 = 0;
    v13 = 32 * v6;
    v18 = 32 * v6;
    v19 = 32 * v6;
    v20 = 0;
    if ((*(char *)(a2 + 23) & 0x80000000) == 0)
      goto LABEL_10;
  }
  sub_223197FA4((_BYTE *)v13, *(void **)a2, *(_QWORD *)(a2 + 8));
  v4 = *(void ***)a1;
  v5 = *(void ***)(a1 + 8);
  v13 = v18;
  v12[4 * v6 + 3] = *a3;
  v14 = v19 + 32;
  if (v5 == v4)
  {
LABEL_20:
    *(_QWORD *)a1 = v13;
    *(_QWORD *)(a1 + 8) = v14;
    *(_QWORD *)(a1 + 16) = v20;
    goto LABEL_21;
  }
  do
  {
LABEL_14:
    v15 = *((_OWORD *)v5 - 2);
    *(_QWORD *)(v13 - 16) = *(v5 - 2);
    *(_OWORD *)(v13 - 32) = v15;
    *(v5 - 3) = 0;
    *(v5 - 2) = 0;
    *(v5 - 4) = 0;
    *(_QWORD *)(v13 - 8) = *(v5 - 1);
    v13 -= 32;
    v5 -= 4;
  }
  while (v5 != v4);
  v4 = *(void ***)a1;
  v16 = *(void ***)(a1 + 8);
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v20;
  while (v16 != v4)
  {
    if (*((char *)v16 - 9) < 0)
      operator delete(*(v16 - 4));
    v16 -= 4;
  }
LABEL_21:
  if (v4)
    operator delete(v4);
  return v14;
}

void sub_2242AFBE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2242AFBF8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242AFBF8(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v5;

  v3 = *(void ***)(a1 + 8);
  v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      v5 = v2 - 4;
      *(_QWORD *)(a1 + 16) = v2 - 4;
      if (*((char *)v2 - 9) < 0)
      {
        operator delete(*v5);
        v5 = *(void ***)(a1 + 16);
      }
      v2 = v5;
    }
    while (v5 != v3);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_2242AFC5C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC715D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2242AFC6C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC715D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2242AFC9C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 40);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_2242AFCFC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242AFD20(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2242AFD38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 == 0x80000002246A6BECLL)
    return a1 + 24;
  if (((v3 & 0x80000002246A6BECLL & 0x8000000000000000) != 0) == __OFSUB__(v3, 0x80000002246A6BECLL))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x80000002246A6BECLL & 0x7FFFFFFFFFFFFFFFLL)))
    return a1 + 24;
  return 0;
}

void sub_2242AFDB8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71678;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2242AFDC8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71678;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2242AFDF8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 40);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_2242AFE58(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242AFE7C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2242AFE94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 == 0x80000002246A6CF6)
    return a1 + 24;
  if (((v3 & 0x80000002246A6CF6 & 0x8000000000000000) != 0) == __OFSUB__(v3, 0x80000002246A6CF6))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x80000002246A6CF6 & 0x7FFFFFFFFFFFFFFFLL)))
    return a1 + 24;
  return 0;
}

_BYTE *sub_2242AFF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _BYTE *result;

  *a3 = off_24EC718D0;
  a3[1] = a1;
  result = a3 + 2;
  if (*(char *)(a2 + 23) < 0)
  {
    result = sub_223197FA4(result, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)result = *(_OWORD *)a2;
    a3[4] = *(_QWORD *)(a2 + 16);
  }
  *a3 = off_24EC71900;
  a3[5] = a1;
  return result;
}

void sub_2242AFF7C(uint64_t a1, uint64_t *a2)
{
  void **v3;
  uint64_t v4;
  std::__fs::filesystem::path::__string_view v5;
  std::string *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v7;
  std::basic_string_view<_CharT, _Traits>::size_type v8;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::runtime_error *v13;
  std::runtime_error *exception;
  std::runtime_error *v15;
  void *v16[2];
  unsigned __int8 v17;
  std::string v18;
  std::string __p;
  std::string __dst;

  v3 = v16;
  sub_2242B4414(a2, (size_t *)v16);
  if ((v17 & 0x80u) == 0)
  {
    v4 = v17;
  }
  else
  {
    v3 = (void **)v16[0];
    v4 = (uint64_t)v16[1];
  }
  v5 = std::__fs::filesystem::path::__parent_path((const std::__fs::filesystem::path *)a1);
  if (v5.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  if (v5.__size_ >= 0x17)
  {
    v7 = (v5.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5.__size_ | 7) != 0x17)
      v7 = v5.__size_ | 7;
    v8 = v7 + 1;
    p_dst = (std::string *)operator new(v7 + 1);
    __dst.__r_.__value_.__l.__size_ = v5.__size_;
    __dst.__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v5.__size_;
    p_dst = &__dst;
    if (!v5.__size_)
      goto LABEL_12;
  }
  memmove(p_dst, v5.__data_, v5.__size_);
LABEL_12:
  p_dst->__r_.__value_.__s.__data_[v5.__size_] = 0;
  __p = __dst;
  if (((*(uint64_t (**)(_QWORD, std::string *))(**(_QWORD **)(a1 + 24) + 176))(*(_QWORD *)(a1 + 24), &__p) & 1) == 0
    && ((*(uint64_t (**)(_QWORD, std::string *))(**(_QWORD **)(a1 + 40) + 128))(*(_QWORD *)(a1 + 40), &__p) & 1) == 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242B0374((uint64_t)&__dst, (uint64_t)&__p);
    std::runtime_error::runtime_error(exception, &__dst);
    __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  if (*(_BYTE *)(a1 + 32) == 2)
  {
    if (!(*(unsigned int (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 24) + 320))(*(_QWORD *)(a1 + 24), a1))
    {
      v15 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      sub_2242B045C((uint64_t)&__dst, a1);
      std::runtime_error::runtime_error(v15, &__dst);
      __cxa_throw(v15, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
    }
    (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 40) + 232))(*(_QWORD *)(a1 + 40), a1);
    (*(void (**)(std::string *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 24) + 272))(&__dst, *(_QWORD *)(a1 + 24), a1);
    *(_QWORD *)(a1 + 32) = __dst.__r_.__value_.__r.__words[0];
  }
  sub_2242B0918((const std::__fs::filesystem::path *)a1, 0x30u, *(_QWORD *)(a1 + 40), &__dst);
  if (!__dst.__r_.__value_.__l.__size_)
  {
    v13 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242B0544((uint64_t)&v18, a1);
    std::runtime_error::runtime_error(v13, &v18);
    __cxa_throw(v13, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  v9 = (_QWORD *)(*(uint64_t (**)(std::string::size_type))(*(_QWORD *)__dst.__r_.__value_.__l.__size_ + 16))(__dst.__r_.__value_.__l.__size_);
  sub_2231813E8(v9, (uint64_t)v3, v4);
  (*(void (**)(std::string *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 24) + 272))(&v18, *(_QWORD *)(a1 + 24), a1);
  *(_QWORD *)(a1 + 32) = v18.__r_.__value_.__r.__words[0];
  v10 = (std::__shared_weak_count *)__dst.__r_.__value_.__r.__words[2];
  if (!__dst.__r_.__value_.__r.__words[2])
    goto LABEL_22;
  v11 = (unint64_t *)(__dst.__r_.__value_.__r.__words[2] + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_23:
      if (((char)v17 & 0x80000000) == 0)
        return;
LABEL_27:
      operator delete(v16[0]);
      return;
    }
  }
  else
  {
LABEL_22:
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_23;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if ((char)v17 < 0)
    goto LABEL_27;
}

void sub_2242B0294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  void *v32;
  int v33;

  if (a32 < 0)
  {
    operator delete(__p);
    if ((v33 & 1) == 0)
      goto LABEL_6;
  }
  else if (!v33)
  {
LABEL_6:
    if (a26 < 0)
    {
      operator delete(a21);
      if ((a14 & 0x80000000) == 0)
        goto LABEL_8;
    }
    else if ((a14 & 0x80000000) == 0)
    {
LABEL_8:
      _Unwind_Resume(a1);
    }
    operator delete(a9);
    _Unwind_Resume(a1);
  }
  __cxa_free_exception(v32);
  goto LABEL_6;
}

void sub_2242B0364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    JUMPOUT(0x2242B0354);
  JUMPOUT(0x2242B0344);
}

uint64_t sub_2242B0374(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _DWORD v4[6];
  int v5;
  char v6;
  char *v7;

  v5 = 0;
  sub_223208A48(v4, "failed to create parent directory ");
  sub_22384465C((uint64_t)&v7, (uint64_t)v4, a2);
  if (v5 == -1)
    sub_22316DD70();
  v7 = &v6;
  result = ((uint64_t (*)(char **, _DWORD *))off_24EC71940[v5])(&v7, v4);
  if (v5 != -1)
    return ((uint64_t (*)(char **, _DWORD *))off_24EC71928[v5])(&v7, v4);
  return result;
}

void sub_2242B0420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2242B0434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2242B0448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2242B045C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _DWORD v4[6];
  int v5;
  char v6;
  char *v7;

  v5 = 0;
  sub_223702498(v4, "can't assign file content to non-empty directory ");
  sub_22384465C((uint64_t)&v7, (uint64_t)v4, a2);
  if (v5 == -1)
    sub_22316DD70();
  v7 = &v6;
  result = ((uint64_t (*)(char **, _DWORD *))off_24EC71940[v5])(&v7, v4);
  if (v5 != -1)
    return ((uint64_t (*)(char **, _DWORD *))off_24EC71928[v5])(&v7, v4);
  return result;
}

void sub_2242B0508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2242B051C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2242B0530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2242B0544(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  _DWORD v5[6];
  int v6;
  _QWORD v7[5];
  _QWORD *v8;

  v6 = 0;
  sub_224173928(v5, "failed to assign file content to ");
  sub_22384465C((uint64_t)&v4, (uint64_t)v5, a2);
  v7[0] = v5;
  v7[1] = ": failed to open file for overwrite";
  v7[2] = v5;
  v7[3] = ": failed to open file for overwrite";
  v7[4] = ": failed to open file for overwrite";
  if (v6 == -1)
    sub_22316DD70();
  v8 = v7;
  ((void (*)(_QWORD **, _DWORD *))off_24EC71958[v6])(&v8, v5);
  if (v6 == -1)
    sub_22316DD70();
  v7[0] = &v8;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24EC71940[v6])(v7, v5);
  if (v6 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24EC71928[v6])(v7, v5);
  return result;
}

void sub_2242B0644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242B0658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242B066C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242B0680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242B0694(uint64_t result)
{
  uint64_t v1;

  v1 = result;
  *(_QWORD *)result = off_24EC718D0;
  if (*(char *)(result + 39) < 0)
  {
    operator delete(*(void **)(result + 16));
    return v1;
  }
  return result;
}

void sub_2242B06E0(uint64_t a1)
{
  *(_QWORD *)a1 = off_24EC718D0;
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242B072C(uint64_t result)
{
  uint64_t v1;

  v1 = result;
  *(_QWORD *)result = off_24EC718D0;
  if (*(char *)(result + 39) < 0)
  {
    operator delete(*(void **)(result + 16));
    return v1;
  }
  return result;
}

void sub_2242B0778(uint64_t a1)
{
  *(_QWORD *)a1 = off_24EC718D0;
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242B07C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = *(_QWORD *)(a1 + 40);
  if (*(char *)(a2 + 23) < 0)
  {
    sub_223197FA4((_BYTE *)a3, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)a3 = *(_OWORD *)a2;
    *(_QWORD *)(a3 + 16) = *(_QWORD *)(a2 + 16);
  }
  *(_QWORD *)(a3 + 24) = v5;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v5 + 272))(v5, a2);
  *(_QWORD *)(a3 + 40) = v5;
  return result;
}

void sub_2242B0838(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242B0854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  std::__fs::filesystem::path::__string_view v7;
  int v8;
  uint64_t *v9;
  int v10;
  std::__fs::filesystem::path::__string_view v11;

  v2 = a1 + 8;
  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
    return v2;
  v5 = a1 + 8;
  do
  {
    v6 = *(char *)(a2 + 23);
    if (v6 >= 0)
      v7.__data_ = (const std::string_view::value_type *)a2;
    else
      v7.__data_ = *(const std::string_view::value_type **)a2;
    if (v6 >= 0)
      v7.__size_ = *(unsigned __int8 *)(a2 + 23);
    else
      v7.__size_ = *(_QWORD *)(a2 + 8);
    v8 = std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v3 + 32), v7);
    v9 = (uint64_t *)(v3 + 8);
    if (v8 >= 0)
    {
      v9 = (uint64_t *)v3;
      v5 = v3;
    }
    v3 = *v9;
  }
  while (*v9);
  if (v5 == v2)
    return v2;
  v10 = *(char *)(v5 + 55);
  v11.__data_ = v10 >= 0
              ? (const std::string_view::value_type *)(v5 + 32)
              : *(const std::string_view::value_type **)(v5 + 32);
  v11.__size_ = v10 >= 0 ? *(unsigned __int8 *)(v5 + 55) : *(_QWORD *)(v5 + 40);
  if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a2, v11) < 0)
    return v2;
  else
    return v5;
}

void sub_2242B0918(const std::__fs::filesystem::path *a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__fs::filesystem::path::__string_view v9;
  __int128 *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v11;
  std::basic_string_view<_CharT, _Traits>::size_type v12;
  unint64_t v13;
  void *__p[2];
  unint64_t v15;
  uint64_t v16;
  __int128 __dst;
  unint64_t v18;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, const std::__fs::filesystem::path *))(*(_QWORD *)a3 + 272))(&v16, a3, a1);
  if ((_BYTE)v16)
  {
    if (v16 != 255 && v16 == 2)
    {
      a4[1] = 0;
      a4[2] = 0;
      *a4 = &off_24EC71C10;
      return;
    }
  }
  v9 = std::__fs::filesystem::path::__parent_path(a1);
  if (v9.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  if (v9.__size_ >= 0x17)
  {
    v11 = (v9.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9.__size_ | 7) != 0x17)
      v11 = v9.__size_ | 7;
    v12 = v11 + 1;
    p_dst = (__int128 *)operator new(v11 + 1);
    *((_QWORD *)&__dst + 1) = v9.__size_;
    v18 = v12 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_13;
  }
  HIBYTE(v18) = v9.__size_;
  p_dst = &__dst;
  if (v9.__size_)
LABEL_13:
    memmove(p_dst, v9.__data_, v9.__size_);
  *((_BYTE *)p_dst + v9.__size_) = 0;
  v15 = v18;
  *(_OWORD *)__p = __dst;
  v13 = HIBYTE(v18);
  if ((v18 & 0x8000000000000000) != 0)
    v13 = *((_QWORD *)&__dst + 1);
  if (!v13
    || ((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)a3 + 312))(a3, __p) & 1) != 0
    || ((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)a3 + 128))(a3, __p) & 1) != 0)
  {
    (*(void (**)(uint64_t, const std::__fs::filesystem::path *, _QWORD))(*(_QWORD *)a3 + 376))(a3, a1, a2);
    if (SHIBYTE(v15) < 0)
LABEL_20:
      operator delete(__p[0]);
  }
  else
  {
    a4[1] = 0;
    a4[2] = 0;
    *a4 = &off_24EC71C10;
    if (SHIBYTE(v15) < 0)
      goto LABEL_20;
  }
}

void sub_2242B0AC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242B0AE8(uint64_t a1@<X0>, unsigned int a2@<W1>, char *a3@<X2>, std::string::size_type a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  BOOL v12;
  void **v13;
  const std::__fs::filesystem::path *v14;
  unint64_t v15;
  uint64_t v16;
  void **v17;
  void *v18;
  void **v19;
  void **v20;
  void **v21;
  void **v22;
  char *v23;
  char *v24;
  __int128 v25;
  void **v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  BOOL v31;
  BOOL v32;
  int v33;
  void **v34;
  __int128 *v35;
  __int128 *v36;
  uint64_t v37;
  char v38;
  void **v39;
  __int128 *v40;
  __int128 *v41;
  uint64_t *v42;
  void **__p;
  void *__dst[2];
  uint64_t v45;
  _QWORD v46[6];
  BOOL v47;
  BOOL v48;
  BOOL v49;
  void **v50;
  void **v51;
  uint64_t v52;

  v50 = 0;
  v51 = 0;
  v52 = 0;
  sub_2242B0E5C(&v50, a1, (a2 >> 3) & 3, (a2 >> 2) & 1, a5);
  v49 = (a2 & 0x20) != 0;
  v48 = (a2 & 0x40) != 0;
  v47 = (a2 & 0x40 | (a2 >> 5) & 1) == 0;
  v12 = a4 == 1 && *a3 == 42;
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
  v46[0] = &v47;
  v46[1] = a6;
  v46[2] = &v49;
  v46[3] = a5;
  v46[4] = a1;
  v46[5] = &v48;
  v13 = v51;
  v42 = a6;
  __p = v50;
  if (v50 == v51)
    goto LABEL_8;
  if (!v12)
  {
    v22 = v50;
    while (1)
    {
      v24 = (char *)*v22;
      v23 = (char *)v22[1];
      while (v24 != v23)
      {
        if (v24[23] < 0)
        {
          sub_223197FA4(__dst, *(void **)v24, *((_QWORD *)v24 + 1));
        }
        else
        {
          v25 = *(_OWORD *)v24;
          v45 = *((_QWORD *)v24 + 2);
          *(_OWORD *)__dst = v25;
        }
        if (v45 >= 0)
          v26 = __dst;
        else
          v26 = (void **)__dst[0];
        if (v45 >= 0)
          v27 = HIBYTE(v45);
        else
          v27 = (uint64_t)__dst[1];
        v28 = sub_22456D42C((uint64_t)v26, v27, a3, a4, 0);
        v29 = v28;
        if (SHIBYTE(v45) < 0)
        {
          operator delete(__dst[0]);
          if ((v29 & 1) == 0)
            goto LABEL_29;
        }
        else if ((v28 & 1) == 0)
        {
          goto LABEL_29;
        }
        v30 = v24[24];
        v31 = v30 != 1 || (a2 & 2) != 0;
        v32 = v30 == 2 && (a2 & 1) == 0;
        if (v32 || !v31)
          sub_2242B1140((uint64_t)v46, (__int128 *)v24);
LABEL_29:
        v24 += 32;
      }
      v22 += 3;
      if (v22 == v13)
        goto LABEL_8;
    }
  }
  if ((a2 & 1) != 0)
  {
    if ((a2 & 2) == 0)
    {
      v39 = v50;
      do
      {
        v41 = (__int128 *)*v39;
        v40 = (__int128 *)v39[1];
        while (v41 != v40)
        {
          if (*((_BYTE *)v41 + 24) == 1)
            sub_2242B1140((uint64_t)v46, v41);
          v41 += 2;
        }
        v39 += 3;
      }
      while (v39 != v13);
    }
  }
  else
  {
    v33 = (a2 >> 1) & 1;
    v34 = v50;
    do
    {
      v35 = (__int128 *)*v34;
      v36 = (__int128 *)v34[1];
      while (v35 != v36)
      {
        v37 = *((unsigned __int8 *)v35 + 24);
        if (v37 == 1)
          v38 = v33;
        else
          v38 = 1;
        if (v37 == 2 || (v38 & 1) == 0)
          sub_2242B1140((uint64_t)v46, v35);
        v35 += 2;
      }
      v34 += 3;
    }
    while (v34 != v13);
  }
LABEL_8:
  v14 = (const std::__fs::filesystem::path *)v42[1];
  v15 = 126 - 2 * __clz(((uint64_t)v14 - *v42) >> 5);
  if (v14 == (const std::__fs::filesystem::path *)*v42)
    v16 = 0;
  else
    v16 = v15;
  sub_2242B1ADC(*v42, v14, (uint64_t)__dst, v16, 1);
  if (__p)
  {
    if (__p != v13)
    {
      v17 = v13;
      do
      {
        v20 = (void **)*(v17 - 3);
        v17 -= 3;
        v19 = v20;
        if (v20)
        {
          v21 = (void **)*(v13 - 2);
          v18 = v19;
          if (v21 != v19)
          {
            do
            {
              if (*((char *)v21 - 9) < 0)
                operator delete(*(v21 - 4));
              v21 -= 4;
            }
            while (v21 != v19);
            v18 = *v17;
          }
          *(v13 - 2) = v19;
          operator delete(v18);
        }
        v13 = v17;
      }
      while (v17 != __p);
    }
    operator delete(__p);
  }
}

void sub_2242B0DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  void **v14;
  va_list va;

  va_start(va, a14);
  sub_223714960(v14);
  sub_2242B14B4((void ***)va);
  _Unwind_Resume(a1);
}

void sub_2242B0E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2242B14B4((void ***)va);
  _Unwind_Resume(a1);
}

void sub_2242B0E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void **a25)
{
  sub_223714960(a9);
  sub_2242B14B4(&a25);
  _Unwind_Resume(a1);
}

void sub_2242B0E5C(void ***a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  char *v9;
  char *v10;
  __int128 v11;
  unint64_t v12;
  void **v13;
  void **v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  void **v21;
  void **v22;
  __int128 v23;
  void **v24;
  void **v25;
  void *v26;
  void **v27;
  void **v28;
  void **v29;
  void **v30;
  void **v31;
  void **v32;
  void *__p[2];
  uint64_t v34;
  uint64_t v35;
  void *v36[2];
  void *v37;

  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a5 + 384))(v36, a5);
  if (a4)
  {
    v9 = (char *)v36[0];
    v10 = (char *)v36[1];
    while (v9 != v10)
    {
      if (v9[23] < 0)
      {
        sub_223197FA4(__p, *(void **)v9, *((_QWORD *)v9 + 1));
      }
      else
      {
        v11 = *(_OWORD *)v9;
        v34 = *((_QWORD *)v9 + 2);
        *(_OWORD *)__p = v11;
      }
      v35 = *((_QWORD *)v9 + 3);
      if (v35 == 2)
        sub_2242B0E5C(a1, __p, a3, 1, a5);
      if (SHIBYTE(v34) < 0)
        operator delete(__p[0]);
      v9 += 32;
    }
  }
  v13 = a1[1];
  v12 = (unint64_t)a1[2];
  if ((unint64_t)v13 >= v12)
  {
    v14 = *a1;
    v15 = 0xAAAAAAAAAAAAAAABLL * (v13 - *a1);
    v16 = v15 + 1;
    if (v15 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_22316E078();
    v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - (_QWORD)v14) >> 3);
    if (2 * v17 > v16)
      v16 = 2 * v17;
    if (v17 >= 0x555555555555555)
      v18 = 0xAAAAAAAAAAAAAAALL;
    else
      v18 = v16;
    if (v18 > 0xAAAAAAAAAAAAAAALL)
      sub_223174E94();
    v19 = (char *)operator new(24 * v18);
    v20 = &v19[24 * v15];
    *(_OWORD *)v20 = *(_OWORD *)v36;
    *((_QWORD *)v20 + 2) = v37;
    v21 = (void **)&v19[24 * v18];
    v36[0] = 0;
    v36[1] = 0;
    v37 = 0;
    v22 = (void **)(v20 + 24);
    if (v13 == v14)
    {
      *a1 = (void **)v20;
      a1[1] = v22;
      a1[2] = v21;
    }
    else
    {
      do
      {
        v23 = *(_OWORD *)(v13 - 3);
        v13 -= 3;
        *(_OWORD *)(v20 - 24) = v23;
        v20 -= 24;
        *((_QWORD *)v20 + 2) = v13[2];
        *v13 = 0;
        v13[1] = 0;
        v13[2] = 0;
      }
      while (v13 != v14);
      v13 = *a1;
      v24 = a1[1];
      *a1 = (void **)v20;
      a1[1] = v22;
      a1[2] = v21;
      if (v24 != v13)
      {
        v25 = v24;
        do
        {
          v28 = (void **)*(v25 - 3);
          v25 -= 3;
          v27 = v28;
          if (v28)
          {
            v29 = (void **)*(v24 - 2);
            v26 = v27;
            if (v29 != v27)
            {
              do
              {
                if (*((char *)v29 - 9) < 0)
                  operator delete(*(v29 - 4));
                v29 -= 4;
              }
              while (v29 != v27);
              v26 = *v25;
            }
            *(v24 - 2) = v27;
            operator delete(v26);
          }
          v24 = v25;
        }
        while (v25 != v13);
      }
    }
    if (v13)
      operator delete(v13);
    v30 = (void **)v36[0];
    a1[1] = v22;
    if (v30)
    {
      v31 = (void **)v36[1];
      v32 = v30;
      if (v36[1] != v30)
      {
        do
        {
          if (*((char *)v31 - 9) < 0)
            operator delete(*(v31 - 4));
          v31 -= 4;
        }
        while (v31 != v30);
        v32 = (void **)v36[0];
      }
      v36[1] = v30;
      operator delete(v32);
    }
  }
  else
  {
    *v13 = 0;
    v13[1] = 0;
    v13[2] = 0;
    *(_OWORD *)v13 = *(_OWORD *)v36;
    v13[2] = v37;
    a1[1] = v13 + 3;
  }
}

void sub_2242B1104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2242B111C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16)
{
  if (a14 < 0)
    operator delete(__p);
  sub_223714960(&a16);
  _Unwind_Resume(a1);
}

void sub_2242B1140(uint64_t a1, __int128 *a2)
{
  char **v3;
  char *v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  _QWORD *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char *v22;
  char *v23;
  void **v24;
  void *__p[2];
  uint64_t v26;
  char *v27;
  char **v28;

  if (**(_BYTE **)a1)
  {
    v3 = *(char ***)(a1 + 8);
    v4 = v3[1];
    v5 = (unint64_t)v3[2];
    if ((unint64_t)v4 < v5)
    {
      if (*((char *)a2 + 23) < 0)
      {
        sub_223197FA4(v3[1], *(void **)a2, *((_QWORD *)a2 + 1));
      }
      else
      {
        v6 = *a2;
        *((_QWORD *)v4 + 2) = *((_QWORD *)a2 + 2);
        *(_OWORD *)v4 = v6;
      }
      *((_QWORD *)v4 + 3) = *((_QWORD *)a2 + 3);
      v3[1] = v4 + 32;
      v3[1] = v4 + 32;
      return;
    }
    v10 = *v3;
    v11 = (v4 - *v3) >> 5;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 59)
      sub_22316E078();
    v13 = v5 - (_QWORD)v10;
    if (v13 >> 4 > v12)
      v12 = v13 >> 4;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0)
      v14 = 0x7FFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    v28 = v3 + 2;
    if (v14)
    {
      if (v14 >> 59)
        sub_223174E94();
      v15 = (char *)operator new(32 * v14);
      v16 = &v15[32 * v11];
      __p[0] = v15;
      __p[1] = v16;
      v26 = (uint64_t)v16;
      v27 = &v15[32 * v14];
      if ((*((char *)a2 + 23) & 0x80000000) == 0)
        goto LABEL_18;
    }
    else
    {
      v15 = 0;
      v16 = (char *)(32 * v11);
      __p[0] = 0;
      __p[1] = (void *)(32 * v11);
      v26 = 32 * v11;
      v27 = 0;
      if ((*((char *)a2 + 23) & 0x80000000) == 0)
      {
LABEL_18:
        *(_OWORD *)v16 = *a2;
        *((_QWORD *)v16 + 2) = *((_QWORD *)a2 + 2);
        v17 = v16;
LABEL_29:
        *(_QWORD *)&v15[32 * v11 + 24] = *((_QWORD *)a2 + 3);
        v20 = (uint64_t)(v17 + 4);
        v26 = (uint64_t)(v17 + 4);
        if (v4 == v10)
        {
          v22 = v10;
        }
        else
        {
          do
          {
            v21 = *((_OWORD *)v4 - 2);
            *((_QWORD *)v16 - 2) = *((_QWORD *)v4 - 2);
            *((_OWORD *)v16 - 2) = v21;
            *((_QWORD *)v4 - 3) = 0;
            *((_QWORD *)v4 - 2) = 0;
            *((_QWORD *)v4 - 4) = 0;
            *((_QWORD *)v16 - 1) = *((_QWORD *)v4 - 1);
            v16 -= 32;
            v4 -= 32;
          }
          while (v4 != v10);
          v22 = *v3;
          v10 = v3[1];
          v20 = v26;
        }
        *v3 = v16;
        __p[0] = v22;
        __p[1] = v22;
        v3[1] = (char *)v20;
        v23 = v3[2];
        v3[2] = v27;
        v27 = v23;
        if (v10 != v22)
        {
          v24 = (void **)(v10 - 32);
          do
          {
            v26 = (uint64_t)v24;
            if (*((char *)v24 + 23) < 0)
              operator delete(*v24);
            v24 -= 4;
          }
          while (v24 + 4 != (void **)v22);
          v10 = v22;
        }
        if (v10)
          operator delete(v10);
        v3[1] = (char *)v20;
        return;
      }
    }
    sub_223197FA4(v16, *(void **)a2, *((_QWORD *)a2 + 1));
    v10 = *v3;
    v4 = v3[1];
    v16 = (char *)__p[1];
    v17 = (_QWORD *)v26;
    goto LABEL_29;
  }
  if (**(_BYTE **)(a1 + 16))
  {
    v7 = *(_QWORD *)(a1 + 8);
    (*(void (**)(void **__return_ptr, _QWORD, __int128 *, _QWORD))(**(_QWORD **)(a1 + 24) + 48))(__p, *(_QWORD *)(a1 + 24), a2, *(_QWORD *)(a1 + 32));
    v8 = (_QWORD *)a2 + 3;
    v9 = *(_QWORD *)(v7 + 8);
    if (v9 < *(_QWORD *)(v7 + 16))
    {
      if (SHIBYTE(v26) < 0)
      {
LABEL_8:
        sub_223197FA4(*(_BYTE **)(v7 + 8), __p[0], (unint64_t)__p[1]);
LABEL_23:
        *(_QWORD *)(v9 + 24) = *v8;
        v19 = v9 + 32;
        *(_QWORD *)(v7 + 8) = v9 + 32;
        goto LABEL_43;
      }
LABEL_22:
      v18 = *(_OWORD *)__p;
      *(_QWORD *)(v9 + 16) = v26;
      *(_OWORD *)v9 = v18;
      goto LABEL_23;
    }
  }
  else
  {
    if (!**(_BYTE **)(a1 + 40))
      return;
    v7 = *(_QWORD *)(a1 + 8);
    (*(void (**)(void **__return_ptr, _QWORD, __int128 *))(**(_QWORD **)(a1 + 24) + 16))(__p, *(_QWORD *)(a1 + 24), a2);
    v8 = (_QWORD *)a2 + 3;
    v9 = *(_QWORD *)(v7 + 8);
    if (v9 < *(_QWORD *)(v7 + 16))
    {
      if (SHIBYTE(v26) < 0)
        goto LABEL_8;
      goto LABEL_22;
    }
  }
  v19 = sub_2242B190C(v7, (uint64_t)__p, v8);
LABEL_43:
  *(_QWORD *)(v7 + 8) = v19;
  if (SHIBYTE(v26) < 0)
    operator delete(__p[0]);
}

void sub_2242B1468(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v15 + 8) = v16;
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242B14AC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void ***sub_2242B14B4(void ***a1)
{
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void *v6;
  void **v7;
  void **v8;
  void **v9;

  v2 = *a1;
  if (*a1)
  {
    v3 = a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      v5 = a1[1];
      do
      {
        v8 = (void **)*(v5 - 3);
        v5 -= 3;
        v7 = v8;
        if (v8)
        {
          v9 = (void **)*(v3 - 2);
          v6 = v7;
          if (v9 != v7)
          {
            do
            {
              if (*((char *)v9 - 9) < 0)
                operator delete(*(v9 - 4));
              v9 -= 4;
            }
            while (v9 != v7);
            v6 = *v5;
          }
          *(v3 - 2) = v7;
          operator delete(v6);
        }
        v3 = v5;
      }
      while (v5 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_2242B1564(uint64_t a1@<X0>, unsigned int a2@<W1>, char *a3@<X2>, std::string::size_type a4@<X3>, uint64_t a5@<X4>, int64x2_t *a6@<X8>)
{
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  void **v14;
  void **v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  __int128 v23;
  void **v24;
  char *v25;
  void **v26;
  void *v27;
  int64x2_t *v28;
  void *v29;
  char *v30;
  int64x2_t v31;
  char *v32;
  void *__p[2];
  uint64_t v34;

  sub_2242B0AE8(a1, a2, a3, a4, a5, (uint64_t *)&v29);
  v8 = (char *)v29;
  v7 = v30;
  v32 = 0;
  v31 = 0uLL;
  v9 = v30 - (_BYTE *)v29;
  if (v30 == v29)
  {
    v11 = 0;
    goto LABEL_36;
  }
  if (v9 < 0)
    sub_22316E078();
  v10 = v9 >> 5;
  v11 = operator new(24 * (v9 >> 5));
  v9 = (uint64_t)v11 + 24 * v10;
  v31.i64[0] = (uint64_t)v11;
  v31.i64[1] = (uint64_t)v11;
  v32 = (char *)v9;
  if (v7 == v8)
  {
LABEL_36:
    *a6 = vdupq_n_s64((unint64_t)v11);
    a6[1].i64[0] = v9;
    if (!v7)
      return;
    goto LABEL_37;
  }
  v28 = a6;
  do
  {
    if (v8[23] < 0)
    {
      sub_223197FA4(__p, *(void **)v8, *((_QWORD *)v8 + 1));
    }
    else
    {
      v13 = *(_OWORD *)v8;
      v34 = *((_QWORD *)v8 + 2);
      *(_OWORD *)__p = v13;
    }
    v14 = (void **)v31.i64[1];
    if (v31.i64[1] < (unint64_t)v32)
    {
      v12 = *(_OWORD *)__p;
      *(_QWORD *)(v31.i64[1] + 16) = v34;
      *(_OWORD *)v14 = v12;
      v31.i64[1] = (uint64_t)(v14 + 3);
    }
    else
    {
      v15 = (void **)v31.i64[0];
      v16 = 0xAAAAAAAAAAAAAAABLL * ((v31.i64[1] - v31.i64[0]) >> 3);
      v17 = v16 + 1;
      if (v16 + 1 > 0xAAAAAAAAAAAAAAALL)
        sub_22316E078();
      if (0x5555555555555556 * ((uint64_t)&v32[-v31.i64[0]] >> 3) > v17)
        v17 = 0x5555555555555556 * ((uint64_t)&v32[-v31.i64[0]] >> 3);
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v32[-v31.i64[0]] >> 3) >= 0x555555555555555)
        v18 = 0xAAAAAAAAAAAAAAALL;
      else
        v18 = v17;
      if (v18)
      {
        if (v18 > 0xAAAAAAAAAAAAAAALL)
          sub_223174E94();
        v19 = (char *)operator new(24 * v18);
      }
      else
      {
        v19 = 0;
      }
      v20 = &v19[24 * v16];
      *(_OWORD *)v20 = *(_OWORD *)__p;
      *((_QWORD *)v20 + 2) = v34;
      v21 = &v19[24 * v18];
      __p[1] = 0;
      v34 = 0;
      __p[0] = 0;
      v22 = v20 + 24;
      if (v14 == v15)
      {
        v31.i64[0] = (uint64_t)v20;
        v31.i64[1] = (uint64_t)(v20 + 24);
        v32 = &v19[24 * v18];
      }
      else
      {
        do
        {
          v23 = *(_OWORD *)(v14 - 3);
          *((_QWORD *)v20 - 1) = *(v14 - 1);
          *(_OWORD *)(v20 - 24) = v23;
          v20 -= 24;
          *(v14 - 2) = 0;
          *(v14 - 1) = 0;
          *(v14 - 3) = 0;
          v14 -= 3;
        }
        while (v14 != v15);
        v24 = (void **)v31.i64[1];
        v14 = (void **)v31.i64[0];
        v31.i64[0] = (uint64_t)v20;
        v31.i64[1] = (uint64_t)v22;
        v32 = v21;
        while (v24 != v14)
        {
          if (*((char *)v24 - 1) < 0)
            operator delete(*(v24 - 3));
          v24 -= 3;
        }
      }
      if (v14)
        operator delete(v14);
      v31.i64[1] = (uint64_t)v22;
      if (SHIBYTE(v34) < 0)
        operator delete(__p[0]);
    }
    v8 += 32;
  }
  while (v8 != v7);
  v7 = (char *)v29;
  v25 = v32;
  *v28 = v31;
  v28[1].i64[0] = (uint64_t)v25;
  if (v7)
  {
LABEL_37:
    v26 = (void **)v30;
    v27 = v7;
    if (v30 != v7)
    {
      do
      {
        if (*((char *)v26 - 9) < 0)
          operator delete(*(v26 - 4));
        v26 -= 4;
      }
      while (v26 != (void **)v7);
      v27 = v29;
    }
    v30 = v7;
    operator delete(v27);
  }
}

void sub_2242B1818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_223821EC8(&a13);
  sub_223714960(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_2242B1868(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 176))(a2, a1);
}

uint64_t sub_2242B1880(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 192))(a2, a1);
}

uint64_t sub_2242B1898(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 232))(a2, a1);
}

uint64_t sub_2242B18B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a3 + 248))(a3, a1, a2);
}

uint64_t sub_2242B18CC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a3 + 368))(a3, a1, a2);
}

uint64_t sub_2242B18EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a3 + 376))(a3, a1, a2);
}

uint64_t sub_2242B190C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void **v4;
  void **v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  void **v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;

  v4 = *(void ***)a1;
  v5 = *(void ***)(a1 + 8);
  v6 = ((uint64_t)v5 - *(_QWORD *)a1) >> 5;
  v7 = v6 + 1;
  if ((unint64_t)(v6 + 1) >> 59)
    sub_22316E078();
  v10 = *(_QWORD *)(a1 + 16) - (_QWORD)v4;
  if (v10 >> 4 > v7)
    v7 = v10 >> 4;
  if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0)
    v11 = 0x7FFFFFFFFFFFFFFLL;
  else
    v11 = v7;
  if (v11)
  {
    if (v11 >> 59)
      sub_223174E94();
    v12 = operator new(32 * v11);
    v13 = (uint64_t)&v12[4 * v6];
    v18 = v13;
    v19 = v13;
    v20 = (char *)&v12[4 * v11];
    if ((*(char *)(a2 + 23) & 0x80000000) == 0)
    {
LABEL_10:
      *(_OWORD *)v13 = *(_OWORD *)a2;
      *(_QWORD *)(v13 + 16) = *(_QWORD *)(a2 + 16);
      v12[4 * v6 + 3] = *a3;
      v14 = v13 + 32;
      if (v5 == v4)
        goto LABEL_20;
      goto LABEL_14;
    }
  }
  else
  {
    v12 = 0;
    v13 = 32 * v6;
    v18 = 32 * v6;
    v19 = 32 * v6;
    v20 = 0;
    if ((*(char *)(a2 + 23) & 0x80000000) == 0)
      goto LABEL_10;
  }
  sub_223197FA4((_BYTE *)v13, *(void **)a2, *(_QWORD *)(a2 + 8));
  v4 = *(void ***)a1;
  v5 = *(void ***)(a1 + 8);
  v13 = v18;
  v12[4 * v6 + 3] = *a3;
  v14 = v19 + 32;
  if (v5 == v4)
  {
LABEL_20:
    *(_QWORD *)a1 = v13;
    *(_QWORD *)(a1 + 8) = v14;
    *(_QWORD *)(a1 + 16) = v20;
    goto LABEL_21;
  }
  do
  {
LABEL_14:
    v15 = *((_OWORD *)v5 - 2);
    *(_QWORD *)(v13 - 16) = *(v5 - 2);
    *(_OWORD *)(v13 - 32) = v15;
    *(v5 - 3) = 0;
    *(v5 - 2) = 0;
    *(v5 - 4) = 0;
    *(_QWORD *)(v13 - 8) = *(v5 - 1);
    v13 -= 32;
    v5 -= 4;
  }
  while (v5 != v4);
  v4 = *(void ***)a1;
  v16 = *(void ***)(a1 + 8);
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v20;
  while (v16 != v4)
  {
    if (*((char *)v16 - 9) < 0)
      operator delete(*(v16 - 4));
    v16 -= 4;
  }
LABEL_21:
  if (v4)
    operator delete(v4);
  return v14;
}

void sub_2242B1AC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2242AFBF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242B1ADC(uint64_t a1, const std::__fs::filesystem::path *a2, uint64_t a3, uint64_t a4, int a5)
{
  const std::__fs::filesystem::path *v9;
  uint64_t *p_size;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  const std::__fs::filesystem::path *v17;
  uint64_t v18;
  const std::string_view::value_type *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  int v24;
  std::__fs::filesystem::path::__string_view v25;
  const std::__fs::filesystem::path *v26;
  char v27;
  BOOL v28;
  int v29;
  std::__fs::filesystem::path::__string_view v30;
  const std::string_view::value_type *v31;
  std::string::value_type v32;
  std::string::size_type v33;
  std::string::size_type v34;
  unint64_t v35;
  unint64_t v36;
  __n128 *v37;
  unint64_t v38;
  int v40;
  __int128 v41;
  _BYTE v42[15];

void sub_2242B1FDC(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_22316DC48(a1);
  _Unwind_Resume(a1);
}

void sub_2242B1FEC(uint64_t a1, const std::__fs::filesystem::path *a2)
{
  const std::__fs::filesystem::path *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const std::__fs::filesystem::path *v8;
  int v9;
  std::__fs::filesystem::path::__string_view v10;
  std::string::size_type v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  int v17;
  std::__fs::filesystem::path::__string_view v18;
  uint64_t v19;
  std::__fs::filesystem::path v20;
  uint64_t v21;

  if ((const std::__fs::filesystem::path *)a1 != a2)
  {
    v4 = (const std::__fs::filesystem::path *)(a1 + 32);
    if ((const std::__fs::filesystem::path *)(a1 + 32) != a2)
    {
      v5 = 0;
      v6 = a1;
      do
      {
        v8 = v4;
        v9 = *(char *)(v6 + 23);
        if (v9 >= 0)
          v10.__data_ = (const std::string_view::value_type *)v6;
        else
          v10.__data_ = *(const std::string_view::value_type **)v6;
        if (v9 >= 0)
          v10.__size_ = *(unsigned __int8 *)(v6 + 23);
        else
          v10.__size_ = *(_QWORD *)(v6 + 8);
        if (std::__fs::filesystem::path::__compare(v4, v10) < 0)
        {
          *(_OWORD *)&v20.__pn_.__r_.__value_.__l.__data_ = *(_OWORD *)&v8->__pn_.__r_.__value_.__l.__data_;
          v11 = v8->__pn_.__r_.__value_.__r.__words[2];
          v8->__pn_.__r_.__value_.__l.__size_ = 0;
          v8->__pn_.__r_.__value_.__r.__words[2] = 0;
          v8->__pn_.__r_.__value_.__r.__words[0] = 0;
          v12 = *(_QWORD *)(v6 + 56);
          v20.__pn_.__r_.__value_.__r.__words[2] = v11;
          v21 = v12;
          v13 = v5;
          while (1)
          {
            v14 = a1 + v13;
            v15 = (void **)(a1 + v13 + 32);
            if (*(char *)(a1 + v13 + 55) < 0)
              operator delete(*v15);
            *(_OWORD *)v15 = *(_OWORD *)v14;
            v16 = *(_QWORD *)(v14 + 24);
            *(_QWORD *)(a1 + v13 + 48) = *(_QWORD *)(v14 + 16);
            *(_BYTE *)(v14 + 23) = 0;
            *(_BYTE *)v14 = 0;
            *(_QWORD *)(v14 + 56) = v16;
            if (!v13)
              break;
            v17 = *(char *)(a1 + v13 - 9);
            if (v17 >= 0)
              v18.__data_ = (const std::string_view::value_type *)(a1 + v13 - 32);
            else
              v18.__data_ = *(const std::string_view::value_type **)(a1 + v13 - 32);
            if (v17 >= 0)
              v18.__size_ = *(unsigned __int8 *)(a1 + v13 - 9);
            else
              v18.__size_ = *(_QWORD *)(a1 + v13 - 24);
            v13 -= 32;
            if ((std::__fs::filesystem::path::__compare(&v20, v18) & 0x80000000) == 0)
            {
              v19 = a1 + v13 + 32;
              if ((*(char *)(v19 + 23) & 0x80000000) == 0)
                goto LABEL_4;
              goto LABEL_27;
            }
          }
          v19 = a1;
          if ((*(char *)(a1 + 23) & 0x80000000) == 0)
            goto LABEL_4;
LABEL_27:
          operator delete(*(void **)v19);
LABEL_4:
          *(_OWORD *)v19 = *(_OWORD *)&v20.__pn_.__r_.__value_.__l.__data_;
          v7 = v21;
          *(_QWORD *)(v19 + 16) = *((_QWORD *)&v20.__pn_.__r_.__value_.__l + 2);
          *(_QWORD *)(v19 + 24) = v7;
        }
        v4 = (const std::__fs::filesystem::path *)((char *)v8 + 32);
        v5 += 32;
        v6 = (uint64_t)v8;
      }
      while (&v8[1].__pn_.__r_.__value_.__r.__words[1] != (std::string::size_type *)a2);
    }
  }
}

void sub_2242B2154(uint64_t a1, const std::__fs::filesystem::path *a2)
{
  const std::__fs::filesystem::path *v3;
  const std::__fs::filesystem::path *v4;
  std::string::size_type *v5;
  std::string::size_type v6;
  const std::__fs::filesystem::path *v7;
  int v8;
  std::__fs::filesystem::path::__string_view v9;
  std::string::size_type v10;
  std::string::size_type size;
  std::string::size_type *v12;
  void **v13;
  int v14;
  std::__fs::filesystem::path::__string_view v15;
  void **v16;
  std::__fs::filesystem::path v17;
  std::string::size_type v18;

  if ((const std::__fs::filesystem::path *)a1 != a2)
  {
    v3 = (const std::__fs::filesystem::path *)a1;
    v4 = (const std::__fs::filesystem::path *)(a1 + 32);
    if ((const std::__fs::filesystem::path *)(a1 + 32) != a2)
    {
      v5 = (std::string::size_type *)(a1 + 56);
      do
      {
        v7 = v4;
        v8 = SHIBYTE(v3->__pn_.__r_.__value_.__r.__words[2]);
        if (v8 >= 0)
          v9.__data_ = (const std::string_view::value_type *)v3;
        else
          v9.__data_ = (const std::string_view::value_type *)v3->__pn_.__r_.__value_.__r.__words[0];
        if (v8 >= 0)
          v9.__size_ = HIBYTE(v3->__pn_.__r_.__value_.__r.__words[2]);
        else
          v9.__size_ = v3->__pn_.__r_.__value_.__l.__size_;
        if (std::__fs::filesystem::path::__compare(v4, v9) < 0)
        {
          *(_OWORD *)&v17.__pn_.__r_.__value_.__l.__data_ = *(_OWORD *)&v7->__pn_.__r_.__value_.__l.__data_;
          v10 = v7->__pn_.__r_.__value_.__r.__words[2];
          v7->__pn_.__r_.__value_.__l.__size_ = 0;
          v7->__pn_.__r_.__value_.__r.__words[2] = 0;
          v7->__pn_.__r_.__value_.__r.__words[0] = 0;
          size = v3[2].__pn_.__r_.__value_.__l.__size_;
          v17.__pn_.__r_.__value_.__r.__words[2] = v10;
          v18 = size;
          v12 = v5;
          do
          {
            v13 = (void **)(v12 - 3);
            if (*((char *)v12 - 1) < 0)
              operator delete(*v13);
            *(_OWORD *)v13 = *(_OWORD *)(v12 - 7);
            *(v12 - 1) = *(v12 - 5);
            *((_BYTE *)v12 - 33) = 0;
            *((_BYTE *)v12 - 56) = 0;
            *v12 = *(v12 - 4);
            v14 = *((char *)v12 - 65);
            if (v14 >= 0)
              v15.__data_ = (const std::string_view::value_type *)(v12 - 11);
            else
              v15.__data_ = (const std::string_view::value_type *)*(v12 - 11);
            if (v14 >= 0)
              v15.__size_ = *((unsigned __int8 *)v12 - 65);
            else
              v15.__size_ = *(v12 - 10);
            v12 -= 4;
          }
          while (std::__fs::filesystem::path::__compare(&v17, v15) < 0);
          v16 = (void **)(v12 - 3);
          if (*((char *)v12 - 1) < 0)
            operator delete(*v16);
          *(_OWORD *)v16 = *(_OWORD *)&v17.__pn_.__r_.__value_.__l.__data_;
          v6 = v18;
          *(v12 - 1) = v17.__pn_.__r_.__value_.__r.__words[2];
          *v12 = v6;
        }
        v4 = (const std::__fs::filesystem::path *)((char *)v7 + 32);
        v5 += 4;
        v3 = v7;
      }
      while (&v7[1].__pn_.__r_.__value_.__r.__words[1] != (std::string::size_type *)a2);
    }
  }
}

uint64_t sub_2242B22A0(uint64_t *a1, std::__fs::filesystem::path *this, uint64_t a3)
{
  int v6;
  _QWORD *v7;
  std::__fs::filesystem::path::__string_view v8;
  int v9;
  int v10;
  std::string::size_type *p_size;
  std::__fs::filesystem::path::__string_view v12;
  int v13;
  const std::string_view::value_type *v15;
  std::basic_string_view<_CharT, _Traits>::size_type v16;
  std::string::size_type v17;
  std::string::size_type v18;
  std::__fs::filesystem::path::__string_view v19;
  std::string::size_type v20;
  char v21;
  std::string::pointer v22;
  std::string::size_type v23;
  std::string::size_type v24;
  char v25;
  std::string::pointer data;
  std::string::size_type v27;
  int v28;
  std::__fs::filesystem::path::__string_view v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  std::string::size_type v34;
  char v35;
  std::string::size_type v36;
  std::string::size_type v37;
  _BYTE v38[15];
  _BYTE v39[15];
  _BYTE v40[15];
  _BYTE v41[15];
  _BYTE v42[15];

  v6 = *((char *)a1 + 23);
  v7 = a1 + 1;
  if (v6 >= 0)
    v8.__data_ = (const std::string_view::value_type *)a1;
  else
    v8.__data_ = (const std::string_view::value_type *)*a1;
  if (v6 >= 0)
    v8.__size_ = *((unsigned __int8 *)a1 + 23);
  else
    v8.__size_ = a1[1];
  v9 = std::__fs::filesystem::path::__compare(this, v8);
  v10 = SHIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
  p_size = &this->__pn_.__r_.__value_.__l.__size_;
  if (v10 >= 0)
    v12.__data_ = (const std::string_view::value_type *)this;
  else
    v12.__data_ = (const std::string_view::value_type *)this->__pn_.__r_.__value_.__r.__words[0];
  if (v10 >= 0)
    v12.__size_ = HIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
  else
    v12.__size_ = this->__pn_.__r_.__value_.__l.__size_;
  v13 = std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a3, v12);
  if ((v9 & 0x80000000) == 0)
  {
    if ((v13 & 0x80000000) == 0)
      return 0;
    v24 = this->__pn_.__r_.__value_.__r.__words[0];
    *(_QWORD *)v40 = *p_size;
    *(_QWORD *)&v40[7] = *(std::string::size_type *)((char *)&this->__pn_.__r_.__value_.__r.__words[1] + 7);
    v25 = HIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
    this->__pn_.__r_.__value_.__l.__size_ = 0;
    this->__pn_.__r_.__value_.__r.__words[2] = 0;
    this->__pn_.__r_.__value_.__r.__words[0] = 0;
    data = this[1].__pn_.__r_.__value_.__l.__data_;
    v27 = *(_QWORD *)(a3 + 16);
    *(_OWORD *)&this->__pn_.__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    this->__pn_.__r_.__value_.__r.__words[2] = v27;
    *(_BYTE *)(a3 + 23) = 0;
    *(_BYTE *)a3 = 0;
    this[1].__pn_.__r_.__value_.__r.__words[0] = *(_QWORD *)(a3 + 24);
    if (*(char *)(a3 + 23) < 0)
      operator delete(*(void **)a3);
    *(_QWORD *)a3 = v24;
    *(_QWORD *)(a3 + 8) = *(_QWORD *)v40;
    *(_QWORD *)(a3 + 15) = *(_QWORD *)&v40[7];
    *(_BYTE *)(a3 + 23) = v25;
    *(_QWORD *)(a3 + 24) = data;
    v28 = *((char *)a1 + 23);
    if (v28 >= 0)
      v29.__data_ = (const std::string_view::value_type *)a1;
    else
      v29.__data_ = (const std::string_view::value_type *)*a1;
    if (v28 >= 0)
      v29.__size_ = *((unsigned __int8 *)a1 + 23);
    else
      v29.__size_ = a1[1];
    if ((std::__fs::filesystem::path::__compare(this, v29) & 0x80000000) == 0)
      return 1;
    v34 = *a1;
    *(_QWORD *)v42 = *v7;
    *(_QWORD *)&v42[7] = *(_QWORD *)((char *)v7 + 7);
    v35 = *((_BYTE *)a1 + 23);
    a1[1] = 0;
    a1[2] = 0;
    *a1 = 0;
    v36 = a1[3];
    v37 = this->__pn_.__r_.__value_.__r.__words[2];
    *(_OWORD *)a1 = *(_OWORD *)&this->__pn_.__r_.__value_.__l.__data_;
    a1[2] = v37;
    *((_BYTE *)&this->__pn_.__r_.__value_.__s + 23) = 0;
    this->__pn_.__r_.__value_.__s.__data_[0] = 0;
    a1[3] = (uint64_t)this[1].__pn_.__r_.__value_.__l.__data_;
    if (SHIBYTE(this->__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(this->__pn_.__r_.__value_.__l.__data_);
    this->__pn_.__r_.__value_.__r.__words[0] = v34;
    *p_size = *(_QWORD *)v42;
    *(std::string::size_type *)((char *)&this->__pn_.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)&v42[7];
    *((_BYTE *)&this->__pn_.__r_.__value_.__s + 23) = v35;
    this[1].__pn_.__r_.__value_.__r.__words[0] = v36;
    return 2;
  }
  if ((v13 & 0x80000000) == 0)
  {
    v15 = (const std::string_view::value_type *)*a1;
    *(_QWORD *)v38 = *v7;
    *(_QWORD *)&v38[7] = *(_QWORD *)((char *)v7 + 7);
    v16 = *((unsigned __int8 *)a1 + 23);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    v17 = a1[3];
    v18 = this->__pn_.__r_.__value_.__r.__words[2];
    *(_OWORD *)a1 = *(_OWORD *)&this->__pn_.__r_.__value_.__l.__data_;
    a1[2] = v18;
    *((_BYTE *)&this->__pn_.__r_.__value_.__s + 23) = 0;
    this->__pn_.__r_.__value_.__s.__data_[0] = 0;
    a1[3] = (uint64_t)this[1].__pn_.__r_.__value_.__l.__data_;
    if (SHIBYTE(this->__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(this->__pn_.__r_.__value_.__l.__data_);
    this->__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v15;
    *p_size = *(_QWORD *)v38;
    *(std::string::size_type *)((char *)&this->__pn_.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)&v38[7];
    *((_BYTE *)&this->__pn_.__r_.__value_.__s + 23) = v16;
    this[1].__pn_.__r_.__value_.__r.__words[0] = v17;
    if ((v16 & 0x80u) == 0)
      v19.__data_ = (const std::string_view::value_type *)this;
    else
      v19.__data_ = v15;
    if ((v16 & 0x80u) == 0)
      v19.__size_ = v16;
    else
      v19.__size_ = this->__pn_.__r_.__value_.__l.__size_;
    if ((std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a3, v19) & 0x80000000) == 0)
      return 1;
    v20 = this->__pn_.__r_.__value_.__r.__words[0];
    *(_QWORD *)v39 = *p_size;
    *(_QWORD *)&v39[7] = *(std::string::size_type *)((char *)&this->__pn_.__r_.__value_.__r.__words[1] + 7);
    v21 = HIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
    this->__pn_.__r_.__value_.__l.__size_ = 0;
    this->__pn_.__r_.__value_.__r.__words[2] = 0;
    this->__pn_.__r_.__value_.__r.__words[0] = 0;
    v22 = this[1].__pn_.__r_.__value_.__l.__data_;
    v23 = *(_QWORD *)(a3 + 16);
    *(_OWORD *)&this->__pn_.__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    this->__pn_.__r_.__value_.__r.__words[2] = v23;
    *(_BYTE *)(a3 + 23) = 0;
    *(_BYTE *)a3 = 0;
    this[1].__pn_.__r_.__value_.__r.__words[0] = *(_QWORD *)(a3 + 24);
    if (*(char *)(a3 + 23) < 0)
      operator delete(*(void **)a3);
    *(_QWORD *)a3 = v20;
    *(_QWORD *)(a3 + 8) = *(_QWORD *)v39;
    *(_QWORD *)(a3 + 15) = *(_QWORD *)&v39[7];
    *(_BYTE *)(a3 + 23) = v21;
    *(_QWORD *)(a3 + 24) = v22;
    return 2;
  }
  v30 = *a1;
  *(_QWORD *)v41 = *v7;
  *(_QWORD *)&v41[7] = *(_QWORD *)((char *)v7 + 7);
  v31 = *((_BYTE *)a1 + 23);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  v32 = a1[3];
  v33 = *(_QWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  a1[2] = v33;
  *(_BYTE *)(a3 + 23) = 0;
  *(_BYTE *)a3 = 0;
  a1[3] = *(_QWORD *)(a3 + 24);
  if (*(char *)(a3 + 23) < 0)
    operator delete(*(void **)a3);
  *(_QWORD *)a3 = v30;
  *(_QWORD *)(a3 + 8) = *(_QWORD *)v41;
  *(_QWORD *)(a3 + 15) = *(_QWORD *)&v41[7];
  *(_BYTE *)(a3 + 23) = v31;
  *(_QWORD *)(a3 + 24) = v32;
  return 1;
}

void sub_2242B25F8(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_22316DC48(a1);
  _Unwind_Resume(a1);
}

uint64_t *sub_2242B2618(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  std::string::size_type v4;
  uint64_t v5;
  std::basic_string_view<_CharT, _Traits>::size_type v6;
  std::basic_string_view<_CharT, _Traits>::size_type v7;
  std::__fs::filesystem::path::__string_view v8;
  uint64_t *v9;
  uint64_t *v10;
  int v11;
  std::__fs::filesystem::path::__string_view v12;
  int v13;
  uint64_t v14;
  int v15;
  std::__fs::filesystem::path::__string_view v16;
  unint64_t v17;
  int v18;
  std::__fs::filesystem::path::__string_view v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  int v26;
  std::__fs::filesystem::path::__string_view v27;
  int v28;
  std::__fs::filesystem::path::__string_view v29;
  void **v30;
  __int128 v31;
  __int128 v32;
  std::__fs::filesystem::path __p;
  uint64_t v35;
  _QWORD v36[3];

  v2 = a2;
  v36[2] = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)&__p.__pn_.__r_.__value_.__l.__data_ = *(_OWORD *)a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  __p.__pn_.__r_.__value_.__r.__words[2] = v4;
  v35 = v5;
  v6 = *(unsigned __int8 *)(a2 - 9);
  v7 = *(_QWORD *)(a2 - 24);
  if ((v6 & 0x80u) == 0)
    v8.__data_ = (const std::string_view::value_type *)(a2 - 32);
  else
    v8.__data_ = *(const std::string_view::value_type **)(a2 - 32);
  if ((v6 & 0x80u) == 0)
    v8.__size_ = v6;
  else
    v8.__size_ = v7;
  if ((std::__fs::filesystem::path::__compare(&__p, v8) & 0x80000000) == 0)
  {
    v9 = (uint64_t *)(a1 + 32);
    do
    {
      v10 = v9;
      if ((unint64_t)v9 >= v2)
        break;
      v11 = *((char *)v9 + 23);
      v12.__data_ = v11 >= 0 ? (const std::string_view::value_type *)v9 : (const std::string_view::value_type *)*v9;
      v12.__size_ = v11 >= 0 ? *((unsigned __int8 *)v9 + 23) : v9[1];
      v13 = std::__fs::filesystem::path::__compare(&__p, v12);
      v9 = v10 + 4;
    }
    while ((v13 & 0x80000000) == 0);
    if ((unint64_t)v10 >= v2)
      goto LABEL_37;
LABEL_28:
    v17 = v2 - 32;
    do
    {
      v18 = *(char *)(v17 + 23);
      if (v18 >= 0)
        v19.__data_ = (const std::string_view::value_type *)v17;
      else
        v19.__data_ = *(const std::string_view::value_type **)v17;
      if (v18 >= 0)
        v19.__size_ = *(unsigned __int8 *)(v17 + 23);
      else
        v19.__size_ = *(_QWORD *)(v17 + 8);
      v17 -= 32;
    }
    while (std::__fs::filesystem::path::__compare(&__p, v19) < 0);
    goto LABEL_36;
  }
  v14 = a1 + 32;
  do
  {
    v15 = *(char *)(v14 + 23);
    if (v15 >= 0)
      v16.__data_ = (const std::string_view::value_type *)v14;
    else
      v16.__data_ = *(const std::string_view::value_type **)v14;
    if (v15 >= 0)
      v16.__size_ = *(unsigned __int8 *)(v14 + 23);
    else
      v16.__size_ = *(_QWORD *)(v14 + 8);
    v14 += 32;
  }
  while ((std::__fs::filesystem::path::__compare(&__p, v16) & 0x80000000) == 0);
  v10 = (uint64_t *)(v14 - 32);
  if ((unint64_t)v10 < v2)
    goto LABEL_28;
LABEL_37:
  while ((unint64_t)v10 < v2)
  {
    v20 = *v10;
    v36[0] = v10[1];
    *(_QWORD *)((char *)v36 + 7) = *(uint64_t *)((char *)v10 + 15);
    v21 = *((_BYTE *)v10 + 23);
    v10[1] = 0;
    v10[2] = 0;
    *v10 = 0;
    v22 = v10[3];
    v23 = *(_QWORD *)(v2 + 16);
    *(_OWORD *)v10 = *(_OWORD *)v2;
    v10[2] = v23;
    *(_BYTE *)(v2 + 23) = 0;
    *(_BYTE *)v2 = 0;
    v10[3] = *(_QWORD *)(v2 + 24);
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    *(_QWORD *)v2 = v20;
    v24 = *(_QWORD *)((char *)v36 + 7);
    *(_QWORD *)(v2 + 8) = v36[0];
    *(_QWORD *)(v2 + 15) = v24;
    *(_BYTE *)(v2 + 23) = v21;
    *(_QWORD *)(v2 + 24) = v22;
    v25 = v10 + 4;
    do
    {
      v26 = *((char *)v25 + 23);
      if (v26 >= 0)
        v27.__data_ = (const std::string_view::value_type *)v25;
      else
        v27.__data_ = (const std::string_view::value_type *)*v25;
      if (v26 >= 0)
        v27.__size_ = *((unsigned __int8 *)v25 + 23);
      else
        v27.__size_ = v25[1];
      v25 += 4;
    }
    while ((std::__fs::filesystem::path::__compare(&__p, v27) & 0x80000000) == 0);
    v10 = v25 - 4;
    v17 = v2 - 32;
    do
    {
      v28 = *(char *)(v17 + 23);
      if (v28 >= 0)
        v29.__data_ = (const std::string_view::value_type *)v17;
      else
        v29.__data_ = *(const std::string_view::value_type **)v17;
      if (v28 >= 0)
        v29.__size_ = *(unsigned __int8 *)(v17 + 23);
      else
        v29.__size_ = *(_QWORD *)(v17 + 8);
      v17 -= 32;
    }
    while (std::__fs::filesystem::path::__compare(&__p, v29) < 0);
LABEL_36:
    v2 = v17 + 32;
  }
  v30 = (void **)(v10 - 4);
  if (v10 - 4 != (uint64_t *)a1)
  {
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    v31 = *(_OWORD *)v30;
    *(_QWORD *)(a1 + 16) = *(v10 - 2);
    *(_OWORD *)a1 = v31;
    *((_BYTE *)v10 - 9) = 0;
    *((_BYTE *)v10 - 32) = 0;
    *(_QWORD *)(a1 + 24) = *(v10 - 1);
  }
  if (*((char *)v10 - 9) < 0)
    operator delete(*v30);
  v32 = *(_OWORD *)&__p.__pn_.__r_.__value_.__l.__data_;
  *(v10 - 2) = __p.__pn_.__r_.__value_.__r.__words[2];
  *(_OWORD *)v30 = v32;
  *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = 0;
  __p.__pn_.__r_.__value_.__s.__data_[0] = 0;
  *(v10 - 1) = v35;
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  return v10;
}

void sub_2242B28E4(_Unwind_Exception *a1, int a2)
{
  if (a2)
    JUMPOUT(0x2242B28E8);
  _Unwind_Resume(a1);
}

void sub_2242B28EC(uint64_t a1, int a2)
{
  if (!a2)
    JUMPOUT(0x2242B28F0);
  sub_22316DC48(a1);
}

unint64_t sub_2242B28F4(uint64_t a1, const std::__fs::filesystem::path *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const std::__fs::filesystem::path *v7;
  std::__fs::filesystem::path::__string_view v8;
  unint64_t v9;
  std::__fs::filesystem::path::__string_view v10;
  std::__fs::filesystem::path::__string_view v11;
  unint64_t v12;
  std::__fs::filesystem::path *v13;
  uint64_t v14;
  std::string::size_type v15;
  char v16;
  std::string::size_type v17;
  std::string::size_type v18;
  std::string::size_type v19;
  std::__fs::filesystem::path::__string_view v20;
  std::__fs::filesystem::path::__string_view v21;
  unint64_t v22;
  __int128 v23;
  __int128 v25;
  void *__p[2];
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[15];
  uint64_t v30;

  v4 = 0;
  v30 = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)__p = *(_OWORD *)a1;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v27 = v5;
  v28 = v6;
  do
  {
    v7 = (const std::__fs::filesystem::path *)(a1 + v4 + 32);
    if (v27 >= 0)
      v8.__data_ = (const std::string_view::value_type *)__p;
    else
      v8.__data_ = (const std::string_view::value_type *)__p[0];
    if (v27 >= 0)
      v8.__size_ = HIBYTE(v27);
    else
      v8.__size_ = (std::basic_string_view<_CharT, _Traits>::size_type)__p[1];
    v4 += 32;
  }
  while (std::__fs::filesystem::path::__compare(v7, v8) < 0);
  v9 = a1 + v4;
  if (v4 == 32)
  {
    do
    {
      if (v9 >= (unint64_t)a2)
        break;
      a2 = (const std::__fs::filesystem::path *)((char *)a2 - 32);
      if (v27 >= 0)
        v11.__data_ = (const std::string_view::value_type *)__p;
      else
        v11.__data_ = (const std::string_view::value_type *)__p[0];
      if (v27 >= 0)
        v11.__size_ = HIBYTE(v27);
      else
        v11.__size_ = (std::basic_string_view<_CharT, _Traits>::size_type)__p[1];
    }
    while ((std::__fs::filesystem::path::__compare(a2, v11) & 0x80000000) == 0);
  }
  else
  {
    do
    {
      a2 = (const std::__fs::filesystem::path *)((char *)a2 - 32);
      if (v27 >= 0)
        v10.__data_ = (const std::string_view::value_type *)__p;
      else
        v10.__data_ = (const std::string_view::value_type *)__p[0];
      if (v27 >= 0)
        v10.__size_ = HIBYTE(v27);
      else
        v10.__size_ = (std::basic_string_view<_CharT, _Traits>::size_type)__p[1];
    }
    while ((std::__fs::filesystem::path::__compare(a2, v10) & 0x80000000) == 0);
  }
  if (v9 >= (unint64_t)a2)
  {
    v12 = a1 + v4;
    v22 = v9 - 32;
    if (v9 - 32 == a1)
      goto LABEL_47;
  }
  else
  {
    v12 = a1 + v4;
    v13 = (std::__fs::filesystem::path *)a2;
    do
    {
      v15 = *(_QWORD *)v12;
      v14 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v29[7] = *(_QWORD *)(v12 + 15);
      *(_QWORD *)v29 = v14;
      v16 = *(_BYTE *)(v12 + 23);
      *(_QWORD *)(v12 + 8) = 0;
      *(_QWORD *)(v12 + 16) = 0;
      *(_QWORD *)v12 = 0;
      v17 = *(_QWORD *)(v12 + 24);
      v18 = v13->__pn_.__r_.__value_.__r.__words[2];
      *(_OWORD *)v12 = *(_OWORD *)&v13->__pn_.__r_.__value_.__l.__data_;
      *(_QWORD *)(v12 + 16) = v18;
      *((_BYTE *)&v13->__pn_.__r_.__value_.__s + 23) = 0;
      v13->__pn_.__r_.__value_.__s.__data_[0] = 0;
      *(_QWORD *)(v12 + 24) = v13[1].__pn_.__r_.__value_.__l.__data_;
      if (SHIBYTE(v13->__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v13->__pn_.__r_.__value_.__l.__data_);
      v13->__pn_.__r_.__value_.__r.__words[0] = v15;
      v19 = *(_QWORD *)&v29[7];
      v13->__pn_.__r_.__value_.__l.__size_ = *(_QWORD *)v29;
      *(std::string::size_type *)((char *)&v13->__pn_.__r_.__value_.__r.__words[1] + 7) = v19;
      *((_BYTE *)&v13->__pn_.__r_.__value_.__s + 23) = v16;
      v13[1].__pn_.__r_.__value_.__r.__words[0] = v17;
      do
      {
        v12 += 32;
        if (v27 >= 0)
          v20.__data_ = (const std::string_view::value_type *)__p;
        else
          v20.__data_ = (const std::string_view::value_type *)__p[0];
        if (v27 >= 0)
          v20.__size_ = HIBYTE(v27);
        else
          v20.__size_ = (std::basic_string_view<_CharT, _Traits>::size_type)__p[1];
      }
      while (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)v12, v20) < 0);
      do
      {
        v13 = (std::__fs::filesystem::path *)((char *)v13 - 32);
        if (v27 >= 0)
          v21.__data_ = (const std::string_view::value_type *)__p;
        else
          v21.__data_ = (const std::string_view::value_type *)__p[0];
        if (v27 >= 0)
          v21.__size_ = HIBYTE(v27);
        else
          v21.__size_ = (std::basic_string_view<_CharT, _Traits>::size_type)__p[1];
      }
      while ((std::__fs::filesystem::path::__compare(v13, v21) & 0x80000000) == 0);
    }
    while (v12 < (unint64_t)v13);
    v22 = v12 - 32;
    if (v12 - 32 == a1)
    {
LABEL_47:
      if ((*(char *)(v12 - 9) & 0x80000000) == 0)
        goto LABEL_48;
      goto LABEL_55;
    }
  }
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  v25 = *(_OWORD *)v22;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v22 + 16);
  *(_OWORD *)a1 = v25;
  *(_BYTE *)(v12 - 9) = 0;
  *(_BYTE *)(v12 - 32) = 0;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(v12 - 8);
  if (*(char *)(v12 - 9) < 0)
LABEL_55:
    operator delete(*(void **)v22);
LABEL_48:
  v23 = *(_OWORD *)__p;
  *(_QWORD *)(v22 + 16) = v27;
  *(_OWORD *)v22 = v23;
  HIBYTE(v27) = 0;
  LOBYTE(__p[0]) = 0;
  *(_QWORD *)(v12 - 8) = v28;
  if (SHIBYTE(v27) < 0)
    operator delete(__p[0]);
  return v22;
}

void sub_2242B2BA0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_22316DC48(a1);
  _Unwind_Resume(a1);
}

BOOL sub_2242B2BC8(uint64_t a1, const std::__fs::filesystem::path *a2)
{
  uint64_t v4;
  _BOOL8 result;
  void **v6;
  int v7;
  std::__fs::filesystem::path::__string_view v8;
  const std::string_view::value_type *v9;
  std::string::value_type v10;
  std::string::size_type v11;
  std::string::size_type size;
  std::string::size_type v13;
  const std::__fs::filesystem::path *v14;
  const std::__fs::filesystem::path *v15;
  uint64_t v16;
  int v17;
  std::string::size_type v18;
  std::string::pointer v19;
  int v20;
  std::__fs::filesystem::path::__string_view v21;
  std::string::size_type v22;
  std::string::pointer data;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  int v27;
  std::__fs::filesystem::path::__string_view v28;
  uint64_t v29;
  std::__fs::filesystem::path v30;
  std::string::pointer v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v4 = ((uint64_t)a2 - a1) >> 5;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = (void **)&a2[-2].__pn_.__r_.__value_.__r.__words[2];
      v7 = *(char *)(a1 + 23);
      if (v7 >= 0)
        v8.__data_ = (const std::string_view::value_type *)a1;
      else
        v8.__data_ = *(const std::string_view::value_type **)a1;
      if (v7 >= 0)
        v8.__size_ = *(unsigned __int8 *)(a1 + 23);
      else
        v8.__size_ = *(_QWORD *)(a1 + 8);
      if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)((char *)a2 - 32), v8) < 0)
      {
        v9 = *(const std::string_view::value_type **)a1;
        v30.__pn_.__r_.__value_.__r.__words[0] = *(_QWORD *)(a1 + 8);
        *(std::string::size_type *)((char *)v30.__pn_.__r_.__value_.__r.__words + 7) = *(_QWORD *)(a1 + 15);
        v10 = *(_BYTE *)(a1 + 23);
        *(_QWORD *)(a1 + 8) = 0;
        *(_QWORD *)(a1 + 16) = 0;
        *(_QWORD *)a1 = 0;
        v11 = *(_QWORD *)(a1 + 24);
        size = a2[-1].__pn_.__r_.__value_.__l.__size_;
        *(_OWORD *)a1 = *(_OWORD *)v6;
        *(_QWORD *)(a1 + 16) = size;
        a2[-1].__pn_.__r_.__value_.__s.__data_[15] = 0;
        a2[-2].__pn_.__r_.__value_.__s.__data_[16] = 0;
        *(_QWORD *)(a1 + 24) = *((_QWORD *)&a2[-1].__pn_.__r_.__value_.__l + 2);
        if (a2[-1].__pn_.__r_.__value_.__s.__data_[15] < 0)
          operator delete(*v6);
        v13 = v30.__pn_.__r_.__value_.__r.__words[0];
        a2[-2].__pn_.__r_.__value_.__r.__words[2] = (std::string::size_type)v9;
        a2[-1].__pn_.__r_.__value_.__r.__words[0] = v13;
        *(std::string::size_type *)((char *)a2[-1].__pn_.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)v30.__pn_.__r_.__value_.__r.__words + 7);
        a2[-1].__pn_.__r_.__value_.__s.__data_[15] = v10;
        a2[-1].__pn_.__r_.__value_.__r.__words[2] = v11;
      }
      return 1;
    case 3:
      sub_2242B22A0((uint64_t *)a1, (std::__fs::filesystem::path *)(a1 + 32), (uint64_t)&a2[-2].__pn_.__r_.__value_.__r.__words[2]);
      return 1;
    case 4:
      sub_2242B2EDC(a1, (uint64_t *)(a1 + 32), a1 + 64, (uint64_t)&a2[-2].__pn_.__r_.__value_.__r.__words[2]);
      return 1;
    case 5:
      sub_2242B3140(a1, a1 + 32, a1 + 64, a1 + 96, (uint64_t)&a2[-2].__pn_.__r_.__value_.__r.__words[2]);
      return 1;
    default:
      v14 = (const std::__fs::filesystem::path *)(a1 + 64);
      sub_2242B22A0((uint64_t *)a1, (std::__fs::filesystem::path *)(a1 + 32), a1 + 64);
      v15 = (const std::__fs::filesystem::path *)(a1 + 96);
      if ((const std::__fs::filesystem::path *)(a1 + 96) == a2)
        return 1;
      v16 = 0;
      v17 = 0;
      break;
  }
  while (1)
  {
    v20 = SHIBYTE(v14->__pn_.__r_.__value_.__r.__words[2]);
    v21.__data_ = v20 >= 0
                ? (const std::string_view::value_type *)v14
                : (const std::string_view::value_type *)v14->__pn_.__r_.__value_.__r.__words[0];
    v21.__size_ = v20 >= 0 ? HIBYTE(v14->__pn_.__r_.__value_.__r.__words[2]) : v14->__pn_.__r_.__value_.__l.__size_;
    if (std::__fs::filesystem::path::__compare(v15, v21) < 0)
    {
      *(_OWORD *)&v30.__pn_.__r_.__value_.__l.__data_ = *(_OWORD *)&v15->__pn_.__r_.__value_.__l.__data_;
      v22 = v15->__pn_.__r_.__value_.__r.__words[2];
      data = v15[1].__pn_.__r_.__value_.__l.__data_;
      v15->__pn_.__r_.__value_.__l.__size_ = 0;
      v15->__pn_.__r_.__value_.__r.__words[2] = 0;
      v15->__pn_.__r_.__value_.__r.__words[0] = 0;
      v30.__pn_.__r_.__value_.__r.__words[2] = v22;
      v31 = data;
      v24 = v16;
      while (1)
      {
        v25 = a1 + v24;
        v26 = (void **)(a1 + v24 + 96);
        if (*(char *)(a1 + v24 + 119) < 0)
          operator delete(*v26);
        *(_OWORD *)v26 = *(_OWORD *)(v25 + 64);
        *(_QWORD *)(a1 + v24 + 112) = *(_QWORD *)(v25 + 80);
        *(_BYTE *)(v25 + 87) = 0;
        *(_BYTE *)(v25 + 64) = 0;
        *(_QWORD *)(v25 + 120) = *(_QWORD *)(v25 + 88);
        if (v24 == -64)
          break;
        v27 = *(char *)(a1 + v24 + 55);
        if (v27 >= 0)
          v28.__data_ = (const std::string_view::value_type *)(a1 + v24 + 32);
        else
          v28.__data_ = *(const std::string_view::value_type **)(a1 + v24 + 32);
        if (v27 >= 0)
          v28.__size_ = *(unsigned __int8 *)(a1 + v24 + 55);
        else
          v28.__size_ = *(_QWORD *)(a1 + v24 + 40);
        v24 -= 32;
        if ((std::__fs::filesystem::path::__compare(&v30, v28) & 0x80000000) == 0)
        {
          v29 = a1 + v24 + 96;
          if ((*(char *)(v29 + 23) & 0x80000000) == 0)
            goto LABEL_15;
          goto LABEL_38;
        }
      }
      v29 = a1;
      if ((*(char *)(a1 + 23) & 0x80000000) == 0)
        goto LABEL_15;
LABEL_38:
      operator delete(*(void **)v29);
LABEL_15:
      *(_OWORD *)v29 = *(_OWORD *)&v30.__pn_.__r_.__value_.__l.__data_;
      v18 = v30.__pn_.__r_.__value_.__r.__words[2];
      v19 = v31;
      *((_BYTE *)&v30.__pn_.__r_.__value_.__s + 23) = 0;
      v30.__pn_.__r_.__value_.__s.__data_[0] = 0;
      *(_QWORD *)(v29 + 16) = v18;
      *(_QWORD *)(v29 + 24) = v19;
      if (++v17 == 8)
        return &v15[1].__pn_.__r_.__value_.__r.__words[1] == (std::string::size_type *)a2;
    }
    v14 = v15;
    v16 += 32;
    v15 = (const std::__fs::filesystem::path *)((char *)v15 + 32);
    if (v15 == a2)
      return 1;
  }
}

void sub_2242B2EC4(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_22316DC48(a1);
  _Unwind_Resume(a1);
}

void sub_2242B2EDC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  int v8;
  _QWORD *v9;
  std::__fs::filesystem::path::__string_view v10;
  const std::string_view::value_type *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _QWORD *v16;
  std::__fs::filesystem::path::__string_view v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  std::__fs::filesystem::path::__string_view v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[15];
  _BYTE v29[15];
  _BYTE v30[15];

  sub_2242B22A0((uint64_t *)a1, (std::__fs::filesystem::path *)a2, a3);
  v8 = *(char *)(a3 + 23);
  v9 = (_QWORD *)(a3 + 8);
  if (v8 >= 0)
    v10.__data_ = (const std::string_view::value_type *)a3;
  else
    v10.__data_ = *(const std::string_view::value_type **)a3;
  if (v8 >= 0)
    v10.__size_ = *(unsigned __int8 *)(a3 + 23);
  else
    v10.__size_ = *(_QWORD *)(a3 + 8);
  if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a4, v10) < 0)
  {
    v11 = *(const std::string_view::value_type **)a3;
    *(_QWORD *)v28 = *v9;
    *(_QWORD *)&v28[7] = *(_QWORD *)(a3 + 15);
    v12 = *(_BYTE *)(a3 + 23);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)a3 = 0;
    v13 = *(_QWORD *)(a3 + 24);
    v14 = *(_QWORD *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(_QWORD *)(a3 + 16) = v14;
    *(_BYTE *)(a4 + 23) = 0;
    *(_BYTE *)a4 = 0;
    *(_QWORD *)(a3 + 24) = *(_QWORD *)(a4 + 24);
    if (*(char *)(a4 + 23) < 0)
      operator delete(*(void **)a4);
    *(_QWORD *)a4 = v11;
    *(_QWORD *)(a4 + 8) = *(_QWORD *)v28;
    *(_QWORD *)(a4 + 15) = *(_QWORD *)&v28[7];
    *(_BYTE *)(a4 + 23) = v12;
    *(_QWORD *)(a4 + 24) = v13;
    v15 = *((char *)a2 + 23);
    v16 = a2 + 1;
    if (v15 >= 0)
      v17.__data_ = (const std::string_view::value_type *)a2;
    else
      v17.__data_ = (const std::string_view::value_type *)*a2;
    if (v15 >= 0)
      v17.__size_ = *((unsigned __int8 *)a2 + 23);
    else
      v17.__size_ = a2[1];
    if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a3, v17) < 0)
    {
      v18 = *a2;
      *(_QWORD *)v29 = *v16;
      *(_QWORD *)&v29[7] = *(uint64_t *)((char *)a2 + 15);
      v19 = *((_BYTE *)a2 + 23);
      a2[1] = 0;
      a2[2] = 0;
      *a2 = 0;
      v20 = a2[3];
      v21 = *(_QWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      a2[2] = v21;
      *(_BYTE *)(a3 + 23) = 0;
      *(_BYTE *)a3 = 0;
      a2[3] = *(_QWORD *)(a3 + 24);
      if (*(char *)(a3 + 23) < 0)
        operator delete(*(void **)a3);
      *(_QWORD *)a3 = v18;
      *v9 = *(_QWORD *)v29;
      *(_QWORD *)(a3 + 15) = *(_QWORD *)&v29[7];
      *(_BYTE *)(a3 + 23) = v19;
      *(_QWORD *)(a3 + 24) = v20;
      v22 = *(char *)(a1 + 23);
      if (v22 >= 0)
        v23.__data_ = (const std::string_view::value_type *)a1;
      else
        v23.__data_ = *(const std::string_view::value_type **)a1;
      if (v22 >= 0)
        v23.__size_ = *(unsigned __int8 *)(a1 + 23);
      else
        v23.__size_ = *(_QWORD *)(a1 + 8);
      if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a2, v23) < 0)
      {
        v24 = *(_QWORD *)a1;
        *(_QWORD *)v30 = *(_QWORD *)(a1 + 8);
        *(_QWORD *)&v30[7] = *(_QWORD *)(a1 + 15);
        v25 = *(_BYTE *)(a1 + 23);
        *(_QWORD *)(a1 + 8) = 0;
        *(_QWORD *)(a1 + 16) = 0;
        *(_QWORD *)a1 = 0;
        v26 = *(_QWORD *)(a1 + 24);
        v27 = a2[2];
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = v27;
        *((_BYTE *)a2 + 23) = 0;
        *(_BYTE *)a2 = 0;
        *(_QWORD *)(a1 + 24) = a2[3];
        if (*((char *)a2 + 23) < 0)
          operator delete((void *)*a2);
        *a2 = v24;
        *v16 = *(_QWORD *)v30;
        *(uint64_t *)((char *)a2 + 15) = *(_QWORD *)&v30[7];
        *((_BYTE *)a2 + 23) = v25;
        a2[3] = v26;
      }
    }
  }
}

void sub_2242B3128(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_22316DC48(a1);
  _Unwind_Resume(a1);
}

void sub_2242B3140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v10;
  _QWORD *v11;
  std::__fs::filesystem::path::__string_view v12;
  const std::string_view::value_type *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _QWORD *v18;
  std::__fs::filesystem::path::__string_view v19;
  const std::string_view::value_type *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _QWORD *v25;
  std::__fs::filesystem::path::__string_view v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  std::__fs::filesystem::path::__string_view v32;
  const std::string_view::value_type *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[15];
  _BYTE v38[15];
  _BYTE v39[15];
  _BYTE v40[15];

  sub_2242B2EDC(a1, (uint64_t *)a2, a3, a4);
  v10 = *(char *)(a4 + 23);
  v11 = (_QWORD *)(a4 + 8);
  if (v10 >= 0)
    v12.__data_ = (const std::string_view::value_type *)a4;
  else
    v12.__data_ = *(const std::string_view::value_type **)a4;
  if (v10 >= 0)
    v12.__size_ = *(unsigned __int8 *)(a4 + 23);
  else
    v12.__size_ = *(_QWORD *)(a4 + 8);
  if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a5, v12) < 0)
  {
    v13 = *(const std::string_view::value_type **)a4;
    *(_QWORD *)v37 = *v11;
    *(_QWORD *)&v37[7] = *(_QWORD *)(a4 + 15);
    v14 = *(_BYTE *)(a4 + 23);
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = 0;
    v15 = *(_QWORD *)(a4 + 24);
    v16 = *(_QWORD *)(a5 + 16);
    *(_OWORD *)a4 = *(_OWORD *)a5;
    *(_QWORD *)(a4 + 16) = v16;
    *(_BYTE *)(a5 + 23) = 0;
    *(_BYTE *)a5 = 0;
    *(_QWORD *)(a4 + 24) = *(_QWORD *)(a5 + 24);
    if (*(char *)(a5 + 23) < 0)
      operator delete(*(void **)a5);
    *(_QWORD *)a5 = v13;
    *(_QWORD *)(a5 + 8) = *(_QWORD *)v37;
    *(_QWORD *)(a5 + 15) = *(_QWORD *)&v37[7];
    *(_BYTE *)(a5 + 23) = v14;
    *(_QWORD *)(a5 + 24) = v15;
    v17 = *(char *)(a3 + 23);
    v18 = (_QWORD *)(a3 + 8);
    if (v17 >= 0)
      v19.__data_ = (const std::string_view::value_type *)a3;
    else
      v19.__data_ = *(const std::string_view::value_type **)a3;
    if (v17 >= 0)
      v19.__size_ = *(unsigned __int8 *)(a3 + 23);
    else
      v19.__size_ = *(_QWORD *)(a3 + 8);
    if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a4, v19) < 0)
    {
      v20 = *(const std::string_view::value_type **)a3;
      *(_QWORD *)v38 = *v18;
      *(_QWORD *)&v38[7] = *(_QWORD *)(a3 + 15);
      v21 = *(_BYTE *)(a3 + 23);
      *(_QWORD *)(a3 + 8) = 0;
      *(_QWORD *)(a3 + 16) = 0;
      *(_QWORD *)a3 = 0;
      v22 = *(_QWORD *)(a3 + 24);
      v23 = *(_QWORD *)(a4 + 16);
      *(_OWORD *)a3 = *(_OWORD *)a4;
      *(_QWORD *)(a3 + 16) = v23;
      *(_BYTE *)(a4 + 23) = 0;
      *(_BYTE *)a4 = 0;
      *(_QWORD *)(a3 + 24) = *(_QWORD *)(a4 + 24);
      if (*(char *)(a4 + 23) < 0)
        operator delete(*(void **)a4);
      *(_QWORD *)a4 = v20;
      *v11 = *(_QWORD *)v38;
      *(_QWORD *)(a4 + 15) = *(_QWORD *)&v38[7];
      *(_BYTE *)(a4 + 23) = v21;
      *(_QWORD *)(a4 + 24) = v22;
      v24 = *(char *)(a2 + 23);
      v25 = (_QWORD *)(a2 + 8);
      if (v24 >= 0)
        v26.__data_ = (const std::string_view::value_type *)a2;
      else
        v26.__data_ = *(const std::string_view::value_type **)a2;
      if (v24 >= 0)
        v26.__size_ = *(unsigned __int8 *)(a2 + 23);
      else
        v26.__size_ = *(_QWORD *)(a2 + 8);
      if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a3, v26) < 0)
      {
        v27 = *(_QWORD *)a2;
        *(_QWORD *)v39 = *v25;
        *(_QWORD *)&v39[7] = *(_QWORD *)(a2 + 15);
        v28 = *(_BYTE *)(a2 + 23);
        *(_QWORD *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)a2 = 0;
        v29 = *(_QWORD *)(a2 + 24);
        v30 = *(_QWORD *)(a3 + 16);
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(_QWORD *)(a2 + 16) = v30;
        *(_BYTE *)(a3 + 23) = 0;
        *(_BYTE *)a3 = 0;
        *(_QWORD *)(a2 + 24) = *(_QWORD *)(a3 + 24);
        if (*(char *)(a3 + 23) < 0)
          operator delete(*(void **)a3);
        *(_QWORD *)a3 = v27;
        *v18 = *(_QWORD *)v39;
        *(_QWORD *)(a3 + 15) = *(_QWORD *)&v39[7];
        *(_BYTE *)(a3 + 23) = v28;
        *(_QWORD *)(a3 + 24) = v29;
        v31 = *(char *)(a1 + 23);
        if (v31 >= 0)
          v32.__data_ = (const std::string_view::value_type *)a1;
        else
          v32.__data_ = *(const std::string_view::value_type **)a1;
        if (v31 >= 0)
          v32.__size_ = *(unsigned __int8 *)(a1 + 23);
        else
          v32.__size_ = *(_QWORD *)(a1 + 8);
        if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a2, v32) < 0)
        {
          v33 = *(const std::string_view::value_type **)a1;
          *(_QWORD *)v40 = *(_QWORD *)(a1 + 8);
          *(_QWORD *)&v40[7] = *(_QWORD *)(a1 + 15);
          v34 = *(_BYTE *)(a1 + 23);
          *(_QWORD *)(a1 + 8) = 0;
          *(_QWORD *)(a1 + 16) = 0;
          *(_QWORD *)a1 = 0;
          v35 = *(_QWORD *)(a1 + 24);
          v36 = *(_QWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_QWORD *)(a1 + 16) = v36;
          *(_BYTE *)(a2 + 23) = 0;
          *(_BYTE *)a2 = 0;
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          if (*(char *)(a2 + 23) < 0)
            operator delete(*(void **)a2);
          *(_QWORD *)a2 = v33;
          *v25 = *(_QWORD *)v40;
          *(_QWORD *)(a2 + 15) = *(_QWORD *)&v40[7];
          *(_BYTE *)(a2 + 23) = v34;
          *(_QWORD *)(a2 + 24) = v35;
        }
      }
    }
  }
}

void sub_2242B3434(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_22316DC48(a1);
  _Unwind_Resume(a1);
}

__n128 sub_2242B3454(uint64_t a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  unint64_t v4;
  __n128 *v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  std::__fs::filesystem::path::__string_view v14;
  int v15;
  std::__fs::filesystem::path::__string_view v16;
  __n128 result;
  unint64_t v18;
  unint64_t v19;
  __n128 *v20;
  __n128 v21;
  uint64_t v22;
  int v23;
  std::__fs::filesystem::path::__string_view v24;
  std::__fs::filesystem::path::__string_view v25;
  __n128 v26;
  int64_t v27;
  unint64_t v28;

  v4 = a3 - 2;
  if (a3 >= 2)
  {
    v5 = a4;
    v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= ((uint64_t)a4 - a1) >> 5)
    {
      v9 = ((uint64_t)a4 - a1) >> 4;
      v10 = v9 + 1;
      v11 = a1 + 32 * (v9 + 1);
      v12 = v9 + 2;
      if (v9 + 2 < a3)
      {
        v13 = *(char *)(v11 + 55);
        v14.__data_ = v13 >= 0
                    ? (const std::string_view::value_type *)(v11 + 32)
                    : *(const std::string_view::value_type **)(v11 + 32);
        v14.__size_ = v13 >= 0 ? *(unsigned __int8 *)(v11 + 55) : *(_QWORD *)(v11 + 40);
        if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)v11, v14) < 0)
        {
          v11 += 32;
          v10 = v12;
        }
      }
      v15 = v5[1].n128_i8[7];
      if (v15 >= 0)
        v16.__data_ = (const std::string_view::value_type *)v5;
      else
        v16.__data_ = (const std::string_view::value_type *)v5->n128_u64[0];
      if (v15 >= 0)
        v16.__size_ = v5[1].n128_u8[7];
      else
        v16.__size_ = v5->n128_u64[1];
      if ((std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)v11, v16) & 0x80000000) == 0)
      {
        v26 = *v5;
        v18 = v5[1].n128_u64[0];
        v19 = v5[1].n128_u64[1];
        v5->n128_u64[1] = 0;
        v5[1].n128_u64[0] = 0;
        v5->n128_u64[0] = 0;
        v27 = v18;
        v28 = v19;
        do
        {
          v20 = (__n128 *)v11;
          if (v5[1].n128_i8[7] < 0)
            operator delete((void *)v5->n128_u64[0]);
          v21 = *(__n128 *)v11;
          v5[1].n128_u64[0] = *(_QWORD *)(v11 + 16);
          *v5 = v21;
          *(_BYTE *)(v11 + 23) = 0;
          *(_BYTE *)v11 = 0;
          v5[1].n128_u64[1] = *(_QWORD *)(v11 + 24);
          if (v7 < v10)
            break;
          v22 = (2 * v10) | 1;
          v11 = a1 + 32 * v22;
          v10 = 2 * v10 + 2;
          if (v10 >= a3)
          {
            v10 = v22;
          }
          else
          {
            v23 = *(char *)(v11 + 55);
            v24.__data_ = v23 >= 0
                        ? (const std::string_view::value_type *)(v11 + 32)
                        : *(const std::string_view::value_type **)(v11 + 32);
            v24.__size_ = v23 >= 0 ? *(unsigned __int8 *)(v11 + 55) : *(_QWORD *)(v11 + 40);
            if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(a1 + 32 * v22), v24) >= 0)
              v10 = v22;
            else
              v11 += 32;
          }
          v25.__data_ = v27 >= 0
                      ? (const std::string_view::value_type *)&v26
                      : (const std::string_view::value_type *)v26.n128_u64[0];
          v25.__size_ = v27 >= 0 ? HIBYTE(v27) : v26.n128_u64[1];
          v5 = v20;
        }
        while ((std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)v11, v25) & 0x80000000) == 0);
        if (v20[1].n128_i8[7] < 0)
          operator delete((void *)v20->n128_u64[0]);
        result = v26;
        v20[1].n128_u64[0] = v27;
        *v20 = result;
        v20[1].n128_u64[1] = v28;
      }
    }
  }
  return result;
}

void sub_2242B3638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  std::__fs::filesystem::path::__string_view v17;
  void **v18;
  int v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE v24[15];

  if (a4 >= 2)
  {
    v8 = 0;
    v9 = *(_QWORD *)a1;
    *(_QWORD *)v24 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)&v24[7] = *(_QWORD *)(a1 + 15);
    v23 = *(_BYTE *)(a1 + 23);
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    v21 = *(_QWORD *)(a1 + 24);
    v22 = v9;
    v10 = (unint64_t)(a4 - 2) >> 1;
    v11 = a1;
    do
    {
      v13 = v11 + 32 * v8 + 32;
      v14 = 2 * v8;
      v8 = (2 * v8) | 1;
      v15 = v14 + 2;
      if (v14 + 2 < a4)
      {
        v16 = *(char *)(v13 + 55);
        v17.__data_ = v16 >= 0
                    ? (const std::string_view::value_type *)(v13 + 32)
                    : *(const std::string_view::value_type **)(v13 + 32);
        v17.__size_ = v16 >= 0 ? *(unsigned __int8 *)(v13 + 55) : *(_QWORD *)(v13 + 40);
        if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)v13, v17) < 0)
        {
          v13 += 32;
          v8 = v15;
        }
      }
      if (*(char *)(v11 + 23) < 0)
        operator delete(*(void **)v11);
      v12 = *(_OWORD *)v13;
      *(_QWORD *)(v11 + 16) = *(_QWORD *)(v13 + 16);
      *(_OWORD *)v11 = v12;
      *(_BYTE *)(v13 + 23) = 0;
      *(_BYTE *)v13 = 0;
      *(_QWORD *)(v11 + 24) = *(_QWORD *)(v13 + 24);
      v11 = v13;
    }
    while (v8 <= v10);
    v18 = (void **)(a2 - 32);
    v19 = *(char *)(v13 + 23);
    if (v13 == a2 - 32)
    {
      if (v19 < 0)
        operator delete(*(void **)v13);
      *(_QWORD *)v13 = v22;
      *(_QWORD *)(v13 + 8) = *(_QWORD *)v24;
      *(_QWORD *)(v13 + 15) = *(_QWORD *)&v24[7];
      *(_BYTE *)(v13 + 23) = v23;
      *(_QWORD *)(v13 + 24) = v21;
    }
    else
    {
      if (v19 < 0)
        operator delete(*(void **)v13);
      v20 = *(_OWORD *)v18;
      *(_QWORD *)(v13 + 16) = *(_QWORD *)(a2 - 16);
      *(_OWORD *)v13 = v20;
      *(_BYTE *)(a2 - 9) = 0;
      *(_BYTE *)(a2 - 32) = 0;
      *(_QWORD *)(v13 + 24) = *(_QWORD *)(a2 - 8);
      if (*(char *)(a2 - 9) < 0)
        operator delete(*v18);
      *(_QWORD *)(a2 - 32) = v22;
      *(_QWORD *)(a2 - 24) = *(_QWORD *)v24;
      *(_QWORD *)(a2 - 17) = *(_QWORD *)&v24[7];
      *(_BYTE *)(a2 - 9) = v23;
      *(_QWORD *)(a2 - 8) = v21;
      sub_2242B3874(a1, v13 + 32, a3, (v13 + 32 - a1) >> 5);
    }
  }
}

void sub_2242B3868(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_22316DC48(a1);
}

double sub_2242B3874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v7;
  const std::__fs::filesystem::path *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  std::__fs::filesystem::path::__string_view v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  std::__fs::filesystem::path::__string_view v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a4 - 2;
  if (a4 >= 2)
  {
    v7 = v4 >> 1;
    v8 = (const std::__fs::filesystem::path *)(a1 + 32 * (v4 >> 1));
    v9 = (__int128 *)(a2 - 32);
    v10 = *(unsigned __int8 *)(a2 - 9);
    v11 = *(_QWORD *)(a2 - 24);
    v12.__data_ = (v10 & 0x80u) == 0
                ? (const std::string_view::value_type *)(a2 - 32)
                : *(const std::string_view::value_type **)(a2 - 32);
    v12.__size_ = (v10 & 0x80u) == 0 ? v10 : v11;
    if (std::__fs::filesystem::path::__compare(v8, v12) < 0)
    {
      v20 = *v9;
      v14 = *((_QWORD *)v9 + 2);
      *((_QWORD *)v9 + 1) = 0;
      *((_QWORD *)v9 + 2) = 0;
      *(_QWORD *)v9 = 0;
      v15 = *(_QWORD *)(a2 - 8);
      v21 = v14;
      v22 = v15;
      do
      {
        v16 = (__int128 *)v8;
        if (*((char *)v9 + 23) < 0)
          operator delete(*(void **)v9);
        v17 = *(_OWORD *)&v8->__pn_.__r_.__value_.__l.__data_;
        *((_QWORD *)v9 + 2) = *((_QWORD *)&v8->__pn_.__r_.__value_.__l + 2);
        *v9 = v17;
        *((_BYTE *)&v8->__pn_.__r_.__value_.__s + 23) = 0;
        v8->__pn_.__r_.__value_.__s.__data_[0] = 0;
        *((_QWORD *)v9 + 3) = v8[1].__pn_.__r_.__value_.__l.__data_;
        if (!v7)
          break;
        v7 = (v7 - 1) >> 1;
        v8 = (const std::__fs::filesystem::path *)(a1 + 32 * v7);
        v18.__data_ = v21 >= 0 ? (const std::string_view::value_type *)&v20 : (const std::string_view::value_type *)v20;
        v18.__size_ = v21 >= 0 ? HIBYTE(v21) : *((_QWORD *)&v20 + 1);
        v9 = v16;
      }
      while (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(a1 + 32 * v7), v18) < 0);
      if (*((char *)v16 + 23) < 0)
        operator delete(*(void **)v16);
      result = *(double *)&v20;
      *v16 = v20;
      v19 = v22;
      *((_QWORD *)v16 + 2) = v21;
      *((_QWORD *)v16 + 3) = v19;
    }
  }
  return result;
}

uint64_t (***sub_2242B39B4())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_255795348);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255795348))
    return &off_2540CA630;
  __cxa_atexit((void (*)(void *))nullsub_599, &off_2540CA630, &dword_22314D000);
  __cxa_guard_release(&qword_255795348);
  return &off_2540CA630;
}

void sub_2242B3A24(uint64_t a1, uint64_t a2)
{
  void *__p[2];
  char v5;

  (*(void (**)(void **__return_ptr))(*(_QWORD *)a1 + 160))(__p);
  (*(void (**)(uint64_t, uint64_t, void **))(*(_QWORD *)a1 + 48))(a1, a2, __p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2242B3AA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242B3AC4(uint64_t a1@<X0>, uint64_t a2@<X2>, std::__fs::filesystem::path *a3@<X8>)
{
  std::__fs::filesystem::path __p;
  std::__fs::filesystem::path v7;

  (*(void (**)(std::__fs::filesystem::path *__return_ptr))(*(_QWORD *)a1 + 32))(&v7);
  (*(void (**)(std::__fs::filesystem::path *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a1 + 32))(&__p, a1, a2);
  std::__fs::filesystem::path::lexically_relative(a3, &v7, &__p);
  if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v7.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v7.__pn_.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v7.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_5;
}

void sub_2242B3B6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_2242B3BB8(uint64_t a1, uint64_t a2)
{
  void *__p[2];
  char v5;

  (*(void (**)(void **__return_ptr))(*(_QWORD *)a1 + 160))(__p);
  (*(void (**)(uint64_t, uint64_t, void **))(*(_QWORD *)a1 + 64))(a1, a2, __p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2242B3C3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242B3C58(uint64_t a1@<X0>, uint64_t a2@<X2>, std::__fs::filesystem::path *a3@<X8>)
{
  std::string::size_type size;
  char v7;
  std::__fs::filesystem::path __base;
  std::__fs::filesystem::path v9;
  std::__fs::filesystem::path v10;

  (*(void (**)(std::__fs::filesystem::path *__return_ptr))(*(_QWORD *)a1 + 32))(&v9);
  (*(void (**)(std::__fs::filesystem::path *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a1 + 32))(&__base, a1, a2);
  std::__fs::filesystem::path::lexically_relative(&v10, &v9, &__base);
  size = HIBYTE(v10.__pn_.__r_.__value_.__r.__words[2]);
  v7 = HIBYTE(v10.__pn_.__r_.__value_.__r.__words[2]);
  if ((v10.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v10.__pn_.__r_.__value_.__l.__size_;
  if (size)
  {
    *a3 = v10;
    goto LABEL_8;
  }
  if ((SHIBYTE(v9.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    *a3 = v9;
    if ((v7 & 0x80) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  sub_223197FA4(a3, v9.__pn_.__r_.__value_.__l.__data_, v9.__pn_.__r_.__value_.__l.__size_);
  if ((*((_BYTE *)&v10.__pn_.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_7:
    operator delete(v10.__pn_.__r_.__value_.__l.__data_);
LABEL_8:
  if ((SHIBYTE(__base.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v9.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_12:
    operator delete(v9.__pn_.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__base.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v9.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_12;
}

void sub_2242B3D68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a21 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((a21 & 0x80000000) == 0)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242B3DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(a1, a2, a3, 0);
}

uint64_t sub_2242B3DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)a1 + 96))(a1, a2, a3, 0);
}

void sub_2242B3DFC()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "copy_symlink() not supported by this filesystem");
  __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
}

void sub_2242B3E38(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2242B3E4C()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "create_hard_link() not supported by this filesystem");
  __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
}

void sub_2242B3E88(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2242B3E9C()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "create_symlink() not supported by this filesystem");
  __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
}

void sub_2242B3ED8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2242B3EEC()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "create_directory_symlink() not supported by this filesystem");
  __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
}

void sub_2242B3F28(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL sub_2242B3F3C(uint64_t a1)
{
  BOOL v1;
  uint64_t v3;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 272))(&v3);
  if ((_BYTE)v3)
    v1 = v3 == 255;
  else
    v1 = 1;
  return !v1;
}

BOOL sub_2242B3F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__fs::filesystem::path::__string_view v6;
  _BOOL8 v7;
  void *__p[2];
  unsigned __int8 v10;
  std::__fs::filesystem::path v11;

  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 176))(a1)
    || !(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 176))(a1, a3))
  {
    return 0;
  }
  (*(void (**)(std::__fs::filesystem::path *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a1 + 24))(&v11, a1, a2);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a1 + 24))(__p, a1, a3);
  if ((v10 & 0x80u) == 0)
    v6.__data_ = (const std::string_view::value_type *)__p;
  else
    v6.__data_ = (const std::string_view::value_type *)__p[0];
  if ((v10 & 0x80u) == 0)
    v6.__size_ = v10;
  else
    v6.__size_ = (std::basic_string_view<_CharT, _Traits>::size_type)__p[1];
  v7 = std::__fs::filesystem::path::__compare(&v11, v6) == 0;
  if ((char)v10 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v11.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return v7;
  }
  else if ((SHIBYTE(v11.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    return v7;
  }
  operator delete(v11.__pn_.__r_.__value_.__l.__data_);
  return v7;
}

void sub_2242B4094(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242B40B0()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "hard_link_count() not supported by this filesystem");
  __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
}

void sub_2242B40EC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2242B4100()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "read_symlink() not supported by this filesystem");
  __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
}

void sub_2242B413C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2242B4150()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "space() not supported by this filesystem");
  __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
}

void sub_2242B418C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2242B41A0()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "symlink_status() not supported by this filesystem");
  __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
}

void sub_2242B41DC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL sub_2242B41F0(uint64_t a1)
{
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 272))(&v2);
  return v2 == 4;
}

BOOL sub_2242B4228(uint64_t a1)
{
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 272))(&v2);
  return v2 == 5;
}

BOOL sub_2242B4260(uint64_t a1)
{
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 272))(&v2);
  return v2 == 2;
}

BOOL sub_2242B4298(uint64_t a1)
{
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 272))(&v2);
  return v2 == 1;
}

BOOL sub_2242B42D0(uint64_t a1)
{
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 272))(&v2);
  return v2 == 6;
}

uint64_t sub_2242B4308(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176))(a1);
  if ((_DWORD)result)
  {
    if (((*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 328))(a1, a2) & 1) != 0)
    {
      return 0;
    }
    else if (((*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 312))(a1, a2) & 1) != 0)
    {
      return 0;
    }
    else
    {
      return (*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 360))(a1, a2) ^ 1;
    }
  }
  return result;
}

BOOL sub_2242B43A4(uint64_t a1)
{
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 272))(&v2);
  return v2 == 7;
}

BOOL sub_2242B43DC(uint64_t a1)
{
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 272))(&v2);
  return v2 == 3;
}

uint64_t sub_2242B4414@<X0>(uint64_t *a1@<X0>, size_t *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  const void *v10;
  size_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  void *v17;
  size_t v18;
  char *v19;
  uint64_t v20;
  _BYTE v22[16];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  _QWORD v59[17];
  _OWORD v60[8];
  uint64_t v61;
  uint64_t v62;

  v62 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  std::istream::tellg();
  v4 = (_QWORD *)(v3 + 16);
  v5 = v3 + 16 + *(_QWORD *)(*(_QWORD *)(v3 + 16) - 24);
  if ((*(_BYTE *)(v5 + 32) & 5) != 0)
  {
    v47 = 0u;
    v48 = 0u;
    v45 = 0u;
    v46 = 0u;
    v43 = 0u;
    v44 = 0u;
    v41 = 0u;
    v42 = 0u;
    v49 = -1;
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**(_QWORD **)(v5 + 40) + 32))(&v41, *(_QWORD *)(v5 + 40), 0, 1, 16);
  }
  v6 = *(_DWORD *)(v3 + 120);
  if ((v6 & 0x10) != 0)
  {
    v8 = *(_QWORD *)(v3 + 112);
    v9 = *(_QWORD *)(v3 + 72);
    if (v8 < v9)
    {
      *(_QWORD *)(v3 + 112) = v9;
      v8 = v9;
    }
    v10 = *(const void **)(v3 + 64);
    v11 = v8 - (_QWORD)v10;
    if (v8 - (unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_23;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      *((_BYTE *)a2 + 23) = 0;
      *(_BYTE *)a2 = 0;
      v7 = v3 + 88;
      if ((size_t *)(v3 + 88) == a2)
        goto LABEL_32;
LABEL_19:
      v15 = *((_BYTE *)a2 + 23);
      if (*(char *)(v3 + 111) < 0)
      {
        if (v15 >= 0)
          v17 = a2;
        else
          v17 = (void *)*a2;
        if (v15 >= 0)
          v18 = *((unsigned __int8 *)a2 + 23);
        else
          v18 = a2[1];
        sub_22319C4B8((void **)v7, v17, v18);
      }
      else if ((*((_BYTE *)a2 + 23) & 0x80) != 0)
      {
        sub_22319C3F4((_QWORD *)v7, (void *)*a2, a2[1]);
      }
      else
      {
        v16 = *(_OWORD *)a2;
        *(_QWORD *)(v7 + 16) = a2[2];
        *(_OWORD *)v7 = v16;
      }
      goto LABEL_32;
    }
    v10 = *(const void **)(v3 + 40);
    v11 = *(_QWORD *)(v3 + 56) - (_QWORD)v10;
    if (v11 >= 0x7FFFFFFFFFFFFFF8)
LABEL_23:
      sub_22316DBC0();
  }
  if (v11 >= 0x17)
  {
    v13 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17)
      v13 = v11 | 7;
    v14 = v13 + 1;
    v12 = operator new(v13 + 1);
    a2[1] = v11;
    a2[2] = v14 | 0x8000000000000000;
    *a2 = (size_t)v12;
  }
  else
  {
    *((_BYTE *)a2 + 23) = v11;
    v12 = a2;
    if (!v11)
    {
      *(_BYTE *)a2 = 0;
      v7 = v3 + 88;
      if ((size_t *)(v3 + 88) == a2)
        goto LABEL_32;
      goto LABEL_19;
    }
  }
  memmove(v12, v10, v11);
  *((_BYTE *)v12 + v11) = 0;
  v7 = v3 + 88;
  if ((size_t *)(v3 + 88) != a2)
    goto LABEL_19;
LABEL_32:
  sub_2231B5488(v3 + 24);
  std::ios_base::clear((std::ios_base *)(v3 + *(_QWORD *)(*(_QWORD *)v3 - 24)), 0);
  v38 = v56;
  v39 = v57;
  v40 = v58;
  v34 = v52;
  v35 = v53;
  v36 = v54;
  v37 = v55;
  v32 = v50;
  v33 = v51;
  std::istream::seekg();
  v29 = v47;
  v30 = v48;
  v31 = v49;
  v25 = v43;
  v26 = v44;
  v27 = v45;
  v28 = v46;
  v23 = v41;
  v24 = v42;
  MEMORY[0x227684604](v22, v3 + 16);
  v19 = (char *)v4 + *(_QWORD *)(*v4 - 24);
  if ((v19[32] & 5) == 0)
  {
    v20 = *((_QWORD *)v19 + 5);
    v60[0] = v23;
    v60[1] = v24;
    v60[2] = v25;
    v60[3] = v26;
    v61 = v31;
    v60[6] = v29;
    v60[7] = v30;
    v60[4] = v27;
    v60[5] = v28;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, uint64_t))(*(_QWORD *)v20 + 40))(v59, v20, v60, 16);
    if (v59[16] == -1)
      std::ios_base::clear((std::ios_base *)((char *)v4 + *(_QWORD *)(*v4 - 24)), *(_DWORD *)((char *)v4 + *(_QWORD *)(*v4 - 24) + 32) | 4);
  }
  return MEMORY[0x227684610](v22);
}

void sub_2242B4744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  MEMORY[0x227684610](&a9);
  if (*(char *)(v9 + 23) < 0)
    operator delete(*(void **)v9);
  _Unwind_Resume(a1);
}

void sub_2242B4778(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  void *v4;
  size_t *v5;
  size_t v6;
  char *v7;
  size_t *v8;
  char *v9;
  _OWORD *v10;
  __int128 *v11;
  unint64_t v12;
  __int128 v13;
  char v14;
  size_t v15[2];
  unsigned __int8 v16;

  sub_2242B4414(a1, v15);
  v3 = (char)v16;
  v4 = (void *)v15[0];
  if ((v16 & 0x80u) == 0)
    v5 = v15;
  else
    v5 = (size_t *)v15[0];
  if ((v16 & 0x80u) == 0)
    v6 = v16;
  else
    v6 = v15[1];
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (!v6)
    goto LABEL_19;
  if ((v6 & 0x8000000000000000) != 0)
    sub_22316E078();
  v7 = (char *)operator new(v6);
  *a2 = v7;
  a2[1] = v7;
  a2[2] = &v7[v6];
  if (v6 < 0x20)
  {
    v8 = v5;
  }
  else
  {
    v8 = v5;
    if ((unint64_t)(v7 - (char *)v5) >= 0x20)
    {
      v8 = (size_t *)((char *)v5 + (v6 & 0xFFFFFFFFFFFFFFE0));
      v9 = &v7[v6 & 0xFFFFFFFFFFFFFFE0];
      v10 = v7 + 16;
      v11 = (__int128 *)(v5 + 2);
      v12 = v6 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v13 = *v11;
        *(v10 - 1) = *(v11 - 1);
        *v10 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 32;
      }
      while (v12);
      v7 += v6 & 0xFFFFFFFFFFFFFFE0;
      if (v6 == (v6 & 0xFFFFFFFFFFFFFFE0))
        goto LABEL_18;
    }
  }
  v9 = v7;
  do
  {
    v14 = *(_BYTE *)v8;
    v8 = (size_t *)((char *)v8 + 1);
    *v9++ = v14;
  }
  while (v8 != (size_t *)((char *)v5 + v6));
LABEL_18:
  a2[1] = v9;
LABEL_19:
  if (v3 < 0)
    operator delete(v4);
}

void sub_2242B489C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  void *v17;

  v17 = *(void **)v15;
  if (*(_QWORD *)v15)
  {
    *(_QWORD *)(v15 + 8) = v17;
    operator delete(v17);
    if ((a15 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242B48D8(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  _BYTE v4[144];
  uint64_t v5;
  _QWORD v6[18];

  v6[17] = *MEMORY[0x24BDAC8D0];
  v2 = a1 + 2;
  MEMORY[0x227684604](v4, a1 + 2);
  v3 = (char *)v2 + *(_QWORD *)(*v2 - 24);
  if ((v3[32] & 5) == 0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v3 + 5) + 32))(v6, *((_QWORD *)v3 + 5), 0, 2, 16);
    if (v6[16] == -1)
      std::ios_base::clear((std::ios_base *)((char *)v2 + *(_QWORD *)(*v2 - 24)), *(_DWORD *)((char *)v2 + *(_QWORD *)(*v2 - 24) + 32) | 4);
  }
  MEMORY[0x227684610](v4);
  memset(&v4[16], 0, 128);
  v5 = 0;
  std::istream::seekg();
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), 0);
}

_QWORD *sub_2242B4A0C(_QWORD *a1, __int128 *a2)
{
  _QWORD *v4;
  _QWORD *v5;

  v4 = operator new(0x130uLL);
  v4[2] = 0;
  *v4 = &unk_24EC71990;
  v4[1] = 0;
  v5 = (_QWORD *)sub_22322E364((uint64_t)(v4 + 3), a2, 24);
  *a1 = v5;
  a1[1] = v4;
  sub_2242B48D8(v5);
  return a1;
}

void sub_2242B4A6C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v2 = v1;
  v4 = *(std::__shared_weak_count **)(v2 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2242B4ACC(_QWORD *a1)
{
  _QWORD *v2;

  v2 = operator new(0x130uLL);
  v2[2] = 0;
  *v2 = &unk_24EC71990;
  v2[1] = 0;
  sub_2242B4EC8((uint64_t)(v2 + 3), (char *)&unk_2245B3D7E);
  *a1 = v2 + 3;
  a1[1] = v2;
  std::ostream::write();
  return a1;
}

void sub_2242B4B4C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v2 = v1;
  v4 = *(std::__shared_weak_count **)(v2 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2242B4BAC(_OWORD *a1, uint64_t *a2)
{
  BOOL v3;
  void *__p;
  void *v6;
  __int128 v7;

  sub_2242B4778(a2, &__p);
  if (__p)
    v3 = 1;
  else
    v3 = v6 == 0;
  if (!v3
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B3D7E, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_2242B4ACC(&v7);
  *a1 = v7;
  if (__p)
  {
    v6 = __p;
    operator delete(__p);
  }
  return a1;
}

void sub_2242B4C5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242B4C78(uint64_t a1, uint64_t *a2)
{
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v11;

  sub_2242B4BAC(&v11, a2);
  v3 = v11;
  v11 = 0uLL;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (!v4)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (!*((_QWORD *)&v11 + 1))
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (!*((_QWORD *)&v11 + 1))
      goto LABEL_11;
  }
  v8 = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
LABEL_11:
  sub_2242B48D8(*(_QWORD **)a1);
  return a1;
}

uint64_t sub_2242B4D38(_QWORD **a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = *a1;
  std::istream::tellg();
  std::istream::seekg();
  std::istream::ignore();
  v2 = v1[1];
  std::ios_base::clear((std::ios_base *)((char *)v1 + *(_QWORD *)(*v1 - 24)), 0);
  std::istream::seekg();
  if (v2 < 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Filesystem/src/MemoryFile.cpp", 121, (uint64_t)"length >= 0", 11, (uint64_t)&unk_2245B3D7E, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  return v2;
}

void sub_2242B4E70(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24EC71990;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2242B4E84(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24EC71990;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242B4EB8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_2242B4EC8(uint64_t a1, char *__s)
{
  size_t v4;
  size_t v5;
  __int128 *p_dst;
  uint64_t v7;
  uint64_t v8;
  __int128 __dst;
  unint64_t v11;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    p_dst = (__int128 *)operator new(v7 + 1);
    *((_QWORD *)&__dst + 1) = v5;
    v11 = v8 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v11) = v4;
  p_dst = &__dst;
  if (v4)
LABEL_8:
    memcpy(p_dst, __s, v5);
  *((_BYTE *)p_dst + v5) = 0;
  sub_22411A9FC(a1, &__dst, 24);
  if (SHIBYTE(v11) < 0)
    operator delete((void *)__dst);
  return a1;
}

void sub_2242B4FA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242B4FBC(uint64_t a1, std::__fs::filesystem::path *a2, _QWORD *a3)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  char *v9;
  char *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::logic_error *exception;

  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = off_24EC719E0;
  *(_QWORD *)(a1 + 8) = a1 + 16;
  *(_QWORD *)(a1 + 24) = 0;
  sub_2242B5160((std::string *)(a1 + 32), a2);
  v6 = a3[1];
  *(_QWORD *)(a1 + 56) = *a3;
  *(_QWORD *)(a1 + 64) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  if (!std::__fs::filesystem::path::__root_directory(a2).__size_)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Requires absolute cwd");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v9 = sub_2242B53E0(a1, a2);
  v10 = v9;
  if (v9[16])
  {
    v11 = (std::__shared_weak_count *)*((_QWORD *)v9 + 1);
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    v10[16] = 0;
  }
  *((_OWORD *)v10 + 2) = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 56) + 16))(*(_QWORD *)(a1 + 56));
  return a1;
}

void sub_2242B5108(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;
  uint64_t v4;
  void *v5;
  uint64_t *v6;

  __cxa_free_exception(v5);
  sub_223167354(v4);
  if (*(char *)(v2 + 55) < 0)
    operator delete(*v3);
  sub_2242BAF30(v1, *v6);
  _Unwind_Resume(a1);
}

void sub_2242B5160(std::string *a1, std::__fs::filesystem::path *this)
{
  std::string::size_type size;
  std::__fs::filesystem::path *p_p;
  std::__fs::filesystem::path *v5;
  size_t v6;
  std::__fs::filesystem::path *v7;
  void **p_dst;
  size_t v9;
  char v10;
  size_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  std::string *v16;
  std::__fs::filesystem::path v17;
  std::__fs::filesystem::path __p;
  std::string *__dst;
  size_t v20;
  int64_t v21;

  std::__fs::filesystem::path::lexically_normal(&v17, this);
  if (SHIBYTE(v17.__pn_.__r_.__value_.__r.__words[2]) < 0)
    sub_223197FA4(&__p, v17.__pn_.__r_.__value_.__l.__data_, v17.__pn_.__r_.__value_.__l.__size_);
  else
    __p = v17;
  size = HIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]);
  p_p = &__p;
  if ((__p.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    size = __p.__pn_.__r_.__value_.__l.__size_;
    p_p = (std::__fs::filesystem::path *)__p.__pn_.__r_.__value_.__r.__words[0];
  }
  if (size)
  {
    while (1)
    {
      v5 = (std::__fs::filesystem::path *)((char *)p_p + size);
      if (p_p->__pn_.__r_.__value_.__s.__data_[size - 1] != 47)
        break;
      if (!--size)
      {
        v5 = p_p;
        break;
      }
    }
  }
  else
  {
    v5 = p_p;
  }
  if (v5 >= p_p)
    v6 = (char *)v5 - (char *)p_p;
  else
    v6 = 0;
  if (v5 >= p_p)
    v7 = p_p;
  else
    v7 = 0;
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  if (v6 >= 0x17)
  {
    v13 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v13 = v6 | 7;
    v14 = v13 + 1;
    p_dst = (void **)operator new(v13 + 1);
    v20 = v6;
    v21 = v14 | 0x8000000000000000;
    __dst = (std::string *)p_dst;
  }
  else
  {
    HIBYTE(v21) = v6;
    p_dst = (void **)&__dst;
    if (!v6)
    {
      LOBYTE(__dst) = 0;
      if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_21;
      goto LABEL_30;
    }
  }
  memmove(p_dst, v7, v6);
  *((_BYTE *)p_dst + v6) = 0;
  if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    v9 = HIBYTE(v21);
    v10 = HIBYTE(v21);
    v11 = v20;
    if (v21 >= 0)
      v12 = HIBYTE(v21);
    else
      v12 = v20;
    if (v12)
      goto LABEL_37;
    goto LABEL_34;
  }
LABEL_30:
  operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  v9 = HIBYTE(v21);
  v10 = HIBYTE(v21);
  v11 = v20;
  if (v21 >= 0)
    v15 = HIBYTE(v21);
  else
    v15 = v20;
  if (v15)
    goto LABEL_37;
LABEL_34:
  if (std::__fs::filesystem::path::__root_directory(&v17).__size_)
  {
    a1->__r_.__value_.__r.__words[0] = 0;
    a1->__r_.__value_.__l.__size_ = 0;
    a1->__r_.__value_.__r.__words[2] = 0;
    sub_2231816F0(a1, (std::string *)"/", (std::string *)"");
    goto LABEL_43;
  }
  v9 = HIBYTE(v21);
  v11 = v20;
  v10 = HIBYTE(v21);
LABEL_37:
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  if (v10 >= 0)
    v16 = (std::string *)&__dst;
  else
    v16 = __dst;
  if (v10 < 0)
    v9 = v11;
  sub_2231816F0(a1, v16, (std::string *)((char *)v16 + v9));
LABEL_43:
  if ((SHIBYTE(v21) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v17.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_47:
    operator delete(v17.__pn_.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__dst);
  if (SHIBYTE(v17.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_47;
}

void sub_2242B537C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (*(char *)(v27 + 23) < 0)
    operator delete(*(void **)v27);
  if (a27 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

char *sub_2242B53E0(uint64_t a1, std::__fs::filesystem::path *this)
{
  std::string::size_type v3;
  std::string::size_type v4;
  std::string::size_type v5;
  __int128 v6;
  std::string *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type size;
  char *v16;
  _BYTE **v17;
  int v18;
  BOOL v19;
  std::string *v20;
  uint64_t v21;
  void *v22;
  std::string::size_type i;
  std::runtime_error *exception;
  void *__p[2];
  uint64_t v27;
  std::__fs::filesystem::path v28;
  std::__fs::filesystem::path __dst;
  std::__fs::filesystem::path v30;
  std::__fs::filesystem::path v31;
  std::__fs::filesystem::path *v32;

  std::__fs::filesystem::path::lexically_normal(&v31, this);
  sub_2242B5CC0(&v31, a1, &v30.__pn_);
  if (SHIBYTE(v30.__pn_.__r_.__value_.__r.__words[2]) < 0)
    sub_223197FA4(&__dst, v30.__pn_.__r_.__value_.__l.__data_, v30.__pn_.__r_.__value_.__l.__size_);
  else
    __dst = v30;
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    size = __dst.__pn_.__r_.__value_.__l.__size_;
    operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
    if (size)
      goto LABEL_6;
LABEL_41:
    __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&v30;
    v16 = sub_2242BAFD8(a1 + 8, &v30, (__int128 **)&__dst);
    goto LABEL_68;
  }
  if (!*((_BYTE *)&__dst.__pn_.__r_.__value_.__s + 23))
    goto LABEL_41;
LABEL_6:
  sub_2242B599C((void **)&__dst.__pn_.__r_.__value_.__l.__data_, (uint64_t)&v30);
  memset(&v28, 0, sizeof(v28));
  v3 = __dst.__pn_.__r_.__value_.__l.__size_;
  v4 = __dst.__pn_.__r_.__value_.__r.__words[0];
  if (__dst.__pn_.__r_.__value_.__l.__size_ - __dst.__pn_.__r_.__value_.__r.__words[0] == 24)
    goto LABEL_43;
  v5 = __dst.__pn_.__r_.__value_.__l.__size_ - 24;
  do
  {
    if (*(char *)(v4 + 23) < 0)
    {
      sub_223197FA4(__p, *(void **)v4, *(_QWORD *)(v4 + 8));
    }
    else
    {
      v6 = *(_OWORD *)v4;
      v27 = *(_QWORD *)(v4 + 16);
      *(_OWORD *)__p = v6;
    }
    if (SHIBYTE(v27) < 0)
    {
      if (__p[1] && *(_BYTE *)__p[0] == 47)
      {
LABEL_18:
        if (SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) < 0)
        {
          *v28.__pn_.__r_.__value_.__l.__data_ = 0;
          v28.__pn_.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v28.__pn_.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v28.__pn_.__r_.__value_.__s + 23) = 0;
        }
        goto LABEL_23;
      }
    }
    else if (HIBYTE(v27) && LOBYTE(__p[0]) == 47)
    {
      goto LABEL_18;
    }
    if (std::__fs::filesystem::path::__filename(&v28).__size_)
      std::string::push_back(&v28.__pn_, 47);
LABEL_23:
    if (v27 >= 0)
      v7 = (std::string *)__p;
    else
      v7 = (std::string *)__p[0];
    v8 = (char *)HIBYTE(v27);
    if (v27 < 0)
      v8 = (char *)__p[1];
    sub_2231816F0(&v28.__pn_, v7, (std::string *)&v8[(_QWORD)v7]);
    v9 = sub_2242BB244(a1 + 8, (uint64_t)&v28);
    if (a1 + 16 == v9)
    {
      v32 = &v28;
      v10 = sub_2242BAFD8(a1 + 8, &v28, (__int128 **)&v32);
      v11 = v10;
      if (v10[80])
      {
        v12 = (std::__shared_weak_count *)*((_QWORD *)v10 + 9);
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v14 = __ldaxr(p_shared_owners);
          while (__stlxr(v14 - 1, p_shared_owners));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        v11[80] = 0;
      }
    }
    else if (*(_BYTE *)(v9 + 80))
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Parent path is not a directory");
      __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
    }
    if (SHIBYTE(v27) < 0)
      operator delete(__p[0]);
    v4 += 24;
  }
  while (v4 != v5);
  v3 = __dst.__pn_.__r_.__value_.__l.__size_;
LABEL_43:
  v17 = (_BYTE **)(v3 - 24);
  if (*(char *)(v3 - 1) < 0)
  {
    if (!*(_QWORD *)(v3 - 16) || **v17 != 47)
      goto LABEL_51;
    goto LABEL_49;
  }
  if (*(_BYTE *)(v3 - 1) && *(_BYTE *)v17 == 47)
  {
LABEL_49:
    if (SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      *v28.__pn_.__r_.__value_.__l.__data_ = 0;
      v28.__pn_.__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      v28.__pn_.__r_.__value_.__s.__data_[0] = 0;
      *((_BYTE *)&v28.__pn_.__r_.__value_.__s + 23) = 0;
    }
    goto LABEL_54;
  }
LABEL_51:
  if (std::__fs::filesystem::path::__filename(&v28).__size_)
    std::string::push_back(&v28.__pn_, 47);
LABEL_54:
  v18 = *(char *)(v3 - 1);
  v19 = v18 < 0;
  if (v18 >= 0)
    v20 = (std::string *)(v3 - 24);
  else
    v20 = *(std::string **)(v3 - 24);
  v21 = *(unsigned __int8 *)(v3 - 1);
  if (v19)
    v21 = *(_QWORD *)(v3 - 16);
  sub_2231816F0(&v28.__pn_, v20, (std::string *)((char *)v20 + v21));
  __p[0] = &v28;
  v16 = sub_2242BAFD8(a1 + 8, &v28, (__int128 **)__p);
  if (SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v28.__pn_.__r_.__value_.__l.__data_);
  v22 = (void *)__dst.__pn_.__r_.__value_.__r.__words[0];
  if (__dst.__pn_.__r_.__value_.__r.__words[0])
  {
    for (i = __dst.__pn_.__r_.__value_.__l.__size_; (void *)i != v22; i -= 24)
    {
      if (*(char *)(i - 1) < 0)
        operator delete(*(void **)(i - 24));
    }
    operator delete(v22);
  }
LABEL_68:
  if (SHIBYTE(v30.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v30.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v31.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return v16 + 64;
LABEL_72:
    operator delete(v31.__pn_.__r_.__value_.__l.__data_);
    return v16 + 64;
  }
  if (SHIBYTE(v31.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_72;
  return v16 + 64;
}

void sub_2242B57A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a29 < 0)
  {
    operator delete(__p);
    if ((a35 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a35 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a30);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242B5848(uint64_t result)
{
  uint64_t v1;

  v1 = result;
  if (*(char *)(result + 23) < 0)
  {
    operator delete(*(void **)result);
    return v1;
  }
  return result;
}

uint64_t sub_2242B5888(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 64);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      if ((*(char *)(a1 + 55) & 0x80000000) == 0)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  if (*(char *)(a1 + 55) < 0)
LABEL_6:
    operator delete(*(void **)(a1 + 32));
LABEL_7:
  sub_2242BAF30(a1 + 8, *(_QWORD *)(a1 + 16));
  return a1;
}

void sub_2242B5908(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_7;
  }
  else
  {
LABEL_5:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
    {
LABEL_7:
      sub_2242BAF30(a1 + 8, *(_QWORD *)(a1 + 16));
      JUMPOUT(0x227684CE8);
    }
  }
  operator delete(*(void **)(a1 + 32));
  goto LABEL_7;
}

void sub_2242B599C(void **a1, uint64_t a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  __int128 v10;
  void **v11;
  void **v12;
  _QWORD *v13;
  __int128 v14;
  void *v15;
  void *v16;
  void *v17;
  void **v18;
  void *v19;
  char *v20;
  char *v21;
  void *v22;
  void *v23;
  char *v24;
  void *v25;
  char *v26;
  uint64_t v27;
  void *__p;
  void *__dst;
  unint64_t v30;

  v4 = *(char *)(a2 + 23);
  if ((v4 & 0x80000000) == 0)
  {
    if (*(_BYTE *)(a2 + 23))
    {
      v25 = 0;
      v26 = 0;
      v27 = 0;
      if (*(_BYTE *)a2 != 47)
        goto LABEL_10;
      goto LABEL_7;
    }
LABEL_33:
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    return;
  }
  if (!*(_QWORD *)(a2 + 8))
    goto LABEL_33;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  if (**(_BYTE **)a2 != 47)
    goto LABEL_10;
LABEL_7:
  HIBYTE(v30) = 1;
  LOWORD(__p) = 47;
  v26 = sub_22319BED8(&v25, (uint64_t)&__p);
  if (SHIBYTE(v30) < 0)
    operator delete(__p);
  LOBYTE(v4) = *(_BYTE *)(a2 + 23);
LABEL_10:
  if ((v4 & 0x80u) == 0)
    v5 = (char *)a2;
  else
    v5 = *(char **)a2;
  if ((v4 & 0x80u) == 0)
    v6 = v4;
  else
    v6 = *(_QWORD *)(a2 + 8);
  sub_2231AD150(v5, v6, "/", 1, 0, (uint64_t)&v23);
  __dst = 0;
  v30 = 0;
  __p = 0;
  sub_223227F94((char **)&__p, 0xAAAAAAAAAAAAAAABLL * ((v26 - (_BYTE *)v25) >> 3) - 0x5555555555555555 * ((v24 - (_BYTE *)v23) >> 3));
  v7 = (char *)v25;
  v8 = v26;
  if (v25 != v26)
  {
    v9 = (char *)__dst;
    do
    {
      if ((unint64_t)v9 < v30)
      {
        if (v7[23] < 0)
        {
          sub_223197FA4(v9, *(void **)v7, *((_QWORD *)v7 + 1));
        }
        else
        {
          v10 = *(_OWORD *)v7;
          *((_QWORD *)v9 + 2) = *((_QWORD *)v7 + 2);
          *(_OWORD *)v9 = v10;
        }
        v9 += 24;
      }
      else
      {
        v9 = sub_22323C290((char **)&__p, (uint64_t)v7);
      }
      __dst = v9;
      v7 += 24;
    }
    while (v7 != v8);
  }
  v11 = (void **)v23;
  v12 = (void **)v24;
  if (v23 == v24)
  {
    v16 = __dst;
    v17 = (void *)v30;
    *a1 = __p;
    a1[1] = v16;
    a1[2] = v17;
    if (!v11)
      goto LABEL_43;
LABEL_36:
    v18 = (void **)v24;
    v19 = v11;
    if (v24 != (char *)v11)
    {
      do
      {
        if (*((char *)v18 - 1) < 0)
          operator delete(*(v18 - 3));
        v18 -= 3;
      }
      while (v18 != v11);
      v19 = v23;
    }
    v24 = (char *)v11;
    operator delete(v19);
    goto LABEL_43;
  }
  v13 = __dst;
  do
  {
    if ((unint64_t)v13 < v30)
    {
      v14 = *(_OWORD *)v11;
      v13[2] = v11[2];
      *(_OWORD *)v13 = v14;
      v13 += 3;
      v11[1] = 0;
      v11[2] = 0;
      *v11 = 0;
    }
    else
    {
      v13 = sub_22319BED8(&__p, (uint64_t)v11);
    }
    __dst = v13;
    v11 += 3;
  }
  while (v11 != v12);
  v11 = (void **)v23;
  v15 = (void *)v30;
  *a1 = __p;
  a1[1] = v13;
  a1[2] = v15;
  if (v11)
    goto LABEL_36;
LABEL_43:
  v20 = (char *)v25;
  if (v25)
  {
    v21 = v26;
    v22 = v25;
    if (v26 != v25)
    {
      do
      {
        if (*(v21 - 1) < 0)
          operator delete(*((void **)v21 - 3));
        v21 -= 24;
      }
      while (v21 != v20);
      v22 = v25;
    }
    v26 = v20;
    operator delete(v22);
  }
}

void sub_2242B5C4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    sub_22319BB48(&a13);
    _Unwind_Resume(a1);
  }
  sub_22319BB48(&a13);
  _Unwind_Resume(a1);
}

void sub_2242B5CC0(std::__fs::filesystem::path *this@<X1>, uint64_t a2@<X0>, std::string *a3@<X8>)
{
  std::__fs::filesystem::path __p;

  if (std::__fs::filesystem::path::__root_directory(this).__size_)
  {
    sub_2242B5160(a3, this);
  }
  else
  {
    if (*(char *)(a2 + 55) < 0)
      sub_223197FA4(&__p, *(void **)(a2 + 32), *(_QWORD *)(a2 + 40));
    else
      __p = *(std::__fs::filesystem::path *)(a2 + 32);
    sub_22319C30C((uint64_t)&__p, this);
    sub_2242B5160(a3, &__p);
    if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  }
}

void sub_2242B5D84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242B5DA4(_QWORD **a1, uint64_t a2, uint64_t a3, int a4)
{
  int v8;
  std::__fs::filesystem::path *v10;
  std::string::size_type size;
  uint64_t v12;
  std::__fs::filesystem::path::__string_view v13;
  std::__fs::filesystem::path *p_dst;
  std::string::size_type v15;
  std::__fs::filesystem::path *v16;
  std::runtime_error *exception;
  std::basic_string_view<_CharT, _Traits>::size_type v18;
  std::basic_string_view<_CharT, _Traits>::size_type v19;
  std::__fs::filesystem::path __p;
  std::__fs::filesystem::path v21;
  _BYTE v22[8];
  _BYTE v23[8];
  std::__fs::filesystem::path __dst;

  sub_2242B62DC((uint64_t)a1, (std::__fs::filesystem::path *)a2, (uint64_t)v23);
  sub_2242B62DC((uint64_t)a1, (std::__fs::filesystem::path *)a3, (uint64_t)v22);
  v8 = v23[0];
  if (v23[0] == 255 || v23[0] == 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "path to copy does not exist");
    goto LABEL_67;
  }
  if (sub_2242B3F78((uint64_t)a1, a2, a3))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "origin and destination path are identical");
    goto LABEL_67;
  }
  if ((v8 - 4) <= 0xFFFFFFFC)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "invalid origin");
    goto LABEL_67;
  }
  if (v22[0] && v22[0] != 255 && v22[0] - 4 <= 0xFFFFFFFC)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "invalid destination");
    goto LABEL_67;
  }
  if (v8 != 1)
  {
    if (v8 != 2)
      return;
    if (v22[0] != 1)
    {
      if (!a4 || (a4 & 8) != 0)
      {
        if (v22[0] == 255 || !v22[0])
          sub_2242B6BCC(a1, (std::__fs::filesystem::path *)a3);
        sub_2242B0AE8(a2, 0x20u, "*", 1uLL, (uint64_t)a1, (uint64_t *)&__dst);
        size = __dst.__pn_.__r_.__value_.__l.__size_;
        v10 = (std::__fs::filesystem::path *)__dst.__pn_.__r_.__value_.__r.__words[0];
        if (__dst.__pn_.__r_.__value_.__r.__words[0] != __dst.__pn_.__r_.__value_.__l.__size_)
        {
          v12 = a4 | 0x200u;
          while (1)
          {
            if (*(char *)(a2 + 23) < 0)
              sub_223197FA4(&v21, *(void **)a2, *(_QWORD *)(a2 + 8));
            else
              v21 = *(std::__fs::filesystem::path *)a2;
            sub_22319C30C((uint64_t)&v21, v10);
            if (*(char *)(a3 + 23) < 0)
              sub_223197FA4(&__p, *(void **)a3, *(_QWORD *)(a3 + 8));
            else
              __p = *(std::__fs::filesystem::path *)a3;
            sub_22319C30C((uint64_t)&__p, v10);
            sub_2242B5DA4(a1, &v21, &__p, v12);
            if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
            {
              operator delete(__p.__pn_.__r_.__value_.__l.__data_);
              if (SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_31:
                operator delete(v21.__pn_.__r_.__value_.__l.__data_);
            }
            else if (SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) < 0)
            {
              goto LABEL_31;
            }
            v10 = (std::__fs::filesystem::path *)((char *)v10 + 32);
            if (v10 == (std::__fs::filesystem::path *)size)
            {
              v10 = (std::__fs::filesystem::path *)__dst.__pn_.__r_.__value_.__r.__words[0];
              break;
            }
          }
        }
        if (v10)
        {
          v15 = __dst.__pn_.__r_.__value_.__l.__size_;
          v16 = v10;
          if ((std::__fs::filesystem::path *)__dst.__pn_.__r_.__value_.__l.__size_ != v10)
          {
            do
            {
              if (*(char *)(v15 - 9) < 0)
                operator delete(*(void **)(v15 - 32));
              v15 -= 32;
            }
            while ((std::__fs::filesystem::path *)v15 != v10);
            v16 = (std::__fs::filesystem::path *)__dst.__pn_.__r_.__value_.__r.__words[0];
          }
          __dst.__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)v10;
          goto LABEL_60;
        }
      }
      return;
    }
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "cannot copy from directory to file");
LABEL_67:
    __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  if ((a4 & 0x40) != 0)
    return;
  if (v22[0] != 2)
  {
    if ((sub_2242B6634(a1, (std::__fs::filesystem::path *)a2, (std::__fs::filesystem::path *)a3, a4) & 1) != 0)
      return;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "failed to copy file");
    goto LABEL_67;
  }
  v13 = std::__fs::filesystem::path::__filename((const std::__fs::filesystem::path *)a2);
  if (v13.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  if (v13.__size_ >= 0x17)
  {
    v18 = (v13.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13.__size_ | 7) != 0x17)
      v18 = v13.__size_ | 7;
    v19 = v18 + 1;
    p_dst = (std::__fs::filesystem::path *)operator new(v18 + 1);
    __dst.__pn_.__r_.__value_.__l.__size_ = v13.__size_;
    __dst.__pn_.__r_.__value_.__r.__words[2] = v19 | 0x8000000000000000;
    __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_52;
  }
  *((_BYTE *)&__dst.__pn_.__r_.__value_.__s + 23) = v13.__size_;
  p_dst = &__dst;
  if (v13.__size_)
LABEL_52:
    memmove(p_dst, v13.__data_, v13.__size_);
  p_dst->__pn_.__r_.__value_.__s.__data_[v13.__size_] = 0;
  __p = __dst;
  if (*(char *)(a3 + 23) < 0)
    sub_223197FA4(&v21, *(void **)a3, *(_QWORD *)(a3 + 8));
  else
    v21 = *(std::__fs::filesystem::path *)a3;
  sub_22319C30C((uint64_t)&v21, &__p);
  sub_2242B6634(a1, (std::__fs::filesystem::path *)a2, &v21, a4);
  if (SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    v16 = (std::__fs::filesystem::path *)__p.__pn_.__r_.__value_.__r.__words[0];
LABEL_60:
    operator delete(v16);
  }
}

void sub_2242B6198(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2242B621C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2242B6230(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2242B6244(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2242B6258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,void *a24)
{
  if ((a21 & 0x80000000) == 0)
  {
    sub_223714960(&a24);
    _Unwind_Resume(a1);
  }
  operator delete(__p);
  sub_223714960(&a24);
  _Unwind_Resume(a1);
}

void sub_2242B62DC(uint64_t a1@<X0>, std::__fs::filesystem::path *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  int v6;
  std::string::size_type size;
  std::string *p_dst;
  BOOL v9;
  void *v10;
  std::string::size_type v11;
  std::string::size_type v12;
  __int128 v13;
  void *v14;
  void *v15;
  void **v16;
  void **v17;
  std::string::size_type v18;
  int v19;
  std::string v20;
  std::string __p;
  void *v22[2];
  uint64_t v23;
  std::string __dst;

  sub_2242B5CC0(a2, a1, &__p);
  v5 = sub_2242BB244(a1 + 8, (uint64_t)&__p);
  if (a1 + 16 != v5)
  {
    v6 = *(_DWORD *)(v5 + 88);
    if (*(_BYTE *)(v5 + 80))
    {
      *(_BYTE *)a3 = 1;
      *(_DWORD *)(a3 + 4) = v6;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_8;
    }
    else
    {
      *(_BYTE *)a3 = 2;
      *(_DWORD *)(a3 + 4) = v6;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_8;
    }
    return;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    sub_223197FA4(&v20, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v20 = __p;
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    sub_223197FA4(&__dst, v20.__r_.__value_.__l.__data_, v20.__r_.__value_.__l.__size_);
  else
    __dst = v20;
  size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __dst.__r_.__value_.__l.__size_;
  if (size != 1)
  {
    v9 = 0;
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_19;
LABEL_22:
    operator delete(__dst.__r_.__value_.__l.__data_);
    if (v9)
      goto LABEL_50;
    goto LABEL_23;
  }
  p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_dst = &__dst;
  v9 = p_dst->__r_.__value_.__s.__data_[0] == 47;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_22;
LABEL_19:
  if (v9)
    goto LABEL_50;
LABEL_23:
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    sub_223197FA4(&__dst, v20.__r_.__value_.__l.__data_, v20.__r_.__value_.__l.__size_);
  else
    __dst = v20;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    v18 = __dst.__r_.__value_.__l.__size_;
    operator delete(__dst.__r_.__value_.__l.__data_);
    if (v18)
      goto LABEL_28;
LABEL_50:
    v19 = 1;
    goto LABEL_57;
  }
  if (!*((_BYTE *)&__dst.__r_.__value_.__s + 23))
    goto LABEL_50;
LABEL_28:
  sub_2242B599C((void **)&__dst.__r_.__value_.__l.__data_, (uint64_t)&v20);
  v11 = __dst.__r_.__value_.__l.__size_;
  v10 = (void *)__dst.__r_.__value_.__r.__words[0];
  if (__dst.__r_.__value_.__r.__words[0] == __dst.__r_.__value_.__l.__size_)
  {
    v19 = 1;
    if (__dst.__r_.__value_.__r.__words[0])
LABEL_56:
      operator delete(v10);
    goto LABEL_57;
  }
  v12 = __dst.__r_.__value_.__r.__words[0];
  while (1)
  {
    if (*(char *)(v12 + 23) < 0)
    {
      sub_223197FA4(v22, *(void **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v23 = *(_QWORD *)(v12 + 16);
      *(_OWORD *)v22 = v13;
    }
    v14 = (void *)HIBYTE(v23);
    if (v23 < 0)
      v14 = v22[1];
    if (v14 != (void *)2)
    {
      if (v14 != (void *)1)
        break;
      v15 = v22[0];
      v16 = v23 >= 0 ? v22 : (void **)v22[0];
      if (*(_BYTE *)v16 != 46)
        break;
      goto LABEL_47;
    }
    v15 = v22[0];
    v17 = v23 >= 0 ? v22 : (void **)v22[0];
    if (*(_WORD *)v17 != 11822)
      break;
LABEL_47:
    if (SHIBYTE(v23) < 0)
      operator delete(v15);
    v12 += 24;
    if (v12 == v11)
    {
      v19 = 1;
      if (!v10)
        goto LABEL_57;
      goto LABEL_67;
    }
  }
  if (SHIBYTE(v23) < 0)
    operator delete(v22[0]);
  v19 = 0;
  if (v10)
  {
    do
    {
LABEL_67:
      if (*(char *)(v11 - 1) < 0)
        operator delete(*(void **)(v11 - 24));
      v11 -= 24;
    }
    while ((void *)v11 != v10);
    goto LABEL_56;
  }
LABEL_57:
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v20.__r_.__value_.__l.__data_);
    if (!v19)
      goto LABEL_62;
LABEL_59:
    *(_BYTE *)a3 = 2;
    *(_DWORD *)(a3 + 4) = 0xFFFF;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
LABEL_8:
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    if (v19)
      goto LABEL_59;
LABEL_62:
    *(_BYTE *)a3 = 0;
    *(_DWORD *)(a3 + 4) = 0xFFFF;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_8;
  }
}

void sub_2242B65D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  if ((a20 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242B6634(_QWORD **a1, std::__fs::filesystem::path *a2, std::__fs::filesystem::path *a3, char a4)
{
  std::__fs::filesystem::path::__string_view v7;
  __int128 *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v9;
  std::basic_string_view<_CharT, _Traits>::size_type v10;
  unsigned __int8 v11;
  uint64_t v12;
  int v13;
  char *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  __int128 v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__fs::filesystem::path::__string_view v25;
  _OWORD *v26;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  char v31;
  __int128 v32;
  char v33;
  void *__p[2];
  unint64_t v35;
  std::__fs::filesystem::path v36;
  std::string v37;
  __int128 __dst;
  unint64_t v39;

  sub_2242B5CC0(a2, (uint64_t)a1, &v37);
  sub_2242B5CC0(a3, (uint64_t)a1, &v36.__pn_);
  v7 = std::__fs::filesystem::path::__parent_path(a3);
  if (v7.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  if (v7.__size_ >= 0x17)
  {
    v9 = (v7.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7.__size_ | 7) != 0x17)
      v9 = v7.__size_ | 7;
    v10 = v9 + 1;
    p_dst = (__int128 *)operator new(v9 + 1);
    *((_QWORD *)&__dst + 1) = v7.__size_;
    v39 = v10 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
  }
  else
  {
    HIBYTE(v39) = v7.__size_;
    p_dst = &__dst;
    if (!v7.__size_)
      goto LABEL_9;
  }
  memmove(p_dst, v7.__data_, v7.__size_);
LABEL_9:
  *((_BYTE *)p_dst + v7.__size_) = 0;
  *(_OWORD *)__p = __dst;
  v35 = v39;
  ((void (*)(__int128 *__return_ptr, _QWORD **, void **))(*a1)[34])(&__dst, a1, __p);
  v11 = __dst;
  if (SHIBYTE(v35) < 0)
  {
    operator delete(__p[0]);
    v12 = 0;
    v13 = v11;
    if (!v11)
      goto LABEL_43;
  }
  else
  {
    v12 = 0;
    v13 = __dst;
    if (!(_BYTE)__dst)
      goto LABEL_43;
  }
  if (v13 == 255)
    goto LABEL_43;
  ((void (*)(__int128 *__return_ptr, _QWORD **, std::string *))(*a1)[34])(&__dst, a1, &v37);
  if (__dst != 1)
    goto LABEL_42;
  ((void (*)(__int128 *__return_ptr, _QWORD **, std::__fs::filesystem::path *))(*a1)[34])(&__dst, a1, &v36);
  if (__dst == 255 || !(_BYTE)__dst)
  {
    *(_QWORD *)&__dst = &v36;
    v14 = sub_2242BAFD8((uint64_t)(a1 + 1), &v36, (__int128 **)&__dst);
    v15 = v14 + 64;
    v16 = sub_2242BB244((uint64_t)(a1 + 1), (uint64_t)&v37);
    v17 = (uint64_t *)(v16 + 64);
    if (v14[80] == *(_BYTE *)(v16 + 80))
    {
      if (v14[80])
      {
        sub_2242B4BAC(&__dst, v17);
        v18 = __dst;
        __dst = 0uLL;
        v19 = (std::__shared_weak_count *)*((_QWORD *)v14 + 9);
        *((_OWORD *)v14 + 4) = v18;
        if (v19)
        {
          p_shared_owners = (unint64_t *)&v19->__shared_owners_;
          do
            v21 = __ldaxr(p_shared_owners);
          while (__stlxr(v21 - 1, p_shared_owners));
          if (!v21)
          {
            ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
            std::__shared_weak_count::__release_weak(v19);
          }
        }
        v22 = (std::__shared_weak_count *)*((_QWORD *)&__dst + 1);
        if (*((_QWORD *)&__dst + 1))
        {
          v23 = (unint64_t *)(*((_QWORD *)&__dst + 1) + 8);
          do
            v24 = __ldaxr(v23);
          while (__stlxr(v24 - 1, v23));
          if (!v24)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
        sub_2242B48D8(*(_QWORD **)v15);
      }
    }
    else
    {
      if (v14[80])
      {
        v28 = (std::__shared_weak_count *)*((_QWORD *)v14 + 9);
        if (v28)
        {
          v29 = (unint64_t *)&v28->__shared_owners_;
          do
            v30 = __ldaxr(v29);
          while (__stlxr(v30 - 1, v29));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *, uint64_t *))v28->__on_zero_shared)(v28, v17);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        v31 = 0;
      }
      else
      {
        sub_2242B4BAC(v15, v17);
        v31 = 1;
      }
      v14[80] = v31;
    }
    goto LABEL_55;
  }
  v25.__data_ = (v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
              ? (const std::string_view::value_type *)&v37
              : (const std::string_view::value_type *)v37.__r_.__value_.__r.__words[0];
  v25.__size_ = (v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
              ? HIBYTE(v37.__r_.__value_.__r.__words[2])
              : v37.__r_.__value_.__l.__size_;
  if (!std::__fs::filesystem::path::__compare(&v36, v25))
  {
LABEL_42:
    v12 = 0;
    goto LABEL_43;
  }
  ((void (*)(__int128 *__return_ptr, _QWORD **, std::__fs::filesystem::path *))(*a1)[34])(&__dst, a1, &v36);
  v12 = 0;
  if ((a4 & 6) == 0 || __dst != 1)
  {
LABEL_43:
    if ((SHIBYTE(v36.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_44;
LABEL_56:
    operator delete(v36.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return v12;
LABEL_57:
    operator delete(v37.__r_.__value_.__l.__data_);
    return v12;
  }
  *(_QWORD *)&__dst = &v36;
  v14 = sub_2242BAFD8((uint64_t)(a1 + 1), &v36, (__int128 **)&__dst);
  v26 = v14 + 64;
  v16 = sub_2242BB244((uint64_t)(a1 + 1), (uint64_t)&v37);
  v17 = (uint64_t *)(v16 + 64);
  if (v14[80] == *(_BYTE *)(v16 + 80))
  {
    if (v14[80])
      sub_2242B4C78((uint64_t)v26, v17);
  }
  else
  {
    if (v14[80])
    {
      sub_223167354((uint64_t)v26);
      v33 = 0;
    }
    else
    {
      sub_2242B4BAC(v26, v17);
      v33 = 1;
    }
    v14[80] = v33;
  }
LABEL_55:
  v32 = *(_OWORD *)(v16 + 88);
  *((_QWORD *)v14 + 13) = *(_QWORD *)(v16 + 104);
  *(_OWORD *)(v14 + 88) = v32;
  *((_OWORD *)v14 + 6) = (*(uint64_t (**)(_QWORD *, uint64_t *))(*a1[7] + 16))(a1[7], v17);
  v12 = 1;
  if (SHIBYTE(v36.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_56;
LABEL_44:
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_57;
  return v12;
}

void sub_2242B6A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if (a27 < 0)
      goto LABEL_6;
  }
  else if (a27 < 0)
  {
LABEL_6:
    operator delete(a22);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

double sub_2242B6AD0(uint64_t a1, std::__fs::filesystem::path *this)
{
  std::__fs::filesystem::path::__string_view v3;
  __int128 *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v5;
  std::basic_string_view<_CharT, _Traits>::size_type v6;
  double result;
  __int128 __dst;
  unint64_t v9;

  v3 = std::__fs::filesystem::path::__parent_path(this);
  if (v3.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  if (v3.__size_ >= 0x17)
  {
    v5 = (v3.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3.__size_ | 7) != 0x17)
      v5 = v3.__size_ | 7;
    v6 = v5 + 1;
    p_dst = (__int128 *)operator new(v5 + 1);
    *((_QWORD *)&__dst + 1) = v3.__size_;
    v9 = v6 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
  }
  else
  {
    HIBYTE(v9) = v3.__size_;
    p_dst = &__dst;
    if (!v3.__size_)
      goto LABEL_9;
  }
  memmove(p_dst, v3.__data_, v3.__size_);
LABEL_9:
  *((_BYTE *)p_dst + v3.__size_) = 0;
  result = *(double *)&__dst;
  *(_OWORD *)a1 = __dst;
  *(_QWORD *)(a1 + 16) = v9;
  return result;
}

BOOL sub_2242B6B94(const std::__fs::filesystem::path *a1, std::__fs::filesystem::path::__string_view a2)
{
  std::basic_string_view<_CharT, _Traits>::size_type v2;

  v2 = *((_QWORD *)a2.__data_ + 1);
  if (*((char *)a2.__data_ + 23) >= 0)
  {
    a2.__size_ = *((unsigned __int8 *)a2.__data_ + 23);
  }
  else
  {
    a2.__data_ = *(const std::string_view::value_type **)a2.__data_;
    a2.__size_ = v2;
  }
  return std::__fs::filesystem::path::__compare(a1, a2) == 0;
}

uint64_t sub_2242B6BCC(_QWORD **a1, std::__fs::filesystem::path *this)
{
  std::string::size_type size;
  std::__fs::filesystem::path::__string_view v5;
  std::string *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v7;
  std::basic_string_view<_CharT, _Traits>::size_type v8;
  int v9;
  char *v10;
  char *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  std::__fs::filesystem::filesystem_error *exception;
  std::string __p;
  std::__fs::filesystem::path v19;
  std::string __dst;
  std::error_code v21;

  size = HIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0)
    size = this->__pn_.__r_.__value_.__l.__size_;
  if (!size)
  {
    exception = (std::__fs::filesystem::filesystem_error *)__cxa_allocate_exception(0x30uLL);
    sub_2242B6E70((__n128 *)&__dst);
    v21.__cat_ = std::system_category();
    *(_QWORD *)&v21.__val_ = 0;
    sub_2236E6644(exception, &__dst, (uint64_t)this, v21);
    __cxa_throw(exception, MEMORY[0x24BEDB708], MEMORY[0x24BEDB268]);
  }
  sub_2242B5CC0(this, (uint64_t)a1, &v19.__pn_);
  ((void (*)(std::string *__return_ptr, _QWORD **, std::__fs::filesystem::path *))(*a1)[34])(&__dst, a1, &v19);
  if (__dst.__r_.__value_.__s.__data_[0] && __dst.__r_.__value_.__s.__data_[0] != 255)
    goto LABEL_26;
  v5 = std::__fs::filesystem::path::__parent_path(&v19);
  if (v5.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  if (v5.__size_ >= 0x17)
  {
    v7 = (v5.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5.__size_ | 7) != 0x17)
      v7 = v5.__size_ | 7;
    v8 = v7 + 1;
    p_dst = (std::string *)operator new(v7 + 1);
    __dst.__r_.__value_.__l.__size_ = v5.__size_;
    __dst.__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_13;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v5.__size_;
  p_dst = &__dst;
  if (v5.__size_)
LABEL_13:
    memmove(p_dst, v5.__data_, v5.__size_);
  p_dst->__r_.__value_.__s.__data_[v5.__size_] = 0;
  __p = __dst;
  ((void (*)(std::string *__return_ptr, _QWORD **, std::string *))(*a1)[34])(&__dst, a1, &__p);
  v9 = __dst.__r_.__value_.__s.__data_[0];
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v9 == 2)
    {
LABEL_16:
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
      v10 = sub_2242BAFD8((uint64_t)(a1 + 1), &v19, (__int128 **)&__dst);
      v11 = v10;
      if (v10[80])
      {
        v12 = (std::__shared_weak_count *)*((_QWORD *)v10 + 9);
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v14 = __ldaxr(p_shared_owners);
          while (__stlxr(v14 - 1, p_shared_owners));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        v11[80] = 0;
      }
      *((_OWORD *)v11 + 6) = (*(uint64_t (**)(_QWORD *))(*a1[7] + 16))(a1[7]);
      v15 = 1;
      if (SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_27;
      return v15;
    }
  }
  else if (__dst.__r_.__value_.__s.__data_[0] == 2)
  {
    goto LABEL_16;
  }
LABEL_26:
  v15 = 0;
  if (SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_27:
    operator delete(v19.__pn_.__r_.__value_.__l.__data_);
  return v15;
}

void sub_2242B6E14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  void *v24;
  int v25;

  if (a24 < 0)
  {
    operator delete(__p);
    if ((v25 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v25)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v24);
  _Unwind_Resume(a1);
}

__n128 sub_2242B6E70(__n128 *a1)
{
  __n128 result;
  __n128 v3;

  v3.n128_u64[0] = (unint64_t)operator new(0x48uLL);
  v3.n128_u64[1] = 64;
  strcpy((char *)v3.n128_u64[0], "filesystem error: in create_directory: No such file or directory");
  result = v3;
  *a1 = v3;
  a1[1].n128_u64[0] = 0x8000000000000048;
  return result;
}

void sub_2242B6EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2242B6EF4(_QWORD **a1, uint64_t a2)
{
  uint64_t v2;
  void **v4;
  void **v5;
  char v6;
  __int128 v7;
  std::string *v8;
  char *v9;
  char *v10;
  char *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  char v15;
  void **i;
  std::__fs::filesystem::filesystem_error *exception;
  void *__p[2];
  void *v20;
  std::__fs::filesystem::path v21;
  void **v22;
  void **v23;
  std::string __what_arg;
  uint64_t v25;
  std::error_code v26;

  v2 = *(unsigned __int8 *)(a2 + 23);
  if ((v2 & 0x80u) != 0)
    v2 = *(_QWORD *)(a2 + 8);
  if (!v2)
  {
    exception = (std::__fs::filesystem::filesystem_error *)__cxa_allocate_exception(0x30uLL);
    sub_2242B72B4((__n128 *)&__what_arg);
    v26.__cat_ = std::system_category();
    *(_QWORD *)&v26.__val_ = 0;
    sub_2242BAD8C(exception, &__what_arg, v26);
    __cxa_throw(exception, MEMORY[0x24BEDB708], MEMORY[0x24BEDB268]);
  }
  sub_2242B5CC0((std::__fs::filesystem::path *)a2, (uint64_t)a1, &__what_arg);
  ((void (*)(void ***__return_ptr, _QWORD **, std::string *))(*a1)[34])(&v22, a1, &__what_arg);
  if ((_BYTE)v22 && v22 != 255)
  {
    v6 = 0;
    goto LABEL_59;
  }
  sub_2242B599C((void **)&v22, (uint64_t)&__what_arg);
  memset(&v21, 0, sizeof(v21));
  v4 = v22;
  v5 = v23;
  if (v22 == v23)
  {
    v6 = 0;
    if (v22)
      goto LABEL_53;
    goto LABEL_59;
  }
  v6 = 0;
  while (1)
  {
    if (*((char *)v4 + 23) < 0)
    {
      sub_223197FA4(__p, *v4, (unint64_t)v4[1]);
    }
    else
    {
      v7 = *(_OWORD *)v4;
      v20 = v4[2];
      *(_OWORD *)__p = v7;
    }
    if (SHIBYTE(v20) < 0)
    {
      if (__p[1] && *(_BYTE *)__p[0] == 47)
      {
LABEL_17:
        if (SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) < 0)
        {
          *v21.__pn_.__r_.__value_.__l.__data_ = 0;
          v21.__pn_.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v21.__pn_.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v21.__pn_.__r_.__value_.__s + 23) = 0;
        }
        goto LABEL_22;
      }
    }
    else if (HIBYTE(v20) && LOBYTE(__p[0]) == 47)
    {
      goto LABEL_17;
    }
    if (std::__fs::filesystem::path::__filename(&v21).__size_)
      std::string::push_back(&v21.__pn_, 47);
LABEL_22:
    if (SHIBYTE(v20) >= 0)
      v8 = (std::string *)__p;
    else
      v8 = (std::string *)__p[0];
    v9 = (char *)HIBYTE(v20);
    if (SHIBYTE(v20) < 0)
      v9 = (char *)__p[1];
    sub_2231816F0(&v21.__pn_, v8, (std::string *)&v9[(_QWORD)v8]);
    ((void (*)(uint64_t *__return_ptr, _QWORD **, std::__fs::filesystem::path *))(*a1)[34])(&v25, a1, &v21);
    if (v25 != 255 && (_BYTE)v25)
    {
      ((void (*)(uint64_t *__return_ptr, _QWORD **, std::__fs::filesystem::path *))(*a1)[34])(&v25, a1, &v21);
      if (v25 == 2)
      {
        v15 = 1;
        if ((SHIBYTE(v20) & 0x80000000) == 0)
          goto LABEL_41;
LABEL_40:
        operator delete(__p[0]);
        goto LABEL_41;
      }
      v15 = 0;
      if (SHIBYTE(v20) < 0)
        goto LABEL_40;
    }
    else
    {
      v10 = sub_2242B53E0((uint64_t)a1, &v21);
      v11 = v10;
      if (v10[16])
      {
        v12 = (std::__shared_weak_count *)*((_QWORD *)v10 + 1);
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v14 = __ldaxr(p_shared_owners);
          while (__stlxr(v14 - 1, p_shared_owners));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        v11[16] = 0;
      }
      *((_OWORD *)v11 + 2) = (*(uint64_t (**)(_QWORD *))(*a1[7] + 16))(a1[7]);
      v6 = 1;
      v15 = 1;
      if (SHIBYTE(v20) < 0)
        goto LABEL_40;
    }
LABEL_41:
    if ((v15 & 1) == 0)
      break;
    v4 += 3;
    if (v4 == v5)
      goto LABEL_50;
  }
  v6 = 0;
LABEL_50:
  if (SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__pn_.__r_.__value_.__l.__data_);
  v4 = v22;
  if (v22)
  {
LABEL_53:
    for (i = v23; i != v4; i -= 3)
    {
      if (*((char *)i - 1) < 0)
        operator delete(*(i - 3));
    }
    operator delete(v4);
  }
LABEL_59:
  if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__what_arg.__r_.__value_.__l.__data_);
  return v6 & 1;
}

void sub_2242B7220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  void *v30;
  int v31;

  if (a30 < 0)
  {
    operator delete(__p);
    if ((v31 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v30);
  _Unwind_Resume(a1);
}

__n128 sub_2242B72B4(__n128 *a1)
{
  __n128 result;
  __n128 v3;

  v3.n128_u64[0] = (unint64_t)operator new(0x48uLL);
  v3.n128_u64[1] = 71;
  strcpy((char *)v3.n128_u64[0], "filesystem error: in create_directories: No such file or directory [\"\"]");
  result = v3;
  *a1 = v3;
  a1[1].n128_u64[0] = 0x8000000000000048;
  return result;
}

void sub_2242B732C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_2242B7340@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[55] < 0)
    return (char *)sub_223197FA4((_BYTE *)a2, *((void **)result + 4), *((_QWORD *)result + 5));
  *(_OWORD *)a2 = *((_OWORD *)result + 2);
  *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 6);
  return result;
}

void sub_2242B736C(uint64_t a1, std::__fs::filesystem::path *a2)
{
  uint64_t v4;
  void **v5;
  std::string *p_p;
  size_t size;
  std::__fs::filesystem::filesystem_error *exception;
  __int128 v9;
  std::string::size_type v10;
  std::string __what_arg;
  std::string __p;
  std::error_code v13;

  sub_2242B5CC0(a2, a1, &__p);
  v4 = sub_2242BB244(a1 + 8, (uint64_t)&__p);
  if (a1 + 16 == v4 || *(_BYTE *)(v4 + 80))
  {
    exception = (std::__fs::filesystem::filesystem_error *)__cxa_allocate_exception(0x30uLL);
    if (SHIBYTE(a2->__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&v9, a2->__pn_.__r_.__value_.__l.__data_, a2->__pn_.__r_.__value_.__l.__size_);
    }
    else
    {
      v9 = *(_OWORD *)&a2->__pn_.__r_.__value_.__l.__data_;
      v10 = a2->__pn_.__r_.__value_.__r.__words[2];
    }
    sub_2242B7538(&__what_arg, (uint64_t *)&v9);
    v13.__cat_ = std::system_category();
    *(_QWORD *)&v13.__val_ = 0;
    sub_2242BAD8C(exception, &__what_arg, v13);
    __cxa_throw(exception, MEMORY[0x24BEDB708], MEMORY[0x24BEDB268]);
  }
  v5 = (void **)(a1 + 32);
  if ((std::string *)(a1 + 32) != &__p)
  {
    if (*(char *)(a1 + 55) < 0)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        size = __p.__r_.__value_.__l.__size_;
      sub_22319C4B8(v5, p_p, size);
    }
    else if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) != 0)
    {
      sub_22319C3F4(v5, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)v5 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      *(_QWORD *)(a1 + 48) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_2242B74C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242B7538(std::string *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD v4[6];
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v4[0] = "Changing current_path: Given path ";
  v4[1] = 34;
  v2 = *((unsigned __int8 *)a2 + 23);
  if ((v2 & 0x80u) == 0)
    v3 = a2;
  else
    v3 = (uint64_t *)*a2;
  if ((v2 & 0x80u) != 0)
    v2 = a2[1];
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = " is not a directory";
  v4[5] = 19;
  sub_2231A9820((uint64_t)v4, (uint64_t)&v5, 0, 0, a1);
}

uint64_t sub_2242B75D8(uint64_t a1, std::__fs::filesystem::path *a2)
{
  char *v3;
  uint64_t v4;
  std::string __p;
  std::string *p_p;

  sub_2242B5CC0(a2, a1, &__p);
  (*(void (**)(std::string **__return_ptr, uint64_t, std::string *))(*(_QWORD *)a1 + 272))(&p_p, a1, &__p);
  if (p_p == 1)
  {
    p_p = &__p;
    v3 = sub_2242BAFD8(a1 + 8, (std::__fs::filesystem::path *)&__p, (__int128 **)&p_p);
    if (!v3[80])
      sub_22324A974();
    v4 = sub_2242B4D38((_QWORD **)v3 + 8);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_7;
    return v4;
  }
  v4 = -1;
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    return v4;
LABEL_7:
  operator delete(__p.__r_.__value_.__l.__data_);
  return v4;
}

void sub_2242B7698(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242B76B4(uint64_t a1, std::__fs::filesystem::path *a2)
{
  uint64_t v5;
  std::__fs::filesystem::filesystem_error *exception;
  std::string __p;
  std::string *p_p;
  std::error_code v10;

  (*(void (**)(std::string *__return_ptr))(*(_QWORD *)a1 + 272))(&__p);
  if (__p.__r_.__value_.__s.__data_[0] == 255 || __p.__r_.__value_.__s.__data_[0] == 0)
  {
    exception = (std::__fs::filesystem::filesystem_error *)__cxa_allocate_exception(0x30uLL);
    sub_2232E3114((uint64_t *)&__p, "cannot get file time: No such file or directory");
    v10.__cat_ = std::system_category();
    *(_QWORD *)&v10.__val_ = 0;
    sub_2236E6644(exception, &__p, (uint64_t)a2, v10);
    __cxa_throw(exception, MEMORY[0x24BEDB708], MEMORY[0x24BEDB268]);
  }
  sub_2242B5CC0(a2, a1, &__p);
  p_p = &__p;
  v5 = *((_QWORD *)sub_2242BAFD8(a1 + 8, (std::__fs::filesystem::path *)&__p, (__int128 **)&p_p) + 12);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v5;
}

void sub_2242B77A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2242B77FC(uint64_t a1, std::__fs::filesystem::path *this, __int16 a3, int a4)
{
  std::string::size_type size;
  uint64_t v9;
  std::__fs::filesystem::filesystem_error *exception;
  std::__fs::filesystem::filesystem_error *v11;
  std::runtime_error *v12;
  std::string v13;
  std::string __p;
  std::error_code v15;
  std::error_code v16;

  size = HIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0)
    size = this->__pn_.__r_.__value_.__l.__size_;
  if (!size)
  {
    exception = (std::__fs::filesystem::filesystem_error *)__cxa_allocate_exception(0x30uLL);
    sub_2242B7A54((__n128 *)&__p);
    v15.__cat_ = std::system_category();
    *(_QWORD *)&v15.__val_ = 0;
    sub_2236E6644(exception, &__p, (uint64_t)this, v15);
    __cxa_throw(exception, MEMORY[0x24BEDB708], MEMORY[0x24BEDB268]);
  }
  sub_2242B5CC0(this, a1, &__p);
  v9 = sub_2242BB244(a1 + 8, (uint64_t)&__p);
  if (a1 + 16 == v9)
  {
    v11 = (std::__fs::filesystem::filesystem_error *)__cxa_allocate_exception(0x30uLL);
    sub_2242B7A54((__n128 *)&v13);
    v16.__cat_ = std::system_category();
    *(_QWORD *)&v16.__val_ = 0;
    sub_2236E6644(v11, &v13, (uint64_t)this, v16);
    __cxa_throw(v11, MEMORY[0x24BEDB708], MEMORY[0x24BEDB268]);
  }
  if (a4 == 4)
  {
    *(_DWORD *)(v9 + 88) &= ~a3 | 0xFFFFF000;
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_13:
    operator delete(__p.__r_.__value_.__l.__data_);
    return;
  }
  if (a4 == 2)
  {
    *(_DWORD *)(v9 + 88) |= a3 & 0xFFF;
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
    goto LABEL_13;
  }
  if (a4 != 1)
  {
    v12 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(v12, "perm_options::nofollow not supported in MemoryFilesystem");
    __cxa_throw(v12, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *(_DWORD *)(v9 + 88) = a3 & 0xFFF;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_13;
}

void sub_2242B79C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242B7A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) != 0)
    {
LABEL_5:
      __cxa_free_exception(v17);
      _Unwind_Resume(a1);
    }
  }
  else if (v18)
  {
    goto LABEL_5;
  }
  JUMPOUT(0x2242B7A14);
}

__n128 sub_2242B7A54(__n128 *a1)
{
  __n128 result;
  __n128 v3;

  v3.n128_u64[0] = (unint64_t)operator new(0x40uLL);
  v3.n128_u64[1] = 59;
  strcpy((char *)v3.n128_u64[0], "filesystem error: in permissions: No such file or directory");
  result = v3;
  *a1 = v3;
  a1[1].n128_u64[0] = 0x8000000000000040;
  return result;
}

void sub_2242B7ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_2242B7AE0(uint64_t a1, std::__fs::filesystem::path *a2)
{
  _QWORD *v3;
  _BOOL8 result;
  _BOOL8 v5;
  std::string __p;

  v3 = (_QWORD *)(a1 + 8);
  sub_2242B5CC0(a2, a1, &__p);
  result = sub_2242B7B68(a1, v3, (std::__fs::filesystem::path *)&__p);
  v5 = result;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    return v5;
  }
  return result;
}

void sub_2242B7B4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_2242B7B68(uint64_t a1, _QWORD *a2, std::__fs::filesystem::path *this)
{
  std::__fs::filesystem::path::__string_view v6;
  std::string *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v8;
  std::basic_string_view<_CharT, _Traits>::size_type v9;
  int v10;
  std::string::value_type v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  std::__fs::filesystem::path::__string_view v16;
  int v17;
  _BOOL8 result;
  uint64_t v19;
  std::__fs::filesystem::path::__string_view v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  void *v27;
  _BOOL4 v28;
  std::__fs::filesystem::path v29;
  std::string __p;
  _BYTE v31[4];
  int v32;
  std::string __dst;

  v6 = std::__fs::filesystem::path::__parent_path(this);
  if (v6.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  if (v6.__size_ >= 0x17)
  {
    v8 = (v6.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6.__size_ | 7) != 0x17)
      v8 = v6.__size_ | 7;
    v9 = v8 + 1;
    p_dst = (std::string *)operator new(v8 + 1);
    __dst.__r_.__value_.__l.__size_ = v6.__size_;
    __dst.__r_.__value_.__r.__words[2] = v9 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_8;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v6.__size_;
  p_dst = &__dst;
  if (v6.__size_)
LABEL_8:
    memmove(p_dst, v6.__data_, v6.__size_);
  p_dst->__r_.__value_.__s.__data_[v6.__size_] = 0;
  v29.__pn_ = __dst;
  sub_2242B5CC0(&v29, a1, &__p);
  sub_2242B62DC(a1, (std::__fs::filesystem::path *)&__p, (uint64_t)v31);
  v10 = v32;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v29.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_11:
      if ((~v10 & 0xC0) != 0)
        return 0;
      goto LABEL_15;
    }
  }
  else if ((SHIBYTE(v29.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_11;
  }
  operator delete(v29.__pn_.__r_.__value_.__l.__data_);
  if ((~v10 & 0xC0) != 0)
    return 0;
LABEL_15:
  sub_2242B5CC0(this, a1, &__dst);
  sub_2242B62DC(a1, (std::__fs::filesystem::path *)&__dst, (uint64_t)&__p);
  v11 = __p.__r_.__value_.__s.__data_[4];
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((v11 & 0x80) == 0)
      return 0;
  }
  else if ((__p.__r_.__value_.__s.__data_[4] & 0x80) == 0)
  {
    return 0;
  }
  (*(void (**)(std::string *__return_ptr, uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)a1 + 272))(&__dst, a1, this);
  if (__dst.__r_.__value_.__s.__data_[0] == 1)
  {
    v12 = sub_2242B0854(a1 + 8, (uint64_t)this);
    if (a1 + 16 != v12)
    {
      v13 = v12;
      v14 = *(_QWORD **)(v12 + 8);
      if (v14)
      {
        do
        {
          v15 = v14;
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
      else
      {
        v21 = (_QWORD *)v12;
        do
        {
          v15 = (_QWORD *)v21[2];
          v22 = *v15 == (_QWORD)v21;
          v21 = v15;
        }
        while (!v22);
      }
      if (*a2 == v12)
        *a2 = v15;
      v23 = (uint64_t *)a2[1];
      --a2[2];
      sub_2231AFE60(v23, (uint64_t *)v13);
      if (*(_BYTE *)(v13 + 80))
      {
        v24 = *(std::__shared_weak_count **)(v13 + 72);
        if (v24)
        {
          p_shared_owners = (unint64_t *)&v24->__shared_owners_;
          do
            v26 = __ldaxr(p_shared_owners);
          while (__stlxr(v26 - 1, p_shared_owners));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
            std::__shared_weak_count::__release_weak(v24);
          }
        }
      }
      if (*(char *)(v13 + 55) < 0)
        operator delete(*(void **)(v13 + 32));
      v27 = (void *)v13;
      goto LABEL_54;
    }
  }
  else
  {
    (*(void (**)(std::string *__return_ptr, uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)a1 + 272))(&__dst, a1, this);
    if (__dst.__r_.__value_.__s.__data_[0] == 2)
    {
      memset(&__dst, 0, sizeof(__dst));
      sub_2231816F0(&__dst, (std::string *)"/", (std::string *)"");
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v16.__data_ = (const std::string_view::value_type *)&__dst;
      else
        v16.__data_ = (const std::string_view::value_type *)__dst.__r_.__value_.__r.__words[0];
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v16.__size_ = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
      else
        v16.__size_ = __dst.__r_.__value_.__l.__size_;
      v17 = std::__fs::filesystem::path::__compare(this, v16);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
      if (v17)
      {
        result = sub_2242B9CEC(a1, this);
        if (!result)
          return result;
        v19 = sub_2242B0854(a1 + 8, (uint64_t)this);
        if (a1 + 16 != v19)
        {
          sub_2242BAE50(a2, v19);
          if (*(char *)(a1 + 55) < 0)
            sub_223197FA4(&__dst, *(void **)(a1 + 32), *(_QWORD *)(a1 + 40));
          else
            __dst = *(std::string *)(a1 + 32);
          v20.__data_ = (const std::string_view::value_type *)this;
          v28 = sub_2242B6B94((const std::__fs::filesystem::path *)&__dst, v20);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__dst.__r_.__value_.__l.__data_);
          if (!v28)
            return 1;
          sub_2242B6AD0((uint64_t)&__dst, this);
          sub_2242B736C(a1, (std::__fs::filesystem::path *)&__dst);
          if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            return 1;
          v27 = (void *)__dst.__r_.__value_.__r.__words[0];
LABEL_54:
          operator delete(v27);
          return 1;
        }
      }
    }
  }
  return 0;
}

void sub_2242B7F04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242B7F60(uint64_t a1, std::__fs::filesystem::path *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v7;
  std::string __p;

  sub_2242B5CC0(a2, a1, &__p);
  v7 = 0;
  v3 = sub_2242B7FF8(a1, (_QWORD *)(a1 + 8), (std::__fs::filesystem::path *)&__p, &v7);
  v4 = v3;
  v5 = v7;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v4)
      return v5;
    else
      return -1;
  }
  else if (v3)
  {
    return v7;
  }
  else
  {
    return -1;
  }
}

void sub_2242B7FDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242B7FF8(uint64_t a1, _QWORD *a2, std::__fs::filesystem::path *a3, _QWORD *a4)
{
  char *v8;
  char *v9;
  std::__fs::filesystem::path::__string_view v10;
  int v11;
  int v12;
  BOOL v13;
  void **v14;
  void **v16;
  void *v17;
  std::string __p;
  void *v19;
  void **v20;

  (*(void (**)(void **__return_ptr, uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)a1 + 272))(&v19, a1, a3);
  if (v19 == 1)
  {
    sub_2242B7B68(a1, a2, a3);
LABEL_3:
    ++*a4;
    return 1;
  }
  (*(void (**)(void **__return_ptr, uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)a1 + 272))(&v19, a1, a3);
  if (v19 != 2)
    return 1;
  sub_2242B0AE8((uint64_t)a3, 0, "*", 1uLL, a1, (uint64_t *)&v19);
  v8 = (char *)v19;
  v9 = (char *)v20;
  if (v19 == v20)
  {
LABEL_8:
    memset(&__p, 0, sizeof(__p));
    sub_2231816F0(&__p, (std::string *)"/", (std::string *)"");
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v10.__data_ = (const std::string_view::value_type *)&__p;
    else
      v10.__data_ = (const std::string_view::value_type *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v10.__size_ = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v10.__size_ = __p.__r_.__value_.__l.__size_;
    v11 = std::__fs::filesystem::path::__compare(a3, v10);
    v12 = v11;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if (!v12)
        goto LABEL_20;
    }
    else if (!v11)
    {
      goto LABEL_20;
    }
    v13 = sub_2242B7B68(a1, a2, a3);
    v14 = (void **)v19;
    if (!v19)
      goto LABEL_28;
    goto LABEL_21;
  }
  while ((sub_2242B7FF8(a1, a2, v8, a4) & 1) != 0)
  {
    v8 += 32;
    if (v8 == v9)
      goto LABEL_8;
  }
LABEL_20:
  v13 = 0;
  v14 = (void **)v19;
  if (!v19)
    goto LABEL_28;
LABEL_21:
  v16 = v20;
  v17 = v14;
  if (v20 != v14)
  {
    do
    {
      if (*((char *)v16 - 9) < 0)
        operator delete(*(v16 - 4));
      v16 -= 4;
    }
    while (v16 != v14);
    v17 = v19;
  }
  v20 = v14;
  operator delete(v17);
LABEL_28:
  if (v13)
    goto LABEL_3;
  return 0;
}

void sub_2242B81D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15)
{
  sub_223714960(&a15);
  _Unwind_Resume(a1);
}

void sub_2242B8220(uint64_t a1, std::__fs::filesystem::path *a2, std::__fs::filesystem::path *a3)
{
  BOOL v6;
  std::__fs::filesystem::path::__string_view v7;
  std::__fs::filesystem::path::__string_view v8;
  std::__fs::filesystem::path *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v10;
  std::basic_string_view<_CharT, _Traits>::size_type v11;
  int v12;
  std::runtime_error *v13;
  std::string::size_type size;
  _BOOL4 v15;
  std::string::size_type v16;
  std::string *p_p;
  std::string *v18;
  char *v19;
  char **v20;
  std::__fs::filesystem::path::__string_view v21;
  char *v22;
  char *v23;
  _QWORD **v24;
  __int128 v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  std::__fs::filesystem::path::__string_view v32;
  __int128 v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  char *v43;
  char *v44;
  _QWORD **v45;
  __int128 v46;
  std::__shared_weak_count *v47;
  unint64_t *p_shared_owners;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  __int128 v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  char v57;
  unint64_t *v58;
  unint64_t v59;
  char v60;
  __int128 v61;
  char *v62;
  __int128 v63;
  char **v64;
  std::string::size_type v65;
  _QWORD *v66;
  std::string::size_type v67;
  _QWORD *v68;
  _QWORD *v69;
  void **v70;
  char v71;
  __int128 v72;
  void *v73;
  size_t v74;
  uint64_t *v75;
  __int128 v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  char v86;
  __int128 v87;
  std::string::size_type v88;
  std::string::size_type *v89;
  std::string::size_type *v90;
  std::string::size_type *v91;
  _QWORD *v92;
  _QWORD *v93;
  int v94;
  std::__fs::filesystem::path::__string_view v95;
  std::string::size_type v96;
  _QWORD *v97;
  std::string *v98;
  std::string *v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD *v102;
  char *v103;
  char *v104;
  std::__fs::filesystem::path *v105;
  __int128 v106;
  __int128 v107;
  char *v108;
  char **v109;
  char **v110;
  std::string::size_type v111;
  std::string *v112;
  std::string *v113;
  _QWORD *v114;
  _QWORD *v115;
  int v116;
  std::__fs::filesystem::path::__string_view v117;
  _QWORD *v118;
  std::runtime_error *exception;
  std::__fs::filesystem::path v120;
  std::string __p;
  std::__fs::filesystem::path v122;
  std::__fs::filesystem::path __base;
  std::__fs::filesystem::path __dst;

  (*(void (**)(std::__fs::filesystem::path *__return_ptr))(*(_QWORD *)a1 + 272))(&__dst);
  v6 = __dst.__pn_.__r_.__value_.__s.__data_[0] == 255 || __dst.__pn_.__r_.__value_.__s.__data_[0] == 0;
  if (v6)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "source path does not exist");
    goto LABEL_279;
  }
  (*(void (**)(std::__fs::filesystem::path *__return_ptr, uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)a1 + 272))(&__dst, a1, a3);
  if (__dst.__pn_.__r_.__value_.__s.__data_[0])
  {
    if (__dst.__pn_.__r_.__value_.__s.__data_[0] != 255)
    {
      (*(void (**)(std::__fs::filesystem::path *__return_ptr, uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)a1 + 272))(&__dst, a1, a3);
      if (__dst.__pn_.__r_.__value_.__s.__data_[0] != 1)
      {
        exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
        std::runtime_error::runtime_error(exception, "rename target path exists and is not a file");
LABEL_279:
        __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
      }
    }
  }
  sub_2242B5CC0(a2, a1, &__base.__pn_);
  sub_2242B5CC0(a3, a1, &v122.__pn_);
  if ((v122.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v7.__data_ = (const std::string_view::value_type *)&v122;
  else
    v7.__data_ = (const std::string_view::value_type *)v122.__pn_.__r_.__value_.__r.__words[0];
  if ((v122.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v7.__size_ = HIBYTE(v122.__pn_.__r_.__value_.__r.__words[2]);
  else
    v7.__size_ = v122.__pn_.__r_.__value_.__l.__size_;
  if (!std::__fs::filesystem::path::__compare(&__base, v7))
    goto LABEL_269;
  if (sub_2242B915C(a1, &__base, &v122))
  {
    v13 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(v13, "target path is sub-path of source path");
    goto LABEL_283;
  }
  v8 = std::__fs::filesystem::path::__parent_path(&v122);
  if (v8.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  if (v8.__size_ >= 0x17)
  {
    v10 = (v8.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8.__size_ | 7) != 0x17)
      v10 = v8.__size_ | 7;
    v11 = v10 + 1;
    p_dst = (std::__fs::filesystem::path *)operator new(v10 + 1);
    __dst.__pn_.__r_.__value_.__l.__size_ = v8.__size_;
    __dst.__pn_.__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
    __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_23;
  }
  *((_BYTE *)&__dst.__pn_.__r_.__value_.__s + 23) = v8.__size_;
  p_dst = &__dst;
  if (v8.__size_)
LABEL_23:
    memmove(p_dst, v8.__data_, v8.__size_);
  p_dst->__pn_.__r_.__value_.__s.__data_[v8.__size_] = 0;
  v120 = __dst;
  sub_2242B5CC0(&v120, a1, &__p);
  (*(void (**)(std::__fs::filesystem::path *__return_ptr, uint64_t, std::string *))(*(_QWORD *)a1 + 272))(&__dst, a1, &__p);
  v12 = __dst.__pn_.__r_.__value_.__s.__data_[0];
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v120.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_26:
      if (v12 == 2)
        goto LABEL_27;
LABEL_31:
      v13 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(v13, "target path is not within an existing directory");
      goto LABEL_283;
    }
  }
  else if ((SHIBYTE(v120.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(v120.__pn_.__r_.__value_.__l.__data_);
  if (v12 != 2)
    goto LABEL_31;
LABEL_27:
  if (SHIBYTE(__base.__pn_.__r_.__value_.__r.__words[2]) < 0)
    sub_223197FA4(&__dst, __base.__pn_.__r_.__value_.__l.__data_, __base.__pn_.__r_.__value_.__l.__size_);
  else
    __dst = __base;
  size = HIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]);
  if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __dst.__pn_.__r_.__value_.__l.__size_;
  if (size)
  {
    if (SHIBYTE(__base.__pn_.__r_.__value_.__r.__words[2]) < 0)
      sub_223197FA4(&__p, __base.__pn_.__r_.__value_.__l.__data_, __base.__pn_.__r_.__value_.__l.__size_);
    else
      __p = __base.__pn_;
    v16 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v16 = __p.__r_.__value_.__l.__size_;
    if (v16 == 1)
    {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      v15 = p_p->__r_.__value_.__s.__data_[0] == 47;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_50:
        if ((*((_BYTE *)&__dst.__pn_.__r_.__value_.__s + 23) & 0x80) == 0)
          goto LABEL_52;
        goto LABEL_51;
      }
    }
    else
    {
      v15 = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_50;
    }
    operator delete(__p.__r_.__value_.__l.__data_);
    goto LABEL_50;
  }
  v15 = 1;
  if ((*((_BYTE *)&__dst.__pn_.__r_.__value_.__s + 23) & 0x80) == 0)
    goto LABEL_52;
LABEL_51:
  operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
LABEL_52:
  if (v15)
  {
    v13 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(v13, "invalid source path");
LABEL_283:
    __cxa_throw(v13, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = 0uLL;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p.__r_.__value_.__l.__size_;
  v18 = (std::string *)(a1 + 8);
  v19 = *(char **)(a1 + 8);
  v20 = (char **)(a1 + 16);
  if (v19 != (char *)(a1 + 16))
  {
    while (1)
    {
      v21.__data_ = (__base.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                  ? (const std::string_view::value_type *)&__base
                  : (const std::string_view::value_type *)__base.__pn_.__r_.__value_.__r.__words[0];
      v21.__size_ = (__base.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                  ? HIBYTE(__base.__pn_.__r_.__value_.__r.__words[2])
                  : __base.__pn_.__r_.__value_.__l.__size_;
      if (!std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v19 + 32), v21))
        break;
      if (sub_2242B915C(a1, &__base, (std::__fs::filesystem::path *)(v19 + 32)))
      {
        std::__fs::filesystem::path::lexically_relative(&v120, (const std::__fs::filesystem::path *)(v19 + 32), &__base);
        if (SHIBYTE(v122.__pn_.__r_.__value_.__r.__words[2]) < 0)
          sub_223197FA4(&__dst, v122.__pn_.__r_.__value_.__l.__data_, v122.__pn_.__r_.__value_.__l.__size_);
        else
          __dst = v122;
        sub_22319C30C((uint64_t)&__dst, &v120);
        if (SHIBYTE(v120.__pn_.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v120.__pn_.__r_.__value_.__l.__data_);
        v120.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
        v43 = sub_2242BAFD8((uint64_t)&__p, &__dst, (__int128 **)&v120);
        v44 = v43;
        v45 = (_QWORD **)(v43 + 64);
        if (v43[80] == v19[80])
        {
          if (v43[80])
          {
            sub_2242B4BAC(&v120, (uint64_t *)v19 + 8);
            v46 = *(_OWORD *)&v120.__pn_.__r_.__value_.__l.__data_;
            *(_OWORD *)&v120.__pn_.__r_.__value_.__l.__data_ = 0uLL;
            v47 = (std::__shared_weak_count *)*((_QWORD *)v44 + 9);
            *((_OWORD *)v44 + 4) = v46;
            if (v47)
            {
              p_shared_owners = (unint64_t *)&v47->__shared_owners_;
              do
                v49 = __ldaxr(p_shared_owners);
              while (__stlxr(v49 - 1, p_shared_owners));
              if (!v49)
              {
                ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
                std::__shared_weak_count::__release_weak(v47);
              }
            }
            v50 = (std::__shared_weak_count *)v120.__pn_.__r_.__value_.__l.__size_;
            if (v120.__pn_.__r_.__value_.__l.__size_)
            {
              v51 = (unint64_t *)(v120.__pn_.__r_.__value_.__l.__size_ + 8);
              do
                v52 = __ldaxr(v51);
              while (__stlxr(v52 - 1, v51));
              if (!v52)
              {
                ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
                std::__shared_weak_count::__release_weak(v50);
              }
            }
            sub_2242B48D8(*v45);
          }
          v53 = *(_OWORD *)(v19 + 88);
          *((_QWORD *)v44 + 13) = *((_QWORD *)v19 + 13);
          *(_OWORD *)(v44 + 88) = v53;
          if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_139;
        }
        else
        {
          if (v43[80])
          {
            v54 = (std::__shared_weak_count *)*((_QWORD *)v43 + 9);
            if (v54)
            {
              v55 = (unint64_t *)&v54->__shared_owners_;
              do
                v56 = __ldaxr(v55);
              while (__stlxr(v56 - 1, v55));
              if (!v56)
              {
                ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
                std::__shared_weak_count::__release_weak(v54);
              }
            }
            v57 = 0;
          }
          else
          {
            sub_2242B4BAC((_OWORD *)v43 + 4, (uint64_t *)v19 + 8);
            v57 = 1;
          }
          v44[80] = v57;
          v61 = *(_OWORD *)(v19 + 88);
          *((_QWORD *)v44 + 13) = *((_QWORD *)v19 + 13);
          *(_OWORD *)(v44 + 88) = v61;
          if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_139:
            operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
        }
LABEL_140:
        v62 = (char *)*((_QWORD *)v19 + 1);
        if (v62)
          goto LABEL_146;
        goto LABEL_148;
      }
      if ((v122.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v32.__data_ = (const std::string_view::value_type *)&v122;
      else
        v32.__data_ = (const std::string_view::value_type *)v122.__pn_.__r_.__value_.__r.__words[0];
      if ((v122.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v32.__size_ = HIBYTE(v122.__pn_.__r_.__value_.__r.__words[2]);
      else
        v32.__size_ = v122.__pn_.__r_.__value_.__l.__size_;
      if (!std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v19 + 32), v32))
        goto LABEL_140;
      __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)(v19 + 32);
      v22 = sub_2242BAFD8((uint64_t)&__p, (std::__fs::filesystem::path *)(v19 + 32), (__int128 **)&__dst);
      v23 = v22;
      v24 = (_QWORD **)(v22 + 64);
      if (v22[80] != v19[80])
      {
        if (v22[80])
        {
          v40 = (std::__shared_weak_count *)*((_QWORD *)v22 + 9);
          if (!v40)
            goto LABEL_135;
          v58 = (unint64_t *)&v40->__shared_owners_;
          do
            v59 = __ldaxr(v58);
          while (__stlxr(v59 - 1, v58));
          if (v59)
            goto LABEL_135;
LABEL_142:
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
          v60 = 0;
          goto LABEL_144;
        }
        goto LABEL_143;
      }
      if (v22[80])
      {
        sub_2242B4BAC(&__dst, (uint64_t *)v19 + 8);
        v33 = *(_OWORD *)&__dst.__pn_.__r_.__value_.__l.__data_;
        *(_OWORD *)&__dst.__pn_.__r_.__value_.__l.__data_ = 0uLL;
        v34 = (std::__shared_weak_count *)*((_QWORD *)v23 + 9);
        *((_OWORD *)v23 + 4) = v33;
        if (v34)
        {
          v35 = (unint64_t *)&v34->__shared_owners_;
          do
            v36 = __ldaxr(v35);
          while (__stlxr(v36 - 1, v35));
          if (!v36)
          {
            ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
            std::__shared_weak_count::__release_weak(v34);
          }
        }
        v37 = (std::__shared_weak_count *)__dst.__pn_.__r_.__value_.__l.__size_;
        if (__dst.__pn_.__r_.__value_.__l.__size_)
        {
          v38 = (unint64_t *)(__dst.__pn_.__r_.__value_.__l.__size_ + 8);
          do
            v39 = __ldaxr(v38);
          while (__stlxr(v39 - 1, v38));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
LABEL_78:
        sub_2242B48D8(*v24);
      }
LABEL_145:
      v63 = *(_OWORD *)(v19 + 88);
      *((_QWORD *)v23 + 13) = *((_QWORD *)v19 + 13);
      *(_OWORD *)(v23 + 88) = v63;
      v62 = (char *)*((_QWORD *)v19 + 1);
      if (v62)
      {
        do
        {
LABEL_146:
          v64 = (char **)v62;
          v62 = *(char **)v62;
        }
        while (v62);
        goto LABEL_55;
      }
      do
      {
LABEL_148:
        v64 = (char **)*((_QWORD *)v19 + 2);
        v6 = *v64 == v19;
        v19 = (char *)v64;
      }
      while (!v6);
LABEL_55:
      v19 = (char *)v64;
      if (v64 == v20)
        goto LABEL_151;
    }
    __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&v122;
    v22 = sub_2242BAFD8((uint64_t)&__p, &v122, (__int128 **)&__dst);
    v23 = v22;
    v24 = (_QWORD **)(v22 + 64);
    if (v22[80] == v19[80])
    {
      if (!v22[80])
        goto LABEL_145;
      sub_2242B4BAC(&__dst, (uint64_t *)v19 + 8);
      v25 = *(_OWORD *)&__dst.__pn_.__r_.__value_.__l.__data_;
      *(_OWORD *)&__dst.__pn_.__r_.__value_.__l.__data_ = 0uLL;
      v26 = (std::__shared_weak_count *)*((_QWORD *)v23 + 9);
      *((_OWORD *)v23 + 4) = v25;
      if (v26)
      {
        v27 = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      v29 = (std::__shared_weak_count *)__dst.__pn_.__r_.__value_.__l.__size_;
      if (__dst.__pn_.__r_.__value_.__l.__size_)
      {
        v30 = (unint64_t *)(__dst.__pn_.__r_.__value_.__l.__size_ + 8);
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      goto LABEL_78;
    }
    if (v22[80])
    {
      v40 = (std::__shared_weak_count *)*((_QWORD *)v22 + 9);
      if (v40)
      {
        v41 = (unint64_t *)&v40->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
          goto LABEL_142;
      }
LABEL_135:
      v60 = 0;
LABEL_144:
      v23[80] = v60;
      goto LABEL_145;
    }
LABEL_143:
    sub_2242B4BAC((_OWORD *)v22 + 4, (uint64_t *)v19 + 8);
    v60 = 1;
    goto LABEL_144;
  }
LABEL_151:
  if (v18 != &__p)
  {
    v65 = __p.__r_.__value_.__r.__words[0];
    if (*(_QWORD *)(a1 + 24))
    {
      v66 = (_QWORD *)v18->__r_.__value_.__r.__words[0];
      v18->__r_.__value_.__r.__words[0] = (std::string::size_type)v20;
      *((_QWORD *)*v20 + 2) = 0;
      *v20 = 0;
      *(_QWORD *)(a1 + 24) = 0;
      if (v66[1])
        v67 = v66[1];
      else
        v67 = (std::string::size_type)v66;
      __dst.__pn_.__r_.__value_.__r.__words[0] = a1 + 8;
      __dst.__pn_.__r_.__value_.__r.__words[2] = v67;
      if (!v67)
      {
        v99 = (std::string *)v65;
        goto LABEL_239;
      }
      v68 = *(_QWORD **)(v67 + 16);
      if (v68)
      {
        v69 = (_QWORD *)*v68;
        if (*v68 == v67)
        {
          *v68 = 0;
          while (1)
          {
            v118 = (_QWORD *)v68[1];
            if (!v118)
              break;
            do
            {
              v68 = v118;
              v118 = (_QWORD *)*v118;
            }
            while (v118);
          }
        }
        else
        {
          for (v68[1] = 0; v69; v69 = (_QWORD *)v68[1])
          {
            do
            {
              v68 = v69;
              v69 = (_QWORD *)*v69;
            }
            while (v69);
          }
        }
      }
      __dst.__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)v68;
      if ((std::string::size_type *)v65 != &__p.__r_.__value_.__r.__words[1])
      {
        while (1)
        {
          if (v67 != v65)
          {
            v70 = (void **)(v67 + 32);
            v71 = *(_BYTE *)(v65 + 55);
            if (*(char *)(v67 + 55) < 0)
            {
              if (v71 >= 0)
                v73 = (void *)(v65 + 32);
              else
                v73 = *(void **)(v65 + 32);
              if (v71 >= 0)
                v74 = *(unsigned __int8 *)(v65 + 55);
              else
                v74 = *(_QWORD *)(v65 + 40);
              sub_22319C4B8(v70, v73, v74);
            }
            else if ((*(_BYTE *)(v65 + 55) & 0x80) != 0)
            {
              sub_22319C3F4(v70, *(void **)(v65 + 32), *(_QWORD *)(v65 + 40));
            }
            else
            {
              v72 = *(_OWORD *)(v65 + 32);
              *(_QWORD *)(v67 + 48) = *(_QWORD *)(v65 + 48);
              *(_OWORD *)v70 = v72;
            }
          }
          v75 = (uint64_t *)(v65 + 64);
          if (*(unsigned __int8 *)(v67 + 80) == *(unsigned __int8 *)(v65 + 80))
          {
            if (*(_BYTE *)(v67 + 80))
            {
              sub_2242B4BAC(&v120, v75);
              v76 = *(_OWORD *)&v120.__pn_.__r_.__value_.__l.__data_;
              *(_OWORD *)&v120.__pn_.__r_.__value_.__l.__data_ = 0uLL;
              v77 = *(std::__shared_weak_count **)(v67 + 72);
              *(_OWORD *)(v67 + 64) = v76;
              if (v77)
              {
                v78 = (unint64_t *)&v77->__shared_owners_;
                do
                  v79 = __ldaxr(v78);
                while (__stlxr(v79 - 1, v78));
                if (!v79)
                {
                  ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
                  std::__shared_weak_count::__release_weak(v77);
                }
              }
              v80 = (std::__shared_weak_count *)v120.__pn_.__r_.__value_.__l.__size_;
              if (v120.__pn_.__r_.__value_.__l.__size_)
              {
                v81 = (unint64_t *)(v120.__pn_.__r_.__value_.__l.__size_ + 8);
                do
                  v82 = __ldaxr(v81);
                while (__stlxr(v82 - 1, v81));
                if (!v82)
                {
                  ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
                  std::__shared_weak_count::__release_weak(v80);
                }
              }
              sub_2242B48D8(*(_QWORD **)(v67 + 64));
            }
          }
          else
          {
            if (*(_BYTE *)(v67 + 80))
            {
              v83 = *(std::__shared_weak_count **)(v67 + 72);
              if (v83)
              {
                v84 = (unint64_t *)&v83->__shared_owners_;
                do
                  v85 = __ldaxr(v84);
                while (__stlxr(v85 - 1, v84));
                if (!v85)
                {
                  ((void (*)(std::__shared_weak_count *, uint64_t *))v83->__on_zero_shared)(v83, v75);
                  std::__shared_weak_count::__release_weak(v83);
                }
              }
              v86 = 0;
            }
            else
            {
              sub_2242B4BAC((_OWORD *)(v67 + 64), v75);
              v86 = 1;
            }
            *(_BYTE *)(v67 + 80) = v86;
          }
          v87 = *(_OWORD *)(v65 + 88);
          *(_QWORD *)(v67 + 104) = *(_QWORD *)(v65 + 104);
          *(_OWORD *)(v67 + 88) = v87;
          v88 = __dst.__pn_.__r_.__value_.__r.__words[2];
          v89 = (std::string::size_type *)*v20;
          v90 = (std::string::size_type *)(a1 + 16);
          v91 = (std::string::size_type *)(a1 + 16);
          if (*v20)
          {
            do
            {
              while (1)
              {
                v90 = v89;
                v92 = v89 + 4;
                v93 = (_QWORD *)v89[4];
                v94 = *((char *)v92 + 23);
                v95.__data_ = (const std::string_view::value_type *)(v94 >= 0 ? v92 : v93);
                v95.__size_ = v94 >= 0 ? *((unsigned __int8 *)v92 + 23) : v92[1];
                if ((std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v88 + 32), v95) & 0x80000000) == 0)
                  break;
                v89 = (std::string::size_type *)*v90;
                v91 = v90;
                if (!*v90)
                  goto LABEL_209;
              }
              v89 = (std::string::size_type *)v90[1];
            }
            while (v89);
            v91 = v90 + 1;
          }
LABEL_209:
          *(_QWORD *)v88 = 0;
          *(_QWORD *)(v88 + 8) = 0;
          *(_QWORD *)(v88 + 16) = v90;
          *v91 = v88;
          v96 = *(_QWORD *)v18->__r_.__value_.__l.__data_;
          if (v96)
          {
            v18->__r_.__value_.__r.__words[0] = v96;
            v88 = *v91;
          }
          sub_2231A9A8C(*(uint64_t **)(a1 + 16), (uint64_t *)v88);
          ++*(_QWORD *)(a1 + 24);
          v67 = __dst.__pn_.__r_.__value_.__l.__size_;
          __dst.__pn_.__r_.__value_.__r.__words[2] = __dst.__pn_.__r_.__value_.__l.__size_;
          if (__dst.__pn_.__r_.__value_.__l.__size_)
          {
            v68 = *(_QWORD **)(__dst.__pn_.__r_.__value_.__l.__size_ + 16);
            if (v68)
            {
              v97 = (_QWORD *)*v68;
              if (*v68 == __dst.__pn_.__r_.__value_.__l.__size_)
              {
                *v68 = 0;
                while (1)
                {
                  v100 = (_QWORD *)v68[1];
                  if (!v100)
                    break;
                  do
                  {
                    v68 = v100;
                    v100 = (_QWORD *)*v100;
                  }
                  while (v100);
                }
              }
              else
              {
                for (v68[1] = 0; v97; v97 = (_QWORD *)v68[1])
                {
                  do
                  {
                    v68 = v97;
                    v97 = (_QWORD *)*v97;
                  }
                  while (v97);
                }
              }
            }
            __dst.__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)v68;
            v98 = *(std::string **)(v65 + 8);
            if (v98)
            {
              do
              {
LABEL_220:
                v99 = v98;
                v98 = (std::string *)v98->__r_.__value_.__r.__words[0];
              }
              while (v98);
              goto LABEL_224;
            }
          }
          else
          {
            v68 = 0;
            v98 = *(std::string **)(v65 + 8);
            if (v98)
              goto LABEL_220;
          }
          do
          {
            v99 = *(std::string **)(v65 + 16);
            v6 = v99->__r_.__value_.__r.__words[0] == v65;
            v65 = (std::string::size_type)v99;
          }
          while (!v6);
LABEL_224:
          if (v67)
          {
            v65 = (std::string::size_type)v99;
            if (v99 != (std::string *)&__p.__r_.__value_.__r.__words[1])
              continue;
          }
          v101 = __dst.__pn_.__r_.__value_.__r.__words[0];
          sub_2242BAF30((uint64_t)__dst.__pn_.__r_.__value_.__l.__data_, v67);
          if (!v68)
            goto LABEL_239;
          goto LABEL_235;
        }
      }
      v101 = a1 + 8;
      v99 = (std::string *)&__p.__r_.__value_.__r.__words[1];
      sub_2242BAF30(a1 + 8, v67);
      if (!v68)
        goto LABEL_239;
LABEL_235:
      v102 = (_QWORD *)v68[2];
      if (v102)
      {
        do
        {
          v68 = v102;
          v102 = (_QWORD *)v102[2];
        }
        while (v102);
        __dst.__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)v68;
      }
      sub_2242BAF30(v101, (uint64_t)v68);
LABEL_239:
      v65 = (std::string::size_type)v99;
    }
    if ((std::string::size_type *)v65 != &__p.__r_.__value_.__r.__words[1])
    {
      while (1)
      {
        v103 = (char *)operator new(0x70uLL);
        v104 = v103;
        __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v103;
        __dst.__pn_.__r_.__value_.__l.__size_ = a1 + 16;
        __dst.__pn_.__r_.__value_.__s.__data_[16] = 0;
        v105 = (std::__fs::filesystem::path *)(v103 + 32);
        if (*(char *)(v65 + 55) < 0)
        {
          sub_223197FA4(v103 + 32, *(void **)(v65 + 32), *(_QWORD *)(v65 + 40));
        }
        else
        {
          v106 = *(_OWORD *)(v65 + 32);
          *((_QWORD *)v103 + 6) = *(_QWORD *)(v65 + 48);
          *(_OWORD *)&v105->__pn_.__r_.__value_.__l.__data_ = v106;
        }
        v104[64] = 0;
        v104[80] = 0;
        if (*(_BYTE *)(v65 + 80))
        {
          sub_2242B4BAC((_OWORD *)v104 + 4, (uint64_t *)(v65 + 64));
          v104[80] = 1;
        }
        v107 = *(_OWORD *)(v65 + 88);
        *((_QWORD *)v104 + 13) = *(_QWORD *)(v65 + 104);
        *(_OWORD *)(v104 + 88) = v107;
        v108 = *v20;
        v109 = (char **)(a1 + 16);
        v110 = (char **)(a1 + 16);
        if (*v20)
          break;
LABEL_249:
        *(_QWORD *)v104 = 0;
        *((_QWORD *)v104 + 1) = 0;
        *((_QWORD *)v104 + 2) = v109;
        *v110 = v104;
        v111 = *(_QWORD *)v18->__r_.__value_.__l.__data_;
        if (v111)
          goto LABEL_250;
LABEL_251:
        sub_2231A9A8C(*(uint64_t **)(a1 + 16), (uint64_t *)v104);
        ++*(_QWORD *)(a1 + 24);
        v112 = *(std::string **)(v65 + 8);
        if (v112)
        {
          do
          {
            v113 = v112;
            v112 = (std::string *)v112->__r_.__value_.__r.__words[0];
          }
          while (v112);
        }
        else
        {
          do
          {
            v113 = *(std::string **)(v65 + 16);
            v6 = v113->__r_.__value_.__r.__words[0] == v65;
            v65 = (std::string::size_type)v113;
          }
          while (!v6);
        }
        v65 = (std::string::size_type)v113;
        if (v113 == (std::string *)&__p.__r_.__value_.__r.__words[1])
          goto LABEL_268;
      }
      do
      {
        while (1)
        {
          v109 = (char **)v108;
          v114 = v108 + 32;
          v115 = (_QWORD *)*((_QWORD *)v108 + 4);
          v116 = *((char *)v114 + 23);
          v117.__data_ = (const std::string_view::value_type *)(v116 >= 0 ? v114 : v115);
          v117.__size_ = v116 >= 0 ? *((unsigned __int8 *)v114 + 23) : v114[1];
          if ((std::__fs::filesystem::path::__compare(v105, v117) & 0x80000000) == 0)
            break;
          v108 = *v109;
          v110 = v109;
          if (!*v109)
            goto LABEL_249;
        }
        v108 = v109[1];
      }
      while (v108);
      v110 = v109 + 1;
      *(_QWORD *)v104 = 0;
      *((_QWORD *)v104 + 1) = 0;
      *((_QWORD *)v104 + 2) = v109;
      v109[1] = v104;
      v111 = *(_QWORD *)v18->__r_.__value_.__l.__data_;
      if (!v111)
        goto LABEL_251;
LABEL_250:
      v18->__r_.__value_.__r.__words[0] = v111;
      v104 = *v110;
      goto LABEL_251;
    }
  }
LABEL_268:
  sub_2242BAF30((uint64_t)&__p, __p.__r_.__value_.__l.__size_);
LABEL_269:
  if ((SHIBYTE(v122.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__base.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_273:
    operator delete(__base.__pn_.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v122.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(__base.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_273;
}

void sub_2242B8FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0)
    operator delete(__p);
  if (a25 < 0)
  {
    operator delete(a20);
    if ((a31 & 0x80000000) == 0)
      goto LABEL_5;
  }
  else if ((a31 & 0x80000000) == 0)
  {
LABEL_5:
    _Unwind_Resume(a1);
  }
  operator delete(a26);
  _Unwind_Resume(a1);
}

BOOL sub_2242B915C(uint64_t a1, std::__fs::filesystem::path *this, std::__fs::filesystem::path *a3)
{
  _BOOL4 v6;
  _BOOL8 v7;
  int v8;
  std::string::size_type size;
  int64_t v10;
  std::string *v11;
  std::string *v12;
  int64_t v13;
  char v14;
  std::string *p_p;
  std::__fs::filesystem::path::__string_view v16;
  uint64_t v17;
  size_t v18;
  int64_t v19;
  std::string::size_type v20;
  int64_t v21;
  std::string *v22;
  const void *v23;
  std::string *v24;
  unint64_t v26;
  std::string::size_type v27;
  std::string *v28;
  unint64_t v29;
  std::string::size_type v31;
  std::string *v32;
  std::string *v33;
  std::string::size_type v34;
  std::string *p_dst;
  uint64_t v36;
  uint64_t v37;
  std::string::size_type v38;
  std::string *v39;
  std::string::size_type v40;
  std::string *v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  std::string *v45;
  std::string __dst;
  std::string __p;
  std::string v48;
  std::string v49;
  std::string v50;

  v6 = std::__fs::filesystem::path::__root_directory(this).__size_ != 0;
  if (((v6 ^ (std::__fs::filesystem::path::__root_directory(a3).__size_ != 0)) & 1) == 0)
  {
    sub_2242B5CC0(this, a1, &v50);
    sub_2242B5CC0(a3, a1, &v49);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      sub_223197FA4(&v48, v50.__r_.__value_.__l.__data_, v50.__r_.__value_.__l.__size_);
    else
      v48 = v50;
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      sub_223197FA4(&__p, v49.__r_.__value_.__l.__data_, v49.__r_.__value_.__l.__size_);
    else
      __p = v49;
    LOBYTE(v8) = *((_BYTE *)&v48.__r_.__value_.__s + 23);
    size = v48.__r_.__value_.__l.__size_;
    if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v10 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
    else
      v10 = v48.__r_.__value_.__l.__size_;
    if (v10 < 2
      || ((v11 = (std::string *)v48.__r_.__value_.__r.__words[0],
           (v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        ? (v12 = &v48)
        : (v12 = (std::string *)v48.__r_.__value_.__r.__words[0]),
          LOWORD(v12->__r_.__value_.__l.__data_) != 11822))
    {
LABEL_17:
      v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v13 = __p.__r_.__value_.__l.__size_;
      if (v13 >= 2)
      {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        if (LOWORD(p_p->__r_.__value_.__l.__data_) == 11822)
          goto LABEL_43;
      }
      v16 = std::__fs::filesystem::path::__root_directory(this);
      v17 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
      v8 = SHIBYTE(v48.__r_.__value_.__r.__words[2]);
      v18 = v48.__r_.__value_.__l.__size_;
      v19 = (v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? HIBYTE(v48.__r_.__value_.__r.__words[2])
          : v48.__r_.__value_.__l.__size_;
      v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if (v16.__size_)
      {
        if (v19 == 1)
        {
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v20 = __p.__r_.__value_.__l.__size_;
          v7 = v20 > 1;
LABEL_44:
          if (v14 < 0)
          {
            operator delete(__p.__r_.__value_.__l.__data_);
            if ((*((_BYTE *)&v48.__r_.__value_.__s + 23) & 0x80) == 0)
            {
LABEL_46:
              if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                goto LABEL_47;
              goto LABEL_51;
            }
          }
          else if ((v8 & 0x80) == 0)
          {
            goto LABEL_46;
          }
          operator delete(v48.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_47:
            if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              return v7;
LABEL_52:
            operator delete(v50.__r_.__value_.__l.__data_);
            return v7;
          }
LABEL_51:
          operator delete(v49.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            return v7;
          goto LABEL_52;
        }
      }
      else if (!v19)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
           ? HIBYTE(__p.__r_.__value_.__r.__words[2])
           : __p.__r_.__value_.__l.__size_)
        {
          v7 = 1;
          goto LABEL_44;
        }
      }
      v21 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? HIBYTE(__p.__r_.__value_.__r.__words[2])
          : __p.__r_.__value_.__l.__size_;
      if (v19 > v21
        || ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? (v22 = &__p)
          : (v22 = (std::string *)__p.__r_.__value_.__r.__words[0]),
            (v23 = (const void *)v48.__r_.__value_.__r.__words[0],
             (v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          ? (v24 = &v48)
          : (v24 = (std::string *)v48.__r_.__value_.__r.__words[0]),
            memcmp(v22, v24, v19)))
      {
LABEL_43:
        v7 = 0;
        goto LABEL_44;
      }
      if (v19 == v21)
      {
        if (v8 < 0)
        {
          v19 = v18;
          if (!memcmp(v23, v22, v18))
            goto LABEL_43;
        }
        else
        {
          if (!v8)
            goto LABEL_43;
          v32 = &v48;
          v33 = v22;
          while (v32->__r_.__value_.__s.__data_[0] == v33->__r_.__value_.__s.__data_[0])
          {
            v32 = (std::string *)((char *)v32 + 1);
            v33 = (std::string *)((char *)v33 + 1);
            if (!--v17)
              goto LABEL_43;
          }
        }
      }
      v7 = v22->__r_.__value_.__s.__data_[v19] == 47;
      goto LABEL_44;
    }
    v26 = 0;
    while (v12->__r_.__value_.__s.__data_[v26] - 48 >= 0xFFFFFFFE)
    {
      if (v10 == ++v26)
      {
        v26 = -1;
        break;
      }
    }
    v27 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    v28 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      v27 = __p.__r_.__value_.__l.__size_;
      v28 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if (v27)
    {
      v29 = 0;
      while (v28->__r_.__value_.__s.__data_[v29] - 48 >= 0xFFFFFFFE)
      {
        if (v27 == ++v29)
          goto LABEL_63;
      }
    }
    else
    {
LABEL_63:
      v29 = -1;
    }
    if (v26 == -1 && v29 == -1)
    {
      v7 = v10 > v27;
      goto LABEL_44;
    }
    if (v29 >= v26)
      v31 = v26;
    else
      v31 = v29;
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    {
      if (v48.__r_.__value_.__l.__size_ >= v31)
      {
LABEL_86:
        if (size - v31 >= size)
          v34 = size;
        else
          v34 = size - v31;
        if (v34 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v34 >= 0x17)
        {
          v36 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v34 | 7) != 0x17)
            v36 = v34 | 7;
          v37 = v36 + 1;
          p_dst = (std::string *)operator new(v36 + 1);
          __dst.__r_.__value_.__l.__size_ = v34;
          __dst.__r_.__value_.__r.__words[2] = v37 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
        }
        else
        {
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v34;
          p_dst = &__dst;
          if (!v34)
          {
LABEL_97:
            p_dst->__r_.__value_.__s.__data_[v34] = 0;
            if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v48.__r_.__value_.__l.__data_);
            v48 = __dst;
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            {
              v38 = __p.__r_.__value_.__l.__size_;
              if (__p.__r_.__value_.__l.__size_ >= v31)
              {
                v39 = (std::string *)__p.__r_.__value_.__r.__words[0];
LABEL_104:
                if (v38 - v31 >= v38)
                  v40 = v38;
                else
                  v40 = v38 - v31;
                if (v40 > 0x7FFFFFFFFFFFFFF7)
                  sub_22316DBC0();
                if (v40 >= 0x17)
                {
                  v42 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v40 | 7) != 0x17)
                    v42 = v40 | 7;
                  v43 = v42 + 1;
                  v41 = (std::string *)operator new(v42 + 1);
                  __dst.__r_.__value_.__l.__size_ = v40;
                  __dst.__r_.__value_.__r.__words[2] = v43 | 0x8000000000000000;
                  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v41;
                }
                else
                {
                  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v40;
                  v41 = &__dst;
                  if (!v40)
                  {
LABEL_115:
                    v41->__r_.__value_.__s.__data_[v40] = 0;
                    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                      operator delete(__p.__r_.__value_.__l.__data_);
                    __p = __dst;
                    v44 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
                    LOBYTE(v8) = *((_BYTE *)&v48.__r_.__value_.__s + 23);
                    if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                      v44 = v48.__r_.__value_.__l.__size_;
                    if (v44 >= 2)
                    {
                      v45 = (std::string *)v48.__r_.__value_.__r.__words[0];
                      if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                        v45 = &v48;
                      if (bswap32(LOWORD(v45->__r_.__value_.__l.__data_)) >> 16 == 11822)
                      {
                        v7 = 1;
                        v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                        goto LABEL_44;
                      }
                    }
                    goto LABEL_17;
                  }
                }
                memmove(v41, (char *)v39 + v31, v40);
                goto LABEL_115;
              }
            }
            else
            {
              v38 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
              if (v31 <= HIBYTE(__p.__r_.__value_.__r.__words[2]))
              {
                v39 = &__p;
                goto LABEL_104;
              }
            }
            sub_2231A39C0();
          }
        }
        memmove(p_dst, (char *)v11 + v31, v34);
        goto LABEL_97;
      }
    }
    else if (v31 <= HIBYTE(v48.__r_.__value_.__r.__words[2]))
    {
      v11 = &v48;
      size = HIBYTE(v48.__r_.__value_.__r.__words[2]);
      goto LABEL_86;
    }
    sub_2231A39C0();
  }
  return 0;
}

void sub_2242B9694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  uint64_t v32;

  if (a18 < 0)
  {
    operator delete(__p);
    if ((a25 & 0x80000000) == 0)
      goto LABEL_3;
  }
  else if ((a25 & 0x80000000) == 0)
  {
LABEL_3:
    if (a32 < 0)
      goto LABEL_4;
    goto LABEL_8;
  }
  operator delete(a20);
  if (a32 < 0)
  {
LABEL_4:
    operator delete(a27);
    if (*(char *)(v32 - 65) < 0)
    {
LABEL_9:
      operator delete(*(void **)(v32 - 88));
      _Unwind_Resume(a1);
    }
LABEL_10:
    _Unwind_Resume(a1);
  }
LABEL_8:
  if (*(char *)(v32 - 65) < 0)
    goto LABEL_9;
  goto LABEL_10;
}

void sub_2242B9738(uint64_t a1, std::__fs::filesystem::path *a2, std::string::size_type a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  std::string *v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::string::size_type size;
  char v19;
  std::string *p_p;
  void *v21;
  __int128 v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::runtime_error *exception;
  __int128 v30;
  char v31;
  std::string v32;
  std::string __p;
  __int128 v34;
  std::string v35;

  sub_2242B5CC0(a2, a1, &v35);
  (*(void (**)(std::string *__return_ptr, uint64_t, std::string *))(*(_QWORD *)a1 + 272))(&__p, a1, &v35);
  if (__p.__r_.__value_.__s.__data_[0] != 1)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "path is not a regular file");
    __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  v5 = sub_2242BB244(a1 + 8, (uint64_t)&v35);
  if (!*(_BYTE *)(v5 + 80))
    sub_22324A974();
  v6 = v5;
  v7 = (uint64_t *)(v5 + 64);
  v8 = sub_2242B4D38((_QWORD **)(v5 + 64));
  if (v8 >= a3)
  {
    if (v8 <= a3)
      goto LABEL_41;
    sub_2242B4414(v7, (size_t *)&v32);
    size = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    v19 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = v32.__r_.__value_.__l.__size_;
    if (size >= a3)
      size = a3;
    __p = v32;
    memset(&v32, 0, sizeof(v32));
    if (v19 < 0)
    {
      __p.__r_.__value_.__l.__size_ = size;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    else
    {
      *((_BYTE *)&__p.__r_.__value_.__s + 23) = size & 0x7F;
      p_p = &__p;
    }
    p_p->__r_.__value_.__s.__data_[size] = 0;
    sub_2242B4A0C(&v30, (__int128 *)&__p);
    v22 = v30;
    v30 = 0uLL;
    v23 = *(std::__shared_weak_count **)(v6 + 72);
    *(_OWORD *)(v6 + 64) = v22;
    if (v23)
    {
      p_shared_owners = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldaxr(p_shared_owners);
      while (__stlxr(v25 - 1, p_shared_owners));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    v26 = (std::__shared_weak_count *)*((_QWORD *)&v30 + 1);
    if (*((_QWORD *)&v30 + 1))
    {
      v27 = (unint64_t *)(*((_QWORD *)&v30 + 1) + 8);
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_40;
    v21 = (void *)__p.__r_.__value_.__r.__words[0];
    goto LABEL_39;
  }
  sub_2242B4414(v7, (size_t *)&v32);
  v31 = 0;
  LOBYTE(v30) = 0;
  v9 = std::string::append(&v32, (const std::string::value_type *)&v30, 0);
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  sub_2242B4A0C(&v34, (__int128 *)&__p);
  v11 = v34;
  v34 = 0uLL;
  v12 = *(std::__shared_weak_count **)(v6 + 72);
  *(_OWORD *)(v6 + 64) = v11;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v15 = (std::__shared_weak_count *)*((_QWORD *)&v34 + 1);
  if (!*((_QWORD *)&v34 + 1))
    goto LABEL_13;
  v16 = (unint64_t *)(*((_QWORD *)&v34 + 1) + 8);
  do
    v17 = __ldaxr(v16);
  while (__stlxr(v17 - 1, v16));
  if (v17)
  {
LABEL_13:
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_14;
LABEL_24:
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((v31 & 0x80000000) == 0)
      goto LABEL_40;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
  std::__shared_weak_count::__release_weak(v15);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_24;
LABEL_14:
  if ((v31 & 0x80000000) == 0)
    goto LABEL_40;
LABEL_25:
  v21 = (void *)v30;
LABEL_39:
  operator delete(v21);
LABEL_40:
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_41:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_44:
    operator delete(v35.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_44;
}

void sub_2242B9A2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v26;

  if (a26 < 0)
    operator delete(__p);
  if (a20 < 0)
  {
    operator delete(a15);
    if ((*(char *)(v26 - 33) & 0x80000000) == 0)
LABEL_5:
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v26 - 33) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(*(void **)(v26 - 56));
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2242B9B10@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4;
  _QWORD *result;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  __int128 *v12;

  v4 = atomic_load((unsigned __int8 *)&qword_2540CFAF0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2540CFAF0))
  {
    sub_2242B9C90();
    __cxa_atexit((void (*)(void *))sub_2242B5848, &xmmword_2540CFAF8, &dword_22314D000);
    __cxa_guard_release(&qword_2540CFAF0);
  }
  result = ((_QWORD *(*)(__int128 **__return_ptr, _QWORD **, __int128 *))(*a1)[34])(&v12, a1, &xmmword_2540CFAF8);
  if (v12 == 255 || v12 == 0)
  {
    v12 = &xmmword_2540CFAF8;
    v7 = sub_2242BAFD8((uint64_t)(a1 + 1), (std::__fs::filesystem::path *)&xmmword_2540CFAF8, &v12);
    v8 = v7;
    if (v7[80])
    {
      v9 = (std::__shared_weak_count *)*((_QWORD *)v7 + 9);
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v8[80] = 0;
    }
    result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*a1[7] + 16))(a1[7]);
    *((_OWORD *)v8 + 6) = (uint64_t)result;
  }
  if (byte_2540CFB0F < 0)
    return sub_223197FA4((_BYTE *)a2, (void *)xmmword_2540CFAF8, *((unint64_t *)&xmmword_2540CFAF8 + 1));
  *(_OWORD *)a2 = xmmword_2540CFAF8;
  *(_QWORD *)(a2 + 16) = unk_2540CFB08;
  return result;
}

void sub_2242B9C78(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2540CFAF0);
  _Unwind_Resume(a1);
}

std::string *sub_2242B9C90()
{
  xmmword_2540CFAF8 = 0uLL;
  unk_2540CFB08 = 0;
  return sub_2231816F0((std::string *)&xmmword_2540CFAF8, (std::string *)"/tmp", (std::string *)"");
}

void sub_2242B9CC8(_Unwind_Exception *exception_object)
{
  if (byte_2540CFB0F < 0)
    operator delete((void *)xmmword_2540CFAF8);
  _Unwind_Resume(exception_object);
}

BOOL sub_2242B9CEC(uint64_t a1, std::__fs::filesystem::path *a2)
{
  _BOOL8 v4;
  void **v6;
  void **v7;
  void *v8;
  void *__p;
  void **v10;

  (*(void (**)(void **__return_ptr))(*(_QWORD *)a1 + 272))(&__p);
  if (__p == 1)
    return sub_2242B75D8(a1, a2) == 0;
  (*(void (**)(void **__return_ptr, uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)a1 + 272))(&__p, a1, a2);
  if (__p != 2)
    return 0;
  sub_2242B0AE8((uint64_t)a2, 0, "*", 1uLL, a1, (uint64_t *)&__p);
  v6 = (void **)__p;
  v7 = v10;
  v4 = __p == v10;
  if (!__p)
    return v4;
  v8 = __p;
  if (__p != v10)
  {
    do
    {
      if (*((char *)v7 - 9) < 0)
        operator delete(*(v7 - 4));
      v7 -= 4;
    }
    while (v7 != v6);
    v8 = __p;
  }
  v10 = v6;
  operator delete(v8);
  return v4;
}

void sub_2242B9E18(uint64_t a1@<X0>, std::__fs::filesystem::path *a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  __int16 v8;
  _QWORD **v9;
  void **v10;
  char *v11;
  void **v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  std::string::size_type v20;
  std::string::size_type v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *size;
  unint64_t *v30;
  unint64_t v31;
  void *v32;
  char v33;
  _QWORD v34[2];
  std::string __p[5];
  uint64_t v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  (*(void (**)(std::string *__return_ptr))(*(_QWORD *)a1 + 272))(__p);
  if (__p[0].__r_.__value_.__s.__data_[0] != 1)
    goto LABEL_4;
  sub_2242B5CC0(a2, a1, __p);
  sub_2242B62DC(a1, (std::__fs::filesystem::path *)__p, (uint64_t)v34);
  v8 = WORD2(v34[0]);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p[0].__r_.__value_.__l.__data_);
    if ((v8 & 0x100) == 0)
      goto LABEL_4;
  }
  else if ((v34[0] & 0x10000000000) == 0)
  {
LABEL_4:
    a4[1] = 0;
    a4[2] = 0;
    *a4 = &off_24EC71BE8;
    return;
  }
  sub_2242B5CC0(a2, a1, __p);
  v9 = (_QWORD **)(a1 + 8);
  v10 = (void **)sub_2242BB0E0(a1 + 8, v34, (std::__fs::filesystem::path *)__p);
  v11 = (char *)*v10;
  if (!*v10)
  {
    v12 = v10;
    v11 = (char *)operator new(0x70uLL);
    *(std::string *)(v11 + 32) = __p[0];
    memset(__p, 0, 24);
    v11[64] = 0;
    v11[80] = 0;
    *((_DWORD *)v11 + 22) = 511;
    *((_QWORD *)v11 + 12) = 0;
    *((_QWORD *)v11 + 13) = 0;
    v13 = v34[0];
    *(_QWORD *)v11 = 0;
    *((_QWORD *)v11 + 1) = 0;
    *((_QWORD *)v11 + 2) = v13;
    *v12 = v11;
    v14 = (_QWORD *)**v9;
    v15 = (uint64_t *)v11;
    if (v14)
    {
      *v9 = v14;
      v15 = (uint64_t *)*v12;
    }
    sub_2231A9A8C(*(uint64_t **)(a1 + 16), v15);
    ++*(_QWORD *)(a1 + 24);
  }
  if (!v11[80])
    sub_22324A974();
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p[0].__r_.__value_.__l.__data_);
  v16 = (_QWORD *)*((_QWORD *)v11 + 8);
  sub_2242B4414((uint64_t *)v11 + 8, (size_t *)&v32);
  if (v33 < 0)
  {
    operator delete(v32);
    v17 = v16 + 2;
    if ((a3 & 3) != 0)
      goto LABEL_16;
  }
  else
  {
    v17 = v16 + 2;
    if ((a3 & 3) != 0)
    {
LABEL_16:
      std::istream::seekg();
      MEMORY[0x227684604](v34, v17);
      v18 = (char *)v17 + *(_QWORD *)(v16[2] - 24);
      if ((v18[32] & 5) != 0)
        goto LABEL_23;
      (*(void (**)(std::string *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v18 + 5) + 32))(__p, *((_QWORD *)v18 + 5), 0, 2, 16);
      if (v36 != -1)
        goto LABEL_23;
      goto LABEL_22;
    }
  }
  std::istream::seekg();
  MEMORY[0x227684604](v34, v17);
  v19 = (char *)v17 + *(_QWORD *)(v16[2] - 24);
  if ((v19[32] & 5) != 0)
    goto LABEL_23;
  (*(void (**)(std::string *__return_ptr, _QWORD, _QWORD, _QWORD, uint64_t))(**((_QWORD **)v19 + 5) + 32))(__p, *((_QWORD *)v19 + 5), 0, 0, 16);
  if (v36 != -1)
    goto LABEL_23;
LABEL_22:
  std::ios_base::clear((std::ios_base *)((char *)v17 + *(_QWORD *)(*v17 - 24)), *(_DWORD *)((char *)v17 + *(_QWORD *)(*v17 - 24) + 32) | 4);
LABEL_23:
  MEMORY[0x227684610](v34);
  std::ios_base::clear((std::ios_base *)((char *)v16 + *(_QWORD *)(*v16 - 24)), 0);
  v20 = *((_QWORD *)v11 + 8);
  v21 = *((_QWORD *)v11 + 9);
  __p[0].__r_.__value_.__r.__words[0] = v20;
  __p[0].__r_.__value_.__l.__size_ = v21;
  if (v21)
  {
    v22 = (unint64_t *)(v21 + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  v24 = (std::__shared_weak_count *)operator new(0x38uLL);
  v25 = v24;
  v24->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v24->__shared_owners_;
  v24->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71B98;
  *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = 0uLL;
  v24->__shared_weak_owners_ = 0;
  v24[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71CF8;
  v24[1].__shared_owners_ = (uint64_t)&unk_24EC71D28;
  v24[1].__shared_weak_owners_ = v20;
  v24[2].__vftable = (std::__shared_weak_count_vtbl *)v21;
  *a4 = &off_24EC71BE8;
  a4[1] = (char *)v24 + 32;
  a4[2] = v24;
  do
    v27 = __ldxr(p_shared_owners);
  while (__stxr(v27 + 1, p_shared_owners));
  do
    v28 = __ldaxr(p_shared_owners);
  while (__stlxr(v28 - 1, p_shared_owners));
  if (!v28)
  {
    ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
    std::__shared_weak_count::__release_weak(v25);
  }
  size = (std::__shared_weak_count *)__p[0].__r_.__value_.__l.__size_;
  if (__p[0].__r_.__value_.__l.__size_)
  {
    v30 = (unint64_t *)(__p[0].__r_.__value_.__l.__size_ + 8);
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2242BA294(std::__fs::filesystem::path *this@<X1>, uint64_t a2@<X0>, unsigned int a3@<W2>, _QWORD *a4@<X8>)
{
  std::__fs::filesystem::path::__string_view v8;
  std::string *v9;
  std::basic_string_view<_CharT, _Traits>::size_type v10;
  std::basic_string_view<_CharT, _Traits>::size_type v11;
  int v12;
  _QWORD **v13;
  void **v14;
  char *v15;
  int v16;
  uint64_t v17;
  _QWORD **v18;
  int v19;
  __int128 v20;
  std::__shared_weak_count *v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  _QWORD *v28;
  void **v29;
  std::string::size_type v30;
  _QWORD *v31;
  uint64_t *v32;
  unint64_t *v33;
  unint64_t v34;
  _QWORD *v35;
  char *v36;
  char *v37;
  std::string::size_type v38;
  std::string::size_type v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  std::string __p;
  std::string __dst[5];
  uint64_t v54;
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  v8 = std::__fs::filesystem::path::__parent_path(this);
  if (v8.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  if (v8.__size_ >= 0x17)
  {
    v10 = (v8.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8.__size_ | 7) != 0x17)
      v10 = v8.__size_ | 7;
    v11 = v10 + 1;
    v9 = (std::string *)operator new(v10 + 1);
    __dst[0].__r_.__value_.__l.__size_ = v8.__size_;
    __dst[0].__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v9;
    goto LABEL_8;
  }
  *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v8.__size_;
  v9 = __dst;
  if (v8.__size_)
LABEL_8:
    memmove(v9, v8.__data_, v8.__size_);
  v9->__r_.__value_.__s.__data_[v8.__size_] = 0;
  __p = __dst[0];
  (*(void (**)(std::string *__return_ptr, uint64_t, std::string *))(*(_QWORD *)a2 + 272))(__dst, a2, &__p);
  v12 = __dst[0].__r_.__value_.__s.__data_[0];
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v12 != 2)
    {
LABEL_34:
      a4[1] = 0;
      a4[2] = 0;
      *a4 = &off_24EC71C10;
      return;
    }
  }
  else if (__dst[0].__r_.__value_.__s.__data_[0] != 2)
  {
    goto LABEL_34;
  }
  (*(void (**)(std::string *__return_ptr, uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)a2 + 272))(__dst, a2, this);
  if (__dst[0].__r_.__value_.__s.__data_[0])
  {
    if (__dst[0].__r_.__value_.__s.__data_[0] != 255)
    {
      (*(void (**)(std::string *__return_ptr, uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)a2 + 272))(__dst, a2, this);
      if (__dst[0].__r_.__value_.__s.__data_[0] != 1)
        goto LABEL_34;
    }
  }
  sub_2242B5CC0(this, a2, __dst);
  v13 = (_QWORD **)(a2 + 8);
  v14 = (void **)sub_2242BB0E0(a2 + 8, &__p, (std::__fs::filesystem::path *)__dst);
  v15 = (char *)*v14;
  if (*v14)
  {
    v16 = a3 & 3;
    if ((SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_39;
  }
  v29 = v14;
  v15 = (char *)operator new(0x70uLL);
  *(std::string *)(v15 + 32) = __dst[0];
  memset(__dst, 0, 24);
  v15[64] = 0;
  v15[80] = 0;
  *((_DWORD *)v15 + 22) = 511;
  *((_QWORD *)v15 + 12) = 0;
  *((_QWORD *)v15 + 13) = 0;
  v30 = __p.__r_.__value_.__r.__words[0];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  *((_QWORD *)v15 + 2) = v30;
  *v29 = v15;
  v31 = (_QWORD *)**v13;
  v32 = (uint64_t *)v15;
  if (v31)
  {
    *v13 = v31;
    v32 = (uint64_t *)*v29;
  }
  sub_2231A9A8C(*(uint64_t **)(a2 + 16), v32);
  ++*(_QWORD *)(a2 + 24);
  v16 = a3 & 3;
  if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0)
LABEL_39:
    operator delete(__dst[0].__r_.__value_.__l.__data_);
LABEL_18:
  v17 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 56) + 16))(*(_QWORD *)(a2 + 56));
  v18 = (_QWORD **)(v15 + 64);
  *((_OWORD *)v15 + 6) = v17;
  v19 = (a3 >> 5) & 1;
  if (!v15[80])
    v19 = 1;
  if ((v19 | (v16 == 0)) != 1)
  {
    v28 = *v18;
    goto LABEL_49;
  }
  *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = 0;
  __dst[0].__r_.__value_.__s.__data_[0] = 0;
  sub_2242B4A0C(&v50, (__int128 *)__dst);
  if (!v15[80])
  {
    sub_2242B4BAC((_OWORD *)v15 + 4, &v50);
    v15[80] = 1;
    v27 = v51;
    if (!v51)
      goto LABEL_45;
    goto LABEL_41;
  }
  sub_2242B4BAC(&__p, &v50);
  v20 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
  v21 = (std::__shared_weak_count *)*((_QWORD *)v15 + 9);
  *((_OWORD *)v15 + 4) = v20;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
  if (__p.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  sub_2242B48D8(*v18);
  v27 = v51;
  if (v51)
  {
LABEL_41:
    v33 = (unint64_t *)&v27->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
LABEL_45:
  if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst[0].__r_.__value_.__l.__data_);
  if (!v15[80])
    sub_22324A974();
  v28 = *v18;
  if (v16)
  {
LABEL_49:
    v35 = v28 + 2;
    MEMORY[0x227684604](&__p, v28 + 2);
    v36 = (char *)v35 + *(_QWORD *)(*v35 - 24);
    if ((v36[32] & 5) != 0)
      goto LABEL_55;
    (*(void (**)(std::string *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v36 + 5) + 32))(__dst, *((_QWORD *)v36 + 5), 0, 2, 16);
    if (v54 != -1)
      goto LABEL_55;
    goto LABEL_54;
  }
  v35 = v28 + 2;
  MEMORY[0x227684604](&__p, v28 + 2);
  v37 = (char *)v35 + *(_QWORD *)(*v35 - 24);
  if ((v37[32] & 5) != 0)
    goto LABEL_55;
  (*(void (**)(std::string *__return_ptr, _QWORD, _QWORD, _QWORD, uint64_t))(**((_QWORD **)v37 + 5) + 32))(__dst, *((_QWORD *)v37 + 5), 0, 0, 16);
  if (v54 != -1)
    goto LABEL_55;
LABEL_54:
  std::ios_base::clear((std::ios_base *)((char *)v35 + *(_QWORD *)(*v35 - 24)), *(_DWORD *)((char *)v35 + *(_QWORD *)(*v35 - 24) + 32) | 4);
LABEL_55:
  MEMORY[0x227684610](&__p);
  std::ios_base::clear((std::ios_base *)((char *)v28 + *(_QWORD *)(*v28 - 24)), 0);
  v38 = *((_QWORD *)v15 + 8);
  v39 = *((_QWORD *)v15 + 9);
  __dst[0].__r_.__value_.__r.__words[0] = v38;
  __dst[0].__r_.__value_.__l.__size_ = v39;
  if (v39)
  {
    v40 = (unint64_t *)(v39 + 8);
    do
      v41 = __ldxr(v40);
    while (__stxr(v41 + 1, v40));
  }
  v42 = (std::__shared_weak_count *)operator new(0x38uLL);
  v43 = v42;
  v42->__shared_owners_ = 0;
  v44 = (unint64_t *)&v42->__shared_owners_;
  v42->__shared_weak_owners_ = 0;
  v42->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71B98;
  *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_ = 0uLL;
  v42[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71CF8;
  v42[1].__shared_owners_ = (uint64_t)&unk_24EC71D28;
  v42[1].__shared_weak_owners_ = v38;
  v42[2].__vftable = (std::__shared_weak_count_vtbl *)v39;
  *a4 = &off_24EC71C10;
  a4[1] = v42 + 1;
  a4[2] = v42;
  do
    v45 = __ldxr(v44);
  while (__stxr(v45 + 1, v44));
  do
    v46 = __ldaxr(v44);
  while (__stlxr(v46 - 1, v44));
  if (!v46)
  {
    ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
    std::__shared_weak_count::__release_weak(v43);
  }
  v47 = (std::__shared_weak_count *)__dst[0].__r_.__value_.__l.__size_;
  if (__dst[0].__r_.__value_.__l.__size_)
  {
    v48 = (unint64_t *)(__dst[0].__r_.__value_.__l.__size_ + 8);
    do
      v49 = __ldaxr(v48);
    while (__stlxr(v49 - 1, v48));
    if (!v49)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
}

void sub_2242BA91C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v6;
  const std::__fs::filesystem::path *v7;
  uint64_t v8;
  std::__fs::filesystem::path::__string_view v9;
  std::string *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v11;
  std::basic_string_view<_CharT, _Traits>::size_type v12;
  std::__fs::filesystem::path::__string_view v13;
  _QWORD *v14;
  std::__fs::filesystem::path::__string_view v15;
  int v16;
  _QWORD *v17;
  BOOL v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  uint64_t v22;
  std::string __p;
  std::__fs::filesystem::path v24;
  std::string v25;
  std::string __dst;

  (*(void (**)(std::string *__return_ptr))(*a1 + 272))(&__dst);
  if (__dst.__r_.__value_.__s.__data_[0] != 2)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  sub_2242B5CC0((std::__fs::filesystem::path *)a2, (uint64_t)a1, &v25);
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v6 = (_QWORD *)a1[1];
  if (v6 == a1 + 2)
  {
    v7 = 0;
    v8 = 0;
    goto LABEL_58;
  }
  do
  {
    v9 = std::__fs::filesystem::path::__parent_path((const std::__fs::filesystem::path *)(v6 + 4));
    if (v9.__size_ >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    if (v9.__size_ >= 0x17)
    {
      v11 = (v9.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9.__size_ | 7) != 0x17)
        v11 = v9.__size_ | 7;
      v12 = v11 + 1;
      p_dst = (std::string *)operator new(v11 + 1);
      __dst.__r_.__value_.__l.__size_ = v9.__size_;
      __dst.__r_.__value_.__r.__words[2] = v12 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
LABEL_12:
      memmove(p_dst, v9.__data_, v9.__size_);
      goto LABEL_13;
    }
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v9.__size_;
    p_dst = &__dst;
    if (v9.__size_)
      goto LABEL_12;
LABEL_13:
    p_dst->__r_.__value_.__s.__data_[v9.__size_] = 0;
    __p = __dst;
    sub_2242B5CC0((std::__fs::filesystem::path *)&__p, (uint64_t)a1, &v24.__pn_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v13.__data_ = (const std::string_view::value_type *)&v25;
    else
      v13.__data_ = (const std::string_view::value_type *)v25.__r_.__value_.__r.__words[0];
    if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v13.__size_ = HIBYTE(v25.__r_.__value_.__r.__words[2]);
    else
      v13.__size_ = v25.__r_.__value_.__l.__size_;
    if (std::__fs::filesystem::path::__compare(&v24, v13))
      goto LABEL_22;
    sub_2242B5CC0((std::__fs::filesystem::path *)(v6 + 4), (uint64_t)a1, &__dst);
    memset(&__p, 0, sizeof(__p));
    sub_2231816F0(&__p, (std::string *)"/", (std::string *)"");
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v15.__data_ = (const std::string_view::value_type *)&__p;
    else
      v15.__data_ = (const std::string_view::value_type *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v15.__size_ = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v15.__size_ = __p.__r_.__value_.__l.__size_;
    v16 = std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)&__dst, v15);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_33:
        if (!v16)
          goto LABEL_22;
        goto LABEL_43;
      }
    }
    else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_33;
    }
    operator delete(__dst.__r_.__value_.__l.__data_);
    if (!v16)
      goto LABEL_22;
LABEL_43:
    sub_2242B3AC4((uint64_t)a1, (uint64_t)&v25, (std::__fs::filesystem::path *)&__p);
    if (*(char *)(a2 + 23) < 0)
      sub_223197FA4(&__dst, *(void **)a2, *(_QWORD *)(a2 + 8));
    else
      __dst = *(std::string *)a2;
    sub_22319C30C((uint64_t)&__dst, (std::__fs::filesystem::path *)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    sub_2242B62DC((uint64_t)a1, (std::__fs::filesystem::path *)(v6 + 4), (uint64_t)&__p);
    v19 = a3[1];
    if (v19 >= a3[2])
    {
      a3[1] = sub_2242AFA28((uint64_t)a3, (uint64_t)&__dst, &__p);
      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_22;
LABEL_55:
      operator delete(__dst.__r_.__value_.__l.__data_);
      goto LABEL_22;
    }
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4((_BYTE *)a3[1], __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else
    {
      v20 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      *(_QWORD *)(v19 + 16) = *((_QWORD *)&__dst.__r_.__value_.__l + 2);
      *(_OWORD *)v19 = v20;
    }
    *(_QWORD *)(v19 + 24) = __p.__r_.__value_.__r.__words[0];
    a3[1] = v19 + 32;
    a3[1] = v19 + 32;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_55;
LABEL_22:
    if (SHIBYTE(v24.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v24.__pn_.__r_.__value_.__l.__data_);
      v14 = (_QWORD *)v6[1];
      if (!v14)
      {
        do
        {
LABEL_38:
          v17 = (_QWORD *)v6[2];
          v18 = *v17 == (_QWORD)v6;
          v6 = v17;
        }
        while (!v18);
        goto LABEL_4;
      }
    }
    else
    {
      v14 = (_QWORD *)v6[1];
      if (!v14)
        goto LABEL_38;
    }
    do
    {
      v17 = v14;
      v14 = (_QWORD *)*v14;
    }
    while (v14);
LABEL_4:
    v6 = v17;
  }
  while (v17 != a1 + 2);
  v8 = *a3;
  v7 = (const std::__fs::filesystem::path *)a3[1];
LABEL_58:
  v21 = 126 - 2 * __clz(((uint64_t)v7 - v8) >> 5);
  if (v7 == (const std::__fs::filesystem::path *)v8)
    v22 = 0;
  else
    v22 = v21;
  sub_2242B1ADC(v8, v7, (uint64_t)&__dst, v22, 1);
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v25.__r_.__value_.__l.__data_);
}

void sub_2242BACA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;
  uint64_t v34;

  *(_QWORD *)(v33 + 8) = v34;
  if (a33 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  sub_223714960((void **)v33);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(a1);
}

uint64_t sub_2242BAD84(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56);
}

std::__fs::filesystem::filesystem_error *sub_2242BAD8C(std::__fs::filesystem::filesystem_error *a1, std::string *__what_arg, std::error_code __ec)
{
  char *v4;

  std::system_error::system_error(a1, __ec, __what_arg)->__vftable = (std::system_error_vtbl *)(MEMORY[0x24BEDB878]
                                                                                              + 16);
  v4 = (char *)operator new(0x60uLL);
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = &off_24EC579E0;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *((_QWORD *)v4 + 11) = 0;
  *(_OWORD *)(v4 + 24) = 0u;
  a1->__storage_.__ptr_ = (std::shared_ptr<std::__fs::filesystem::filesystem_error::_Storage>::element_type *)(v4 + 24);
  a1->__storage_.__cntrl_ = (std::__shared_weak_count *)v4;
  std::__fs::filesystem::filesystem_error::__create_what(a1, 0);
  return a1;
}

void sub_2242BAE20(_Unwind_Exception *a1)
{
  std::runtime_error *v1;
  uint64_t v2;

  sub_223167354(v2);
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_2242BAE3C(_Unwind_Exception *a1)
{
  std::runtime_error *v1;

  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_2242BAE50(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  BOOL v6;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v3 = *(_QWORD **)(a2 + 8);
  if (v3)
  {
    do
    {
      v4 = v3;
      v3 = (_QWORD *)*v3;
    }
    while (v3);
  }
  else
  {
    v5 = (_QWORD *)a2;
    do
    {
      v4 = (_QWORD *)v5[2];
      v6 = *v4 == (_QWORD)v5;
      v5 = v4;
    }
    while (!v6);
  }
  if (*a1 == a2)
    *a1 = v4;
  v7 = (uint64_t *)a1[1];
  --a1[2];
  sub_2231AFE60(v7, (uint64_t *)a2);
  if (!*(_BYTE *)(a2 + 80))
    goto LABEL_14;
  v8 = *(std::__shared_weak_count **)(a2 + 72);
  if (!v8)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if ((*(char *)(a2 + 55) & 0x80000000) == 0)
      goto LABEL_15;
  }
  else
  {
LABEL_14:
    if ((*(char *)(a2 + 55) & 0x80000000) == 0)
    {
LABEL_15:
      operator delete((void *)a2);
      return;
    }
  }
  operator delete(*(void **)(a2 + 32));
  operator delete((void *)a2);
}

void sub_2242BAF30(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  if (a2)
  {
    sub_2242BAF30(a1, *(_QWORD *)a2);
    sub_2242BAF30(a1, *(_QWORD *)(a2 + 8));
    if (!*(_BYTE *)(a2 + 80))
      goto LABEL_7;
    v4 = *(std::__shared_weak_count **)(a2 + 72);
    if (!v4)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      if ((*(char *)(a2 + 55) & 0x80000000) == 0)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      if ((*(char *)(a2 + 55) & 0x80000000) == 0)
      {
LABEL_8:
        operator delete((void *)a2);
        return;
      }
    }
    operator delete(*(void **)(a2 + 32));
    operator delete((void *)a2);
  }
}

char *sub_2242BAFD8(uint64_t a1, std::__fs::filesystem::path *this, __int128 **a3)
{
  uint64_t **v5;
  uint64_t **v7;
  char *v8;
  _BYTE *v9;
  __int128 *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;

  v5 = (uint64_t **)sub_2242BB0E0(a1, &v15, this);
  if (*v5)
    return (char *)*v5;
  v7 = v5;
  v8 = (char *)operator new(0x70uLL);
  v9 = v8 + 32;
  v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    sub_223197FA4(v9, *(void **)v10, *((_QWORD *)v10 + 1));
  }
  else
  {
    v11 = *v10;
    *((_QWORD *)v8 + 6) = *((_QWORD *)v10 + 2);
    *(_OWORD *)v9 = v11;
  }
  v8[64] = 0;
  v8[80] = 0;
  *((_DWORD *)v8 + 22) = 511;
  *((_QWORD *)v8 + 12) = 0;
  *((_QWORD *)v8 + 13) = 0;
  v12 = v15;
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = v12;
  *v7 = (uint64_t *)v8;
  v13 = **(_QWORD **)a1;
  v14 = (uint64_t *)v8;
  if (v13)
  {
    *(_QWORD *)a1 = v13;
    v14 = *v7;
  }
  sub_2231A9A8C(*(uint64_t **)(a1 + 8), v14);
  ++*(_QWORD *)(a1 + 16);
  return v8;
}

void sub_2242BB0CC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2242BB0E0(uint64_t a1, _QWORD *a2, std::__fs::filesystem::path *this)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;
  const std::__fs::filesystem::path *v8;
  const std::__fs::filesystem::path *v9;
  int v10;
  std::__fs::filesystem::path::__string_view v11;
  int v12;
  std::__fs::filesystem::path::__string_view v13;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v7 = v4;
        v9 = (const std::__fs::filesystem::path *)(v4 + 4);
        v8 = (const std::__fs::filesystem::path *)v4[4];
        v10 = SHIBYTE(v9->__pn_.__r_.__value_.__r.__words[2]);
        v11.__data_ = (const std::string_view::value_type *)(v10 >= 0 ? v9 : v8);
        v11.__size_ = v10 >= 0 ? HIBYTE(v9->__pn_.__r_.__value_.__r.__words[2]) : v9->__pn_.__r_.__value_.__l.__size_;
        if ((std::__fs::filesystem::path::__compare(this, v11) & 0x80000000) == 0)
          break;
        v4 = (_QWORD *)*v7;
        v5 = v7;
        if (!*v7)
          goto LABEL_21;
      }
      v12 = SHIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
      if (v12 >= 0)
        v13.__data_ = (const std::string_view::value_type *)this;
      else
        v13.__data_ = (const std::string_view::value_type *)this->__pn_.__r_.__value_.__r.__words[0];
      if (v12 >= 0)
        v13.__size_ = HIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
      else
        v13.__size_ = this->__pn_.__r_.__value_.__l.__size_;
      if ((std::__fs::filesystem::path::__compare(v9, v13) & 0x80000000) == 0)
        break;
      v5 = v7 + 1;
      v4 = (_QWORD *)v7[1];
    }
    while (v4);
  }
  else
  {
    v7 = (_QWORD *)(a1 + 8);
  }
LABEL_21:
  *a2 = v7;
  return v5;
}

uint64_t *sub_2242BB1A4(uint64_t *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16))
    {
      if (*(_BYTE *)(v2 + 80))
      {
        v3 = *(std::__shared_weak_count **)(v2 + 72);
        if (v3)
        {
          p_shared_owners = (unint64_t *)&v3->__shared_owners_;
          do
            v5 = __ldaxr(p_shared_owners);
          while (__stlxr(v5 - 1, p_shared_owners));
          if (!v5)
          {
            ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
            std::__shared_weak_count::__release_weak(v3);
            if ((*(char *)(v2 + 55) & 0x80000000) == 0)
              goto LABEL_10;
            goto LABEL_9;
          }
        }
      }
      if (*(char *)(v2 + 55) < 0)
LABEL_9:
        operator delete(*(void **)(v2 + 32));
    }
LABEL_10:
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t sub_2242BB244(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  std::__fs::filesystem::path::__string_view v7;
  int v8;
  uint64_t *v9;
  int v10;
  std::__fs::filesystem::path::__string_view v11;

  v2 = a1 + 8;
  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
    return v2;
  v5 = a1 + 8;
  do
  {
    v6 = *(char *)(a2 + 23);
    if (v6 >= 0)
      v7.__data_ = (const std::string_view::value_type *)a2;
    else
      v7.__data_ = *(const std::string_view::value_type **)a2;
    if (v6 >= 0)
      v7.__size_ = *(unsigned __int8 *)(a2 + 23);
    else
      v7.__size_ = *(_QWORD *)(a2 + 8);
    v8 = std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v3 + 32), v7);
    v9 = (uint64_t *)(v3 + 8);
    if (v8 >= 0)
    {
      v9 = (uint64_t *)v3;
      v5 = v3;
    }
    v3 = *v9;
  }
  while (*v9);
  if (v5 == v2)
    return v2;
  v10 = *(char *)(v5 + 55);
  v11.__data_ = v10 >= 0
              ? (const std::string_view::value_type *)(v5 + 32)
              : *(const std::string_view::value_type **)(v5 + 32);
  v11.__size_ = v10 >= 0 ? *(unsigned __int8 *)(v5 + 55) : *(_QWORD *)(v5 + 40);
  if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a2, v11) < 0)
    return v2;
  else
    return v5;
}

uint64_t *sub_2242BB308(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_2242BAF30(*a1, a1[2]);
  v2 = a1[1];
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = *(_QWORD *)(v3 + 16);
      }
      while (v3);
      a1[1] = v2;
    }
    sub_2242BAF30(*a1, v2);
  }
  return a1;
}

void sub_2242BB35C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71B98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2242BB36C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71B98;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2242BB39C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 48);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_2242BB3F8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2242BB460(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242BB4C8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2242BB4D8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

BOOL sub_2242BB4E8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) != 0;
}

uint64_t sub_2242BB4F8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2242BB560(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242BB5C8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2242BB5D8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2242BB640(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242BB6A8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t sub_2242BB6B0(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2242BB718(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242BB780(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t sub_2242BB788(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2242BB7F0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_2242BB84C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

void sub_2242BB8B4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242BB91C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_2242BB924(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t sub_2242BB92C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) + 16;
}

void sub_2242BB938(_QWORD *a1@<X8>)
{
  CGColorSpaceRef DeviceGray;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  CGColorSpaceRef v7;
  std::__shared_weak_count *v8;

  DeviceGray = CGColorSpaceCreateDeviceGray();
  v7 = DeviceGray;
  v3 = (std::__shared_weak_count *)operator new();
  v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71E60;
  v3->__shared_owners_ = 0;
  v3->__shared_weak_owners_ = 0;
  v3[1].__vftable = (std::__shared_weak_count_vtbl *)DeviceGray;
  v8 = v3;
  sub_2242BBA28((uint64_t)&v7, a1);
  v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_2242BB9E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2242BB9FC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242BBA14(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2242BBA28(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *(const void **)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  v15 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_2242BBECC(&v16, v3);
  v7 = v17;
  *a2 = v16;
  a2[1] = v7;
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
    v10 = v17;
    if (v17)
    {
      v11 = (unint64_t *)&v17->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  if (v15)
  {
    v13 = (unint64_t *)&v15->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_2242BBB14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2242BBB28(_QWORD *a1@<X8>)
{
  CGColorSpaceRef DeviceRGB;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  CGColorSpaceRef v7;
  std::__shared_weak_count *v8;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v7 = DeviceRGB;
  v3 = (std::__shared_weak_count *)operator new();
  v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71E60;
  v3->__shared_owners_ = 0;
  v3->__shared_weak_owners_ = 0;
  v3[1].__vftable = (std::__shared_weak_count_vtbl *)DeviceRGB;
  v8 = v3;
  sub_2242BBA28((uint64_t)&v7, a1);
  v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_2242BBBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2242BBBEC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242BBC04(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2242BBC18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v21[0] = v5;
  sub_2231813E8((_QWORD *)(v5 + 16), (uint64_t)(&off_24EC71DA8)[2 * *a3 + 2], (uint64_t)(&off_24EC71DA8)[2 * *a3 + 3]);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_22316DBC0();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v14 + 128);
    MEMORY[0x227684CE8](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_22316DD70();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24EC71E38[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_2242BBE78(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2242BBE9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2242BBEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22456E764((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2242BBECC(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24EC71E60;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_2242BBF2C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242BBF44(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2242BBF5C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2242BBF80(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_2242BBFA0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

std::__shared_weak_count_vtbl **sub_2242BC010(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_2242BC13C(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC71EC0;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_2242BC0EC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242BC104(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_2242BC118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::ostream::write();
  return a3;
}

_QWORD *sub_2242BC13C(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24EC71EC0;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_2242BC19C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242BC1B4(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2242BC1CC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2242BC1F0(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_2242BC210(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

std::__shared_weak_count_vtbl **sub_2242BC280(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_22415CEE4(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC6D190;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_2242BC35C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242BC374(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_2242BC388(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *exception;

  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) != 0)
    return 0;
  std::istream::tellg();
  std::istream::seekg();
  if (a3 < 0)
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  std::istream::read();
  return a1[1];
}

uint64_t sub_2242BC45C(_QWORD *a1, uint64_t a2)
{
  uint64_t v5;
  uint64_t v6;

  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) != 0)
    return 0;
  std::istream::tellg();
  std::istream::seekg();
  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) == 0)
  {
    std::istream::tellg();
    return v5 - v6;
  }
  return a2;
}

void sub_2242BC51C(_QWORD *a1)
{
  std::istream::seekg();
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), 0);
}

unint64_t sub_2242BC554(uint64_t a1)
{
  std::__shared_weak_count *v2;
  CGImageRef v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  CGImageRef v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int Width;
  std::__shared_weak_count *v13;
  CGImageRef v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;

  v3 = *(CGImageRef *)a1;
  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v2)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v5 = __ldxr(p_shared_owners);
  while (__stxr(v5 + 1, p_shared_owners));
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (v3)
      goto LABEL_10;
  }
  else
  {
LABEL_6:
    if (v3)
      goto LABEL_10;
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 223, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_26;
  }
LABEL_10:
  v8 = *(CGImageRef *)a1;
  v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7)
    goto LABEL_15;
  v9 = (unint64_t *)&v7->__shared_owners_;
  do
    v10 = __ldxr(v9);
  while (__stxr(v10 + 1, v9));
  do
    v11 = __ldaxr(v9);
  while (__stlxr(v11 - 1, v9));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
      goto LABEL_19;
  }
  else
  {
LABEL_15:
    if (v8)
      goto LABEL_19;
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 169, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
LABEL_26:
    abort();
  }
LABEL_19:
  Width = CGImageGetWidth(*(CGImageRef *)a1);
  v14 = *(CGImageRef *)a1;
  v13 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v13)
    goto LABEL_24;
  v15 = (unint64_t *)&v13->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    if (v14)
      return Width | ((unint64_t)CGImageGetHeight(*(CGImageRef *)a1) << 32);
  }
  else
  {
LABEL_24:
    if (v14)
      return Width | ((unint64_t)CGImageGetHeight(*(CGImageRef *)a1) << 32);
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 174, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_26;
  }
  return Width | ((unint64_t)CGImageGetHeight(*(CGImageRef *)a1) << 32);
}

void sub_2242BC72C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  CGImageRef v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  size_t BitsPerComponent;
  std::__shared_weak_count *v10;
  CGImageRef v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  CGColorSpaceRef ColorSpace;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  CGColorSpace *v21;
  CGImageByteOrderInfo ByteOrderInfo;
  CGImageByteOrderInfo v23;
  int v24;
  char *v25;
  char *v26;
  char *v27;
  int v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  BOOL v35;
  BOOL v36;
  char *v37;
  std::string *v38;
  char *v39;
  __int128 v40;
  char *v41;
  char *v42;
  __int128 v43;
  CGImageAlphaInfo AlphaInfo;
  __int16 BitmapInfo;
  size_t NumberOfComponents;
  std::__shared_weak_count *v47;
  CGImageRef v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  size_t BitsPerPixel;
  int64x2_t v53;
  int8x16_t v54;
  unint64_t v55;
  int v56;
  int v57;
  char v58;
  int v59;
  char *v60;
  char *v61;
  const char *v62;
  const char *v63;
  size_t v64;
  std::string *v65;
  __int128 v66;
  char *v67;
  __int128 v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  _BOOL4 v81;
  BOOL v82;
  char *v83;
  char *v84;
  char *v85;
  std::string *v86;
  char *v87;
  __int128 v88;
  char *v89;
  BOOL v90;
  int v91;
  BOOL v92;
  int v93;
  BOOL v94;
  int v95;
  BOOL v96;
  int v97;
  BOOL v98;
  BOOL v100;
  BOOL v102;
  BOOL v104;
  const char *v106;
  char *v107;
  __int128 v108;
  __int128 v109;
  int v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  char *v114;
  char *v115;
  void *v116;
  int v117;
  int v118;
  int v119;
  _BYTE v120[7];
  __int16 v121;
  char v122;
  CGColorSpaceModel Model;
  __int128 space;
  void *v125;
  char *v126;
  unint64_t v127;
  void *v128[2];
  uint64_t v129;
  std::string v130;
  int v131;
  std::string __p;
  std::string *v133;
  std::string v134;
  std::string *p_p;
  std::string *v136;

  v5 = *(CGImageRef *)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v4)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    if (v5)
      goto LABEL_10;
  }
  else
  {
LABEL_6:
    if (v5)
      goto LABEL_10;
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 179, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_10:
  BitsPerComponent = CGImageGetBitsPerComponent(*(CGImageRef *)a1);
  v125 = 0;
  v126 = 0;
  v127 = 0;
  v11 = *(CGImageRef *)a1;
  v10 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v10)
    goto LABEL_15;
  v12 = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (v11)
      goto LABEL_19;
  }
  else
  {
LABEL_15:
    if (v11)
      goto LABEL_19;
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 194, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_19:
  ColorSpace = CGImageGetColorSpace(*(CGImageRef *)a1);
  sub_2242BBECC(&v134, ColorSpace);
  space = *(_OWORD *)&v134.__r_.__value_.__l.__data_;
  if (v134.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v134.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    size = (std::__shared_weak_count *)v134.__r_.__value_.__l.__size_;
    if (v134.__r_.__value_.__l.__size_)
    {
      v19 = (unint64_t *)(v134.__r_.__value_.__l.__size_ + 8);
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
        std::__shared_weak_count::__release_weak(size);
      }
    }
  }
  v21 = (CGColorSpace *)space;
  Model = CGColorSpaceGetModel((CGColorSpaceRef)space);
  ByteOrderInfo = CGImageGetByteOrderInfo(*(CGImageRef *)a1);
  v23 = ByteOrderInfo;
  if (BitsPerComponent == 8 && ByteOrderInfo == kCGImageByteOrderDefault
    || BitsPerComponent == 8 && ByteOrderInfo == kCGImageByteOrder32Little)
  {
    v24 = 0;
  }
  else
  {
    v24 = 0;
    v35 = BitsPerComponent == 32 && ByteOrderInfo == kCGImageByteOrder32Little;
    v36 = ByteOrderInfo == kCGImageByteOrder16Little && BitsPerComponent == 16;
    if (!v36 && !v35)
    {
      v79 = sub_2239B8DE0(&v125, "Byte order is incompatible.");
      v81 = BitsPerComponent == 16 && v23 == kCGImageByteOrder16Big;
      v82 = v23 == kCGImageByteOrder32Big && BitsPerComponent == 32;
      v126 = v79;
      if (v82 || v81)
      {
        if ((unint64_t)v79 >= v127)
        {
          v84 = sub_223C22A90(&v125, "Byte order is inverted.");
        }
        else
        {
          v83 = (char *)operator new(0x19uLL);
          *(_QWORD *)v79 = v83;
          *(_OWORD *)(v79 + 8) = xmmword_2245B9430;
          strcpy(v83, "Byte order is inverted.");
          v84 = v79 + 24;
        }
        v126 = v84;
        v24 = 1;
      }
      else
      {
        if (BitsPerComponent == 8)
          sub_2242D9C80((char ***)&v125);
        else
          sub_2242D9A88((char ***)&v125);
        v24 = 5;
      }
    }
  }
  if (CGImageGetPixelFormatInfo(*(CGImageRef *)a1))
  {
    v25 = v126;
    if ((unint64_t)v126 >= v127)
    {
      v29 = (char *)v125;
      v30 = 0xAAAAAAAAAAAAAAABLL * ((v126 - (_BYTE *)v125) >> 3);
      v31 = v30 + 1;
      if (v30 + 1 > 0xAAAAAAAAAAAAAAALL)
        sub_22316E078();
      if (0x5555555555555556 * ((uint64_t)(v127 - (_QWORD)v125) >> 3) > v31)
        v31 = 0x5555555555555556 * ((uint64_t)(v127 - (_QWORD)v125) >> 3);
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v127 - (_QWORD)v125) >> 3) >= 0x555555555555555)
        v32 = 0xAAAAAAAAAAAAAAALL;
      else
        v32 = v31;
      v136 = (std::string *)&v127;
      if (v32)
      {
        if (v32 > 0xAAAAAAAAAAAAAAALL)
          sub_223174E94();
        v33 = (char *)operator new(24 * v32);
      }
      else
      {
        v33 = 0;
      }
      v37 = &v33[24 * v30];
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)v33;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)v37;
      v38 = (std::string *)&v33[24 * v32];
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)v37;
      p_p = v38;
      v39 = (char *)operator new(0x30uLL);
      *(_QWORD *)v37 = v39;
      *(_OWORD *)(v37 + 8) = xmmword_2245C43D0;
      strcpy(v39, "Pixel format is not kCGImagePixelFormatPacked.");
      v27 = v37 + 24;
      if (v25 == v29)
      {
        v125 = v37;
        v126 = v37 + 24;
        v127 = (unint64_t)v38;
      }
      else
      {
        do
        {
          v40 = *(_OWORD *)(v25 - 24);
          *((_QWORD *)v37 - 1) = *((_QWORD *)v25 - 1);
          *(_OWORD *)(v37 - 24) = v40;
          v37 -= 24;
          *((_QWORD *)v25 - 2) = 0;
          *((_QWORD *)v25 - 1) = 0;
          *((_QWORD *)v25 - 3) = 0;
          v25 -= 24;
        }
        while (v25 != v29);
        v25 = (char *)v125;
        v41 = v126;
        v125 = v37;
        v126 = v27;
        v127 = (unint64_t)v38;
        while (v41 != v25)
        {
          if (*(v41 - 1) < 0)
            operator delete(*((void **)v41 - 3));
          v41 -= 24;
        }
      }
      if (v25)
        operator delete(v25);
    }
    else
    {
      v26 = (char *)operator new(0x30uLL);
      *(_QWORD *)v25 = v26;
      *(_OWORD *)(v25 + 8) = xmmword_2245C43D0;
      strcpy(v26, "Pixel format is not kCGImagePixelFormatPacked.");
      v27 = v25 + 24;
    }
    v126 = v27;
    v28 = 5;
  }
  else
  {
    v28 = 0;
  }
  v119 = v28;
  if (Model >= kCGColorSpaceModelCMYK)
  {
    v131 = 0;
    sub_223C84FFC(&v130, "Color space model ");
    sub_2242BBC18((uint64_t)&v133, (uint64_t)&v130, (int *)&Model);
    v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
    v134.__r_.__value_.__l.__size_ = (std::string::size_type)" not yet supported.";
    v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
    p_p = (std::string *)" not yet supported.";
    v136 = (std::string *)" not yet supported.";
    if (v131 == -1)
      sub_22316DD70();
    v128[0] = &v134;
    ((void (*)(void **, std::string *))off_24EC71F58[v131])(v128, &v130);
    if (v131 == -1)
      sub_22316DD70();
    v134.__r_.__value_.__r.__words[0] = (std::string::size_type)v128;
    ((void (*)(std::string *__return_ptr, std::string *, std::string *))off_24EC71F70[v131])(&__p, &v134, &v130);
    if (v131 != -1)
      ((void (*)(std::string *, std::string *))off_24EC71F28[v131])(&v134, &v130);
    v42 = v126;
    if ((unint64_t)v126 >= v127)
    {
      v126 = sub_22319BED8(&v125, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
      v43 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      *((_QWORD *)v126 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
      *(_OWORD *)v42 = v43;
      v126 = v42 + 24;
    }
    v118 = 5;
  }
  else
  {
    v118 = 0;
  }
  AlphaInfo = CGImageGetAlphaInfo(*(CGImageRef *)a1);
  BitmapInfo = CGImageGetBitmapInfo(*(CGImageRef *)a1);
  NumberOfComponents = CGColorSpaceGetNumberOfComponents(v21);
  v48 = *(CGImageRef *)a1;
  v47 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v47)
    goto LABEL_85;
  v49 = (unint64_t *)&v47->__shared_owners_;
  do
    v50 = __ldxr(v49);
  while (__stxr(v50 + 1, v49));
  do
    v51 = __ldaxr(v49);
  while (__stlxr(v51 - 1, v49));
  if (!v51)
  {
    ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
    std::__shared_weak_count::__release_weak(v47);
    if (!v48)
    {
LABEL_86:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 184, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
    }
  }
  else
  {
LABEL_85:
    if (!v48)
      goto LABEL_86;
  }
  BitsPerPixel = CGImageGetBitsPerPixel(*(CGImageRef *)a1);
  v55 = BitsPerPixel;
  v56 = BitmapInfo & 0xF00;
  switch(AlphaInfo)
  {
    case kCGImageAlphaNone:
      if (NumberOfComponents == 3)
      {
        if (BitsPerComponent == 8 && BitsPerPixel == 24)
        {
          v57 = 0;
          v59 = 21;
          v58 = 1;
        }
        else
        {
          v92 = BitsPerComponent == 16 && BitsPerPixel == 48;
          v93 = !v92;
          if (!v92 || (BitmapInfo & 0xF00) != 0)
          {
            v100 = v56 == 0;
            if ((BitmapInfo & 0xF00) == 0)
              v93 = 1;
            if (v93 == 1)
            {
              if (BitsPerComponent != 32 || BitsPerPixel != 96)
                v100 = 1;
              if (v100)
                goto LABEL_264;
              v57 = 0;
              v59 = 24;
              v58 = 1;
            }
            else
            {
              v57 = 0;
              v59 = 23;
              v58 = 1;
            }
          }
          else
          {
            v57 = 0;
            v59 = 22;
            v58 = 1;
          }
        }
      }
      else
      {
        if (NumberOfComponents != 1)
          goto LABEL_264;
        if (BitsPerComponent == 8 && BitsPerPixel == 8)
        {
          v57 = 0;
          v58 = 1;
          v59 = 1;
        }
        else
        {
          v90 = BitsPerComponent == 16 && BitsPerPixel == 16;
          v91 = !v90;
          if (!v90 || (BitmapInfo & 0xF00) != 0)
          {
            v98 = v56 == 0;
            if ((BitmapInfo & 0xF00) == 0)
              v91 = 1;
            if (v91 == 1)
            {
              if (BitsPerComponent != 32 || BitsPerPixel != 32)
                v98 = 1;
              if (v98)
                goto LABEL_264;
              v57 = 0;
              v59 = 4;
              v58 = 1;
            }
            else
            {
              v57 = 0;
              v59 = 3;
              v58 = 1;
            }
          }
          else
          {
            v57 = 0;
            v59 = 2;
            v58 = 1;
          }
        }
      }
      goto LABEL_287;
    case kCGImageAlphaPremultipliedLast:
      v69 = v126;
      if ((unint64_t)v126 < v127)
      {
        v70 = (char *)operator new(0x30uLL);
        *(_QWORD *)v69 = v70;
        *(_OWORD *)(v69 + 8) = xmmword_2245B9450;
        strcpy(v70, "Color values are premultiplied with alpha.");
        v71 = v69 + 24;
        goto LABEL_181;
      }
      v74 = (char *)v125;
      v75 = 0xAAAAAAAAAAAAAAABLL * ((v126 - (_BYTE *)v125) >> 3);
      v76 = v75 + 1;
      if (v75 + 1 > 0xAAAAAAAAAAAAAAALL)
        sub_22316E078();
      if (0x5555555555555556 * ((uint64_t)(v127 - (_QWORD)v125) >> 3) > v76)
        v76 = 0x5555555555555556 * ((uint64_t)(v127 - (_QWORD)v125) >> 3);
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v127 - (_QWORD)v125) >> 3) >= 0x555555555555555)
        v77 = 0xAAAAAAAAAAAAAAALL;
      else
        v77 = v76;
      v136 = (std::string *)&v127;
      v117 = v24;
      if (v77)
      {
        if (v77 > 0xAAAAAAAAAAAAAAALL)
          sub_223174E94();
        v78 = (char *)operator new(24 * v77);
      }
      else
      {
        v78 = 0;
      }
      v85 = &v78[24 * v75];
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)v78;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)v85;
      v86 = (std::string *)&v78[24 * v77];
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)v85;
      p_p = v86;
      v87 = (char *)operator new(0x30uLL);
      *(_QWORD *)v85 = v87;
      *(_OWORD *)(v85 + 8) = xmmword_2245B9450;
      strcpy(v87, "Color values are premultiplied with alpha.");
      v71 = v85 + 24;
      if (v69 == v74)
      {
        v125 = v85;
        v126 = v85 + 24;
        v127 = (unint64_t)v86;
LABEL_178:
        v24 = v117;
        goto LABEL_179;
      }
      do
      {
        v88 = *(_OWORD *)(v69 - 24);
        *((_QWORD *)v85 - 1) = *((_QWORD *)v69 - 1);
        *(_OWORD *)(v85 - 24) = v88;
        v85 -= 24;
        *((_QWORD *)v69 - 2) = 0;
        *((_QWORD *)v69 - 1) = 0;
        *((_QWORD *)v69 - 3) = 0;
        v69 -= 24;
      }
      while (v69 != v74);
      v69 = (char *)v125;
      v89 = v126;
      v125 = v85;
      v126 = v71;
      v127 = (unint64_t)v86;
      if (v89 == v69)
        goto LABEL_178;
      v24 = v117;
      do
      {
        if (*(v89 - 1) < 0)
          operator delete(*((void **)v89 - 3));
        v89 -= 24;
      }
      while (v89 != v69);
LABEL_179:
      if (v69)
        operator delete(v69);
LABEL_181:
      v126 = v71;
      if (BitsPerComponent != 8 || NumberOfComponents != 3 || v55 != 32)
        goto LABEL_264;
      v59 = 29;
      v58 = 1;
      v57 = 4;
LABEL_287:
      sub_22319C0DC((uint64_t)v125, (uint64_t)v126, " ", 1uLL, &v134, v53, v54);
      v109 = *(_OWORD *)&v134.__r_.__value_.__l.__data_;
      *(_DWORD *)v120 = v134.__r_.__value_.__r.__words[2];
      *(_DWORD *)&v120[3] = *(_DWORD *)((char *)&v134.__r_.__value_.__r.__words[2] + 3);
      v110 = SHIBYTE(v134.__r_.__value_.__r.__words[2]);
      *(_BYTE *)(a2 + 4) = v58;
      *(_DWORD *)a2 = v59;
      *(_WORD *)(a2 + 5) = v121;
      *(_BYTE *)(a2 + 7) = v122;
      *(_DWORD *)(a2 + 8) = v24;
      *(_DWORD *)(a2 + 12) = v119;
      *(_DWORD *)(a2 + 16) = v118;
      *(_DWORD *)(a2 + 20) = v57;
      if (v110 < 0)
      {
        sub_223197FA4((_BYTE *)(a2 + 24), (void *)v109, *((unint64_t *)&v109 + 1));
        operator delete((void *)v109);
        v111 = (std::__shared_weak_count *)*((_QWORD *)&space + 1);
        if (!*((_QWORD *)&space + 1))
          goto LABEL_295;
      }
      else
      {
        *(_OWORD *)(a2 + 24) = v109;
        *(_DWORD *)(a2 + 40) = *(_DWORD *)v120;
        *(_DWORD *)(a2 + 43) = *(_DWORD *)&v120[3];
        *(_BYTE *)(a2 + 47) = v110;
        v111 = (std::__shared_weak_count *)*((_QWORD *)&space + 1);
        if (!*((_QWORD *)&space + 1))
          goto LABEL_295;
      }
      v112 = (unint64_t *)&v111->__shared_owners_;
      do
        v113 = __ldaxr(v112);
      while (__stlxr(v113 - 1, v112));
      if (!v113)
      {
        ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
        std::__shared_weak_count::__release_weak(v111);
      }
LABEL_295:
      v114 = (char *)v125;
      if (v125)
      {
        v115 = v126;
        v116 = v125;
        if (v126 != v125)
        {
          do
          {
            if (*(v115 - 1) < 0)
              operator delete(*((void **)v115 - 3));
            v115 -= 24;
          }
          while (v115 != v114);
          v116 = v125;
        }
        v126 = v114;
        operator delete(v116);
      }
      return;
    case kCGImageAlphaLast:
      if (NumberOfComponents != 3)
        goto LABEL_264;
      if (BitsPerComponent == 8 && BitsPerPixel == 32 && (BitmapInfo & 0x2000) != 0)
      {
        v57 = 0;
        v59 = 33;
        v58 = 1;
      }
      else if (BitsPerComponent == 8 && BitsPerPixel == 32)
      {
        v57 = 0;
        v59 = 29;
        v58 = 1;
      }
      else
      {
        v94 = BitsPerComponent == 16 && BitsPerPixel == 64;
        v95 = !v94;
        if (!v94 || (BitmapInfo & 0xF00) != 0)
        {
          v102 = v56 == 0;
          if ((BitmapInfo & 0xF00) == 0)
            v95 = 1;
          if (v95 == 1)
          {
            if (BitsPerComponent != 32 || BitsPerPixel != 128)
              v102 = 1;
            if (v102)
              goto LABEL_264;
            v57 = 0;
            v59 = 32;
            v58 = 1;
          }
          else
          {
            v57 = 0;
            v59 = 31;
            v58 = 1;
          }
        }
        else
        {
          v57 = 0;
          v59 = 30;
          v58 = 1;
        }
      }
      goto LABEL_287;
    case kCGImageAlphaFirst:
      if (NumberOfComponents != 3)
        goto LABEL_264;
      if (BitsPerComponent == 8 && BitsPerPixel == 32 && (BitmapInfo & 0x2000) != 0)
      {
        v57 = 0;
        v59 = 25;
        v58 = 1;
      }
      else if (BitsPerComponent == 8 && BitsPerPixel == 32)
      {
        v57 = 0;
        v59 = 37;
        v58 = 1;
      }
      else
      {
        v96 = BitsPerComponent == 16 && BitsPerPixel == 64;
        v97 = !v96;
        if (!v96 || (BitmapInfo & 0xF00) != 0)
        {
          v104 = v56 == 0;
          if ((BitmapInfo & 0xF00) == 0)
            v97 = 1;
          if (v97 == 1)
          {
            if (BitsPerComponent != 32 || BitsPerPixel != 128)
              v104 = 1;
            if (v104)
              goto LABEL_264;
            v57 = 0;
            v59 = 40;
            v58 = 1;
          }
          else
          {
            v57 = 0;
            v59 = 39;
            v58 = 1;
          }
        }
        else
        {
          v57 = 0;
          v59 = 38;
          v58 = 1;
        }
      }
      goto LABEL_287;
    case kCGImageAlphaNoneSkipLast:
      v72 = v126;
      if ((unint64_t)v126 >= v127)
      {
        v73 = sub_223C235B8(&v125, "Skips last component.");
      }
      else
      {
        v126[23] = 21;
        strcpy(v72, "Skips last component.");
        v73 = v72 + 24;
      }
      v126 = v73;
      if (BitsPerComponent != 8 || NumberOfComponents != 3 || v55 != 32)
        goto LABEL_264;
      v59 = 21;
      v58 = 1;
      v57 = 2;
      goto LABEL_287;
    case kCGImageAlphaNoneSkipFirst:
      v60 = v126;
      if ((unint64_t)v126 >= v127)
      {
        v61 = sub_2241099B4(&v125, "Skips first component.");
      }
      else
      {
        *(_OWORD *)v126 = *(_OWORD *)"Skips first component.";
        *(_QWORD *)(v60 + 14) = *(_QWORD *)"mponent.";
        *((_WORD *)v60 + 11) = 5632;
        v61 = v60 + 24;
      }
      v126 = v61;
      if (BitsPerComponent != 8 || NumberOfComponents != 3 || v55 != 32)
        goto LABEL_264;
      v59 = 21;
      v58 = 1;
      v57 = 3;
      goto LABEL_287;
    default:
      v130.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
      *(_OWORD *)&v130.__r_.__value_.__r.__words[1] = xmmword_2245B9430;
      strcpy(v130.__r_.__value_.__l.__data_, "Unsupported alpha info ");
      v62 = "invalid alpha";
      if (AlphaInfo == kCGImageAlphaOnly)
        v62 = "kCGImageAlphaOnly";
      if (AlphaInfo == kCGImageAlphaPremultipliedFirst)
        v63 = "kCGImageAlphaPremultipliedFirst";
      else
        v63 = v62;
      v64 = strlen(v63);
      v65 = std::string::append(&v130, v63, v64);
      v66 = *(_OWORD *)&v65->__r_.__value_.__l.__data_;
      v134.__r_.__value_.__r.__words[2] = v65->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v134.__r_.__value_.__l.__data_ = v66;
      v65->__r_.__value_.__l.__size_ = 0;
      v65->__r_.__value_.__r.__words[2] = 0;
      v65->__r_.__value_.__r.__words[0] = 0;
      v67 = v126;
      if ((unint64_t)v126 >= v127)
      {
        v126 = sub_22319BED8(&v125, (uint64_t)&v134);
        if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v134.__r_.__value_.__l.__data_);
      }
      else
      {
        v68 = *(_OWORD *)&v134.__r_.__value_.__l.__data_;
        *((_QWORD *)v126 + 2) = *((_QWORD *)&v134.__r_.__value_.__l + 2);
        *(_OWORD *)v67 = v68;
        memset(&v134, 0, sizeof(v134));
        v126 = v67 + 24;
      }
      if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v130.__r_.__value_.__l.__data_);
LABEL_264:
      v131 = 0;
      sub_223A6B558(&v130, "For channels=");
      std::to_string(&__p, NumberOfComponents);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)&__p;
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = &__p;
      v136 = &__p;
      if (v131 == -1)
        sub_22316DD70();
      v133 = &v134;
      ((void (*)(std::string **, std::string *))off_24EC71F40[v131])(&v133, &v130);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)", bits_per_component=";
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = (std::string *)", bits_per_component=";
      v136 = (std::string *)", bits_per_component=";
      if (v131 == -1)
        sub_22316DD70();
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
      ((void (*)(std::string *, std::string *))off_24EC71F88[v131])(&__p, &v130);
      std::to_string(&__p, BitsPerComponent);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)&__p;
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = &__p;
      v136 = &__p;
      if (v131 == -1)
        sub_22316DD70();
      v133 = &v134;
      ((void (*)(std::string **, std::string *))off_24EC71F40[v131])(&v133, &v130);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)", bits_per_pixel=";
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = (std::string *)", bits_per_pixel=";
      v136 = (std::string *)", bits_per_pixel=";
      if (v131 == -1)
        sub_22316DD70();
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
      ((void (*)(std::string *, std::string *))off_24EC71FA0[v131])(&__p, &v130);
      std::to_string(&__p, v55);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)&__p;
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = &__p;
      v136 = &__p;
      if (v131 == -1)
        sub_22316DD70();
      v133 = &v134;
      ((void (*)(std::string **, std::string *))off_24EC71F40[v131])(&v133, &v130);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)", float_components=";
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = (std::string *)", float_components=";
      v136 = (std::string *)", float_components=";
      if (v131 == -1)
        sub_22316DD70();
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
      ((void (*)(std::string *, std::string *))off_24EC71F58[v131])(&__p, &v130);
      v106 = "false";
      if (v56)
        v106 = "true";
      v133 = (std::string *)v106;
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)&v133;
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = (std::string *)&v133;
      v136 = (std::string *)&v133;
      if (v131 == -1)
        sub_22316DD70();
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
      ((void (*)(std::string *, std::string *))off_24EC71FB8[v131])(&__p, &v130);
      if (v131 == -1)
        sub_22316DD70();
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
      ((void (*)(void **__return_ptr, std::string *, std::string *))off_24EC71F70[v131])(v128, &v134, &v130);
      if (v131 != -1)
        ((void (*)(std::string *, std::string *))off_24EC71F28[v131])(&v134, &v130);
      v107 = v126;
      if ((unint64_t)v126 >= v127)
      {
        v126 = sub_22319BED8(&v125, (uint64_t)v128);
        if (SHIBYTE(v129) < 0)
          operator delete(v128[0]);
      }
      else
      {
        v108 = *(_OWORD *)v128;
        *((_QWORD *)v126 + 2) = v129;
        *(_OWORD *)v107 = v108;
        v126 = v107 + 24;
      }
      v58 = 0;
      v59 = 0;
      v57 = 5;
      goto LABEL_287;
  }
}

void sub_2242BD8D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  uint64_t v36;

  sub_22319C040(v36 - 128);
  sub_223167354((uint64_t)&a13);
  sub_22319BB48(&a15);
  _Unwind_Resume(a1);
}

void sub_2242BD960()
{
  JUMPOUT(0x2242BD968);
}

void sub_2242BD984(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319B964((uint64_t)&a21);
  sub_223167354((uint64_t)&a13);
  sub_22319BB48(&a15);
  _Unwind_Resume(a1);
}

void sub_2242BDA00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_22319BB48((void **)va);
  _Unwind_Resume(a1);
}

void sub_2242BDA4C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  int v6;
  __int16 v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  int v18;
  char v19;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    v5 = *(_QWORD *)(a1 + 40);
    v6 = *(_DWORD *)(a1 + 48);
    v7 = *(_WORD *)(a1 + 52);
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 40);
    v6 = *(_DWORD *)(a1 + 48);
    v7 = *(_WORD *)(a1 + 52);
  }
  v15 = v1;
  v16 = v2;
  v17 = v5;
  v18 = v6;
  v19 = v7;
  if (!v2)
    goto LABEL_12;
  v9 = (unint64_t *)&v2->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v11 = v17;
    if (!v19)
      goto LABEL_21;
  }
  else
  {
LABEL_12:
    v11 = v17;
    if (!(_BYTE)v7)
      goto LABEL_21;
  }
  if (v11)
  {
    if (v16)
    {
      v12 = (unint64_t *)&v16->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
  }
LABEL_21:
  __asm { BR              X10 }
}

void sub_2242BDC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC204C0;
  sub_2241FD030((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BDCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC21DF8;
  sub_223C9E064((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 4 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BDD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC28E38;
  sub_2241F86F4((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BDDB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC6EF48;
  sub_2241FC9FC((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BDE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC5A4F8;
  sub_2241F80BC((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 4 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BDEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC63580;
  sub_2241FA00C((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BDF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC25150;
  sub_2241FA640((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BDFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC57DE8;
  sub_224166E5C((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BE03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27)
{
  uint64_t *v27;
  uint64_t v28;
  const UInt8 *v29;
  uint64_t v30;
  CFIndex v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count_vtbl *v34;
  std::__shared_weak_count *v35;
  unint64_t *p_shared_owners;
  unint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD v50[4];
  std::__shared_weak_count *v51;
  std::__shared_weak_count_vtbl *v52[2];
  CFDataRef v53;
  std::__shared_weak_count *v54;
  uint64_t v55;

  a20 = &off_24EC200A8;
  sub_223C9DD6C((uint64_t)&a11, (uint64_t)&a21);
  v31 = 0;
  if (a24 && a25)
    v31 = 2 * ((a25 - 1) * a27 + (a24 - 1) * a26 + 1);
  if (!a22)
    goto LABEL_46;
  v32 = (unint64_t *)(a22 + 8);
  do
    v33 = __ldaxr(v32);
  while (__stlxr(v33 - 1, v32));
  if (v33)
  {
LABEL_46:
    if (v29
      || !v31
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v29, v31, &v53);
      v34 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v53);
      sub_2242BC280(v52, v34, 0);
      v35 = v54;
      if (v54)
      {
        p_shared_owners = (unint64_t *)&v54->__shared_owners_;
        do
          v37 = __ldaxr(p_shared_owners);
        while (__stlxr(v37 - 1, p_shared_owners));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      if (v51)
      {
        v38 = &v51->__shared_owners_;
        do
          v39 = __ldaxr((unint64_t *)v38);
        while (__stlxr(v39 - 1, (unint64_t *)v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      sub_22415CDD4(v50, (uint64_t)v52);
      v40 = *(_DWORD *)(v28 + 48);
      v41 = *(unsigned int *)(v28 + 32);
      sub_22415CDD4((_QWORD *)(v30 - 104), (uint64_t)v50);
      *(_QWORD *)(v30 - 72) = v41 | 0x100000000;
      v53 = (CFDataRef)(v30 - 104);
      v55 = v30 - 72;
      sub_2242D5664(v30 - 88, v40);
      v43 = *(_QWORD *)(v30 - 88);
      v42 = *(_QWORD *)(v30 - 80);
      *v27 = v43;
      v27[1] = v42;
      *(_QWORD *)(v30 - 88) = 0;
      *(_QWORD *)(v30 - 80) = 0;
      v44 = *(std::__shared_weak_count **)(v30 - 96);
      if (v44)
      {
        v45 = (unint64_t *)&v44->__shared_owners_;
        do
          v46 = __ldaxr(v45);
        while (__stlxr(v46 - 1, v45));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
        v43 = *v27;
        v42 = v27[1];
      }
      if (!v42)
        goto LABEL_32;
      v47 = (unint64_t *)(v42 + 8);
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 1, v47));
      do
        v49 = __ldaxr(v47);
      while (__stlxr(v49 - 1, v47));
      if (v49)
      {
LABEL_32:
        if (!v43
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BE0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27)
{
  uint64_t *v27;
  uint64_t v28;
  const UInt8 *v29;
  uint64_t v30;
  CFIndex v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count_vtbl *v34;
  std::__shared_weak_count *v35;
  unint64_t *p_shared_owners;
  unint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD v50[4];
  std::__shared_weak_count *v51;
  std::__shared_weak_count_vtbl *v52[2];
  CFDataRef v53;
  std::__shared_weak_count *v54;
  uint64_t v55;

  a20 = &off_24EC5EEF8;
  sub_2241668A8((uint64_t)&a11, (uint64_t)&a21);
  v31 = 0;
  if (a24 && a25)
    v31 = 2 * ((a25 - 1) * a27 + (a24 - 1) * a26 + 1);
  if (!a22)
    goto LABEL_46;
  v32 = (unint64_t *)(a22 + 8);
  do
    v33 = __ldaxr(v32);
  while (__stlxr(v33 - 1, v32));
  if (v33)
  {
LABEL_46:
    if (v29
      || !v31
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v29, v31, &v53);
      v34 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v53);
      sub_2242BC280(v52, v34, 0);
      v35 = v54;
      if (v54)
      {
        p_shared_owners = (unint64_t *)&v54->__shared_owners_;
        do
          v37 = __ldaxr(p_shared_owners);
        while (__stlxr(v37 - 1, p_shared_owners));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      if (v51)
      {
        v38 = &v51->__shared_owners_;
        do
          v39 = __ldaxr((unint64_t *)v38);
        while (__stlxr(v39 - 1, (unint64_t *)v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      sub_22415CDD4(v50, (uint64_t)v52);
      v40 = *(_DWORD *)(v28 + 48);
      v41 = *(unsigned int *)(v28 + 32);
      sub_22415CDD4((_QWORD *)(v30 - 104), (uint64_t)v50);
      *(_QWORD *)(v30 - 72) = v41 | 0x100000000;
      v53 = (CFDataRef)(v30 - 104);
      v55 = v30 - 72;
      sub_2242D5664(v30 - 88, v40);
      v43 = *(_QWORD *)(v30 - 88);
      v42 = *(_QWORD *)(v30 - 80);
      *v27 = v43;
      v27[1] = v42;
      *(_QWORD *)(v30 - 88) = 0;
      *(_QWORD *)(v30 - 80) = 0;
      v44 = *(std::__shared_weak_count **)(v30 - 96);
      if (v44)
      {
        v45 = (unint64_t *)&v44->__shared_owners_;
        do
          v46 = __ldaxr(v45);
        while (__stlxr(v46 - 1, v45));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
        v43 = *v27;
        v42 = v27[1];
      }
      if (!v42)
        goto LABEL_32;
      v47 = (unint64_t *)(v42 + 8);
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 1, v47));
      do
        v49 = __ldaxr(v47);
      while (__stlxr(v49 - 1, v47));
      if (v49)
      {
LABEL_32:
        if (!v43
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BE11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC201A0;
  sub_2231A40A4((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BE1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC6E880;
  sub_2241F7A84((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BE224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27)
{
  uint64_t *v27;
  uint64_t v28;
  const UInt8 *v29;
  uint64_t v30;
  CFIndex v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count_vtbl *v34;
  std::__shared_weak_count *v35;
  unint64_t *p_shared_owners;
  unint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD v50[4];
  std::__shared_weak_count *v51;
  std::__shared_weak_count_vtbl *v52[2];
  CFDataRef v53;
  std::__shared_weak_count *v54;
  uint64_t v55;

  a20 = &off_24EC21230;
  sub_223C795C4((uint64_t)&a11, (uint64_t)&a21);
  v31 = 0;
  if (a24 && a25)
    v31 = 4 * ((a25 - 1) * a27 + (a24 - 1) * a26 + 1);
  if (!a22)
    goto LABEL_46;
  v32 = (unint64_t *)(a22 + 8);
  do
    v33 = __ldaxr(v32);
  while (__stlxr(v33 - 1, v32));
  if (v33)
  {
LABEL_46:
    if (v29
      || !v31
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v29, v31, &v53);
      v34 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v53);
      sub_2242BC280(v52, v34, 0);
      v35 = v54;
      if (v54)
      {
        p_shared_owners = (unint64_t *)&v54->__shared_owners_;
        do
          v37 = __ldaxr(p_shared_owners);
        while (__stlxr(v37 - 1, p_shared_owners));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      if (v51)
      {
        v38 = &v51->__shared_owners_;
        do
          v39 = __ldaxr((unint64_t *)v38);
        while (__stlxr(v39 - 1, (unint64_t *)v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      sub_22415CDD4(v50, (uint64_t)v52);
      v40 = *(_DWORD *)(v28 + 48);
      v41 = *(unsigned int *)(v28 + 32);
      sub_22415CDD4((_QWORD *)(v30 - 104), (uint64_t)v50);
      *(_QWORD *)(v30 - 72) = v41 | 0x100000000;
      v53 = (CFDataRef)(v30 - 104);
      v55 = v30 - 72;
      sub_2242D5664(v30 - 88, v40);
      v43 = *(_QWORD *)(v30 - 88);
      v42 = *(_QWORD *)(v30 - 80);
      *v27 = v43;
      v27[1] = v42;
      *(_QWORD *)(v30 - 88) = 0;
      *(_QWORD *)(v30 - 80) = 0;
      v44 = *(std::__shared_weak_count **)(v30 - 96);
      if (v44)
      {
        v45 = (unint64_t *)&v44->__shared_owners_;
        do
          v46 = __ldaxr(v45);
        while (__stlxr(v46 - 1, v45));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
        v43 = *v27;
        v42 = v27[1];
      }
      if (!v42)
        goto LABEL_32;
      v47 = (unint64_t *)(v42 + 8);
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 1, v47));
      do
        v49 = __ldaxr(v47);
      while (__stlxr(v49 - 1, v47));
      if (v49)
      {
LABEL_32:
        if (!v43
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BE294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC6E788;
  sub_2241F72D0((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BE318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC6F040;
  sub_2241FD528((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BE39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24EC6EB68;
  sub_2241FAB34((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2245288E0(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_2242BC280(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_22415CDD4(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_22415CDD4((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_2242D5664(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        JUMPOUT(0x2242BE6ACLL);
      }
      JUMPOUT(0x2242BE690);
    }
    JUMPOUT(0x2242BE768);
  }
  JUMPOUT(0x2242BE670);
}

void sub_2242BE41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22)
{
  unint64_t *v22;
  unint64_t v23;

  a20 = &off_24EC6F138;
  sub_2241FDCDC((uint64_t)&a11, (uint64_t)&a21);
  if (a22)
  {
    v22 = (unint64_t *)(a22 + 8);
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    JUMPOUT(0x2242BE49CLL);
  }
  JUMPOUT(0x2242BE4A0);
}

void sub_2242BE738()
{
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_22457406C);
  JUMPOUT(0x2242BE768);
}

void sub_2242BE770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v18;

  sub_223167354(v18);
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_2242BE794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v18;

  sub_223167354(v18 - 104);
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_2242BE7B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_2242BE7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242BE7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va1);
  sub_22319A5E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242BE804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319A5E0((uint64_t)va);
  _Unwind_Resume(a1);
}

#error "2242BE818: too big function (funcsize=0)"

void sub_2242D2F98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,std::__shared_weak_count *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  uint64_t v53;
  uint64_t v54;
  std::__shared_weak_count *v56;
  unint64_t *p_shared_owners;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;

  sub_2241F33C4((uint64_t)&a38);
  sub_2231E94AC((uint64_t)&a48);
  sub_223167354(v54 - 216);
  v56 = *(std::__shared_weak_count **)(v53 + 8);
  if (v56)
  {
    p_shared_owners = (unint64_t *)&v56->__shared_owners_;
    do
      v58 = __ldaxr(p_shared_owners);
    while (__stlxr(v58 - 1, p_shared_owners));
    if (!v58)
    {
      ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
      std::__shared_weak_count::__release_weak(v56);
    }
  }
  v59 = *(_QWORD **)(v53 + 280);
  if (v59 == (_QWORD *)(v54 - 160))
  {
    v60 = 4;
    v59 = (_QWORD *)(v54 - 160);
  }
  else
  {
    if (!v59)
    {
LABEL_11:
      if (a26)
      {
        v61 = (unint64_t *)&a26->__shared_owners_;
        do
          v62 = __ldaxr(v61);
        while (__stlxr(v62 - 1, v61));
        if (!v62)
        {
          ((void (*)(std::__shared_weak_count *))a26->__on_zero_shared)(a26);
          std::__shared_weak_count::__release_weak(a26);
        }
      }
      if (a23 < 0)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
    v60 = 5;
  }
  (*(void (**)(void))(*v59 + 8 * v60))();
  goto LABEL_11;
}

uint64_t sub_2242D54EC(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t result;
  char v6;
  _DWORD v7[6];
  int v8;
  _QWORD v9[5];
  _QWORD *v10;

  v8 = 0;
  sub_2232CFAFC(v7, "Cannot copy CGImage of format ");
  sub_2231A0B14((uint64_t)&v6, (uint64_t)v7, a2);
  v9[0] = v7;
  v9[1] = " into Image of format ";
  v9[2] = v7;
  v9[3] = " into Image of format ";
  v9[4] = " into Image of format ";
  if (v8 == -1)
    sub_22316DD70();
  v10 = v9;
  ((void (*)(_QWORD **, _DWORD *))off_24EC729F0[v8])(&v10, v7);
  sub_2231A0B14((uint64_t)v9, (uint64_t)v7, a3);
  if (v8 == -1)
    sub_22316DD70();
  v9[0] = &v10;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24EC71F70[v8])(v9, v7);
  if (v8 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24EC71F28[v8])(v9, v7);
  return result;
}

void sub_2242D5600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242D5614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242D5628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242D563C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242D5650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242D5664(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

void sub_2242D56A0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent, CGDataProviderRef provider, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  _QWORD *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  CGImageRef v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  CGDataProviderRef v38;
  std::__shared_weak_count *v39;
  CGColorSpaceRef v40[10];

  sub_22415CDD4(&v38, *(_QWORD *)v24);
  v25 = *(unint64_t **)(v24 + 8);
  v26 = **(_QWORD **)(v24 + 16);
  v27 = *v25;
  if ((v26 & 0xFF00000000) != 0)
  {
    if (v26 < v27
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 105, (uint64_t)"bytes_per_row >= min_bytes_per_row", 34, (uint64_t)"stride must not overlap internally", 34, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
  }
  else
  {
    v26 = *v25;
  }
  sub_2242BB938(v40);
  v28 = (std::__shared_weak_count *)v40[1];
  v29 = CGImageCreate(v27, HIDWORD(v27), 8uLL, 8uLL, v26, v40[0], 0, v38, 0, 0, kCGRenderingIntentDefault);
  v30 = (std::__shared_weak_count *)operator new();
  v30->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v30->__shared_owners_;
  v30->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC6D140;
  v30->__shared_weak_owners_ = 0;
  v30[1].__vftable = (std::__shared_weak_count_vtbl *)v29;
  sub_2242D998C(v23, v29, v30);
  do
    v32 = __ldaxr(p_shared_owners);
  while (__stlxr(v32 - 1, p_shared_owners));
  if (!v32)
  {
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
  }
  if (v28)
  {
    v33 = (unint64_t *)&v28->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v35 = v39;
  if (v39)
  {
    v36 = (unint64_t *)&v39->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_2242D7560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a4);
  sub_22415CDD4((uint64_t *)va, *(_QWORD *)v4);
  v5 = **(_QWORD **)(v4 + 16);
  if ((v5 & 0xFF00000000) == 0
    || (16 * (unint64_t)**(_QWORD **)(v4 + 8) <= v5
     || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 105, (uint64_t)"bytes_per_row >= min_bytes_per_row", 34, (uint64_t)"stride must not overlap internally", 34, (void (*)(void **))sub_22457406C))&& ((v5 & 0xF) == 0|| !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 107, (uint64_t)"(bytes_per_row % bytes_per_pixel == 0)", 38, (uint64_t)"stride must be multiple of pixel size", 37, (void (*)(void **))sub_22457406C)))
  {
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 136, (uint64_t)"", 0, (uint64_t)"not implemented", 15, (void (*)(void **))sub_22457406C);
  }
  abort();
}

void sub_2242D7638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a4);
  sub_22415CDD4((uint64_t *)va, *(_QWORD *)v4);
  v5 = **(_QWORD **)(v4 + 16);
  if ((v5 & 0xFF00000000) == 0
    || (8 * (unint64_t)**(_QWORD **)(v4 + 8) <= v5
     || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 105, (uint64_t)"bytes_per_row >= min_bytes_per_row", 34, (uint64_t)"stride must not overlap internally", 34, (void (*)(void **))sub_22457406C))&& ((v5 & 7) == 0|| !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 107, (uint64_t)"(bytes_per_row % bytes_per_pixel == 0)", 38, (uint64_t)"stride must be multiple of pixel size", 37, (void (*)(void **))sub_22457406C)))
  {
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 136, (uint64_t)"", 0, (uint64_t)"not implemented", 15, (void (*)(void **))sub_22457406C);
  }
  abort();
}

void sub_2242D891C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2242D8950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D89B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D89EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v18 = (unint64_t *)(a12 + 8);
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    JUMPOUT(0x2242D9968);
  }
  JUMPOUT(0x2242D9984);
}

void sub_2242D8C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D8CC4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8CDC()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D9754);
}

void sub_2242D8CEC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8D04()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D9778);
}

void sub_2242D8D14(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8D2C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D979CLL);
}

void sub_2242D8D3C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8D54()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D97C0);
}

void sub_2242D8D64(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8D7C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D97E4);
}

void sub_2242D8D8C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8DA4()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D9808);
}

void sub_2242D8DB4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8DCC()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D982CLL);
}

void sub_2242D8DDC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8DF4()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D9850);
}

void sub_2242D8E04(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8E1C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D9874);
}

void sub_2242D8E2C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8E44()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D9898);
}

void sub_2242D8E54(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8E6C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D98BCLL);
}

void sub_2242D8E7C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8E94()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D98E0);
}

void sub_2242D8EA4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8EBC()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D9904);
}

void sub_2242D8ECC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8EE4()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D9928);
}

void sub_2242D8EF4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8F0C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D994CLL);
}

void sub_2242D8F1C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8F34()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D970CLL);
}

void sub_2242D8F44(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8F5C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D9730);
}

void sub_2242D8F6C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_2242D8F84()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x2242D96E8);
}

void sub_2242D93CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D93F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D9414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D9438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D945C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D9480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D94A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D94C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D94EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D9510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D9534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D9558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D957C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D95A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D95C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D95E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D960C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D9630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D9654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D9678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D969C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D96C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2242D998C(_QWORD *a1, const void *a2, std::__shared_weak_count *a3)
{
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v15;
  std::__shared_weak_count *v16;

  if (a3)
  {
    p_shared_owners = (unint64_t *)&a3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_22415E120(&v15, a2);
  v6 = v16;
  *a1 = v15;
  a1[1] = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    v9 = v16;
    if (v16)
    {
      v10 = (unint64_t *)&v16->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  if (a3)
  {
    v12 = (unint64_t *)&a3->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a3->__on_zero_shared)(a3);
      std::__shared_weak_count::__release_weak(a3);
    }
  }
}

void sub_2242D9A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2242D9A88(char ***a1)
{
  unint64_t v2;
  char **v3;
  char *v4;
  char **v5;
  char **v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char **v13;
  char *v14;
  __int128 v15;
  char **v16;

  v2 = (unint64_t)a1[2];
  v3 = a1[1];
  if ((unint64_t)v3 >= v2)
  {
    v6 = *a1;
    v7 = 0xAAAAAAAAAAAAAAABLL * (v3 - *a1);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_22316E078();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v2 - (_QWORD)v6) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 > 0xAAAAAAAAAAAAAAALL)
        sub_223174E94();
      v11 = (char *)operator new(24 * v10);
    }
    else
    {
      v11 = 0;
    }
    v12 = &v11[24 * v7];
    v13 = (char **)&v11[24 * v10];
    v14 = (char *)operator new(0x50uLL);
    *(_QWORD *)v12 = v14;
    *(_OWORD *)(v12 + 8) = xmmword_2245C45A0;
    strcpy(v14, "Byte order size for non-8 bits per component does not match bits per component.");
    v5 = (char **)(v12 + 24);
    if (v3 == v6)
    {
      *a1 = (char **)v12;
      a1[1] = v5;
      a1[2] = v13;
    }
    else
    {
      do
      {
        v15 = *(_OWORD *)(v3 - 3);
        *((_QWORD *)v12 - 1) = *(v3 - 1);
        *(_OWORD *)(v12 - 24) = v15;
        v12 -= 24;
        *(v3 - 2) = 0;
        *(v3 - 1) = 0;
        *(v3 - 3) = 0;
        v3 -= 3;
      }
      while (v3 != v6);
      v3 = *a1;
      v16 = a1[1];
      *a1 = (char **)v12;
      a1[1] = v5;
      a1[2] = v13;
      while (v16 != v3)
      {
        if (*((char *)v16 - 1) < 0)
          operator delete(*(v16 - 3));
        v16 -= 3;
      }
    }
    if (v3)
      operator delete(v3);
  }
  else
  {
    v4 = (char *)operator new(0x50uLL);
    *v3 = v4;
    *(_OWORD *)(v3 + 1) = xmmword_2245C45A0;
    strcpy(v4, "Byte order size for non-8 bits per component does not match bits per component.");
    v5 = v3 + 3;
    a1[1] = v3 + 3;
  }
  a1[1] = v5;
}

void sub_2242D9C6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22319C040((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242D9C80(char ***a1)
{
  unint64_t v2;
  char **v3;
  char *v4;
  char **v5;
  char **v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char **v13;
  char *v14;
  __int128 v15;
  char **v16;

  v2 = (unint64_t)a1[2];
  v3 = a1[1];
  if ((unint64_t)v3 >= v2)
  {
    v6 = *a1;
    v7 = 0xAAAAAAAAAAAAAAABLL * (v3 - *a1);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_22316E078();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v2 - (_QWORD)v6) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 > 0xAAAAAAAAAAAAAAALL)
        sub_223174E94();
      v11 = (char *)operator new(24 * v10);
    }
    else
    {
      v11 = 0;
    }
    v12 = &v11[24 * v7];
    v13 = (char **)&v11[24 * v10];
    v14 = (char *)operator new(0x50uLL);
    *(_QWORD *)v12 = v14;
    *(_OWORD *)(v12 + 8) = xmmword_2245C4450;
    strcpy(v14, "Byte order and bits per component do not correspond to a supported format.");
    v5 = (char **)(v12 + 24);
    if (v3 == v6)
    {
      *a1 = (char **)v12;
      a1[1] = v5;
      a1[2] = v13;
    }
    else
    {
      do
      {
        v15 = *(_OWORD *)(v3 - 3);
        *((_QWORD *)v12 - 1) = *(v3 - 1);
        *(_OWORD *)(v12 - 24) = v15;
        v12 -= 24;
        *(v3 - 2) = 0;
        *(v3 - 1) = 0;
        *(v3 - 3) = 0;
        v3 -= 3;
      }
      while (v3 != v6);
      v3 = *a1;
      v16 = a1[1];
      *a1 = (char **)v12;
      a1[1] = v5;
      a1[2] = v13;
      while (v16 != v3)
      {
        if (*((char *)v16 - 1) < 0)
          operator delete(*(v16 - 3));
        v16 -= 3;
      }
    }
    if (v3)
      operator delete(v3);
  }
  else
  {
    v4 = (char *)operator new(0x50uLL);
    *v3 = v4;
    *(_OWORD *)(v3 + 1) = xmmword_2245C4450;
    strcpy(v4, "Byte order and bits per component do not correspond to a supported format.");
    v5 = v3 + 3;
    a1[1] = v3 + 3;
  }
  a1[1] = v5;
}

void sub_2242D9E64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22319C040((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2242D9E78(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  unint64_t v8;
  uint64_t v9;

  *a1 = &off_24EC21420;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (*a3 != 0);
  v9 = a2;
  sub_223CDCCE0(&v9, a3, (uint64_t *)&v8, (uint64_t)(a1 + 1));
  return a1;
}

void sub_2242D9EF0()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242D9F04(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC71FE0;
  result[1] = v3;
  return result;
}

uint64_t sub_2242D9F38(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC71FE0;
  a2[1] = v2;
  return result;
}

void sub_2242D9F54(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int16 v16;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 32) != *a2 || *(_DWORD *)(v5 + 36) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC22138;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 48);
    v11 = v5 + 24;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v11;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v11 + 16);
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 48) = v10;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v16 = *(_WORD *)(v5 + 48);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v5 + 40);
    *(_WORD *)(a3 + 48) = v16;
  }
}

uint64_t sub_2242DA0D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DA140()
{
  return &unk_24EC72050;
}

void sub_2242DA150()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DA164(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC72070;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DA198(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC72070;
  a2[1] = v2;
  return result;
}

void sub_2242DA1B4(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int16 v16;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 32) != *a2 || *(_DWORD *)(v5 + 36) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC22278;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 48);
    v11 = v5 + 24;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v11;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v11 + 16);
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 48) = v10;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v16 = *(_WORD *)(v5 + 48);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v5 + 40);
    *(_WORD *)(a3 + 48) = v16;
  }
}

uint64_t sub_2242DA334(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DA3A0()
{
  return &unk_24EC720E0;
}

void sub_2242DA3B0()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DA3C4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC72100;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DA3F8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC72100;
  a2[1] = v2;
  return result;
}

void sub_2242DA414(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int16 v16;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 32) != *a2 || *(_DWORD *)(v5 + 36) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC218E0;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 48);
    v11 = v5 + 24;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v11;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v11 + 16);
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 48) = v10;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v16 = *(_WORD *)(v5 + 48);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v5 + 40);
    *(_WORD *)(a3 + 48) = v16;
  }
}

uint64_t sub_2242DA594(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DA600()
{
  return &unk_24EC72170;
}

void sub_2242DA610()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DA624(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC72190;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DA658(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC72190;
  a2[1] = v2;
  return result;
}

void sub_2242DA674(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int16 v16;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 32) != *a2 || *(_DWORD *)(v5 + 36) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC21FE8;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 48);
    v11 = v5 + 24;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v11;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v11 + 16);
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 48) = v10;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v16 = *(_WORD *)(v5 + 48);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v5 + 40);
    *(_WORD *)(a3 + 48) = v16;
  }
}

uint64_t sub_2242DA7F4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DA860()
{
  return &unk_24EC72200;
}

_QWORD *sub_2242DA86C(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  unint64_t v8;

  *a1 = &off_24EC57DE8;
  v5 = a1 + 1;
  v6 = 3;
  if (!*a3)
    v6 = 0;
  if (a3[1])
    v7 = *a3 == 0;
  else
    v7 = 1;
  v8 = (unint64_t)*a4 << 32;
  if (v7)
    v8 = 0;
  sub_2242DA8C4((_BOOL8)v5, a2, a3, v8 | v6);
  return a1;
}

BOOL sub_2242DA8C4(_BOOL8 result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6;
  BOOL v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = result;
  if (a3[1])
    v7 = *a3 == 0;
  else
    v7 = 1;
  v8 = *(_QWORD *)a3;
  if (v7)
    v8 = 0;
  LODWORD(v13) = 3;
  HIDWORD(v13) = v8;
  v9 = v8;
  v10 = v13;
  v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C);
    if (result)
      abort();
  }
  *(_QWORD *)v6 = 0;
  *(_QWORD *)(v6 + 8) = 0;
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(_QWORD *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_2242DA9F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242DAA0C()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DAA20(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC72220;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DAA54(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC72220;
  a2[1] = v2;
  return result;
}

void sub_2242DAA70(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC232F0;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DABFC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DAC68()
{
  return &unk_24EC72290;
}

void sub_2242DAC78()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DAC8C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC722B0;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DACC0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC722B0;
  a2[1] = v2;
  return result;
}

void sub_2242DACDC(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC233E8;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DAE68(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DAED4()
{
  return &unk_24EC72320;
}

void sub_2242DAEE0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 22)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242DB1E4(a1);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v22 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a2 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v21;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2242DB198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_2242DB1E4(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2231EA1A8();
  v3 = sub_2232969B8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_2242DB260()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DB274(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC72340;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DB2A8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC72340;
  a2[1] = v2;
  return result;
}

void sub_2242DB2C4(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC234E0;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DB450(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DB4BC()
{
  return &unk_24EC723B0;
}

void sub_2242DB4C8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 23)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242DB7CC(a1);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v22 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a2 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v21;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2242DB780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_2242DB7CC(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2231EAA6C();
  v3 = sub_2232969B8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_2242DB844(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a3;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 3;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = a4;
  *(_QWORD *)&v11 = a2;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = HIDWORD(a4);
  v15 = v6;
  v16 = a4;
  if (HIDWORD(v6) * HIDWORD(a4) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_2237F9340(a1, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_2242DB994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242DB9AC()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DB9C0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC723D0;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DB9F4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC723D0;
  a2[1] = v2;
  return result;
}

void sub_2242DBA10(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC235D8;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DBB9C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DBC08()
{
  return &unk_24EC72440;
}

void sub_2242DBC14(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 24)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242DBF18(a1);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v22 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a2 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v21;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2242DBECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_2242DBF18(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2231EB330();
  v3 = sub_2232969B8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_2242DBF90(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *a1 = &off_24EC28E38;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (4 * (*a3 != 0));
  v9 = a2;
  sub_223FC4100(&v9, a3, &v8, (uint64_t)(a1 + 1));
  return a1;
}

void sub_2242DC008()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DC01C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC72460;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DC050(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC72460;
  a2[1] = v2;
  return result;
}

void sub_2242DC06C(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC236D0;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DC1F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DC264()
{
  return &unk_24EC724D0;
}

_QWORD *sub_2242DC270(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *a1 = &off_24EC63580;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (4 * (*a3 != 0));
  v9 = a2;
  sub_223CDC5C8(&v9, a3, &v8, (uint64_t)(a1 + 1));
  return a1;
}

_QWORD *sub_2242DC2E4(_QWORD *result, unsigned __int8 *a2, _DWORD **a3)
{
  _DWORD *v3;
  uint64_t v4;
  int v5;
  float v6;
  float v7;
  char *v8;
  unsigned int v9;
  float v10;
  int v11;
  unsigned int v12;
  unsigned int v14;
  float v15;
  int v16;
  unsigned int v17;
  unsigned int v19;
  float v20;
  int v21;
  unsigned int v22;

  *result = a2;
  v3 = *a3;
  result[2] = *a3;
  v4 = a2[3];
  if ((_DWORD)v4 != 255)
  {
    if (!a2[3])
    {
      if (v3
        || (result = (_QWORD *)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C), !(_DWORD)result))
      {
        *v3 = 0;
        return result;
      }
LABEL_43:
      abort();
    }
    v6 = 255.0;
    v7 = 255.0 / (float)v4;
    v8 = (char *)&unk_2246AB284 + 256 * v4;
    v9 = *a2;
    v10 = floorf(v7 * (float)v9);
    if (v10 <= 255.0)
      v6 = v10;
    v11 = (int)v6;
    v12 = v8[v6];
    if (v12 != v9)
    {
      if (v12 >= v9 || v11 == 255)
      {
        if (v12 <= v9 || v11 == 0)
          goto LABEL_44;
        LOBYTE(v11) = v11 - 1;
      }
      else
      {
        LOBYTE(v11) = v11 + 1;
      }
    }
    *(_BYTE *)v3 = v11;
    v14 = *(unsigned __int8 *)(*result + 1);
    v15 = floorf(v7 * (float)v14);
    if (v15 > 255.0)
      v15 = 255.0;
    v16 = (int)v15;
    v17 = v8[v15];
    if (v17 != v14)
    {
      if (v17 >= v14 || v16 == 255)
      {
        if (v17 <= v14 || v16 == 0)
          goto LABEL_44;
        LOBYTE(v16) = v16 - 1;
      }
      else
      {
        LOBYTE(v16) = v16 + 1;
      }
    }
    *(_BYTE *)(result[2] + 1) = v16;
    v19 = *(unsigned __int8 *)(*result + 2);
    v20 = floorf(v7 * (float)v19);
    if (v20 > 255.0)
      v20 = 255.0;
    v21 = (int)v20;
    v22 = v8[v20];
    if (v22 == v19)
      goto LABEL_42;
    if (v22 < v19 && v21 != 255)
    {
      LOBYTE(v21) = v21 + 1;
LABEL_42:
      *(_BYTE *)(result[2] + 2) = v21;
      *(_BYTE *)(result[2] + 3) = *(_BYTE *)(*result + 3);
      return result;
    }
    if (v22 > v19 && v21 != 0)
    {
      LOBYTE(v21) = v21 - 1;
      goto LABEL_42;
    }
LABEL_44:
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 69, (uint64_t)"", 0, (uint64_t)"Should not happen", 17, (void (*)(void **))sub_22457406C);
    abort();
  }
  v5 = *(_DWORD *)a2;
  if (!v3)
  {
    result = (_QWORD *)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_43;
  }
  *v3 = v5;
  return result;
}

void sub_2242DC524()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DC538(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC724F0;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DC56C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC724F0;
  a2[1] = v2;
  return result;
}

void sub_2242DC588(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC23AB0;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DC714(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DC780()
{
  return &unk_24EC72560;
}

void sub_2242DC78C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 29)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242DCA8C(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2242DCA40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_2242DCA8C(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2231EE088();
  v3 = sub_2232969B8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_2242DCB08()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DCB1C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC72580;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DCB50(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC72580;
  a2[1] = v2;
  return result;
}

void sub_2242DCB6C(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC23BA8;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DCCF8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DCD64()
{
  return &unk_24EC725F0;
}

void sub_2242DCD70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 30)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242DD074(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2242DD028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_2242DD074(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2231EE94C();
  v3 = sub_2232969B8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_2242DD0F0()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DD104(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC72610;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DD138(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC72610;
  a2[1] = v2;
  return result;
}

void sub_2242DD154(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC23CA0;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DD2E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DD34C()
{
  return &unk_24EC72680;
}

void sub_2242DD35C()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DD370(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC726A0;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DD3A4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC726A0;
  a2[1] = v2;
  return result;
}

void sub_2242DD3C0(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC21EF0;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DD54C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DD5B8()
{
  return &unk_24EC72710;
}

_QWORD *sub_2242DD5C4(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  _QWORD *v5;
  BOOL v6;
  unint64_t v7;

  *a1 = &off_24EC6EB68;
  v5 = a1 + 1;
  if (a3[1])
    v6 = *a3 == 0;
  else
    v6 = 1;
  v7 = (unint64_t)*a4 << 32;
  if (v6)
    v7 = 0;
  sub_2242DD618((_BOOL8)v5, a2, a3, v7 | (4 * (*a3 != 0)));
  return a1;
}

BOOL sub_2242DD618(_BOOL8 result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6;
  BOOL v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = result;
  if (a3[1])
    v7 = *a3 == 0;
  else
    v7 = 1;
  v8 = *(_QWORD *)a3;
  if (v7)
    v8 = 0;
  LODWORD(v13) = 4;
  HIDWORD(v13) = v8;
  v9 = v8;
  v10 = v13;
  v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C);
    if (result)
      abort();
  }
  *(_QWORD *)v6 = 0;
  *(_QWORD *)(v6 + 8) = 0;
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(_QWORD *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_2242DD748(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242DD760()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DD774(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC72730;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DD7A8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC72730;
  a2[1] = v2;
  return result;
}

void sub_2242DD7C4(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC23D98;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DD950(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DD9BC()
{
  return &unk_24EC727A0;
}

void sub_2242DD9C8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 33)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242DDCC8(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2242DDC7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_2242DDCC8(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2231F0258();
  v3 = sub_2232969B8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_2242DDD40(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  _QWORD *v5;
  BOOL v6;
  unint64_t v7;

  *a1 = &off_24EC6EF48;
  v5 = a1 + 1;
  if (a3[1])
    v6 = *a3 == 0;
  else
    v6 = 1;
  v7 = (unint64_t)*a4 << 32;
  if (v6)
    v7 = 0;
  sub_2242DDD94((_BOOL8)v5, a2, a3, v7 | (4 * (*a3 != 0)));
  return a1;
}

BOOL sub_2242DDD94(_BOOL8 result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6;
  BOOL v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = result;
  if (a3[1])
    v7 = *a3 == 0;
  else
    v7 = 1;
  v8 = *(_QWORD *)a3;
  if (v7)
    v8 = 0;
  LODWORD(v13) = 4;
  HIDWORD(v13) = v8;
  v9 = v8;
  v10 = v13;
  v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C);
    if (result)
      abort();
  }
  *(_QWORD *)v6 = 0;
  *(_QWORD *)(v6 + 8) = 0;
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(_QWORD *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_2242DDEC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242DDEDC()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DDEF0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC727C0;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DDF24(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC727C0;
  a2[1] = v2;
  return result;
}

void sub_2242DDF40(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC24178;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DE0CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DE138()
{
  return &unk_24EC72830;
}

void sub_2242DE144(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 37)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242DE444(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2242DE3F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_2242DE444(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2231F26EC();
  v3 = sub_2232969B8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_2242DE4BC(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a3;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 4;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = a4;
  *(_QWORD *)&v11 = a2;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = HIDWORD(a4);
  v15 = v6;
  v16 = a4;
  if (HIDWORD(v6) * HIDWORD(a4) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_22321289C(a1, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_2242DE60C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2242DE624()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DE638(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC72850;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DE66C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC72850;
  a2[1] = v2;
  return result;
}

void sub_2242DE688(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC24270;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DE814(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DE880()
{
  return &unk_24EC728C0;
}

void sub_2242DE88C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 38)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242DEB90(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2242DEB44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_2242DEB90(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2231F30CC();
  v3 = sub_2232969B8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_2242DEC0C()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DEC20(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC728E0;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DEC54(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC728E0;
  a2[1] = v2;
  return result;
}

void sub_2242DEC70(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC24368;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DEDFC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DEE68()
{
  return &unk_24EC72950;
}

void sub_2242DEE74(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 39)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242DF178(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2242DF12C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_2242DF178(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2231F3898();
  v3 = sub_2232969B8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_2242DF1F4()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2242DF208(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC72970;
  result[1] = v3;
  return result;
}

uint64_t sub_2242DF23C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC72970;
  a2[1] = v2;
  return result;
}

void sub_2242DF258(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24EC24460;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_2242DF3E4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2242DF450()
{
  return &unk_24EC729E0;
}

void sub_2242DF45C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 40)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2242DF760(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2242DF714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_2242DF760(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2231F415C();
  v3 = sub_2232969B8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

uint64_t sub_2242DF7D8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2242DF840(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242DF8A8()
{
  return 22;
}

uint64_t sub_2242DF8B0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2242DF8B8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_2242DF8D0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2242DF94C(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  sub_2244B6944((uint64_t)v23, a1);
  v19 = v23[0];
  v20 = v23[1];
  v21 = v23[2];
  v3 = v25;
  v22 = v24;
  v4 = v26;
  v5 = v27;
  v17 = v28;
  v18 = v29;
  v6 = operator new();
  *(_OWORD *)(v6 + 8) = v19;
  *(_QWORD *)v6 = &off_24EC72A18;
  *(_OWORD *)(v6 + 24) = v20;
  *(_OWORD *)(v6 + 40) = v21;
  *(_QWORD *)(v6 + 56) = v22;
  *(_QWORD *)(v6 + 64) = v3;
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 80) = v5;
  *(_OWORD *)(v6 + 88) = v17;
  *(_QWORD *)(v6 + 104) = v18;
  v7 = (std::__shared_weak_count *)operator new();
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC72ED0;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *a2 = v6;
  a2[1] = (uint64_t)v7;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(v23, v6, 22);
  v11 = *(_OWORD *)(*(_QWORD *)&v23[0] + 16);
  v10 = *(_OWORD *)(*(_QWORD *)&v23[0] + 32);
  *(_OWORD *)(a2 + 3) = **(_OWORD **)&v23[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  *(_QWORD *)&v23[0] = 0;
  MEMORY[0x227684CE8]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_2242DFB5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va1);
  sub_22329C830((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2242DFB90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22329C830((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2242DFBA4(_Unwind_Exception *exception_object)
{
  void *v1;
  void *v2;

  v2 = v1;
  if (v2)
    free(v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242DFBC0()
{
  return 22;
}

__int128 *sub_2242DFBCC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791380);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791380))
  {
    v2 = sub_2242DFCA4();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(&xmmword_255791368, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_255791378 = *((_QWORD *)v2 + 2);
      xmmword_255791368 = v3;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791368, &dword_22314D000);
    __cxa_guard_release(&qword_255791380);
  }
  if (byte_25579137F >= 0)
    return &xmmword_255791368;
  else
    return (__int128 *)xmmword_255791368;
}

void sub_2242DFC8C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791380);
  _Unwind_Resume(a1);
}

__int128 *sub_2242DFCA4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557913A0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557913A0))
    return &xmmword_255791388;
  v2 = sub_2242DFD80();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255791388, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255791398 = v2->__r_.__value_.__r.__words[2];
    xmmword_255791388 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791388, &dword_22314D000);
  __cxa_guard_release(&qword_2557913A0);
  return &xmmword_255791388;
}

void sub_2242DFD68(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557913A0);
  _Unwind_Resume(a1);
}

std::string *sub_2242DFD80()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557913C0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557913C0))
    return &stru_2557913A8;
  sub_2242DFE70((uint64_t)__p);
  sub_2242A6824((char *)__p, &stru_2557913A8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557913A8, &dword_22314D000);
  __cxa_guard_release(&qword_2557913C0);
  return &stru_2557913A8;
}

void sub_2242DFE30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2557913C0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2557913C0);
  _Unwind_Resume(a1);
}

void sub_2242DFE70(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2557913E0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2557913E0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgb16u>]", qword_2557913C8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557913C8, &dword_22314D000);
    __cxa_guard_release(&qword_2557913E0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255791400);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255791400))
  {
    v5 = sub_2231A38CC(qword_2557913C8, "<", 0);
    sub_2231A37C8(qword_2557913C8, 0, v5, qword_2557913E8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557913E8, &dword_22314D000);
    __cxa_guard_release(&qword_255791400);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255791420);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255791420))
  {
    sub_224573040((uint64_t)qword_2557913E8, (uint64_t)&xmmword_255791408);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791408, &dword_22314D000);
    __cxa_guard_release(&qword_255791420);
  }
  if (byte_25579141F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255791408, *((unint64_t *)&xmmword_255791408 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255791408;
    *(_QWORD *)(a1 + 16) = unk_255791418;
  }
}

void sub_2242E000C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791420);
  _Unwind_Resume(a1);
}

void sub_2242E0024(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791400);
  _Unwind_Resume(a1);
}

void sub_2242E003C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557913E0);
  _Unwind_Resume(a1);
}

void sub_2242E0058(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E007C(uint64_t result)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = *(void **)(v1 + 72);
    if (v2)
      free(v2);
    *(_QWORD *)(v1 + 72) = 0;
    JUMPOUT(0x227684CE8);
  }
  return result;
}

uint64_t sub_2242E00CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_2242E013C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231EA55C(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2242E0228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2242E0244(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231EAE20(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2242E0330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2242E034C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231EC12C(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2242E0438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E0454(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2242E04BC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E0524()
{
  return 30;
}

uint64_t sub_2242E052C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2242E0534@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_2242E054C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2242E05C8(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  sub_2244B6CAC((uint64_t)v23, a1);
  v19 = v23[0];
  v20 = v23[1];
  v21 = v23[2];
  v3 = v25;
  v22 = v24;
  v4 = v26;
  v5 = v27;
  v17 = v28;
  v18 = v29;
  v6 = operator new();
  *(_OWORD *)(v6 + 8) = v19;
  *(_QWORD *)v6 = &off_24EC72A98;
  *(_OWORD *)(v6 + 24) = v20;
  *(_OWORD *)(v6 + 40) = v21;
  *(_QWORD *)(v6 + 56) = v22;
  *(_QWORD *)(v6 + 64) = v3;
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 80) = v5;
  *(_OWORD *)(v6 + 88) = v17;
  *(_QWORD *)(v6 + 104) = v18;
  v7 = (std::__shared_weak_count *)operator new();
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC73018;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *a2 = v6;
  a2[1] = (uint64_t)v7;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(v23, v6, 30);
  v11 = *(_OWORD *)(*(_QWORD *)&v23[0] + 16);
  v10 = *(_OWORD *)(*(_QWORD *)&v23[0] + 32);
  *(_OWORD *)(a2 + 3) = **(_OWORD **)&v23[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  *(_QWORD *)&v23[0] = 0;
  MEMORY[0x227684CE8]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_2242E07D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va1);
  sub_22329C830((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2242E080C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22329C830((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2242E0820(_Unwind_Exception *exception_object)
{
  void *v1;
  void *v2;

  v2 = v1;
  if (v2)
    free(v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242E083C()
{
  return 30;
}

__int128 *sub_2242E0848()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791440);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791440))
  {
    v2 = sub_2242E0920();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(&xmmword_255791428, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_255791438 = *((_QWORD *)v2 + 2);
      xmmword_255791428 = v3;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791428, &dword_22314D000);
    __cxa_guard_release(&qword_255791440);
  }
  if (byte_25579143F >= 0)
    return &xmmword_255791428;
  else
    return (__int128 *)xmmword_255791428;
}

void sub_2242E0908(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791440);
  _Unwind_Resume(a1);
}

__int128 *sub_2242E0920()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791460);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255791460))
    return &xmmword_255791448;
  v2 = sub_2242E09FC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255791448, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255791458 = v2->__r_.__value_.__r.__words[2];
    xmmword_255791448 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791448, &dword_22314D000);
  __cxa_guard_release(&qword_255791460);
  return &xmmword_255791448;
}

void sub_2242E09E4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791460);
  _Unwind_Resume(a1);
}

std::string *sub_2242E09FC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791480);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255791480))
    return &stru_255791468;
  sub_2242E0C14((uint64_t)__p);
  sub_2242E0AEC((char *)__p, &stru_255791468);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791468, &dword_22314D000);
  __cxa_guard_release(&qword_255791480);
  return &stru_255791468;
}

void sub_2242E0AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255791480);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255791480);
  _Unwind_Resume(a1);
}

void sub_2242E0AEC(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2231A46DC();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 1uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_2242E0BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_22319BB48(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2242E0C14(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2557914A0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2557914A0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgba16u>]", qword_255791488);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255791488, &dword_22314D000);
    __cxa_guard_release(&qword_2557914A0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2557914C0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2557914C0))
  {
    v5 = sub_2231A38CC(qword_255791488, "<", 0);
    sub_2231A37C8(qword_255791488, 0, v5, qword_2557914A8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557914A8, &dword_22314D000);
    __cxa_guard_release(&qword_2557914C0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2557914E0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2557914E0))
  {
    sub_224573040((uint64_t)qword_2557914A8, (uint64_t)&xmmword_2557914C8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557914C8, &dword_22314D000);
    __cxa_guard_release(&qword_2557914E0);
  }
  if (byte_2557914DF < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_2557914C8, *((unint64_t *)&xmmword_2557914C8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2557914C8;
    *(_QWORD *)(a1 + 16) = unk_2557914D8;
  }
}

void sub_2242E0DB0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557914E0);
  _Unwind_Resume(a1);
}

void sub_2242E0DC8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557914C0);
  _Unwind_Resume(a1);
}

void sub_2242E0DE0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557914A0);
  _Unwind_Resume(a1);
}

void sub_2242E0DFC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E0E20(uint64_t result)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = *(void **)(v1 + 72);
    if (v2)
      free(v2);
    *(_QWORD *)(v1 + 72) = 0;
    JUMPOUT(0x227684CE8);
  }
  return result;
}

uint64_t sub_2242E0E70(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_2242E0EE0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231EEC08(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2242E0FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2242E0FE8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231EF5E8(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2242E10D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E10F0(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2242E1158(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E11C0()
{
  return 33;
}

uint64_t sub_2242E11C8(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2242E11D0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_2242E11E4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2242E1260(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (**v23)();

  v23 = &off_24EC73160;
  sub_22449AEE0(a1, (uint64_t)&v14);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24EC72B18;
  *(_OWORD *)(v3 + 8) = v15;
  *(_OWORD *)(v3 + 24) = v16;
  *(_OWORD *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 56) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_QWORD *)(v3 + 80) = v20;
  *(_QWORD *)(v3 + 104) = v22;
  *(_OWORD *)(v3 + 88) = v21;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC73198;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v14, v3, 33);
  v8 = v14[1];
  v7 = v14[2];
  *(_OWORD *)(a2 + 3) = *v14;
  *(_OWORD *)(a2 + 5) = v8;
  *(_OWORD *)(a2 + 7) = v7;
  v14 = 0;
  MEMORY[0x227684CE8]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v9 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v9;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000)
    v11 = 0;
  v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0)
    v12 = 0;
  *((_WORD *)a2 + 60) = v12 & 0xFF00 | v11;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_2242E1454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_223167354(v10);
  sub_223167354((uint64_t)&a10);
  sub_22329C830(&a9);
  _Unwind_Resume(a1);
}

void sub_2242E1488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22329C830(&a9);
  _Unwind_Resume(a1);
}

void sub_2242E149C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  if (a21)
    free(a21);
  _Unwind_Resume(exception_object);
}

void sub_2242E14B8()
{
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E14CC()
{
  return 33;
}

__int128 *sub_2242E14D8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791500);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791500))
  {
    v2 = sub_2242E15B0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(&xmmword_2557914E8, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2557914F8 = *((_QWORD *)v2 + 2);
      xmmword_2557914E8 = v3;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557914E8, &dword_22314D000);
    __cxa_guard_release(&qword_255791500);
  }
  if (byte_2557914FF >= 0)
    return &xmmword_2557914E8;
  else
    return (__int128 *)xmmword_2557914E8;
}

void sub_2242E1598(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791500);
  _Unwind_Resume(a1);
}

__int128 *sub_2242E15B0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791520);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255791520))
    return &xmmword_255791508;
  v2 = sub_2242E168C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255791508, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255791518 = v2->__r_.__value_.__r.__words[2];
    xmmword_255791508 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791508, &dword_22314D000);
  __cxa_guard_release(&qword_255791520);
  return &xmmword_255791508;
}

void sub_2242E1674(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791520);
  _Unwind_Resume(a1);
}

std::string *sub_2242E168C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791540);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255791540))
    return &stru_255791528;
  sub_2242E18A4((uint64_t)__p);
  sub_2242E177C((char *)__p, &stru_255791528);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791528, &dword_22314D000);
  __cxa_guard_release(&qword_255791540);
  return &stru_255791528;
}

void sub_2242E173C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255791540);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255791540);
  _Unwind_Resume(a1);
}

void sub_2242E177C(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2231F0514();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 1uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_2242E1878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_22319BB48(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2242E18A4(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_255791560);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_255791560))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Abgr8u>]", qword_255791548);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255791548, &dword_22314D000);
    __cxa_guard_release(&qword_255791560);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255791580);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255791580))
  {
    v5 = sub_2231A38CC(qword_255791548, "<", 0);
    sub_2231A37C8(qword_255791548, 0, v5, qword_255791568);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255791568, &dword_22314D000);
    __cxa_guard_release(&qword_255791580);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2557915A0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2557915A0))
  {
    sub_224573040((uint64_t)qword_255791568, (uint64_t)&xmmword_255791588);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791588, &dword_22314D000);
    __cxa_guard_release(&qword_2557915A0);
  }
  if (byte_25579159F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255791588, *((unint64_t *)&xmmword_255791588 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255791588;
    *(_QWORD *)(a1 + 16) = unk_255791598;
  }
}

void sub_2242E1A40(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557915A0);
  _Unwind_Resume(a1);
}

void sub_2242E1A58(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791580);
  _Unwind_Resume(a1);
}

void sub_2242E1A70(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791560);
  _Unwind_Resume(a1);
}

void sub_2242E1A8C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E1AB0(uint64_t result)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = *(void **)(v1 + 72);
    if (v2)
      free(v2);
    *(_QWORD *)(v1 + 72) = 0;
    JUMPOUT(0x227684CE8);
  }
  return result;
}

uint64_t sub_2242E1B00(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_2242E1B70(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231F060C(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2242E1C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E1C78(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2242E1CE0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E1D48()
{
  return 37;
}

uint64_t sub_2242E1D50(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2242E1D58@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_2242E1D6C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2242E1DE8(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (**v23)();

  v23 = &off_24EC732E0;
  sub_22449B224(a1, (uint64_t)&v14);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24EC72B98;
  *(_OWORD *)(v3 + 8) = v15;
  *(_OWORD *)(v3 + 24) = v16;
  *(_OWORD *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 56) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_QWORD *)(v3 + 80) = v20;
  *(_QWORD *)(v3 + 104) = v22;
  *(_OWORD *)(v3 + 88) = v21;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC73318;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v14, v3, 37);
  v8 = v14[1];
  v7 = v14[2];
  *(_OWORD *)(a2 + 3) = *v14;
  *(_OWORD *)(a2 + 5) = v8;
  *(_OWORD *)(a2 + 7) = v7;
  v14 = 0;
  MEMORY[0x227684CE8]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v9 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v9;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000)
    v11 = 0;
  v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0)
    v12 = 0;
  *((_WORD *)a2 + 60) = v12 & 0xFF00 | v11;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_2242E1FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_223167354(v10);
  sub_223167354((uint64_t)&a10);
  sub_22329C830(&a9);
  _Unwind_Resume(a1);
}

void sub_2242E2010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22329C830(&a9);
  _Unwind_Resume(a1);
}

void sub_2242E2024(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  if (a21)
    free(a21);
  _Unwind_Resume(exception_object);
}

void sub_2242E2040()
{
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E2054()
{
  return 37;
}

__int128 *sub_2242E2060()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557915C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2557915C0))
  {
    v2 = sub_2242E2138();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(&xmmword_2557915A8, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2557915B8 = *((_QWORD *)v2 + 2);
      xmmword_2557915A8 = v3;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557915A8, &dword_22314D000);
    __cxa_guard_release(&qword_2557915C0);
  }
  if (byte_2557915BF >= 0)
    return &xmmword_2557915A8;
  else
    return (__int128 *)xmmword_2557915A8;
}

void sub_2242E2120(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557915C0);
  _Unwind_Resume(a1);
}

__int128 *sub_2242E2138()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557915E0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557915E0))
    return &xmmword_2557915C8;
  v2 = sub_2242E2214();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_2557915C8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2557915D8 = v2->__r_.__value_.__r.__words[2];
    xmmword_2557915C8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557915C8, &dword_22314D000);
  __cxa_guard_release(&qword_2557915E0);
  return &xmmword_2557915C8;
}

void sub_2242E21FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557915E0);
  _Unwind_Resume(a1);
}

std::string *sub_2242E2214()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791600);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255791600))
    return &stru_2557915E8;
  sub_2242E2304((uint64_t)__p);
  sub_2242A694C((char *)__p, &stru_2557915E8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557915E8, &dword_22314D000);
  __cxa_guard_release(&qword_255791600);
  return &stru_2557915E8;
}

void sub_2242E22C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255791600);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255791600);
  _Unwind_Resume(a1);
}

void sub_2242E2304(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_255791620);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_255791620))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Argb8u>]", qword_255791608);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255791608, &dword_22314D000);
    __cxa_guard_release(&qword_255791620);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255791640);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255791640))
  {
    v5 = sub_2231A38CC(qword_255791608, "<", 0);
    sub_2231A37C8(qword_255791608, 0, v5, qword_255791628);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255791628, &dword_22314D000);
    __cxa_guard_release(&qword_255791640);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255791660);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255791660))
  {
    sub_224573040((uint64_t)qword_255791628, (uint64_t)&xmmword_255791648);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791648, &dword_22314D000);
    __cxa_guard_release(&qword_255791660);
  }
  if (byte_25579165F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255791648, *((unint64_t *)&xmmword_255791648 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255791648;
    *(_QWORD *)(a1 + 16) = unk_255791658;
  }
}

void sub_2242E24A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791660);
  _Unwind_Resume(a1);
}

void sub_2242E24B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791640);
  _Unwind_Resume(a1);
}

void sub_2242E24D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791620);
  _Unwind_Resume(a1);
}

void sub_2242E24EC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E2510(uint64_t result)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = *(void **)(v1 + 72);
    if (v2)
      free(v2);
    *(_QWORD *)(v1 + 72) = 0;
    JUMPOUT(0x227684CE8);
  }
  return result;
}

uint64_t sub_2242E2560(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE37EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE37EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE37EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE37EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_2242E25D0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231F2AA0(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2242E26BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2242E26D8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231F3388(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2242E27C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E27E0(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2242E2848(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E28B0()
{
  return 39;
}

uint64_t sub_2242E28B8(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2242E28C0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_2242E28D8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2242E2954(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (**v23)();

  v23 = &off_24EC73460;
  sub_22449B5CC(a1, (uint64_t)&v14);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24EC72C18;
  *(_OWORD *)(v3 + 8) = v15;
  *(_OWORD *)(v3 + 24) = v16;
  *(_OWORD *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 56) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_QWORD *)(v3 + 80) = v20;
  *(_QWORD *)(v3 + 104) = v22;
  *(_OWORD *)(v3 + 88) = v21;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC73498;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v14, v3, 39);
  v8 = v14[1];
  v7 = v14[2];
  *(_OWORD *)(a2 + 3) = *v14;
  *(_OWORD *)(a2 + 5) = v8;
  *(_OWORD *)(a2 + 7) = v7;
  v14 = 0;
  MEMORY[0x227684CE8]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v9 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v9;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000)
    v11 = 0;
  v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0)
    v12 = 0;
  *((_WORD *)a2 + 60) = v12 & 0xFF00 | v11;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_2242E2BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_223167354(v10);
  sub_223167354((uint64_t)&a10);
  sub_2242E2C3C(&a9);
  _Unwind_Resume(a1);
}

void sub_2242E2C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2242E2C3C(&a9);
  _Unwind_Resume(a1);
}

void sub_2242E2C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_224497B40((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2242E2C3C(uint64_t *a1)
{
  uint64_t v2;
  void *v3;
  BOOL v4;
  BOOL v5;
  int v6;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = *(void **)(v2 + 72);
    if (v3)
    {
      v4 = !*(_DWORD *)(v2 + 96) || *(_DWORD *)(v2 + 92) == 0;
      v5 = v4 || *(_DWORD *)(v2 + 88) == 0;
      v6 = v5 ? 0 : *(_DWORD *)(v2 + 96);
      if (v6 * (*(_DWORD *)(v2 + 108) >> 1) != -1)
        goto LABEL_15;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v3 = *(void **)(v2 + 72);
      if (v3)
LABEL_15:
        free(v3);
    }
    *(_QWORD *)(v2 + 72) = 0;
    MEMORY[0x227684CE8](v2, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_2242E2D08()
{
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E2D1C()
{
  return 39;
}

__int128 *sub_2242E2D28()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791680);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791680))
  {
    v2 = sub_2242E2E00();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(&xmmword_255791668, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_255791678 = *((_QWORD *)v2 + 2);
      xmmword_255791668 = v3;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791668, &dword_22314D000);
    __cxa_guard_release(&qword_255791680);
  }
  if (byte_25579167F >= 0)
    return &xmmword_255791668;
  else
    return (__int128 *)xmmword_255791668;
}

void sub_2242E2DE8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791680);
  _Unwind_Resume(a1);
}

__int128 *sub_2242E2E00()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557916A0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557916A0))
    return &xmmword_255791688;
  v2 = sub_2242E2EDC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255791688, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255791698 = v2->__r_.__value_.__r.__words[2];
    xmmword_255791688 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791688, &dword_22314D000);
  __cxa_guard_release(&qword_2557916A0);
  return &xmmword_255791688;
}

void sub_2242E2EC4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557916A0);
  _Unwind_Resume(a1);
}

std::string *sub_2242E2EDC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557916C0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557916C0))
    return &stru_2557916A8;
  sub_2242E30F4((uint64_t)__p);
  sub_2242E2FCC((char *)__p, &stru_2557916A8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557916A8, &dword_22314D000);
  __cxa_guard_release(&qword_2557916C0);
  return &stru_2557916A8;
}

void sub_2242E2F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2557916C0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2557916C0);
  _Unwind_Resume(a1);
}

void sub_2242E2FCC(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2231F3B54();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 1uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_2242E30C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_22319BB48(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2242E30F4(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2557916E0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2557916E0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Argb16f>]", qword_2557916C8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557916C8, &dword_22314D000);
    __cxa_guard_release(&qword_2557916E0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255791700);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255791700))
  {
    v5 = sub_2231A38CC(qword_2557916C8, "<", 0);
    sub_2231A37C8(qword_2557916C8, 0, v5, qword_2557916E8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557916E8, &dword_22314D000);
    __cxa_guard_release(&qword_255791700);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255791720);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255791720))
  {
    sub_224573040((uint64_t)qword_2557916E8, (uint64_t)&xmmword_255791708);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791708, &dword_22314D000);
    __cxa_guard_release(&qword_255791720);
  }
  if (byte_25579171F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255791708, *((unint64_t *)&xmmword_255791708 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255791708;
    *(_QWORD *)(a1 + 16) = unk_255791718;
  }
}

void sub_2242E3290(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791720);
  _Unwind_Resume(a1);
}

void sub_2242E32A8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791700);
  _Unwind_Resume(a1);
}

void sub_2242E32C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557916E0);
  _Unwind_Resume(a1);
}

void sub_2242E32DC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E3300(uint64_t result)
{
  uint64_t v1;
  void *v2;
  BOOL v3;
  BOOL v4;
  int v5;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = *(void **)(v1 + 72);
    if (v2)
    {
      v3 = !*(_DWORD *)(v1 + 96) || *(_DWORD *)(v1 + 92) == 0;
      v4 = v3 || *(_DWORD *)(v1 + 88) == 0;
      v5 = v4 ? 0 : *(_DWORD *)(v1 + 96);
      if (v5 * (*(_DWORD *)(v1 + 108) >> 1) != -1)
        goto LABEL_15;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v2 = *(void **)(v1 + 72);
      if (v2)
LABEL_15:
        free(v2);
    }
    *(_QWORD *)(v1 + 72) = 0;
    JUMPOUT(0x227684CE8);
  }
  return result;
}

uint64_t sub_2242E33C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_2242E3434(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231F3C4C(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2242E3520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E353C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2242E35A4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E360C()
{
  return 40;
}

uint64_t sub_2242E3614(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2242E361C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_2242E3634(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2242E36B0(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  sub_2244B6E68((uint64_t)v23, a1);
  v19 = v23[0];
  v20 = v23[1];
  v21 = v23[2];
  v3 = v25;
  v22 = v24;
  v4 = v26;
  v5 = v27;
  v17 = v28;
  v18 = v29;
  v6 = operator new();
  *(_OWORD *)(v6 + 8) = v19;
  *(_QWORD *)v6 = &off_24EC72C98;
  *(_OWORD *)(v6 + 24) = v20;
  *(_OWORD *)(v6 + 40) = v21;
  *(_QWORD *)(v6 + 56) = v22;
  *(_QWORD *)(v6 + 64) = v3;
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 80) = v5;
  *(_OWORD *)(v6 + 88) = v17;
  *(_QWORD *)(v6 + 104) = v18;
  v7 = (std::__shared_weak_count *)operator new();
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC735E0;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *a2 = v6;
  a2[1] = (uint64_t)v7;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(v23, v6, 40);
  v11 = *(_OWORD *)(*(_QWORD *)&v23[0] + 16);
  v10 = *(_OWORD *)(*(_QWORD *)&v23[0] + 32);
  *(_OWORD *)(a2 + 3) = **(_OWORD **)&v23[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  *(_QWORD *)&v23[0] = 0;
  MEMORY[0x227684CE8]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_2242E38C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va1);
  sub_22329C830((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2242E38F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22329C830((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2242E3908(_Unwind_Exception *exception_object)
{
  void *v1;
  void *v2;

  v2 = v1;
  if (v2)
    free(v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242E3924()
{
  return 40;
}

__int128 *sub_2242E3930()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791740);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791740))
  {
    v2 = sub_2242E3A08();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(&xmmword_255791728, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_255791738 = *((_QWORD *)v2 + 2);
      xmmword_255791728 = v3;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791728, &dword_22314D000);
    __cxa_guard_release(&qword_255791740);
  }
  if (byte_25579173F >= 0)
    return &xmmword_255791728;
  else
    return (__int128 *)xmmword_255791728;
}

void sub_2242E39F0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791740);
  _Unwind_Resume(a1);
}

__int128 *sub_2242E3A08()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791760);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255791760))
    return &xmmword_255791748;
  v2 = sub_2242E3AE4();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255791748, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255791758 = v2->__r_.__value_.__r.__words[2];
    xmmword_255791748 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255791748, &dword_22314D000);
  __cxa_guard_release(&qword_255791760);
  return &xmmword_255791748;
}

void sub_2242E3ACC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255791760);
  _Unwind_Resume(a1);
}

std::string *sub_2242E3AE4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255791780);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255791780))
    return &stru_255791768;
  sub_2242E3CFC((uint64_t)__p);
  sub_2242E3BD4((char *)__p, &stru_255791768);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791768, &dword_22314D000);
  __cxa_guard_release(&qword_255791780);
  return &stru_255791768;
}

void sub_2242E3B94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255791780);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255791780);
  _Unwind_Resume(a1);
}

void sub_2242E3BD4(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2231F4418();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 1uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_2242E3CD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_22319BB48(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2242E3CFC(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2557917A0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2557917A0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Argb32f>]", qword_255791788);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255791788, &dword_22314D000);
    __cxa_guard_release(&qword_2557917A0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2557917C0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2557917C0))
  {
    v5 = sub_2231A38CC(qword_255791788, "<", 0);
    sub_2231A37C8(qword_255791788, 0, v5, qword_2557917A8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557917A8, &dword_22314D000);
    __cxa_guard_release(&qword_2557917C0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2557917E0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2557917E0))
  {
    sub_224573040((uint64_t)qword_2557917A8, (uint64_t)&xmmword_2557917C8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557917C8, &dword_22314D000);
    __cxa_guard_release(&qword_2557917E0);
  }
  if (byte_2557917DF < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_2557917C8, *((unint64_t *)&xmmword_2557917C8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2557917C8;
    *(_QWORD *)(a1 + 16) = unk_2557917D8;
  }
}

void sub_2242E3E98(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557917E0);
  _Unwind_Resume(a1);
}

void sub_2242E3EB0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557917C0);
  _Unwind_Resume(a1);
}

void sub_2242E3EC8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557917A0);
  _Unwind_Resume(a1);
}

void sub_2242E3EE4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2242E3F08(uint64_t result)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = *(void **)(v1 + 72);
    if (v2)
      free(v2);
    *(_QWORD *)(v1 + 72) = 0;
    JUMPOUT(0x227684CE8);
  }
  return result;
}

uint64_t sub_2242E3F58(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_2242E3FC8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231F4510(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2242E40B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2242E40D0(int a1, uint64_t a2, uint64_t (**a3)(uint64_t))
{
  uint64_t (**v3)(uint64_t);

  if (a1 == 1)
  {
    v3 = a3;
    sub_224317210(*(unsigned int *)(a2 + 48), &v3, a2);
  }
  else
  {
    if (a1)
    {
      sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/src/Algorithm.cpp", 68, (uint64_t)&unk_2245B496D, 0, (uint64_t)"invalid argument", 16, (void (*)(void **))sub_22457406C);
      abort();
    }
    v3 = a3;
    sub_22430F5C4(*(_DWORD *)(a2 + 48), &v3, a2);
  }
}

uint64_t sub_2242E4160(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  switch(a1)
  {
    case 0:
      sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)&unk_2245B496D, 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_22457406C);
      abort();
    case 1:
      result = sub_2242E4480(a2, a3);
      break;
    case 2:
      result = sub_2242E4A84(a2, a3);
      break;
    case 3:
      result = sub_2242E5044(a2, a3);
      break;
    case 4:
      result = sub_2242E567C(a2, a3);
      break;
    case 5:
      result = sub_2242E5C3C(a2, a3);
      break;
    case 6:
      result = sub_2242E64A4(a2, a3);
      break;
    case 7:
      result = sub_2242E6CB8(a2, a3);
      break;
    case 8:
      result = sub_2242E75F8(a2, a3);
      break;
    case 9:
      result = sub_2242E7E0C(a2, a3);
      break;
    case 10:
      result = sub_2242E8674(a2, a3);
      break;
    case 11:
      result = sub_2242E8E88(a2, a3);
      break;
    case 12:
      result = sub_2242E97C8(a2, a3);
      break;
    case 13:
      result = sub_2242E9FDC(a2, a3);
      break;
    case 14:
      result = sub_2242EA844(a2, a3);
      break;
    case 15:
      result = sub_2242EB058(a2, a3);
      break;
    case 16:
      result = sub_2242EB998(a2, a3);
      break;
    case 17:
      result = sub_2242EC1AC(a2, a3);
      break;
    case 18:
      result = sub_2242ECA14(a2, a3);
      break;
    case 19:
      result = sub_2242ED228(a2, a3);
      break;
    case 20:
      result = sub_2242EDB68(a2, a3);
      break;
    case 21:
      result = sub_2242EE37C(a2, a3);
      break;
    case 22:
      result = sub_2242EEBE4(a2, a3);
      break;
    case 23:
      result = sub_2242EF3F8(a2, a3);
      break;
    case 24:
      result = sub_2242EFD38(a2, a3);
      break;
    case 25:
      result = sub_2242F054C(a2, a3);
      break;
    case 26:
      result = sub_2242F0AA4(a2, a3);
      break;
    case 27:
      result = sub_2242F12B8(a2, a3);
      break;
    case 28:
      result = sub_2242F1BF8(a2, a3);
      break;
    case 29:
      result = sub_2242F240C(a2, a3);
      break;
    case 30:
      result = sub_2242F2C74(a2, a3);
      break;
    case 31:
      result = sub_2242F3488(a2, a3);
      break;
    case 32:
      result = sub_2242F39E0(a2, a3);
      break;
    case 33:
      result = sub_2242F3F38(a2, a3);
      break;
    case 34:
      result = sub_2242F47A0(a2, a3);
      break;
    case 35:
      result = sub_2242F4FB4(a2, a3);
      break;
    case 36:
      result = sub_2242F58F4(a2, a3);
      break;
    case 37:
      result = sub_2242F6108(a2, a3);
      break;
    case 38:
      result = sub_2242F6970(a2, a3);
      break;
    case 39:
      result = sub_2242F7184(a2, a3);
      break;
    case 40:
      result = sub_2242F7AC4(a2, a3);
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_2242E43A8(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  _DWORD *v6;

  if ((a1[6] != a2[6] || a1[7] != a2[7])
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/src/Algorithm.cpp", 80, (uint64_t)"from.Size() == to.Size()", 24, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_8;
  }
  v4 = a1[12];
  if ((_DWORD)v4 != a2[12])
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/src/Algorithm.cpp", 81, (uint64_t)"from.RuntimeFormat() == to.RuntimeFormat()", 42, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
    {
      v4 = a1[12];
      goto LABEL_7;
    }
LABEL_8:
    abort();
  }
LABEL_7:
  v6 = a2;
  return sub_2242F82D8(v4, &v6, a1);
}

BOOL sub_2242E4480(uint64_t a1, uint64_t a2)
{
  _BOOL8 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC21420;
  sub_2241665B4(a1, (uint64_t)&v15);
  v11 = &off_24EC21420;
  sub_2241665B4(a2, (uint64_t)&v12);
  v3 = sub_2242E4598((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E4568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  sub_2231BEEB4((uint64_t)&a9);
  sub_2231BEEB4((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_2242E4584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2231BEEB4((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2242E4598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  _BOOL8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  int v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  unsigned __int8 *v53;
  unsigned __int8 *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_15;
LABEL_18:
    v61 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v61, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v60 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_76;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 49))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v60, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_76;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_76;
  v24 = 1;
  if (!v22 || !v23)
  {
LABEL_77:
    v57 = v60;
    v60 = 0;
    if (!v57)
      goto LABEL_79;
    goto LABEL_78;
  }
  v25 = *(unsigned int *)(a1 + 40);
  v26 = *(unsigned int *)(a1 + 44);
  v28 = *(unsigned int *)(a2 + 40);
  v27 = *(unsigned int *)(a2 + 44);
  v29 = *(unsigned __int8 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 48) && v29)
  {
    v30 = *(_QWORD *)(a1 + 8);
    v31 = *(std::__shared_weak_count **)(a1 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v29 = *(unsigned __int8 **)(a1 + 24);
  }
  v35 = *(unsigned __int8 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v35)
  {
    v36 = *(_QWORD *)(a2 + 8);
    v37 = *(std::__shared_weak_count **)(a2 + 16);
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
      do
        v40 = __ldaxr(v38);
      while (__stlxr(v40 - 1, v38));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v36 + 88))(v36, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v35 = *(unsigned __int8 **)(a2 + 24);
  }
  v41 = v22 - 1;
  v42 = v23 - 1;
  if (v23 == 1)
  {
LABEL_66:
    if (v22 == 1)
    {
      v52 = v35;
      v51 = v29;
      goto LABEL_83;
    }
    v50 = (v22 - 2) + 1;
    v51 = &v29[v50 * v25];
    v52 = &v35[v50 * v28];
    while (*v29 == *v35)
    {
      v29 += v25;
      v35 += v28;
      if (!--v41)
        goto LABEL_83;
    }
LABEL_76:
    v24 = 0;
    goto LABEL_77;
  }
  if (v22 != 1)
  {
    v43 = 0;
    v44 = (v23 - 2) + 1;
    v45 = &v29[v44 * v26];
    v46 = &v35[v44 * v27];
LABEL_60:
    v47 = v22 - 1;
    v48 = v29;
    v49 = v35;
    while (*v48 == *v49)
    {
      v48 += v25;
      v49 += v28;
      if (!--v47)
      {
        if (*v48 != *v49)
          goto LABEL_76;
        v29 += v26;
        v35 += v27;
        if (++v43 == v42)
        {
          v29 = v45;
          v35 = v46;
          goto LABEL_66;
        }
        goto LABEL_60;
      }
    }
    goto LABEL_76;
  }
  if (*v29 != *v35)
    goto LABEL_76;
  v51 = &v29[v26 * (unint64_t)v42];
  v53 = &v35[v27];
  v54 = &v29[v26];
  v52 = &v35[v27 * (unint64_t)v42];
  while (--v42)
  {
    v24 = 0;
    v55 = *v53;
    v53 += v27;
    v56 = *v54;
    v54 += v26;
    if (v56 != v55)
      goto LABEL_77;
  }
LABEL_83:
  v24 = *v51 == *v52;
  v57 = v60;
  v60 = 0;
  if (v57)
LABEL_78:
    (*(void (**)(uint64_t))(*(_QWORD *)v57 + 8))(v57);
LABEL_79:
  v58 = v61;
  v61 = 0;
  if (v58)
    (*(void (**)(uint64_t))(*(_QWORD *)v58 + 8))(v58);
  return v24;
}

void sub_2242E4A20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

BOOL sub_2242E4A84(uint64_t a1, uint64_t a2)
{
  _BOOL8 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC5EEF8;
  sub_2241668A8(a1, (uint64_t)&v15);
  v11 = &off_24EC5EEF8;
  sub_2241668A8(a2, (uint64_t)&v12);
  v3 = sub_2242E4B9C((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E4B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  sub_223AA8BF8((uint64_t)&a9);
  sub_223AA8BF8((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_2242E4B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_223AA8BF8((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2242E4B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  _BOOL8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  unsigned __int16 *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  unsigned __int16 *v44;
  unsigned __int16 *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_15;
LABEL_18:
    v51 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v51, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v50 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 == *(_DWORD *)(a2 + 32))
      goto LABEL_36;
LABEL_72:
    v24 = 0;
    goto LABEL_73;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 49))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v50, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_72;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_72;
  v24 = 1;
  if (v22 && v23)
  {
    v25 = *(unsigned int *)(a1 + 40);
    v26 = *(unsigned int *)(a1 + 44);
    v27 = *(unsigned int *)(a2 + 40);
    v28 = *(unsigned int *)(a2 + 44);
    v29 = *(unsigned __int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v29)
    {
      v30 = *(_QWORD *)(a1 + 8);
      v31 = *(std::__shared_weak_count **)(a1 + 16);
      if (v31)
      {
        v32 = (unint64_t *)&v31->__shared_owners_;
        do
          v33 = __ldxr(v32);
        while (__stxr(v33 + 1, v32));
        do
          v34 = __ldaxr(v32);
        while (__stlxr(v34 - 1, v32));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v29 = *(unsigned __int16 **)(a1 + 24);
    }
    v35 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v35)
    {
      v36 = *(_QWORD *)(a2 + 8);
      v37 = *(std::__shared_weak_count **)(a2 + 16);
      if (v37)
      {
        v38 = (unint64_t *)&v37->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v36 + 88))(v36, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v35 = *(unsigned __int16 **)(a2 + 24);
    }
    v41 = v22 - 1;
    v42 = v23 - 1;
    if (v23 == 1)
    {
LABEL_65:
      if (v22 == 1)
      {
LABEL_71:
        v24 = *v29 == *v35;
        goto LABEL_73;
      }
      while (*v29 == *v35)
      {
        v29 += v25;
        v35 += v27;
        if (!--v41)
          goto LABEL_71;
      }
    }
    else if (v22 == 1)
    {
      while (*v29 == *v35)
      {
        v29 += v26;
        v35 += v28;
        if (!--v42)
          goto LABEL_71;
      }
    }
    else
    {
      v43 = 0;
LABEL_60:
      v44 = v35;
      v45 = v29;
      v46 = v22 - 1;
      while (*v45 == *v44)
      {
        v45 += v25;
        v44 += v27;
        if (!--v46)
        {
          if (*v45 != *v44)
            goto LABEL_72;
          v29 += v26;
          v35 += v28;
          if (++v43 != v42)
            goto LABEL_60;
          goto LABEL_65;
        }
      }
    }
    goto LABEL_72;
  }
LABEL_73:
  v47 = v50;
  v50 = 0;
  if (v47)
    (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  v48 = v51;
  v51 = 0;
  if (v48)
    (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
  return v24;
}

void sub_2242E4FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

BOOL sub_2242E5044(uint64_t a1, uint64_t a2)
{
  _BOOL8 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC200A8;
  sub_223C9DD6C(a1, (uint64_t)&v15);
  v11 = &off_24EC200A8;
  sub_223C9DD6C(a2, (uint64_t)&v12);
  v3 = sub_2242E515C((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E512C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  sub_22319EF60((uint64_t)&a9);
  sub_22319EF60((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_2242E5148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_22319EF60((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2242E515C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  _BOOL8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  __int16 *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  __int16 *v44;
  __int16 *v45;
  int v46;
  uint64_t v67;
  __int16 *v68;
  __int16 *v69;
  __int16 *v70;
  __int16 *v71;
  uint64_t v76;
  uint64_t v77;
  uint64_t v83;
  uint64_t v84;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_15;
LABEL_18:
    v84 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v84, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v83 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_74;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 49))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v83, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_74;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_74;
  v24 = 1;
  if (!v22 || !v23)
  {
LABEL_75:
    v76 = v83;
    v83 = 0;
    if (!v76)
      goto LABEL_77;
    goto LABEL_76;
  }
  v25 = *(unsigned int *)(a1 + 40);
  v26 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 40);
  v28 = *(unsigned int *)(a2 + 44);
  v29 = *(__int16 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 48) && v29)
  {
    v30 = *(_QWORD *)(a1 + 8);
    v31 = *(std::__shared_weak_count **)(a1 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v29 = *(__int16 **)(a1 + 24);
  }
  v35 = *(__int16 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v35)
  {
    v36 = *(_QWORD *)(a2 + 8);
    v37 = *(std::__shared_weak_count **)(a2 + 16);
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
      do
        v40 = __ldaxr(v38);
      while (__stlxr(v40 - 1, v38));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v36 + 88))(v36, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v35 = *(__int16 **)(a2 + 24);
  }
  v41 = v22 - 1;
  v42 = v23 - 1;
  if (v23 == 1)
  {
LABEL_65:
    if (v22 == 1)
      goto LABEL_81;
    while (1)
    {
      _H0 = *v29;
      _H1 = *v35;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 != _S1)
        break;
      v29 += v25;
      v35 += v27;
      if (!--v41)
        goto LABEL_81;
    }
LABEL_74:
    v24 = 0;
    goto LABEL_75;
  }
  if (v22 != 1)
  {
    v43 = 0;
LABEL_60:
    v44 = v35;
    v45 = v29;
    v46 = v22 - 1;
    while (1)
    {
      _H0 = *v45;
      _H1 = *v44;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 != _S1)
        goto LABEL_74;
      v45 += v25;
      v44 += v27;
      if (!--v46)
      {
        _H0 = *v45;
        _H1 = *v44;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 != _S1)
          goto LABEL_74;
        v29 += v26;
        v35 += v28;
        if (++v43 != v42)
          goto LABEL_60;
        goto LABEL_65;
      }
    }
  }
  _H0 = *v29;
  _H1 = *v35;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 != _S1)
    goto LABEL_74;
  v67 = 2 * (v23 - 2) + 2;
  v68 = (__int16 *)((char *)v29 + v67 * v26);
  v69 = (__int16 *)((char *)v35 + v67 * v28);
  v70 = &v35[v28];
  v71 = &v29[v26];
  v24 = 0;
  while (--v42)
  {
    _H0 = *v70;
    v70 += v28;
    _H1 = *v71;
    v71 += v26;
    __asm
    {
      FCVT            S0, H0
      FCVT            S1, H1
    }
    if (_S1 != _S0)
      goto LABEL_75;
  }
  v35 = v69;
  v29 = v68;
LABEL_81:
  _H0 = *v29;
  _H1 = *v35;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  v24 = _S0 == _S1;
  v76 = v83;
  v83 = 0;
  if (v76)
LABEL_76:
    (*(void (**)(uint64_t))(*(_QWORD *)v76 + 8))(v76);
LABEL_77:
  v77 = v84;
  v84 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v24;
}

void sub_2242E5618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

BOOL sub_2242E567C(uint64_t a1, uint64_t a2)
{
  _BOOL8 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC21230;
  sub_223C795C4(a1, (uint64_t)&v15);
  v11 = &off_24EC21230;
  sub_223C795C4(a2, (uint64_t)&v12);
  v3 = sub_2242E5794((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E5764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  sub_2231BD9DC((uint64_t)&a9);
  sub_2231BD9DC((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_2242E5780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2231BD9DC((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2242E5794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  _BOOL8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  float *v44;
  float *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_15;
LABEL_18:
    v51 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v51, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v50 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 == *(_DWORD *)(a2 + 32))
      goto LABEL_36;
LABEL_72:
    v24 = 0;
    goto LABEL_73;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 49))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v50, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_72;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_72;
  v24 = 1;
  if (v22 && v23)
  {
    v25 = *(unsigned int *)(a1 + 40);
    v26 = *(unsigned int *)(a1 + 44);
    v27 = *(unsigned int *)(a2 + 40);
    v28 = *(unsigned int *)(a2 + 44);
    v29 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v29)
    {
      v30 = *(_QWORD *)(a1 + 8);
      v31 = *(std::__shared_weak_count **)(a1 + 16);
      if (v31)
      {
        v32 = (unint64_t *)&v31->__shared_owners_;
        do
          v33 = __ldxr(v32);
        while (__stxr(v33 + 1, v32));
        do
          v34 = __ldaxr(v32);
        while (__stlxr(v34 - 1, v32));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v29 = *(float **)(a1 + 24);
    }
    v35 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v35)
    {
      v36 = *(_QWORD *)(a2 + 8);
      v37 = *(std::__shared_weak_count **)(a2 + 16);
      if (v37)
      {
        v38 = (unint64_t *)&v37->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v36 + 88))(v36, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v35 = *(float **)(a2 + 24);
    }
    v41 = v22 - 1;
    v42 = v23 - 1;
    if (v23 == 1)
    {
LABEL_65:
      if (v22 == 1)
      {
LABEL_71:
        v24 = *v29 == *v35;
        goto LABEL_73;
      }
      while (*v29 == *v35)
      {
        v29 += v25;
        v35 += v27;
        if (!--v41)
          goto LABEL_71;
      }
    }
    else if (v22 == 1)
    {
      while (*v29 == *v35)
      {
        v29 += v26;
        v35 += v28;
        if (!--v42)
          goto LABEL_71;
      }
    }
    else
    {
      v43 = 0;
LABEL_60:
      v44 = v35;
      v45 = v29;
      v46 = v22 - 1;
      while (*v45 == *v44)
      {
        v45 += v25;
        v44 += v27;
        if (!--v46)
        {
          if (*v45 != *v44)
            goto LABEL_72;
          v29 += v26;
          v35 += v28;
          if (++v43 != v42)
            goto LABEL_60;
          goto LABEL_65;
        }
      }
    }
    goto LABEL_72;
  }
LABEL_73:
  v47 = v50;
  v50 = 0;
  if (v47)
    (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  v48 = v51;
  v51 = 0;
  if (v48)
    (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
  return v24;
}

void sub_2242E5BD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242E5C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC64B28;
  sub_2241F0714(a1, (uint64_t)&v15);
  v11 = &off_24EC64B28;
  sub_2241F0714(a2, (uint64_t)&v12);
  v3 = sub_2242E5D54((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E5D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_223FC3D74((uint64_t)&a9);
  sub_223FC3D74((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242E5D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_223FC3D74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E5D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  int v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  int v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  int v53;
  int v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  int v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  BOOL v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned __int8 *v79;
  unsigned __int8 *v80;
  unsigned __int8 *v81;
  int v82;
  int v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v95 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v95, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v94 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_124;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v94, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_124;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_124;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_124;
  if (!*(_DWORD *)(a1 + 56) || !*(_DWORD *)(a1 + 60))
  {
    if (!*(_DWORD *)(a2 + 56))
    {
      v62 = 1;
      goto LABEL_125;
    }
    v61 = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_85;
  }
  v25 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 44);
  v26 = *(unsigned int *)(a2 + 48);
  v92 = *(unsigned int *)(a1 + 52);
  v93 = *(unsigned int *)(a1 + 48);
  v91 = *(unsigned int *)(a2 + 52);
  v28 = *(unsigned __int8 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72) && v28)
  {
    v29 = *(_QWORD *)(a1 + 8);
    v30 = *(std::__shared_weak_count **)(a1 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v28 = *(unsigned __int8 **)(a1 + 24);
  }
  v34 = *(unsigned __int8 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v34)
  {
    v35 = *(_QWORD *)(a2 + 8);
    v36 = *(std::__shared_weak_count **)(a2 + 16);
    if (v36)
    {
      v37 = (unint64_t *)&v36->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v34 = *(unsigned __int8 **)(a2 + 24);
  }
  v40 = v22 - 1;
  v41 = v23 - 1;
  v42 = v24 - 1;
  if (v24 != 1)
  {
    if (v23 != 1)
    {
      v43 = 0;
      if (v22 == 1)
      {
        v68 = v93;
        v69 = (v24 - 2) + 1;
        v70 = &v28[v69 * v92];
        v71 = &v34[v69 * v91];
        while (*v28 == *v34)
        {
          v72 = v23 - 1;
          v73 = v93;
          v74 = v26;
          while (--v72)
          {
            v62 = 0;
            v75 = v34[v74];
            v74 += v26;
            v76 = v28[v73];
            v73 += v93;
            if (v76 != v75)
              goto LABEL_125;
          }
          if (v28[v93 * (unint64_t)v41] != v34[v26 * (unint64_t)v41])
            break;
          v28 += v92;
          v34 += v91;
          if (++v43 == v42)
            goto LABEL_114;
        }
      }
      else
      {
        v44 = (v24 - 2) + 1;
        v45 = &v28[v44 * v92];
        v46 = &v34[v44 * v91];
LABEL_62:
        v47 = 0;
        v48 = v34;
        v49 = v28;
LABEL_63:
        v50 = v22 - 1;
        v51 = v49;
        v52 = v48;
        while (*v51 == *v52)
        {
          v51 += v25;
          v52 += v27;
          if (!--v50)
          {
            if (*v51 != *v52)
              goto LABEL_124;
            v49 += v93;
            v48 += v26;
            if (++v47 == v41)
            {
              v53 = v22 - 1;
              while (*v49 == *v48)
              {
                v49 += v25;
                v48 += v27;
                if (!--v53)
                {
                  if (*v49 != *v48)
                    goto LABEL_124;
                  v28 += v92;
                  v34 += v91;
                  if (++v43 == v42)
                  {
                    v28 = v45;
                    v34 = v46;
                    goto LABEL_74;
                  }
                  goto LABEL_62;
                }
              }
              goto LABEL_124;
            }
            goto LABEL_63;
          }
        }
      }
      goto LABEL_124;
    }
    if (v22 != 1)
    {
      v63 = 0;
      v64 = (v24 - 2) + 1;
      v56 = &v28[v64 * v92];
      v57 = &v34[v64 * v91];
LABEL_91:
      v65 = v22 - 1;
      v66 = v28;
      v67 = v34;
      while (*v66 == *v67)
      {
        v66 += v25;
        v67 += v27;
        if (!--v65)
        {
          if (*v66 != *v67)
            goto LABEL_124;
          v28 += v92;
          v34 += v91;
          if (++v63 != v42)
            goto LABEL_91;
          goto LABEL_107;
        }
      }
      goto LABEL_124;
    }
    if (*v28 == *v34)
    {
      v56 = &v28[v92 * (unint64_t)v42];
      v84 = &v34[v91];
      v85 = &v28[v92];
      v57 = &v34[v91 * (unint64_t)v42];
      while (--v42)
      {
        v62 = 0;
        v86 = *v84;
        v84 += v91;
        v87 = *v85;
        v85 += v92;
        if (v87 != v86)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
LABEL_124:
    v62 = 0;
    goto LABEL_125;
  }
LABEL_74:
  if (v23 != 1)
  {
    if (v22 == 1)
    {
      v70 = v28;
      v71 = v34;
      v68 = v93;
LABEL_114:
      if (*v70 != *v71)
        goto LABEL_124;
      v56 = &v70[v68 * (unint64_t)v41];
      v80 = &v71[v26];
      v81 = &v70[v68];
      v57 = &v71[v26 * (unint64_t)v41];
      while (--v41)
      {
        v62 = 0;
        v82 = *v80;
        v80 += v26;
        v83 = *v81;
        v81 += v68;
        if (v83 != v82)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
    v54 = 0;
    v55 = (v23 - 2) + 1;
    v56 = &v28[v55 * v93];
    v57 = &v34[v55 * v26];
LABEL_77:
    v58 = v22 - 1;
    v59 = v28;
    v60 = v34;
    while (*v59 == *v60)
    {
      v59 += v25;
      v60 += v27;
      if (!--v58)
      {
        if (*v59 != *v60)
          goto LABEL_124;
        v28 += v93;
        v34 += v26;
        if (++v54 != v41)
          goto LABEL_77;
        goto LABEL_107;
      }
    }
    goto LABEL_124;
  }
  v56 = v28;
  v57 = v34;
LABEL_107:
  if (v22 != 1)
  {
    v77 = (v22 - 2) + 1;
    v78 = &v56[v77 * v25];
    v79 = &v57[v77 * v27];
    while (*v56 == *v57)
    {
      v56 += v25;
      v57 += v27;
      if (!--v40)
      {
        v57 = v79;
        v56 = v78;
        goto LABEL_112;
      }
    }
    goto LABEL_124;
  }
LABEL_112:
  v61 = *v56 == *v57;
LABEL_85:
  v62 = v61;
LABEL_125:
  v88 = v94;
  v94 = 0;
  if (v88)
    (*(void (**)(uint64_t))(*(_QWORD *)v88 + 8))(v88);
  v89 = v95;
  v95 = 0;
  if (v89)
    (*(void (**)(uint64_t))(*(_QWORD *)v89 + 8))(v89);
  return v62;
}

void sub_2242E6440(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242E64A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC61A40;
  sub_223C79A38(a1, (uint64_t)&v15);
  v11 = &off_24EC61A40;
  sub_223C79A38(a2, (uint64_t)&v12);
  v3 = sub_2242E65BC((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E658C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_223C798BC((uint64_t)&a9);
  sub_223C798BC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242E65A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_223C798BC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E65BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int16 *v50;
  unsigned __int16 *v51;
  int v52;
  unsigned __int16 *v53;
  unsigned __int16 *v54;
  unsigned __int16 *v55;
  unsigned __int16 *v56;
  unsigned __int16 *v57;
  unsigned __int16 *v58;
  unsigned __int16 *v59;
  unsigned __int16 *v60;
  int v61;
  int v62;
  int v63;
  unsigned __int16 *v64;
  unsigned __int16 *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned __int16 *v71;
  unsigned __int16 *v72;
  int v73;
  unsigned __int16 *v74;
  unsigned __int16 *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(unsigned __int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(unsigned __int16 **)(a1 + 24);
    }
    v34 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(unsigned __int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 2 * v27;
        v44 = v25;
        v45 = 2 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (unsigned __int16 *)((char *)v75 + v44 * 2);
            v74 = (unsigned __int16 *)((char *)v74 + v46 * 2);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (unsigned __int16 *)((char *)v28 + v43);
                v34 = (unsigned __int16 *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v81;
          v49 = 2 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (unsigned __int16 *)((char *)v60 + v48);
            v59 = (unsigned __int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (unsigned __int16 *)((char *)v56 + v44 * 2);
              v55 = (unsigned __int16 *)((char *)v55 + v46 * 2);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (unsigned __int16 *)((char *)v57 + v48);
                  v58 = (unsigned __int16 *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (unsigned __int16 *)((char *)v28 + v43);
                    v34 = (unsigned __int16 *)((char *)v34 + v45);
                    ++v47;
                    v50 = (unsigned __int16 *)((char *)v50 + v43);
                    v51 = (unsigned __int16 *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242E6C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242E6CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC1FD28;
  sub_2231A0534(a1, (uint64_t)&v15);
  v11 = &off_24EC1FD28;
  sub_2231A0534(a2, (uint64_t)&v12);
  v3 = sub_2242E6DD0((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E6DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_22319EFF0((uint64_t)&a9);
  sub_22319EFF0((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242E6DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_22319EFF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E6DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  __int16 *v50;
  __int16 *v51;
  int v52;
  __int16 *v53;
  __int16 *v54;
  __int16 *v55;
  __int16 *v56;
  __int16 *v57;
  __int16 *v58;
  __int16 *v59;
  __int16 *v60;
  int v61;
  int v73;
  int v82;
  __int16 *v83;
  __int16 *v84;
  int v85;
  uint64_t v95;
  uint64_t v96;
  int v97;
  __int16 *v98;
  __int16 *v99;
  int v100;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v135;
  __int16 *v136;
  __int16 *v137;
  __int16 *v138;
  __int16 *v139;
  uint64_t v148;
  __int16 *v149;
  __int16 *v150;
  __int16 *v151;
  __int16 *v152;
  uint64_t v157;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v167 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v167, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v166 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_115;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v166, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_115;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_115;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_115;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v26 = *(unsigned int *)(a2 + 48);
    v164 = *(unsigned int *)(a2 + 44);
    v165 = *(unsigned int *)(a1 + 44);
    v163 = *(unsigned int *)(a1 + 52);
    v27 = *(unsigned int *)(a2 + 52);
    v28 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(__int16 **)(a1 + 24);
    }
    v34 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(__int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 != 1)
      {
        v43 = 2 * v27;
        v44 = v26;
        v45 = 2 * v163;
        v46 = v25;
        if (v22 == 1)
        {
          v113 = 2 * (v23 - 2) + 2;
          v114 = v113 * v25;
          v115 = v113 * v26;
          while (1)
          {
            _H0 = *v28;
            _H1 = *v34;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v120 = v23 - 1;
            v121 = 2 * v25;
            v122 = 2 * v26;
            while (--v120)
            {
              v95 = 0;
              _H0 = *(__int16 *)((char *)v34 + v122);
              v122 += v44 * 2;
              _H1 = *(__int16 *)((char *)v28 + v121);
              v121 += v46 * 2;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              if (_S1 != _S0)
                goto LABEL_116;
            }
            _H0 = *(__int16 *)((char *)v28 + v114);
            _H1 = *(__int16 *)((char *)v34 + v115);
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v28 = (__int16 *)((char *)v28 + v45);
            v34 = (__int16 *)((char *)v34 + v43);
            if (++v40 == v42)
              goto LABEL_105;
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v165;
          v49 = 2 * v164;
          v50 = &v28[v46];
          v51 = &v34[v44];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (1)
          {
            _H0 = *v60;
            _H1 = *v59;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v60 = (__int16 *)((char *)v60 + v48);
            v59 = (__int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              _H0 = *v60;
              _H1 = *v59;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 != _S1)
                goto LABEL_115;
              v56 = (__int16 *)((char *)v56 + v46 * 2);
              v55 = (__int16 *)((char *)v55 + v44 * 2);
              ++v52;
              v54 = &v57[v46];
              v53 = &v58[v44];
              if (v52 == v41)
              {
                v73 = v22 - 1;
                while (1)
                {
                  _H0 = *v57;
                  _H1 = *v58;
                  __asm
                  {
                    FCVT            S1, H1
                    FCVT            S0, H0
                  }
                  if (_S0 != _S1)
                    goto LABEL_115;
                  v57 = (__int16 *)((char *)v57 + v48);
                  v58 = (__int16 *)((char *)v58 + v49);
                  if (!--v73)
                  {
                    _H0 = *v57;
                    _H1 = *v58;
                    __asm
                    {
                      FCVT            S1, H1
                      FCVT            S0, H0
                    }
                    if (_S0 != _S1)
                      goto LABEL_115;
                    v28 = (__int16 *)((char *)v28 + v45);
                    v34 = (__int16 *)((char *)v34 + v43);
                    ++v47;
                    v50 = (__int16 *)((char *)v50 + v45);
                    v51 = (__int16 *)((char *)v51 + v43);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
              }
              goto LABEL_63;
            }
          }
        }
        goto LABEL_115;
      }
      if (v22 != 1)
      {
        v97 = 0;
LABEL_88:
        v98 = v34;
        v99 = v28;
        v100 = v22 - 1;
        while (1)
        {
          _H0 = *v99;
          _H1 = *v98;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v99 += v165;
          v98 += v164;
          if (!--v100)
          {
            _H0 = *v99;
            _H1 = *v98;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v163;
            v34 += v27;
            if (++v97 != v42)
              goto LABEL_88;
            goto LABEL_93;
          }
        }
      }
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 == _S1)
      {
        v148 = 2 * (v24 - 2) + 2;
        v149 = (__int16 *)((char *)v28 + v148 * v163);
        v150 = (__int16 *)((char *)v34 + v148 * v27);
        v151 = &v34[v27];
        v152 = &v28[v163];
        v95 = 0;
        while (--v42)
        {
          _H0 = *v151;
          v151 += v27;
          _H1 = *v152;
          v152 += v163;
          __asm
          {
            FCVT            S0, H0
            FCVT            S1, H1
          }
          if (_S1 != _S0)
            goto LABEL_116;
        }
        v34 = v150;
        v28 = v149;
        goto LABEL_123;
      }
      goto LABEL_115;
    }
LABEL_73:
    if (v23 == 1)
    {
LABEL_93:
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          _H1 = *v34;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v28 += v165;
          v34 += v164;
        }
        while (--v40);
      }
    }
    else
    {
      if (v22 != 1)
      {
        v82 = 0;
LABEL_76:
        v83 = v34;
        v84 = v28;
        v85 = v22 - 1;
        while (1)
        {
          _H0 = *v84;
          _H1 = *v83;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v84 += v165;
          v83 += v164;
          if (!--v85)
          {
            _H0 = *v84;
            _H1 = *v83;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v25;
            v34 += v26;
            if (++v82 != v41)
              goto LABEL_76;
            goto LABEL_93;
          }
        }
      }
LABEL_105:
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 != _S1)
      {
LABEL_115:
        v95 = 0;
LABEL_116:
        v96 = v166;
        v166 = 0;
        if (v96)
          goto LABEL_117;
        goto LABEL_118;
      }
      v135 = 2 * (v23 - 2) + 2;
      v136 = (__int16 *)((char *)v28 + v135 * v25);
      v137 = (__int16 *)((char *)v34 + v135 * v26);
      v138 = &v34[v26];
      v139 = &v28[v25];
      v95 = 0;
      while (--v41)
      {
        _H0 = *v138;
        v138 += v26;
        _H1 = *v139;
        v139 += v25;
        __asm
        {
          FCVT            S0, H0
          FCVT            S1, H1
        }
        if (_S1 != _S0)
          goto LABEL_116;
      }
      v34 = v137;
      v28 = v136;
    }
LABEL_123:
    _H0 = *v28;
    _H1 = *v34;
    __asm
    {
      FCVT            S1, H1
      FCVT            S0, H0
    }
    _ZF = _S0 == _S1;
LABEL_124:
    v95 = _ZF;
    v96 = v166;
    v166 = 0;
    if (!v96)
      goto LABEL_118;
    goto LABEL_117;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    _ZF = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_124;
  }
  v95 = 1;
  v96 = v166;
  v166 = 0;
  if (v96)
LABEL_117:
    (*(void (**)(uint64_t))(*(_QWORD *)v96 + 8))(v96);
LABEL_118:
  v157 = v167;
  v167 = 0;
  if (v157)
    (*(void (**)(uint64_t))(*(_QWORD *)v157 + 8))(v157);
  return v95;
}

void sub_2242E7594(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242E75F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6DAF0;
  sub_2241F0EC4(a1, (uint64_t)&v15);
  v11 = &off_24EC6DAF0;
  sub_2241F0EC4(a2, (uint64_t)&v12);
  v3 = sub_2242E7710((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E76E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F0D48((uint64_t)&a9);
  sub_2241F0D48((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242E76FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F0D48((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E7710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  float *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  float *v50;
  float *v51;
  int v52;
  float *v53;
  float *v54;
  float *v55;
  float *v56;
  float *v57;
  float *v58;
  float *v59;
  float *v60;
  int v61;
  int v62;
  int v63;
  float *v64;
  float *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  float *v71;
  float *v72;
  int v73;
  float *v74;
  float *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(float **)(a1 + 24);
    }
    v34 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(float **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 4 * v27;
        v44 = v25;
        v45 = 4 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (float *)((char *)v75 + v44 * 4);
            v74 = (float *)((char *)v74 + v46 * 4);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (float *)((char *)v28 + v43);
                v34 = (float *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 4 * v81;
          v49 = 4 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (float *)((char *)v60 + v48);
            v59 = (float *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (float *)((char *)v56 + v44 * 4);
              v55 = (float *)((char *)v55 + v46 * 4);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (float *)((char *)v57 + v48);
                  v58 = (float *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (float *)((char *)v28 + v43);
                    v34 = (float *)((char *)v34 + v45);
                    ++v47;
                    v50 = (float *)((char *)v50 + v43);
                    v51 = (float *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242E7DA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242E7E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6DBE8;
  sub_2241F1674(a1, (uint64_t)&v15);
  v11 = &off_24EC6DBE8;
  sub_2241F1674(a2, (uint64_t)&v12);
  v3 = sub_2242E7F24((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E7EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F14FC((uint64_t)&a9);
  sub_2241F14FC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242E7F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F14FC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E7F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  int v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  int v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  int v53;
  int v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  int v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  BOOL v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned __int8 *v79;
  unsigned __int8 *v80;
  unsigned __int8 *v81;
  int v82;
  int v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v95 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v95, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v94 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_124;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v94, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_124;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_124;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_124;
  if (!*(_DWORD *)(a1 + 56) || !*(_DWORD *)(a1 + 60))
  {
    if (!*(_DWORD *)(a2 + 56))
    {
      v62 = 1;
      goto LABEL_125;
    }
    v61 = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_85;
  }
  v25 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 44);
  v26 = *(unsigned int *)(a2 + 48);
  v92 = *(unsigned int *)(a1 + 52);
  v93 = *(unsigned int *)(a1 + 48);
  v91 = *(unsigned int *)(a2 + 52);
  v28 = *(unsigned __int8 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72) && v28)
  {
    v29 = *(_QWORD *)(a1 + 8);
    v30 = *(std::__shared_weak_count **)(a1 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v28 = *(unsigned __int8 **)(a1 + 24);
  }
  v34 = *(unsigned __int8 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v34)
  {
    v35 = *(_QWORD *)(a2 + 8);
    v36 = *(std::__shared_weak_count **)(a2 + 16);
    if (v36)
    {
      v37 = (unint64_t *)&v36->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v34 = *(unsigned __int8 **)(a2 + 24);
  }
  v40 = v22 - 1;
  v41 = v23 - 1;
  v42 = v24 - 1;
  if (v24 != 1)
  {
    if (v23 != 1)
    {
      v43 = 0;
      if (v22 == 1)
      {
        v68 = v93;
        v69 = (v24 - 2) + 1;
        v70 = &v28[v69 * v92];
        v71 = &v34[v69 * v91];
        while (*v28 == *v34)
        {
          v72 = v23 - 1;
          v73 = v93;
          v74 = v26;
          while (--v72)
          {
            v62 = 0;
            v75 = v34[v74];
            v74 += v26;
            v76 = v28[v73];
            v73 += v93;
            if (v76 != v75)
              goto LABEL_125;
          }
          if (v28[v93 * (unint64_t)v41] != v34[v26 * (unint64_t)v41])
            break;
          v28 += v92;
          v34 += v91;
          if (++v43 == v42)
            goto LABEL_114;
        }
      }
      else
      {
        v44 = (v24 - 2) + 1;
        v45 = &v28[v44 * v92];
        v46 = &v34[v44 * v91];
LABEL_62:
        v47 = 0;
        v48 = v34;
        v49 = v28;
LABEL_63:
        v50 = v22 - 1;
        v51 = v49;
        v52 = v48;
        while (*v51 == *v52)
        {
          v51 += v25;
          v52 += v27;
          if (!--v50)
          {
            if (*v51 != *v52)
              goto LABEL_124;
            v49 += v93;
            v48 += v26;
            if (++v47 == v41)
            {
              v53 = v22 - 1;
              while (*v49 == *v48)
              {
                v49 += v25;
                v48 += v27;
                if (!--v53)
                {
                  if (*v49 != *v48)
                    goto LABEL_124;
                  v28 += v92;
                  v34 += v91;
                  if (++v43 == v42)
                  {
                    v28 = v45;
                    v34 = v46;
                    goto LABEL_74;
                  }
                  goto LABEL_62;
                }
              }
              goto LABEL_124;
            }
            goto LABEL_63;
          }
        }
      }
      goto LABEL_124;
    }
    if (v22 != 1)
    {
      v63 = 0;
      v64 = (v24 - 2) + 1;
      v56 = &v28[v64 * v92];
      v57 = &v34[v64 * v91];
LABEL_91:
      v65 = v22 - 1;
      v66 = v28;
      v67 = v34;
      while (*v66 == *v67)
      {
        v66 += v25;
        v67 += v27;
        if (!--v65)
        {
          if (*v66 != *v67)
            goto LABEL_124;
          v28 += v92;
          v34 += v91;
          if (++v63 != v42)
            goto LABEL_91;
          goto LABEL_107;
        }
      }
      goto LABEL_124;
    }
    if (*v28 == *v34)
    {
      v56 = &v28[v92 * (unint64_t)v42];
      v84 = &v34[v91];
      v85 = &v28[v92];
      v57 = &v34[v91 * (unint64_t)v42];
      while (--v42)
      {
        v62 = 0;
        v86 = *v84;
        v84 += v91;
        v87 = *v85;
        v85 += v92;
        if (v87 != v86)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
LABEL_124:
    v62 = 0;
    goto LABEL_125;
  }
LABEL_74:
  if (v23 != 1)
  {
    if (v22 == 1)
    {
      v70 = v28;
      v71 = v34;
      v68 = v93;
LABEL_114:
      if (*v70 != *v71)
        goto LABEL_124;
      v56 = &v70[v68 * (unint64_t)v41];
      v80 = &v71[v26];
      v81 = &v70[v68];
      v57 = &v71[v26 * (unint64_t)v41];
      while (--v41)
      {
        v62 = 0;
        v82 = *v80;
        v80 += v26;
        v83 = *v81;
        v81 += v68;
        if (v83 != v82)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
    v54 = 0;
    v55 = (v23 - 2) + 1;
    v56 = &v28[v55 * v93];
    v57 = &v34[v55 * v26];
LABEL_77:
    v58 = v22 - 1;
    v59 = v28;
    v60 = v34;
    while (*v59 == *v60)
    {
      v59 += v25;
      v60 += v27;
      if (!--v58)
      {
        if (*v59 != *v60)
          goto LABEL_124;
        v28 += v93;
        v34 += v26;
        if (++v54 != v41)
          goto LABEL_77;
        goto LABEL_107;
      }
    }
    goto LABEL_124;
  }
  v56 = v28;
  v57 = v34;
LABEL_107:
  if (v22 != 1)
  {
    v77 = (v22 - 2) + 1;
    v78 = &v56[v77 * v25];
    v79 = &v57[v77 * v27];
    while (*v56 == *v57)
    {
      v56 += v25;
      v57 += v27;
      if (!--v40)
      {
        v57 = v79;
        v56 = v78;
        goto LABEL_112;
      }
    }
    goto LABEL_124;
  }
LABEL_112:
  v61 = *v56 == *v57;
LABEL_85:
  v62 = v61;
LABEL_125:
  v88 = v94;
  v94 = 0;
  if (v88)
    (*(void (**)(uint64_t))(*(_QWORD *)v88 + 8))(v88);
  v89 = v95;
  v95 = 0;
  if (v89)
    (*(void (**)(uint64_t))(*(_QWORD *)v89 + 8))(v89);
  return v62;
}

void sub_2242E8610(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242E8674(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6DCE0;
  sub_2241F1E24(a1, (uint64_t)&v15);
  v11 = &off_24EC6DCE0;
  sub_2241F1E24(a2, (uint64_t)&v12);
  v3 = sub_2242E878C((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E875C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F1CA8((uint64_t)&a9);
  sub_2241F1CA8((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242E8778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F1CA8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E878C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int16 *v50;
  unsigned __int16 *v51;
  int v52;
  unsigned __int16 *v53;
  unsigned __int16 *v54;
  unsigned __int16 *v55;
  unsigned __int16 *v56;
  unsigned __int16 *v57;
  unsigned __int16 *v58;
  unsigned __int16 *v59;
  unsigned __int16 *v60;
  int v61;
  int v62;
  int v63;
  unsigned __int16 *v64;
  unsigned __int16 *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned __int16 *v71;
  unsigned __int16 *v72;
  int v73;
  unsigned __int16 *v74;
  unsigned __int16 *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(unsigned __int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(unsigned __int16 **)(a1 + 24);
    }
    v34 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(unsigned __int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 2 * v27;
        v44 = v25;
        v45 = 2 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (unsigned __int16 *)((char *)v75 + v44 * 2);
            v74 = (unsigned __int16 *)((char *)v74 + v46 * 2);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (unsigned __int16 *)((char *)v28 + v43);
                v34 = (unsigned __int16 *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v81;
          v49 = 2 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (unsigned __int16 *)((char *)v60 + v48);
            v59 = (unsigned __int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (unsigned __int16 *)((char *)v56 + v44 * 2);
              v55 = (unsigned __int16 *)((char *)v55 + v46 * 2);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (unsigned __int16 *)((char *)v57 + v48);
                  v58 = (unsigned __int16 *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (unsigned __int16 *)((char *)v28 + v43);
                    v34 = (unsigned __int16 *)((char *)v34 + v45);
                    ++v47;
                    v50 = (unsigned __int16 *)((char *)v50 + v43);
                    v51 = (unsigned __int16 *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242E8E24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242E8E88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6DDD8;
  sub_2241F25D8(a1, (uint64_t)&v15);
  v11 = &off_24EC6DDD8;
  sub_2241F25D8(a2, (uint64_t)&v12);
  v3 = sub_2242E8FA0((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E8F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F245C((uint64_t)&a9);
  sub_2241F245C((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242E8F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F245C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E8FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  __int16 *v50;
  __int16 *v51;
  int v52;
  __int16 *v53;
  __int16 *v54;
  __int16 *v55;
  __int16 *v56;
  __int16 *v57;
  __int16 *v58;
  __int16 *v59;
  __int16 *v60;
  int v61;
  int v73;
  int v82;
  __int16 *v83;
  __int16 *v84;
  int v85;
  uint64_t v95;
  uint64_t v96;
  int v97;
  __int16 *v98;
  __int16 *v99;
  int v100;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v135;
  __int16 *v136;
  __int16 *v137;
  __int16 *v138;
  __int16 *v139;
  uint64_t v148;
  __int16 *v149;
  __int16 *v150;
  __int16 *v151;
  __int16 *v152;
  uint64_t v157;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v167 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v167, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v166 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_115;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v166, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_115;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_115;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_115;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v26 = *(unsigned int *)(a2 + 48);
    v164 = *(unsigned int *)(a2 + 44);
    v165 = *(unsigned int *)(a1 + 44);
    v163 = *(unsigned int *)(a1 + 52);
    v27 = *(unsigned int *)(a2 + 52);
    v28 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(__int16 **)(a1 + 24);
    }
    v34 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(__int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 != 1)
      {
        v43 = 2 * v27;
        v44 = v26;
        v45 = 2 * v163;
        v46 = v25;
        if (v22 == 1)
        {
          v113 = 2 * (v23 - 2) + 2;
          v114 = v113 * v25;
          v115 = v113 * v26;
          while (1)
          {
            _H0 = *v28;
            _H1 = *v34;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v120 = v23 - 1;
            v121 = 2 * v25;
            v122 = 2 * v26;
            while (--v120)
            {
              v95 = 0;
              _H0 = *(__int16 *)((char *)v34 + v122);
              v122 += v44 * 2;
              _H1 = *(__int16 *)((char *)v28 + v121);
              v121 += v46 * 2;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              if (_S1 != _S0)
                goto LABEL_116;
            }
            _H0 = *(__int16 *)((char *)v28 + v114);
            _H1 = *(__int16 *)((char *)v34 + v115);
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v28 = (__int16 *)((char *)v28 + v45);
            v34 = (__int16 *)((char *)v34 + v43);
            if (++v40 == v42)
              goto LABEL_105;
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v165;
          v49 = 2 * v164;
          v50 = &v28[v46];
          v51 = &v34[v44];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (1)
          {
            _H0 = *v60;
            _H1 = *v59;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v60 = (__int16 *)((char *)v60 + v48);
            v59 = (__int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              _H0 = *v60;
              _H1 = *v59;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 != _S1)
                goto LABEL_115;
              v56 = (__int16 *)((char *)v56 + v46 * 2);
              v55 = (__int16 *)((char *)v55 + v44 * 2);
              ++v52;
              v54 = &v57[v46];
              v53 = &v58[v44];
              if (v52 == v41)
              {
                v73 = v22 - 1;
                while (1)
                {
                  _H0 = *v57;
                  _H1 = *v58;
                  __asm
                  {
                    FCVT            S1, H1
                    FCVT            S0, H0
                  }
                  if (_S0 != _S1)
                    goto LABEL_115;
                  v57 = (__int16 *)((char *)v57 + v48);
                  v58 = (__int16 *)((char *)v58 + v49);
                  if (!--v73)
                  {
                    _H0 = *v57;
                    _H1 = *v58;
                    __asm
                    {
                      FCVT            S1, H1
                      FCVT            S0, H0
                    }
                    if (_S0 != _S1)
                      goto LABEL_115;
                    v28 = (__int16 *)((char *)v28 + v45);
                    v34 = (__int16 *)((char *)v34 + v43);
                    ++v47;
                    v50 = (__int16 *)((char *)v50 + v45);
                    v51 = (__int16 *)((char *)v51 + v43);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
              }
              goto LABEL_63;
            }
          }
        }
        goto LABEL_115;
      }
      if (v22 != 1)
      {
        v97 = 0;
LABEL_88:
        v98 = v34;
        v99 = v28;
        v100 = v22 - 1;
        while (1)
        {
          _H0 = *v99;
          _H1 = *v98;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v99 += v165;
          v98 += v164;
          if (!--v100)
          {
            _H0 = *v99;
            _H1 = *v98;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v163;
            v34 += v27;
            if (++v97 != v42)
              goto LABEL_88;
            goto LABEL_93;
          }
        }
      }
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 == _S1)
      {
        v148 = 2 * (v24 - 2) + 2;
        v149 = (__int16 *)((char *)v28 + v148 * v163);
        v150 = (__int16 *)((char *)v34 + v148 * v27);
        v151 = &v34[v27];
        v152 = &v28[v163];
        v95 = 0;
        while (--v42)
        {
          _H0 = *v151;
          v151 += v27;
          _H1 = *v152;
          v152 += v163;
          __asm
          {
            FCVT            S0, H0
            FCVT            S1, H1
          }
          if (_S1 != _S0)
            goto LABEL_116;
        }
        v34 = v150;
        v28 = v149;
        goto LABEL_123;
      }
      goto LABEL_115;
    }
LABEL_73:
    if (v23 == 1)
    {
LABEL_93:
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          _H1 = *v34;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v28 += v165;
          v34 += v164;
        }
        while (--v40);
      }
    }
    else
    {
      if (v22 != 1)
      {
        v82 = 0;
LABEL_76:
        v83 = v34;
        v84 = v28;
        v85 = v22 - 1;
        while (1)
        {
          _H0 = *v84;
          _H1 = *v83;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v84 += v165;
          v83 += v164;
          if (!--v85)
          {
            _H0 = *v84;
            _H1 = *v83;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v25;
            v34 += v26;
            if (++v82 != v41)
              goto LABEL_76;
            goto LABEL_93;
          }
        }
      }
LABEL_105:
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 != _S1)
      {
LABEL_115:
        v95 = 0;
LABEL_116:
        v96 = v166;
        v166 = 0;
        if (v96)
          goto LABEL_117;
        goto LABEL_118;
      }
      v135 = 2 * (v23 - 2) + 2;
      v136 = (__int16 *)((char *)v28 + v135 * v25);
      v137 = (__int16 *)((char *)v34 + v135 * v26);
      v138 = &v34[v26];
      v139 = &v28[v25];
      v95 = 0;
      while (--v41)
      {
        _H0 = *v138;
        v138 += v26;
        _H1 = *v139;
        v139 += v25;
        __asm
        {
          FCVT            S0, H0
          FCVT            S1, H1
        }
        if (_S1 != _S0)
          goto LABEL_116;
      }
      v34 = v137;
      v28 = v136;
    }
LABEL_123:
    _H0 = *v28;
    _H1 = *v34;
    __asm
    {
      FCVT            S1, H1
      FCVT            S0, H0
    }
    _ZF = _S0 == _S1;
LABEL_124:
    v95 = _ZF;
    v96 = v166;
    v166 = 0;
    if (!v96)
      goto LABEL_118;
    goto LABEL_117;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    _ZF = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_124;
  }
  v95 = 1;
  v96 = v166;
  v166 = 0;
  if (v96)
LABEL_117:
    (*(void (**)(uint64_t))(*(_QWORD *)v96 + 8))(v96);
LABEL_118:
  v157 = v167;
  v167 = 0;
  if (v157)
    (*(void (**)(uint64_t))(*(_QWORD *)v157 + 8))(v157);
  return v95;
}

void sub_2242E9764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242E97C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6DED0;
  sub_2241F2D8C(a1, (uint64_t)&v15);
  v11 = &off_24EC6DED0;
  sub_2241F2D8C(a2, (uint64_t)&v12);
  v3 = sub_2242E98E0((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242E98B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F2C10((uint64_t)&a9);
  sub_2241F2C10((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242E98CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F2C10((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242E98E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  float *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  float *v50;
  float *v51;
  int v52;
  float *v53;
  float *v54;
  float *v55;
  float *v56;
  float *v57;
  float *v58;
  float *v59;
  float *v60;
  int v61;
  int v62;
  int v63;
  float *v64;
  float *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  float *v71;
  float *v72;
  int v73;
  float *v74;
  float *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(float **)(a1 + 24);
    }
    v34 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(float **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 4 * v27;
        v44 = v25;
        v45 = 4 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (float *)((char *)v75 + v44 * 4);
            v74 = (float *)((char *)v74 + v46 * 4);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (float *)((char *)v28 + v43);
                v34 = (float *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 4 * v81;
          v49 = 4 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (float *)((char *)v60 + v48);
            v59 = (float *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (float *)((char *)v56 + v44 * 4);
              v55 = (float *)((char *)v55 + v46 * 4);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (float *)((char *)v57 + v48);
                  v58 = (float *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (float *)((char *)v28 + v43);
                    v34 = (float *)((char *)v34 + v45);
                    ++v47;
                    v50 = (float *)((char *)v50 + v43);
                    v51 = (float *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242E9F78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242E9FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6DFC8;
  sub_2241F353C(a1, (uint64_t)&v15);
  v11 = &off_24EC6DFC8;
  sub_2241F353C(a2, (uint64_t)&v12);
  v3 = sub_2242EA0F4((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242EA0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F33C4((uint64_t)&a9);
  sub_2241F33C4((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242EA0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F33C4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242EA0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  int v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  int v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  int v53;
  int v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  int v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  BOOL v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned __int8 *v79;
  unsigned __int8 *v80;
  unsigned __int8 *v81;
  int v82;
  int v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v95 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v95, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v94 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_124;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v94, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_124;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_124;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_124;
  if (!*(_DWORD *)(a1 + 56) || !*(_DWORD *)(a1 + 60))
  {
    if (!*(_DWORD *)(a2 + 56))
    {
      v62 = 1;
      goto LABEL_125;
    }
    v61 = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_85;
  }
  v25 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 44);
  v26 = *(unsigned int *)(a2 + 48);
  v92 = *(unsigned int *)(a1 + 52);
  v93 = *(unsigned int *)(a1 + 48);
  v91 = *(unsigned int *)(a2 + 52);
  v28 = *(unsigned __int8 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72) && v28)
  {
    v29 = *(_QWORD *)(a1 + 8);
    v30 = *(std::__shared_weak_count **)(a1 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v28 = *(unsigned __int8 **)(a1 + 24);
  }
  v34 = *(unsigned __int8 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v34)
  {
    v35 = *(_QWORD *)(a2 + 8);
    v36 = *(std::__shared_weak_count **)(a2 + 16);
    if (v36)
    {
      v37 = (unint64_t *)&v36->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v34 = *(unsigned __int8 **)(a2 + 24);
  }
  v40 = v22 - 1;
  v41 = v23 - 1;
  v42 = v24 - 1;
  if (v24 != 1)
  {
    if (v23 != 1)
    {
      v43 = 0;
      if (v22 == 1)
      {
        v68 = v93;
        v69 = (v24 - 2) + 1;
        v70 = &v28[v69 * v92];
        v71 = &v34[v69 * v91];
        while (*v28 == *v34)
        {
          v72 = v23 - 1;
          v73 = v93;
          v74 = v26;
          while (--v72)
          {
            v62 = 0;
            v75 = v34[v74];
            v74 += v26;
            v76 = v28[v73];
            v73 += v93;
            if (v76 != v75)
              goto LABEL_125;
          }
          if (v28[v93 * (unint64_t)v41] != v34[v26 * (unint64_t)v41])
            break;
          v28 += v92;
          v34 += v91;
          if (++v43 == v42)
            goto LABEL_114;
        }
      }
      else
      {
        v44 = (v24 - 2) + 1;
        v45 = &v28[v44 * v92];
        v46 = &v34[v44 * v91];
LABEL_62:
        v47 = 0;
        v48 = v34;
        v49 = v28;
LABEL_63:
        v50 = v22 - 1;
        v51 = v49;
        v52 = v48;
        while (*v51 == *v52)
        {
          v51 += v25;
          v52 += v27;
          if (!--v50)
          {
            if (*v51 != *v52)
              goto LABEL_124;
            v49 += v93;
            v48 += v26;
            if (++v47 == v41)
            {
              v53 = v22 - 1;
              while (*v49 == *v48)
              {
                v49 += v25;
                v48 += v27;
                if (!--v53)
                {
                  if (*v49 != *v48)
                    goto LABEL_124;
                  v28 += v92;
                  v34 += v91;
                  if (++v43 == v42)
                  {
                    v28 = v45;
                    v34 = v46;
                    goto LABEL_74;
                  }
                  goto LABEL_62;
                }
              }
              goto LABEL_124;
            }
            goto LABEL_63;
          }
        }
      }
      goto LABEL_124;
    }
    if (v22 != 1)
    {
      v63 = 0;
      v64 = (v24 - 2) + 1;
      v56 = &v28[v64 * v92];
      v57 = &v34[v64 * v91];
LABEL_91:
      v65 = v22 - 1;
      v66 = v28;
      v67 = v34;
      while (*v66 == *v67)
      {
        v66 += v25;
        v67 += v27;
        if (!--v65)
        {
          if (*v66 != *v67)
            goto LABEL_124;
          v28 += v92;
          v34 += v91;
          if (++v63 != v42)
            goto LABEL_91;
          goto LABEL_107;
        }
      }
      goto LABEL_124;
    }
    if (*v28 == *v34)
    {
      v56 = &v28[v92 * (unint64_t)v42];
      v84 = &v34[v91];
      v85 = &v28[v92];
      v57 = &v34[v91 * (unint64_t)v42];
      while (--v42)
      {
        v62 = 0;
        v86 = *v84;
        v84 += v91;
        v87 = *v85;
        v85 += v92;
        if (v87 != v86)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
LABEL_124:
    v62 = 0;
    goto LABEL_125;
  }
LABEL_74:
  if (v23 != 1)
  {
    if (v22 == 1)
    {
      v70 = v28;
      v71 = v34;
      v68 = v93;
LABEL_114:
      if (*v70 != *v71)
        goto LABEL_124;
      v56 = &v70[v68 * (unint64_t)v41];
      v80 = &v71[v26];
      v81 = &v70[v68];
      v57 = &v71[v26 * (unint64_t)v41];
      while (--v41)
      {
        v62 = 0;
        v82 = *v80;
        v80 += v26;
        v83 = *v81;
        v81 += v68;
        if (v83 != v82)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
    v54 = 0;
    v55 = (v23 - 2) + 1;
    v56 = &v28[v55 * v93];
    v57 = &v34[v55 * v26];
LABEL_77:
    v58 = v22 - 1;
    v59 = v28;
    v60 = v34;
    while (*v59 == *v60)
    {
      v59 += v25;
      v60 += v27;
      if (!--v58)
      {
        if (*v59 != *v60)
          goto LABEL_124;
        v28 += v93;
        v34 += v26;
        if (++v54 != v41)
          goto LABEL_77;
        goto LABEL_107;
      }
    }
    goto LABEL_124;
  }
  v56 = v28;
  v57 = v34;
LABEL_107:
  if (v22 != 1)
  {
    v77 = (v22 - 2) + 1;
    v78 = &v56[v77 * v25];
    v79 = &v57[v77 * v27];
    while (*v56 == *v57)
    {
      v56 += v25;
      v57 += v27;
      if (!--v40)
      {
        v57 = v79;
        v56 = v78;
        goto LABEL_112;
      }
    }
    goto LABEL_124;
  }
LABEL_112:
  v61 = *v56 == *v57;
LABEL_85:
  v62 = v61;
LABEL_125:
  v88 = v94;
  v94 = 0;
  if (v88)
    (*(void (**)(uint64_t))(*(_QWORD *)v88 + 8))(v88);
  v89 = v95;
  v95 = 0;
  if (v89)
    (*(void (**)(uint64_t))(*(_QWORD *)v89 + 8))(v89);
  return v62;
}

void sub_2242EA7E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242EA844(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6E0C0;
  sub_2241F3CEC(a1, (uint64_t)&v15);
  v11 = &off_24EC6E0C0;
  sub_2241F3CEC(a2, (uint64_t)&v12);
  v3 = sub_2242EA95C((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242EA92C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F3B70((uint64_t)&a9);
  sub_2241F3B70((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242EA948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F3B70((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242EA95C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int16 *v50;
  unsigned __int16 *v51;
  int v52;
  unsigned __int16 *v53;
  unsigned __int16 *v54;
  unsigned __int16 *v55;
  unsigned __int16 *v56;
  unsigned __int16 *v57;
  unsigned __int16 *v58;
  unsigned __int16 *v59;
  unsigned __int16 *v60;
  int v61;
  int v62;
  int v63;
  unsigned __int16 *v64;
  unsigned __int16 *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned __int16 *v71;
  unsigned __int16 *v72;
  int v73;
  unsigned __int16 *v74;
  unsigned __int16 *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(unsigned __int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(unsigned __int16 **)(a1 + 24);
    }
    v34 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(unsigned __int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 2 * v27;
        v44 = v25;
        v45 = 2 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (unsigned __int16 *)((char *)v75 + v44 * 2);
            v74 = (unsigned __int16 *)((char *)v74 + v46 * 2);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (unsigned __int16 *)((char *)v28 + v43);
                v34 = (unsigned __int16 *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v81;
          v49 = 2 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (unsigned __int16 *)((char *)v60 + v48);
            v59 = (unsigned __int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (unsigned __int16 *)((char *)v56 + v44 * 2);
              v55 = (unsigned __int16 *)((char *)v55 + v46 * 2);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (unsigned __int16 *)((char *)v57 + v48);
                  v58 = (unsigned __int16 *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (unsigned __int16 *)((char *)v28 + v43);
                    v34 = (unsigned __int16 *)((char *)v34 + v45);
                    ++v47;
                    v50 = (unsigned __int16 *)((char *)v50 + v43);
                    v51 = (unsigned __int16 *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242EAFF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242EB058(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6E1B8;
  sub_2241F44A0(a1, (uint64_t)&v15);
  v11 = &off_24EC6E1B8;
  sub_2241F44A0(a2, (uint64_t)&v12);
  v3 = sub_2242EB170((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242EB140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F4324((uint64_t)&a9);
  sub_2241F4324((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242EB15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F4324((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242EB170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  __int16 *v50;
  __int16 *v51;
  int v52;
  __int16 *v53;
  __int16 *v54;
  __int16 *v55;
  __int16 *v56;
  __int16 *v57;
  __int16 *v58;
  __int16 *v59;
  __int16 *v60;
  int v61;
  int v73;
  int v82;
  __int16 *v83;
  __int16 *v84;
  int v85;
  uint64_t v95;
  uint64_t v96;
  int v97;
  __int16 *v98;
  __int16 *v99;
  int v100;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v135;
  __int16 *v136;
  __int16 *v137;
  __int16 *v138;
  __int16 *v139;
  uint64_t v148;
  __int16 *v149;
  __int16 *v150;
  __int16 *v151;
  __int16 *v152;
  uint64_t v157;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v167 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v167, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v166 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_115;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v166, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_115;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_115;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_115;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v26 = *(unsigned int *)(a2 + 48);
    v164 = *(unsigned int *)(a2 + 44);
    v165 = *(unsigned int *)(a1 + 44);
    v163 = *(unsigned int *)(a1 + 52);
    v27 = *(unsigned int *)(a2 + 52);
    v28 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(__int16 **)(a1 + 24);
    }
    v34 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(__int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 != 1)
      {
        v43 = 2 * v27;
        v44 = v26;
        v45 = 2 * v163;
        v46 = v25;
        if (v22 == 1)
        {
          v113 = 2 * (v23 - 2) + 2;
          v114 = v113 * v25;
          v115 = v113 * v26;
          while (1)
          {
            _H0 = *v28;
            _H1 = *v34;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v120 = v23 - 1;
            v121 = 2 * v25;
            v122 = 2 * v26;
            while (--v120)
            {
              v95 = 0;
              _H0 = *(__int16 *)((char *)v34 + v122);
              v122 += v44 * 2;
              _H1 = *(__int16 *)((char *)v28 + v121);
              v121 += v46 * 2;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              if (_S1 != _S0)
                goto LABEL_116;
            }
            _H0 = *(__int16 *)((char *)v28 + v114);
            _H1 = *(__int16 *)((char *)v34 + v115);
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v28 = (__int16 *)((char *)v28 + v45);
            v34 = (__int16 *)((char *)v34 + v43);
            if (++v40 == v42)
              goto LABEL_105;
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v165;
          v49 = 2 * v164;
          v50 = &v28[v46];
          v51 = &v34[v44];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (1)
          {
            _H0 = *v60;
            _H1 = *v59;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v60 = (__int16 *)((char *)v60 + v48);
            v59 = (__int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              _H0 = *v60;
              _H1 = *v59;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 != _S1)
                goto LABEL_115;
              v56 = (__int16 *)((char *)v56 + v46 * 2);
              v55 = (__int16 *)((char *)v55 + v44 * 2);
              ++v52;
              v54 = &v57[v46];
              v53 = &v58[v44];
              if (v52 == v41)
              {
                v73 = v22 - 1;
                while (1)
                {
                  _H0 = *v57;
                  _H1 = *v58;
                  __asm
                  {
                    FCVT            S1, H1
                    FCVT            S0, H0
                  }
                  if (_S0 != _S1)
                    goto LABEL_115;
                  v57 = (__int16 *)((char *)v57 + v48);
                  v58 = (__int16 *)((char *)v58 + v49);
                  if (!--v73)
                  {
                    _H0 = *v57;
                    _H1 = *v58;
                    __asm
                    {
                      FCVT            S1, H1
                      FCVT            S0, H0
                    }
                    if (_S0 != _S1)
                      goto LABEL_115;
                    v28 = (__int16 *)((char *)v28 + v45);
                    v34 = (__int16 *)((char *)v34 + v43);
                    ++v47;
                    v50 = (__int16 *)((char *)v50 + v45);
                    v51 = (__int16 *)((char *)v51 + v43);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
              }
              goto LABEL_63;
            }
          }
        }
        goto LABEL_115;
      }
      if (v22 != 1)
      {
        v97 = 0;
LABEL_88:
        v98 = v34;
        v99 = v28;
        v100 = v22 - 1;
        while (1)
        {
          _H0 = *v99;
          _H1 = *v98;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v99 += v165;
          v98 += v164;
          if (!--v100)
          {
            _H0 = *v99;
            _H1 = *v98;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v163;
            v34 += v27;
            if (++v97 != v42)
              goto LABEL_88;
            goto LABEL_93;
          }
        }
      }
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 == _S1)
      {
        v148 = 2 * (v24 - 2) + 2;
        v149 = (__int16 *)((char *)v28 + v148 * v163);
        v150 = (__int16 *)((char *)v34 + v148 * v27);
        v151 = &v34[v27];
        v152 = &v28[v163];
        v95 = 0;
        while (--v42)
        {
          _H0 = *v151;
          v151 += v27;
          _H1 = *v152;
          v152 += v163;
          __asm
          {
            FCVT            S0, H0
            FCVT            S1, H1
          }
          if (_S1 != _S0)
            goto LABEL_116;
        }
        v34 = v150;
        v28 = v149;
        goto LABEL_123;
      }
      goto LABEL_115;
    }
LABEL_73:
    if (v23 == 1)
    {
LABEL_93:
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          _H1 = *v34;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v28 += v165;
          v34 += v164;
        }
        while (--v40);
      }
    }
    else
    {
      if (v22 != 1)
      {
        v82 = 0;
LABEL_76:
        v83 = v34;
        v84 = v28;
        v85 = v22 - 1;
        while (1)
        {
          _H0 = *v84;
          _H1 = *v83;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v84 += v165;
          v83 += v164;
          if (!--v85)
          {
            _H0 = *v84;
            _H1 = *v83;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v25;
            v34 += v26;
            if (++v82 != v41)
              goto LABEL_76;
            goto LABEL_93;
          }
        }
      }
LABEL_105:
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 != _S1)
      {
LABEL_115:
        v95 = 0;
LABEL_116:
        v96 = v166;
        v166 = 0;
        if (v96)
          goto LABEL_117;
        goto LABEL_118;
      }
      v135 = 2 * (v23 - 2) + 2;
      v136 = (__int16 *)((char *)v28 + v135 * v25);
      v137 = (__int16 *)((char *)v34 + v135 * v26);
      v138 = &v34[v26];
      v139 = &v28[v25];
      v95 = 0;
      while (--v41)
      {
        _H0 = *v138;
        v138 += v26;
        _H1 = *v139;
        v139 += v25;
        __asm
        {
          FCVT            S0, H0
          FCVT            S1, H1
        }
        if (_S1 != _S0)
          goto LABEL_116;
      }
      v34 = v137;
      v28 = v136;
    }
LABEL_123:
    _H0 = *v28;
    _H1 = *v34;
    __asm
    {
      FCVT            S1, H1
      FCVT            S0, H0
    }
    _ZF = _S0 == _S1;
LABEL_124:
    v95 = _ZF;
    v96 = v166;
    v166 = 0;
    if (!v96)
      goto LABEL_118;
    goto LABEL_117;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    _ZF = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_124;
  }
  v95 = 1;
  v96 = v166;
  v166 = 0;
  if (v96)
LABEL_117:
    (*(void (**)(uint64_t))(*(_QWORD *)v96 + 8))(v96);
LABEL_118:
  v157 = v167;
  v167 = 0;
  if (v157)
    (*(void (**)(uint64_t))(*(_QWORD *)v157 + 8))(v157);
  return v95;
}

void sub_2242EB934(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242EB998(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6E2B0;
  sub_2241F4C54(a1, (uint64_t)&v15);
  v11 = &off_24EC6E2B0;
  sub_2241F4C54(a2, (uint64_t)&v12);
  v3 = sub_2242EBAB0((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242EBA80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F4AD8((uint64_t)&a9);
  sub_2241F4AD8((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242EBA9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F4AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242EBAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  float *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  float *v50;
  float *v51;
  int v52;
  float *v53;
  float *v54;
  float *v55;
  float *v56;
  float *v57;
  float *v58;
  float *v59;
  float *v60;
  int v61;
  int v62;
  int v63;
  float *v64;
  float *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  float *v71;
  float *v72;
  int v73;
  float *v74;
  float *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(float **)(a1 + 24);
    }
    v34 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(float **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 4 * v27;
        v44 = v25;
        v45 = 4 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (float *)((char *)v75 + v44 * 4);
            v74 = (float *)((char *)v74 + v46 * 4);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (float *)((char *)v28 + v43);
                v34 = (float *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 4 * v81;
          v49 = 4 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (float *)((char *)v60 + v48);
            v59 = (float *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (float *)((char *)v56 + v44 * 4);
              v55 = (float *)((char *)v55 + v46 * 4);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (float *)((char *)v57 + v48);
                  v58 = (float *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (float *)((char *)v28 + v43);
                    v34 = (float *)((char *)v34 + v45);
                    ++v47;
                    v50 = (float *)((char *)v50 + v43);
                    v51 = (float *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242EC148(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242EC1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6E3A8;
  sub_2241F5404(a1, (uint64_t)&v15);
  v11 = &off_24EC6E3A8;
  sub_2241F5404(a2, (uint64_t)&v12);
  v3 = sub_2242EC2C4((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242EC294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F528C((uint64_t)&a9);
  sub_2241F528C((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242EC2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F528C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242EC2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  int v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  int v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  int v53;
  int v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  int v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  BOOL v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned __int8 *v79;
  unsigned __int8 *v80;
  unsigned __int8 *v81;
  int v82;
  int v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v95 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v95, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v94 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_124;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v94, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_124;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_124;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_124;
  if (!*(_DWORD *)(a1 + 56) || !*(_DWORD *)(a1 + 60))
  {
    if (!*(_DWORD *)(a2 + 56))
    {
      v62 = 1;
      goto LABEL_125;
    }
    v61 = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_85;
  }
  v25 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 44);
  v26 = *(unsigned int *)(a2 + 48);
  v92 = *(unsigned int *)(a1 + 52);
  v93 = *(unsigned int *)(a1 + 48);
  v91 = *(unsigned int *)(a2 + 52);
  v28 = *(unsigned __int8 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72) && v28)
  {
    v29 = *(_QWORD *)(a1 + 8);
    v30 = *(std::__shared_weak_count **)(a1 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v28 = *(unsigned __int8 **)(a1 + 24);
  }
  v34 = *(unsigned __int8 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v34)
  {
    v35 = *(_QWORD *)(a2 + 8);
    v36 = *(std::__shared_weak_count **)(a2 + 16);
    if (v36)
    {
      v37 = (unint64_t *)&v36->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v34 = *(unsigned __int8 **)(a2 + 24);
  }
  v40 = v22 - 1;
  v41 = v23 - 1;
  v42 = v24 - 1;
  if (v24 != 1)
  {
    if (v23 != 1)
    {
      v43 = 0;
      if (v22 == 1)
      {
        v68 = v93;
        v69 = (v24 - 2) + 1;
        v70 = &v28[v69 * v92];
        v71 = &v34[v69 * v91];
        while (*v28 == *v34)
        {
          v72 = v23 - 1;
          v73 = v93;
          v74 = v26;
          while (--v72)
          {
            v62 = 0;
            v75 = v34[v74];
            v74 += v26;
            v76 = v28[v73];
            v73 += v93;
            if (v76 != v75)
              goto LABEL_125;
          }
          if (v28[v93 * (unint64_t)v41] != v34[v26 * (unint64_t)v41])
            break;
          v28 += v92;
          v34 += v91;
          if (++v43 == v42)
            goto LABEL_114;
        }
      }
      else
      {
        v44 = (v24 - 2) + 1;
        v45 = &v28[v44 * v92];
        v46 = &v34[v44 * v91];
LABEL_62:
        v47 = 0;
        v48 = v34;
        v49 = v28;
LABEL_63:
        v50 = v22 - 1;
        v51 = v49;
        v52 = v48;
        while (*v51 == *v52)
        {
          v51 += v25;
          v52 += v27;
          if (!--v50)
          {
            if (*v51 != *v52)
              goto LABEL_124;
            v49 += v93;
            v48 += v26;
            if (++v47 == v41)
            {
              v53 = v22 - 1;
              while (*v49 == *v48)
              {
                v49 += v25;
                v48 += v27;
                if (!--v53)
                {
                  if (*v49 != *v48)
                    goto LABEL_124;
                  v28 += v92;
                  v34 += v91;
                  if (++v43 == v42)
                  {
                    v28 = v45;
                    v34 = v46;
                    goto LABEL_74;
                  }
                  goto LABEL_62;
                }
              }
              goto LABEL_124;
            }
            goto LABEL_63;
          }
        }
      }
      goto LABEL_124;
    }
    if (v22 != 1)
    {
      v63 = 0;
      v64 = (v24 - 2) + 1;
      v56 = &v28[v64 * v92];
      v57 = &v34[v64 * v91];
LABEL_91:
      v65 = v22 - 1;
      v66 = v28;
      v67 = v34;
      while (*v66 == *v67)
      {
        v66 += v25;
        v67 += v27;
        if (!--v65)
        {
          if (*v66 != *v67)
            goto LABEL_124;
          v28 += v92;
          v34 += v91;
          if (++v63 != v42)
            goto LABEL_91;
          goto LABEL_107;
        }
      }
      goto LABEL_124;
    }
    if (*v28 == *v34)
    {
      v56 = &v28[v92 * (unint64_t)v42];
      v84 = &v34[v91];
      v85 = &v28[v92];
      v57 = &v34[v91 * (unint64_t)v42];
      while (--v42)
      {
        v62 = 0;
        v86 = *v84;
        v84 += v91;
        v87 = *v85;
        v85 += v92;
        if (v87 != v86)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
LABEL_124:
    v62 = 0;
    goto LABEL_125;
  }
LABEL_74:
  if (v23 != 1)
  {
    if (v22 == 1)
    {
      v70 = v28;
      v71 = v34;
      v68 = v93;
LABEL_114:
      if (*v70 != *v71)
        goto LABEL_124;
      v56 = &v70[v68 * (unint64_t)v41];
      v80 = &v71[v26];
      v81 = &v70[v68];
      v57 = &v71[v26 * (unint64_t)v41];
      while (--v41)
      {
        v62 = 0;
        v82 = *v80;
        v80 += v26;
        v83 = *v81;
        v81 += v68;
        if (v83 != v82)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
    v54 = 0;
    v55 = (v23 - 2) + 1;
    v56 = &v28[v55 * v93];
    v57 = &v34[v55 * v26];
LABEL_77:
    v58 = v22 - 1;
    v59 = v28;
    v60 = v34;
    while (*v59 == *v60)
    {
      v59 += v25;
      v60 += v27;
      if (!--v58)
      {
        if (*v59 != *v60)
          goto LABEL_124;
        v28 += v93;
        v34 += v26;
        if (++v54 != v41)
          goto LABEL_77;
        goto LABEL_107;
      }
    }
    goto LABEL_124;
  }
  v56 = v28;
  v57 = v34;
LABEL_107:
  if (v22 != 1)
  {
    v77 = (v22 - 2) + 1;
    v78 = &v56[v77 * v25];
    v79 = &v57[v77 * v27];
    while (*v56 == *v57)
    {
      v56 += v25;
      v57 += v27;
      if (!--v40)
      {
        v57 = v79;
        v56 = v78;
        goto LABEL_112;
      }
    }
    goto LABEL_124;
  }
LABEL_112:
  v61 = *v56 == *v57;
LABEL_85:
  v62 = v61;
LABEL_125:
  v88 = v94;
  v94 = 0;
  if (v88)
    (*(void (**)(uint64_t))(*(_QWORD *)v88 + 8))(v88);
  v89 = v95;
  v95 = 0;
  if (v89)
    (*(void (**)(uint64_t))(*(_QWORD *)v89 + 8))(v89);
  return v62;
}

void sub_2242EC9B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242ECA14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6E4A0;
  sub_2241F5BB4(a1, (uint64_t)&v15);
  v11 = &off_24EC6E4A0;
  sub_2241F5BB4(a2, (uint64_t)&v12);
  v3 = sub_2242ECB2C((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242ECAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F5A38((uint64_t)&a9);
  sub_2241F5A38((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242ECB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F5A38((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242ECB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int16 *v50;
  unsigned __int16 *v51;
  int v52;
  unsigned __int16 *v53;
  unsigned __int16 *v54;
  unsigned __int16 *v55;
  unsigned __int16 *v56;
  unsigned __int16 *v57;
  unsigned __int16 *v58;
  unsigned __int16 *v59;
  unsigned __int16 *v60;
  int v61;
  int v62;
  int v63;
  unsigned __int16 *v64;
  unsigned __int16 *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned __int16 *v71;
  unsigned __int16 *v72;
  int v73;
  unsigned __int16 *v74;
  unsigned __int16 *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(unsigned __int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(unsigned __int16 **)(a1 + 24);
    }
    v34 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(unsigned __int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 2 * v27;
        v44 = v25;
        v45 = 2 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (unsigned __int16 *)((char *)v75 + v44 * 2);
            v74 = (unsigned __int16 *)((char *)v74 + v46 * 2);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (unsigned __int16 *)((char *)v28 + v43);
                v34 = (unsigned __int16 *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v81;
          v49 = 2 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (unsigned __int16 *)((char *)v60 + v48);
            v59 = (unsigned __int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (unsigned __int16 *)((char *)v56 + v44 * 2);
              v55 = (unsigned __int16 *)((char *)v55 + v46 * 2);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (unsigned __int16 *)((char *)v57 + v48);
                  v58 = (unsigned __int16 *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (unsigned __int16 *)((char *)v28 + v43);
                    v34 = (unsigned __int16 *)((char *)v34 + v45);
                    ++v47;
                    v50 = (unsigned __int16 *)((char *)v50 + v43);
                    v51 = (unsigned __int16 *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242ED1C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242ED228(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6E598;
  sub_2241F6368(a1, (uint64_t)&v15);
  v11 = &off_24EC6E598;
  sub_2241F6368(a2, (uint64_t)&v12);
  v3 = sub_2242ED340((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242ED310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F61EC((uint64_t)&a9);
  sub_2241F61EC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242ED32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F61EC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242ED340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  __int16 *v50;
  __int16 *v51;
  int v52;
  __int16 *v53;
  __int16 *v54;
  __int16 *v55;
  __int16 *v56;
  __int16 *v57;
  __int16 *v58;
  __int16 *v59;
  __int16 *v60;
  int v61;
  int v73;
  int v82;
  __int16 *v83;
  __int16 *v84;
  int v85;
  uint64_t v95;
  uint64_t v96;
  int v97;
  __int16 *v98;
  __int16 *v99;
  int v100;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v135;
  __int16 *v136;
  __int16 *v137;
  __int16 *v138;
  __int16 *v139;
  uint64_t v148;
  __int16 *v149;
  __int16 *v150;
  __int16 *v151;
  __int16 *v152;
  uint64_t v157;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v167 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v167, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v166 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_115;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v166, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_115;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_115;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_115;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v26 = *(unsigned int *)(a2 + 48);
    v164 = *(unsigned int *)(a2 + 44);
    v165 = *(unsigned int *)(a1 + 44);
    v163 = *(unsigned int *)(a1 + 52);
    v27 = *(unsigned int *)(a2 + 52);
    v28 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(__int16 **)(a1 + 24);
    }
    v34 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(__int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 != 1)
      {
        v43 = 2 * v27;
        v44 = v26;
        v45 = 2 * v163;
        v46 = v25;
        if (v22 == 1)
        {
          v113 = 2 * (v23 - 2) + 2;
          v114 = v113 * v25;
          v115 = v113 * v26;
          while (1)
          {
            _H0 = *v28;
            _H1 = *v34;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v120 = v23 - 1;
            v121 = 2 * v25;
            v122 = 2 * v26;
            while (--v120)
            {
              v95 = 0;
              _H0 = *(__int16 *)((char *)v34 + v122);
              v122 += v44 * 2;
              _H1 = *(__int16 *)((char *)v28 + v121);
              v121 += v46 * 2;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              if (_S1 != _S0)
                goto LABEL_116;
            }
            _H0 = *(__int16 *)((char *)v28 + v114);
            _H1 = *(__int16 *)((char *)v34 + v115);
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v28 = (__int16 *)((char *)v28 + v45);
            v34 = (__int16 *)((char *)v34 + v43);
            if (++v40 == v42)
              goto LABEL_105;
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v165;
          v49 = 2 * v164;
          v50 = &v28[v46];
          v51 = &v34[v44];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (1)
          {
            _H0 = *v60;
            _H1 = *v59;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v60 = (__int16 *)((char *)v60 + v48);
            v59 = (__int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              _H0 = *v60;
              _H1 = *v59;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 != _S1)
                goto LABEL_115;
              v56 = (__int16 *)((char *)v56 + v46 * 2);
              v55 = (__int16 *)((char *)v55 + v44 * 2);
              ++v52;
              v54 = &v57[v46];
              v53 = &v58[v44];
              if (v52 == v41)
              {
                v73 = v22 - 1;
                while (1)
                {
                  _H0 = *v57;
                  _H1 = *v58;
                  __asm
                  {
                    FCVT            S1, H1
                    FCVT            S0, H0
                  }
                  if (_S0 != _S1)
                    goto LABEL_115;
                  v57 = (__int16 *)((char *)v57 + v48);
                  v58 = (__int16 *)((char *)v58 + v49);
                  if (!--v73)
                  {
                    _H0 = *v57;
                    _H1 = *v58;
                    __asm
                    {
                      FCVT            S1, H1
                      FCVT            S0, H0
                    }
                    if (_S0 != _S1)
                      goto LABEL_115;
                    v28 = (__int16 *)((char *)v28 + v45);
                    v34 = (__int16 *)((char *)v34 + v43);
                    ++v47;
                    v50 = (__int16 *)((char *)v50 + v45);
                    v51 = (__int16 *)((char *)v51 + v43);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
              }
              goto LABEL_63;
            }
          }
        }
        goto LABEL_115;
      }
      if (v22 != 1)
      {
        v97 = 0;
LABEL_88:
        v98 = v34;
        v99 = v28;
        v100 = v22 - 1;
        while (1)
        {
          _H0 = *v99;
          _H1 = *v98;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v99 += v165;
          v98 += v164;
          if (!--v100)
          {
            _H0 = *v99;
            _H1 = *v98;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v163;
            v34 += v27;
            if (++v97 != v42)
              goto LABEL_88;
            goto LABEL_93;
          }
        }
      }
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 == _S1)
      {
        v148 = 2 * (v24 - 2) + 2;
        v149 = (__int16 *)((char *)v28 + v148 * v163);
        v150 = (__int16 *)((char *)v34 + v148 * v27);
        v151 = &v34[v27];
        v152 = &v28[v163];
        v95 = 0;
        while (--v42)
        {
          _H0 = *v151;
          v151 += v27;
          _H1 = *v152;
          v152 += v163;
          __asm
          {
            FCVT            S0, H0
            FCVT            S1, H1
          }
          if (_S1 != _S0)
            goto LABEL_116;
        }
        v34 = v150;
        v28 = v149;
        goto LABEL_123;
      }
      goto LABEL_115;
    }
LABEL_73:
    if (v23 == 1)
    {
LABEL_93:
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          _H1 = *v34;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v28 += v165;
          v34 += v164;
        }
        while (--v40);
      }
    }
    else
    {
      if (v22 != 1)
      {
        v82 = 0;
LABEL_76:
        v83 = v34;
        v84 = v28;
        v85 = v22 - 1;
        while (1)
        {
          _H0 = *v84;
          _H1 = *v83;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v84 += v165;
          v83 += v164;
          if (!--v85)
          {
            _H0 = *v84;
            _H1 = *v83;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v25;
            v34 += v26;
            if (++v82 != v41)
              goto LABEL_76;
            goto LABEL_93;
          }
        }
      }
LABEL_105:
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 != _S1)
      {
LABEL_115:
        v95 = 0;
LABEL_116:
        v96 = v166;
        v166 = 0;
        if (v96)
          goto LABEL_117;
        goto LABEL_118;
      }
      v135 = 2 * (v23 - 2) + 2;
      v136 = (__int16 *)((char *)v28 + v135 * v25);
      v137 = (__int16 *)((char *)v34 + v135 * v26);
      v138 = &v34[v26];
      v139 = &v28[v25];
      v95 = 0;
      while (--v41)
      {
        _H0 = *v138;
        v138 += v26;
        _H1 = *v139;
        v139 += v25;
        __asm
        {
          FCVT            S0, H0
          FCVT            S1, H1
        }
        if (_S1 != _S0)
          goto LABEL_116;
      }
      v34 = v137;
      v28 = v136;
    }
LABEL_123:
    _H0 = *v28;
    _H1 = *v34;
    __asm
    {
      FCVT            S1, H1
      FCVT            S0, H0
    }
    _ZF = _S0 == _S1;
LABEL_124:
    v95 = _ZF;
    v96 = v166;
    v166 = 0;
    if (!v96)
      goto LABEL_118;
    goto LABEL_117;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    _ZF = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_124;
  }
  v95 = 1;
  v96 = v166;
  v166 = 0;
  if (v96)
LABEL_117:
    (*(void (**)(uint64_t))(*(_QWORD *)v96 + 8))(v96);
LABEL_118:
  v157 = v167;
  v167 = 0;
  if (v157)
    (*(void (**)(uint64_t))(*(_QWORD *)v157 + 8))(v157);
  return v95;
}

void sub_2242EDB04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242EDB68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6E690;
  sub_2241F6B1C(a1, (uint64_t)&v15);
  v11 = &off_24EC6E690;
  sub_2241F6B1C(a2, (uint64_t)&v12);
  v3 = sub_2242EDC80((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242EDC50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F69A0((uint64_t)&a9);
  sub_2241F69A0((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242EDC6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F69A0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242EDC80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  float *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  float *v50;
  float *v51;
  int v52;
  float *v53;
  float *v54;
  float *v55;
  float *v56;
  float *v57;
  float *v58;
  float *v59;
  float *v60;
  int v61;
  int v62;
  int v63;
  float *v64;
  float *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  float *v71;
  float *v72;
  int v73;
  float *v74;
  float *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(float **)(a1 + 24);
    }
    v34 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(float **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 4 * v27;
        v44 = v25;
        v45 = 4 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (float *)((char *)v75 + v44 * 4);
            v74 = (float *)((char *)v74 + v46 * 4);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (float *)((char *)v28 + v43);
                v34 = (float *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 4 * v81;
          v49 = 4 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (float *)((char *)v60 + v48);
            v59 = (float *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (float *)((char *)v56 + v44 * 4);
              v55 = (float *)((char *)v55 + v46 * 4);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (float *)((char *)v57 + v48);
                  v58 = (float *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (float *)((char *)v28 + v43);
                    v34 = (float *)((char *)v34 + v45);
                    ++v47;
                    v50 = (float *)((char *)v50 + v43);
                    v51 = (float *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242EE318(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242EE37C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC57DE8;
  sub_224166E5C(a1, (uint64_t)&v15);
  v11 = &off_24EC57DE8;
  sub_224166E5C(a2, (uint64_t)&v12);
  v3 = sub_2242EE494((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242EE464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2237031F4((uint64_t)&a9);
  sub_2237031F4((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242EE480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2237031F4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242EE494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  int v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  int v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  int v53;
  int v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  int v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  BOOL v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned __int8 *v79;
  unsigned __int8 *v80;
  unsigned __int8 *v81;
  int v82;
  int v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v95 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v95, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v94 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_124;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v94, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_124;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_124;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_124;
  if (!*(_DWORD *)(a1 + 56) || !*(_DWORD *)(a1 + 60))
  {
    if (!*(_DWORD *)(a2 + 56))
    {
      v62 = 1;
      goto LABEL_125;
    }
    v61 = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_85;
  }
  v25 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 44);
  v26 = *(unsigned int *)(a2 + 48);
  v92 = *(unsigned int *)(a1 + 52);
  v93 = *(unsigned int *)(a1 + 48);
  v91 = *(unsigned int *)(a2 + 52);
  v28 = *(unsigned __int8 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72) && v28)
  {
    v29 = *(_QWORD *)(a1 + 8);
    v30 = *(std::__shared_weak_count **)(a1 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v28 = *(unsigned __int8 **)(a1 + 24);
  }
  v34 = *(unsigned __int8 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v34)
  {
    v35 = *(_QWORD *)(a2 + 8);
    v36 = *(std::__shared_weak_count **)(a2 + 16);
    if (v36)
    {
      v37 = (unint64_t *)&v36->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v34 = *(unsigned __int8 **)(a2 + 24);
  }
  v40 = v22 - 1;
  v41 = v23 - 1;
  v42 = v24 - 1;
  if (v24 != 1)
  {
    if (v23 != 1)
    {
      v43 = 0;
      if (v22 == 1)
      {
        v68 = v93;
        v69 = (v24 - 2) + 1;
        v70 = &v28[v69 * v92];
        v71 = &v34[v69 * v91];
        while (*v28 == *v34)
        {
          v72 = v23 - 1;
          v73 = v93;
          v74 = v26;
          while (--v72)
          {
            v62 = 0;
            v75 = v34[v74];
            v74 += v26;
            v76 = v28[v73];
            v73 += v93;
            if (v76 != v75)
              goto LABEL_125;
          }
          if (v28[v93 * (unint64_t)v41] != v34[v26 * (unint64_t)v41])
            break;
          v28 += v92;
          v34 += v91;
          if (++v43 == v42)
            goto LABEL_114;
        }
      }
      else
      {
        v44 = (v24 - 2) + 1;
        v45 = &v28[v44 * v92];
        v46 = &v34[v44 * v91];
LABEL_62:
        v47 = 0;
        v48 = v34;
        v49 = v28;
LABEL_63:
        v50 = v22 - 1;
        v51 = v49;
        v52 = v48;
        while (*v51 == *v52)
        {
          v51 += v25;
          v52 += v27;
          if (!--v50)
          {
            if (*v51 != *v52)
              goto LABEL_124;
            v49 += v93;
            v48 += v26;
            if (++v47 == v41)
            {
              v53 = v22 - 1;
              while (*v49 == *v48)
              {
                v49 += v25;
                v48 += v27;
                if (!--v53)
                {
                  if (*v49 != *v48)
                    goto LABEL_124;
                  v28 += v92;
                  v34 += v91;
                  if (++v43 == v42)
                  {
                    v28 = v45;
                    v34 = v46;
                    goto LABEL_74;
                  }
                  goto LABEL_62;
                }
              }
              goto LABEL_124;
            }
            goto LABEL_63;
          }
        }
      }
      goto LABEL_124;
    }
    if (v22 != 1)
    {
      v63 = 0;
      v64 = (v24 - 2) + 1;
      v56 = &v28[v64 * v92];
      v57 = &v34[v64 * v91];
LABEL_91:
      v65 = v22 - 1;
      v66 = v28;
      v67 = v34;
      while (*v66 == *v67)
      {
        v66 += v25;
        v67 += v27;
        if (!--v65)
        {
          if (*v66 != *v67)
            goto LABEL_124;
          v28 += v92;
          v34 += v91;
          if (++v63 != v42)
            goto LABEL_91;
          goto LABEL_107;
        }
      }
      goto LABEL_124;
    }
    if (*v28 == *v34)
    {
      v56 = &v28[v92 * (unint64_t)v42];
      v84 = &v34[v91];
      v85 = &v28[v92];
      v57 = &v34[v91 * (unint64_t)v42];
      while (--v42)
      {
        v62 = 0;
        v86 = *v84;
        v84 += v91;
        v87 = *v85;
        v85 += v92;
        if (v87 != v86)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
LABEL_124:
    v62 = 0;
    goto LABEL_125;
  }
LABEL_74:
  if (v23 != 1)
  {
    if (v22 == 1)
    {
      v70 = v28;
      v71 = v34;
      v68 = v93;
LABEL_114:
      if (*v70 != *v71)
        goto LABEL_124;
      v56 = &v70[v68 * (unint64_t)v41];
      v80 = &v71[v26];
      v81 = &v70[v68];
      v57 = &v71[v26 * (unint64_t)v41];
      while (--v41)
      {
        v62 = 0;
        v82 = *v80;
        v80 += v26;
        v83 = *v81;
        v81 += v68;
        if (v83 != v82)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
    v54 = 0;
    v55 = (v23 - 2) + 1;
    v56 = &v28[v55 * v93];
    v57 = &v34[v55 * v26];
LABEL_77:
    v58 = v22 - 1;
    v59 = v28;
    v60 = v34;
    while (*v59 == *v60)
    {
      v59 += v25;
      v60 += v27;
      if (!--v58)
      {
        if (*v59 != *v60)
          goto LABEL_124;
        v28 += v93;
        v34 += v26;
        if (++v54 != v41)
          goto LABEL_77;
        goto LABEL_107;
      }
    }
    goto LABEL_124;
  }
  v56 = v28;
  v57 = v34;
LABEL_107:
  if (v22 != 1)
  {
    v77 = (v22 - 2) + 1;
    v78 = &v56[v77 * v25];
    v79 = &v57[v77 * v27];
    while (*v56 == *v57)
    {
      v56 += v25;
      v57 += v27;
      if (!--v40)
      {
        v57 = v79;
        v56 = v78;
        goto LABEL_112;
      }
    }
    goto LABEL_124;
  }
LABEL_112:
  v61 = *v56 == *v57;
LABEL_85:
  v62 = v61;
LABEL_125:
  v88 = v94;
  v94 = 0;
  if (v88)
    (*(void (**)(uint64_t))(*(_QWORD *)v88 + 8))(v88);
  v89 = v95;
  v95 = 0;
  if (v89)
    (*(void (**)(uint64_t))(*(_QWORD *)v89 + 8))(v89);
  return v62;
}

void sub_2242EEB80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242EEBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6E788;
  sub_2241F72D0(a1, (uint64_t)&v15);
  v11 = &off_24EC6E788;
  sub_2241F72D0(a2, (uint64_t)&v12);
  v3 = sub_2242EECFC((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242EECCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F7154((uint64_t)&a9);
  sub_2241F7154((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242EECE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F7154((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242EECFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int16 *v50;
  unsigned __int16 *v51;
  int v52;
  unsigned __int16 *v53;
  unsigned __int16 *v54;
  unsigned __int16 *v55;
  unsigned __int16 *v56;
  unsigned __int16 *v57;
  unsigned __int16 *v58;
  unsigned __int16 *v59;
  unsigned __int16 *v60;
  int v61;
  int v62;
  int v63;
  unsigned __int16 *v64;
  unsigned __int16 *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned __int16 *v71;
  unsigned __int16 *v72;
  int v73;
  unsigned __int16 *v74;
  unsigned __int16 *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(unsigned __int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(unsigned __int16 **)(a1 + 24);
    }
    v34 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(unsigned __int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 2 * v27;
        v44 = v25;
        v45 = 2 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (unsigned __int16 *)((char *)v75 + v44 * 2);
            v74 = (unsigned __int16 *)((char *)v74 + v46 * 2);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (unsigned __int16 *)((char *)v28 + v43);
                v34 = (unsigned __int16 *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v81;
          v49 = 2 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (unsigned __int16 *)((char *)v60 + v48);
            v59 = (unsigned __int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (unsigned __int16 *)((char *)v56 + v44 * 2);
              v55 = (unsigned __int16 *)((char *)v55 + v46 * 2);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (unsigned __int16 *)((char *)v57 + v48);
                  v58 = (unsigned __int16 *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (unsigned __int16 *)((char *)v28 + v43);
                    v34 = (unsigned __int16 *)((char *)v34 + v45);
                    ++v47;
                    v50 = (unsigned __int16 *)((char *)v50 + v43);
                    v51 = (unsigned __int16 *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242EF394(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242EF3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6E880;
  sub_2241F7A84(a1, (uint64_t)&v15);
  v11 = &off_24EC6E880;
  sub_2241F7A84(a2, (uint64_t)&v12);
  v3 = sub_2242EF510((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242EF4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F7908((uint64_t)&a9);
  sub_2241F7908((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242EF4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F7908((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242EF510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  __int16 *v50;
  __int16 *v51;
  int v52;
  __int16 *v53;
  __int16 *v54;
  __int16 *v55;
  __int16 *v56;
  __int16 *v57;
  __int16 *v58;
  __int16 *v59;
  __int16 *v60;
  int v61;
  int v73;
  int v82;
  __int16 *v83;
  __int16 *v84;
  int v85;
  uint64_t v95;
  uint64_t v96;
  int v97;
  __int16 *v98;
  __int16 *v99;
  int v100;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v135;
  __int16 *v136;
  __int16 *v137;
  __int16 *v138;
  __int16 *v139;
  uint64_t v148;
  __int16 *v149;
  __int16 *v150;
  __int16 *v151;
  __int16 *v152;
  uint64_t v157;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v167 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v167, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v166 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_115;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v166, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_115;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_115;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_115;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v26 = *(unsigned int *)(a2 + 48);
    v164 = *(unsigned int *)(a2 + 44);
    v165 = *(unsigned int *)(a1 + 44);
    v163 = *(unsigned int *)(a1 + 52);
    v27 = *(unsigned int *)(a2 + 52);
    v28 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(__int16 **)(a1 + 24);
    }
    v34 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(__int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 != 1)
      {
        v43 = 2 * v27;
        v44 = v26;
        v45 = 2 * v163;
        v46 = v25;
        if (v22 == 1)
        {
          v113 = 2 * (v23 - 2) + 2;
          v114 = v113 * v25;
          v115 = v113 * v26;
          while (1)
          {
            _H0 = *v28;
            _H1 = *v34;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v120 = v23 - 1;
            v121 = 2 * v25;
            v122 = 2 * v26;
            while (--v120)
            {
              v95 = 0;
              _H0 = *(__int16 *)((char *)v34 + v122);
              v122 += v44 * 2;
              _H1 = *(__int16 *)((char *)v28 + v121);
              v121 += v46 * 2;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              if (_S1 != _S0)
                goto LABEL_116;
            }
            _H0 = *(__int16 *)((char *)v28 + v114);
            _H1 = *(__int16 *)((char *)v34 + v115);
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v28 = (__int16 *)((char *)v28 + v45);
            v34 = (__int16 *)((char *)v34 + v43);
            if (++v40 == v42)
              goto LABEL_105;
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v165;
          v49 = 2 * v164;
          v50 = &v28[v46];
          v51 = &v34[v44];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (1)
          {
            _H0 = *v60;
            _H1 = *v59;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v60 = (__int16 *)((char *)v60 + v48);
            v59 = (__int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              _H0 = *v60;
              _H1 = *v59;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 != _S1)
                goto LABEL_115;
              v56 = (__int16 *)((char *)v56 + v46 * 2);
              v55 = (__int16 *)((char *)v55 + v44 * 2);
              ++v52;
              v54 = &v57[v46];
              v53 = &v58[v44];
              if (v52 == v41)
              {
                v73 = v22 - 1;
                while (1)
                {
                  _H0 = *v57;
                  _H1 = *v58;
                  __asm
                  {
                    FCVT            S1, H1
                    FCVT            S0, H0
                  }
                  if (_S0 != _S1)
                    goto LABEL_115;
                  v57 = (__int16 *)((char *)v57 + v48);
                  v58 = (__int16 *)((char *)v58 + v49);
                  if (!--v73)
                  {
                    _H0 = *v57;
                    _H1 = *v58;
                    __asm
                    {
                      FCVT            S1, H1
                      FCVT            S0, H0
                    }
                    if (_S0 != _S1)
                      goto LABEL_115;
                    v28 = (__int16 *)((char *)v28 + v45);
                    v34 = (__int16 *)((char *)v34 + v43);
                    ++v47;
                    v50 = (__int16 *)((char *)v50 + v45);
                    v51 = (__int16 *)((char *)v51 + v43);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
              }
              goto LABEL_63;
            }
          }
        }
        goto LABEL_115;
      }
      if (v22 != 1)
      {
        v97 = 0;
LABEL_88:
        v98 = v34;
        v99 = v28;
        v100 = v22 - 1;
        while (1)
        {
          _H0 = *v99;
          _H1 = *v98;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v99 += v165;
          v98 += v164;
          if (!--v100)
          {
            _H0 = *v99;
            _H1 = *v98;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v163;
            v34 += v27;
            if (++v97 != v42)
              goto LABEL_88;
            goto LABEL_93;
          }
        }
      }
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 == _S1)
      {
        v148 = 2 * (v24 - 2) + 2;
        v149 = (__int16 *)((char *)v28 + v148 * v163);
        v150 = (__int16 *)((char *)v34 + v148 * v27);
        v151 = &v34[v27];
        v152 = &v28[v163];
        v95 = 0;
        while (--v42)
        {
          _H0 = *v151;
          v151 += v27;
          _H1 = *v152;
          v152 += v163;
          __asm
          {
            FCVT            S0, H0
            FCVT            S1, H1
          }
          if (_S1 != _S0)
            goto LABEL_116;
        }
        v34 = v150;
        v28 = v149;
        goto LABEL_123;
      }
      goto LABEL_115;
    }
LABEL_73:
    if (v23 == 1)
    {
LABEL_93:
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          _H1 = *v34;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v28 += v165;
          v34 += v164;
        }
        while (--v40);
      }
    }
    else
    {
      if (v22 != 1)
      {
        v82 = 0;
LABEL_76:
        v83 = v34;
        v84 = v28;
        v85 = v22 - 1;
        while (1)
        {
          _H0 = *v84;
          _H1 = *v83;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v84 += v165;
          v83 += v164;
          if (!--v85)
          {
            _H0 = *v84;
            _H1 = *v83;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v25;
            v34 += v26;
            if (++v82 != v41)
              goto LABEL_76;
            goto LABEL_93;
          }
        }
      }
LABEL_105:
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 != _S1)
      {
LABEL_115:
        v95 = 0;
LABEL_116:
        v96 = v166;
        v166 = 0;
        if (v96)
          goto LABEL_117;
        goto LABEL_118;
      }
      v135 = 2 * (v23 - 2) + 2;
      v136 = (__int16 *)((char *)v28 + v135 * v25);
      v137 = (__int16 *)((char *)v34 + v135 * v26);
      v138 = &v34[v26];
      v139 = &v28[v25];
      v95 = 0;
      while (--v41)
      {
        _H0 = *v138;
        v138 += v26;
        _H1 = *v139;
        v139 += v25;
        __asm
        {
          FCVT            S0, H0
          FCVT            S1, H1
        }
        if (_S1 != _S0)
          goto LABEL_116;
      }
      v34 = v137;
      v28 = v136;
    }
LABEL_123:
    _H0 = *v28;
    _H1 = *v34;
    __asm
    {
      FCVT            S1, H1
      FCVT            S0, H0
    }
    _ZF = _S0 == _S1;
LABEL_124:
    v95 = _ZF;
    v96 = v166;
    v166 = 0;
    if (!v96)
      goto LABEL_118;
    goto LABEL_117;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    _ZF = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_124;
  }
  v95 = 1;
  v96 = v166;
  v166 = 0;
  if (v96)
LABEL_117:
    (*(void (**)(uint64_t))(*(_QWORD *)v96 + 8))(v96);
LABEL_118:
  v157 = v167;
  v167 = 0;
  if (v157)
    (*(void (**)(uint64_t))(*(_QWORD *)v157 + 8))(v157);
  return v95;
}

void sub_2242EFCD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242EFD38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC5A4F8;
  sub_2241F80BC(a1, (uint64_t)&v15);
  v11 = &off_24EC5A4F8;
  sub_2241F80BC(a2, (uint64_t)&v12);
  v3 = sub_2242EFE50((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242EFE20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2237F83D4((uint64_t)&a9);
  sub_2237F83D4((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242EFE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2237F83D4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242EFE50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  float *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  float *v50;
  float *v51;
  int v52;
  float *v53;
  float *v54;
  float *v55;
  float *v56;
  float *v57;
  float *v58;
  float *v59;
  float *v60;
  int v61;
  int v62;
  int v63;
  float *v64;
  float *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  float *v71;
  float *v72;
  int v73;
  float *v74;
  float *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(float **)(a1 + 24);
    }
    v34 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(float **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 4 * v27;
        v44 = v25;
        v45 = 4 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (float *)((char *)v75 + v44 * 4);
            v74 = (float *)((char *)v74 + v46 * 4);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (float *)((char *)v28 + v43);
                v34 = (float *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 4 * v81;
          v49 = 4 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (float *)((char *)v60 + v48);
            v59 = (float *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (float *)((char *)v56 + v44 * 4);
              v55 = (float *)((char *)v55 + v46 * 4);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (float *)((char *)v57 + v48);
                  v58 = (float *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (float *)((char *)v28 + v43);
                    v34 = (float *)((char *)v34 + v45);
                    ++v47;
                    v50 = (float *)((char *)v50 + v43);
                    v51 = (float *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242F04E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

BOOL sub_2242F054C(uint64_t a1, uint64_t a2)
{
  _BOOL8 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC28E38;
  sub_2241F86F4(a1, (uint64_t)&v15);
  v11 = &off_24EC28E38;
  sub_2241F86F4(a2, (uint64_t)&v12);
  v3 = sub_2242F0664((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F0634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2232CDB08((uint64_t)&a9);
  sub_2232CDB08((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F0650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2232CDB08((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2242F0664(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unsigned __int8 *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  char v53;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v45 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v44, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 == *(_DWORD *)(a2 + 32))
        goto LABEL_36;
LABEL_59:
      v39 = 0;
      goto LABEL_60;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v45, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v44 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_59;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_59;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_59;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v47 = v22 - 1;
    v25 = *(unsigned int *)(a1 + 48);
    v26 = *(unsigned int *)(a2 + 48);
    v48 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
    v46 = 0;
    v49 = v23 - 1;
    v50 = v25 | (v26 << 32);
    v51 = v24 - 1;
    v52 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
    v27 = *(unsigned __int8 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v27)
    {
      v28 = *(_QWORD *)(a1 + 8);
      v29 = *(std::__shared_weak_count **)(a1 + 16);
      if (v29)
      {
        v30 = (unint64_t *)&v29->__shared_owners_;
        do
          v31 = __ldxr(v30);
        while (__stxr(v31 + 1, v30));
        do
          v32 = __ldaxr(v30);
        while (__stlxr(v32 - 1, v30));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v28 + 88))(v28, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v27 = *(unsigned __int8 **)(a1 + 24);
    }
    v33 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v33)
    {
      v34 = *(_QWORD *)(a2 + 8);
      v35 = *(std::__shared_weak_count **)(a2 + 16);
      if (v35)
      {
        v36 = (unint64_t *)&v35->__shared_owners_;
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 1, v36));
        do
          v38 = __ldaxr(v36);
        while (__stlxr(v38 - 1, v36));
        if (!v38)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v34 + 88))(v34, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v33 = *(unsigned __int8 **)(a2 + 24);
    }
    v53 = 0;
    v39 = sub_223B8C2BC(&v46, (uint64_t)&v53, (uint64_t)&v43, v27, v33);
  }
  else if (*(_DWORD *)(a2 + 56))
  {
    v39 = *(_DWORD *)(a2 + 60) == 0;
  }
  else
  {
    v39 = 1;
  }
LABEL_60:
  v40 = v44;
  v44 = 0;
  if (v40)
    (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
  v41 = v45;
  v45 = 0;
  if (v41)
    (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
  return v39;
}

void sub_2242F0A40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;

  if (a11)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
    v13 = a12;
    if (!a12)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v13 = a12;
    if (!a12)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F0AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6E978;
  sub_2241F8BE8(a1, (uint64_t)&v15);
  v11 = &off_24EC6E978;
  sub_2241F8BE8(a2, (uint64_t)&v12);
  v3 = sub_2242F0BBC((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F0B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F8A6C((uint64_t)&a9);
  sub_2241F8A6C((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F0BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F8A6C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F0BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int16 *v50;
  unsigned __int16 *v51;
  int v52;
  unsigned __int16 *v53;
  unsigned __int16 *v54;
  unsigned __int16 *v55;
  unsigned __int16 *v56;
  unsigned __int16 *v57;
  unsigned __int16 *v58;
  unsigned __int16 *v59;
  unsigned __int16 *v60;
  int v61;
  int v62;
  int v63;
  unsigned __int16 *v64;
  unsigned __int16 *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned __int16 *v71;
  unsigned __int16 *v72;
  int v73;
  unsigned __int16 *v74;
  unsigned __int16 *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(unsigned __int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(unsigned __int16 **)(a1 + 24);
    }
    v34 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(unsigned __int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 2 * v27;
        v44 = v25;
        v45 = 2 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (unsigned __int16 *)((char *)v75 + v44 * 2);
            v74 = (unsigned __int16 *)((char *)v74 + v46 * 2);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (unsigned __int16 *)((char *)v28 + v43);
                v34 = (unsigned __int16 *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v81;
          v49 = 2 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (unsigned __int16 *)((char *)v60 + v48);
            v59 = (unsigned __int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (unsigned __int16 *)((char *)v56 + v44 * 2);
              v55 = (unsigned __int16 *)((char *)v55 + v46 * 2);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (unsigned __int16 *)((char *)v57 + v48);
                  v58 = (unsigned __int16 *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (unsigned __int16 *)((char *)v28 + v43);
                    v34 = (unsigned __int16 *)((char *)v34 + v45);
                    ++v47;
                    v50 = (unsigned __int16 *)((char *)v50 + v43);
                    v51 = (unsigned __int16 *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242F1254(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F12B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6EA70;
  sub_2241F939C(a1, (uint64_t)&v15);
  v11 = &off_24EC6EA70;
  sub_2241F939C(a2, (uint64_t)&v12);
  v3 = sub_2242F13D0((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F13A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241F9220((uint64_t)&a9);
  sub_2241F9220((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F13BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241F9220((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F13D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  __int16 *v50;
  __int16 *v51;
  int v52;
  __int16 *v53;
  __int16 *v54;
  __int16 *v55;
  __int16 *v56;
  __int16 *v57;
  __int16 *v58;
  __int16 *v59;
  __int16 *v60;
  int v61;
  int v73;
  int v82;
  __int16 *v83;
  __int16 *v84;
  int v85;
  uint64_t v95;
  uint64_t v96;
  int v97;
  __int16 *v98;
  __int16 *v99;
  int v100;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v135;
  __int16 *v136;
  __int16 *v137;
  __int16 *v138;
  __int16 *v139;
  uint64_t v148;
  __int16 *v149;
  __int16 *v150;
  __int16 *v151;
  __int16 *v152;
  uint64_t v157;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v167 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v167, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v166 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_115;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v166, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_115;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_115;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_115;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v26 = *(unsigned int *)(a2 + 48);
    v164 = *(unsigned int *)(a2 + 44);
    v165 = *(unsigned int *)(a1 + 44);
    v163 = *(unsigned int *)(a1 + 52);
    v27 = *(unsigned int *)(a2 + 52);
    v28 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(__int16 **)(a1 + 24);
    }
    v34 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(__int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 != 1)
      {
        v43 = 2 * v27;
        v44 = v26;
        v45 = 2 * v163;
        v46 = v25;
        if (v22 == 1)
        {
          v113 = 2 * (v23 - 2) + 2;
          v114 = v113 * v25;
          v115 = v113 * v26;
          while (1)
          {
            _H0 = *v28;
            _H1 = *v34;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v120 = v23 - 1;
            v121 = 2 * v25;
            v122 = 2 * v26;
            while (--v120)
            {
              v95 = 0;
              _H0 = *(__int16 *)((char *)v34 + v122);
              v122 += v44 * 2;
              _H1 = *(__int16 *)((char *)v28 + v121);
              v121 += v46 * 2;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              if (_S1 != _S0)
                goto LABEL_116;
            }
            _H0 = *(__int16 *)((char *)v28 + v114);
            _H1 = *(__int16 *)((char *)v34 + v115);
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v28 = (__int16 *)((char *)v28 + v45);
            v34 = (__int16 *)((char *)v34 + v43);
            if (++v40 == v42)
              goto LABEL_105;
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v165;
          v49 = 2 * v164;
          v50 = &v28[v46];
          v51 = &v34[v44];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (1)
          {
            _H0 = *v60;
            _H1 = *v59;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v60 = (__int16 *)((char *)v60 + v48);
            v59 = (__int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              _H0 = *v60;
              _H1 = *v59;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 != _S1)
                goto LABEL_115;
              v56 = (__int16 *)((char *)v56 + v46 * 2);
              v55 = (__int16 *)((char *)v55 + v44 * 2);
              ++v52;
              v54 = &v57[v46];
              v53 = &v58[v44];
              if (v52 == v41)
              {
                v73 = v22 - 1;
                while (1)
                {
                  _H0 = *v57;
                  _H1 = *v58;
                  __asm
                  {
                    FCVT            S1, H1
                    FCVT            S0, H0
                  }
                  if (_S0 != _S1)
                    goto LABEL_115;
                  v57 = (__int16 *)((char *)v57 + v48);
                  v58 = (__int16 *)((char *)v58 + v49);
                  if (!--v73)
                  {
                    _H0 = *v57;
                    _H1 = *v58;
                    __asm
                    {
                      FCVT            S1, H1
                      FCVT            S0, H0
                    }
                    if (_S0 != _S1)
                      goto LABEL_115;
                    v28 = (__int16 *)((char *)v28 + v45);
                    v34 = (__int16 *)((char *)v34 + v43);
                    ++v47;
                    v50 = (__int16 *)((char *)v50 + v45);
                    v51 = (__int16 *)((char *)v51 + v43);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
              }
              goto LABEL_63;
            }
          }
        }
        goto LABEL_115;
      }
      if (v22 != 1)
      {
        v97 = 0;
LABEL_88:
        v98 = v34;
        v99 = v28;
        v100 = v22 - 1;
        while (1)
        {
          _H0 = *v99;
          _H1 = *v98;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v99 += v165;
          v98 += v164;
          if (!--v100)
          {
            _H0 = *v99;
            _H1 = *v98;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v163;
            v34 += v27;
            if (++v97 != v42)
              goto LABEL_88;
            goto LABEL_93;
          }
        }
      }
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 == _S1)
      {
        v148 = 2 * (v24 - 2) + 2;
        v149 = (__int16 *)((char *)v28 + v148 * v163);
        v150 = (__int16 *)((char *)v34 + v148 * v27);
        v151 = &v34[v27];
        v152 = &v28[v163];
        v95 = 0;
        while (--v42)
        {
          _H0 = *v151;
          v151 += v27;
          _H1 = *v152;
          v152 += v163;
          __asm
          {
            FCVT            S0, H0
            FCVT            S1, H1
          }
          if (_S1 != _S0)
            goto LABEL_116;
        }
        v34 = v150;
        v28 = v149;
        goto LABEL_123;
      }
      goto LABEL_115;
    }
LABEL_73:
    if (v23 == 1)
    {
LABEL_93:
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          _H1 = *v34;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v28 += v165;
          v34 += v164;
        }
        while (--v40);
      }
    }
    else
    {
      if (v22 != 1)
      {
        v82 = 0;
LABEL_76:
        v83 = v34;
        v84 = v28;
        v85 = v22 - 1;
        while (1)
        {
          _H0 = *v84;
          _H1 = *v83;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v84 += v165;
          v83 += v164;
          if (!--v85)
          {
            _H0 = *v84;
            _H1 = *v83;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v25;
            v34 += v26;
            if (++v82 != v41)
              goto LABEL_76;
            goto LABEL_93;
          }
        }
      }
LABEL_105:
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 != _S1)
      {
LABEL_115:
        v95 = 0;
LABEL_116:
        v96 = v166;
        v166 = 0;
        if (v96)
          goto LABEL_117;
        goto LABEL_118;
      }
      v135 = 2 * (v23 - 2) + 2;
      v136 = (__int16 *)((char *)v28 + v135 * v25);
      v137 = (__int16 *)((char *)v34 + v135 * v26);
      v138 = &v34[v26];
      v139 = &v28[v25];
      v95 = 0;
      while (--v41)
      {
        _H0 = *v138;
        v138 += v26;
        _H1 = *v139;
        v139 += v25;
        __asm
        {
          FCVT            S0, H0
          FCVT            S1, H1
        }
        if (_S1 != _S0)
          goto LABEL_116;
      }
      v34 = v137;
      v28 = v136;
    }
LABEL_123:
    _H0 = *v28;
    _H1 = *v34;
    __asm
    {
      FCVT            S1, H1
      FCVT            S0, H0
    }
    _ZF = _S0 == _S1;
LABEL_124:
    v95 = _ZF;
    v96 = v166;
    v166 = 0;
    if (!v96)
      goto LABEL_118;
    goto LABEL_117;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    _ZF = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_124;
  }
  v95 = 1;
  v96 = v166;
  v166 = 0;
  if (v96)
LABEL_117:
    (*(void (**)(uint64_t))(*(_QWORD *)v96 + 8))(v96);
LABEL_118:
  v157 = v167;
  v167 = 0;
  if (v157)
    (*(void (**)(uint64_t))(*(_QWORD *)v157 + 8))(v157);
  return v95;
}

void sub_2242F1B94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F1BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC64C20;
  sub_2241F99D4(a1, (uint64_t)&v15);
  v11 = &off_24EC64C20;
  sub_2241F99D4(a2, (uint64_t)&v12);
  v3 = sub_2242F1D10((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F1CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_223FC3DDC((uint64_t)&a9);
  sub_223FC3DDC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F1CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_223FC3DDC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F1D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  float *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  float *v50;
  float *v51;
  int v52;
  float *v53;
  float *v54;
  float *v55;
  float *v56;
  float *v57;
  float *v58;
  float *v59;
  float *v60;
  int v61;
  int v62;
  int v63;
  float *v64;
  float *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  float *v71;
  float *v72;
  int v73;
  float *v74;
  float *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(float **)(a1 + 24);
    }
    v34 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(float **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 4 * v27;
        v44 = v25;
        v45 = 4 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (float *)((char *)v75 + v44 * 4);
            v74 = (float *)((char *)v74 + v46 * 4);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (float *)((char *)v28 + v43);
                v34 = (float *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 4 * v81;
          v49 = 4 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (float *)((char *)v60 + v48);
            v59 = (float *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (float *)((char *)v56 + v44 * 4);
              v55 = (float *)((char *)v55 + v46 * 4);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (float *)((char *)v57 + v48);
                  v58 = (float *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (float *)((char *)v28 + v43);
                    v34 = (float *)((char *)v34 + v45);
                    ++v47;
                    v50 = (float *)((char *)v50 + v43);
                    v51 = (float *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242F23A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F240C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC63580;
  sub_2241FA00C(a1, (uint64_t)&v15);
  v11 = &off_24EC63580;
  sub_2241FA00C(a2, (uint64_t)&v12);
  v3 = sub_2242F2524((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F24F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_223CDC734((uint64_t)&a9);
  sub_223CDC734((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F2510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_223CDC734((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F2524(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  int v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  int v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  int v53;
  int v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  int v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  BOOL v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned __int8 *v79;
  unsigned __int8 *v80;
  unsigned __int8 *v81;
  int v82;
  int v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v95 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v95, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v94 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_124;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v94, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_124;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_124;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_124;
  if (!*(_DWORD *)(a1 + 56) || !*(_DWORD *)(a1 + 60))
  {
    if (!*(_DWORD *)(a2 + 56))
    {
      v62 = 1;
      goto LABEL_125;
    }
    v61 = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_85;
  }
  v25 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 44);
  v26 = *(unsigned int *)(a2 + 48);
  v92 = *(unsigned int *)(a1 + 52);
  v93 = *(unsigned int *)(a1 + 48);
  v91 = *(unsigned int *)(a2 + 52);
  v28 = *(unsigned __int8 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72) && v28)
  {
    v29 = *(_QWORD *)(a1 + 8);
    v30 = *(std::__shared_weak_count **)(a1 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v28 = *(unsigned __int8 **)(a1 + 24);
  }
  v34 = *(unsigned __int8 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v34)
  {
    v35 = *(_QWORD *)(a2 + 8);
    v36 = *(std::__shared_weak_count **)(a2 + 16);
    if (v36)
    {
      v37 = (unint64_t *)&v36->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v34 = *(unsigned __int8 **)(a2 + 24);
  }
  v40 = v22 - 1;
  v41 = v23 - 1;
  v42 = v24 - 1;
  if (v24 != 1)
  {
    if (v23 != 1)
    {
      v43 = 0;
      if (v22 == 1)
      {
        v68 = v93;
        v69 = (v24 - 2) + 1;
        v70 = &v28[v69 * v92];
        v71 = &v34[v69 * v91];
        while (*v28 == *v34)
        {
          v72 = v23 - 1;
          v73 = v93;
          v74 = v26;
          while (--v72)
          {
            v62 = 0;
            v75 = v34[v74];
            v74 += v26;
            v76 = v28[v73];
            v73 += v93;
            if (v76 != v75)
              goto LABEL_125;
          }
          if (v28[v93 * (unint64_t)v41] != v34[v26 * (unint64_t)v41])
            break;
          v28 += v92;
          v34 += v91;
          if (++v43 == v42)
            goto LABEL_114;
        }
      }
      else
      {
        v44 = (v24 - 2) + 1;
        v45 = &v28[v44 * v92];
        v46 = &v34[v44 * v91];
LABEL_62:
        v47 = 0;
        v48 = v34;
        v49 = v28;
LABEL_63:
        v50 = v22 - 1;
        v51 = v49;
        v52 = v48;
        while (*v51 == *v52)
        {
          v51 += v25;
          v52 += v27;
          if (!--v50)
          {
            if (*v51 != *v52)
              goto LABEL_124;
            v49 += v93;
            v48 += v26;
            if (++v47 == v41)
            {
              v53 = v22 - 1;
              while (*v49 == *v48)
              {
                v49 += v25;
                v48 += v27;
                if (!--v53)
                {
                  if (*v49 != *v48)
                    goto LABEL_124;
                  v28 += v92;
                  v34 += v91;
                  if (++v43 == v42)
                  {
                    v28 = v45;
                    v34 = v46;
                    goto LABEL_74;
                  }
                  goto LABEL_62;
                }
              }
              goto LABEL_124;
            }
            goto LABEL_63;
          }
        }
      }
      goto LABEL_124;
    }
    if (v22 != 1)
    {
      v63 = 0;
      v64 = (v24 - 2) + 1;
      v56 = &v28[v64 * v92];
      v57 = &v34[v64 * v91];
LABEL_91:
      v65 = v22 - 1;
      v66 = v28;
      v67 = v34;
      while (*v66 == *v67)
      {
        v66 += v25;
        v67 += v27;
        if (!--v65)
        {
          if (*v66 != *v67)
            goto LABEL_124;
          v28 += v92;
          v34 += v91;
          if (++v63 != v42)
            goto LABEL_91;
          goto LABEL_107;
        }
      }
      goto LABEL_124;
    }
    if (*v28 == *v34)
    {
      v56 = &v28[v92 * (unint64_t)v42];
      v84 = &v34[v91];
      v85 = &v28[v92];
      v57 = &v34[v91 * (unint64_t)v42];
      while (--v42)
      {
        v62 = 0;
        v86 = *v84;
        v84 += v91;
        v87 = *v85;
        v85 += v92;
        if (v87 != v86)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
LABEL_124:
    v62 = 0;
    goto LABEL_125;
  }
LABEL_74:
  if (v23 != 1)
  {
    if (v22 == 1)
    {
      v70 = v28;
      v71 = v34;
      v68 = v93;
LABEL_114:
      if (*v70 != *v71)
        goto LABEL_124;
      v56 = &v70[v68 * (unint64_t)v41];
      v80 = &v71[v26];
      v81 = &v70[v68];
      v57 = &v71[v26 * (unint64_t)v41];
      while (--v41)
      {
        v62 = 0;
        v82 = *v80;
        v80 += v26;
        v83 = *v81;
        v81 += v68;
        if (v83 != v82)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
    v54 = 0;
    v55 = (v23 - 2) + 1;
    v56 = &v28[v55 * v93];
    v57 = &v34[v55 * v26];
LABEL_77:
    v58 = v22 - 1;
    v59 = v28;
    v60 = v34;
    while (*v59 == *v60)
    {
      v59 += v25;
      v60 += v27;
      if (!--v58)
      {
        if (*v59 != *v60)
          goto LABEL_124;
        v28 += v93;
        v34 += v26;
        if (++v54 != v41)
          goto LABEL_77;
        goto LABEL_107;
      }
    }
    goto LABEL_124;
  }
  v56 = v28;
  v57 = v34;
LABEL_107:
  if (v22 != 1)
  {
    v77 = (v22 - 2) + 1;
    v78 = &v56[v77 * v25];
    v79 = &v57[v77 * v27];
    while (*v56 == *v57)
    {
      v56 += v25;
      v57 += v27;
      if (!--v40)
      {
        v57 = v79;
        v56 = v78;
        goto LABEL_112;
      }
    }
    goto LABEL_124;
  }
LABEL_112:
  v61 = *v56 == *v57;
LABEL_85:
  v62 = v61;
LABEL_125:
  v88 = v94;
  v94 = 0;
  if (v88)
    (*(void (**)(uint64_t))(*(_QWORD *)v88 + 8))(v88);
  v89 = v95;
  v95 = 0;
  if (v89)
    (*(void (**)(uint64_t))(*(_QWORD *)v89 + 8))(v89);
  return v62;
}

void sub_2242F2C10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F2C74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC201A0;
  sub_2231A40A4(a1, (uint64_t)&v15);
  v11 = &off_24EC201A0;
  sub_2231A40A4(a2, (uint64_t)&v12);
  v3 = sub_2242F2D8C((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F2D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_22319F590((uint64_t)&a9);
  sub_22319F590((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F2D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_22319F590((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F2D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int16 *v50;
  unsigned __int16 *v51;
  int v52;
  unsigned __int16 *v53;
  unsigned __int16 *v54;
  unsigned __int16 *v55;
  unsigned __int16 *v56;
  unsigned __int16 *v57;
  unsigned __int16 *v58;
  unsigned __int16 *v59;
  unsigned __int16 *v60;
  int v61;
  int v62;
  int v63;
  unsigned __int16 *v64;
  unsigned __int16 *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned __int16 *v71;
  unsigned __int16 *v72;
  int v73;
  unsigned __int16 *v74;
  unsigned __int16 *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(unsigned __int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(unsigned __int16 **)(a1 + 24);
    }
    v34 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(unsigned __int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 2 * v27;
        v44 = v25;
        v45 = 2 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (unsigned __int16 *)((char *)v75 + v44 * 2);
            v74 = (unsigned __int16 *)((char *)v74 + v46 * 2);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (unsigned __int16 *)((char *)v28 + v43);
                v34 = (unsigned __int16 *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v81;
          v49 = 2 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (unsigned __int16 *)((char *)v60 + v48);
            v59 = (unsigned __int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (unsigned __int16 *)((char *)v56 + v44 * 2);
              v55 = (unsigned __int16 *)((char *)v55 + v46 * 2);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (unsigned __int16 *)((char *)v57 + v48);
                  v58 = (unsigned __int16 *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (unsigned __int16 *)((char *)v28 + v43);
                    v34 = (unsigned __int16 *)((char *)v34 + v45);
                    ++v47;
                    v50 = (unsigned __int16 *)((char *)v50 + v43);
                    v51 = (unsigned __int16 *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242F3424(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

BOOL sub_2242F3488(uint64_t a1, uint64_t a2)
{
  _BOOL8 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC25150;
  sub_2241FA640(a1, (uint64_t)&v15);
  v11 = &off_24EC25150;
  sub_2241FA640(a2, (uint64_t)&v12);
  v3 = sub_2242F35A0((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F3570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2231D4840((uint64_t)&a9);
  sub_2231D4840((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F358C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2231D4840((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2242F35A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  __int16 *v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  __int16 *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  char v53;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v45 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v44, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 == *(_DWORD *)(a2 + 32))
        goto LABEL_36;
LABEL_59:
      v39 = 0;
      goto LABEL_60;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v45, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v44 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_59;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_59;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_59;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v47 = v22 - 1;
    v25 = *(unsigned int *)(a1 + 48);
    v26 = *(unsigned int *)(a2 + 48);
    v48 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
    v46 = 0;
    v49 = v23 - 1;
    v50 = v25 | (v26 << 32);
    v51 = v24 - 1;
    v52 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
    v27 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v27)
    {
      v28 = *(_QWORD *)(a1 + 8);
      v29 = *(std::__shared_weak_count **)(a1 + 16);
      if (v29)
      {
        v30 = (unint64_t *)&v29->__shared_owners_;
        do
          v31 = __ldxr(v30);
        while (__stxr(v31 + 1, v30));
        do
          v32 = __ldaxr(v30);
        while (__stlxr(v32 - 1, v30));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v28 + 88))(v28, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v27 = *(__int16 **)(a1 + 24);
    }
    v33 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v33)
    {
      v34 = *(_QWORD *)(a2 + 8);
      v35 = *(std::__shared_weak_count **)(a2 + 16);
      if (v35)
      {
        v36 = (unint64_t *)&v35->__shared_owners_;
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 1, v36));
        do
          v38 = __ldaxr(v36);
        while (__stlxr(v38 - 1, v36));
        if (!v38)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v34 + 88))(v34, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v33 = *(__int16 **)(a2 + 24);
    }
    v53 = 0;
    v39 = sub_223B8AD90(&v46, (uint64_t)&v53, (uint64_t)&v43, v27, v33);
  }
  else if (*(_DWORD *)(a2 + 56))
  {
    v39 = *(_DWORD *)(a2 + 60) == 0;
  }
  else
  {
    v39 = 1;
  }
LABEL_60:
  v40 = v44;
  v44 = 0;
  if (v40)
    (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
  v41 = v45;
  v45 = 0;
  if (v41)
    (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
  return v39;
}

void sub_2242F397C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;

  if (a11)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
    v13 = a12;
    if (!a12)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v13 = a12;
    if (!a12)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  _Unwind_Resume(exception_object);
}

BOOL sub_2242F39E0(uint64_t a1, uint64_t a2)
{
  _BOOL8 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC21DF8;
  sub_223C9E064(a1, (uint64_t)&v15);
  v11 = &off_24EC21DF8;
  sub_223C9E064(a2, (uint64_t)&v12);
  v3 = sub_2242F3AF8((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F3AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2231CE1A0((uint64_t)&a9);
  sub_2231CE1A0((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F3AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2231CE1A0((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2242F3AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  float *v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  float *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  char v53;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v45 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v44, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 == *(_DWORD *)(a2 + 32))
        goto LABEL_36;
LABEL_59:
      v39 = 0;
      goto LABEL_60;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v45, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v44 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_59;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_59;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_59;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v47 = v22 - 1;
    v25 = *(unsigned int *)(a1 + 48);
    v26 = *(unsigned int *)(a2 + 48);
    v48 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
    v46 = 0;
    v49 = v23 - 1;
    v50 = v25 | (v26 << 32);
    v51 = v24 - 1;
    v52 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
    v27 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v27)
    {
      v28 = *(_QWORD *)(a1 + 8);
      v29 = *(std::__shared_weak_count **)(a1 + 16);
      if (v29)
      {
        v30 = (unint64_t *)&v29->__shared_owners_;
        do
          v31 = __ldxr(v30);
        while (__stxr(v31 + 1, v30));
        do
          v32 = __ldaxr(v30);
        while (__stlxr(v32 - 1, v30));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v28 + 88))(v28, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v27 = *(float **)(a1 + 24);
    }
    v33 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v33)
    {
      v34 = *(_QWORD *)(a2 + 8);
      v35 = *(std::__shared_weak_count **)(a2 + 16);
      if (v35)
      {
        v36 = (unint64_t *)&v35->__shared_owners_;
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 1, v36));
        do
          v38 = __ldaxr(v36);
        while (__stlxr(v38 - 1, v36));
        if (!v38)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v34 + 88))(v34, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v33 = *(float **)(a2 + 24);
    }
    v53 = 0;
    v39 = sub_223B8B634(&v46, (uint64_t)&v53, (uint64_t)&v43, v27, v33);
  }
  else if (*(_DWORD *)(a2 + 56))
  {
    v39 = *(_DWORD *)(a2 + 60) == 0;
  }
  else
  {
    v39 = 1;
  }
LABEL_60:
  v40 = v44;
  v44 = 0;
  if (v40)
    (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
  v41 = v45;
  v45 = 0;
  if (v41)
    (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
  return v39;
}

void sub_2242F3ED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;

  if (a11)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
    v13 = a12;
    if (!a12)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v13 = a12;
    if (!a12)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F3F38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6EB68;
  sub_2241FAB34(a1, (uint64_t)&v15);
  v11 = &off_24EC6EB68;
  sub_2241FAB34(a2, (uint64_t)&v12);
  v3 = sub_2242F4050((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F4020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241FA9BC((uint64_t)&a9);
  sub_2241FA9BC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F403C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241FA9BC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F4050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  int v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  int v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  int v53;
  int v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  int v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  BOOL v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned __int8 *v79;
  unsigned __int8 *v80;
  unsigned __int8 *v81;
  int v82;
  int v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v95 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v95, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v94 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_124;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v94, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_124;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_124;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_124;
  if (!*(_DWORD *)(a1 + 56) || !*(_DWORD *)(a1 + 60))
  {
    if (!*(_DWORD *)(a2 + 56))
    {
      v62 = 1;
      goto LABEL_125;
    }
    v61 = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_85;
  }
  v25 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 44);
  v26 = *(unsigned int *)(a2 + 48);
  v92 = *(unsigned int *)(a1 + 52);
  v93 = *(unsigned int *)(a1 + 48);
  v91 = *(unsigned int *)(a2 + 52);
  v28 = *(unsigned __int8 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72) && v28)
  {
    v29 = *(_QWORD *)(a1 + 8);
    v30 = *(std::__shared_weak_count **)(a1 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v28 = *(unsigned __int8 **)(a1 + 24);
  }
  v34 = *(unsigned __int8 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v34)
  {
    v35 = *(_QWORD *)(a2 + 8);
    v36 = *(std::__shared_weak_count **)(a2 + 16);
    if (v36)
    {
      v37 = (unint64_t *)&v36->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v34 = *(unsigned __int8 **)(a2 + 24);
  }
  v40 = v22 - 1;
  v41 = v23 - 1;
  v42 = v24 - 1;
  if (v24 != 1)
  {
    if (v23 != 1)
    {
      v43 = 0;
      if (v22 == 1)
      {
        v68 = v93;
        v69 = (v24 - 2) + 1;
        v70 = &v28[v69 * v92];
        v71 = &v34[v69 * v91];
        while (*v28 == *v34)
        {
          v72 = v23 - 1;
          v73 = v93;
          v74 = v26;
          while (--v72)
          {
            v62 = 0;
            v75 = v34[v74];
            v74 += v26;
            v76 = v28[v73];
            v73 += v93;
            if (v76 != v75)
              goto LABEL_125;
          }
          if (v28[v93 * (unint64_t)v41] != v34[v26 * (unint64_t)v41])
            break;
          v28 += v92;
          v34 += v91;
          if (++v43 == v42)
            goto LABEL_114;
        }
      }
      else
      {
        v44 = (v24 - 2) + 1;
        v45 = &v28[v44 * v92];
        v46 = &v34[v44 * v91];
LABEL_62:
        v47 = 0;
        v48 = v34;
        v49 = v28;
LABEL_63:
        v50 = v22 - 1;
        v51 = v49;
        v52 = v48;
        while (*v51 == *v52)
        {
          v51 += v25;
          v52 += v27;
          if (!--v50)
          {
            if (*v51 != *v52)
              goto LABEL_124;
            v49 += v93;
            v48 += v26;
            if (++v47 == v41)
            {
              v53 = v22 - 1;
              while (*v49 == *v48)
              {
                v49 += v25;
                v48 += v27;
                if (!--v53)
                {
                  if (*v49 != *v48)
                    goto LABEL_124;
                  v28 += v92;
                  v34 += v91;
                  if (++v43 == v42)
                  {
                    v28 = v45;
                    v34 = v46;
                    goto LABEL_74;
                  }
                  goto LABEL_62;
                }
              }
              goto LABEL_124;
            }
            goto LABEL_63;
          }
        }
      }
      goto LABEL_124;
    }
    if (v22 != 1)
    {
      v63 = 0;
      v64 = (v24 - 2) + 1;
      v56 = &v28[v64 * v92];
      v57 = &v34[v64 * v91];
LABEL_91:
      v65 = v22 - 1;
      v66 = v28;
      v67 = v34;
      while (*v66 == *v67)
      {
        v66 += v25;
        v67 += v27;
        if (!--v65)
        {
          if (*v66 != *v67)
            goto LABEL_124;
          v28 += v92;
          v34 += v91;
          if (++v63 != v42)
            goto LABEL_91;
          goto LABEL_107;
        }
      }
      goto LABEL_124;
    }
    if (*v28 == *v34)
    {
      v56 = &v28[v92 * (unint64_t)v42];
      v84 = &v34[v91];
      v85 = &v28[v92];
      v57 = &v34[v91 * (unint64_t)v42];
      while (--v42)
      {
        v62 = 0;
        v86 = *v84;
        v84 += v91;
        v87 = *v85;
        v85 += v92;
        if (v87 != v86)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
LABEL_124:
    v62 = 0;
    goto LABEL_125;
  }
LABEL_74:
  if (v23 != 1)
  {
    if (v22 == 1)
    {
      v70 = v28;
      v71 = v34;
      v68 = v93;
LABEL_114:
      if (*v70 != *v71)
        goto LABEL_124;
      v56 = &v70[v68 * (unint64_t)v41];
      v80 = &v71[v26];
      v81 = &v70[v68];
      v57 = &v71[v26 * (unint64_t)v41];
      while (--v41)
      {
        v62 = 0;
        v82 = *v80;
        v80 += v26;
        v83 = *v81;
        v81 += v68;
        if (v83 != v82)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
    v54 = 0;
    v55 = (v23 - 2) + 1;
    v56 = &v28[v55 * v93];
    v57 = &v34[v55 * v26];
LABEL_77:
    v58 = v22 - 1;
    v59 = v28;
    v60 = v34;
    while (*v59 == *v60)
    {
      v59 += v25;
      v60 += v27;
      if (!--v58)
      {
        if (*v59 != *v60)
          goto LABEL_124;
        v28 += v93;
        v34 += v26;
        if (++v54 != v41)
          goto LABEL_77;
        goto LABEL_107;
      }
    }
    goto LABEL_124;
  }
  v56 = v28;
  v57 = v34;
LABEL_107:
  if (v22 != 1)
  {
    v77 = (v22 - 2) + 1;
    v78 = &v56[v77 * v25];
    v79 = &v57[v77 * v27];
    while (*v56 == *v57)
    {
      v56 += v25;
      v57 += v27;
      if (!--v40)
      {
        v57 = v79;
        v56 = v78;
        goto LABEL_112;
      }
    }
    goto LABEL_124;
  }
LABEL_112:
  v61 = *v56 == *v57;
LABEL_85:
  v62 = v61;
LABEL_125:
  v88 = v94;
  v94 = 0;
  if (v88)
    (*(void (**)(uint64_t))(*(_QWORD *)v88 + 8))(v88);
  v89 = v95;
  v95 = 0;
  if (v89)
    (*(void (**)(uint64_t))(*(_QWORD *)v89 + 8))(v89);
  return v62;
}

void sub_2242F473C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F47A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6EC60;
  sub_2241FB2E4(a1, (uint64_t)&v15);
  v11 = &off_24EC6EC60;
  sub_2241FB2E4(a2, (uint64_t)&v12);
  v3 = sub_2242F48B8((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F4888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241FB168((uint64_t)&a9);
  sub_2241FB168((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F48A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241FB168((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F48B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int16 *v50;
  unsigned __int16 *v51;
  int v52;
  unsigned __int16 *v53;
  unsigned __int16 *v54;
  unsigned __int16 *v55;
  unsigned __int16 *v56;
  unsigned __int16 *v57;
  unsigned __int16 *v58;
  unsigned __int16 *v59;
  unsigned __int16 *v60;
  int v61;
  int v62;
  int v63;
  unsigned __int16 *v64;
  unsigned __int16 *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned __int16 *v71;
  unsigned __int16 *v72;
  int v73;
  unsigned __int16 *v74;
  unsigned __int16 *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(unsigned __int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(unsigned __int16 **)(a1 + 24);
    }
    v34 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(unsigned __int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 2 * v27;
        v44 = v25;
        v45 = 2 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (unsigned __int16 *)((char *)v75 + v44 * 2);
            v74 = (unsigned __int16 *)((char *)v74 + v46 * 2);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (unsigned __int16 *)((char *)v28 + v43);
                v34 = (unsigned __int16 *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v81;
          v49 = 2 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (unsigned __int16 *)((char *)v60 + v48);
            v59 = (unsigned __int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (unsigned __int16 *)((char *)v56 + v44 * 2);
              v55 = (unsigned __int16 *)((char *)v55 + v46 * 2);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (unsigned __int16 *)((char *)v57 + v48);
                  v58 = (unsigned __int16 *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (unsigned __int16 *)((char *)v28 + v43);
                    v34 = (unsigned __int16 *)((char *)v34 + v45);
                    ++v47;
                    v50 = (unsigned __int16 *)((char *)v50 + v43);
                    v51 = (unsigned __int16 *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242F4F50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F4FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6ED58;
  sub_2241FBA98(a1, (uint64_t)&v15);
  v11 = &off_24EC6ED58;
  sub_2241FBA98(a2, (uint64_t)&v12);
  v3 = sub_2242F50CC((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F509C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241FB91C((uint64_t)&a9);
  sub_2241FB91C((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F50B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241FB91C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F50CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  __int16 *v50;
  __int16 *v51;
  int v52;
  __int16 *v53;
  __int16 *v54;
  __int16 *v55;
  __int16 *v56;
  __int16 *v57;
  __int16 *v58;
  __int16 *v59;
  __int16 *v60;
  int v61;
  int v73;
  int v82;
  __int16 *v83;
  __int16 *v84;
  int v85;
  uint64_t v95;
  uint64_t v96;
  int v97;
  __int16 *v98;
  __int16 *v99;
  int v100;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v135;
  __int16 *v136;
  __int16 *v137;
  __int16 *v138;
  __int16 *v139;
  uint64_t v148;
  __int16 *v149;
  __int16 *v150;
  __int16 *v151;
  __int16 *v152;
  uint64_t v157;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v167 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v167, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v166 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_115;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v166, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_115;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_115;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_115;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v26 = *(unsigned int *)(a2 + 48);
    v164 = *(unsigned int *)(a2 + 44);
    v165 = *(unsigned int *)(a1 + 44);
    v163 = *(unsigned int *)(a1 + 52);
    v27 = *(unsigned int *)(a2 + 52);
    v28 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(__int16 **)(a1 + 24);
    }
    v34 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(__int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 != 1)
      {
        v43 = 2 * v27;
        v44 = v26;
        v45 = 2 * v163;
        v46 = v25;
        if (v22 == 1)
        {
          v113 = 2 * (v23 - 2) + 2;
          v114 = v113 * v25;
          v115 = v113 * v26;
          while (1)
          {
            _H0 = *v28;
            _H1 = *v34;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v120 = v23 - 1;
            v121 = 2 * v25;
            v122 = 2 * v26;
            while (--v120)
            {
              v95 = 0;
              _H0 = *(__int16 *)((char *)v34 + v122);
              v122 += v44 * 2;
              _H1 = *(__int16 *)((char *)v28 + v121);
              v121 += v46 * 2;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              if (_S1 != _S0)
                goto LABEL_116;
            }
            _H0 = *(__int16 *)((char *)v28 + v114);
            _H1 = *(__int16 *)((char *)v34 + v115);
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v28 = (__int16 *)((char *)v28 + v45);
            v34 = (__int16 *)((char *)v34 + v43);
            if (++v40 == v42)
              goto LABEL_105;
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v165;
          v49 = 2 * v164;
          v50 = &v28[v46];
          v51 = &v34[v44];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (1)
          {
            _H0 = *v60;
            _H1 = *v59;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v60 = (__int16 *)((char *)v60 + v48);
            v59 = (__int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              _H0 = *v60;
              _H1 = *v59;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 != _S1)
                goto LABEL_115;
              v56 = (__int16 *)((char *)v56 + v46 * 2);
              v55 = (__int16 *)((char *)v55 + v44 * 2);
              ++v52;
              v54 = &v57[v46];
              v53 = &v58[v44];
              if (v52 == v41)
              {
                v73 = v22 - 1;
                while (1)
                {
                  _H0 = *v57;
                  _H1 = *v58;
                  __asm
                  {
                    FCVT            S1, H1
                    FCVT            S0, H0
                  }
                  if (_S0 != _S1)
                    goto LABEL_115;
                  v57 = (__int16 *)((char *)v57 + v48);
                  v58 = (__int16 *)((char *)v58 + v49);
                  if (!--v73)
                  {
                    _H0 = *v57;
                    _H1 = *v58;
                    __asm
                    {
                      FCVT            S1, H1
                      FCVT            S0, H0
                    }
                    if (_S0 != _S1)
                      goto LABEL_115;
                    v28 = (__int16 *)((char *)v28 + v45);
                    v34 = (__int16 *)((char *)v34 + v43);
                    ++v47;
                    v50 = (__int16 *)((char *)v50 + v45);
                    v51 = (__int16 *)((char *)v51 + v43);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
              }
              goto LABEL_63;
            }
          }
        }
        goto LABEL_115;
      }
      if (v22 != 1)
      {
        v97 = 0;
LABEL_88:
        v98 = v34;
        v99 = v28;
        v100 = v22 - 1;
        while (1)
        {
          _H0 = *v99;
          _H1 = *v98;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v99 += v165;
          v98 += v164;
          if (!--v100)
          {
            _H0 = *v99;
            _H1 = *v98;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v163;
            v34 += v27;
            if (++v97 != v42)
              goto LABEL_88;
            goto LABEL_93;
          }
        }
      }
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 == _S1)
      {
        v148 = 2 * (v24 - 2) + 2;
        v149 = (__int16 *)((char *)v28 + v148 * v163);
        v150 = (__int16 *)((char *)v34 + v148 * v27);
        v151 = &v34[v27];
        v152 = &v28[v163];
        v95 = 0;
        while (--v42)
        {
          _H0 = *v151;
          v151 += v27;
          _H1 = *v152;
          v152 += v163;
          __asm
          {
            FCVT            S0, H0
            FCVT            S1, H1
          }
          if (_S1 != _S0)
            goto LABEL_116;
        }
        v34 = v150;
        v28 = v149;
        goto LABEL_123;
      }
      goto LABEL_115;
    }
LABEL_73:
    if (v23 == 1)
    {
LABEL_93:
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          _H1 = *v34;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v28 += v165;
          v34 += v164;
        }
        while (--v40);
      }
    }
    else
    {
      if (v22 != 1)
      {
        v82 = 0;
LABEL_76:
        v83 = v34;
        v84 = v28;
        v85 = v22 - 1;
        while (1)
        {
          _H0 = *v84;
          _H1 = *v83;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v84 += v165;
          v83 += v164;
          if (!--v85)
          {
            _H0 = *v84;
            _H1 = *v83;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v25;
            v34 += v26;
            if (++v82 != v41)
              goto LABEL_76;
            goto LABEL_93;
          }
        }
      }
LABEL_105:
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 != _S1)
      {
LABEL_115:
        v95 = 0;
LABEL_116:
        v96 = v166;
        v166 = 0;
        if (v96)
          goto LABEL_117;
        goto LABEL_118;
      }
      v135 = 2 * (v23 - 2) + 2;
      v136 = (__int16 *)((char *)v28 + v135 * v25);
      v137 = (__int16 *)((char *)v34 + v135 * v26);
      v138 = &v34[v26];
      v139 = &v28[v25];
      v95 = 0;
      while (--v41)
      {
        _H0 = *v138;
        v138 += v26;
        _H1 = *v139;
        v139 += v25;
        __asm
        {
          FCVT            S0, H0
          FCVT            S1, H1
        }
        if (_S1 != _S0)
          goto LABEL_116;
      }
      v34 = v137;
      v28 = v136;
    }
LABEL_123:
    _H0 = *v28;
    _H1 = *v34;
    __asm
    {
      FCVT            S1, H1
      FCVT            S0, H0
    }
    _ZF = _S0 == _S1;
LABEL_124:
    v95 = _ZF;
    v96 = v166;
    v166 = 0;
    if (!v96)
      goto LABEL_118;
    goto LABEL_117;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    _ZF = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_124;
  }
  v95 = 1;
  v96 = v166;
  v166 = 0;
  if (v96)
LABEL_117:
    (*(void (**)(uint64_t))(*(_QWORD *)v96 + 8))(v96);
LABEL_118:
  v157 = v167;
  v167 = 0;
  if (v157)
    (*(void (**)(uint64_t))(*(_QWORD *)v157 + 8))(v157);
  return v95;
}

void sub_2242F5890(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F58F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6EE50;
  sub_2241FC24C(a1, (uint64_t)&v15);
  v11 = &off_24EC6EE50;
  sub_2241FC24C(a2, (uint64_t)&v12);
  v3 = sub_2242F5A0C((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F59DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241FC0D0((uint64_t)&a9);
  sub_2241FC0D0((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F59F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241FC0D0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F5A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  float *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  float *v50;
  float *v51;
  int v52;
  float *v53;
  float *v54;
  float *v55;
  float *v56;
  float *v57;
  float *v58;
  float *v59;
  float *v60;
  int v61;
  int v62;
  int v63;
  float *v64;
  float *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  float *v71;
  float *v72;
  int v73;
  float *v74;
  float *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(float **)(a1 + 24);
    }
    v34 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(float **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 4 * v27;
        v44 = v25;
        v45 = 4 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (float *)((char *)v75 + v44 * 4);
            v74 = (float *)((char *)v74 + v46 * 4);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (float *)((char *)v28 + v43);
                v34 = (float *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 4 * v81;
          v49 = 4 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (float *)((char *)v60 + v48);
            v59 = (float *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (float *)((char *)v56 + v44 * 4);
              v55 = (float *)((char *)v55 + v46 * 4);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (float *)((char *)v57 + v48);
                  v58 = (float *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (float *)((char *)v28 + v43);
                    v34 = (float *)((char *)v34 + v45);
                    ++v47;
                    v50 = (float *)((char *)v50 + v43);
                    v51 = (float *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242F60A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F6108(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6EF48;
  sub_2241FC9FC(a1, (uint64_t)&v15);
  v11 = &off_24EC6EF48;
  sub_2241FC9FC(a2, (uint64_t)&v12);
  v3 = sub_2242F6220((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F61F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241FC884((uint64_t)&a9);
  sub_2241FC884((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F620C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241FC884((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F6220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  int v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  int v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  int v53;
  int v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  int v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  BOOL v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned __int8 *v79;
  unsigned __int8 *v80;
  unsigned __int8 *v81;
  int v82;
  int v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v95 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v95, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v94 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_124;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v94, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_124;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_124;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_124;
  if (!*(_DWORD *)(a1 + 56) || !*(_DWORD *)(a1 + 60))
  {
    if (!*(_DWORD *)(a2 + 56))
    {
      v62 = 1;
      goto LABEL_125;
    }
    v61 = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_85;
  }
  v25 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 44);
  v26 = *(unsigned int *)(a2 + 48);
  v92 = *(unsigned int *)(a1 + 52);
  v93 = *(unsigned int *)(a1 + 48);
  v91 = *(unsigned int *)(a2 + 52);
  v28 = *(unsigned __int8 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72) && v28)
  {
    v29 = *(_QWORD *)(a1 + 8);
    v30 = *(std::__shared_weak_count **)(a1 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v28 = *(unsigned __int8 **)(a1 + 24);
  }
  v34 = *(unsigned __int8 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v34)
  {
    v35 = *(_QWORD *)(a2 + 8);
    v36 = *(std::__shared_weak_count **)(a2 + 16);
    if (v36)
    {
      v37 = (unint64_t *)&v36->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v34 = *(unsigned __int8 **)(a2 + 24);
  }
  v40 = v22 - 1;
  v41 = v23 - 1;
  v42 = v24 - 1;
  if (v24 != 1)
  {
    if (v23 != 1)
    {
      v43 = 0;
      if (v22 == 1)
      {
        v68 = v93;
        v69 = (v24 - 2) + 1;
        v70 = &v28[v69 * v92];
        v71 = &v34[v69 * v91];
        while (*v28 == *v34)
        {
          v72 = v23 - 1;
          v73 = v93;
          v74 = v26;
          while (--v72)
          {
            v62 = 0;
            v75 = v34[v74];
            v74 += v26;
            v76 = v28[v73];
            v73 += v93;
            if (v76 != v75)
              goto LABEL_125;
          }
          if (v28[v93 * (unint64_t)v41] != v34[v26 * (unint64_t)v41])
            break;
          v28 += v92;
          v34 += v91;
          if (++v43 == v42)
            goto LABEL_114;
        }
      }
      else
      {
        v44 = (v24 - 2) + 1;
        v45 = &v28[v44 * v92];
        v46 = &v34[v44 * v91];
LABEL_62:
        v47 = 0;
        v48 = v34;
        v49 = v28;
LABEL_63:
        v50 = v22 - 1;
        v51 = v49;
        v52 = v48;
        while (*v51 == *v52)
        {
          v51 += v25;
          v52 += v27;
          if (!--v50)
          {
            if (*v51 != *v52)
              goto LABEL_124;
            v49 += v93;
            v48 += v26;
            if (++v47 == v41)
            {
              v53 = v22 - 1;
              while (*v49 == *v48)
              {
                v49 += v25;
                v48 += v27;
                if (!--v53)
                {
                  if (*v49 != *v48)
                    goto LABEL_124;
                  v28 += v92;
                  v34 += v91;
                  if (++v43 == v42)
                  {
                    v28 = v45;
                    v34 = v46;
                    goto LABEL_74;
                  }
                  goto LABEL_62;
                }
              }
              goto LABEL_124;
            }
            goto LABEL_63;
          }
        }
      }
      goto LABEL_124;
    }
    if (v22 != 1)
    {
      v63 = 0;
      v64 = (v24 - 2) + 1;
      v56 = &v28[v64 * v92];
      v57 = &v34[v64 * v91];
LABEL_91:
      v65 = v22 - 1;
      v66 = v28;
      v67 = v34;
      while (*v66 == *v67)
      {
        v66 += v25;
        v67 += v27;
        if (!--v65)
        {
          if (*v66 != *v67)
            goto LABEL_124;
          v28 += v92;
          v34 += v91;
          if (++v63 != v42)
            goto LABEL_91;
          goto LABEL_107;
        }
      }
      goto LABEL_124;
    }
    if (*v28 == *v34)
    {
      v56 = &v28[v92 * (unint64_t)v42];
      v84 = &v34[v91];
      v85 = &v28[v92];
      v57 = &v34[v91 * (unint64_t)v42];
      while (--v42)
      {
        v62 = 0;
        v86 = *v84;
        v84 += v91;
        v87 = *v85;
        v85 += v92;
        if (v87 != v86)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
LABEL_124:
    v62 = 0;
    goto LABEL_125;
  }
LABEL_74:
  if (v23 != 1)
  {
    if (v22 == 1)
    {
      v70 = v28;
      v71 = v34;
      v68 = v93;
LABEL_114:
      if (*v70 != *v71)
        goto LABEL_124;
      v56 = &v70[v68 * (unint64_t)v41];
      v80 = &v71[v26];
      v81 = &v70[v68];
      v57 = &v71[v26 * (unint64_t)v41];
      while (--v41)
      {
        v62 = 0;
        v82 = *v80;
        v80 += v26;
        v83 = *v81;
        v81 += v68;
        if (v83 != v82)
          goto LABEL_125;
      }
      goto LABEL_112;
    }
    v54 = 0;
    v55 = (v23 - 2) + 1;
    v56 = &v28[v55 * v93];
    v57 = &v34[v55 * v26];
LABEL_77:
    v58 = v22 - 1;
    v59 = v28;
    v60 = v34;
    while (*v59 == *v60)
    {
      v59 += v25;
      v60 += v27;
      if (!--v58)
      {
        if (*v59 != *v60)
          goto LABEL_124;
        v28 += v93;
        v34 += v26;
        if (++v54 != v41)
          goto LABEL_77;
        goto LABEL_107;
      }
    }
    goto LABEL_124;
  }
  v56 = v28;
  v57 = v34;
LABEL_107:
  if (v22 != 1)
  {
    v77 = (v22 - 2) + 1;
    v78 = &v56[v77 * v25];
    v79 = &v57[v77 * v27];
    while (*v56 == *v57)
    {
      v56 += v25;
      v57 += v27;
      if (!--v40)
      {
        v57 = v79;
        v56 = v78;
        goto LABEL_112;
      }
    }
    goto LABEL_124;
  }
LABEL_112:
  v61 = *v56 == *v57;
LABEL_85:
  v62 = v61;
LABEL_125:
  v88 = v94;
  v94 = 0;
  if (v88)
    (*(void (**)(uint64_t))(*(_QWORD *)v88 + 8))(v88);
  v89 = v95;
  v95 = 0;
  if (v89)
    (*(void (**)(uint64_t))(*(_QWORD *)v89 + 8))(v89);
  return v62;
}

void sub_2242F690C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F6970(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC204C0;
  sub_2241FD030(a1, (uint64_t)&v15);
  v11 = &off_24EC204C0;
  sub_2241FD030(a2, (uint64_t)&v12);
  v3 = sub_2242F6A88((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F6A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_22319F500((uint64_t)&a9);
  sub_22319F500((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F6A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_22319F500((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F6A88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int16 *v50;
  unsigned __int16 *v51;
  int v52;
  unsigned __int16 *v53;
  unsigned __int16 *v54;
  unsigned __int16 *v55;
  unsigned __int16 *v56;
  unsigned __int16 *v57;
  unsigned __int16 *v58;
  unsigned __int16 *v59;
  unsigned __int16 *v60;
  int v61;
  int v62;
  int v63;
  unsigned __int16 *v64;
  unsigned __int16 *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned __int16 *v71;
  unsigned __int16 *v72;
  int v73;
  unsigned __int16 *v74;
  unsigned __int16 *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(unsigned __int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(unsigned __int16 **)(a1 + 24);
    }
    v34 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(unsigned __int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 2 * v27;
        v44 = v25;
        v45 = 2 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (unsigned __int16 *)((char *)v75 + v44 * 2);
            v74 = (unsigned __int16 *)((char *)v74 + v46 * 2);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (unsigned __int16 *)((char *)v28 + v43);
                v34 = (unsigned __int16 *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v81;
          v49 = 2 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (unsigned __int16 *)((char *)v60 + v48);
            v59 = (unsigned __int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (unsigned __int16 *)((char *)v56 + v44 * 2);
              v55 = (unsigned __int16 *)((char *)v55 + v46 * 2);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (unsigned __int16 *)((char *)v57 + v48);
                  v58 = (unsigned __int16 *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (unsigned __int16 *)((char *)v28 + v43);
                    v34 = (unsigned __int16 *)((char *)v34 + v45);
                    ++v47;
                    v50 = (unsigned __int16 *)((char *)v50 + v43);
                    v51 = (unsigned __int16 *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242F7120(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F7184(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6F040;
  sub_2241FD528(a1, (uint64_t)&v15);
  v11 = &off_24EC6F040;
  sub_2241FD528(a2, (uint64_t)&v12);
  v3 = sub_2242F729C((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F726C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241FD3AC((uint64_t)&a9);
  sub_2241FD3AC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F7288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241FD3AC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F729C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  __int16 *v50;
  __int16 *v51;
  int v52;
  __int16 *v53;
  __int16 *v54;
  __int16 *v55;
  __int16 *v56;
  __int16 *v57;
  __int16 *v58;
  __int16 *v59;
  __int16 *v60;
  int v61;
  int v73;
  int v82;
  __int16 *v83;
  __int16 *v84;
  int v85;
  uint64_t v95;
  uint64_t v96;
  int v97;
  __int16 *v98;
  __int16 *v99;
  int v100;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v135;
  __int16 *v136;
  __int16 *v137;
  __int16 *v138;
  __int16 *v139;
  uint64_t v148;
  __int16 *v149;
  __int16 *v150;
  __int16 *v151;
  __int16 *v152;
  uint64_t v157;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v167 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v167, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v166 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (v22 != *(_DWORD *)(a2 + 32))
      goto LABEL_115;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v166, v13, 0);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_115;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_115;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_115;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v26 = *(unsigned int *)(a2 + 48);
    v164 = *(unsigned int *)(a2 + 44);
    v165 = *(unsigned int *)(a1 + 44);
    v163 = *(unsigned int *)(a1 + 52);
    v27 = *(unsigned int *)(a2 + 52);
    v28 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(__int16 **)(a1 + 24);
    }
    v34 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(__int16 **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 != 1)
      {
        v43 = 2 * v27;
        v44 = v26;
        v45 = 2 * v163;
        v46 = v25;
        if (v22 == 1)
        {
          v113 = 2 * (v23 - 2) + 2;
          v114 = v113 * v25;
          v115 = v113 * v26;
          while (1)
          {
            _H0 = *v28;
            _H1 = *v34;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v120 = v23 - 1;
            v121 = 2 * v25;
            v122 = 2 * v26;
            while (--v120)
            {
              v95 = 0;
              _H0 = *(__int16 *)((char *)v34 + v122);
              v122 += v44 * 2;
              _H1 = *(__int16 *)((char *)v28 + v121);
              v121 += v46 * 2;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              if (_S1 != _S0)
                goto LABEL_116;
            }
            _H0 = *(__int16 *)((char *)v28 + v114);
            _H1 = *(__int16 *)((char *)v34 + v115);
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v28 = (__int16 *)((char *)v28 + v45);
            v34 = (__int16 *)((char *)v34 + v43);
            if (++v40 == v42)
              goto LABEL_105;
          }
        }
        else
        {
          v47 = 0;
          v48 = 2 * v165;
          v49 = 2 * v164;
          v50 = &v28[v46];
          v51 = &v34[v44];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (1)
          {
            _H0 = *v60;
            _H1 = *v59;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              break;
            v60 = (__int16 *)((char *)v60 + v48);
            v59 = (__int16 *)((char *)v59 + v49);
            if (!--v61)
            {
              _H0 = *v60;
              _H1 = *v59;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 != _S1)
                goto LABEL_115;
              v56 = (__int16 *)((char *)v56 + v46 * 2);
              v55 = (__int16 *)((char *)v55 + v44 * 2);
              ++v52;
              v54 = &v57[v46];
              v53 = &v58[v44];
              if (v52 == v41)
              {
                v73 = v22 - 1;
                while (1)
                {
                  _H0 = *v57;
                  _H1 = *v58;
                  __asm
                  {
                    FCVT            S1, H1
                    FCVT            S0, H0
                  }
                  if (_S0 != _S1)
                    goto LABEL_115;
                  v57 = (__int16 *)((char *)v57 + v48);
                  v58 = (__int16 *)((char *)v58 + v49);
                  if (!--v73)
                  {
                    _H0 = *v57;
                    _H1 = *v58;
                    __asm
                    {
                      FCVT            S1, H1
                      FCVT            S0, H0
                    }
                    if (_S0 != _S1)
                      goto LABEL_115;
                    v28 = (__int16 *)((char *)v28 + v45);
                    v34 = (__int16 *)((char *)v34 + v43);
                    ++v47;
                    v50 = (__int16 *)((char *)v50 + v45);
                    v51 = (__int16 *)((char *)v51 + v43);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
              }
              goto LABEL_63;
            }
          }
        }
        goto LABEL_115;
      }
      if (v22 != 1)
      {
        v97 = 0;
LABEL_88:
        v98 = v34;
        v99 = v28;
        v100 = v22 - 1;
        while (1)
        {
          _H0 = *v99;
          _H1 = *v98;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v99 += v165;
          v98 += v164;
          if (!--v100)
          {
            _H0 = *v99;
            _H1 = *v98;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v163;
            v34 += v27;
            if (++v97 != v42)
              goto LABEL_88;
            goto LABEL_93;
          }
        }
      }
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 == _S1)
      {
        v148 = 2 * (v24 - 2) + 2;
        v149 = (__int16 *)((char *)v28 + v148 * v163);
        v150 = (__int16 *)((char *)v34 + v148 * v27);
        v151 = &v34[v27];
        v152 = &v28[v163];
        v95 = 0;
        while (--v42)
        {
          _H0 = *v151;
          v151 += v27;
          _H1 = *v152;
          v152 += v163;
          __asm
          {
            FCVT            S0, H0
            FCVT            S1, H1
          }
          if (_S1 != _S0)
            goto LABEL_116;
        }
        v34 = v150;
        v28 = v149;
        goto LABEL_123;
      }
      goto LABEL_115;
    }
LABEL_73:
    if (v23 == 1)
    {
LABEL_93:
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          _H1 = *v34;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v28 += v165;
          v34 += v164;
        }
        while (--v40);
      }
    }
    else
    {
      if (v22 != 1)
      {
        v82 = 0;
LABEL_76:
        v83 = v34;
        v84 = v28;
        v85 = v22 - 1;
        while (1)
        {
          _H0 = *v84;
          _H1 = *v83;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 != _S1)
            goto LABEL_115;
          v84 += v165;
          v83 += v164;
          if (!--v85)
          {
            _H0 = *v84;
            _H1 = *v83;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 != _S1)
              goto LABEL_115;
            v28 += v25;
            v34 += v26;
            if (++v82 != v41)
              goto LABEL_76;
            goto LABEL_93;
          }
        }
      }
LABEL_105:
      _H0 = *v28;
      _H1 = *v34;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 != _S1)
      {
LABEL_115:
        v95 = 0;
LABEL_116:
        v96 = v166;
        v166 = 0;
        if (v96)
          goto LABEL_117;
        goto LABEL_118;
      }
      v135 = 2 * (v23 - 2) + 2;
      v136 = (__int16 *)((char *)v28 + v135 * v25);
      v137 = (__int16 *)((char *)v34 + v135 * v26);
      v138 = &v34[v26];
      v139 = &v28[v25];
      v95 = 0;
      while (--v41)
      {
        _H0 = *v138;
        v138 += v26;
        _H1 = *v139;
        v139 += v25;
        __asm
        {
          FCVT            S0, H0
          FCVT            S1, H1
        }
        if (_S1 != _S0)
          goto LABEL_116;
      }
      v34 = v137;
      v28 = v136;
    }
LABEL_123:
    _H0 = *v28;
    _H1 = *v34;
    __asm
    {
      FCVT            S1, H1
      FCVT            S0, H0
    }
    _ZF = _S0 == _S1;
LABEL_124:
    v95 = _ZF;
    v96 = v166;
    v166 = 0;
    if (!v96)
      goto LABEL_118;
    goto LABEL_117;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    _ZF = *(_DWORD *)(a2 + 60) == 0;
    goto LABEL_124;
  }
  v95 = 1;
  v96 = v166;
  v166 = 0;
  if (v96)
LABEL_117:
    (*(void (**)(uint64_t))(*(_QWORD *)v96 + 8))(v96);
LABEL_118:
  v157 = v167;
  v167 = 0;
  if (v157)
    (*(void (**)(uint64_t))(*(_QWORD *)v157 + 8))(v157);
  return v95;
}

void sub_2242F7A60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2242F7AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = &off_24EC6F138;
  sub_2241FDCDC(a1, (uint64_t)&v15);
  v11 = &off_24EC6F138;
  sub_2241FDCDC(a2, (uint64_t)&v12);
  v3 = sub_2242F7BDC((uint64_t)&v14, (uint64_t)&v11);
  v4 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v16;
  if (!v16)
    return v3;
  v8 = (unint64_t *)&v16->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
    return v3;
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return v3;
}

void sub_2242F7BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2241FDB60((uint64_t)&a9);
  sub_2241FDB60((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_2242F7BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_2241FDB60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2242F7BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  float *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  float *v50;
  float *v51;
  int v52;
  float *v53;
  float *v54;
  float *v55;
  float *v56;
  float *v57;
  float *v58;
  float *v59;
  float *v60;
  int v61;
  int v62;
  int v63;
  float *v64;
  float *v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  float *v71;
  float *v72;
  int v73;
  float *v74;
  float *v75;
  int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v83 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
LABEL_19:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_31;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (v17)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v18)
        goto LABEL_31;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v82, v13, 0);
      v22 = *(_DWORD *)(a1 + 32);
      if (v22 != *(_DWORD *)(a2 + 32))
        goto LABEL_102;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v83, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_19;
LABEL_35:
  v82 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (v22 != *(_DWORD *)(a2 + 32))
    goto LABEL_102;
LABEL_36:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23 != *(_DWORD *)(a2 + 36))
    goto LABEL_102;
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 != *(_DWORD *)(a2 + 40))
    goto LABEL_102;
  if (*(_DWORD *)(a1 + 56) && *(_DWORD *)(a1 + 60))
  {
    v25 = *(unsigned int *)(a1 + 48);
    v80 = *(unsigned int *)(a2 + 44);
    v81 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 52);
    v79 = *(unsigned int *)(a2 + 48);
    v27 = *(unsigned int *)(a1 + 52);
    v28 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(float **)(a1 + 24);
    }
    v34 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(float **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        if (v22 == 1)
        {
          while (*v28 == *v34)
          {
            v28 += v27;
            v34 += v26;
            if (!--v42)
              goto LABEL_112;
          }
        }
        else
        {
          v70 = 0;
LABEL_88:
          v71 = v34;
          v72 = v28;
          v73 = v22 - 1;
          while (*v72 == *v71)
          {
            v72 += v81;
            v71 += v80;
            if (!--v73)
            {
              if (*v72 != *v71)
                break;
              v28 += v27;
              v34 += v26;
              if (++v70 != v42)
                goto LABEL_88;
              goto LABEL_93;
            }
          }
        }
      }
      else
      {
        v43 = 4 * v27;
        v44 = v25;
        v45 = 4 * v26;
        v46 = v79;
        if (v22 == 1)
        {
LABEL_98:
          v74 = v34;
          v75 = v28;
          v76 = v23 - 1;
          while (*v75 == *v74)
          {
            v75 = (float *)((char *)v75 + v44 * 4);
            v74 = (float *)((char *)v74 + v46 * 4);
            if (!--v76)
            {
              if (*v75 == *v74)
              {
                v28 = (float *)((char *)v28 + v43);
                v34 = (float *)((char *)v34 + v45);
                if (++v40 != v42)
                  goto LABEL_98;
LABEL_107:
                while (*v28 == *v34)
                {
                  v28 += v25;
                  v34 += v79;
                  if (!--v41)
                    goto LABEL_112;
                }
              }
              break;
            }
          }
        }
        else
        {
          v47 = 0;
          v48 = 4 * v81;
          v49 = 4 * v80;
          v50 = &v28[v44];
          v51 = &v34[v46];
LABEL_62:
          v52 = 0;
          v53 = v51;
          v54 = v50;
          v55 = v34;
          v56 = v28;
LABEL_63:
          v57 = v54;
          v58 = v53;
          v59 = v55;
          v60 = v56;
          v61 = v22 - 1;
          while (*v60 == *v59)
          {
            v60 = (float *)((char *)v60 + v48);
            v59 = (float *)((char *)v59 + v49);
            if (!--v61)
            {
              if (*v60 != *v59)
                break;
              v56 = (float *)((char *)v56 + v44 * 4);
              v55 = (float *)((char *)v55 + v46 * 4);
              ++v52;
              v54 = &v57[v44];
              v53 = &v58[v46];
              if (v52 == v41)
              {
                v62 = v22 - 1;
                while (*v57 == *v58)
                {
                  v57 = (float *)((char *)v57 + v48);
                  v58 = (float *)((char *)v58 + v49);
                  if (!--v62)
                  {
                    if (*v57 != *v58)
                      goto LABEL_102;
                    v28 = (float *)((char *)v28 + v43);
                    v34 = (float *)((char *)v34 + v45);
                    ++v47;
                    v50 = (float *)((char *)v50 + v43);
                    v51 = (float *)((char *)v51 + v45);
                    if (v47 != v42)
                      goto LABEL_62;
                    goto LABEL_73;
                  }
                }
                break;
              }
              goto LABEL_63;
            }
          }
        }
      }
LABEL_102:
      v68 = 0;
      v69 = v82;
      v82 = 0;
      if (!v69)
        goto LABEL_104;
      goto LABEL_103;
    }
LABEL_73:
    if (v23 != 1)
    {
      if (v22 == 1)
        goto LABEL_107;
      v63 = 0;
LABEL_76:
      v64 = v34;
      v65 = v28;
      v66 = v22 - 1;
      while (*v65 == *v64)
      {
        v65 += v81;
        v64 += v80;
        if (!--v66)
        {
          if (*v65 != *v64)
            goto LABEL_102;
          v28 += v25;
          v34 += v79;
          if (++v63 != v41)
            goto LABEL_76;
          goto LABEL_93;
        }
      }
      goto LABEL_102;
    }
LABEL_93:
    if (v22 != 1)
    {
      while (*v28 == *v34)
      {
        v28 += v81;
        v34 += v80;
        if (!--v40)
          goto LABEL_112;
      }
      goto LABEL_102;
    }
LABEL_112:
    v67 = *v28 == *v34;
    goto LABEL_113;
  }
  if (*(_DWORD *)(a2 + 56))
  {
    v67 = *(_DWORD *)(a2 + 60) == 0;
LABEL_113:
    v68 = v67;
    v69 = v82;
    v82 = 0;
    if (!v69)
      goto LABEL_104;
    goto LABEL_103;
  }
  v68 = 1;
  v69 = v82;
  v82 = 0;
  if (v69)
LABEL_103:
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
LABEL_104:
  v77 = v83;
  v83 = 0;
  if (v77)
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
  return v68;
}

void sub_2242F8274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  if (a13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
    v15 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a14;
    if (!a14)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(exception_object);
}

#error "2242F82D8: too big function (funcsize=0)"

void sub_22430885C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::__shared_weak_count *a26)
{
  uint64_t v26;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;

  v28 = *(_QWORD *)(v26 - 96);
  *(_QWORD *)(v26 - 96) = 0;
  if (v28)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
    v29 = a26;
    if (!a26)
      goto LABEL_9;
  }
  else
  {
    v29 = a26;
    if (!a26)
      goto LABEL_9;
  }
  p_shared_owners = (unint64_t *)&v29->__shared_owners_;
  do
    v31 = __ldaxr(p_shared_owners);
  while (__stlxr(v31 - 1, p_shared_owners));
  if (!v31)
  {
    ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
    std::__shared_weak_count::__release_weak(v29);
  }
LABEL_9:
  if (a16)
  {
    v32 = (unint64_t *)&a16->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_22430A92C(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430AC2C((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 2;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430ABE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430AC2C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E0884();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430ACA4(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430AFA8((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 2;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430AF5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430AFA8(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E1148();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430B020(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430B324((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 2;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430B2D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430B324(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E1B90();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430B39C(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430B6A0((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 2;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430B654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430B6A0(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E24E0();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430B718(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 9)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430BA18((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a2 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a2 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v15;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v22 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a1 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v18;
  *(_DWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 36) = v20;
  *(_DWORD *)(a1 + 44) = v21;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v15;
  *(_WORD *)(a1 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430B9CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430BA18(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E2DA4();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430BA90(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 10)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430BD94((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a2 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a2 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v22 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a1 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v18;
  *(_DWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 36) = v20;
  *(_DWORD *)(a1 + 44) = v21;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v15;
  *(_WORD *)(a1 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430BD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430BD94(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E3668();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430BE0C(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 11)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430C110((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a2 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a2 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v22 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a1 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v18;
  *(_DWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 36) = v20;
  *(_DWORD *)(a1 + 44) = v21;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v15;
  *(_WORD *)(a1 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430C0C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430C110(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E3F2C();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430C188(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 12)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430C48C((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a2 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a2 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v22 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a1 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v18;
  *(_DWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 36) = v20;
  *(_DWORD *)(a1 + 44) = v21;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v15;
  *(_WORD *)(a1 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430C440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430C48C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E47F0();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430C504(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 13)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430C804((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430C7B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430C804(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E50B4();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430C87C(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 14)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430CB80((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430CB34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430CB80(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E5978();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430CBF8(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 15)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430CEFC((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430CEB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430CEFC(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E623C();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430CF74(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 16)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430D278((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430D22C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430D278(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E6B00();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430D2F0(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 17)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430D5F0((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a2 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a2 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v15;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v22 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a1 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v18;
  *(_DWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 36) = v20;
  *(_DWORD *)(a1 + 44) = v21;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v15;
  *(_WORD *)(a1 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430D5A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430D5F0(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E73C4();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430D668(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 18)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430D96C((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a2 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a2 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v22 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a1 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v18;
  *(_DWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 36) = v20;
  *(_DWORD *)(a1 + 44) = v21;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v15;
  *(_WORD *)(a1 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430D920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430D96C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E7C88();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430D9E4(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 19)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430DCE8((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a2 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a2 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v22 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a1 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v18;
  *(_DWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 36) = v20;
  *(_DWORD *)(a1 + 44) = v21;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v15;
  *(_WORD *)(a1 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430DC9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430DCE8(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E854C();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430DD60(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 20)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430E064((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a2 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a2 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v22 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a1 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v18;
  *(_DWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 36) = v20;
  *(_DWORD *)(a1 + 44) = v21;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v15;
  *(_WORD *)(a1 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430E018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430E064(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231E8E10();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430E0DC(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 26)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430E3E0((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430E394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430E3E0(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231EC63C();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430E458(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 27)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430E75C((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430E710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430E75C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231ECF00();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430E7D4(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 28)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430EAD8((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430EA8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430EAD8(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231ED7C4();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430EB50(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 34)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430EE54((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430EE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430EE54(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231F0B1C();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430EECC(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 35)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430F1D0((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430F184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430F1D0(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231F13E0();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430F248(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 36)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22430F54C((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22430F500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_22430F54C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  std::string *v4;
  unsigned int v6;

  v3 = sub_2231F1CA4();
  v4 = sub_2232969B8();
  v6 = *(_DWORD *)(a2 + 48);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", &v6);
}

void sub_22430F5C4(int a1, uint64_t (***a2)(uint64_t), uint64_t a3)
{
  uint64_t (*v4)(uint64_t);
  _BYTE *v5;
  __n128 v6;
  uint64_t (*v7)(uint64_t);
  _WORD *v8;
  uint64_t (*v9)(uint64_t);
  _WORD *v10;
  uint64_t (*v11)(uint64_t);
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  size_t v15;
  int v16;
  uint64_t v17;
  int v18;
  void *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t (*v25)(uint64_t);
  unsigned __int32 *v26;
  uint64_t (*v27)(uint64_t);
  unsigned __int8 *v28;
  unsigned int v29;
  uint64_t v30;
  size_t v31;
  int v32;
  uint64_t v33;
  int v34;
  void *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t (*v41)(uint64_t);
  unsigned __int32 *v42;
  uint64_t (*v43)(uint64_t);
  _WORD *v44;
  uint64_t (*v45)(uint64_t);
  unsigned __int8 *v46;
  unsigned int v47;
  uint64_t v48;
  size_t v49;
  int v50;
  uint64_t v51;
  int v52;
  void *v53;
  uint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t (*v59)(uint64_t);
  unsigned __int32 *v60;
  uint64_t (*v61)(uint64_t);
  _WORD *v62;
  uint64_t (*v63)(uint64_t);
  _WORD *v64;
  uint64_t (*v65)(uint64_t);
  _WORD *v66;
  uint64_t (*v67)(uint64_t);
  _WORD *v68;
  uint64_t (*v69)(uint64_t);
  _WORD *v70;
  uint64_t (*v71)(uint64_t);
  _WORD *v72;
  uint64_t (*v73)(uint64_t);
  _WORD *v74;
  uint64_t (*v75)(uint64_t);
  unsigned __int32 *v76;
  int v77;
  int v78;
  __n128 *v79;
  uint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t);
  unsigned __int32 *v87;
  uint64_t (*v88)(uint64_t);
  unsigned __int32 *v89;
  uint64_t (*v90)(uint64_t);
  _WORD *v91;
  uint64_t (*v92)(uint64_t);
  _WORD *v93;
  uint64_t (*v94)(uint64_t);
  _WORD *v95;
  uint64_t (*v96)(uint64_t);
  unsigned __int32 *v97;
  uint64_t (*v98)(uint64_t);
  unsigned __int8 *v99;
  int v100;
  uint64_t v101;
  size_t v102;
  int v103;
  uint64_t v104;
  int v105;
  void *v106;
  uint64_t v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  unint64_t v111;
  size_t v112;
  int v113;
  uint64_t (*v114)(uint64_t);
  unsigned __int8 *v115;
  int v116;
  uint64_t v117;
  size_t v118;
  int v119;
  uint64_t v120;
  int v121;
  void *v122;
  uint64_t v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  size_t v128;
  int v129;
  uint64_t (*v130)(uint64_t);
  unsigned __int32 *v131;
  uint64_t (*v132)(uint64_t);
  unsigned __int32 *v133;
  uint64_t (*v134)(uint64_t);
  _WORD *v135;
  int v136;
  int v137;
  __n128 *v138;
  uint64_t v139;
  std::__shared_weak_count *v140;
  unint64_t *v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t (*v145)(uint64_t);
  _WORD *v146;
  int v147;
  int v148;
  __n128 *v149;
  uint64_t v150;
  std::__shared_weak_count *v151;
  unint64_t *v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t (*v156)(uint64_t);
  unsigned __int8 *v157;
  unsigned int v158;
  uint64_t v159;
  size_t v160;
  int v161;
  uint64_t v162;
  int v163;
  void *v164;
  uint64_t v165;
  std::__shared_weak_count *v166;
  unint64_t *v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t (*v170)(uint64_t);
  _WORD *v171;
  uint64_t (*v172)(uint64_t);
  _WORD *v173;
  uint64_t (*v174)(uint64_t);
  unsigned __int8 *v175;
  unsigned int v176;
  uint64_t v177;
  size_t v178;
  int v179;
  uint64_t v180;
  int v181;
  void *v182;
  uint64_t v183;
  std::__shared_weak_count *v184;
  unint64_t *v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t (*v188)(uint64_t);
  unsigned __int32 *v189;
  uint64_t (*v190)(uint64_t);
  _WORD *v191;
  uint64_t (*v192)(uint64_t);
  _WORD *v193;
  uint64_t (*v194)(uint64_t);
  unsigned __int8 *v195;
  int v196;
  uint64_t v197;
  size_t v198;
  int v199;
  uint64_t v200;
  int v201;
  void *v202;
  uint64_t v203;
  std::__shared_weak_count *v204;
  unint64_t *v205;
  unint64_t v206;
  unint64_t v207;
  size_t v208;
  int v209;
  uint64_t (*v210)(uint64_t);
  _WORD *v211;
  uint64_t (*v212)(uint64_t);
  unsigned __int8 *v213;
  int v214;
  uint64_t v215;
  size_t v216;
  int v217;
  uint64_t v218;
  int v219;
  void *v220;
  uint64_t v221;
  std::__shared_weak_count *v222;
  unint64_t *v223;
  unint64_t v224;
  unint64_t v225;
  size_t v226;
  int v227;
  __int16 *v228;
  uint64_t v229;
  std::__shared_weak_count *v230;
  unint64_t *v231;
  unint64_t v232;
  unint64_t v233;
  std::__shared_weak_count *v234;
  unint64_t *v235;
  unint64_t v236;
  int v237;
  int v238;
  uint64_t v239;
  uint64_t v240;
  _WORD *v241;
  uint64_t v242;
  std::__shared_weak_count *v243;
  unint64_t *v244;
  unint64_t v245;
  unint64_t v246;
  int v247;
  uint64_t v248;
  int v249;
  __int16 v250;
  int v251;
  _WORD *v252;
  _WORD *v253;
  int v254;
  int v255;
  int v256;
  uint64_t v257;
  uint64_t v258;
  unsigned __int32 *v259;
  uint64_t v260;
  std::__shared_weak_count *v261;
  unint64_t *v262;
  unint64_t v263;
  unint64_t v264;
  int v265;
  int v266;
  int v267;
  unsigned __int32 v268;
  int v269;
  unsigned __int32 *v270;
  unint64_t *v271;
  int v272;
  int v273;
  uint64_t v274;
  uint64_t v275;
  unsigned __int32 *v276;
  uint64_t v277;
  std::__shared_weak_count *v278;
  unint64_t *v279;
  unint64_t v280;
  unint64_t v281;
  int v282;
  int v283;
  int v284;
  unsigned __int32 v285;
  int v286;
  unsigned __int32 *v287;
  unint64_t *v288;
  _WORD *v289;
  uint64_t v290;
  std::__shared_weak_count *v291;
  unint64_t *v292;
  unint64_t v293;
  unint64_t v294;
  unint64_t *v295;
  int v296;
  int v297;
  uint64_t v298;
  uint64_t v299;
  unsigned __int32 *v300;
  uint64_t v301;
  std::__shared_weak_count *v302;
  unint64_t *v303;
  unint64_t v304;
  unint64_t v305;
  int v306;
  int v307;
  int v308;
  unsigned __int32 v309;
  int v310;
  unsigned __int32 *v311;
  _DWORD *v312;
  uint64_t v313;
  std::__shared_weak_count *v314;
  unint64_t *v315;
  unint64_t v316;
  unint64_t v317;
  unint64_t *v318;
  unint64_t *v319;
  unint64_t *v320;
  __int16 *v321;
  uint64_t v322;
  std::__shared_weak_count *v323;
  unint64_t *v324;
  unint64_t v325;
  unint64_t v326;
  unint64_t *v327;
  unint64_t *v328;
  _WORD *v329;
  uint64_t v330;
  std::__shared_weak_count *v331;
  unint64_t *v332;
  unint64_t v333;
  unint64_t v334;
  unint64_t *v335;
  __int16 *v336;
  uint64_t v337;
  std::__shared_weak_count *v338;
  unint64_t *v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t *v342;
  unint64_t *v343;
  _DWORD *v344;
  uint64_t v345;
  std::__shared_weak_count *v346;
  unint64_t *v347;
  unint64_t v348;
  unint64_t v349;
  unint64_t *v350;
  _DWORD *v351;
  uint64_t v352;
  std::__shared_weak_count *v353;
  unint64_t *v354;
  unint64_t v355;
  unint64_t v356;
  unint64_t *v357;
  __int16 *v358;
  uint64_t v359;
  std::__shared_weak_count *v360;
  unint64_t *v361;
  unint64_t v362;
  unint64_t v363;
  unint64_t *v364;
  _WORD *v365;
  uint64_t v366;
  std::__shared_weak_count *v367;
  unint64_t *v368;
  unint64_t v369;
  unint64_t v370;
  unint64_t *v371;
  _WORD *v372;
  uint64_t v373;
  std::__shared_weak_count *v374;
  unint64_t *v375;
  unint64_t v376;
  unint64_t v377;
  unint64_t *v378;
  _DWORD *v379;
  uint64_t v380;
  std::__shared_weak_count *v381;
  unint64_t *v382;
  unint64_t v383;
  unint64_t v384;
  unint64_t *v385;
  int v386;
  int v387;
  uint64_t v388;
  uint64_t v389;
  _BYTE *v390;
  uint64_t v391;
  std::__shared_weak_count *v392;
  unint64_t *v393;
  unint64_t v394;
  unint64_t v395;
  int v396;
  int v397;
  int v398;
  _BYTE *v399;
  _BYTE *v400;
  int v401;
  int v402;
  int v403;
  uint64_t v404;
  uint64_t v405;
  _BYTE *v406;
  uint64_t v407;
  std::__shared_weak_count *v408;
  unint64_t *v409;
  unint64_t v410;
  unint64_t v411;
  int v412;
  int v413;
  int v414;
  _BYTE *v415;
  _BYTE *v416;
  int v417;
  _DWORD *v418;
  uint64_t v419;
  std::__shared_weak_count *v420;
  unint64_t *v421;
  unint64_t v422;
  unint64_t v423;
  unint64_t *v424;
  unint64_t *v425;
  unint64_t *p_shared_owners;
  int v427;
  int v428;
  uint64_t v429;
  uint64_t v430;
  unsigned __int32 *v431;
  uint64_t v432;
  std::__shared_weak_count *v433;
  unint64_t *v434;
  unint64_t v435;
  unint64_t v436;
  int v437;
  int v438;
  int v439;
  unsigned __int32 v440;
  int v441;
  unsigned __int32 *v442;
  int v443;
  int v444;
  uint64_t v445;
  uint64_t v446;
  _WORD *v447;
  uint64_t v448;
  std::__shared_weak_count *v449;
  unint64_t *v450;
  unint64_t v451;
  unint64_t v452;
  int v453;
  uint64_t v454;
  int v455;
  __int16 v456;
  int v457;
  _WORD *v458;
  _WORD *v459;
  int v460;
  unint64_t *v461;
  int v462;
  int v463;
  uint64_t v464;
  uint64_t v465;
  unsigned __int32 *v466;
  uint64_t v467;
  std::__shared_weak_count *v468;
  unint64_t *v469;
  unint64_t v470;
  unint64_t v471;
  int v472;
  int v473;
  int v474;
  unsigned __int32 v475;
  int v476;
  unsigned __int32 *v477;
  unint64_t *v478;
  _WORD *v479;
  uint64_t v480;
  std::__shared_weak_count *v481;
  unint64_t *v482;
  unint64_t v483;
  unint64_t v484;
  unint64_t *v485;
  __int16 *v486;
  uint64_t v487;
  std::__shared_weak_count *v488;
  unint64_t *v489;
  unint64_t v490;
  unint64_t v491;
  unint64_t *v492;
  int v493;
  int v494;
  uint64_t v495;
  uint64_t v496;
  _BYTE *v497;
  uint64_t v498;
  std::__shared_weak_count *v499;
  unint64_t *v500;
  unint64_t v501;
  unint64_t v502;
  int v503;
  int v504;
  int v505;
  _BYTE *v506;
  _BYTE *v507;
  int v508;
  int v509;
  int v510;
  uint64_t v511;
  uint64_t v512;
  _WORD *v513;
  uint64_t v514;
  std::__shared_weak_count *v515;
  unint64_t *v516;
  unint64_t v517;
  unint64_t v518;
  int v519;
  uint64_t v520;
  int v521;
  __int16 v522;
  int v523;
  _WORD *v524;
  _WORD *v525;
  int v526;
  int v527;
  int v528;
  uint64_t v529;
  uint64_t v530;
  _BYTE *v531;
  uint64_t v532;
  std::__shared_weak_count *v533;
  unint64_t *v534;
  unint64_t v535;
  unint64_t v536;
  int v537;
  int v538;
  int v539;
  _BYTE *v540;
  _BYTE *v541;
  int v542;
  int v543;
  uint64_t v544;
  char *v545;
  uint64_t v546;
  std::__shared_weak_count *v547;
  unint64_t *v548;
  unint64_t v549;
  unint64_t v550;
  int v551;
  int v552;
  int ii;
  int v554;
  char *v555;
  int v556;
  uint64_t v557;
  char *v558;
  uint64_t v559;
  std::__shared_weak_count *v560;
  unint64_t *v561;
  unint64_t v562;
  unint64_t v563;
  int v564;
  int v565;
  int jj;
  int v567;
  char *v568;
  int v569;
  uint64_t v570;
  char *v571;
  uint64_t v572;
  std::__shared_weak_count *v573;
  unint64_t *v574;
  unint64_t v575;
  unint64_t v576;
  int v577;
  int v578;
  int k;
  int v580;
  char *v581;
  void *v582;
  uint64_t v583;
  std::__shared_weak_count *v584;
  unint64_t *v585;
  unint64_t v586;
  unint64_t v587;
  int v588;
  uint64_t v589;
  char *v590;
  uint64_t v591;
  std::__shared_weak_count *v592;
  unint64_t *v593;
  unint64_t v594;
  unint64_t v595;
  int v596;
  int v597;
  int j;
  int v599;
  char *v600;
  int v601;
  uint64_t v602;
  char *v603;
  uint64_t v604;
  std::__shared_weak_count *v605;
  unint64_t *v606;
  unint64_t v607;
  unint64_t v608;
  int v609;
  int v610;
  int i;
  int v612;
  char *v613;
  void *v614;
  uint64_t v615;
  std::__shared_weak_count *v616;
  unint64_t *v617;
  unint64_t v618;
  unint64_t v619;
  void *v620;
  uint64_t v621;
  std::__shared_weak_count *v622;
  unint64_t *v623;
  unint64_t v624;
  unint64_t v625;
  int v626;
  uint64_t v627;
  char *v628;
  uint64_t v629;
  std::__shared_weak_count *v630;
  unint64_t *v631;
  unint64_t v632;
  unint64_t v633;
  int v634;
  int v635;
  int mm;
  int v637;
  char *v638;
  int v639;
  uint64_t v640;
  char *v641;
  uint64_t v642;
  std::__shared_weak_count *v643;
  unint64_t *v644;
  unint64_t v645;
  unint64_t v646;
  int v647;
  int v648;
  int kk;
  int v650;
  char *v651;
  int v652;
  uint64_t v653;
  char *v654;
  uint64_t v655;
  std::__shared_weak_count *v656;
  unint64_t *v657;
  unint64_t v658;
  unint64_t v659;
  int v660;
  int v661;
  int m;
  int v663;
  char *v664;
  int v665;
  uint64_t v666;
  char *v667;
  uint64_t v668;
  std::__shared_weak_count *v669;
  unint64_t *v670;
  unint64_t v671;
  unint64_t v672;
  int v673;
  int v674;
  int n;
  int v676;
  char *v677;
  int v678;
  uint64_t v679;
  std::__shared_weak_count *v680;
  unint64_t *v681;
  unint64_t v682;
  unint64_t v683;
  int v684;
  int v685;
  uint64_t v686;
  std::__shared_weak_count *v687;
  unint64_t *v688;
  unint64_t v689;
  unint64_t v690;
  int v691;
  int v692;
  uint64_t v693;
  std::__shared_weak_count *v694;
  unint64_t *v695;
  unint64_t v696;
  unint64_t v697;
  int v698;
  int v699;
  uint64_t v700;
  std::__shared_weak_count *v701;
  unint64_t *v702;
  unint64_t v703;
  unint64_t v704;
  int v705;
  unint64_t *v706;
  int v707;
  uint64_t v708;
  std::__shared_weak_count *v709;
  unint64_t *v710;
  unint64_t v711;
  unint64_t v712;
  int v713;
  unint64_t *v714;
  int v715;
  uint64_t v716;
  std::__shared_weak_count *v717;
  unint64_t *v718;
  unint64_t v719;
  unint64_t v720;
  int v721;
  int v722;
  uint64_t v723;
  std::__shared_weak_count *v724;
  unint64_t *v725;
  unint64_t v726;
  unint64_t v727;
  int v728;
  int v729;
  uint64_t v730;
  std::__shared_weak_count *v731;
  unint64_t *v732;
  unint64_t v733;
  unint64_t v734;
  int v735;
  unint64_t *v736;
  int v737;
  uint64_t v738;
  std::__shared_weak_count *v739;
  unint64_t *v740;
  unint64_t v741;
  unint64_t v742;
  int v743;
  unint64_t *v744;
  unint64_t v745;
  unsigned __int32 *v746;
  unint64_t v747;
  unint64_t *v748;
  unint64_t v749;
  char *v750;
  unint64_t v751;
  unint64_t *v752;
  unint64_t v753;
  char *v754;
  unint64_t v755;
  unint64_t *v756;
  unint64_t *v757;
  unsigned __int32 v758;
  unsigned __int32 v759;
  unint64_t *v760;
  unsigned __int32 v761;
  unsigned __int32 v762;
  unint64_t *v763;
  unsigned __int32 v764;
  unsigned __int32 v765;
  unint64_t *v766;
  unsigned __int32 v767;
  unsigned __int32 v768;
  unint64_t *v769;
  unint64_t *v770;
  unsigned __int32 v771;
  unsigned __int32 v772;
  unint64_t *v773;
  unint64_t *v774;
  __n128 *v775;
  unint64_t v776;
  __n128 *v777;
  unint64_t v778;
  __n128 *v779;
  unint64_t v780;
  unsigned __int32 v781;
  int v782;
  __int16 ***v783;
  uint64_t v784;
  int v785;
  __int16 **v786;
  uint64_t v787;
  unint64_t v788;
  uint64_t (**v789)();
  uint64_t v790;
  std::__shared_weak_count *v791;
  void *__b;
  unsigned int v793;
  int v794;
  int v795;
  int v796;
  unsigned int v797;
  unsigned int v798;
  char v799;
  __int16 ****v800;
  unint64_t *v801;
  unsigned __int32 *v802;
  unsigned int v803;

  switch(a1)
  {
    case 0:
      sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)&unk_2245B496D, 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_22457406C);
      abort();
    case 1:
      v789 = &off_24EC22138;
      sub_2232966C4(a3, (uint64_t)&v790);
      v4 = **a2;
      if (!v4 || (v5 = (_BYTE *)v4(3)) == 0)
        sub_224071EE4();
      LOBYTE(v783) = *v5;
      if (v795 == 1)
      {
        sub_224314D48((unsigned int *)&v789, (unsigned __int8 *)&v783);
      }
      else
      {
        v800 = &v783;
        if (v793 && v794)
          sub_223CCE7C8((uint64_t)&v800, (uint64_t)&v789);
      }
      v234 = v791;
      if (!v791)
        return;
      p_shared_owners = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(p_shared_owners);
      while (__stlxr(v236 - 1, p_shared_owners));
      goto LABEL_1394;
    case 2:
      v789 = &off_24EC22278;
      sub_224167894(a3, (uint64_t)&v790);
      v145 = **a2;
      if (!v145 || (v146 = (_WORD *)v145(3)) == 0)
        sub_224071EE4();
      LOWORD(v781) = *v146;
      if (v795 == 1)
      {
        v147 = v796;
        if (v796 == v793)
        {
          v148 = v794;
          v149 = (__n128 *)__b;
          if ((_BYTE)v797 && __b)
          {
            v150 = v790;
            v151 = v791;
            if (v791)
            {
              v152 = (unint64_t *)&v791->__shared_owners_;
              do
                v153 = __ldxr(v152);
              while (__stxr(v153 + 1, v152));
              do
                v154 = __ldaxr(v152);
              while (__stlxr(v154 - 1, v152));
              if (!v154)
              {
                ((void (*)(std::__shared_weak_count *))v151->__on_zero_shared)(v151);
                std::__shared_weak_count::__release_weak(v151);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v150 + 88))(v150, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v149 = (__n128 *)__b;
          }
          v155 = (v148 * v147);
          if (!(_DWORD)v155 || v149)
          {
            if (!(_DWORD)v155)
              goto LABEL_1314;
          }
          else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v753 = v155 - ((_DWORD)v155 != 0) + 1;
          if (v753 < 0x10
            || v149 < (__n128 *)((char *)&v781 + 2) && &v781 < (unsigned __int32 *)((char *)v149 + 2 * v155))
          {
            v754 = (char *)v149;
LABEL_1312:
            v755 = v155 + 1;
            do
            {
              *(_WORD *)v754 = v781;
              v754 += 2;
              --v755;
            }
            while (v755 > 1);
            goto LABEL_1314;
          }
          v754 = (char *)v149 + 2 * (v753 & 0xFFFFFFFFFFFFFFF0);
          v155 -= v753 & 0xFFFFFFFFFFFFFFF0;
          v6 = (__n128)vld1q_dup_s16((const __int16 *)&v781);
          v779 = v149 + 1;
          v780 = v753 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v779[-1] = v6;
            *v779 = v6;
            v779 += 2;
            v780 -= 16;
          }
          while (v780);
          if (v753 != (v753 & 0xFFFFFFFFFFFFFFF0))
            goto LABEL_1312;
        }
        else
        {
          HIBYTE(v782) = 0;
          v788 = v793;
          v800 = (__int16 ****)((char *)&v782 + 3);
          v801 = &v788;
          v802 = &v781;
          if (v793 && v794)
          {
            LODWORD(v783) = 0;
            HIDWORD(v783) = v793 - 1;
            LODWORD(v784) = 1;
            HIDWORD(v784) = v794 - 1;
            v785 = v796;
            v620 = __b;
            if ((_BYTE)v797 && __b)
            {
              v621 = v790;
              v622 = v791;
              if (v791)
              {
                v623 = (unint64_t *)&v791->__shared_owners_;
                do
                  v624 = __ldxr(v623);
                while (__stxr(v624 + 1, v623));
                do
                  v625 = __ldaxr(v623);
                while (__stlxr(v625 - 1, v623));
                if (!v625)
                {
                  ((void (*)(std::__shared_weak_count *))v622->__on_zero_shared)(v622);
                  std::__shared_weak_count::__release_weak(v622);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *, void *))(*(_QWORD *)v621 + 88))(v621, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297", v620);
              v620 = __b;
            }
            v786 = 0;
            v787 = 0;
            sub_223CD3698((uint64_t)&v783, (uint64_t)&v786, (uint64_t)&v800, (unint64_t)v620);
          }
        }
      }
      else
      {
        v800 = (__int16 ****)&v781;
        if (v793 && v794)
          sub_223CD38A8((uint64_t)&v800, (uint64_t)&v789);
      }
LABEL_1314:
      v234 = v791;
      if (!v791)
        return;
      v756 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v756);
      while (__stlxr(v236 - 1, v756));
      goto LABEL_1394;
    case 3:
      v789 = &off_24EC218E0;
      sub_223298F3C(a3, (uint64_t)&v790);
      v134 = **a2;
      if (!v134 || (v135 = (_WORD *)v134(3)) == 0)
        sub_224071EE4();
      LOWORD(v781) = *v135;
      if (v795 == 1)
      {
        v136 = v796;
        if (v796 == v793)
        {
          v137 = v794;
          v138 = (__n128 *)__b;
          if ((_BYTE)v797 && __b)
          {
            v139 = v790;
            v140 = v791;
            if (v791)
            {
              v141 = (unint64_t *)&v791->__shared_owners_;
              do
                v142 = __ldxr(v141);
              while (__stxr(v142 + 1, v141));
              do
                v143 = __ldaxr(v141);
              while (__stlxr(v143 - 1, v141));
              if (!v143)
              {
                ((void (*)(std::__shared_weak_count *))v140->__on_zero_shared)(v140);
                std::__shared_weak_count::__release_weak(v140);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v139 + 88))(v139, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v138 = (__n128 *)__b;
          }
          v144 = (v137 * v136);
          if (!(_DWORD)v144 || v138)
          {
            if (!(_DWORD)v144)
              goto LABEL_1303;
          }
          else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v749 = v144 - ((_DWORD)v144 != 0) + 1;
          if (v749 < 0x10
            || v138 < (__n128 *)((char *)&v781 + 2) && &v781 < (unsigned __int32 *)((char *)v138 + 2 * v144))
          {
            v750 = (char *)v138;
LABEL_1301:
            v751 = v144 + 1;
            do
            {
              v6.n128_u16[0] = v781;
              *(_WORD *)v750 = v781;
              v750 += 2;
              --v751;
            }
            while (v751 > 1);
            goto LABEL_1303;
          }
          v750 = (char *)v138 + 2 * (v749 & 0xFFFFFFFFFFFFFFF0);
          v144 -= v749 & 0xFFFFFFFFFFFFFFF0;
          v6 = (__n128)vld1q_dup_s16((const __int16 *)&v781);
          v777 = v138 + 1;
          v778 = v749 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v777[-1] = v6;
            *v777 = v6;
            v777 += 2;
            v778 -= 16;
          }
          while (v778);
          if (v749 != (v749 & 0xFFFFFFFFFFFFFFF0))
            goto LABEL_1301;
        }
        else
        {
          HIBYTE(v782) = 0;
          v788 = v793;
          v800 = (__int16 ****)((char *)&v782 + 3);
          v801 = &v788;
          v802 = &v781;
          if (v793 && v794)
          {
            LODWORD(v783) = 0;
            HIDWORD(v783) = v793 - 1;
            LODWORD(v784) = 1;
            HIDWORD(v784) = v794 - 1;
            v785 = v796;
            v614 = __b;
            if ((_BYTE)v797 && __b)
            {
              v615 = v790;
              v616 = v791;
              if (v791)
              {
                v617 = (unint64_t *)&v791->__shared_owners_;
                do
                  v618 = __ldxr(v617);
                while (__stxr(v618 + 1, v617));
                do
                  v619 = __ldaxr(v617);
                while (__stlxr(v619 - 1, v617));
                if (!v619)
                {
                  ((void (*)(std::__shared_weak_count *))v616->__on_zero_shared)(v616);
                  std::__shared_weak_count::__release_weak(v616);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *, void *))(*(_QWORD *)v615 + 88))(v615, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297", v614);
              v614 = __b;
            }
            v786 = 0;
            v787 = 0;
            v6.n128_u64[0] = sub_224314F04(&v783, (uint64_t)&v786, (uint64_t)&v800, (unint64_t)v614, v6);
          }
        }
      }
      else
      {
        v800 = (__int16 ****)&v781;
        if (v793 && v794)
          v6.n128_u64[0] = sub_22320BA94((__int16 **)&v800, (uint64_t)&v789);
      }
LABEL_1303:
      v234 = v791;
      if (!v791)
        return;
      v752 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v752);
      while (__stlxr(v236 - 1, v752));
      goto LABEL_1394;
    case 4:
      v789 = &off_24EC21FE8;
      sub_223299B3C(a3, (uint64_t)&v790);
      v75 = **a2;
      if (!v75 || (v76 = (unsigned __int32 *)v75(3)) == 0)
        sub_224071EE4();
      v6.n128_u32[0] = *v76;
      v781 = *v76;
      if (v795 == 1)
      {
        v77 = v796;
        if (v796 == v793)
        {
          v78 = v794;
          v79 = (__n128 *)__b;
          if ((_BYTE)v797 && __b)
          {
            v80 = v790;
            v81 = v791;
            if (v791)
            {
              v82 = (unint64_t *)&v791->__shared_owners_;
              do
                v83 = __ldxr(v82);
              while (__stxr(v83 + 1, v82));
              do
                v84 = __ldaxr(v82);
              while (__stlxr(v84 - 1, v82));
              if (!v84)
              {
                ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                std::__shared_weak_count::__release_weak(v81);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v80 + 88))(v80, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v79 = (__n128 *)__b;
          }
          v85 = (v78 * v77);
          if (!(_DWORD)v85 || v79)
          {
            if (!(_DWORD)v85)
              goto LABEL_1292;
          }
          else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v745 = v85 - ((_DWORD)v85 != 0) + 1;
          if (v745 < 0x10 || v79 < (__n128 *)&v782 && &v781 < (unsigned __int32 *)v79 + v85)
          {
            v746 = (unsigned __int32 *)v79;
LABEL_1290:
            v747 = v85 + 1;
            do
            {
              v6.n128_u32[0] = v781;
              *v746++ = v781;
              --v747;
            }
            while (v747 > 1);
            goto LABEL_1292;
          }
          v746 = (unsigned __int32 *)v79 + (v745 & 0xFFFFFFFFFFFFFFF8);
          v85 -= v745 & 0xFFFFFFFFFFFFFFF8;
          v6 = (__n128)vld1q_dup_f32((const float *)&v781);
          v775 = v79 + 1;
          v776 = v745 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v775[-1] = v6;
            *v775 = v6;
            v775 += 2;
            v776 -= 8;
          }
          while (v776);
          if (v745 != (v745 & 0xFFFFFFFFFFFFFFF8))
            goto LABEL_1290;
        }
        else
        {
          HIBYTE(v782) = 0;
          v788 = v793;
          v800 = (__int16 ****)((char *)&v782 + 3);
          v801 = &v788;
          v802 = &v781;
          if (v793 && v794)
          {
            LODWORD(v783) = 0;
            HIDWORD(v783) = v793 - 1;
            LODWORD(v784) = 1;
            HIDWORD(v784) = v794 - 1;
            v785 = v796;
            v582 = __b;
            if ((_BYTE)v797 && __b)
            {
              v583 = v790;
              v584 = v791;
              if (v791)
              {
                v585 = (unint64_t *)&v791->__shared_owners_;
                do
                  v586 = __ldxr(v585);
                while (__stxr(v586 + 1, v585));
                do
                  v587 = __ldaxr(v585);
                while (__stlxr(v587 - 1, v585));
                if (!v587)
                {
                  ((void (*)(std::__shared_weak_count *))v584->__on_zero_shared)(v584);
                  std::__shared_weak_count::__release_weak(v584);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *, void *))(*(_QWORD *)v583 + 88))(v583, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297", v582);
              v582 = __b;
            }
            v786 = 0;
            v787 = 0;
            sub_223469FB8((uint64_t)&v783, (uint64_t)&v786, (uint64_t)&v800, (unint64_t)v582);
          }
        }
      }
      else
      {
        v800 = (__int16 ****)&v781;
        if (v793 && v794)
          v6.n128_f32[0] = sub_2236B50B8((_DWORD **)&v800, (uint64_t)&v789);
      }
LABEL_1292:
      v234 = v791;
      if (!v791)
        return;
      v748 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v748);
      while (__stlxr(v236 - 1, v748));
      goto LABEL_1394;
    case 5:
      v789 = &off_24EC22370;
      sub_22430A92C((uint64_t)&v790, a3);
      v114 = **a2;
      if (!v114 || (v115 = (unsigned __int8 *)v114(3)) == 0)
        sub_224071EE4();
      v116 = *v115;
      if (v796 == 1)
      {
        v117 = v797;
        v118 = v793;
        v119 = v794;
        if (v797 == v793)
        {
          v120 = v798;
          v118 = v794 * v797;
          if (v798 == (_DWORD)v118)
          {
            v121 = v795;
            v122 = __b;
            if (v799 && __b)
            {
              v123 = v790;
              v124 = v791;
              if (v791)
              {
                v125 = (unint64_t *)&v791->__shared_owners_;
                do
                  v126 = __ldxr(v125);
                while (__stxr(v126 + 1, v125));
                do
                  v127 = __ldaxr(v125);
                while (__stlxr(v127 - 1, v125));
                if (!v127)
                {
                  ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
                  std::__shared_weak_count::__release_weak(v124);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v123 + 88))(v123, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v122 = __b;
            }
            v128 = (v121 * v120);
            v129 = v116;
            goto LABEL_1210;
          }
          if (v797)
          {
            if (v794)
            {
              v707 = v795;
              if (v795)
              {
                v603 = (char *)__b;
                if (v799 && __b)
                {
                  v708 = v790;
                  v709 = v791;
                  if (v791)
                  {
                    v710 = (unint64_t *)&v791->__shared_owners_;
                    do
                      v711 = __ldxr(v710);
                    while (__stxr(v711 + 1, v710));
                    do
                      v712 = __ldaxr(v710);
                    while (__stlxr(v712 - 1, v710));
                    if (!v712)
                    {
                      ((void (*)(std::__shared_weak_count *))v709->__on_zero_shared)(v709);
                      std::__shared_weak_count::__release_weak(v709);
                    }
                  }
                  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v708 + 88))(v708, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                  v603 = (char *)__b;
                }
                v713 = v707 - 1;
                if (v707 != 1)
                {
                  do
                  {
                    memset(v603, v116, v118);
                    v603 += v120;
                    --v713;
                  }
                  while (v713);
                }
LABEL_1209:
                v122 = v603;
                v129 = v116;
                v128 = v118;
LABEL_1210:
                memset(v122, v129, v128);
              }
            }
          }
        }
        else if (v793)
        {
          if (v794)
          {
            v601 = v795;
            if (v795)
            {
              v602 = v798;
              v603 = (char *)__b;
              if (v799 && __b)
              {
                v604 = v790;
                v605 = v791;
                if (v791)
                {
                  v606 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v607 = __ldxr(v606);
                  while (__stxr(v607 + 1, v606));
                  do
                    v608 = __ldaxr(v606);
                  while (__stlxr(v608 - 1, v606));
                  if (!v608)
                  {
                    ((void (*)(std::__shared_weak_count *))v605->__on_zero_shared)(v605);
                    std::__shared_weak_count::__release_weak(v605);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v604 + 88))(v604, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v603 = (char *)__b;
              }
              v609 = v119 - 1;
              v610 = v601 - 1;
              if (v610)
              {
                if (v609)
                {
                  for (i = 0; i != v610; ++i)
                  {
                    v612 = v609;
                    v613 = v603;
                    do
                    {
                      memset(v613, v116, v118);
                      v613 += v117;
                      --v612;
                    }
                    while (v612);
                    memset(v613, v116, v118);
                    v603 += v602;
                  }
                }
                else
                {
                  do
                  {
                    memset(v603, v116, v118);
                    v603 += v602;
                    --v610;
                  }
                  while (v610);
                }
              }
              for (; v609; --v609)
              {
                memset(v603, v116, v118);
                v603 += v117;
              }
              goto LABEL_1209;
            }
          }
        }
      }
      else if (v793)
      {
        v402 = v794;
        if (v794)
        {
          v403 = v795;
          if (v795)
          {
            v404 = v797;
            v405 = v798;
            v406 = __b;
            if (v799 && __b)
            {
              v407 = v790;
              v408 = v791;
              if (v791)
              {
                v409 = (unint64_t *)&v791->__shared_owners_;
                do
                  v410 = __ldxr(v409);
                while (__stxr(v410 + 1, v409));
                do
                  v411 = __ldaxr(v409);
                while (__stlxr(v411 - 1, v409));
                if (!v411)
                {
                  ((void (*)(std::__shared_weak_count *))v408->__on_zero_shared)(v408);
                  std::__shared_weak_count::__release_weak(v408);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v407 + 88))(v407, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v406 = __b;
            }
            v412 = v402 - 1;
            v413 = v403 - 1;
            if (v403 != 1)
            {
              if (v402 == 1)
              {
                do
                {
                  *v406 = v116;
                  v406[1] = v116;
                  v406 += v405;
                  --v413;
                }
                while (v413);
              }
              else
              {
                v414 = 0;
                v415 = v406 + 1;
                do
                {
                  v416 = v415;
                  v417 = v402 - 1;
                  do
                  {
                    *(v416 - 1) = v116;
                    *v416 = v116;
                    v416 += v404;
                    --v417;
                  }
                  while (v417);
                  *(v416 - 1) = v116;
                  *v416 = v116;
                  v406 += v405;
                  ++v414;
                  v415 += v405;
                }
                while (v414 != v413);
              }
            }
            if (v402 != 1)
            {
              do
              {
                *v406 = v116;
                v406[1] = v116;
                v406 += v404;
                --v412;
              }
              while (v412);
            }
            *v406 = v116;
            v406[1] = v116;
          }
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v714 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v714);
      while (__stlxr(v236 - 1, v714));
      goto LABEL_1394;
    case 6:
      v789 = &off_24EC22468;
      sub_22430ACA4((uint64_t)&v790, a3);
      v73 = **a2;
      if (!v73 || (v74 = (_WORD *)v73(3)) == 0)
        sub_224071EE4();
      LOWORD(v786) = *v74;
      if (v796 == 1)
      {
        sub_224315114((uint64_t)&v789, (const __int16 *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          v800 = &v783;
          sub_224315840((uint64_t)&v800, (uint64_t)&v789);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v343 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v343);
      while (__stlxr(v236 - 1, v343));
      goto LABEL_1394;
    case 7:
      v789 = &off_24EC22560;
      sub_22430B020((uint64_t)&v790, a3);
      v63 = **a2;
      if (!v63 || (v64 = (_WORD *)v63(3)) == 0)
        sub_224071EE4();
      LOWORD(v786) = *v64;
      if (v796 == 1)
      {
        sub_2243159E8((uint64_t)&v789, (const __int16 *)&v786, v6);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          v800 = &v783;
          v6.n128_u64[0] = sub_224316114((__int16 ***)&v800, (uint64_t)&v789);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v320 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v320);
      while (__stlxr(v236 - 1, v320));
      goto LABEL_1394;
    case 8:
      v789 = &off_24EC22658;
      sub_22430B39C((uint64_t)&v790, a3);
      v132 = **a2;
      if (!v132 || (v133 = (unsigned __int32 *)v132(3)) == 0)
        sub_224071EE4();
      v6.n128_u32[0] = *v133;
      LODWORD(v786) = *v133;
      if (v796 == 1)
      {
        sub_2243162F0((uint64_t)&v789, (const float *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          v800 = &v783;
          v6.n128_f32[0] = sub_224316A60(&v800, (uint64_t)&v789);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v425 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v425);
      while (__stlxr(v236 - 1, v425));
      goto LABEL_1394;
    case 9:
      v789 = &off_24EC22750;
      sub_22430B718((uint64_t)&v790, a3);
      v98 = **a2;
      if (!v98 || (v99 = (unsigned __int8 *)v98(3)) == 0)
        sub_224071EE4();
      v100 = *v99;
      if (v796 == 1)
      {
        v101 = v797;
        v102 = v793;
        v103 = v794;
        if (v797 == v793)
        {
          v104 = v798;
          v102 = v794 * v797;
          if (v798 == (_DWORD)v102)
          {
            v105 = v795;
            v106 = __b;
            if (v799 && __b)
            {
              v107 = v790;
              v108 = v791;
              if (v791)
              {
                v109 = (unint64_t *)&v791->__shared_owners_;
                do
                  v110 = __ldxr(v109);
                while (__stxr(v110 + 1, v109));
                do
                  v111 = __ldaxr(v109);
                while (__stlxr(v111 - 1, v109));
                if (!v111)
                {
                  ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
                  std::__shared_weak_count::__release_weak(v108);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v107 + 88))(v107, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v106 = __b;
            }
            v112 = (v105 * v104);
            v113 = v100;
            goto LABEL_1190;
          }
          if (v797)
          {
            if (v794)
            {
              v699 = v795;
              if (v795)
              {
                v590 = (char *)__b;
                if (v799 && __b)
                {
                  v700 = v790;
                  v701 = v791;
                  if (v791)
                  {
                    v702 = (unint64_t *)&v791->__shared_owners_;
                    do
                      v703 = __ldxr(v702);
                    while (__stxr(v703 + 1, v702));
                    do
                      v704 = __ldaxr(v702);
                    while (__stlxr(v704 - 1, v702));
                    if (!v704)
                    {
                      ((void (*)(std::__shared_weak_count *))v701->__on_zero_shared)(v701);
                      std::__shared_weak_count::__release_weak(v701);
                    }
                  }
                  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v700 + 88))(v700, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                  v590 = (char *)__b;
                }
                v705 = v699 - 1;
                if (v699 != 1)
                {
                  do
                  {
                    memset(v590, v100, v102);
                    v590 += v104;
                    --v705;
                  }
                  while (v705);
                }
LABEL_1189:
                v106 = v590;
                v113 = v100;
                v112 = v102;
LABEL_1190:
                memset(v106, v113, v112);
              }
            }
          }
        }
        else if (v793)
        {
          if (v794)
          {
            v588 = v795;
            if (v795)
            {
              v589 = v798;
              v590 = (char *)__b;
              if (v799 && __b)
              {
                v591 = v790;
                v592 = v791;
                if (v791)
                {
                  v593 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v594 = __ldxr(v593);
                  while (__stxr(v594 + 1, v593));
                  do
                    v595 = __ldaxr(v593);
                  while (__stlxr(v595 - 1, v593));
                  if (!v595)
                  {
                    ((void (*)(std::__shared_weak_count *))v592->__on_zero_shared)(v592);
                    std::__shared_weak_count::__release_weak(v592);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v591 + 88))(v591, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v590 = (char *)__b;
              }
              v596 = v103 - 1;
              v597 = v588 - 1;
              if (v597)
              {
                if (v596)
                {
                  for (j = 0; j != v597; ++j)
                  {
                    v599 = v596;
                    v600 = v590;
                    do
                    {
                      memset(v600, v100, v102);
                      v600 += v101;
                      --v599;
                    }
                    while (v599);
                    memset(v600, v100, v102);
                    v590 += v589;
                  }
                }
                else
                {
                  do
                  {
                    memset(v590, v100, v102);
                    v590 += v589;
                    --v597;
                  }
                  while (v597);
                }
              }
              for (; v596; --v596)
              {
                memset(v590, v100, v102);
                v590 += v101;
              }
              goto LABEL_1189;
            }
          }
        }
      }
      else if (v793)
      {
        v386 = v794;
        if (v794)
        {
          v387 = v795;
          if (v795)
          {
            v388 = v797;
            v389 = v798;
            v390 = __b;
            if (v799 && __b)
            {
              v391 = v790;
              v392 = v791;
              if (v791)
              {
                v393 = (unint64_t *)&v791->__shared_owners_;
                do
                  v394 = __ldxr(v393);
                while (__stxr(v394 + 1, v393));
                do
                  v395 = __ldaxr(v393);
                while (__stlxr(v395 - 1, v393));
                if (!v395)
                {
                  ((void (*)(std::__shared_weak_count *))v392->__on_zero_shared)(v392);
                  std::__shared_weak_count::__release_weak(v392);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v391 + 88))(v391, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v390 = __b;
            }
            v396 = v386 - 1;
            v397 = v387 - 1;
            if (v387 != 1)
            {
              if (v386 == 1)
              {
                do
                {
                  *v390 = v100;
                  v390[1] = v100;
                  v390[2] = v100;
                  v390 += v389;
                  --v397;
                }
                while (v397);
              }
              else
              {
                v398 = 0;
                v399 = v390 + 2;
                do
                {
                  v400 = v399;
                  v401 = v386 - 1;
                  do
                  {
                    *(v400 - 2) = v100;
                    *(v400 - 1) = v100;
                    *v400 = v100;
                    v400 += v388;
                    --v401;
                  }
                  while (v401);
                  *(v400 - 2) = v100;
                  *(v400 - 1) = v100;
                  *v400 = v100;
                  v390 += v389;
                  ++v398;
                  v399 += v389;
                }
                while (v398 != v397);
              }
            }
            if (v386 != 1)
            {
              do
              {
                *v390 = v100;
                v390[1] = v100;
                v390[2] = v100;
                v390 += v388;
                --v396;
              }
              while (v396);
            }
            *v390 = v100;
            v390[1] = v100;
            v390[2] = v100;
          }
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v706 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v706);
      while (__stlxr(v236 - 1, v706));
      goto LABEL_1394;
    case 10:
      v789 = &off_24EC22848;
      sub_22430BA90((uint64_t)&v790, a3);
      v172 = **a2;
      if (!v172 || (v173 = (_WORD *)v172(3)) == 0)
        sub_224071EE4();
      LOWORD(v786) = *v173;
      if (v796 == 1)
      {
        sub_224315114((uint64_t)&v789, (const __int16 *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          v800 = &v783;
          sub_224316C08((uint64_t)&v800, (uint64_t)&v789);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v461 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v461);
      while (__stlxr(v236 - 1, v461));
      goto LABEL_1394;
    case 11:
      v789 = &off_24EC22940;
      sub_22430BE0C((uint64_t)&v790, a3);
      v170 = **a2;
      if (!v170 || (v171 = (_WORD *)v170(3)) == 0)
        sub_224071EE4();
      LOWORD(v800) = *v171;
      if (v796 == 1)
      {
        sub_2243159E8((uint64_t)&v789, (const __int16 *)&v800, v6);
      }
      else if (v793)
      {
        v443 = v794;
        if (v794)
        {
          v444 = v795;
          if (v795)
          {
            v446 = v797;
            v445 = v798;
            v447 = __b;
            if (v799 && __b)
            {
              v448 = v790;
              v449 = v791;
              if (v791)
              {
                v450 = (unint64_t *)&v791->__shared_owners_;
                do
                  v451 = __ldxr(v450);
                while (__stxr(v451 + 1, v450));
                do
                  v452 = __ldaxr(v450);
                while (__stlxr(v452 - 1, v450));
                if (!v452)
                {
                  ((void (*)(std::__shared_weak_count *))v449->__on_zero_shared)(v449);
                  std::__shared_weak_count::__release_weak(v449);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v448 + 88))(v448, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v447 = __b;
            }
            v453 = v443 - 1;
            v454 = 2 * v446;
            v455 = v444 - 1;
            if (v444 == 1)
            {
              v456 = (__int16)v800;
            }
            else
            {
              v456 = (__int16)v800;
              if (v443 == 1)
              {
                do
                {
                  *v447 = v456;
                  v447[1] = v456;
                  v447[2] = v456;
                  v447 += v445;
                  --v455;
                }
                while (v455);
              }
              else
              {
                v457 = 0;
                v458 = v447 + 2;
                do
                {
                  v459 = v458;
                  v460 = v443 - 1;
                  do
                  {
                    *(v459 - 2) = v456;
                    *(v459 - 1) = v456;
                    *v459 = v456;
                    v459 = (_WORD *)((char *)v459 + v454);
                    --v460;
                  }
                  while (v460);
                  *(v459 - 2) = v456;
                  *(v459 - 1) = v456;
                  *v459 = v456;
                  v447 += v445;
                  ++v457;
                  v458 += v445;
                }
                while (v457 != v455);
              }
            }
            if (v443 != 1)
            {
              do
              {
                *v447 = v456;
                v456 = (__int16)v800;
                v447[1] = (_WORD)v800;
                v447[2] = v456;
                v447 = (_WORD *)((char *)v447 + v454);
                --v453;
              }
              while (v453);
            }
            *v447 = v456;
            v6.n128_u16[0] = (unsigned __int16)v800;
            v447[1] = (_WORD)v800;
            v447[2] = v6.n128_u16[0];
          }
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v770 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v770);
      while (__stlxr(v236 - 1, v770));
      goto LABEL_1394;
    case 12:
      v789 = &off_24EC22A38;
      sub_22430C188((uint64_t)&v790, a3);
      v25 = **a2;
      if (!v25 || (v26 = (unsigned __int32 *)v25(3)) == 0)
        sub_224071EE4();
      v6.n128_u32[0] = *v26;
      LODWORD(v786) = *v26;
      if (v796 == 1)
      {
        sub_2243162F0((uint64_t)&v789, (const float *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          v800 = &v783;
          v6.n128_f32[0] = sub_224316DD8(&v800, (uint64_t)&v789);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v271 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v271);
      while (__stlxr(v236 - 1, v271));
      goto LABEL_1394;
    case 13:
      v789 = &off_24EC22B30;
      sub_22430C504((uint64_t)&v790, a3);
      v45 = **a2;
      if (!v45 || (v46 = (unsigned __int8 *)v45(3)) == 0)
        sub_224071EE4();
      v47 = *v46;
      if (v796 != 1)
      {
        if (v793)
        {
          v296 = v794;
          if (v794)
          {
            v297 = v795;
            if (v795)
            {
              v298 = v797;
              v299 = v798;
              v300 = (unsigned __int32 *)__b;
              if (v799 && __b)
              {
                v301 = v790;
                v302 = v791;
                if (v791)
                {
                  v303 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v304 = __ldxr(v303);
                  while (__stxr(v304 + 1, v303));
                  do
                    v305 = __ldaxr(v303);
                  while (__stlxr(v305 - 1, v303));
                  if (!v305)
                  {
                    ((void (*)(std::__shared_weak_count *))v302->__on_zero_shared)(v302);
                    std::__shared_weak_count::__release_weak(v302);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v301 + 88))(v301, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v300 = (unsigned __int32 *)__b;
              }
              v306 = v296 - 1;
              v6.n128_u64[0] = (unint64_t)vdup_n_s16(v47);
              v307 = v297 - 1;
              if (v297 != 1)
              {
                if (v296 == 1)
                {
                  v764 = vmovn_s16((int16x8_t)v6).u32[0];
                  do
                  {
                    *v300 = v764;
                    v300 = (unsigned __int32 *)((char *)v300 + v299);
                    --v307;
                  }
                  while (v307);
                }
                else
                {
                  v308 = 0;
                  v309 = vmovn_s16((int16x8_t)v6).u32[0];
                  do
                  {
                    v310 = v296 - 1;
                    v311 = v300;
                    do
                    {
                      *v311 = v309;
                      v311 = (unsigned __int32 *)((char *)v311 + v298);
                      --v310;
                    }
                    while (v310);
                    *v311 = v309;
                    v300 = (unsigned __int32 *)((char *)v300 + v299);
                    ++v308;
                  }
                  while (v308 != v307);
                }
              }
              if (v296 != 1)
              {
                v765 = vmovn_s16((int16x8_t)v6).u32[0];
                do
                {
                  *v300 = v765;
                  v300 = (unsigned __int32 *)((char *)v300 + v298);
                  --v306;
                }
                while (v306);
              }
              v6.n128_u64[0] = (unint64_t)vdup_n_s8(v47);
              *v300 = v6.n128_u32[0];
            }
          }
        }
        goto LABEL_1355;
      }
      v48 = v797;
      v49 = v793;
      v50 = v794;
      if (v797 == v793)
      {
        v51 = v798;
        v49 = v794 * v797;
        if (v798 == (_DWORD)v49)
        {
          v52 = v795;
          v53 = __b;
          if (v799 && __b)
          {
            v54 = v790;
            v55 = v791;
            if (v791)
            {
              v56 = (unint64_t *)&v791->__shared_owners_;
              do
                v57 = __ldxr(v56);
              while (__stxr(v57 + 1, v56));
              do
                v58 = __ldaxr(v56);
              while (__stlxr(v58 - 1, v56));
              if (!v58)
              {
                ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
                std::__shared_weak_count::__release_weak(v55);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v54 + 88))(v54, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v53 = __b;
          }
          memset(v53, v47, (v52 * v51));
          goto LABEL_1355;
        }
        if (v797)
        {
          if (v794)
          {
            v692 = v795;
            if (v795)
            {
              v571 = (char *)__b;
              if (v799 && __b)
              {
                v693 = v790;
                v694 = v791;
                if (v791)
                {
                  v695 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v696 = __ldxr(v695);
                  while (__stxr(v696 + 1, v695));
                  do
                    v697 = __ldaxr(v695);
                  while (__stlxr(v697 - 1, v695));
                  if (!v697)
                  {
                    ((void (*)(std::__shared_weak_count *))v694->__on_zero_shared)(v694);
                    std::__shared_weak_count::__release_weak(v694);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v693 + 88))(v693, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v571 = (char *)__b;
              }
              v698 = v692 - 1;
              if (v692 != 1)
              {
                do
                {
                  memset(v571, v47, v49);
                  v571 += v51;
                  --v698;
                }
                while (v698);
              }
LABEL_1174:
              memset(v571, v47, v49);
            }
          }
        }
      }
      else if (v793)
      {
        if (v794)
        {
          v569 = v795;
          if (v795)
          {
            v570 = v798;
            v571 = (char *)__b;
            if (v799 && __b)
            {
              v572 = v790;
              v573 = v791;
              if (v791)
              {
                v574 = (unint64_t *)&v791->__shared_owners_;
                do
                  v575 = __ldxr(v574);
                while (__stxr(v575 + 1, v574));
                do
                  v576 = __ldaxr(v574);
                while (__stlxr(v576 - 1, v574));
                if (!v576)
                {
                  ((void (*)(std::__shared_weak_count *))v573->__on_zero_shared)(v573);
                  std::__shared_weak_count::__release_weak(v573);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v572 + 88))(v572, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v571 = (char *)__b;
            }
            v577 = v50 - 1;
            v578 = v569 - 1;
            if (v578)
            {
              if (v577)
              {
                for (k = 0; k != v578; ++k)
                {
                  v580 = v577;
                  v581 = v571;
                  do
                  {
                    memset(v581, v47, v49);
                    v581 += v48;
                    --v580;
                  }
                  while (v580);
                  memset(v581, v47, v49);
                  v571 += v570;
                }
              }
              else
              {
                do
                {
                  memset(v571, v47, v49);
                  v571 += v570;
                  --v578;
                }
                while (v578);
              }
            }
            for (; v577; --v577)
            {
              memset(v571, v47, v49);
              v571 += v48;
            }
            goto LABEL_1174;
          }
        }
      }
LABEL_1355:
      v234 = v791;
      if (!v791)
        return;
      v766 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v766);
      while (__stlxr(v236 - 1, v766));
      goto LABEL_1394;
    case 14:
      v789 = &off_24EC22C28;
      sub_22430C87C((uint64_t)&v790, a3);
      v43 = **a2;
      if (!v43 || (v44 = (_WORD *)v43(3)) == 0)
        sub_224071EE4();
      LOWORD(v786) = *v44;
      if (v796 == 1)
      {
        sub_224315114((uint64_t)&v789, (const __int16 *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v289 = __b;
          if (v799 && __b)
          {
            v290 = v790;
            v291 = v791;
            if (v791)
            {
              v292 = (unint64_t *)&v791->__shared_owners_;
              do
                v293 = __ldxr(v292);
              while (__stxr(v293 + 1, v292));
              do
                v294 = __ldaxr(v292);
              while (__stlxr(v294 - 1, v292));
              if (!v294)
              {
                ((void (*)(std::__shared_weak_count *))v291->__on_zero_shared)(v291);
                std::__shared_weak_count::__release_weak(v291);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v290 + 88))(v290, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v289 = __b;
          }
          sub_224316FA8(&v800, (_WORD **)&v783, v289);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v295 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v295);
      while (__stlxr(v236 - 1, v295));
      goto LABEL_1394;
    case 15:
      v789 = &off_24EC22D20;
      sub_22430CBF8((uint64_t)&v790, a3);
      v192 = **a2;
      if (!v192 || (v193 = (_WORD *)v192(3)) == 0)
        sub_224071EE4();
      LOWORD(v781) = *v193;
      if (v796 == 1)
      {
        sub_2243159E8((uint64_t)&v789, (const __int16 *)&v781, v6);
      }
      else
      {
        v788 = (unint64_t)&v781;
        if (v793 && v794 && v795)
        {
          v786 = (__int16 **)&v788;
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v486 = (__int16 *)__b;
          if (v799 && __b)
          {
            v487 = v790;
            v488 = v791;
            if (v791)
            {
              v489 = (unint64_t *)&v791->__shared_owners_;
              do
                v490 = __ldxr(v489);
              while (__stxr(v490 + 1, v489));
              do
                v491 = __ldaxr(v489);
              while (__stlxr(v491 - 1, v489));
              if (!v491)
              {
                ((void (*)(std::__shared_weak_count *))v488->__on_zero_shared)(v488);
                std::__shared_weak_count::__release_weak(v488);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *, __int16 *))(*(_QWORD *)v487 + 88))(v487, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297", v486);
            v486 = (__int16 *)__b;
          }
          v783 = 0;
          v784 = 0;
          v6.n128_u64[0] = sub_22320D4C4(&v800, (uint64_t)&v783, &v786, v486);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v492 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v492);
      while (__stlxr(v236 - 1, v492));
      goto LABEL_1394;
    case 16:
      v789 = &off_24EC22E18;
      sub_22430CF74((uint64_t)&v790, a3);
      v130 = **a2;
      if (!v130 || (v131 = (unsigned __int32 *)v130(3)) == 0)
        sub_224071EE4();
      v6.n128_u32[0] = *v131;
      LODWORD(v786) = *v131;
      if (v796 == 1)
      {
        sub_2243162F0((uint64_t)&v789, (const float *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v418 = __b;
          if (v799 && __b)
          {
            v419 = v790;
            v420 = v791;
            if (v791)
            {
              v421 = (unint64_t *)&v791->__shared_owners_;
              do
                v422 = __ldxr(v421);
              while (__stxr(v422 + 1, v421));
              do
                v423 = __ldaxr(v421);
              while (__stlxr(v423 - 1, v421));
              if (!v423)
              {
                ((void (*)(std::__shared_weak_count *))v420->__on_zero_shared)(v420);
                std::__shared_weak_count::__release_weak(v420);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v419 + 88))(v419, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v418 = __b;
          }
          v6.n128_f32[0] = sub_2243170DC(&v800, (_DWORD **)&v783, v418);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v424 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v424);
      while (__stlxr(v236 - 1, v424));
      goto LABEL_1394;
    case 17:
      v789 = &off_24EC22F10;
      sub_22430D2F0((uint64_t)&v790, a3);
      v194 = **a2;
      if (!v194 || (v195 = (unsigned __int8 *)v194(3)) == 0)
        sub_224071EE4();
      v196 = *v195;
      if (v796 == 1)
      {
        v197 = v797;
        v198 = v793;
        v199 = v794;
        if (v797 == v793)
        {
          v200 = v798;
          v198 = v794 * v797;
          if (v798 == (_DWORD)v198)
          {
            v201 = v795;
            v202 = __b;
            if (v799 && __b)
            {
              v203 = v790;
              v204 = v791;
              if (v791)
              {
                v205 = (unint64_t *)&v791->__shared_owners_;
                do
                  v206 = __ldxr(v205);
                while (__stxr(v206 + 1, v205));
                do
                  v207 = __ldaxr(v205);
                while (__stlxr(v207 - 1, v205));
                if (!v207)
                {
                  ((void (*)(std::__shared_weak_count *))v204->__on_zero_shared)(v204);
                  std::__shared_weak_count::__release_weak(v204);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v203 + 88))(v203, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v202 = __b;
            }
            v208 = (v201 * v200);
            v209 = v196;
            goto LABEL_1260;
          }
          if (v797)
          {
            if (v794)
            {
              v729 = v795;
              if (v795)
              {
                v654 = (char *)__b;
                if (v799 && __b)
                {
                  v730 = v790;
                  v731 = v791;
                  if (v791)
                  {
                    v732 = (unint64_t *)&v791->__shared_owners_;
                    do
                      v733 = __ldxr(v732);
                    while (__stxr(v733 + 1, v732));
                    do
                      v734 = __ldaxr(v732);
                    while (__stlxr(v734 - 1, v732));
                    if (!v734)
                    {
                      ((void (*)(std::__shared_weak_count *))v731->__on_zero_shared)(v731);
                      std::__shared_weak_count::__release_weak(v731);
                    }
                  }
                  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v730 + 88))(v730, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                  v654 = (char *)__b;
                }
                v735 = v729 - 1;
                if (v729 != 1)
                {
                  do
                  {
                    memset(v654, v196, v198);
                    v654 += v200;
                    --v735;
                  }
                  while (v735);
                }
LABEL_1259:
                v202 = v654;
                v209 = v196;
                v208 = v198;
LABEL_1260:
                memset(v202, v209, v208);
              }
            }
          }
        }
        else if (v793)
        {
          if (v794)
          {
            v652 = v795;
            if (v795)
            {
              v653 = v798;
              v654 = (char *)__b;
              if (v799 && __b)
              {
                v655 = v790;
                v656 = v791;
                if (v791)
                {
                  v657 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v658 = __ldxr(v657);
                  while (__stxr(v658 + 1, v657));
                  do
                    v659 = __ldaxr(v657);
                  while (__stlxr(v659 - 1, v657));
                  if (!v659)
                  {
                    ((void (*)(std::__shared_weak_count *))v656->__on_zero_shared)(v656);
                    std::__shared_weak_count::__release_weak(v656);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v655 + 88))(v655, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v654 = (char *)__b;
              }
              v660 = v199 - 1;
              v661 = v652 - 1;
              if (v661)
              {
                if (v660)
                {
                  for (m = 0; m != v661; ++m)
                  {
                    v663 = v660;
                    v664 = v654;
                    do
                    {
                      memset(v664, v196, v198);
                      v664 += v197;
                      --v663;
                    }
                    while (v663);
                    memset(v664, v196, v198);
                    v654 += v653;
                  }
                }
                else
                {
                  do
                  {
                    memset(v654, v196, v198);
                    v654 += v653;
                    --v661;
                  }
                  while (v661);
                }
              }
              for (; v660; --v660)
              {
                memset(v654, v196, v198);
                v654 += v197;
              }
              goto LABEL_1259;
            }
          }
        }
      }
      else if (v793)
      {
        v493 = v794;
        if (v794)
        {
          v494 = v795;
          if (v795)
          {
            v495 = v797;
            v496 = v798;
            v497 = __b;
            if (v799 && __b)
            {
              v498 = v790;
              v499 = v791;
              if (v791)
              {
                v500 = (unint64_t *)&v791->__shared_owners_;
                do
                  v501 = __ldxr(v500);
                while (__stxr(v501 + 1, v500));
                do
                  v502 = __ldaxr(v500);
                while (__stlxr(v502 - 1, v500));
                if (!v502)
                {
                  ((void (*)(std::__shared_weak_count *))v499->__on_zero_shared)(v499);
                  std::__shared_weak_count::__release_weak(v499);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v498 + 88))(v498, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v497 = __b;
            }
            v503 = v493 - 1;
            v504 = v494 - 1;
            if (v494 != 1)
            {
              if (v493 == 1)
              {
                do
                {
                  *v497 = v196;
                  v497[1] = v196;
                  v497[2] = v196;
                  v497 += v496;
                  --v504;
                }
                while (v504);
              }
              else
              {
                v505 = 0;
                v506 = v497 + 2;
                do
                {
                  v507 = v506;
                  v508 = v493 - 1;
                  do
                  {
                    *(v507 - 2) = v196;
                    *(v507 - 1) = v196;
                    *v507 = v196;
                    v507 += v495;
                    --v508;
                  }
                  while (v508);
                  *(v507 - 2) = v196;
                  *(v507 - 1) = v196;
                  *v507 = v196;
                  v497 += v496;
                  ++v505;
                  v506 += v496;
                }
                while (v505 != v504);
              }
            }
            if (v493 != 1)
            {
              do
              {
                *v497 = v196;
                v497[1] = v196;
                v497[2] = v196;
                v497 += v495;
                --v503;
              }
              while (v503);
            }
            *v497 = v196;
            v497[1] = v196;
            v497[2] = v196;
          }
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v736 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v736);
      while (__stlxr(v236 - 1, v736));
      goto LABEL_1394;
    case 18:
      v789 = &off_24EC23008;
      sub_22430D668((uint64_t)&v790, a3);
      v61 = **a2;
      if (!v61 || (v62 = (_WORD *)v61(3)) == 0)
        sub_224071EE4();
      LOWORD(v786) = *v62;
      if (v796 == 1)
      {
        sub_224315114((uint64_t)&v789, (const __int16 *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          v800 = &v783;
          sub_224316C08((uint64_t)&v800, (uint64_t)&v789);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v319 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v319);
      while (__stlxr(v236 - 1, v319));
      goto LABEL_1394;
    case 19:
      v789 = &off_24EC23100;
      sub_22430D9E4((uint64_t)&v790, a3);
      v9 = **a2;
      if (!v9 || (v10 = (_WORD *)v9(3)) == 0)
        sub_224071EE4();
      LOWORD(v800) = *v10;
      if (v796 == 1)
      {
        sub_2243159E8((uint64_t)&v789, (const __int16 *)&v800, v6);
      }
      else if (v793)
      {
        v237 = v794;
        if (v794)
        {
          v238 = v795;
          if (v795)
          {
            v240 = v797;
            v239 = v798;
            v241 = __b;
            if (v799 && __b)
            {
              v242 = v790;
              v243 = v791;
              if (v791)
              {
                v244 = (unint64_t *)&v791->__shared_owners_;
                do
                  v245 = __ldxr(v244);
                while (__stxr(v245 + 1, v244));
                do
                  v246 = __ldaxr(v244);
                while (__stlxr(v246 - 1, v244));
                if (!v246)
                {
                  ((void (*)(std::__shared_weak_count *))v243->__on_zero_shared)(v243);
                  std::__shared_weak_count::__release_weak(v243);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v242 + 88))(v242, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v241 = __b;
            }
            v247 = v237 - 1;
            v248 = 2 * v240;
            v249 = v238 - 1;
            if (v238 == 1)
            {
              v250 = (__int16)v800;
            }
            else
            {
              v250 = (__int16)v800;
              if (v237 == 1)
              {
                do
                {
                  *v241 = v250;
                  v241[1] = v250;
                  v241[2] = v250;
                  v241 += v239;
                  --v249;
                }
                while (v249);
              }
              else
              {
                v251 = 0;
                v252 = v241 + 2;
                do
                {
                  v253 = v252;
                  v254 = v237 - 1;
                  do
                  {
                    *(v253 - 2) = v250;
                    *(v253 - 1) = v250;
                    *v253 = v250;
                    v253 = (_WORD *)((char *)v253 + v248);
                    --v254;
                  }
                  while (v254);
                  *(v253 - 2) = v250;
                  *(v253 - 1) = v250;
                  *v253 = v250;
                  v241 += v239;
                  ++v251;
                  v252 += v239;
                }
                while (v251 != v249);
              }
            }
            if (v237 != 1)
            {
              do
              {
                *v241 = v250;
                v250 = (__int16)v800;
                v241[1] = (_WORD)v800;
                v241[2] = v250;
                v241 = (_WORD *)((char *)v241 + v248);
                --v247;
              }
              while (v247);
            }
            *v241 = v250;
            v6.n128_u16[0] = (unsigned __int16)v800;
            v241[1] = (_WORD)v800;
            v241[2] = v6.n128_u16[0];
          }
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v757 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v757);
      while (__stlxr(v236 - 1, v757));
      goto LABEL_1394;
    case 20:
      v789 = &off_24EC231F8;
      sub_22430DD60((uint64_t)&v790, a3);
      v188 = **a2;
      if (!v188 || (v189 = (unsigned __int32 *)v188(3)) == 0)
        sub_224071EE4();
      v6.n128_u32[0] = *v189;
      LODWORD(v786) = *v189;
      if (v796 == 1)
      {
        sub_2243162F0((uint64_t)&v789, (const float *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          v800 = &v783;
          v6.n128_f32[0] = sub_224316DD8(&v800, (uint64_t)&v789);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v478 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v478);
      while (__stlxr(v236 - 1, v478));
      goto LABEL_1394;
    case 21:
      v789 = &off_24EC232F0;
      sub_2232972C4(a3, (uint64_t)&v790);
      v212 = **a2;
      if (!v212 || (v213 = (unsigned __int8 *)v212(3)) == 0)
        sub_224071EE4();
      v214 = *v213;
      if (v796 == 1)
      {
        v215 = v797;
        v216 = v793;
        v217 = v794;
        if (v797 == v793)
        {
          v218 = v798;
          v216 = v794 * v797;
          if (v798 == (_DWORD)v216)
          {
            v219 = v795;
            v220 = __b;
            if (v799 && __b)
            {
              v221 = v790;
              v222 = v791;
              if (v791)
              {
                v223 = (unint64_t *)&v791->__shared_owners_;
                do
                  v224 = __ldxr(v223);
                while (__stxr(v224 + 1, v223));
                do
                  v225 = __ldaxr(v223);
                while (__stlxr(v225 - 1, v223));
                if (!v225)
                {
                  ((void (*)(std::__shared_weak_count *))v222->__on_zero_shared)(v222);
                  std::__shared_weak_count::__release_weak(v222);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v221 + 88))(v221, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v220 = __b;
            }
            v226 = (v219 * v218);
            v227 = v214;
            goto LABEL_1280;
          }
          if (v797)
          {
            if (v794)
            {
              v737 = v795;
              if (v795)
              {
                v667 = (char *)__b;
                if (v799 && __b)
                {
                  v738 = v790;
                  v739 = v791;
                  if (v791)
                  {
                    v740 = (unint64_t *)&v791->__shared_owners_;
                    do
                      v741 = __ldxr(v740);
                    while (__stxr(v741 + 1, v740));
                    do
                      v742 = __ldaxr(v740);
                    while (__stlxr(v742 - 1, v740));
                    if (!v742)
                    {
                      ((void (*)(std::__shared_weak_count *))v739->__on_zero_shared)(v739);
                      std::__shared_weak_count::__release_weak(v739);
                    }
                  }
                  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v738 + 88))(v738, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                  v667 = (char *)__b;
                }
                v743 = v737 - 1;
                if (v737 != 1)
                {
                  do
                  {
                    memset(v667, v214, v216);
                    v667 += v218;
                    --v743;
                  }
                  while (v743);
                }
LABEL_1279:
                v220 = v667;
                v227 = v214;
                v226 = v216;
LABEL_1280:
                memset(v220, v227, v226);
              }
            }
          }
        }
        else if (v793)
        {
          if (v794)
          {
            v665 = v795;
            if (v795)
            {
              v666 = v798;
              v667 = (char *)__b;
              if (v799 && __b)
              {
                v668 = v790;
                v669 = v791;
                if (v791)
                {
                  v670 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v671 = __ldxr(v670);
                  while (__stxr(v671 + 1, v670));
                  do
                    v672 = __ldaxr(v670);
                  while (__stlxr(v672 - 1, v670));
                  if (!v672)
                  {
                    ((void (*)(std::__shared_weak_count *))v669->__on_zero_shared)(v669);
                    std::__shared_weak_count::__release_weak(v669);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v668 + 88))(v668, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v667 = (char *)__b;
              }
              v673 = v217 - 1;
              v674 = v665 - 1;
              if (v674)
              {
                if (v673)
                {
                  for (n = 0; n != v674; ++n)
                  {
                    v676 = v673;
                    v677 = v667;
                    do
                    {
                      memset(v677, v214, v216);
                      v677 += v215;
                      --v676;
                    }
                    while (v676);
                    memset(v677, v214, v216);
                    v667 += v666;
                  }
                }
                else
                {
                  do
                  {
                    memset(v667, v214, v216);
                    v667 += v666;
                    --v674;
                  }
                  while (v674);
                }
              }
              for (; v673; --v673)
              {
                memset(v667, v214, v216);
                v667 += v215;
              }
              goto LABEL_1279;
            }
          }
        }
      }
      else if (v793)
      {
        v527 = v794;
        if (v794)
        {
          v528 = v795;
          if (v795)
          {
            v529 = v797;
            v530 = v798;
            v531 = __b;
            if (v799 && __b)
            {
              v532 = v790;
              v533 = v791;
              if (v791)
              {
                v534 = (unint64_t *)&v791->__shared_owners_;
                do
                  v535 = __ldxr(v534);
                while (__stxr(v535 + 1, v534));
                do
                  v536 = __ldaxr(v534);
                while (__stlxr(v536 - 1, v534));
                if (!v536)
                {
                  ((void (*)(std::__shared_weak_count *))v533->__on_zero_shared)(v533);
                  std::__shared_weak_count::__release_weak(v533);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v532 + 88))(v532, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v531 = __b;
            }
            v537 = v527 - 1;
            v538 = v528 - 1;
            if (v528 != 1)
            {
              if (v527 == 1)
              {
                do
                {
                  *v531 = v214;
                  v531[1] = v214;
                  v531[2] = v214;
                  v531 += v530;
                  --v538;
                }
                while (v538);
              }
              else
              {
                v539 = 0;
                v540 = v531 + 2;
                do
                {
                  v541 = v540;
                  v542 = v527 - 1;
                  do
                  {
                    *(v541 - 2) = v214;
                    *(v541 - 1) = v214;
                    *v541 = v214;
                    v541 += v529;
                    --v542;
                  }
                  while (v542);
                  *(v541 - 2) = v214;
                  *(v541 - 1) = v214;
                  *v541 = v214;
                  v531 += v530;
                  ++v539;
                  v540 += v530;
                }
                while (v539 != v538);
              }
            }
            if (v527 != 1)
            {
              do
              {
                *v531 = v214;
                v531[1] = v214;
                v531[2] = v214;
                v531 += v529;
                --v537;
              }
              while (v537);
            }
            *v531 = v214;
            v531[1] = v214;
            v531[2] = v214;
          }
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v744 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v744);
      while (__stlxr(v236 - 1, v744));
      goto LABEL_1394;
    case 22:
      v789 = &off_24EC233E8;
      sub_2242DAEE0(a3, (uint64_t)&v790);
      v67 = **a2;
      if (!v67 || (v68 = (_WORD *)v67(3)) == 0)
        sub_224071EE4();
      LOWORD(v786) = *v68;
      if (v796 == 1)
      {
        sub_224315114((uint64_t)&v789, (const __int16 *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          v800 = &v783;
          sub_224316C08((uint64_t)&v800, (uint64_t)&v789);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v328 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v328);
      while (__stlxr(v236 - 1, v328));
      goto LABEL_1394;
    case 23:
      v789 = &off_24EC234E0;
      sub_2242DB4C8(a3, (uint64_t)&v790);
      v210 = **a2;
      if (!v210 || (v211 = (_WORD *)v210(3)) == 0)
        sub_224071EE4();
      LOWORD(v800) = *v211;
      if (v796 == 1)
      {
        sub_2243159E8((uint64_t)&v789, (const __int16 *)&v800, v6);
      }
      else if (v793)
      {
        v509 = v794;
        if (v794)
        {
          v510 = v795;
          if (v795)
          {
            v512 = v797;
            v511 = v798;
            v513 = __b;
            if (v799 && __b)
            {
              v514 = v790;
              v515 = v791;
              if (v791)
              {
                v516 = (unint64_t *)&v791->__shared_owners_;
                do
                  v517 = __ldxr(v516);
                while (__stxr(v517 + 1, v516));
                do
                  v518 = __ldaxr(v516);
                while (__stlxr(v518 - 1, v516));
                if (!v518)
                {
                  ((void (*)(std::__shared_weak_count *))v515->__on_zero_shared)(v515);
                  std::__shared_weak_count::__release_weak(v515);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v514 + 88))(v514, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v513 = __b;
            }
            v519 = v509 - 1;
            v520 = 2 * v512;
            v521 = v510 - 1;
            if (v510 == 1)
            {
              v522 = (__int16)v800;
            }
            else
            {
              v522 = (__int16)v800;
              if (v509 == 1)
              {
                do
                {
                  *v513 = v522;
                  v513[1] = v522;
                  v513[2] = v522;
                  v513 += v511;
                  --v521;
                }
                while (v521);
              }
              else
              {
                v523 = 0;
                v524 = v513 + 2;
                do
                {
                  v525 = v524;
                  v526 = v509 - 1;
                  do
                  {
                    *(v525 - 2) = v522;
                    *(v525 - 1) = v522;
                    *v525 = v522;
                    v525 = (_WORD *)((char *)v525 + v520);
                    --v526;
                  }
                  while (v526);
                  *(v525 - 2) = v522;
                  *(v525 - 1) = v522;
                  *v525 = v522;
                  v513 += v511;
                  ++v523;
                  v524 += v511;
                }
                while (v523 != v521);
              }
            }
            if (v509 != 1)
            {
              do
              {
                *v513 = v522;
                v522 = (__int16)v800;
                v513[1] = (_WORD)v800;
                v513[2] = v522;
                v513 = (_WORD *)((char *)v513 + v520);
                --v519;
              }
              while (v519);
            }
            *v513 = v522;
            v6.n128_u16[0] = (unsigned __int16)v800;
            v513[1] = (_WORD)v800;
            v513[2] = v6.n128_u16[0];
          }
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v774 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v774);
      while (__stlxr(v236 - 1, v774));
      goto LABEL_1394;
    case 24:
      v789 = &off_24EC235D8;
      sub_2242DBC14(a3, (uint64_t)&v790);
      v41 = **a2;
      if (!v41 || (v42 = (unsigned __int32 *)v41(3)) == 0)
        sub_224071EE4();
      v6.n128_u32[0] = *v42;
      LODWORD(v786) = *v42;
      if (v796 == 1)
      {
        sub_2243162F0((uint64_t)&v789, (const float *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          v800 = &v783;
          v6.n128_f32[0] = sub_224316DD8(&v800, (uint64_t)&v789);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v288 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v288);
      while (__stlxr(v236 - 1, v288));
      goto LABEL_1394;
    case 25:
      v789 = &off_24EC236D0;
      sub_223297F40(a3, (uint64_t)&v790);
      v11 = **a2;
      if (!v11 || (v12 = (unsigned __int8 *)v11(3)) == 0)
        sub_224071EE4();
      v13 = *v12;
      if (v796 != 1)
      {
        if (v793)
        {
          v255 = v794;
          if (v794)
          {
            v256 = v795;
            if (v795)
            {
              v257 = v797;
              v258 = v798;
              v259 = (unsigned __int32 *)__b;
              if (v799 && __b)
              {
                v260 = v790;
                v261 = v791;
                if (v791)
                {
                  v262 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v263 = __ldxr(v262);
                  while (__stxr(v263 + 1, v262));
                  do
                    v264 = __ldaxr(v262);
                  while (__stlxr(v264 - 1, v262));
                  if (!v264)
                  {
                    ((void (*)(std::__shared_weak_count *))v261->__on_zero_shared)(v261);
                    std::__shared_weak_count::__release_weak(v261);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v260 + 88))(v260, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v259 = (unsigned __int32 *)__b;
              }
              v265 = v255 - 1;
              v6.n128_u64[0] = (unint64_t)vdup_n_s16(v13);
              v266 = v256 - 1;
              if (v256 != 1)
              {
                if (v255 == 1)
                {
                  v758 = vmovn_s16((int16x8_t)v6).u32[0];
                  do
                  {
                    *v259 = v758;
                    v259 = (unsigned __int32 *)((char *)v259 + v258);
                    --v266;
                  }
                  while (v266);
                }
                else
                {
                  v267 = 0;
                  v268 = vmovn_s16((int16x8_t)v6).u32[0];
                  do
                  {
                    v269 = v255 - 1;
                    v270 = v259;
                    do
                    {
                      *v270 = v268;
                      v270 = (unsigned __int32 *)((char *)v270 + v257);
                      --v269;
                    }
                    while (v269);
                    *v270 = v268;
                    v259 = (unsigned __int32 *)((char *)v259 + v258);
                    ++v267;
                  }
                  while (v267 != v266);
                }
              }
              if (v255 != 1)
              {
                v759 = vmovn_s16((int16x8_t)v6).u32[0];
                do
                {
                  *v259 = v759;
                  v259 = (unsigned __int32 *)((char *)v259 + v257);
                  --v265;
                }
                while (v265);
              }
              v6.n128_u64[0] = (unint64_t)vdup_n_s8(v13);
              *v259 = v6.n128_u32[0];
            }
          }
        }
        goto LABEL_1335;
      }
      v14 = v797;
      v15 = v793;
      v16 = v794;
      if (v797 == v793)
      {
        v17 = v798;
        v15 = v794 * v797;
        if (v798 == (_DWORD)v15)
        {
          v18 = v795;
          v19 = __b;
          if (v799 && __b)
          {
            v20 = v790;
            v21 = v791;
            if (v791)
            {
              v22 = (unint64_t *)&v791->__shared_owners_;
              do
                v23 = __ldxr(v22);
              while (__stxr(v23 + 1, v22));
              do
                v24 = __ldaxr(v22);
              while (__stlxr(v24 - 1, v22));
              if (!v24)
              {
                ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
                std::__shared_weak_count::__release_weak(v21);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v19 = __b;
          }
          memset(v19, v13, (v18 * v17));
          goto LABEL_1335;
        }
        if (v797)
        {
          if (v794)
          {
            v678 = v795;
            if (v795)
            {
              v545 = (char *)__b;
              if (v799 && __b)
              {
                v679 = v790;
                v680 = v791;
                if (v791)
                {
                  v681 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v682 = __ldxr(v681);
                  while (__stxr(v682 + 1, v681));
                  do
                    v683 = __ldaxr(v681);
                  while (__stlxr(v683 - 1, v681));
                  if (!v683)
                  {
                    ((void (*)(std::__shared_weak_count *))v680->__on_zero_shared)(v680);
                    std::__shared_weak_count::__release_weak(v680);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v679 + 88))(v679, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v545 = (char *)__b;
              }
              v684 = v678 - 1;
              if (v678 != 1)
              {
                do
                {
                  memset(v545, v13, v15);
                  v545 += v17;
                  --v684;
                }
                while (v684);
              }
LABEL_1144:
              memset(v545, v13, v15);
            }
          }
        }
      }
      else if (v793)
      {
        if (v794)
        {
          v543 = v795;
          if (v795)
          {
            v544 = v798;
            v545 = (char *)__b;
            if (v799 && __b)
            {
              v546 = v790;
              v547 = v791;
              if (v791)
              {
                v548 = (unint64_t *)&v791->__shared_owners_;
                do
                  v549 = __ldxr(v548);
                while (__stxr(v549 + 1, v548));
                do
                  v550 = __ldaxr(v548);
                while (__stlxr(v550 - 1, v548));
                if (!v550)
                {
                  ((void (*)(std::__shared_weak_count *))v547->__on_zero_shared)(v547);
                  std::__shared_weak_count::__release_weak(v547);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v546 + 88))(v546, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v545 = (char *)__b;
            }
            v551 = v16 - 1;
            v552 = v543 - 1;
            if (v552)
            {
              if (v551)
              {
                for (ii = 0; ii != v552; ++ii)
                {
                  v554 = v551;
                  v555 = v545;
                  do
                  {
                    memset(v555, v13, v15);
                    v555 += v14;
                    --v554;
                  }
                  while (v554);
                  memset(v555, v13, v15);
                  v545 += v544;
                }
              }
              else
              {
                do
                {
                  memset(v545, v13, v15);
                  v545 += v544;
                  --v552;
                }
                while (v552);
              }
            }
            for (; v551; --v551)
            {
              memset(v545, v13, v15);
              v545 += v14;
            }
            goto LABEL_1144;
          }
        }
      }
LABEL_1335:
      v234 = v791;
      if (!v791)
        return;
      v760 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v760);
      while (__stlxr(v236 - 1, v760));
      goto LABEL_1394;
    case 26:
      v789 = &off_24EC237C8;
      sub_22430E0DC((uint64_t)&v790, a3);
      v69 = **a2;
      if (!v69 || (v70 = (_WORD *)v69(3)) == 0)
        sub_224071EE4();
      LOWORD(v786) = *v70;
      if (v796 == 1)
      {
        sub_224315114((uint64_t)&v789, (const __int16 *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v329 = __b;
          if (v799 && __b)
          {
            v330 = v790;
            v331 = v791;
            if (v791)
            {
              v332 = (unint64_t *)&v791->__shared_owners_;
              do
                v333 = __ldxr(v332);
              while (__stxr(v333 + 1, v332));
              do
                v334 = __ldaxr(v332);
              while (__stlxr(v334 - 1, v332));
              if (!v334)
              {
                ((void (*)(std::__shared_weak_count *))v331->__on_zero_shared)(v331);
                std::__shared_weak_count::__release_weak(v331);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v330 + 88))(v330, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v329 = __b;
          }
          sub_224316FA8(&v800, (_WORD **)&v783, v329);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v335 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v335);
      while (__stlxr(v236 - 1, v335));
      goto LABEL_1394;
    case 27:
      v789 = &off_24EC238C0;
      sub_22430E458((uint64_t)&v790, a3);
      v7 = **a2;
      if (!v7 || (v8 = (_WORD *)v7(3)) == 0)
        sub_224071EE4();
      LOWORD(v781) = *v8;
      if (v796 == 1)
      {
        sub_2243159E8((uint64_t)&v789, (const __int16 *)&v781, v6);
      }
      else
      {
        v788 = (unint64_t)&v781;
        if (v793 && v794 && v795)
        {
          v786 = (__int16 **)&v788;
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v228 = (__int16 *)__b;
          if (v799 && __b)
          {
            v229 = v790;
            v230 = v791;
            if (v791)
            {
              v231 = (unint64_t *)&v791->__shared_owners_;
              do
                v232 = __ldxr(v231);
              while (__stxr(v232 + 1, v231));
              do
                v233 = __ldaxr(v231);
              while (__stlxr(v233 - 1, v231));
              if (!v233)
              {
                ((void (*)(std::__shared_weak_count *))v230->__on_zero_shared)(v230);
                std::__shared_weak_count::__release_weak(v230);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *, __int16 *))(*(_QWORD *)v229 + 88))(v229, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297", v228);
            v228 = (__int16 *)__b;
          }
          v783 = 0;
          v784 = 0;
          v6.n128_u64[0] = sub_22320D4C4(&v800, (uint64_t)&v783, &v786, v228);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v235 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v235);
      while (__stlxr(v236 - 1, v235));
      goto LABEL_1394;
    case 28:
      v789 = &off_24EC239B8;
      sub_22430E7D4((uint64_t)&v790, a3);
      v86 = **a2;
      if (!v86 || (v87 = (unsigned __int32 *)v86(3)) == 0)
        sub_224071EE4();
      v6.n128_u32[0] = *v87;
      LODWORD(v786) = *v87;
      if (v796 == 1)
      {
        sub_2243162F0((uint64_t)&v789, (const float *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v344 = __b;
          if (v799 && __b)
          {
            v345 = v790;
            v346 = v791;
            if (v791)
            {
              v347 = (unint64_t *)&v791->__shared_owners_;
              do
                v348 = __ldxr(v347);
              while (__stxr(v348 + 1, v347));
              do
                v349 = __ldaxr(v347);
              while (__stlxr(v349 - 1, v347));
              if (!v349)
              {
                ((void (*)(std::__shared_weak_count *))v346->__on_zero_shared)(v346);
                std::__shared_weak_count::__release_weak(v346);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v345 + 88))(v345, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v344 = __b;
          }
          v6.n128_f32[0] = sub_2243170DC(&v800, (_DWORD **)&v783, v344);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v350 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v350);
      while (__stlxr(v236 - 1, v350));
      goto LABEL_1394;
    case 29:
      v789 = &off_24EC23AB0;
      sub_2242DC78C(a3, (uint64_t)&v790);
      v27 = **a2;
      if (!v27 || (v28 = (unsigned __int8 *)v27(3)) == 0)
        sub_224071EE4();
      v29 = *v28;
      if (v796 != 1)
      {
        if (v793)
        {
          v272 = v794;
          if (v794)
          {
            v273 = v795;
            if (v795)
            {
              v274 = v797;
              v275 = v798;
              v276 = (unsigned __int32 *)__b;
              if (v799 && __b)
              {
                v277 = v790;
                v278 = v791;
                if (v791)
                {
                  v279 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v280 = __ldxr(v279);
                  while (__stxr(v280 + 1, v279));
                  do
                    v281 = __ldaxr(v279);
                  while (__stlxr(v281 - 1, v279));
                  if (!v281)
                  {
                    ((void (*)(std::__shared_weak_count *))v278->__on_zero_shared)(v278);
                    std::__shared_weak_count::__release_weak(v278);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v277 + 88))(v277, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v276 = (unsigned __int32 *)__b;
              }
              v282 = v272 - 1;
              v6.n128_u64[0] = (unint64_t)vdup_n_s16(v29);
              v283 = v273 - 1;
              if (v273 != 1)
              {
                if (v272 == 1)
                {
                  v761 = vmovn_s16((int16x8_t)v6).u32[0];
                  do
                  {
                    *v276 = v761;
                    v276 = (unsigned __int32 *)((char *)v276 + v275);
                    --v283;
                  }
                  while (v283);
                }
                else
                {
                  v284 = 0;
                  v285 = vmovn_s16((int16x8_t)v6).u32[0];
                  do
                  {
                    v286 = v272 - 1;
                    v287 = v276;
                    do
                    {
                      *v287 = v285;
                      v287 = (unsigned __int32 *)((char *)v287 + v274);
                      --v286;
                    }
                    while (v286);
                    *v287 = v285;
                    v276 = (unsigned __int32 *)((char *)v276 + v275);
                    ++v284;
                  }
                  while (v284 != v283);
                }
              }
              if (v272 != 1)
              {
                v762 = vmovn_s16((int16x8_t)v6).u32[0];
                do
                {
                  *v276 = v762;
                  v276 = (unsigned __int32 *)((char *)v276 + v274);
                  --v282;
                }
                while (v282);
              }
              v6.n128_u64[0] = (unint64_t)vdup_n_s8(v29);
              *v276 = v6.n128_u32[0];
            }
          }
        }
        goto LABEL_1345;
      }
      v30 = v797;
      v31 = v793;
      v32 = v794;
      if (v797 == v793)
      {
        v33 = v798;
        v31 = v794 * v797;
        if (v798 == (_DWORD)v31)
        {
          v34 = v795;
          v35 = __b;
          if (v799 && __b)
          {
            v36 = v790;
            v37 = v791;
            if (v791)
            {
              v38 = (unint64_t *)&v791->__shared_owners_;
              do
                v39 = __ldxr(v38);
              while (__stxr(v39 + 1, v38));
              do
                v40 = __ldaxr(v38);
              while (__stlxr(v40 - 1, v38));
              if (!v40)
              {
                ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
                std::__shared_weak_count::__release_weak(v37);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v35 = __b;
          }
          memset(v35, v29, (v34 * v33));
          goto LABEL_1345;
        }
        if (v797)
        {
          if (v794)
          {
            v685 = v795;
            if (v795)
            {
              v558 = (char *)__b;
              if (v799 && __b)
              {
                v686 = v790;
                v687 = v791;
                if (v791)
                {
                  v688 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v689 = __ldxr(v688);
                  while (__stxr(v689 + 1, v688));
                  do
                    v690 = __ldaxr(v688);
                  while (__stlxr(v690 - 1, v688));
                  if (!v690)
                  {
                    ((void (*)(std::__shared_weak_count *))v687->__on_zero_shared)(v687);
                    std::__shared_weak_count::__release_weak(v687);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v686 + 88))(v686, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v558 = (char *)__b;
              }
              v691 = v685 - 1;
              if (v685 != 1)
              {
                do
                {
                  memset(v558, v29, v31);
                  v558 += v33;
                  --v691;
                }
                while (v691);
              }
LABEL_1159:
              memset(v558, v29, v31);
            }
          }
        }
      }
      else if (v793)
      {
        if (v794)
        {
          v556 = v795;
          if (v795)
          {
            v557 = v798;
            v558 = (char *)__b;
            if (v799 && __b)
            {
              v559 = v790;
              v560 = v791;
              if (v791)
              {
                v561 = (unint64_t *)&v791->__shared_owners_;
                do
                  v562 = __ldxr(v561);
                while (__stxr(v562 + 1, v561));
                do
                  v563 = __ldaxr(v561);
                while (__stlxr(v563 - 1, v561));
                if (!v563)
                {
                  ((void (*)(std::__shared_weak_count *))v560->__on_zero_shared)(v560);
                  std::__shared_weak_count::__release_weak(v560);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v559 + 88))(v559, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v558 = (char *)__b;
            }
            v564 = v32 - 1;
            v565 = v556 - 1;
            if (v565)
            {
              if (v564)
              {
                for (jj = 0; jj != v565; ++jj)
                {
                  v567 = v564;
                  v568 = v558;
                  do
                  {
                    memset(v568, v29, v31);
                    v568 += v30;
                    --v567;
                  }
                  while (v567);
                  memset(v568, v29, v31);
                  v558 += v557;
                }
              }
              else
              {
                do
                {
                  memset(v558, v29, v31);
                  v558 += v557;
                  --v565;
                }
                while (v565);
              }
            }
            for (; v564; --v564)
            {
              memset(v558, v29, v31);
              v558 += v30;
            }
            goto LABEL_1159;
          }
        }
      }
LABEL_1345:
      v234 = v791;
      if (!v791)
        return;
      v763 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v763);
      while (__stlxr(v236 - 1, v763));
      goto LABEL_1394;
    case 30:
      v789 = &off_24EC23BA8;
      sub_2242DCD70(a3, (uint64_t)&v790);
      v92 = **a2;
      if (!v92 || (v93 = (_WORD *)v92(3)) == 0)
        sub_224071EE4();
      LOWORD(v786) = *v93;
      if (v796 == 1)
      {
        sub_224315114((uint64_t)&v789, (const __int16 *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v365 = __b;
          if (v799 && __b)
          {
            v366 = v790;
            v367 = v791;
            if (v791)
            {
              v368 = (unint64_t *)&v791->__shared_owners_;
              do
                v369 = __ldxr(v368);
              while (__stxr(v369 + 1, v368));
              do
                v370 = __ldaxr(v368);
              while (__stlxr(v370 - 1, v368));
              if (!v370)
              {
                ((void (*)(std::__shared_weak_count *))v367->__on_zero_shared)(v367);
                std::__shared_weak_count::__release_weak(v367);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v366 + 88))(v366, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v365 = __b;
          }
          sub_224316FA8(&v800, (_WORD **)&v783, v365);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v371 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v371);
      while (__stlxr(v236 - 1, v371));
      goto LABEL_1394;
    case 31:
      v789 = &off_24EC23CA0;
      sub_223C6B660(a3, (uint64_t)&v790);
      v71 = **a2;
      if (!v71 || (v72 = (_WORD *)v71(3)) == 0)
        sub_224071EE4();
      LOWORD(v781) = *v72;
      if (v796 == 1)
      {
        sub_2243159E8((uint64_t)&v789, (const __int16 *)&v781, v6);
      }
      else
      {
        v788 = (unint64_t)&v781;
        if (v793 && v794 && v795)
        {
          v786 = (__int16 **)&v788;
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v336 = (__int16 *)__b;
          if (v799 && __b)
          {
            v337 = v790;
            v338 = v791;
            if (v791)
            {
              v339 = (unint64_t *)&v791->__shared_owners_;
              do
                v340 = __ldxr(v339);
              while (__stxr(v340 + 1, v339));
              do
                v341 = __ldaxr(v339);
              while (__stlxr(v341 - 1, v339));
              if (!v341)
              {
                ((void (*)(std::__shared_weak_count *))v338->__on_zero_shared)(v338);
                std::__shared_weak_count::__release_weak(v338);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *, __int16 *))(*(_QWORD *)v337 + 88))(v337, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297", v336);
            v336 = (__int16 *)__b;
          }
          v783 = 0;
          v784 = 0;
          v6.n128_u64[0] = sub_22320D4C4(&v800, (uint64_t)&v783, &v786, v336);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v342 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v342);
      while (__stlxr(v236 - 1, v342));
      goto LABEL_1394;
    case 32:
      v789 = &off_24EC21EF0;
      sub_223298BC0(a3, (uint64_t)&v790);
      v96 = **a2;
      if (!v96 || (v97 = (unsigned __int32 *)v96(3)) == 0)
        sub_224071EE4();
      v6.n128_u32[0] = *v97;
      LODWORD(v786) = *v97;
      if (v796 == 1)
      {
        sub_2243162F0((uint64_t)&v789, (const float *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v379 = __b;
          if (v799 && __b)
          {
            v380 = v790;
            v381 = v791;
            if (v791)
            {
              v382 = (unint64_t *)&v791->__shared_owners_;
              do
                v383 = __ldxr(v382);
              while (__stxr(v383 + 1, v382));
              do
                v384 = __ldaxr(v382);
              while (__stlxr(v384 - 1, v382));
              if (!v384)
              {
                ((void (*)(std::__shared_weak_count *))v381->__on_zero_shared)(v381);
                std::__shared_weak_count::__release_weak(v381);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v380 + 88))(v380, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v379 = __b;
          }
          v6.n128_f32[0] = sub_2243170DC(&v800, (_DWORD **)&v783, v379);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v385 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v385);
      while (__stlxr(v236 - 1, v385));
      goto LABEL_1394;
    case 33:
      v789 = &off_24EC23D98;
      sub_2242DD9C8(a3, (uint64_t)&v790);
      v174 = **a2;
      if (!v174 || (v175 = (unsigned __int8 *)v174(3)) == 0)
        sub_224071EE4();
      v176 = *v175;
      if (v796 != 1)
      {
        if (v793)
        {
          v462 = v794;
          if (v794)
          {
            v463 = v795;
            if (v795)
            {
              v464 = v797;
              v465 = v798;
              v466 = (unsigned __int32 *)__b;
              if (v799 && __b)
              {
                v467 = v790;
                v468 = v791;
                if (v791)
                {
                  v469 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v470 = __ldxr(v469);
                  while (__stxr(v470 + 1, v469));
                  do
                    v471 = __ldaxr(v469);
                  while (__stlxr(v471 - 1, v469));
                  if (!v471)
                  {
                    ((void (*)(std::__shared_weak_count *))v468->__on_zero_shared)(v468);
                    std::__shared_weak_count::__release_weak(v468);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v467 + 88))(v467, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v466 = (unsigned __int32 *)__b;
              }
              v472 = v462 - 1;
              v6.n128_u64[0] = (unint64_t)vdup_n_s16(v176);
              v473 = v463 - 1;
              if (v463 != 1)
              {
                if (v462 == 1)
                {
                  v771 = vmovn_s16((int16x8_t)v6).u32[0];
                  do
                  {
                    *v466 = v771;
                    v466 = (unsigned __int32 *)((char *)v466 + v465);
                    --v473;
                  }
                  while (v473);
                }
                else
                {
                  v474 = 0;
                  v475 = vmovn_s16((int16x8_t)v6).u32[0];
                  do
                  {
                    v476 = v462 - 1;
                    v477 = v466;
                    do
                    {
                      *v477 = v475;
                      v477 = (unsigned __int32 *)((char *)v477 + v464);
                      --v476;
                    }
                    while (v476);
                    *v477 = v475;
                    v466 = (unsigned __int32 *)((char *)v466 + v465);
                    ++v474;
                  }
                  while (v474 != v473);
                }
              }
              if (v462 != 1)
              {
                v772 = vmovn_s16((int16x8_t)v6).u32[0];
                do
                {
                  *v466 = v772;
                  v466 = (unsigned __int32 *)((char *)v466 + v464);
                  --v472;
                }
                while (v472);
              }
              v6.n128_u64[0] = (unint64_t)vdup_n_s8(v176);
              *v466 = v6.n128_u32[0];
            }
          }
        }
        goto LABEL_1383;
      }
      v177 = v797;
      v178 = v793;
      v179 = v794;
      if (v797 == v793)
      {
        v180 = v798;
        v178 = v794 * v797;
        if (v798 == (_DWORD)v178)
        {
          v181 = v795;
          v182 = __b;
          if (v799 && __b)
          {
            v183 = v790;
            v184 = v791;
            if (v791)
            {
              v185 = (unint64_t *)&v791->__shared_owners_;
              do
                v186 = __ldxr(v185);
              while (__stxr(v186 + 1, v185));
              do
                v187 = __ldaxr(v185);
              while (__stlxr(v187 - 1, v185));
              if (!v187)
              {
                ((void (*)(std::__shared_weak_count *))v184->__on_zero_shared)(v184);
                std::__shared_weak_count::__release_weak(v184);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v183 + 88))(v183, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v182 = __b;
          }
          memset(v182, v176, (v181 * v180));
          goto LABEL_1383;
        }
        if (v797)
        {
          if (v794)
          {
            v722 = v795;
            if (v795)
            {
              v641 = (char *)__b;
              if (v799 && __b)
              {
                v723 = v790;
                v724 = v791;
                if (v791)
                {
                  v725 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v726 = __ldxr(v725);
                  while (__stxr(v726 + 1, v725));
                  do
                    v727 = __ldaxr(v725);
                  while (__stlxr(v727 - 1, v725));
                  if (!v727)
                  {
                    ((void (*)(std::__shared_weak_count *))v724->__on_zero_shared)(v724);
                    std::__shared_weak_count::__release_weak(v724);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v723 + 88))(v723, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v641 = (char *)__b;
              }
              v728 = v722 - 1;
              if (v722 != 1)
              {
                do
                {
                  memset(v641, v176, v178);
                  v641 += v180;
                  --v728;
                }
                while (v728);
              }
LABEL_1244:
              memset(v641, v176, v178);
            }
          }
        }
      }
      else if (v793)
      {
        if (v794)
        {
          v639 = v795;
          if (v795)
          {
            v640 = v798;
            v641 = (char *)__b;
            if (v799 && __b)
            {
              v642 = v790;
              v643 = v791;
              if (v791)
              {
                v644 = (unint64_t *)&v791->__shared_owners_;
                do
                  v645 = __ldxr(v644);
                while (__stxr(v645 + 1, v644));
                do
                  v646 = __ldaxr(v644);
                while (__stlxr(v646 - 1, v644));
                if (!v646)
                {
                  ((void (*)(std::__shared_weak_count *))v643->__on_zero_shared)(v643);
                  std::__shared_weak_count::__release_weak(v643);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v642 + 88))(v642, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v641 = (char *)__b;
            }
            v647 = v179 - 1;
            v648 = v639 - 1;
            if (v648)
            {
              if (v647)
              {
                for (kk = 0; kk != v648; ++kk)
                {
                  v650 = v647;
                  v651 = v641;
                  do
                  {
                    memset(v651, v176, v178);
                    v651 += v177;
                    --v650;
                  }
                  while (v650);
                  memset(v651, v176, v178);
                  v641 += v640;
                }
              }
              else
              {
                do
                {
                  memset(v641, v176, v178);
                  v641 += v640;
                  --v648;
                }
                while (v648);
              }
            }
            for (; v647; --v647)
            {
              memset(v641, v176, v178);
              v641 += v177;
            }
            goto LABEL_1244;
          }
        }
      }
LABEL_1383:
      v234 = v791;
      if (!v791)
        return;
      v773 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v773);
      while (__stlxr(v236 - 1, v773));
LABEL_1394:
      if (!v236)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v234->__on_zero_shared)(v234, v6);
        std::__shared_weak_count::__release_weak(v234);
      }
      return;
    case 34:
      v789 = &off_24EC23E90;
      sub_22430EB50((uint64_t)&v790, a3);
      v94 = **a2;
      if (!v94 || (v95 = (_WORD *)v94(3)) == 0)
        sub_224071EE4();
      LOWORD(v786) = *v95;
      if (v796 == 1)
      {
        sub_224315114((uint64_t)&v789, (const __int16 *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v372 = __b;
          if (v799 && __b)
          {
            v373 = v790;
            v374 = v791;
            if (v791)
            {
              v375 = (unint64_t *)&v791->__shared_owners_;
              do
                v376 = __ldxr(v375);
              while (__stxr(v376 + 1, v375));
              do
                v377 = __ldaxr(v375);
              while (__stlxr(v377 - 1, v375));
              if (!v377)
              {
                ((void (*)(std::__shared_weak_count *))v374->__on_zero_shared)(v374);
                std::__shared_weak_count::__release_weak(v374);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v373 + 88))(v373, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v372 = __b;
          }
          sub_224316FA8(&v800, (_WORD **)&v783, v372);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v378 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v378);
      while (__stlxr(v236 - 1, v378));
      goto LABEL_1394;
    case 35:
      v789 = &off_24EC23F88;
      sub_22430EECC((uint64_t)&v790, a3);
      v90 = **a2;
      if (!v90 || (v91 = (_WORD *)v90(3)) == 0)
        sub_224071EE4();
      LOWORD(v781) = *v91;
      if (v796 == 1)
      {
        sub_2243159E8((uint64_t)&v789, (const __int16 *)&v781, v6);
      }
      else
      {
        v788 = (unint64_t)&v781;
        if (v793 && v794 && v795)
        {
          v786 = (__int16 **)&v788;
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v358 = (__int16 *)__b;
          if (v799 && __b)
          {
            v359 = v790;
            v360 = v791;
            if (v791)
            {
              v361 = (unint64_t *)&v791->__shared_owners_;
              do
                v362 = __ldxr(v361);
              while (__stxr(v362 + 1, v361));
              do
                v363 = __ldaxr(v361);
              while (__stlxr(v363 - 1, v361));
              if (!v363)
              {
                ((void (*)(std::__shared_weak_count *))v360->__on_zero_shared)(v360);
                std::__shared_weak_count::__release_weak(v360);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *, __int16 *))(*(_QWORD *)v359 + 88))(v359, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297", v358);
            v358 = (__int16 *)__b;
          }
          v783 = 0;
          v784 = 0;
          v6.n128_u64[0] = sub_22320D4C4(&v800, (uint64_t)&v783, &v786, v358);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v364 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v364);
      while (__stlxr(v236 - 1, v364));
      goto LABEL_1394;
    case 36:
      v789 = &off_24EC24080;
      sub_22430F248((uint64_t)&v790, a3);
      v88 = **a2;
      if (!v88 || (v89 = (unsigned __int32 *)v88(3)) == 0)
        sub_224071EE4();
      v6.n128_u32[0] = *v89;
      LODWORD(v786) = *v89;
      if (v796 == 1)
      {
        sub_2243162F0((uint64_t)&v789, (const float *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v351 = __b;
          if (v799 && __b)
          {
            v352 = v790;
            v353 = v791;
            if (v791)
            {
              v354 = (unint64_t *)&v791->__shared_owners_;
              do
                v355 = __ldxr(v354);
              while (__stxr(v355 + 1, v354));
              do
                v356 = __ldaxr(v354);
              while (__stlxr(v356 - 1, v354));
              if (!v356)
              {
                ((void (*)(std::__shared_weak_count *))v353->__on_zero_shared)(v353);
                std::__shared_weak_count::__release_weak(v353);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v352 + 88))(v352, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v351 = __b;
          }
          v6.n128_f32[0] = sub_2243170DC(&v800, (_DWORD **)&v783, v351);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v357 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v357);
      while (__stlxr(v236 - 1, v357));
      goto LABEL_1394;
    case 37:
      v789 = &off_24EC24178;
      sub_2242DE144(a3, (uint64_t)&v790);
      v156 = **a2;
      if (!v156 || (v157 = (unsigned __int8 *)v156(3)) == 0)
        sub_224071EE4();
      v158 = *v157;
      if (v796 != 1)
      {
        if (v793)
        {
          v427 = v794;
          if (v794)
          {
            v428 = v795;
            if (v795)
            {
              v429 = v797;
              v430 = v798;
              v431 = (unsigned __int32 *)__b;
              if (v799 && __b)
              {
                v432 = v790;
                v433 = v791;
                if (v791)
                {
                  v434 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v435 = __ldxr(v434);
                  while (__stxr(v435 + 1, v434));
                  do
                    v436 = __ldaxr(v434);
                  while (__stlxr(v436 - 1, v434));
                  if (!v436)
                  {
                    ((void (*)(std::__shared_weak_count *))v433->__on_zero_shared)(v433);
                    std::__shared_weak_count::__release_weak(v433);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v432 + 88))(v432, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v431 = (unsigned __int32 *)__b;
              }
              v437 = v427 - 1;
              v6.n128_u64[0] = (unint64_t)vdup_n_s16(v158);
              v438 = v428 - 1;
              if (v428 != 1)
              {
                if (v427 == 1)
                {
                  v767 = vmovn_s16((int16x8_t)v6).u32[0];
                  do
                  {
                    *v431 = v767;
                    v431 = (unsigned __int32 *)((char *)v431 + v430);
                    --v438;
                  }
                  while (v438);
                }
                else
                {
                  v439 = 0;
                  v440 = vmovn_s16((int16x8_t)v6).u32[0];
                  do
                  {
                    v441 = v427 - 1;
                    v442 = v431;
                    do
                    {
                      *v442 = v440;
                      v442 = (unsigned __int32 *)((char *)v442 + v429);
                      --v441;
                    }
                    while (v441);
                    *v442 = v440;
                    v431 = (unsigned __int32 *)((char *)v431 + v430);
                    ++v439;
                  }
                  while (v439 != v438);
                }
              }
              if (v427 != 1)
              {
                v768 = vmovn_s16((int16x8_t)v6).u32[0];
                do
                {
                  *v431 = v768;
                  v431 = (unsigned __int32 *)((char *)v431 + v429);
                  --v437;
                }
                while (v437);
              }
              v6.n128_u64[0] = (unint64_t)vdup_n_s8(v158);
              *v431 = v6.n128_u32[0];
            }
          }
        }
        goto LABEL_1365;
      }
      v159 = v797;
      v160 = v793;
      v161 = v794;
      if (v797 == v793)
      {
        v162 = v798;
        v160 = v794 * v797;
        if (v798 == (_DWORD)v160)
        {
          v163 = v795;
          v164 = __b;
          if (v799 && __b)
          {
            v165 = v790;
            v166 = v791;
            if (v791)
            {
              v167 = (unint64_t *)&v791->__shared_owners_;
              do
                v168 = __ldxr(v167);
              while (__stxr(v168 + 1, v167));
              do
                v169 = __ldaxr(v167);
              while (__stlxr(v169 - 1, v167));
              if (!v169)
              {
                ((void (*)(std::__shared_weak_count *))v166->__on_zero_shared)(v166);
                std::__shared_weak_count::__release_weak(v166);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v165 + 88))(v165, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v164 = __b;
          }
          memset(v164, v158, (v163 * v162));
          goto LABEL_1365;
        }
        if (v797)
        {
          if (v794)
          {
            v715 = v795;
            if (v795)
            {
              v628 = (char *)__b;
              if (v799 && __b)
              {
                v716 = v790;
                v717 = v791;
                if (v791)
                {
                  v718 = (unint64_t *)&v791->__shared_owners_;
                  do
                    v719 = __ldxr(v718);
                  while (__stxr(v719 + 1, v718));
                  do
                    v720 = __ldaxr(v718);
                  while (__stlxr(v720 - 1, v718));
                  if (!v720)
                  {
                    ((void (*)(std::__shared_weak_count *))v717->__on_zero_shared)(v717);
                    std::__shared_weak_count::__release_weak(v717);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v716 + 88))(v716, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v628 = (char *)__b;
              }
              v721 = v715 - 1;
              if (v715 != 1)
              {
                do
                {
                  memset(v628, v158, v160);
                  v628 += v162;
                  --v721;
                }
                while (v721);
              }
LABEL_1229:
              memset(v628, v158, v160);
            }
          }
        }
      }
      else if (v793)
      {
        if (v794)
        {
          v626 = v795;
          if (v795)
          {
            v627 = v798;
            v628 = (char *)__b;
            if (v799 && __b)
            {
              v629 = v790;
              v630 = v791;
              if (v791)
              {
                v631 = (unint64_t *)&v791->__shared_owners_;
                do
                  v632 = __ldxr(v631);
                while (__stxr(v632 + 1, v631));
                do
                  v633 = __ldaxr(v631);
                while (__stlxr(v633 - 1, v631));
                if (!v633)
                {
                  ((void (*)(std::__shared_weak_count *))v630->__on_zero_shared)(v630);
                  std::__shared_weak_count::__release_weak(v630);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v629 + 88))(v629, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v628 = (char *)__b;
            }
            v634 = v161 - 1;
            v635 = v626 - 1;
            if (v635)
            {
              if (v634)
              {
                for (mm = 0; mm != v635; ++mm)
                {
                  v637 = v634;
                  v638 = v628;
                  do
                  {
                    memset(v638, v158, v160);
                    v638 += v159;
                    --v637;
                  }
                  while (v637);
                  memset(v638, v158, v160);
                  v628 += v627;
                }
              }
              else
              {
                do
                {
                  memset(v628, v158, v160);
                  v628 += v627;
                  --v635;
                }
                while (v635);
              }
            }
            for (; v634; --v634)
            {
              memset(v628, v158, v160);
              v628 += v159;
            }
            goto LABEL_1229;
          }
        }
      }
LABEL_1365:
      v234 = v791;
      if (!v791)
        return;
      v769 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v769);
      while (__stlxr(v236 - 1, v769));
      goto LABEL_1394;
    case 38:
      v789 = &off_24EC24270;
      sub_2242DE88C(a3, (uint64_t)&v790);
      v190 = **a2;
      if (!v190 || (v191 = (_WORD *)v190(3)) == 0)
        sub_224071EE4();
      LOWORD(v786) = *v191;
      if (v796 == 1)
      {
        sub_224315114((uint64_t)&v789, (const __int16 *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v479 = __b;
          if (v799 && __b)
          {
            v480 = v790;
            v481 = v791;
            if (v791)
            {
              v482 = (unint64_t *)&v791->__shared_owners_;
              do
                v483 = __ldxr(v482);
              while (__stxr(v483 + 1, v482));
              do
                v484 = __ldaxr(v482);
              while (__stlxr(v484 - 1, v482));
              if (!v484)
              {
                ((void (*)(std::__shared_weak_count *))v481->__on_zero_shared)(v481);
                std::__shared_weak_count::__release_weak(v481);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v480 + 88))(v480, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v479 = __b;
          }
          sub_224316FA8(&v800, (_WORD **)&v783, v479);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v485 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v485);
      while (__stlxr(v236 - 1, v485));
      goto LABEL_1394;
    case 39:
      v789 = &off_24EC24368;
      sub_2242DEE74(a3, (uint64_t)&v790);
      v65 = **a2;
      if (!v65 || (v66 = (_WORD *)v65(3)) == 0)
        sub_224071EE4();
      LOWORD(v781) = *v66;
      if (v796 == 1)
      {
        sub_2243159E8((uint64_t)&v789, (const __int16 *)&v781, v6);
      }
      else
      {
        v788 = (unint64_t)&v781;
        if (v793 && v794 && v795)
        {
          v786 = (__int16 **)&v788;
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v321 = (__int16 *)__b;
          if (v799 && __b)
          {
            v322 = v790;
            v323 = v791;
            if (v791)
            {
              v324 = (unint64_t *)&v791->__shared_owners_;
              do
                v325 = __ldxr(v324);
              while (__stxr(v325 + 1, v324));
              do
                v326 = __ldaxr(v324);
              while (__stlxr(v326 - 1, v324));
              if (!v326)
              {
                ((void (*)(std::__shared_weak_count *))v323->__on_zero_shared)(v323);
                std::__shared_weak_count::__release_weak(v323);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *, __int16 *))(*(_QWORD *)v322 + 88))(v322, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297", v321);
            v321 = (__int16 *)__b;
          }
          v783 = 0;
          v784 = 0;
          v6.n128_u64[0] = sub_22320D4C4(&v800, (uint64_t)&v783, &v786, v321);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v327 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v327);
      while (__stlxr(v236 - 1, v327));
      goto LABEL_1394;
    case 40:
      v789 = &off_24EC24460;
      sub_2242DF45C(a3, (uint64_t)&v790);
      v59 = **a2;
      if (!v59 || (v60 = (unsigned __int32 *)v59(3)) == 0)
        sub_224071EE4();
      v6.n128_u32[0] = *v60;
      LODWORD(v786) = *v60;
      if (v796 == 1)
      {
        sub_2243162F0((uint64_t)&v789, (const float *)&v786);
      }
      else
      {
        v783 = &v786;
        if (v793 && v794 && v795)
        {
          LODWORD(v800) = 0;
          HIDWORD(v800) = v793 - 1;
          LODWORD(v801) = v796;
          HIDWORD(v801) = v794 - 1;
          LODWORD(v802) = v797;
          HIDWORD(v802) = v795 - 1;
          v803 = v798;
          v312 = __b;
          if (v799 && __b)
          {
            v313 = v790;
            v314 = v791;
            if (v791)
            {
              v315 = (unint64_t *)&v791->__shared_owners_;
              do
                v316 = __ldxr(v315);
              while (__stxr(v316 + 1, v315));
              do
                v317 = __ldaxr(v315);
              while (__stlxr(v317 - 1, v315));
              if (!v317)
              {
                ((void (*)(std::__shared_weak_count *))v314->__on_zero_shared)(v314);
                std::__shared_weak_count::__release_weak(v314);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v313 + 88))(v313, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v312 = __b;
          }
          v6.n128_f32[0] = sub_2243170DC(&v800, (_DWORD **)&v783, v312);
        }
      }
      v234 = v791;
      if (!v791)
        return;
      v318 = (unint64_t *)&v791->__shared_owners_;
      do
        v236 = __ldaxr(v318);
      while (__stlxr(v236 - 1, v318));
      goto LABEL_1394;
    default:
      return;
  }
}

void sub_224314788(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  unint64_t *p_shared_owners;
  unint64_t v20;

  if (a18)
  {
    p_shared_owners = (unint64_t *)&a18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a18->__on_zero_shared)(a18);
      std::__shared_weak_count::__release_weak(a18);
    }
  }
  _Unwind_Resume(exception_object);
}

unsigned int *sub_224314D48(unsigned int *result, unsigned __int8 *a2)
{
  unsigned int *v3;
  size_t v4;
  uint64_t v5;
  unsigned int v6;
  void *v7;
  BOOL v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  BOOL v15;
  unsigned int v16;
  char *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;

  v3 = result;
  v4 = result[8];
  v5 = result[11];
  if ((_DWORD)v5 == result[10] * (_DWORD)v4)
  {
    v6 = result[9];
    v7 = (void *)*((_QWORD *)result + 3);
    if (*((_BYTE *)v3 + 48))
      v8 = v7 == 0;
    else
      v8 = 1;
    if (!v8)
    {
      v9 = *((_QWORD *)v3 + 1);
      v10 = (std::__shared_weak_count *)*((_QWORD *)v3 + 2);
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v9 + 88))(v9, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v7 = (void *)*((_QWORD *)v3 + 3);
    }
    return (unsigned int *)memset(v7, *a2, v6 * v4);
  }
  else
  {
    v14 = result[9];
    if ((_DWORD)v4)
      v15 = v14 == 0;
    else
      v15 = 1;
    if (!v15)
    {
      v16 = v14 - 1;
      v17 = (char *)*((_QWORD *)result + 3);
      if (*((_BYTE *)result + 48) && v17)
      {
        v18 = *((_QWORD *)result + 1);
        v19 = (std::__shared_weak_count *)*((_QWORD *)result + 2);
        if (v19)
        {
          v20 = (unint64_t *)&v19->__shared_owners_;
          do
            v21 = __ldxr(v20);
          while (__stxr(v21 + 1, v20));
          do
            v22 = __ldaxr(v20);
          while (__stlxr(v22 - 1, v20));
          if (!v22)
          {
            ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
            std::__shared_weak_count::__release_weak(v19);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v17 = (char *)*((_QWORD *)v3 + 3);
      }
      for (; v16; --v16)
      {
        memset(v17, *a2, v4);
        v17 += v5;
      }
      return (unsigned int *)memset(v17, *a2, v4);
    }
  }
  return result;
}

unsigned __int16 sub_224314F04@<H0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, __n128 a5@<Q0>)
{
  unint64_t v5;
  int v8;
  unsigned int i;
  const __int16 *v11;
  uint64_t v12;
  __int16 *v13;
  BOOL v14;
  __n128 *v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t *v19;
  const __int16 *v20;
  uint64_t v21;
  BOOL v22;
  __int16 *v23;
  uint64_t v24;
  __n128 *v25;
  unint64_t v26;
  unint64_t v27;

  v5 = a4;
  v8 = a1[2];
  *(_QWORD *)a2 = a4;
  *(_DWORD *)(a2 + 8) = v8;
  if (a1[3])
  {
    for (i = 0; i < a1[3]; ++i)
    {
      *(_QWORD *)a2 = v5;
      v11 = *(const __int16 **)(a3 + 16);
      v12 = **(_QWORD **)(a3 + 8);
      if (!v5
        && v12
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_39;
      }
      if (v12 >= 1)
      {
        if ((unint64_t)v12 >= 0x10)
        {
          v14 = v5 >= (unint64_t)(v11 + 1) || (unint64_t)v11 >= v5 + 2 * v12;
          v13 = (__int16 *)v5;
          if (v14)
          {
            v13 = (__int16 *)(v5 + 2 * (v12 & 0xFFFFFFFFFFFFFFF0));
            a5 = (__n128)vld1q_dup_s16(v11);
            v15 = (__n128 *)(v5 + 16);
            v16 = v12 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v15[-1] = a5;
              *v15 = a5;
              v15 += 2;
              v16 -= 16;
            }
            while (v16);
            v17 = v12 == (v12 & 0x7FFFFFFFFFFFFFF0);
            v12 &= 0xFu;
            if (v17)
              goto LABEL_3;
          }
        }
        else
        {
          v13 = (__int16 *)v5;
        }
        v18 = v12 + 1;
        do
        {
          a5.n128_u16[0] = *v11;
          *v13++ = *v11;
          --v18;
        }
        while (v18 > 1);
      }
LABEL_3:
      v5 += 2 * a1[4];
    }
  }
  *(_QWORD *)a2 = v5;
  v19 = *(uint64_t **)(a3 + 8);
  v20 = *(const __int16 **)(a3 + 16);
  v21 = *v19;
  if (!v5
    && v21
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
  {
LABEL_39:
    abort();
  }
  if (v21 >= 1)
  {
    if ((unint64_t)v21 < 0x10
      || (v5 < (unint64_t)(v20 + 1) ? (v22 = (unint64_t)v20 >= v5 + 2 * v21) : (v22 = 1), !v22))
    {
      v23 = (__int16 *)v5;
      v24 = v21;
LABEL_36:
      v27 = v24 + 1;
      do
      {
        a5.n128_u16[0] = *v20;
        *v23++ = *v20;
        --v27;
      }
      while (v27 > 1);
      return a5.n128_u16[0];
    }
    v23 = (__int16 *)(v5 + 2 * (v21 & 0xFFFFFFFFFFFFFFF0));
    v24 = v21 & 0xF;
    a5 = (__n128)vld1q_dup_s16(v20);
    v25 = (__n128 *)(v5 + 16);
    v26 = v21 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v25[-1] = a5;
      *v25 = a5;
      v25 += 2;
      v26 -= 16;
    }
    while (v26);
    if (v21 != (v21 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_36;
  }
  return a5.n128_u16[0];
}

uint64_t sub_224315114(uint64_t result, const __int16 *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __int16 *v38;
  uint64_t v39;
  uint64_t v40;
  int16x8_t v41;
  int16x8_t *v42;
  unint64_t v43;
  unint64_t v44;
  __int16 *v45;
  unint64_t v46;
  int16x8_t v47;
  int16x8_t *v48;
  unint64_t v49;
  __int16 *v50;
  uint64_t v51;
  unint64_t v52;
  int16x8_t v53;
  int16x8_t *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  _QWORD v58[3];
  _DWORD v59[5];
  int v60;
  unsigned int v61;
  unint64_t v62[2];

  v3 = result;
  v4 = *(unsigned int *)(result + 32);
  v6 = *(_DWORD *)(result + 44);
  v5 = *(_DWORD *)(result + 48);
  if (v5 == v6 * (_DWORD)v4)
  {
    v7 = *(unsigned int *)(result + 52);
    v8 = *(_DWORD *)(result + 36);
    v9 = (v8 * v4);
    if ((_DWORD)v7 == v8 * v5)
    {
      v10 = (v9 * *(_DWORD *)(result + 40));
      v11 = *(_QWORD *)(result + 24);
      if (*(_BYTE *)(result + 72) && v11)
      {
        v12 = *(_QWORD *)(result + 8);
        v13 = *(std::__shared_weak_count **)(result + 16);
        if (v13)
        {
          p_shared_owners = (unint64_t *)&v13->__shared_owners_;
          do
            v15 = __ldxr(p_shared_owners);
          while (__stxr(v15 + 1, p_shared_owners));
          do
            v16 = __ldaxr(p_shared_owners);
          while (__stlxr(v16 - 1, p_shared_owners));
          if (!v16)
          {
            ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
            std::__shared_weak_count::__release_weak(v13);
          }
        }
        result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v12 + 88))(v12, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v11 = *(_QWORD *)(v3 + 24);
      }
      if (!(_DWORD)v10 || v11)
      {
        if (!(_DWORD)v10)
          return result;
      }
      else
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_87;
      }
      v44 = v10 - ((_DWORD)v10 != 0) + 1;
      if (v44 < 0x10 || v11 < (unint64_t)(a2 + 1) && v11 + 2 * v10 > (unint64_t)a2)
      {
        v45 = (__int16 *)v11;
LABEL_64:
        v46 = v10 + 1;
        do
        {
          *v45++ = *a2;
          --v46;
        }
        while (v46 > 1);
        return result;
      }
      v45 = (__int16 *)(v11 + 2 * (v44 & 0xFFFFFFFFFFFFFFF0));
      v10 -= v44 & 0xFFFFFFFFFFFFFFF0;
      v47 = vld1q_dup_s16(a2);
      v48 = (int16x8_t *)(v11 + 16);
      v49 = v44 & 0xFFFFFFFFFFFFFFF0;
      do
      {
        v48[-1] = v47;
        *v48 = v47;
        v48 += 2;
        v49 -= 16;
      }
      while (v49);
      if (v44 != (v44 & 0xFFFFFFFFFFFFFFF0))
        goto LABEL_64;
    }
    else if ((_DWORD)v4)
    {
      if (v8)
      {
        v27 = *(_DWORD *)(result + 40);
        if (v27)
        {
          v28 = v27 - 1;
          v29 = *(_QWORD *)(result + 24);
          if (*(_BYTE *)(result + 72) && v29)
          {
            v30 = *(_QWORD *)(result + 8);
            v31 = *(std::__shared_weak_count **)(result + 16);
            if (v31)
            {
              v32 = (unint64_t *)&v31->__shared_owners_;
              do
                v33 = __ldxr(v32);
              while (__stxr(v33 + 1, v32));
              do
                v34 = __ldaxr(v32);
              while (__stlxr(v34 - 1, v32));
              if (!v34)
              {
                ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
                std::__shared_weak_count::__release_weak(v31);
              }
            }
            result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v30 + 88))(v30, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v29 = *(_QWORD *)(v3 + 24);
          }
          if (v28)
          {
            if (!(_DWORD)v9)
              return result;
            v35 = 0;
            v36 = 2 * v7;
            v37 = v29;
            while (1)
            {
              if (!v37)
              {
                result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
                if ((_DWORD)result)
                  break;
              }
              v38 = (__int16 *)v37;
              v39 = v9;
              if (v9 < 0x10)
                goto LABEL_56;
              if (v37 < (unint64_t)(a2 + 1))
              {
                v38 = (__int16 *)v37;
                v39 = v9;
                if (v29 + 2 * v9 + v36 * v35 > (unint64_t)a2)
                  goto LABEL_56;
              }
              v40 = 0;
              v38 = (__int16 *)(v37 + 2 * (v9 & 0xFFFFFFF0));
              v41 = vld1q_dup_s16(a2);
              do
              {
                v42 = (int16x8_t *)(v37 + v40);
                *v42 = v41;
                v42[1] = v41;
                v40 += 32;
              }
              while (((2 * v9) & 0x1FFFFFFE0) != v40);
              v39 = v9 & 0xF;
              if ((v9 & 0xFFFFFFF0) != v9)
              {
LABEL_56:
                v43 = v39 + 1;
                do
                {
                  *v38++ = *a2;
                  --v43;
                }
                while (v43 > 1);
              }
              v37 += v36;
              if ((_DWORD)++v35 == v28)
                goto LABEL_72;
            }
          }
          else
          {
            v37 = v29;
LABEL_72:
            if (!(_DWORD)v9
              || v37
              || (result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C), !(_DWORD)result))
            {
              if (!(_DWORD)v9)
                return result;
              if (v9 >= 0x10
                && (v37 >= (unint64_t)(a2 + 1) || v37 + 2 * v9 <= (unint64_t)a2))
              {
                v50 = (__int16 *)(v37 + 2 * (v9 & 0xFFFFFFF0));
                v51 = v9 & 0xF;
                v53 = vld1q_dup_s16(a2);
                v54 = (int16x8_t *)(v37 + 16);
                v55 = v9 & 0xFFFFFFF0;
                do
                {
                  v54[-1] = v53;
                  *v54 = v53;
                  v54 += 2;
                  v55 -= 16;
                }
                while (v55);
                if ((v9 & 0xFFFFFFF0) == v9)
                  return result;
              }
              else
              {
                v50 = (__int16 *)v37;
                v51 = v9;
              }
              v52 = v51 + 1;
              do
              {
                *v50++ = *a2;
                --v52;
              }
              while (v52 > 1);
              return result;
            }
          }
LABEL_87:
          abort();
        }
      }
    }
  }
  else
  {
    v57 = 0;
    v56 = v4;
    v58[0] = &v57;
    v58[1] = &v56;
    v58[2] = a2;
    if ((_DWORD)v4)
    {
      v17 = *(_DWORD *)(result + 36);
      if (v17)
      {
        v18 = *(_DWORD *)(result + 40);
        if (v18)
        {
          v59[0] = 0;
          v59[1] = v4 - 1;
          v59[2] = v6;
          v59[3] = v17 - 1;
          v19 = v18 - 1;
          v59[4] = v5;
          v60 = v18 - 1;
          v61 = *(_DWORD *)(result + 52);
          v20 = *(_QWORD *)(result + 24);
          if (*(_BYTE *)(result + 72) && v20)
          {
            v21 = *(_QWORD *)(result + 8);
            v22 = *(std::__shared_weak_count **)(result + 16);
            if (v22)
            {
              v23 = (unint64_t *)&v22->__shared_owners_;
              do
                v24 = __ldxr(v23);
              while (__stxr(v24 + 1, v23));
              do
                v25 = __ldaxr(v23);
              while (__stlxr(v25 - 1, v23));
              if (!v25)
              {
                ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
                std::__shared_weak_count::__release_weak(v22);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v20 = *(_QWORD *)(v3 + 24);
            v19 = v60;
          }
          v62[0] = 0;
          v62[1] = 0;
          if (v19)
          {
            v26 = 2 * v61;
            do
            {
              sub_224315638((uint64_t)v59, v62, (uint64_t)v58, v20);
              v20 += v26;
              --v19;
            }
            while (v19);
          }
          return sub_224315638((uint64_t)v59, v62, (uint64_t)v58, v20);
        }
      }
    }
  }
  return result;
}

uint64_t sub_224315638(uint64_t result, unint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v7;
  unsigned int i;
  const __int16 *v9;
  uint64_t v10;
  __int16 *v11;
  BOOL v12;
  int16x8_t v13;
  int16x8_t *v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  uint64_t *v18;
  const __int16 *v19;
  uint64_t v20;
  BOOL v21;
  __int16 *v22;
  uint64_t v23;
  int16x8_t v24;
  int16x8_t *v25;
  unint64_t v26;
  unint64_t v27;

  v4 = a4;
  *a2 = a4;
  if (*(_DWORD *)(result + 12))
  {
    v7 = result;
    for (i = 0; i < *(_DWORD *)(v7 + 12); ++i)
    {
      *a2 = v4;
      v9 = *(const __int16 **)(a3 + 16);
      v10 = **(_QWORD **)(a3 + 8);
      if (!v4)
      {
        if (v10)
        {
          result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
          if ((_DWORD)result)
            goto LABEL_39;
        }
      }
      if (v10 >= 1)
      {
        if ((unint64_t)v10 >= 0x10)
        {
          v12 = v4 >= (unint64_t)(v9 + 1) || (unint64_t)v9 >= v4 + 2 * v10;
          v11 = (__int16 *)v4;
          if (v12)
          {
            v11 = (__int16 *)(v4 + 2 * (v10 & 0xFFFFFFFFFFFFFFF0));
            v13 = vld1q_dup_s16(v9);
            v14 = (int16x8_t *)(v4 + 16);
            v15 = v10 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v14[-1] = v13;
              *v14 = v13;
              v14 += 2;
              v15 -= 16;
            }
            while (v15);
            v16 = v10 == (v10 & 0x7FFFFFFFFFFFFFF0);
            v10 &= 0xFu;
            if (v16)
              goto LABEL_3;
          }
        }
        else
        {
          v11 = (__int16 *)v4;
        }
        v17 = v10 + 1;
        do
        {
          *v11++ = *v9;
          --v17;
        }
        while (v17 > 1);
      }
LABEL_3:
      v4 += 2 * *(unsigned int *)(v7 + 16);
    }
  }
  *a2 = v4;
  v18 = *(uint64_t **)(a3 + 8);
  v19 = *(const __int16 **)(a3 + 16);
  v20 = *v18;
  if (!v4)
  {
    if (v20)
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
      if ((_DWORD)result)
LABEL_39:
        abort();
    }
  }
  if (v20 >= 1)
  {
    if ((unint64_t)v20 < 0x10
      || (v4 < (unint64_t)(v19 + 1) ? (v21 = (unint64_t)v19 >= v4 + 2 * v20) : (v21 = 1), !v21))
    {
      v22 = (__int16 *)v4;
      v23 = v20;
LABEL_36:
      v27 = v23 + 1;
      do
      {
        *v22++ = *v19;
        --v27;
      }
      while (v27 > 1);
      return result;
    }
    v22 = (__int16 *)(v4 + 2 * (v20 & 0xFFFFFFFFFFFFFFF0));
    v23 = v20 & 0xF;
    v24 = vld1q_dup_s16(v19);
    v25 = (int16x8_t *)(v4 + 16);
    v26 = v20 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v25[-1] = v24;
      *v25 = v24;
      v25 += 2;
      v26 -= 16;
    }
    while (v26);
    if (v20 != (v20 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_36;
  }
  return result;
}

uint64_t sub_224315840(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  _QWORD **v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  _WORD *v19;
  int v20;
  _WORD *v21;
  _WORD *v22;
  int v23;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v7 = (_QWORD **)result;
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_WORD **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      v19 = (_WORD *)**v7;
      if (v2 == 1)
      {
        do
        {
          *v11 = *v19;
          v11[1] = *v19;
          v11 += v10;
          --v8;
        }
        while (v8);
        goto LABEL_30;
      }
      v20 = 0;
      v21 = v11 + 1;
      do
      {
        v22 = v21;
        v23 = v2 - 1;
        do
        {
          *(v22 - 1) = *v19;
          *v22 = *v19;
          v22 += v9;
          --v23;
        }
        while (v23);
        *(v22 - 1) = *v19;
        *v22 = *v19;
        v11 += v10;
        ++v20;
        v21 += v10;
      }
      while (v20 != v8);
    }
    else
    {
      v19 = (_WORD *)**v7;
      if (v2 == 1)
      {
LABEL_30:
        *v11 = *v19;
        v11[1] = *v19;
        return result;
      }
    }
    do
    {
      *v11 = *v19;
      v11[1] = *v19;
      v11 += v9;
      --v18;
    }
    while (v18);
    goto LABEL_30;
  }
  return result;
}

void sub_2243159E8(uint64_t a1, const __int16 *a2, __n128 a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  int v19;
  int v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int16 *v39;
  uint64_t v40;
  uint64_t v41;
  int16x8_t v42;
  int16x8_t *v43;
  unint64_t v44;
  unint64_t v45;
  __int16 *v46;
  unint64_t v47;
  int16x8_t v48;
  int16x8_t *v49;
  unint64_t v50;
  __int16 *v51;
  uint64_t v52;
  unint64_t v53;
  int16x8_t v54;
  int16x8_t *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  _QWORD v59[3];
  _DWORD v60[5];
  int v61;
  unsigned int v62;
  unint64_t v63[2];

  v5 = *(unsigned int *)(a1 + 32);
  v7 = *(_DWORD *)(a1 + 44);
  v6 = *(_DWORD *)(a1 + 48);
  if (v6 == v7 * (_DWORD)v5)
  {
    v8 = *(unsigned int *)(a1 + 52);
    v9 = *(_DWORD *)(a1 + 36);
    v10 = (v9 * v5);
    if ((_DWORD)v8 == v9 * v6)
    {
      v11 = (v10 * *(_DWORD *)(a1 + 40));
      v12 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v12)
      {
        v13 = *(_QWORD *)(a1 + 8);
        v14 = *(std::__shared_weak_count **)(a1 + 16);
        if (v14)
        {
          p_shared_owners = (unint64_t *)&v14->__shared_owners_;
          do
            v16 = __ldxr(p_shared_owners);
          while (__stxr(v16 + 1, p_shared_owners));
          do
            v17 = __ldaxr(p_shared_owners);
          while (__stlxr(v17 - 1, p_shared_owners));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
            std::__shared_weak_count::__release_weak(v14);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v12 = *(_QWORD *)(a1 + 24);
      }
      if (!(_DWORD)v11 || v12)
      {
        if (!(_DWORD)v11)
          return;
      }
      else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_87;
      }
      v45 = v11 - ((_DWORD)v11 != 0) + 1;
      if (v45 < 0x10 || v12 < (unint64_t)(a2 + 1) && v12 + 2 * v11 > (unint64_t)a2)
      {
        v46 = (__int16 *)v12;
LABEL_64:
        v47 = v11 + 1;
        do
        {
          *v46++ = *a2;
          --v47;
        }
        while (v47 > 1);
        return;
      }
      v46 = (__int16 *)(v12 + 2 * (v45 & 0xFFFFFFFFFFFFFFF0));
      v11 -= v45 & 0xFFFFFFFFFFFFFFF0;
      v48 = vld1q_dup_s16(a2);
      v49 = (int16x8_t *)(v12 + 16);
      v50 = v45 & 0xFFFFFFFFFFFFFFF0;
      do
      {
        v49[-1] = v48;
        *v49 = v48;
        v49 += 2;
        v50 -= 16;
      }
      while (v50);
      if (v45 != (v45 & 0xFFFFFFFFFFFFFFF0))
        goto LABEL_64;
    }
    else if ((_DWORD)v5)
    {
      if (v9)
      {
        v28 = *(_DWORD *)(a1 + 40);
        if (v28)
        {
          v29 = v28 - 1;
          v30 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72) && v30)
          {
            v31 = *(_QWORD *)(a1 + 8);
            v32 = *(std::__shared_weak_count **)(a1 + 16);
            if (v32)
            {
              v33 = (unint64_t *)&v32->__shared_owners_;
              do
                v34 = __ldxr(v33);
              while (__stxr(v34 + 1, v33));
              do
                v35 = __ldaxr(v33);
              while (__stlxr(v35 - 1, v33));
              if (!v35)
              {
                ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
                std::__shared_weak_count::__release_weak(v32);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v31 + 88))(v31, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v30 = *(_QWORD *)(a1 + 24);
          }
          if (v29)
          {
            if (!(_DWORD)v10)
              return;
            v36 = 0;
            v37 = 2 * v8;
            v38 = v30;
            while (v38
                 || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
            {
              v39 = (__int16 *)v38;
              v40 = v10;
              if (v10 < 0x10)
                goto LABEL_56;
              if (v38 < (unint64_t)(a2 + 1))
              {
                v39 = (__int16 *)v38;
                v40 = v10;
                if (v30 + 2 * v10 + v37 * v36 > (unint64_t)a2)
                  goto LABEL_56;
              }
              v41 = 0;
              v39 = (__int16 *)(v38 + 2 * (v10 & 0xFFFFFFF0));
              v42 = vld1q_dup_s16(a2);
              do
              {
                v43 = (int16x8_t *)(v38 + v41);
                *v43 = v42;
                v43[1] = v42;
                v41 += 32;
              }
              while (((2 * v10) & 0x1FFFFFFE0) != v41);
              v40 = v10 & 0xF;
              if ((v10 & 0xFFFFFFF0) != v10)
              {
LABEL_56:
                v44 = v40 + 1;
                do
                {
                  *v39++ = *a2;
                  --v44;
                }
                while (v44 > 1);
              }
              v38 += v37;
              if ((_DWORD)++v36 == v29)
                goto LABEL_72;
            }
          }
          else
          {
            v38 = v30;
LABEL_72:
            if (!(_DWORD)v10
              || v38
              || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
            {
              if (!(_DWORD)v10)
                return;
              if (v10 >= 0x10
                && (v38 >= (unint64_t)(a2 + 1) || v38 + 2 * v10 <= (unint64_t)a2))
              {
                v51 = (__int16 *)(v38 + 2 * (v10 & 0xFFFFFFF0));
                v52 = v10 & 0xF;
                v54 = vld1q_dup_s16(a2);
                v55 = (int16x8_t *)(v38 + 16);
                v56 = v10 & 0xFFFFFFF0;
                do
                {
                  v55[-1] = v54;
                  *v55 = v54;
                  v55 += 2;
                  v56 -= 16;
                }
                while (v56);
                if ((v10 & 0xFFFFFFF0) == v10)
                  return;
              }
              else
              {
                v51 = (__int16 *)v38;
                v52 = v10;
              }
              v53 = v52 + 1;
              do
              {
                *v51++ = *a2;
                --v53;
              }
              while (v53 > 1);
              return;
            }
          }
LABEL_87:
          abort();
        }
      }
    }
  }
  else
  {
    v58 = 0;
    v57 = v5;
    v59[0] = &v58;
    v59[1] = &v57;
    v59[2] = a2;
    if ((_DWORD)v5)
    {
      v18 = *(_DWORD *)(a1 + 36);
      if (v18)
      {
        v19 = *(_DWORD *)(a1 + 40);
        if (v19)
        {
          v60[0] = 0;
          v60[1] = v5 - 1;
          v60[2] = v7;
          v60[3] = v18 - 1;
          v20 = v19 - 1;
          v60[4] = v6;
          v61 = v19 - 1;
          v62 = *(_DWORD *)(a1 + 52);
          v21 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72) && v21)
          {
            v22 = *(_QWORD *)(a1 + 8);
            v23 = *(std::__shared_weak_count **)(a1 + 16);
            if (v23)
            {
              v24 = (unint64_t *)&v23->__shared_owners_;
              do
                v25 = __ldxr(v24);
              while (__stxr(v25 + 1, v24));
              do
                v26 = __ldaxr(v24);
              while (__stlxr(v26 - 1, v24));
              if (!v26)
              {
                ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
                std::__shared_weak_count::__release_weak(v23);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v21 = *(_QWORD *)(a1 + 24);
            v20 = v61;
          }
          v63[0] = 0;
          v63[1] = 0;
          if (v20)
          {
            v27 = 2 * v62;
            do
            {
              a3.n128_u64[0] = sub_224315F0C((uint64_t)v60, v63, (uint64_t)v59, v21, a3);
              v21 += v27;
              --v20;
            }
            while (v20);
          }
          sub_224315F0C((uint64_t)v60, v63, (uint64_t)v59, v21, a3);
        }
      }
    }
  }
}

unsigned __int16 sub_224315F0C@<H0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, __n128 a5@<Q0>)
{
  unint64_t v5;
  unsigned int i;
  const __int16 *v10;
  uint64_t v11;
  __int16 *v12;
  BOOL v13;
  __n128 *v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  uint64_t *v18;
  const __int16 *v19;
  uint64_t v20;
  BOOL v21;
  __int16 *v22;
  uint64_t v23;
  __n128 *v24;
  unint64_t v25;
  unint64_t v26;

  v5 = a4;
  *a2 = a4;
  if (*(_DWORD *)(a1 + 12))
  {
    for (i = 0; i < *(_DWORD *)(a1 + 12); ++i)
    {
      *a2 = v5;
      v10 = *(const __int16 **)(a3 + 16);
      v11 = **(_QWORD **)(a3 + 8);
      if (!v5
        && v11
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_39;
      }
      if (v11 >= 1)
      {
        if ((unint64_t)v11 >= 0x10)
        {
          v13 = v5 >= (unint64_t)(v10 + 1) || (unint64_t)v10 >= v5 + 2 * v11;
          v12 = (__int16 *)v5;
          if (v13)
          {
            v12 = (__int16 *)(v5 + 2 * (v11 & 0xFFFFFFFFFFFFFFF0));
            a5 = (__n128)vld1q_dup_s16(v10);
            v14 = (__n128 *)(v5 + 16);
            v15 = v11 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v14[-1] = a5;
              *v14 = a5;
              v14 += 2;
              v15 -= 16;
            }
            while (v15);
            v16 = v11 == (v11 & 0x7FFFFFFFFFFFFFF0);
            v11 &= 0xFu;
            if (v16)
              goto LABEL_3;
          }
        }
        else
        {
          v12 = (__int16 *)v5;
        }
        v17 = v11 + 1;
        do
        {
          a5.n128_u16[0] = *v10;
          *v12++ = *v10;
          --v17;
        }
        while (v17 > 1);
      }
LABEL_3:
      v5 += 2 * *(unsigned int *)(a1 + 16);
    }
  }
  *a2 = v5;
  v18 = *(uint64_t **)(a3 + 8);
  v19 = *(const __int16 **)(a3 + 16);
  v20 = *v18;
  if (!v5
    && v20
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
  {
LABEL_39:
    abort();
  }
  if (v20 >= 1)
  {
    if ((unint64_t)v20 < 0x10
      || (v5 < (unint64_t)(v19 + 1) ? (v21 = (unint64_t)v19 >= v5 + 2 * v20) : (v21 = 1), !v21))
    {
      v22 = (__int16 *)v5;
      v23 = v20;
LABEL_36:
      v26 = v23 + 1;
      do
      {
        a5.n128_u16[0] = *v19;
        *v22++ = *v19;
        --v26;
      }
      while (v26 > 1);
      return a5.n128_u16[0];
    }
    v22 = (__int16 *)(v5 + 2 * (v20 & 0xFFFFFFFFFFFFFFF0));
    v23 = v20 & 0xF;
    a5 = (__n128)vld1q_dup_s16(v19);
    v24 = (__n128 *)(v5 + 16);
    v25 = v20 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v24[-1] = a5;
      *v24 = a5;
      v24 += 2;
      v25 -= 16;
    }
    while (v25);
    if (v20 != (v20 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_36;
  }
  return a5.n128_u16[0];
}

__int16 sub_224316114@<H0>(__int16 ***a1@<X0>, uint64_t a2@<X1>)
{
  int v2;
  int v3;
  BOOL v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  __int16 *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  __int16 *v21;
  __int16 *v22;
  int v23;
  __int16 *v24;
  __int16 result;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v8 = v3 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v9 = *(unsigned int *)(a2 + 52);
    v11 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(__int16 **)(a2 + 24);
    }
    v18 = v2 - 1;
    v19 = 2 * v10;
    if (v8)
    {
      if (v2 == 1)
      {
        do
        {
          *v11 = ***a1;
          v11[1] = ***a1;
          v11 += v9;
          --v8;
        }
        while (v8);
      }
      else
      {
        v20 = 0;
        v21 = v11 + 1;
        do
        {
          v22 = v21;
          v23 = v2 - 1;
          do
          {
            *(v22 - 1) = ***a1;
            *v22 = ***a1;
            v22 = (__int16 *)((char *)v22 + v19);
            --v23;
          }
          while (v23);
          *(v22 - 1) = ***a1;
          *v22 = ***a1;
          v11 += v9;
          ++v20;
          v21 += v9;
        }
        while (v20 != v8);
      }
    }
    if (v2 != 1)
    {
      do
      {
        *v11 = ***a1;
        v11[1] = ***a1;
        v11 = (__int16 *)((char *)v11 + v19);
        --v18;
      }
      while (v18);
    }
    *v11 = ***a1;
    v24 = **a1;
    result = *v24;
    v11[1] = *v24;
  }
  return result;
}

uint64_t sub_2243162F0(uint64_t result, const float *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  float32x4_t v41;
  float32x4_t *v42;
  unint64_t v43;
  unint64_t v44;
  _DWORD *v45;
  unint64_t v46;
  float32x4_t v47;
  float32x4_t *v48;
  unint64_t v49;
  _DWORD *v50;
  uint64_t v51;
  unint64_t v52;
  float32x4_t v53;
  float32x4_t *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  _QWORD v58[3];
  _DWORD v59[5];
  int v60;
  unsigned int v61;
  unint64_t v62[2];

  v3 = result;
  v4 = *(unsigned int *)(result + 32);
  v6 = *(_DWORD *)(result + 44);
  v5 = *(_DWORD *)(result + 48);
  if (v5 == v6 * (_DWORD)v4)
  {
    v7 = *(unsigned int *)(result + 52);
    v8 = *(_DWORD *)(result + 36);
    v9 = (v8 * v4);
    if ((_DWORD)v7 == v8 * v5)
    {
      v10 = (v9 * *(_DWORD *)(result + 40));
      v11 = *(_QWORD *)(result + 24);
      if (*(_BYTE *)(result + 72) && v11)
      {
        v12 = *(_QWORD *)(result + 8);
        v13 = *(std::__shared_weak_count **)(result + 16);
        if (v13)
        {
          p_shared_owners = (unint64_t *)&v13->__shared_owners_;
          do
            v15 = __ldxr(p_shared_owners);
          while (__stxr(v15 + 1, p_shared_owners));
          do
            v16 = __ldaxr(p_shared_owners);
          while (__stlxr(v16 - 1, p_shared_owners));
          if (!v16)
          {
            ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
            std::__shared_weak_count::__release_weak(v13);
          }
        }
        result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v12 + 88))(v12, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v11 = *(_QWORD *)(v3 + 24);
      }
      if (!(_DWORD)v10 || v11)
      {
        if (!(_DWORD)v10)
          return result;
      }
      else
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_87;
      }
      v44 = v10 - ((_DWORD)v10 != 0) + 1;
      if (v44 < 0x10 || v11 < (unint64_t)(a2 + 1) && v11 + 4 * v10 > (unint64_t)a2)
      {
        v45 = (_DWORD *)v11;
LABEL_64:
        v46 = v10 + 1;
        do
        {
          *v45++ = *(_DWORD *)a2;
          --v46;
        }
        while (v46 > 1);
        return result;
      }
      v45 = (_DWORD *)(v11 + 4 * (v44 & 0xFFFFFFFFFFFFFFF8));
      v10 -= v44 & 0xFFFFFFFFFFFFFFF8;
      v47 = vld1q_dup_f32(a2);
      v48 = (float32x4_t *)(v11 + 16);
      v49 = v44 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        v48[-1] = v47;
        *v48 = v47;
        v48 += 2;
        v49 -= 8;
      }
      while (v49);
      if (v44 != (v44 & 0xFFFFFFFFFFFFFFF8))
        goto LABEL_64;
    }
    else if ((_DWORD)v4)
    {
      if (v8)
      {
        v27 = *(_DWORD *)(result + 40);
        if (v27)
        {
          v28 = v27 - 1;
          v29 = *(_QWORD *)(result + 24);
          if (*(_BYTE *)(result + 72) && v29)
          {
            v30 = *(_QWORD *)(result + 8);
            v31 = *(std::__shared_weak_count **)(result + 16);
            if (v31)
            {
              v32 = (unint64_t *)&v31->__shared_owners_;
              do
                v33 = __ldxr(v32);
              while (__stxr(v33 + 1, v32));
              do
                v34 = __ldaxr(v32);
              while (__stlxr(v34 - 1, v32));
              if (!v34)
              {
                ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
                std::__shared_weak_count::__release_weak(v31);
              }
            }
            result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v30 + 88))(v30, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v29 = *(_QWORD *)(v3 + 24);
          }
          if (v28)
          {
            if (!(_DWORD)v9)
              return result;
            v35 = 0;
            v36 = 4 * v7;
            v37 = v29;
            while (1)
            {
              if (!v37)
              {
                result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
                if ((_DWORD)result)
                  break;
              }
              v38 = (_DWORD *)v37;
              v39 = v9;
              if (v9 < 8)
                goto LABEL_56;
              if (v37 < (unint64_t)(a2 + 1))
              {
                v38 = (_DWORD *)v37;
                v39 = v9;
                if (v29 + 4 * v9 + v36 * v35 > (unint64_t)a2)
                  goto LABEL_56;
              }
              v40 = 0;
              v38 = (_DWORD *)(v37 + 4 * (v9 & 0xFFFFFFF8));
              v41 = vld1q_dup_f32(a2);
              do
              {
                v42 = (float32x4_t *)(v37 + v40);
                *v42 = v41;
                v42[1] = v41;
                v40 += 32;
              }
              while (((4 * v9) & 0x3FFFFFFE0) != v40);
              v39 = v9 & 7;
              if ((v9 & 0xFFFFFFF8) != v9)
              {
LABEL_56:
                v43 = v39 + 1;
                do
                {
                  *v38++ = *(_DWORD *)a2;
                  --v43;
                }
                while (v43 > 1);
              }
              v37 += v36;
              if ((_DWORD)++v35 == v28)
                goto LABEL_72;
            }
          }
          else
          {
            v37 = v29;
LABEL_72:
            if (!(_DWORD)v9
              || v37
              || (result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C), !(_DWORD)result))
            {
              if (!(_DWORD)v9)
                return result;
              if (v9 >= 8 && (v37 >= (unint64_t)(a2 + 1) || v37 + 4 * v9 <= (unint64_t)a2))
              {
                v50 = (_DWORD *)(v37 + 4 * (v9 & 0xFFFFFFF8));
                v51 = v9 & 7;
                v53 = vld1q_dup_f32(a2);
                v54 = (float32x4_t *)(v37 + 16);
                v55 = v9 & 0xFFFFFFF8;
                do
                {
                  v54[-1] = v53;
                  *v54 = v53;
                  v54 += 2;
                  v55 -= 8;
                }
                while (v55);
                if ((v9 & 0xFFFFFFF8) == v9)
                  return result;
              }
              else
              {
                v50 = (_DWORD *)v37;
                v51 = v9;
              }
              v52 = v51 + 1;
              do
              {
                *v50++ = *(_DWORD *)a2;
                --v52;
              }
              while (v52 > 1);
              return result;
            }
          }
LABEL_87:
          abort();
        }
      }
    }
  }
  else
  {
    v57 = 0;
    v56 = v4;
    v58[0] = &v57;
    v58[1] = &v56;
    v58[2] = a2;
    if ((_DWORD)v4)
    {
      v17 = *(_DWORD *)(result + 36);
      if (v17)
      {
        v18 = *(_DWORD *)(result + 40);
        if (v18)
        {
          v59[0] = 0;
          v59[1] = v4 - 1;
          v59[2] = v6;
          v59[3] = v17 - 1;
          v19 = v18 - 1;
          v59[4] = v5;
          v60 = v18 - 1;
          v61 = *(_DWORD *)(result + 52);
          v20 = *(_QWORD *)(result + 24);
          if (*(_BYTE *)(result + 72) && v20)
          {
            v21 = *(_QWORD *)(result + 8);
            v22 = *(std::__shared_weak_count **)(result + 16);
            if (v22)
            {
              v23 = (unint64_t *)&v22->__shared_owners_;
              do
                v24 = __ldxr(v23);
              while (__stxr(v24 + 1, v23));
              do
                v25 = __ldaxr(v23);
              while (__stlxr(v25 - 1, v23));
              if (!v25)
              {
                ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
                std::__shared_weak_count::__release_weak(v22);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v20 = *(_QWORD *)(v3 + 24);
            v19 = v60;
          }
          v62[0] = 0;
          v62[1] = 0;
          if (v19)
          {
            v26 = 4 * v61;
            do
            {
              sub_224316814((uint64_t)v59, v62, (uint64_t)v58, v20);
              v20 += v26;
              --v19;
            }
            while (v19);
          }
          return sub_224316814((uint64_t)v59, v62, (uint64_t)v58, v20);
        }
      }
    }
  }
  return result;
}

uint64_t sub_224316814(uint64_t result, unint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v7;
  unsigned int i;
  const float *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  float32x4_t v16;
  float32x4_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  const float *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  unint64_t v27;
  float32x4_t v28;
  float32x4_t *v29;
  unint64_t v30;

  v4 = a4;
  *a2 = a4;
  if (*(_DWORD *)(result + 12))
  {
    v7 = result;
    for (i = 0; i < *(_DWORD *)(v7 + 12); ++i)
    {
      *a2 = v4;
      v9 = *(const float **)(a3 + 16);
      v10 = **(_QWORD **)(a3 + 8);
      if (!v4)
      {
        if (v10)
        {
          result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
          if ((_DWORD)result)
            goto LABEL_37;
        }
      }
      if (v10 >= 1)
      {
        v11 = v10 & 0x3FFFFFFFFFFFFFFFLL;
        v12 = (v10 & 0x3FFFFFFFFFFFFFFFLL) - ((v10 & 0x3FFFFFFFFFFFFFFFLL) != 0) + 1;
        if (v12 >= 0x10)
        {
          v14 = -4;
          if (!v11)
            v14 = 0;
          if (v4 >= (unint64_t)(v9 + 1)
            || (v15 = v4 + v14 + 4 * v10 + 4, v13 = (_DWORD *)v4, (unint64_t)v9 >= v15))
          {
            v13 = (_DWORD *)(v4 + 4 * (v12 & 0xFFFFFFFFFFFFFFF8));
            v11 -= v12 & 0xFFFFFFFFFFFFFFF8;
            v16 = vld1q_dup_f32(v9);
            v17 = (float32x4_t *)(v4 + 16);
            v18 = v12 & 0xFFFFFFFFFFFFFFF8;
            do
            {
              v17[-1] = v16;
              *v17 = v16;
              v17 += 2;
              v18 -= 8;
            }
            while (v18);
            if (v12 == (v12 & 0xFFFFFFFFFFFFFFF8))
              goto LABEL_3;
          }
        }
        else
        {
          v13 = (_DWORD *)v4;
        }
        v19 = v11 + 1;
        do
        {
          *v13++ = *(_DWORD *)v9;
          --v19;
        }
        while (v19 > 1);
      }
LABEL_3:
      v4 += 4 * *(unsigned int *)(v7 + 16);
    }
  }
  *a2 = v4;
  v20 = *(uint64_t **)(a3 + 8);
  v21 = *(const float **)(a3 + 16);
  v22 = *v20;
  if (!v4)
  {
    if (v22)
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
      if ((_DWORD)result)
LABEL_37:
        abort();
    }
  }
  if (v22 >= 1)
  {
    v23 = v22 & 0x3FFFFFFFFFFFFFFFLL;
    v24 = (v22 & 0x3FFFFFFFFFFFFFFFLL) - ((v22 & 0x3FFFFFFFFFFFFFFFLL) != 0) + 1;
    if (v24 < 0x10)
      goto LABEL_29;
    v25 = 4 * v22;
    if (!v23)
      v25 = 4;
    if (v4 < (unint64_t)(v21 + 1) && (unint64_t)v21 < v4 + v25)
    {
LABEL_29:
      v26 = (_DWORD *)v4;
LABEL_30:
      v27 = v23 + 1;
      do
      {
        *v26++ = *(_DWORD *)v21;
        --v27;
      }
      while (v27 > 1);
      return result;
    }
    v26 = (_DWORD *)(v4 + 4 * (v24 & 0xFFFFFFFFFFFFFFF8));
    v23 -= v24 & 0xFFFFFFFFFFFFFFF8;
    v28 = vld1q_dup_f32(v21);
    v29 = (float32x4_t *)(v4 + 16);
    v30 = v24 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v29[-1] = v28;
      *v29 = v28;
      v29 += 2;
      v30 -= 8;
    }
    while (v30);
    if (v24 != (v24 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_30;
  }
  return result;
}

float sub_224316A60(_QWORD **a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  _DWORD *v19;
  int v20;
  _DWORD *v21;
  _DWORD *v22;
  int v23;
  float result;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(_DWORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_DWORD **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      v19 = (_DWORD *)**a1;
      if (v2 == 1)
      {
        do
        {
          *v11 = *v19;
          v11[1] = *v19;
          v11 += v10;
          --v8;
        }
        while (v8);
        goto LABEL_30;
      }
      v20 = 0;
      v21 = v11 + 1;
      do
      {
        v22 = v21;
        v23 = v2 - 1;
        do
        {
          *(v22 - 1) = *v19;
          *v22 = *v19;
          v22 += v9;
          --v23;
        }
        while (v23);
        *(v22 - 1) = *v19;
        *v22 = *v19;
        v11 += v10;
        ++v20;
        v21 += v10;
      }
      while (v20 != v8);
    }
    else
    {
      v19 = (_DWORD *)**a1;
      if (v2 == 1)
      {
LABEL_30:
        *v11 = *v19;
        result = *(float *)v19;
        v11[1] = *v19;
        return result;
      }
    }
    do
    {
      *v11 = *v19;
      v11[1] = *v19;
      v11 += v9;
      --v18;
    }
    while (v18);
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_224316C08(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  _QWORD **v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  _WORD *v19;
  int v20;
  _WORD *v21;
  _WORD *v22;
  int v23;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v7 = (_QWORD **)result;
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_WORD **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      v19 = (_WORD *)**v7;
      if (v2 == 1)
      {
        do
        {
          *v11 = *v19;
          v11[1] = *v19;
          v11[2] = *v19;
          v11 += v10;
          --v8;
        }
        while (v8);
        goto LABEL_30;
      }
      v20 = 0;
      v21 = v11 + 2;
      do
      {
        v22 = v21;
        v23 = v2 - 1;
        do
        {
          *(v22 - 2) = *v19;
          *(v22 - 1) = *v19;
          *v22 = *v19;
          v22 += v9;
          --v23;
        }
        while (v23);
        *(v22 - 2) = *v19;
        *(v22 - 1) = *v19;
        *v22 = *v19;
        v11 += v10;
        ++v20;
        v21 += v10;
      }
      while (v20 != v8);
    }
    else
    {
      v19 = (_WORD *)**v7;
      if (v2 == 1)
      {
LABEL_30:
        *v11 = *v19;
        v11[1] = *v19;
        v11[2] = *v19;
        return result;
      }
    }
    do
    {
      *v11 = *v19;
      v11[1] = *v19;
      v11[2] = *v19;
      v11 += v9;
      --v18;
    }
    while (v18);
    goto LABEL_30;
  }
  return result;
}

float sub_224316DD8(_QWORD **a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  _DWORD *v19;
  int v20;
  _DWORD *v21;
  _DWORD *v22;
  int v23;
  float result;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(_DWORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_DWORD **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      v19 = (_DWORD *)**a1;
      if (v2 == 1)
      {
        do
        {
          *v11 = *v19;
          v11[1] = *v19;
          v11[2] = *v19;
          v11 += v10;
          --v8;
        }
        while (v8);
        goto LABEL_30;
      }
      v20 = 0;
      v21 = v11 + 2;
      do
      {
        v22 = v21;
        v23 = v2 - 1;
        do
        {
          *(v22 - 2) = *v19;
          *(v22 - 1) = *v19;
          *v22 = *v19;
          v22 += v9;
          --v23;
        }
        while (v23);
        *(v22 - 2) = *v19;
        *(v22 - 1) = *v19;
        *v22 = *v19;
        v11 += v10;
        ++v20;
        v21 += v10;
      }
      while (v20 != v8);
    }
    else
    {
      v19 = (_DWORD *)**a1;
      if (v2 == 1)
      {
LABEL_30:
        *v11 = *v19;
        v11[1] = *v19;
        result = *(float *)v19;
        v11[2] = *v19;
        return result;
      }
    }
    do
    {
      *v11 = *v19;
      v11[1] = *v19;
      v11[2] = *v19;
      v11 += v9;
      --v18;
    }
    while (v18);
    goto LABEL_30;
  }
  return result;
}

_DWORD *sub_224316FA8(_DWORD *result, _WORD **a2, _WORD *a3)
{
  int v3;
  int v4;
  _WORD *v5;
  uint64_t v6;
  int v7;
  _WORD *v8;
  uint64_t v9;
  _WORD *v10;
  int v11;
  uint64_t v12;

  v3 = result[5];
  if (!v3)
  {
    v4 = result[3];
    v5 = *a2;
    if (!v4)
      goto LABEL_13;
    goto LABEL_9;
  }
  v4 = result[3];
  v5 = *a2;
  v6 = result[6];
  if (v4)
  {
    v7 = 0;
    v8 = a3 + 2;
    v9 = 2 * result[4];
    do
    {
      v10 = v8;
      v11 = v4;
      do
      {
        *(v10 - 2) = *v5;
        *(v10 - 1) = *v5;
        *v10 = *v5;
        v10[1] = *v5;
        v10 = (_WORD *)((char *)v10 + v9);
        --v11;
      }
      while (v11);
      *(v10 - 2) = *v5;
      *(v10 - 1) = *v5;
      *v10 = *v5;
      v10[1] = *v5;
      a3 += v6;
      ++v7;
      v8 += v6;
    }
    while (v7 != v3);
LABEL_9:
    v12 = 2 * result[4];
    do
    {
      *a3 = *v5;
      a3[1] = *v5;
      a3[2] = *v5;
      a3[3] = *v5;
      a3 = (_WORD *)((char *)a3 + v12);
      --v4;
    }
    while (v4);
    goto LABEL_13;
  }
  do
  {
    *a3 = *v5;
    a3[1] = *v5;
    a3[2] = *v5;
    a3[3] = *v5;
    a3 += v6;
    --v3;
  }
  while (v3);
LABEL_13:
  *a3 = *v5;
  a3[1] = *v5;
  a3[2] = *v5;
  a3[3] = *v5;
  return result;
}

float sub_2243170DC(_DWORD *a1, _DWORD **a2, _DWORD *a3)
{
  int v3;
  int v4;
  _DWORD *v5;
  uint64_t v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  int v11;
  uint64_t v12;
  float result;

  v3 = a1[5];
  if (!v3)
  {
    v4 = a1[3];
    v5 = *a2;
    if (!v4)
      goto LABEL_13;
    goto LABEL_9;
  }
  v4 = a1[3];
  v5 = *a2;
  v6 = a1[6];
  if (v4)
  {
    v7 = 0;
    v8 = a3 + 2;
    v9 = 4 * a1[4];
    do
    {
      v10 = v8;
      v11 = v4;
      do
      {
        *(v10 - 2) = *v5;
        *(v10 - 1) = *v5;
        *v10 = *v5;
        v10[1] = *v5;
        v10 = (_DWORD *)((char *)v10 + v9);
        --v11;
      }
      while (v11);
      *(v10 - 2) = *v5;
      *(v10 - 1) = *v5;
      *v10 = *v5;
      v10[1] = *v5;
      a3 += v6;
      ++v7;
      v8 += v6;
    }
    while (v7 != v3);
LABEL_9:
    v12 = 4 * a1[4];
    do
    {
      *a3 = *v5;
      a3[1] = *v5;
      a3[2] = *v5;
      a3[3] = *v5;
      a3 = (_DWORD *)((char *)a3 + v12);
      --v4;
    }
    while (v4);
    goto LABEL_13;
  }
  do
  {
    *a3 = *v5;
    a3[1] = *v5;
    a3[2] = *v5;
    a3[3] = *v5;
    a3 += v6;
    --v3;
  }
  while (v3);
LABEL_13:
  *a3 = *v5;
  a3[1] = *v5;
  a3[2] = *v5;
  result = *(float *)v5;
  a3[3] = *v5;
  return result;
}

#error "224317210: too big function (funcsize=0)"

void sub_224327C04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26)
{
  void *v26;
  unint64_t *p_shared_owners;
  unint64_t v29;

  if (v26)
    operator delete(v26);
  if (a15)
  {
    p_shared_owners = (unint64_t *)&a15->__shared_owners_;
    do
      v29 = __ldaxr(p_shared_owners);
    while (__stlxr(v29 - 1, p_shared_owners));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))a15->__on_zero_shared)(a15);
      std::__shared_weak_count::__release_weak(a15);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2243289F4(_DWORD *result, unsigned __int8 **a2)
{
  _DWORD *v2;
  int v3;
  int v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  size_t v8;
  void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  _QWORD v17[2];
  char v18;

  v2 = result;
  v4 = result[8];
  v3 = result[9];
  v6 = *a2;
  v5 = a2[1];
  if (*a2 == v5)
  {
LABEL_5:
    v8 = (v3 * v4);
    v9 = (void *)*((_QWORD *)result + 3);
    if (*((_BYTE *)v2 + 48))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *((_QWORD *)v2 + 1);
      v12 = (std::__shared_weak_count *)*((_QWORD *)v2 + 2);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v11 + 88))(v11, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v9 = (void *)*((_QWORD *)v2 + 3);
    }
    return memset(v9, *v6, v8);
  }
  else
  {
    v7 = *a2;
    while (*v7 == *v6)
    {
      if (++v7 == v5)
        goto LABEL_5;
    }
    v18 = 0;
    v17[0] = result;
    v17[1] = &v18;
    v16[0] = a2;
    v16[1] = v17;
    if (v4 && v3)
      return (_DWORD *)sub_224328B20((uint64_t)v16, (uint64_t)result);
  }
  return result;
}

uint64_t sub_224328B20(uint64_t result, uint64_t a2)
{
  int v2;
  BOOL v3;
  char ***v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  char **v16;
  int i;
  char *v18;
  char *v19;
  _BYTE *v20;
  char v21;
  char *j;
  char *v23;
  char v24;

  v2 = *(_DWORD *)(a2 + 36);
  if (*(_DWORD *)(a2 + 32))
    v3 = v2 == 0;
  else
    v3 = 1;
  if (v3)
    return result;
  v5 = (char ***)result;
  v6 = v2 - 1;
  v7 = *(unsigned int *)(a2 + 40);
  v8 = *(unsigned int *)(a2 + 44);
  v9 = *(_BYTE **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a2 + 8);
    v12 = *(std::__shared_weak_count **)(a2 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v11 + 88))(v11, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v9 = *(_BYTE **)(a2 + 24);
  }
  v16 = *v5;
  if (!v6)
    goto LABEL_29;
  if (*v16 == v16[1])
  {
    v9 += v8 * (unint64_t)v6;
LABEL_29:
    v23 = *v16;
    j = v16[1];
    if (v23 == j)
      return result;
    goto LABEL_30;
  }
  for (i = 0; i != v6; ++i)
  {
    v18 = **v5;
    v19 = (*v5)[1];
    if (v18 != v19)
    {
      v20 = v9;
      do
      {
        v21 = *v18++;
        *v20 = v21;
        v20 += v7;
      }
      while (v18 != v19);
    }
    v9 += v8;
  }
  v23 = **v5;
  for (j = (*v5)[1]; v23 != j; v9 += v7)
  {
LABEL_30:
    v24 = *v23++;
    *v9 = v24;
  }
  return result;
}

unsigned int *sub_224328C80(unsigned int *result, unsigned __int8 **a2)
{
  unsigned int *v2;
  size_t v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  unsigned int v7;
  BOOL v8;
  unsigned int v9;
  uint64_t v10;
  char *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  _QWORD v18[2];
  _QWORD v19[2];
  char v20;

  v2 = result;
  v3 = result[8];
  v5 = *a2;
  v4 = a2[1];
  if (*a2 == v4)
  {
LABEL_5:
    v7 = result[9];
    if ((_DWORD)v3)
      v8 = v7 == 0;
    else
      v8 = 1;
    if (!v8)
    {
      v9 = v7 - 1;
      v10 = result[11];
      v11 = (char *)*((_QWORD *)result + 3);
      if (*((_BYTE *)result + 48))
        v12 = v11 == 0;
      else
        v12 = 1;
      if (!v12)
      {
        v13 = *((_QWORD *)result + 1);
        v14 = (std::__shared_weak_count *)*((_QWORD *)result + 2);
        if (v14)
        {
          p_shared_owners = (unint64_t *)&v14->__shared_owners_;
          do
            v16 = __ldxr(p_shared_owners);
          while (__stxr(v16 + 1, p_shared_owners));
          do
            v17 = __ldaxr(p_shared_owners);
          while (__stlxr(v17 - 1, p_shared_owners));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
            std::__shared_weak_count::__release_weak(v14);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v11 = (char *)*((_QWORD *)v2 + 3);
      }
      for (; v9; --v9)
      {
        memset(v11, *v5, v3);
        v11 += v10;
      }
      return (unsigned int *)memset(v11, *v5, v3);
    }
  }
  else
  {
    v6 = *a2;
    while (*v6 == *v5)
    {
      if (++v6 == v4)
        goto LABEL_5;
    }
    v20 = 0;
    v19[0] = result;
    v19[1] = &v20;
    v18[0] = a2;
    v18[1] = v19;
    if ((_DWORD)v3 && result[9])
      return (unsigned int *)sub_224328B20((uint64_t)v18, (uint64_t)result);
  }
  return result;
}

uint64_t sub_224328DF4(uint64_t result, unsigned __int16 **a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unsigned __int16 *v6;
  const __int16 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  unsigned __int16 *v17;
  const __int16 *v18;
  unsigned __int16 *v19;
  int v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int16x8_t *v30;
  unint64_t v31;
  __int16 *v32;
  unint64_t v33;
  int16x8_t v34;
  unint64_t v35;
  int16x8_t *v36;
  unint64_t v37;
  unint64_t v38;
  __int16 *v39;
  unint64_t v40;
  int16x8_t v41;
  int16x8_t *v42;
  unint64_t v43;
  unint64_t v44;
  __int16 *v45;
  unint64_t v46;
  int16x8_t v47;
  int16x8_t *v48;
  unint64_t v49;
  unsigned __int16 **v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  char v54;

  v2 = result;
  v3 = *(unsigned int *)(result + 32);
  v4 = *(unsigned int *)(result + 44);
  if ((_DWORD)v4 == *(_DWORD *)(result + 40) * (_DWORD)v3)
  {
    v5 = *(_DWORD *)(result + 36);
    v7 = (const __int16 *)*a2;
    v6 = a2[1];
    if (*a2 != v6)
    {
      v8 = *a2;
      while (*v8 == *(unsigned __int16 *)v7)
      {
        if (++v8 == v6)
          goto LABEL_6;
      }
      v54 = 0;
      v52 = result;
      v53 = &v54;
      v50 = a2;
      v51 = &v52;
      if (!(_DWORD)v3 || !v5)
        return result;
      return sub_2243292D0((uint64_t)&v50, result);
    }
LABEL_6:
    v9 = (v5 * v3);
    v10 = *(_QWORD *)(result + 24);
    if (*(_BYTE *)(result + 48))
      v11 = v10 == 0;
    else
      v11 = 1;
    if (!v11)
    {
      v12 = *(_QWORD *)(result + 8);
      v13 = *(std::__shared_weak_count **)(result + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v12 + 88))(v12, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v10 = *(_QWORD *)(v2 + 24);
    }
    if (!(_DWORD)v9 || v10)
    {
      if (!(_DWORD)v9)
        return result;
    }
    else
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
      if ((_DWORD)result)
        goto LABEL_82;
    }
    v38 = v9 - ((_DWORD)v9 != 0) + 1;
    if (v38 >= 0x10 && (v10 >= (unint64_t)(v7 + 1) || (unint64_t)v7 >= v10 + 2 * v9))
    {
      v39 = (__int16 *)(v10 + 2 * (v38 & 0xFFFFFFFFFFFFFFF0));
      v9 -= v38 & 0xFFFFFFFFFFFFFFF0;
      v41 = vld1q_dup_s16(v7);
      v42 = (int16x8_t *)(v10 + 16);
      v43 = v38 & 0xFFFFFFFFFFFFFFF0;
      do
      {
        v42[-1] = v41;
        *v42 = v41;
        v42 += 2;
        v43 -= 16;
      }
      while (v43);
      if (v38 == (v38 & 0xFFFFFFFFFFFFFFF0))
        return result;
    }
    else
    {
      v39 = (__int16 *)v10;
    }
    v40 = v9 + 1;
    do
    {
      *v39++ = *v7;
      --v40;
    }
    while (v40 > 1);
    return result;
  }
  v18 = (const __int16 *)*a2;
  v17 = a2[1];
  if (*a2 == v17)
  {
LABEL_25:
    if (!(_DWORD)v3)
      return result;
    v20 = *(_DWORD *)(result + 36);
    if (!v20)
      return result;
    v21 = v20 - 1;
    v22 = *(_QWORD *)(result + 24);
    if (*(_BYTE *)(result + 48) && v22)
    {
      v23 = *(_QWORD *)(result + 8);
      v24 = *(std::__shared_weak_count **)(result + 16);
      if (v24)
      {
        v25 = (unint64_t *)&v24->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v23 + 88))(v23, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v22 = *(_QWORD *)(v2 + 24);
    }
    if (v21)
    {
      v28 = 0;
      v29 = 2 * v4;
      v30 = (int16x8_t *)(v22 + 16);
      v31 = v22;
      while (1)
      {
        if (!v31)
        {
          result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
          if ((_DWORD)result)
            break;
        }
        v32 = (__int16 *)v31;
        v33 = v3;
        if (v3 < 0x10)
          goto LABEL_47;
        if (v31 < (unint64_t)(v18 + 1))
        {
          v32 = (__int16 *)v31;
          v33 = v3;
          if ((unint64_t)v18 < v22 + 2 * v3 + v29 * v28)
            goto LABEL_47;
        }
        v32 = (__int16 *)(v31 + 2 * (v3 & 0xFFFFFFFFFFFFFFF0));
        v34 = vld1q_dup_s16(v18);
        v35 = v3 & 0xFFFFFFFFFFFFFFF0;
        v36 = v30;
        do
        {
          v36[-1] = v34;
          *v36 = v34;
          v36 += 2;
          v35 -= 16;
        }
        while (v35);
        v33 = v3 - (v3 & 0xFFFFFFFFFFFFFFF0);
        if (v3 != (v3 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_47:
          v37 = v33 + 1;
          do
          {
            *v32++ = *v18;
            --v37;
          }
          while (v37 > 1);
        }
        v31 += 2 * v4;
        ++v28;
        v30 = (int16x8_t *)((char *)v30 + v29);
        if ((_DWORD)v28 == v21)
          goto LABEL_69;
      }
    }
    else
    {
      v31 = v22;
LABEL_69:
      if (v31
        || (result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C), !(_DWORD)result))
      {
        v44 = v3 - ((_DWORD)v3 != 0) + 1;
        if (v44 >= 0x10 && (v31 >= (unint64_t)(v18 + 1) || (unint64_t)v18 >= v31 + 2 * v3))
        {
          v45 = (__int16 *)(v31 + 2 * (v44 & 0xFFFFFFFFFFFFFFF0));
          v3 -= v44 & 0xFFFFFFFFFFFFFFF0;
          v47 = vld1q_dup_s16(v18);
          v48 = (int16x8_t *)(v31 + 16);
          v49 = v44 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v48[-1] = v47;
            *v48 = v47;
            v48 += 2;
            v49 -= 16;
          }
          while (v49);
          if (v44 == (v44 & 0xFFFFFFFFFFFFFFF0))
            return result;
        }
        else
        {
          v45 = (__int16 *)v31;
        }
        v46 = v3 + 1;
        do
        {
          *v45++ = *v18;
          --v46;
        }
        while (v46 > 1);
        return result;
      }
    }
LABEL_82:
    abort();
  }
  v19 = *a2;
  while (*v19 == *(unsigned __int16 *)v18)
  {
    if (++v19 == v17)
      goto LABEL_25;
  }
  v54 = 0;
  v52 = result;
  v53 = &v54;
  v50 = a2;
  v51 = &v52;
  if ((_DWORD)v3 && *(_DWORD *)(result + 36))
    return sub_2243292D0((uint64_t)&v50, result);
  return result;
}

uint64_t sub_2243292D0(uint64_t result, uint64_t a2)
{
  int v2;
  BOOL v3;
  __int16 ***v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _WORD *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __int16 **v16;
  __int16 *v17;
  __int16 *v18;
  int i;
  _WORD *v20;
  __int16 *v21;
  __int16 v22;
  __int16 v23;

  v2 = *(_DWORD *)(a2 + 36);
  if (*(_DWORD *)(a2 + 32))
    v3 = v2 == 0;
  else
    v3 = 1;
  if (v3)
    return result;
  v5 = (__int16 ***)result;
  v6 = v2 - 1;
  v7 = *(unsigned int *)(a2 + 40);
  v8 = *(unsigned int *)(a2 + 44);
  v9 = *(_WORD **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a2 + 8);
    v12 = *(std::__shared_weak_count **)(a2 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v11 + 88))(v11, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v9 = *(_WORD **)(a2 + 24);
  }
  v16 = *v5;
  v17 = **v5;
  if (!v6)
  {
    v18 = v16[1];
    if (v17 == v18)
      return result;
    goto LABEL_25;
  }
  v18 = v16[1];
  if (v17 != v18)
  {
    for (i = 0; i != v6; ++i)
    {
      v20 = v9;
      v21 = v17;
      do
      {
        v22 = *v21++;
        *v20 = v22;
        v20 += v7;
      }
      while (v21 != v18);
      v9 += v8;
    }
    for (; v17 != v18; v9 += v7)
    {
LABEL_25:
      v23 = *v17++;
      *v9 = v23;
    }
  }
  return result;
}

uint64_t sub_22432941C(uint64_t result, const __int16 **a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  const __int16 *v6;
  const __int16 *v7;
  const __int16 *v13;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t v23;
  const __int16 *v24;
  const __int16 *v25;
  const __int16 *v28;
  int v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int16x8_t *v41;
  unint64_t v42;
  __int16 *v43;
  unint64_t v44;
  int16x8_t v45;
  unint64_t v46;
  int16x8_t *v47;
  unint64_t v48;
  unint64_t v49;
  __int16 *v50;
  unint64_t v51;
  int16x8_t v52;
  int16x8_t *v53;
  unint64_t v54;
  unint64_t v55;
  __int16 *v56;
  unint64_t v57;
  int16x8_t v58;
  int16x8_t *v59;
  unint64_t v60;
  const __int16 **v61;
  uint64_t *v62;
  uint64_t v63;
  char *v64;
  char v65;

  v2 = result;
  v3 = *(unsigned int *)(result + 32);
  v4 = *(unsigned int *)(result + 44);
  if ((_DWORD)v4 == *(_DWORD *)(result + 40) * (_DWORD)v3)
  {
    v5 = *(_DWORD *)(result + 36);
    v7 = *a2;
    v6 = a2[1];
    if (*a2 != v6)
    {
      _H0 = *v7;
      __asm { FCVT            S0, H0 }
      v13 = *a2;
      while (1)
      {
        _H1 = *v13;
        __asm { FCVT            S1, H1 }
        if (_S1 != _S0)
          break;
        if (++v13 == v6)
          goto LABEL_6;
      }
      v65 = 0;
      v63 = result;
      v64 = &v65;
      v61 = a2;
      v62 = &v63;
      if (!(_DWORD)v3 || !v5)
        return result;
      return sub_224329908((uint64_t)&v61, result);
    }
LABEL_6:
    v16 = (v5 * v3);
    v17 = *(_QWORD *)(result + 24);
    if (*(_BYTE *)(result + 48))
      _ZF = v17 == 0;
    else
      _ZF = 1;
    if (!_ZF)
    {
      v19 = *(_QWORD *)(result + 8);
      v20 = *(std::__shared_weak_count **)(result + 16);
      if (v20)
      {
        p_shared_owners = (unint64_t *)&v20->__shared_owners_;
        do
          v22 = __ldxr(p_shared_owners);
        while (__stxr(v22 + 1, p_shared_owners));
        do
          v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v19 + 88))(v19, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v17 = *(_QWORD *)(v2 + 24);
    }
    if (!(_DWORD)v16 || v17)
    {
      if (!(_DWORD)v16)
        return result;
    }
    else
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
      if ((_DWORD)result)
        goto LABEL_82;
    }
    v49 = v16 - ((_DWORD)v16 != 0) + 1;
    if (v49 >= 0x10 && (v17 >= (unint64_t)(v7 + 1) || (unint64_t)v7 >= v17 + 2 * v16))
    {
      v50 = (__int16 *)(v17 + 2 * (v49 & 0xFFFFFFFFFFFFFFF0));
      v16 -= v49 & 0xFFFFFFFFFFFFFFF0;
      v52 = vld1q_dup_s16(v7);
      v53 = (int16x8_t *)(v17 + 16);
      v54 = v49 & 0xFFFFFFFFFFFFFFF0;
      do
      {
        v53[-1] = v52;
        *v53 = v52;
        v53 += 2;
        v54 -= 16;
      }
      while (v54);
      if (v49 == (v49 & 0xFFFFFFFFFFFFFFF0))
        return result;
    }
    else
    {
      v50 = (__int16 *)v17;
    }
    v51 = v16 + 1;
    do
    {
      *v50++ = *v7;
      --v51;
    }
    while (v51 > 1);
    return result;
  }
  v25 = *a2;
  v24 = a2[1];
  if (*a2 == v24)
  {
LABEL_25:
    if (!(_DWORD)v3)
      return result;
    v31 = *(_DWORD *)(result + 36);
    if (!v31)
      return result;
    v32 = v31 - 1;
    v33 = *(_QWORD *)(result + 24);
    if (*(_BYTE *)(result + 48) && v33)
    {
      v34 = *(_QWORD *)(result + 8);
      v35 = *(std::__shared_weak_count **)(result + 16);
      if (v35)
      {
        v36 = (unint64_t *)&v35->__shared_owners_;
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 1, v36));
        do
          v38 = __ldaxr(v36);
        while (__stlxr(v38 - 1, v36));
        if (!v38)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v34 + 88))(v34, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v33 = *(_QWORD *)(v2 + 24);
    }
    if (v32)
    {
      v39 = 0;
      v40 = 2 * v4;
      v41 = (int16x8_t *)(v33 + 16);
      v42 = v33;
      while (1)
      {
        if (!v42)
        {
          result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C);
          if ((_DWORD)result)
            break;
        }
        v43 = (__int16 *)v42;
        v44 = v3;
        if (v3 < 0x10)
          goto LABEL_47;
        if (v42 < (unint64_t)(v25 + 1))
        {
          v43 = (__int16 *)v42;
          v44 = v3;
          if ((unint64_t)v25 < v33 + 2 * v3 + v40 * v39)
            goto LABEL_47;
        }
        v43 = (__int16 *)(v42 + 2 * (v3 & 0xFFFFFFFFFFFFFFF0));
        v45 = vld1q_dup_s16(v25);
        v46 = v3 & 0xFFFFFFFFFFFFFFF0;
        v47 = v41;
        do
        {
          v47[-1] = v45;
          *v47 = v45;
          v47 += 2;
          v46 -= 16;
        }
        while (v46);
        v44 = v3 - (v3 & 0xFFFFFFFFFFFFFFF0);
        if (v3 != (v3 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_47:
          v48 = v44 + 1;
          do
          {
            *v43++ = *v25;
            --v48;
          }
          while (v48 > 1);
        }
        v42 += 2 * v4;
        ++v39;
        v41 = (int16x8_t *)((char *)v41 + v40);
        if ((_DWORD)v39 == v32)
          goto LABEL_69;
      }
    }
    else
    {
      v42 = v33;
LABEL_69:
      if (v42
        || (result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C), !(_DWORD)result))
      {
        v55 = v3 - ((_DWORD)v3 != 0) + 1;
        if (v55 >= 0x10 && (v42 >= (unint64_t)(v25 + 1) || (unint64_t)v25 >= v42 + 2 * v3))
        {
          v56 = (__int16 *)(v42 + 2 * (v55 & 0xFFFFFFFFFFFFFFF0));
          v3 -= v55 & 0xFFFFFFFFFFFFFFF0;
          v58 = vld1q_dup_s16(v25);
          v59 = (int16x8_t *)(v42 + 16);
          v60 = v55 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v59[-1] = v58;
            *v59 = v58;
            v59 += 2;
            v60 -= 16;
          }
          while (v60);
          if (v55 == (v55 & 0xFFFFFFFFFFFFFFF0))
            return result;
        }
        else
        {
          v56 = (__int16 *)v42;
        }
        v57 = v3 + 1;
        do
        {
          *v56++ = *v25;
          --v57;
        }
        while (v57 > 1);
        return result;
      }
    }
LABEL_82:
    abort();
  }
  _H0 = *v25;
  __asm { FCVT            S0, H0 }
  v28 = *a2;
  while (1)
  {
    _H1 = *v28;
    __asm { FCVT            S1, H1 }
    if (_S1 != _S0)
      break;
    if (++v28 == v24)
      goto LABEL_25;
  }
  v65 = 0;
  v63 = result;
  v64 = &v65;
  v61 = a2;
  v62 = &v63;
  if ((_DWORD)v3 && *(_DWORD *)(result + 36))
    return sub_224329908((uint64_t)&v61, result);
  return result;
}

uint64_t sub_224329908(uint64_t result, uint64_t a2)
{
  int v2;
  BOOL v3;
  __int16 ***v5;
  uint64_t v6;
  uint64_t v7;
  _WORD *v8;
  BOOL v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  __int16 **v15;
  int v16;
  __int16 *v17;
  __int16 *v18;
  _WORD *v19;
  __int16 v20;
  __int16 *v21;
  __int16 *v22;
  __int16 v23;

  v2 = *(_DWORD *)(a2 + 36);
  if (*(_DWORD *)(a2 + 32))
    v3 = v2 == 0;
  else
    v3 = 1;
  if (!v3)
  {
    v5 = (__int16 ***)result;
    v6 = *(unsigned int *)(a2 + 40);
    v7 = *(unsigned int *)(a2 + 44);
    v8 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v9 = v8 == 0;
    else
      v9 = 1;
    if (!v9)
    {
      v10 = *(_QWORD *)(a2 + 8);
      v11 = *(std::__shared_weak_count **)(a2 + 16);
      if (v11)
      {
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        do
          v13 = __ldxr(p_shared_owners);
        while (__stxr(v13 + 1, p_shared_owners));
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v10 + 88))(v10, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v8 = *(_WORD **)(a2 + 24);
    }
    v15 = *v5;
    if (v2 != 1)
    {
      if (*v15 == v15[1])
      {
        v8 = (_WORD *)((char *)v8 + (2 * (v2 - 2) + 2) * v7);
        v22 = *v15;
        v21 = v15[1];
        if (v22 == v21)
          return result;
        do
        {
LABEL_26:
          v23 = *v22++;
          *v8 = v23;
          v8 += v6;
        }
        while (v22 != v21);
        return result;
      }
      v16 = 0;
      do
      {
        v17 = **v5;
        v18 = (*v5)[1];
        if (v17 != v18)
        {
          v19 = v8;
          do
          {
            v20 = *v17++;
            *v19 = v20;
            v19 += v6;
          }
          while (v17 != v18);
        }
        v8 += v7;
        ++v16;
      }
      while (v16 != v2 - 1);
      v15 = *v5;
    }
    v22 = *v15;
    v21 = v15[1];
    if (v22 == v21)
      return result;
    goto LABEL_26;
  }
  return result;
}

void sub_224329A7C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  int v5;
  float *v6;
  const float *v7;
  float *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  float *v17;
  const float *v18;
  float *v19;
  int v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float32x4_t *v30;
  unint64_t v31;
  _DWORD *v32;
  unint64_t v33;
  float32x4_t v34;
  unint64_t v35;
  float32x4_t *v36;
  unint64_t v37;
  unint64_t v38;
  _DWORD *v39;
  unint64_t v40;
  float32x4_t v41;
  float32x4_t *v42;
  unint64_t v43;
  unint64_t v44;
  _DWORD *v45;
  unint64_t v46;
  float32x4_t v47;
  float32x4_t *v48;
  unint64_t v49;
  float **v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  char v54;

  v3 = *(unsigned int *)(a1 + 32);
  v4 = *(unsigned int *)(a1 + 44);
  if ((_DWORD)v4 == *(_DWORD *)(a1 + 40) * (_DWORD)v3)
  {
    v5 = *(_DWORD *)(a1 + 36);
    v7 = *(const float **)a2;
    v6 = *(float **)(a2 + 8);
    if (*(float **)a2 != v6)
    {
      v8 = *(float **)a2;
      while (*v8 == *v7)
      {
        if (++v8 == v6)
          goto LABEL_6;
      }
      v54 = 0;
      v52 = a1;
      v53 = &v54;
      v50 = (float **)a2;
      v51 = &v52;
      if (!(_DWORD)v3 || !v5)
        return;
LABEL_63:
      sub_224329F58(&v50, a1);
      return;
    }
LABEL_6:
    v9 = (v5 * v3);
    v10 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(a1 + 48))
      v11 = v10 == 0;
    else
      v11 = 1;
    if (!v11)
    {
      v12 = *(_QWORD *)(a1 + 8);
      v13 = *(std::__shared_weak_count **)(a1 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v12 + 88))(v12, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v10 = *(_QWORD *)(a1 + 24);
    }
    if (!(_DWORD)v9 || v10)
    {
      if (!(_DWORD)v9)
        return;
    }
    else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_82;
    }
    v38 = v9 - ((_DWORD)v9 != 0) + 1;
    if (v38 >= 0x10 && (v10 >= (unint64_t)(v7 + 1) || (unint64_t)v7 >= v10 + 4 * v9))
    {
      v39 = (_DWORD *)(v10 + 4 * (v38 & 0xFFFFFFFFFFFFFFF8));
      v9 -= v38 & 0xFFFFFFFFFFFFFFF8;
      v41 = vld1q_dup_f32(v7);
      v42 = (float32x4_t *)(v10 + 16);
      v43 = v38 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        v42[-1] = v41;
        *v42 = v41;
        v42 += 2;
        v43 -= 8;
      }
      while (v43);
      if (v38 == (v38 & 0xFFFFFFFFFFFFFFF8))
        return;
    }
    else
    {
      v39 = (_DWORD *)v10;
    }
    v40 = v9 + 1;
    do
    {
      *v39++ = *(_DWORD *)v7;
      --v40;
    }
    while (v40 > 1);
    return;
  }
  v18 = *(const float **)a2;
  v17 = *(float **)(a2 + 8);
  if (*(float **)a2 == v17)
  {
LABEL_25:
    if (!(_DWORD)v3)
      return;
    v20 = *(_DWORD *)(a1 + 36);
    if (!v20)
      return;
    v21 = v20 - 1;
    v22 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v22)
    {
      v23 = *(_QWORD *)(a1 + 8);
      v24 = *(std::__shared_weak_count **)(a1 + 16);
      if (v24)
      {
        v25 = (unint64_t *)&v24->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v23 + 88))(v23, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v22 = *(_QWORD *)(a1 + 24);
    }
    if (v21)
    {
      v28 = 0;
      v29 = 4 * v4;
      v30 = (float32x4_t *)(v22 + 16);
      v31 = v22;
      while (v31
           || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
      {
        v32 = (_DWORD *)v31;
        v33 = v3;
        if (v3 < 8)
          goto LABEL_47;
        if (v31 < (unint64_t)(v18 + 1))
        {
          v32 = (_DWORD *)v31;
          v33 = v3;
          if ((unint64_t)v18 < v22 + 4 * v3 + v29 * v28)
            goto LABEL_47;
        }
        v32 = (_DWORD *)(v31 + 4 * (v3 & 0xFFFFFFFFFFFFFFF8));
        v34 = vld1q_dup_f32(v18);
        v35 = v3 & 0xFFFFFFFFFFFFFFF8;
        v36 = v30;
        do
        {
          v36[-1] = v34;
          *v36 = v34;
          v36 += 2;
          v35 -= 8;
        }
        while (v35);
        v33 = v3 - (v3 & 0xFFFFFFFFFFFFFFF8);
        if (v3 != (v3 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_47:
          v37 = v33 + 1;
          do
          {
            *v32++ = *(_DWORD *)v18;
            --v37;
          }
          while (v37 > 1);
        }
        v31 += 4 * v4;
        ++v28;
        v30 = (float32x4_t *)((char *)v30 + v29);
        if ((_DWORD)v28 == v21)
          goto LABEL_69;
      }
    }
    else
    {
      v31 = v22;
LABEL_69:
      if (v31
        || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2245B496D, 0, (void (*)(void **))sub_22457406C))
      {
        v44 = v3 - ((_DWORD)v3 != 0) + 1;
        if (v44 >= 0x10 && (v31 >= (unint64_t)(v18 + 1) || (unint64_t)v18 >= v31 + 4 * v3))
        {
          v45 = (_DWORD *)(v31 + 4 * (v44 & 0xFFFFFFFFFFFFFFF8));
          v3 -= v44 & 0xFFFFFFFFFFFFFFF8;
          v47 = vld1q_dup_f32(v18);
          v48 = (float32x4_t *)(v31 + 16);
          v49 = v44 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v48[-1] = v47;
            *v48 = v47;
            v48 += 2;
            v49 -= 8;
          }
          while (v49);
          if (v44 == (v44 & 0xFFFFFFFFFFFFFFF8))
            return;
        }
        else
        {
          v45 = (_DWORD *)v31;
        }
        v46 = v3 + 1;
        do
        {
          *v45++ = *(_DWORD *)v18;
          --v46;
        }
        while (v46 > 1);
        return;
      }
    }
LABEL_82:
    abort();
  }
  v19 = *(float **)a2;
  while (*v19 == *v18)
  {
    if (++v19 == v17)
      goto LABEL_25;
  }
  v54 = 0;
  v52 = a1;
  v53 = &v54;
  v50 = (float **)a2;
  v51 = &v52;
  if ((_DWORD)v3 && *(_DWORD *)(a1 + 36))
    goto LABEL_63;
}

float sub_224329F58(float ***a1, uint64_t a2)
{
  int v2;
  BOOL v3;
  int v6;
  uint64_t v7;
  uint64_t v8;
  float *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  float result;
  float **v17;
  float *v18;
  float *v19;
  int i;
  float *v21;
  float *v22;
  float v23;
  float v24;

  v2 = *(_DWORD *)(a2 + 36);
  if (*(_DWORD *)(a2 + 32))
    v3 = v2 == 0;
  else
    v3 = 1;
  if (v3)
    return result;
  v6 = v2 - 1;
  v7 = *(unsigned int *)(a2 + 40);
  v8 = *(unsigned int *)(a2 + 44);
  v9 = *(float **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a2 + 8);
    v12 = *(std::__shared_weak_count **)(a2 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v11 + 88))(v11, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v9 = *(float **)(a2 + 24);
  }
  v17 = *a1;
  v18 = **a1;
  if (!v6)
  {
    v19 = v17[1];
    if (v18 == v19)
      return result;
    goto LABEL_25;
  }
  v19 = v17[1];
  if (v18 != v19)
  {
    for (i = 0; i != v6; ++i)
    {
      v21 = v9;
      v22 = v18;
      do
      {
        v23 = *v22++;
        result = v23;
        *v21 = v23;
        v21 += v7;
      }
      while (v22 != v19);
      v9 += v8;
    }
    for (; v18 != v19; v9 += v7)
    {
LABEL_25:
      v24 = *v18++;
      result = v24;
      *v9 = v24;
    }
  }
  return result;
}

uint64_t sub_22432A0A4(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  _BYTE **v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  int v19;
  _BYTE *v20;
  _BYTE *v21;
  int v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v7 = (_BYTE **)result;
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_BYTE **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      if (v2 == 1)
      {
        do
        {
          v25 = *v7;
          *v11 = **v7;
          v11[1] = v25[1];
          v11 += v10;
          --v8;
        }
        while (v8);
      }
      else
      {
        v19 = 0;
        v20 = v11 + 1;
        do
        {
          v21 = v20;
          v22 = v2 - 1;
          do
          {
            v23 = *v7;
            *(v21 - 1) = **v7;
            *v21 = v23[1];
            v21 += v9;
            --v22;
          }
          while (v22);
          v24 = *v7;
          *(v21 - 1) = **v7;
          *v21 = v24[1];
          v11 += v10;
          ++v19;
          v20 += v10;
        }
        while (v19 != v8);
      }
    }
    if (v2 != 1)
    {
      do
      {
        v26 = *v7;
        *v11 = **v7;
        v11[1] = v26[1];
        v11 += v9;
        --v18;
      }
      while (v18);
    }
    v27 = *v7;
    *v11 = **v7;
    v11[1] = v27[1];
  }
  return result;
}

uint64_t sub_22432A238(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  _WORD **v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  _WORD *v19;
  int v20;
  _WORD *v21;
  _WORD *v22;
  int v23;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v7 = (_WORD **)result;
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_WORD **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      v19 = *v7;
      if (v2 == 1)
      {
        do
        {
          *v11 = *v19;
          v11[1] = v19[1];
          v11 += v10;
          --v8;
        }
        while (v8);
        goto LABEL_30;
      }
      v20 = 0;
      v21 = v11 + 1;
      do
      {
        v22 = v21;
        v23 = v2 - 1;
        do
        {
          *(v22 - 1) = *v19;
          *v22 = v19[1];
          v22 += v9;
          --v23;
        }
        while (v23);
        *(v22 - 1) = *v19;
        *v22 = v19[1];
        v11 += v10;
        ++v20;
        v21 += v10;
      }
      while (v20 != v8);
    }
    else
    {
      v19 = *v7;
      if (v2 == 1)
      {
LABEL_30:
        *v11 = *v19;
        v11[1] = v19[1];
        return result;
      }
    }
    do
    {
      *v11 = *v19;
      v11[1] = v19[1];
      v11 += v9;
      --v18;
    }
    while (v18);
    goto LABEL_30;
  }
  return result;
}

__int16 sub_22432A3D8@<H0>(_WORD **a1@<X0>, uint64_t a2@<X1>)
{
  int v2;
  int v3;
  BOOL v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  _WORD *v21;
  _WORD *v22;
  int v23;
  _WORD *v24;
  _WORD *v25;
  _WORD *v26;
  _WORD *v27;
  _WORD *v28;
  __int16 result;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v8 = v3 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v9 = *(unsigned int *)(a2 + 52);
    v11 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_WORD **)(a2 + 24);
    }
    v18 = v2 - 1;
    v19 = 2 * v10;
    if (v8)
    {
      if (v2 == 1)
      {
        do
        {
          v26 = *a1;
          *v11 = **a1;
          v11[1] = v26[1];
          v11 += v9;
          --v8;
        }
        while (v8);
      }
      else
      {
        v20 = 0;
        v21 = v11 + 1;
        do
        {
          v22 = v21;
          v23 = v2 - 1;
          do
          {
            v24 = *a1;
            *(v22 - 1) = **a1;
            *v22 = v24[1];
            v22 = (_WORD *)((char *)v22 + v19);
            --v23;
          }
          while (v23);
          v25 = *a1;
          *(v22 - 1) = **a1;
          *v22 = v25[1];
          v11 += v9;
          ++v20;
          v21 += v9;
        }
        while (v20 != v8);
      }
    }
    if (v2 != 1)
    {
      do
      {
        v27 = *a1;
        *v11 = **a1;
        v11[1] = v27[1];
        v11 = (_WORD *)((char *)v11 + v19);
        --v18;
      }
      while (v18);
    }
    v28 = *a1;
    *v11 = **a1;
    result = v28[1];
    v11[1] = result;
  }
  return result;
}

float sub_22432A578(float **a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  float *v19;
  int v20;
  _DWORD *v21;
  _DWORD *v22;
  int v23;
  float result;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(float **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      v19 = *a1;
      if (v2 == 1)
      {
        do
        {
          *v11 = *v19;
          v11[1] = v19[1];
          v11 += v10;
          --v8;
        }
        while (v8);
        goto LABEL_30;
      }
      v20 = 0;
      v21 = v11 + 1;
      do
      {
        v22 = v21;
        v23 = v2 - 1;
        do
        {
          *(v22 - 1) = *(_DWORD *)v19;
          *v22 = *((_DWORD *)v19 + 1);
          v22 += v9;
          --v23;
        }
        while (v23);
        *(v22 - 1) = *(_DWORD *)v19;
        *v22 = *((_DWORD *)v19 + 1);
        v11 += v10;
        ++v20;
        v21 += v10;
      }
      while (v20 != v8);
    }
    else
    {
      v19 = *a1;
      if (v2 == 1)
      {
LABEL_30:
        *v11 = *v19;
        result = v19[1];
        v11[1] = result;
        return result;
      }
    }
    do
    {
      *v11 = *v19;
      v11[1] = v19[1];
      v11 += v9;
      --v18;
    }
    while (v18);
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_22432A718(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  _WORD **v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  _WORD *v19;
  int v20;
  _WORD *v21;
  _WORD *v22;
  int v23;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v7 = (_WORD **)result;
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_WORD **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      v19 = *v7;
      if (v2 == 1)
      {
        do
        {
          *v11 = *v19;
          v11[1] = v19[1];
          v11[2] = v19[2];
          v11 += v10;
          --v8;
        }
        while (v8);
        goto LABEL_30;
      }
      v20 = 0;
      v21 = v11 + 2;
      do
      {
        v22 = v21;
        v23 = v2 - 1;
        do
        {
          *(v22 - 2) = *v19;
          *(v22 - 1) = v19[1];
          *v22 = v19[2];
          v22 += v9;
          --v23;
        }
        while (v23);
        *(v22 - 2) = *v19;
        *(v22 - 1) = v19[1];
        *v22 = v19[2];
        v11 += v10;
        ++v20;
        v21 += v10;
      }
      while (v20 != v8);
    }
    else
    {
      v19 = *v7;
      if (v2 == 1)
      {
LABEL_30:
        *v11 = *v19;
        v11[1] = v19[1];
        v11[2] = v19[2];
        return result;
      }
    }
    do
    {
      *v11 = *v19;
      v11[1] = v19[1];
      v11[2] = v19[2];
      v11 += v9;
      --v18;
    }
    while (v18);
    goto LABEL_30;
  }
  return result;
}

__int16 sub_22432A8E0@<H0>(_WORD **a1@<X0>, uint64_t a2@<X1>)
{
  int v2;
  int v3;
  BOOL v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  _WORD *v21;
  _WORD *v22;
  int v23;
  _WORD *v24;
  _WORD *v25;
  _WORD *v26;
  _WORD *v27;
  _WORD *v28;
  __int16 result;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v8 = v3 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v9 = *(unsigned int *)(a2 + 52);
    v11 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_WORD **)(a2 + 24);
    }
    v18 = v2 - 1;
    v19 = 2 * v10;
    if (v8)
    {
      if (v2 == 1)
      {
        do
        {
          v26 = *a1;
          *v11 = **a1;
          v11[1] = v26[1];
          v11[2] = v26[2];
          v11 += v9;
          --v8;
        }
        while (v8);
      }
      else
      {
        v20 = 0;
        v21 = v11 + 2;
        do
        {
          v22 = v21;
          v23 = v2 - 1;
          do
          {
            v24 = *a1;
            *(v22 - 2) = **a1;
            *(v22 - 1) = v24[1];
            *v22 = v24[2];
            v22 = (_WORD *)((char *)v22 + v19);
            --v23;
          }
          while (v23);
          v25 = *a1;
          *(v22 - 2) = **a1;
          *(v22 - 1) = v25[1];
          *v22 = v25[2];
          v11 += v9;
          ++v20;
          v21 += v9;
        }
        while (v20 != v8);
      }
    }
    if (v2 != 1)
    {
      do
      {
        v27 = *a1;
        *v11 = **a1;
        v11[1] = v27[1];
        v11[2] = v27[2];
        v11 = (_WORD *)((char *)v11 + v19);
        --v18;
      }
      while (v18);
    }
    v28 = *a1;
    *v11 = **a1;
    v11[1] = v28[1];
    result = v28[2];
    v11[2] = result;
  }
  return result;
}

float sub_22432AAA8(float **a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  float *v19;
  int v20;
  _DWORD *v21;
  _DWORD *v22;
  int v23;
  float result;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(float **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      v19 = *a1;
      if (v2 == 1)
      {
        do
        {
          *v11 = *v19;
          v11[1] = v19[1];
          v11[2] = v19[2];
          v11 += v10;
          --v8;
        }
        while (v8);
        goto LABEL_30;
      }
      v20 = 0;
      v21 = v11 + 2;
      do
      {
        v22 = v21;
        v23 = v2 - 1;
        do
        {
          *(v22 - 2) = *(_DWORD *)v19;
          *(v22 - 1) = *((_DWORD *)v19 + 1);
          *v22 = *((_DWORD *)v19 + 2);
          v22 += v9;
          --v23;
        }
        while (v23);
        *(v22 - 2) = *(_DWORD *)v19;
        *(v22 - 1) = *((_DWORD *)v19 + 1);
        *v22 = *((_DWORD *)v19 + 2);
        v11 += v10;
        ++v20;
        v21 += v10;
      }
      while (v20 != v8);
    }
    else
    {
      v19 = *a1;
      if (v2 == 1)
      {
LABEL_30:
        *v11 = *v19;
        v11[1] = v19[1];
        result = v19[2];
        v11[2] = result;
        return result;
      }
    }
    do
    {
      *v11 = *v19;
      v11[1] = v19[1];
      v11[2] = v19[2];
      v11 += v9;
      --v18;
    }
    while (v18);
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_22432AC70(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  _BYTE **v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  int v19;
  _BYTE *v20;
  _BYTE *v21;
  int v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v7 = (_BYTE **)result;
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_BYTE **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      if (v2 == 1)
      {
        do
        {
          v25 = *v7;
          *v11 = **v7;
          v11[1] = v25[1];
          v11[2] = v25[2];
          v11[3] = v25[3];
          v11 += v10;
          --v8;
        }
        while (v8);
      }
      else
      {
        v19 = 0;
        v20 = v11 + 3;
        do
        {
          v21 = v20;
          v22 = v2 - 1;
          do
          {
            v23 = *v7;
            *(v21 - 3) = **v7;
            *(v21 - 2) = v23[1];
            *(v21 - 1) = v23[2];
            *v21 = v23[3];
            v21 += v9;
            --v22;
          }
          while (v22);
          v24 = *v7;
          *(v21 - 3) = **v7;
          *(v21 - 2) = v24[1];
          *(v21 - 1) = v24[2];
          *v21 = v24[3];
          v11 += v10;
          ++v19;
          v20 += v10;
        }
        while (v19 != v8);
      }
    }
    if (v2 != 1)
    {
      do
      {
        v26 = *v7;
        *v11 = **v7;
        v11[1] = v26[1];
        v11[2] = v26[2];
        v11[3] = v26[3];
        v11 += v9;
        --v18;
      }
      while (v18);
    }
    v27 = *v7;
    *v11 = **v7;
    v11[1] = v27[1];
    v11[2] = v27[2];
    v11[3] = v27[3];
  }
  return result;
}

uint64_t sub_22432AE54(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  _WORD **v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  _WORD *v19;
  int v20;
  _WORD *v21;
  _WORD *v22;
  int v23;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v7 = (_WORD **)result;
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_WORD **)(a2 + 24);
    }
    v18 = v2 - 1;
    v19 = *v7;
    if (v8)
    {
      if (v2 == 1)
      {
        do
        {
          *v11 = *v19;
          v11[1] = v19[1];
          v11[2] = v19[2];
          v11[3] = v19[3];
          v11 += v10;
          --v8;
        }
        while (v8);
LABEL_29:
        *v11 = *v19;
        v11[1] = v19[1];
        v11[2] = v19[2];
        v11[3] = v19[3];
        return result;
      }
      v20 = 0;
      v21 = v11 + 2;
      do
      {
        v22 = v21;
        v23 = v2 - 1;
        do
        {
          *(v22 - 2) = *v19;
          *(v22 - 1) = v19[1];
          *v22 = v19[2];
          v22[1] = v19[3];
          v22 += v9;
          --v23;
        }
        while (v23);
        *(v22 - 2) = *v19;
        *(v22 - 1) = v19[1];
        *v22 = v19[2];
        v22[1] = v19[3];
        v11 += v10;
        ++v20;
        v21 += v10;
      }
      while (v20 != v8);
    }
    if (v2 != 1)
    {
      do
      {
        *v11 = *v19;
        v11[1] = v19[1];
        v11[2] = v19[2];
        v11[3] = v19[3];
        v11 += v9;
        --v18;
      }
      while (v18);
    }
    goto LABEL_29;
  }
  return result;
}

float sub_22432B038(float **a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  float *v19;
  int v20;
  _DWORD *v21;
  _DWORD *v22;
  int v23;
  float result;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(float **)(a2 + 24);
    }
    v18 = v2 - 1;
    v19 = *a1;
    if (v8)
    {
      if (v2 == 1)
      {
        do
        {
          *v11 = *v19;
          v11[1] = v19[1];
          v11[2] = v19[2];
          v11[3] = v19[3];
          v11 += v10;
          --v8;
        }
        while (v8);
LABEL_29:
        *v11 = *v19;
        v11[1] = v19[1];
        v11[2] = v19[2];
        result = v19[3];
        v11[3] = result;
        return result;
      }
      v20 = 0;
      v21 = v11 + 2;
      do
      {
        v22 = v21;
        v23 = v2 - 1;
        do
        {
          *(v22 - 2) = *(_DWORD *)v19;
          *(v22 - 1) = *((_DWORD *)v19 + 1);
          *v22 = *((_DWORD *)v19 + 2);
          v22[1] = *((_DWORD *)v19 + 3);
          v22 += v9;
          --v23;
        }
        while (v23);
        *(v22 - 2) = *(_DWORD *)v19;
        *(v22 - 1) = *((_DWORD *)v19 + 1);
        *v22 = *((_DWORD *)v19 + 2);
        v22[1] = *((_DWORD *)v19 + 3);
        v11 += v10;
        ++v20;
        v21 += v10;
      }
      while (v20 != v8);
    }
    if (v2 != 1)
    {
      do
      {
        *v11 = *v19;
        v11[1] = v19[1];
        v11[2] = v19[2];
        v11[3] = v19[3];
        v11 += v9;
        --v18;
      }
      while (v18);
    }
    goto LABEL_29;
  }
  return result;
}

void sub_22432B21C(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::logic_error *exception;
  const std::string *v10;
  _BYTE v11[8];
  uint64_t v12;
  std::__shared_weak_count *v13;
  __int128 v14;
  _BYTE v15[22];
  char v16;

  sub_22432B370(a1, a2, (uint64_t)v11);
  if (!v16)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v10 = (const std::string *)sub_22432CC68((uint64_t)v11);
    std::logic_error::logic_error(exception, v10);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = v12;
  v5 = v13;
  *(_QWORD *)a3 = &off_24EC1F958;
  *(_QWORD *)(a3 + 8) = v4;
  *(_QWORD *)(a3 + 16) = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = v14;
    *(_OWORD *)(a3 + 40) = *(_OWORD *)v15;
    *(_QWORD *)(a3 + 54) = *(_QWORD *)&v15[14];
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(_OWORD *)(a3 + 24) = v14;
    *(_OWORD *)(a3 + 40) = *(_OWORD *)v15;
    *(_QWORD *)(a3 + 54) = *(_QWORD *)&v15[14];
  }
}

void sub_22432B340(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22432CCA8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22432B354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  void *v10;

  __cxa_free_exception(v10);
  sub_22432CCA8((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_22432B370(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  unsigned int v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  size_t v13;
  void **v14;
  unint64_t v15;
  unint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  __int128 v28;
  void *__p[2];
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  char v33;
  char v34;
  __int128 *v35;
  __int128 v36;
  int *v37;
  const char *v38;
  const char *v39;
  void *__dst[2];
  unint64_t v41;

  v5 = *(_DWORD *)(a1 + 48);
  v31 = v5;
  v32 = a2;
  v6 = atomic_load((unsigned __int8 *)&qword_255795368);
  if ((v6 & 1) == 0)
  {
    v25 = a1;
    v26 = __cxa_guard_acquire(&qword_255795368);
    a1 = v25;
    if (v26)
    {
      qword_255795350 = (uint64_t)&unk_2246BB4C4;
      *(_OWORD *)algn_255795358 = xmmword_2246BB460;
      __cxa_guard_release(&qword_255795368);
      a1 = v25;
    }
  }
  if (*(_BYTE *)(qword_255795350 + 12 * (dword_255795360 * a2 + unk_255795364 * v5)))
    __asm { BR              X10 }
  v7 = atomic_load((unsigned __int8 *)&qword_255795368);
  if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_255795368))
  {
    qword_255795350 = (uint64_t)&unk_2246BB4C4;
    *(_OWORD *)algn_255795358 = xmmword_2246BB460;
    __cxa_guard_release(&qword_255795368);
  }
  v8 = dword_255795360;
  v9 = unk_255795364;
  v10 = qword_255795350;
  LODWORD(v28) = 0;
  sub_223844F44(&v27, "Cannot convert format ");
  sub_2231A0B14((uint64_t)&v34, (uint64_t)&v27, &v31);
  *(_QWORD *)&v36 = &v27;
  *((_QWORD *)&v36 + 1) = " to ";
  v37 = &v27;
  v38 = " to ";
  v39 = " to ";
  if ((_DWORD)v28 == -1)
    sub_22316DD70();
  __dst[0] = &v36;
  ((void (*)(void **, int *))off_24EC73698[v28])(__dst, &v27);
  sub_2231A0B14((uint64_t)&v33, (uint64_t)&v27, &v32);
  *(_QWORD *)&v36 = &v27;
  *((_QWORD *)&v36 + 1) = ". (";
  v37 = &v27;
  v38 = ". (";
  v39 = ". (";
  if ((_DWORD)v28 == -1)
    sub_22316DD70();
  __dst[0] = &v36;
  ((void (*)(void **, int *))off_24EC736B0[v28])(__dst, &v27);
  v11 = operator new();
  *(_QWORD *)(v11 + 272) = 0;
  *(_OWORD *)(v11 + 240) = 0u;
  *(_OWORD *)(v11 + 256) = 0u;
  *(_OWORD *)(v11 + 208) = 0u;
  *(_OWORD *)(v11 + 224) = 0u;
  *(_OWORD *)(v11 + 176) = 0u;
  *(_OWORD *)(v11 + 192) = 0u;
  *(_OWORD *)(v11 + 144) = 0u;
  *(_OWORD *)(v11 + 160) = 0u;
  *(_OWORD *)(v11 + 112) = 0u;
  *(_OWORD *)(v11 + 128) = 0u;
  *(_OWORD *)(v11 + 80) = 0u;
  *(_OWORD *)(v11 + 96) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)v11 = 0u;
  sub_223195210(v11);
  *(_QWORD *)&v36 = v11;
  sub_22432CD38((_QWORD *)(v11 + 16), v10 + 12 * (v8 * a2 + v9 * v5));
  v12 = *(_DWORD *)(v11 + 120);
  if ((v12 & 0x10) != 0)
  {
    v15 = *(_QWORD *)(v11 + 112);
    v16 = *(_QWORD *)(v11 + 72);
    if (v15 < v16)
    {
      *(_QWORD *)(v11 + 112) = v16;
      v15 = v16;
    }
    v17 = *(const void **)(v11 + 64);
    v13 = v15 - (_QWORD)v17;
    if (v15 - (unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_36;
  }
  else
  {
    if ((v12 & 8) == 0)
    {
      v13 = 0;
      HIBYTE(v41) = 0;
      v14 = __dst;
      goto LABEL_20;
    }
    v17 = *(const void **)(v11 + 40);
    v13 = *(_QWORD *)(v11 + 56) - (_QWORD)v17;
    if (v13 >= 0x7FFFFFFFFFFFFFF8)
LABEL_36:
      sub_22316DBC0();
  }
  if (v13 >= 0x17)
  {
    v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v18 = v13 | 7;
    v19 = v18 + 1;
    v14 = (void **)operator new(v18 + 1);
    __dst[1] = (void *)v13;
    v41 = v19 | 0x8000000000000000;
    __dst[0] = v14;
    goto LABEL_19;
  }
  HIBYTE(v41) = v13;
  v14 = __dst;
  if (v13)
LABEL_19:
    memmove(v14, v17, v13);
LABEL_20:
  *((_BYTE *)v14 + v13) = 0;
  v20 = v36;
  if ((_QWORD)v36)
  {
    v21 = MEMORY[0x24BEDB7F0];
    v22 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v36 = *MEMORY[0x24BEDB7F0];
    v23 = *(_QWORD *)(v21 + 72);
    *(_QWORD *)(v20 + *(_QWORD *)(v22 - 24)) = *(_QWORD *)(v21 + 64);
    *(_QWORD *)(v20 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v20 + 16) = v23;
    if (*(char *)(v20 + 111) < 0)
      operator delete(*(void **)(v20 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v20 + 128);
    MEMORY[0x227684CE8](v20, 0x10B2C40EED050F3);
  }
  *(_QWORD *)&v36 = &v27;
  *((_QWORD *)&v36 + 1) = __dst;
  v37 = &v27;
  v38 = (const char *)__dst;
  v39 = (const char *)__dst;
  if ((_DWORD)v28 == -1)
    sub_22316DD70();
  v35 = &v36;
  ((void (*)(__int128 **, int *))off_24EC73668[v28])(&v35, &v27);
  if (SHIBYTE(v41) < 0)
    operator delete(__dst[0]);
  *(_QWORD *)&v36 = &v27;
  *((_QWORD *)&v36 + 1) = ")";
  v37 = &v27;
  v38 = ")";
  v39 = ")";
  if ((_DWORD)v28 == -1)
    sub_22316DD70();
  __dst[0] = &v36;
  ((void (*)(void **, int *))off_24EC736C8[v28])(__dst, &v27);
  if ((_DWORD)v28 == -1)
    sub_22316DD70();
  *(_QWORD *)&v36 = __dst;
  ((void (*)(void **__return_ptr, __int128 *, int *))off_24EC73680[v28])(__p, &v36, &v27);
  if ((_DWORD)v28 != -1)
    ((void (*)(__int128 *, int *))off_24EC73650[v28])(&v36, &v27);
  if (SHIBYTE(v30) < 0)
  {
    sub_223197FA4(&v36, __p[0], (unint64_t)__p[1]);
    v24 = SHIBYTE(v30);
    *(_OWORD *)a3 = v36;
    *(_QWORD *)(a3 + 16) = v37;
    *(_BYTE *)(a3 + 64) = 0;
    if (v24 < 0)
      operator delete(__p[0]);
  }
  else
  {
    *(_OWORD *)a3 = *(_OWORD *)__p;
    *(_QWORD *)(a3 + 16) = v30;
    *(_BYTE *)(a3 + 64) = 0;
  }
}

void sub_22432C548()
{
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_22457406C);
  abort();
}

void sub_22432C57C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  unint64_t *p_shared_owners;
  unint64_t v31;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v31 = __ldaxr(p_shared_owners);
    while (__stlxr(v31 - 1, p_shared_owners));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_22432CB5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  MEMORY[0x227684CE8](v2, 0x10B2C40EED050F3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22432CB88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22432CB9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22432CBB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22432CBC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22432CBD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22432CBEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22432CC00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  if (*(char *)(v2 - 65) < 0)
  {
    operator delete(*(void **)(v2 - 88));
    sub_22319B964((uint64_t)va);
    _Unwind_Resume(a1);
  }
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_22432CC68(uint64_t result)
{
  _QWORD *exception;

  if (*(_BYTE *)(result + 64))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC1FCC0;
    __cxa_throw(exception, (struct type_info *)&unk_24EC1FC98, (void (*)(void *))std::exception::~exception);
  }
  return result;
}

uint64_t sub_22432CCA8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  if (*(_BYTE *)(result + 64))
  {
    v2 = *(std::__shared_weak_count **)(result + 16);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
        return v1;
      }
    }
  }
  else if (*(char *)(result + 23) < 0)
  {
    operator delete(*(void **)result);
    return v1;
  }
  return result;
}

_QWORD *sub_22432CD38(_QWORD *a1, uint64_t a2)
{
  unsigned int v4;
  BOOL v5;
  BOOL v7;
  void **v8;
  uint64_t v9;
  _QWORD *result;
  _QWORD *v11;
  uint64_t *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t *v15;
  _QWORD *v16;
  int v17;
  const char *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v21[3];
  void *__p[2];
  unsigned __int8 v23;

  v4 = *(_DWORD *)(a2 + 4);
  if (*(_BYTE *)a2)
    v5 = v4 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 1)
  {
    sub_2231813E8(a1, (uint64_t)"{convertible, ", 14);
    v12 = (uint64_t *)&(&off_24EC736E0)[2 * *(int *)(a2 + 4)];
    v13 = sub_2231813E8(a1, *v12, v12[1]);
    sub_2231813E8(v13, (uint64_t)" conversion", 11);
    if (!*(_DWORD *)(a2 + 8))
      return sub_2231813E8(a1, (uint64_t)"}", 1);
    v14 = sub_2231813E8(a1, (uint64_t)", ", 2);
    v15 = (uint64_t *)&(&off_24EC73720)[2 * *(int *)(a2 + 8)];
    v16 = sub_2231813E8(v14, *v15, v15[1]);
    sub_2231813E8(v16, (uint64_t)" accuracy", 9);
    v17 = *(_DWORD *)(a2 + 8);
    if ((v17 & 0xFFFFFFFE) == 4)
    {
      v18 = " (lossful)";
      v19 = a1;
      v20 = 10;
    }
    else
    {
      if ((v17 - 1) > 2)
        return sub_2231813E8(a1, (uint64_t)"}", 1);
      v18 = " (lossless)";
      v19 = a1;
      v20 = 11;
    }
LABEL_34:
    sub_2231813E8(v19, (uint64_t)v18, v20);
    return sub_2231813E8(a1, (uint64_t)"}", 1);
  }
  if (*(_BYTE *)a2)
    v7 = 1;
  else
    v7 = v4 > 1;
  if (!v7)
  {
    sub_2231813E8(a1, (uint64_t)"{not convertible, ", 18);
    if (v4)
      v18 = "conversion not yet supported";
    else
      v18 = "formats unrelated";
    if (v4)
      v20 = 28;
    else
      v20 = 17;
    v19 = a1;
    goto LABEL_34;
  }
  v21[0] = a2;
  v21[1] = a2 + 4;
  v21[2] = a2 + 8;
  sub_22432CF44((uint64_t)v21);
  if ((v23 & 0x80u) == 0)
    v8 = __p;
  else
    v8 = (void **)__p[0];
  if ((v23 & 0x80u) == 0)
    v9 = v23;
  else
    v9 = (uint64_t)__p[1];
  result = sub_2231813E8(a1, (uint64_t)v8, v9);
  v11 = result;
  if ((char)v23 < 0)
  {
    operator delete(__p[0]);
    return v11;
  }
  return result;
}

void sub_22432CF28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22432CF44(uint64_t a1)
{
  const char *v2;
  int *v3;
  uint64_t v4;
  int v5;
  size_t v6;
  void **p_dst;
  unint64_t v8;
  unint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  int v20;
  size_t v21;
  void **v22;
  unint64_t v23;
  unint64_t v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _DWORD v32[6];
  int v33;
  void **__dst;
  size_t v35;
  unint64_t v36;
  _QWORD *v37;
  const char *v38;
  _DWORD *v39;
  const char *v40;
  const char *v41;
  const char *v42;

  v33 = 0;
  sub_2231ABA1C(v32, "{");
  if (**(_BYTE **)a1)
    v2 = "true";
  else
    v2 = "false";
  v42 = v2;
  v37 = v32;
  v38 = (const char *)&v42;
  v39 = v32;
  v40 = (const char *)&v42;
  v41 = (const char *)&v42;
  if (v33 == -1)
    goto LABEL_56;
  __dst = (void **)&v37;
  ((void (*)(void ***, _DWORD *))off_24EC737B0[v33])(&__dst, v32);
  v3 = *(int **)(a1 + 8);
  v37 = v32;
  v38 = ",";
  v39 = v32;
  v40 = ",";
  v41 = ",";
  if (v33 == -1)
    goto LABEL_56;
  __dst = (void **)&v37;
  ((void (*)(void ***, _DWORD *))off_24EC73780[v33])(&__dst, v32);
  v4 = operator new();
  *(_QWORD *)(v4 + 272) = 0;
  *(_OWORD *)(v4 + 240) = 0u;
  *(_OWORD *)(v4 + 256) = 0u;
  *(_OWORD *)(v4 + 208) = 0u;
  *(_OWORD *)(v4 + 224) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(_OWORD *)(v4 + 192) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 80) = 0u;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)v4 = 0u;
  sub_223195210(v4);
  v37 = (_QWORD *)v4;
  sub_2231813E8((_QWORD *)(v4 + 16), (uint64_t)(&off_24EC736E0)[2 * *v3], (uint64_t)(&off_24EC736E0)[2 * *v3 + 1]);
  v5 = *(_DWORD *)(v4 + 120);
  if ((v5 & 0x10) != 0)
  {
    v8 = *(_QWORD *)(v4 + 112);
    v9 = *(_QWORD *)(v4 + 72);
    if (v8 < v9)
    {
      *(_QWORD *)(v4 + 112) = v9;
      v8 = v9;
    }
    v10 = *(const void **)(v4 + 64);
    v6 = v8 - (_QWORD)v10;
    if (v8 - (unint64_t)v10 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_53;
  }
  else
  {
    if ((v5 & 8) == 0)
    {
      v6 = 0;
      HIBYTE(v36) = 0;
      p_dst = (void **)&__dst;
      goto LABEL_19;
    }
    v10 = *(const void **)(v4 + 40);
    v6 = *(_QWORD *)(v4 + 56) - (_QWORD)v10;
    if (v6 > 0x7FFFFFFFFFFFFFF7)
LABEL_53:
      sub_22316DBC0();
  }
  if (v6 >= 0x17)
  {
    v11 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v11 = v6 | 7;
    v12 = v11 + 1;
    p_dst = (void **)operator new(v11 + 1);
    v35 = v6;
    v36 = v12 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_18;
  }
  HIBYTE(v36) = v6;
  p_dst = (void **)&__dst;
  if (v6)
LABEL_18:
    memmove(p_dst, v10, v6);
LABEL_19:
  *((_BYTE *)p_dst + v6) = 0;
  v13 = v37;
  v14 = (uint64_t *)MEMORY[0x24BEDB7F0];
  v15 = MEMORY[0x24BEDB848];
  if (v37)
  {
    v16 = *MEMORY[0x24BEDB7F0];
    *v37 = *MEMORY[0x24BEDB7F0];
    v17 = v14[9];
    *(_QWORD *)((char *)v13 + *(_QWORD *)(v16 - 24)) = v14[8];
    v13[3] = v15 + 16;
    v13[2] = v17;
    if (*((char *)v13 + 111) < 0)
      operator delete((void *)v13[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v13 + 16);
    MEMORY[0x227684CE8](v13, 0x10B2C40EED050F3);
  }
  v37 = v32;
  v38 = (const char *)&__dst;
  v39 = v32;
  v40 = (const char *)&__dst;
  v41 = (const char *)&__dst;
  if (v33 == -1)
    sub_22316DD70();
  v42 = (const char *)&v37;
  ((void (*)(const char **, _DWORD *))off_24EC737C8[v33])(&v42, v32);
  if (SHIBYTE(v36) < 0)
    operator delete(__dst);
  v18 = *(int **)(a1 + 16);
  v37 = v32;
  v38 = ",";
  v39 = v32;
  v40 = ",";
  v41 = ",";
  if (v33 == -1)
LABEL_56:
    sub_22316DD70();
  __dst = (void **)&v37;
  ((void (*)(void ***, _DWORD *))off_24EC73780[v33])(&__dst, v32);
  v19 = operator new();
  *(_QWORD *)(v19 + 272) = 0;
  *(_OWORD *)(v19 + 240) = 0u;
  *(_OWORD *)(v19 + 256) = 0u;
  *(_OWORD *)(v19 + 208) = 0u;
  *(_OWORD *)(v19 + 224) = 0u;
  *(_OWORD *)(v19 + 176) = 0u;
  *(_OWORD *)(v19 + 192) = 0u;
  *(_OWORD *)(v19 + 144) = 0u;
  *(_OWORD *)(v19 + 160) = 0u;
  *(_OWORD *)(v19 + 112) = 0u;
  *(_OWORD *)(v19 + 128) = 0u;
  *(_OWORD *)(v19 + 80) = 0u;
  *(_OWORD *)(v19 + 96) = 0u;
  *(_OWORD *)(v19 + 48) = 0u;
  *(_OWORD *)(v19 + 64) = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_OWORD *)v19 = 0u;
  sub_223195210(v19);
  v37 = (_QWORD *)v19;
  sub_2231813E8((_QWORD *)(v19 + 16), (uint64_t)(&off_24EC73720)[2 * *v18], (uint64_t)(&off_24EC73720)[2 * *v18 + 1]);
  v20 = *(_DWORD *)(v19 + 120);
  if ((v20 & 0x10) != 0)
  {
    v23 = *(_QWORD *)(v19 + 112);
    v24 = *(_QWORD *)(v19 + 72);
    if (v23 < v24)
    {
      *(_QWORD *)(v19 + 112) = v24;
      v23 = v24;
    }
    v25 = *(const void **)(v19 + 64);
    v21 = v23 - (_QWORD)v25;
    if (v23 - (unint64_t)v25 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_55;
  }
  else
  {
    if ((v20 & 8) == 0)
    {
      v21 = 0;
      HIBYTE(v36) = 0;
      v22 = (void **)&__dst;
      goto LABEL_40;
    }
    v25 = *(const void **)(v19 + 40);
    v21 = *(_QWORD *)(v19 + 56) - (_QWORD)v25;
    if (v21 > 0x7FFFFFFFFFFFFFF7)
LABEL_55:
      sub_22316DBC0();
  }
  if (v21 >= 0x17)
  {
    v26 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v26 = v21 | 7;
    v27 = v26 + 1;
    v22 = (void **)operator new(v26 + 1);
    v35 = v21;
    v36 = v27 | 0x8000000000000000;
    __dst = v22;
    goto LABEL_39;
  }
  HIBYTE(v36) = v21;
  v22 = (void **)&__dst;
  if (v21)
LABEL_39:
    memmove(v22, v25, v21);
LABEL_40:
  *((_BYTE *)v22 + v21) = 0;
  v28 = v37;
  if (v37)
  {
    v29 = *v14;
    *v37 = *v14;
    v30 = v14[9];
    *(_QWORD *)((char *)v28 + *(_QWORD *)(v29 - 24)) = v14[8];
    v28[3] = v15 + 16;
    v28[2] = v30;
    if (*((char *)v28 + 111) < 0)
      operator delete((void *)v28[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v28 + 16);
    MEMORY[0x227684CE8](v28, 0x10B2C40EED050F3);
  }
  v37 = v32;
  v38 = (const char *)&__dst;
  v39 = v32;
  v40 = (const char *)&__dst;
  v41 = (const char *)&__dst;
  if (v33 == -1)
    sub_22316DD70();
  v42 = (const char *)&v37;
  ((void (*)(const char **, _DWORD *))off_24EC737C8[v33])(&v42, v32);
  if (SHIBYTE(v36) < 0)
    operator delete(__dst);
  v37 = v32;
  v38 = "}";
  v39 = v32;
  v40 = "}";
  v41 = "}";
  if (v33 == -1)
    goto LABEL_56;
  __dst = (void **)&v37;
  ((void (*)(void ***, _DWORD *))off_24EC73780[v33])(&__dst, v32);
  if (v33 == -1)
    sub_22316DD70();
  v37 = &__dst;
  result = ((uint64_t (*)(_QWORD **, _DWORD *))off_24EC737E0[v33])(&v37, v32);
  if (v33 != -1)
    return ((uint64_t (*)(_QWORD **, _DWORD *))off_24EC73798[v33])(&v37, v32);
  return result;
}

void sub_22432D530(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  MEMORY[0x227684CE8](v2, 0x10B2C40EED050F3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22432D568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20)
{
  sub_22319B964((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_22432D5C8(int a1)
{
  __asm { BR              X10 }
}

void sub_22432D604()
{
  uint64_t v0;
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  unint64_t *v15;
  unint64_t v16;
  _BYTE v17[16];
  std::__shared_weak_count *v18;
  uint64_t (**v19)();
  uint64_t v20;
  std::__shared_weak_count *v21;
  unsigned int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  __int16 v27;

  sub_22432EF94((uint64_t)v17, *(_QWORD *)v1, *(_DWORD *)(v1 + 16), *(_QWORD *)v1 + 32);
  v19 = &off_24EC24788;
  sub_22432F240((uint64_t)&v20, (uint64_t)v17);
  v2 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223A4A0CC(*(_QWORD *)v1, (uint64_t)&v19);
  *(_QWORD *)v0 = &off_24EC1F958;
  v5 = v20;
  v6 = v21;
  if (v21)
  {
    v7 = (unint64_t *)&v21->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    v9 = v21;
  }
  else
  {
    v9 = 0;
  }
  v10 = v26;
  if (v23)
    v11 = v22 | 0x100000000;
  else
    v11 = 0;
  v12 = v25;
  v13 = v24;
  v14 = v27;
  *(_QWORD *)(v0 + 8) = v5;
  *(_QWORD *)(v0 + 16) = v6;
  *(_QWORD *)(v0 + 24) = v11;
  *(_QWORD *)(v0 + 32) = v12;
  *(_DWORD *)(v0 + 40) = v10;
  *(_QWORD *)(v0 + 48) = v13;
  *(_DWORD *)(v0 + 56) = 1;
  *(_WORD *)(v0 + 60) = v14;
  if (v9)
  {
    v15 = (unint64_t *)&v9->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_22432DC34(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::string *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  LODWORD(a9) = 40;
  *(_DWORD *)(v22 - 72) = 1;
  sub_2243348B0("Conversion from image of format ", (unsigned int *)(v22 - 72), (uint64_t)" to ", (unsigned int *)&a9, (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22432EDF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_22432EEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B358((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22432EF04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B358((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22432EF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B358((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22432EF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B358((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22432EF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_2231BD974((uint64_t)&a9);
  sub_223167354(v9);
  _Unwind_Resume(a1);
}

void sub_22432EF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_2231DCE9C((uint64_t)&a9);
  sub_223167354(v9);
  _Unwind_Resume(a1);
}

void sub_22432EF78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_2231DEDC0((uint64_t)&a9);
  sub_223167354(v9);
  _Unwind_Resume(a1);
}

void sub_22432EF94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  unsigned int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(1);
  v34 = &off_24EC24788;
  sub_22432F240((uint64_t)&v35, (uint64_t)v45);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v41;
  if (v38)
    v26 = v37 | 0x100000000;
  else
    v26 = 0;
  v27 = v40;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v26;
  *(_QWORD *)(a1 + 32) = v27;
  *(_DWORD *)(a1 + 40) = v25;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 1;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_22432F1FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  sub_22319B358(v14 - 88);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22432F218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22432F22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22432F240(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::string::size_type v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::string::size_type v14;
  uint64_t v15;
  __int16 v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string::size_type v23;
  std::__shared_weak_count *v24;
  std::string v25;

  if (*(_DWORD *)(a2 + 56) != 1)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22432F588((uint64_t)&v25, a2);
    std::logic_error::logic_error(exception, &v25);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v25.__r_.__value_.__r.__words[0] = v4;
  v25.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4)
  {
    v23 = v4;
    v24 = (std::__shared_weak_count *)v5;
    *(_OWORD *)&v25.__r_.__value_.__l.__data_ = 0uLL;
    goto LABEL_11;
  }
  v23 = 0;
  v24 = 0;
  if (!v25.__r_.__value_.__l.__size_)
    goto LABEL_11;
  v8 = (unint64_t *)(v25.__r_.__value_.__l.__size_ + 8);
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
  {
LABEL_11:
    v10 = v23;
    v11 = v24;
    if (v23)
      goto LABEL_21;
    goto LABEL_12;
  }
  (*(void (**)(std::string::size_type))(*(_QWORD *)v25.__r_.__value_.__l.__size_ + 16))(v25.__r_.__value_.__l.__size_);
  std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v25.__r_.__value_.__l.__size_);
  v11 = 0;
LABEL_12:
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a2 + 8) + 32))(&v25);
  v10 = v25.__r_.__value_.__r.__words[0];
  if (v25.__r_.__value_.__r.__words[0])
  {
    v11 = (std::__shared_weak_count *)operator new();
    v14 = v25.__r_.__value_.__r.__words[0];
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC20DE8;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = (std::__shared_weak_count_vtbl *)v14;
  }
  else
  {
    v11 = 0;
  }
LABEL_21:
  if ((*(_QWORD *)(a2 + 24) & 0xFF00000000) != 0)
    v15 = *(_QWORD *)(a2 + 24) | 0x100000000;
  else
    v15 = 0;
  v16 = *(_WORD *)(a2 + 60);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  if (v11)
  {
    v17 = (unint64_t *)&v11->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  *(_QWORD *)(a1 + 16) = v15;
  (*(void (**)(std::string *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v10 + 64))(&v25, v10, 1);
  v19 = *(_QWORD *)(v25.__r_.__value_.__r.__words[0] + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v25.__r_.__value_.__l.__data_;
  *(_QWORD *)(a1 + 40) = v19;
  v25.__r_.__value_.__r.__words[0] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  *(_WORD *)(a1 + 72) = v16;
  if (v11)
  {
    v20 = (unint64_t *)&v11->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_22432F504(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_22432F564(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_22432F588(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  std::string *v4;
  std::string *v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  int64x2_t v10;
  int8x16_t v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  void *v17[2];
  char v18;
  std::string __p;
  void *v20[2];
  char v21;
  void *v22;
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v3 = atomic_load((unsigned __int8 *)&qword_2540CFB10);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2540CFB10))
  {
    v18 = 5;
    strcpy((char *)v17, "Image");
    v6 = sub_2231B47AC();
    if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&__p, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
    }
    else
    {
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v7;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v8 = sub_2231A27C0();
    if (*((char *)v8 + 23) < 0)
    {
      sub_223197FA4(&__p, *(void **)v8, *((_QWORD *)v8 + 1));
    }
    else
    {
      v9 = *v8;
      __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 2);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v9;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v22);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    sub_22319BD1C(&v15, (uint64_t)v20, 2uLL);
    sub_2245730F4((char *)v17, (uint64_t *)&v15, &stru_2540CFB28, v10, v11);
    v12 = (void **)v15;
    if (v15)
    {
      v13 = v16;
      v14 = v15;
      if (v16 != v15)
      {
        do
        {
          if (*((char *)v13 - 1) < 0)
            operator delete(*(v13 - 3));
          v13 -= 3;
        }
        while (v13 != v12);
        v14 = v15;
      }
      v16 = v12;
      operator delete(v14);
    }
    if (v23 < 0)
    {
      operator delete(v22);
      if ((v21 & 0x80000000) == 0)
      {
LABEL_24:
        if ((v18 & 0x80000000) == 0)
        {
LABEL_25:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2540CFB28, &dword_22314D000);
          __cxa_guard_release(&qword_2540CFB10);
          goto LABEL_2;
        }
LABEL_28:
        operator delete(v17[0]);
        goto LABEL_25;
      }
    }
    else if ((v21 & 0x80000000) == 0)
    {
      goto LABEL_24;
    }
    operator delete(v20[0]);
    if ((v18 & 0x80000000) == 0)
      goto LABEL_25;
    goto LABEL_28;
  }
LABEL_2:
  v4 = sub_2231DE81C();
  LODWORD(v20[0]) = *(_DWORD *)(a2 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)&stru_2540CFB28, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", (unsigned int *)v20);
}

void sub_22432F818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, void **a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  void **v36;
  void **v37;

  if (__p)
  {
    v36 = a10;
    v37 = __p;
    if (a10 != __p)
    {
      do
      {
        if (*((char *)v36 - 1) < 0)
          operator delete(*(v36 - 3));
        v36 -= 3;
      }
      while (v36 != __p);
      v37 = __p;
    }
    operator delete(v37);
  }
  if (a35 < 0)
    operator delete(a30);
  if (a29 < 0)
    operator delete(a24);
  if (a17 < 0)
    operator delete(a12);
  __cxa_guard_abort(&qword_2540CFB10);
  _Unwind_Resume(a1);
}

void sub_22432F8EC(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::string::size_type v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::string::size_type v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  std::logic_error *exception;
  std::string::size_type v24;
  std::__shared_weak_count *v25;
  std::string v26;

  if (*(_DWORD *)(a2 + 56) != 2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22432FC34((uint64_t)&v26, a2);
    std::logic_error::logic_error(exception, &v26);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v26.__r_.__value_.__r.__words[0] = v4;
  v26.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4)
  {
    v24 = v4;
    v25 = (std::__shared_weak_count *)v5;
    *(_OWORD *)&v26.__r_.__value_.__l.__data_ = 0uLL;
    goto LABEL_11;
  }
  v24 = 0;
  v25 = 0;
  if (!v26.__r_.__value_.__l.__size_)
    goto LABEL_11;
  v8 = (unint64_t *)(v26.__r_.__value_.__l.__size_ + 8);
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
  {
LABEL_11:
    v10 = v24;
    v11 = v25;
    if (v24)
      goto LABEL_21;
    goto LABEL_12;
  }
  (*(void (**)(std::string::size_type))(*(_QWORD *)v26.__r_.__value_.__l.__size_ + 16))(v26.__r_.__value_.__l.__size_);
  std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v26.__r_.__value_.__l.__size_);
  v11 = 0;
LABEL_12:
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a2 + 8) + 32))(&v26);
  v10 = v26.__r_.__value_.__r.__words[0];
  if (v26.__r_.__value_.__r.__words[0])
  {
    v11 = (std::__shared_weak_count *)operator new();
    v14 = v26.__r_.__value_.__r.__words[0];
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC20DE8;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = (std::__shared_weak_count_vtbl *)v14;
  }
  else
  {
    v11 = 0;
  }
LABEL_21:
  v15 = *(_QWORD *)(a2 + 24);
  if ((v15 & 0xFF00000000) != 0)
    v16 = (v15 >> 1) | 0x100000000;
  else
    v16 = 0;
  v17 = *(_WORD *)(a2 + 60);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  if (v11)
  {
    v18 = (unint64_t *)&v11->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
  }
  *(_QWORD *)(a1 + 16) = v16;
  (*(void (**)(std::string *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v10 + 64))(&v26, v10, 2);
  v20 = *(_QWORD *)(v26.__r_.__value_.__r.__words[0] + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v26.__r_.__value_.__l.__data_;
  *(_QWORD *)(a1 + 40) = v20;
  v26.__r_.__value_.__r.__words[0] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  *(_WORD *)(a1 + 72) = v17;
  if (v11)
  {
    v21 = (unint64_t *)&v11->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_22432FBB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_22432FC10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_22432FC34(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  std::string *v4;
  std::string *v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  int64x2_t v10;
  int8x16_t v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  void *v17[2];
  char v18;
  std::string __p;
  void *v20[2];
  char v21;
  void *v22;
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v3 = atomic_load((unsigned __int8 *)&qword_2540CFB18);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2540CFB18))
  {
    v18 = 5;
    strcpy((char *)v17, "Image");
    v6 = sub_2231DF428();
    if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&__p, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
    }
    else
    {
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v7;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v8 = sub_2231A27C0();
    if (*((char *)v8 + 23) < 0)
    {
      sub_223197FA4(&__p, *(void **)v8, *((_QWORD *)v8 + 1));
    }
    else
    {
      v9 = *v8;
      __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 2);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v9;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v22);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    sub_22319BD1C(&v15, (uint64_t)v20, 2uLL);
    sub_2245730F4((char *)v17, (uint64_t *)&v15, &stru_2540CFB40, v10, v11);
    v12 = (void **)v15;
    if (v15)
    {
      v13 = v16;
      v14 = v15;
      if (v16 != v15)
      {
        do
        {
          if (*((char *)v13 - 1) < 0)
            operator delete(*(v13 - 3));
          v13 -= 3;
        }
        while (v13 != v12);
        v14 = v15;
      }
      v16 = v12;
      operator delete(v14);
    }
    if (v23 < 0)
    {
      operator delete(v22);
      if ((v21 & 0x80000000) == 0)
      {
LABEL_24:
        if ((v18 & 0x80000000) == 0)
        {
LABEL_25:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2540CFB40, &dword_22314D000);
          __cxa_guard_release(&qword_2540CFB18);
          goto LABEL_2;
        }
LABEL_28:
        operator delete(v17[0]);
        goto LABEL_25;
      }
    }
    else if ((v21 & 0x80000000) == 0)
    {
      goto LABEL_24;
    }
    operator delete(v20[0]);
    if ((v18 & 0x80000000) == 0)
      goto LABEL_25;
    goto LABEL_28;
  }
LABEL_2:
  v4 = sub_2231DE81C();
  LODWORD(v20[0]) = *(_DWORD *)(a2 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)&stru_2540CFB40, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", (unsigned int *)v20);
}

void sub_22432FEC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, void **a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  void **v36;
  void **v37;

  if (__p)
  {
    v36 = a10;
    v37 = __p;
    if (a10 != __p)
    {
      do
      {
        if (*((char *)v36 - 1) < 0)
          operator delete(*(v36 - 3));
        v36 -= 3;
      }
      while (v36 != __p);
      v37 = __p;
    }
    operator delete(v37);
  }
  if (a35 < 0)
    operator delete(a30);
  if (a29 < 0)
    operator delete(a24);
  if (a17 < 0)
    operator delete(a12);
  __cxa_guard_abort(&qword_2540CFB18);
  _Unwind_Resume(a1);
}

uint64_t sub_22432FF98(uint64_t **a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t *v9;
  double v10;
  unsigned int v11;
  double v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  int v17;
  double v18;
  unsigned int v19;
  int v20;
  uint64_t result;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  _WORD *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  int v61;
  int v62;
  int v63;
  _WORD *v64;
  int v65;
  _BYTE *v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;

  v9 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v10 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v10 = 0.0;
    v11 = (int)v10;
    v12 = 255.0;
    if (*(double *)(a2 + 8) <= 255.0)
      v12 = *(double *)(a2 + 8);
    v13 = (int)v12;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
    {
LABEL_7:
      v16 = *(double *)(a2 + 24);
      if (v16 < 0.0)
        v16 = 0.0;
      v17 = (int)v16;
      v18 = 65535.0;
      if (*(double *)(a2 + 32) <= 65535.0)
        v18 = *(double *)(a2 + 32);
      v19 = v17 | ((int)v18 << 16);
      v20 = HIWORD(v19);
      if (v11 != (unsigned __int16)v17)
        goto LABEL_17;
      goto LABEL_15;
    }
  }
  else
  {
    v11 = 0;
    v13 = 255;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
  }
  LOWORD(v19) = 0;
  v20 = 0xFFFF;
  if (v11)
    goto LABEL_17;
LABEL_15:
  if (v20 == v13)
    return sub_224330ABC(v15, v14);
LABEL_17:
  v22 = *(_QWORD *)(v15 + 8);
  if (!v22)
    goto LABEL_33;
  v23 = *(std::__shared_weak_count **)(v15 + 16);
  if (v23)
  {
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(p_shared_owners);
    while (__stxr(v25 + 1, p_shared_owners));
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(v15 + 8);
    v27 = *(std::__shared_weak_count **)(v15 + 16);
    if (v27)
    {
      v28 = (unint64_t *)&v27->__shared_owners_;
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
      do
        v30 = __ldaxr(v28);
      while (__stlxr(v30 - 1, v28));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
      }
    }
  }
  if (*(_BYTE *)(v15 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v22 + 96))(&v88, v22, 0);
    v31 = *(_QWORD *)(v14 + 8);
    if (!v31)
      goto LABEL_49;
  }
  else
  {
LABEL_33:
    v88 = 0;
    v31 = *(_QWORD *)(v14 + 8);
    if (!v31)
      goto LABEL_49;
  }
  v32 = *(std::__shared_weak_count **)(v14 + 16);
  if (v32)
  {
    v33 = (unint64_t *)&v32->__shared_owners_;
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 1, v33));
    do
      v35 = __ldaxr(v33);
    while (__stlxr(v35 - 1, v33));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
    v31 = *(_QWORD *)(v14 + 8);
    v36 = *(std::__shared_weak_count **)(v14 + 16);
    if (v36)
    {
      v37 = (unint64_t *)&v36->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
  }
  if (*(_BYTE *)(v14 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v31 + 96))(&v87, v31, 1);
    v40 = *(_DWORD *)(v15 + 32);
    if (!v40)
      goto LABEL_97;
    goto LABEL_50;
  }
LABEL_49:
  v87 = 0;
  v40 = *(_DWORD *)(v15 + 32);
  if (!v40)
    goto LABEL_97;
LABEL_50:
  v41 = *(_DWORD *)(v15 + 36);
  if (!v41)
    goto LABEL_97;
  v85 = v20;
  v86 = v13;
  v42 = *(unsigned int *)(v15 + 40);
  v43 = *(unsigned int *)(v15 + 44);
  v84 = *(unsigned int *)(v14 + 40);
  v83 = *(unsigned int *)(v14 + 44);
  v44 = *(_BYTE **)(v15 + 24);
  if (*(_BYTE *)(v15 + 48) && v44)
  {
    v45 = *(_QWORD *)(v15 + 8);
    v46 = *(std::__shared_weak_count **)(v15 + 16);
    if (v46)
    {
      v47 = (unint64_t *)&v46->__shared_owners_;
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 1, v47));
      do
        v49 = __ldaxr(v47);
      while (__stlxr(v49 - 1, v47));
      if (!v49)
      {
        ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
        std::__shared_weak_count::__release_weak(v46);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v45 + 88))(v45, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v44 = *(_BYTE **)(v15 + 24);
  }
  v50 = *(_WORD **)(v14 + 24);
  if (*(_BYTE *)(v14 + 48) && v50)
  {
    v51 = *(_QWORD *)(v14 + 8);
    v52 = *(std::__shared_weak_count **)(v14 + 16);
    if (v52)
    {
      v53 = (unint64_t *)&v52->__shared_owners_;
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
      do
        v55 = __ldaxr(v53);
      while (__stlxr(v55 - 1, v53));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v51 + 88))(v51, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v50 = *(_WORD **)(v14 + 24);
  }
  v56 = (double)v11;
  v57 = (double)(unsigned __int16)v19;
  v58 = (double)v85;
  v59 = 1.0 / ((double)v86 - (double)v11);
  v60 = (double)v85 - v57;
  v61 = v40 - 1;
  v62 = v41 - 1;
  if (v41 == 1)
    goto LABEL_81;
  if (v40 != 1)
  {
    v63 = 0;
    v58 = 0.0;
    do
    {
      v64 = v50;
      v65 = v40 - 1;
      v66 = v44;
      do
      {
        LOBYTE(a9) = *v66;
        v67 = v59 * ((double)*(unint64_t *)&a9 - v56);
        v68 = fmax(v67, 0.0);
        if (v67 <= 1.0)
          v69 = v68;
        else
          v69 = 1.0;
        a9 = v60 * v69 + v57;
        *v64 = llround(a9);
        v66 += v42;
        v64 += v84;
        --v65;
      }
      while (v65);
      LOBYTE(a9) = *v66;
      v70 = v59 * ((double)*(unint64_t *)&a9 - v56);
      v71 = fmax(v70, 0.0);
      if (v70 <= 1.0)
        v72 = v71;
      else
        v72 = 1.0;
      a9 = v60 * v72 + v57;
      *v64 = llround(a9);
      v44 += v43;
      v50 += v83;
      ++v63;
    }
    while (v63 != v62);
LABEL_81:
    if (v40 != 1)
    {
      v58 = 0.0;
      do
      {
        LOBYTE(a9) = *v44;
        v73 = v59 * ((double)*(unint64_t *)&a9 - v56);
        v74 = fmax(v73, 0.0);
        if (v73 <= 1.0)
          v75 = v74;
        else
          v75 = 1.0;
        a9 = v60 * v75 + v57;
        *v50 = llround(a9);
        v44 += v42;
        v50 += v84;
        --v61;
      }
      while (v61);
    }
    goto LABEL_93;
  }
  v58 = 0.0;
  do
  {
    LOBYTE(a9) = *v44;
    v76 = v59 * ((double)*(unint64_t *)&a9 - v56);
    v77 = fmax(v76, 0.0);
    if (v76 <= 1.0)
      v78 = v77;
    else
      v78 = 1.0;
    a9 = v60 * v78 + v57;
    *v50 = llround(a9);
    v44 += v43;
    v50 += v83;
    --v62;
  }
  while (v62);
LABEL_93:
  LOBYTE(v58) = *v44;
  v79 = v59 * ((double)*(unint64_t *)&v58 - v56);
  v80 = fmax(v79, 0.0);
  if (v79 <= 1.0)
    v81 = v80;
  else
    v81 = 1.0;
  *v50 = llround(v60 * v81 + v57);
LABEL_97:
  v82 = v87;
  v87 = 0;
  if (v82)
    (*(void (**)(uint64_t))(*(_QWORD *)v82 + 8))(v82);
  result = v88;
  v88 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224330538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (!a14)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a14 + 8))(a14);
  _Unwind_Resume(exception_object);
}

unsigned __int8 *sub_22433059C(uint64_t **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  int v6;
  double v7;
  int v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned __int8 *result;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  _WORD *v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  int v46;
  _WORD *v47;
  int v48;
  unsigned __int8 *v49;
  unsigned int v50;
  __int16 v51;
  __int16 v52;
  unsigned int v53;
  __int16 v54;
  __int16 v55;
  unsigned int v56;
  __int16 v57;
  __int16 v58;
  unsigned int v59;
  __int16 v60;
  __int16 v61;
  unsigned int v62;
  __int16 v63;
  __int16 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 *v68[2];
  char v69;
  uint64_t v70;

  v3 = **a1;
  v2 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    LOWORD(v70) = 0;
    v69 = 0;
LABEL_30:
    v68[0] = (unsigned __int8 *)&v69;
    v68[1] = (unsigned __int8 *)&v70;
    return (unsigned __int8 *)sub_224330EE4(v3, v2, v68);
  }
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65535.0;
  if (v4 < 0.0)
    v4 = 0.0;
  v6 = (int)v4;
  if (v5 <= 65535.0)
    v7 = v5;
  else
    v7 = 65535.0;
  v8 = (int)v7;
  if ((int)v7 > 0xFF)
  {
    LOWORD(v70) = v6;
    v69 = v6;
    goto LABEL_30;
  }
  v9 = *(_QWORD *)(v3 + 8);
  if (!v9)
    goto LABEL_32;
  v10 = *(std::__shared_weak_count **)(v3 + 16);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    v9 = *(_QWORD *)(v3 + 8);
    v14 = *(std::__shared_weak_count **)(v3 + 16);
    if (v14)
    {
      v15 = (unint64_t *)&v14->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
      do
        v17 = __ldaxr(v15);
      while (__stlxr(v17 - 1, v15));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
  }
  if (*(_BYTE *)(v3 + 49))
  {
    (*(void (**)(unsigned __int8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(v68, v9, 0);
    v18 = *(_QWORD *)(v2 + 8);
    if (!v18)
      goto LABEL_48;
  }
  else
  {
LABEL_32:
    v68[0] = 0;
    v18 = *(_QWORD *)(v2 + 8);
    if (!v18)
      goto LABEL_48;
  }
  v20 = *(std::__shared_weak_count **)(v2 + 16);
  if (v20)
  {
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
    v18 = *(_QWORD *)(v2 + 8);
    v24 = *(std::__shared_weak_count **)(v2 + 16);
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
      do
        v27 = __ldaxr(v25);
      while (__stlxr(v27 - 1, v25));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
    }
  }
  if (*(_BYTE *)(v2 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v70, v18, 1);
    v28 = *(_DWORD *)(v3 + 32);
    if (!v28)
      goto LABEL_109;
    goto LABEL_49;
  }
LABEL_48:
  v70 = 0;
  v28 = *(_DWORD *)(v3 + 32);
  if (!v28)
    goto LABEL_109;
LABEL_49:
  v29 = *(_DWORD *)(v3 + 36);
  if (!v29)
    goto LABEL_109;
  v30 = *(unsigned int *)(v3 + 40);
  v31 = *(unsigned int *)(v3 + 44);
  v67 = *(unsigned int *)(v2 + 40);
  v66 = *(unsigned int *)(v2 + 44);
  v32 = *(unsigned __int8 **)(v3 + 24);
  if (*(_BYTE *)(v3 + 48) && v32)
  {
    v33 = *(_QWORD *)(v3 + 8);
    v34 = *(std::__shared_weak_count **)(v3 + 16);
    if (v34)
    {
      v35 = (unint64_t *)&v34->__shared_owners_;
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 1, v35));
      do
        v37 = __ldaxr(v35);
      while (__stlxr(v37 - 1, v35));
      if (!v37)
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v33 + 88))(v33, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v32 = *(unsigned __int8 **)(v3 + 24);
  }
  v38 = *(_WORD **)(v2 + 24);
  if (*(_BYTE *)(v2 + 48) && v38)
  {
    v39 = *(_QWORD *)(v2 + 8);
    v40 = *(std::__shared_weak_count **)(v2 + 16);
    if (v40)
    {
      v41 = (unint64_t *)&v40->__shared_owners_;
      do
        v42 = __ldxr(v41);
      while (__stxr(v42 + 1, v41));
      do
        v43 = __ldaxr(v41);
      while (__stlxr(v43 - 1, v41));
      if (!v43)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v39 + 88))(v39, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v38 = *(_WORD **)(v2 + 24);
  }
  v44 = v28 - 1;
  v45 = v29 - 1;
  if (v29 == 1)
    goto LABEL_86;
  if (v28 != 1)
  {
    v46 = 0;
    do
    {
      v47 = v38;
      v48 = v28 - 1;
      v49 = v32;
      do
      {
        v50 = *v49;
        if (v50 <= v8)
          v51 = *v49;
        else
          v51 = v8;
        if (v50 >= v6)
          v52 = v51;
        else
          v52 = v6;
        *v47 = v52;
        v49 += v30;
        v47 += v67;
        --v48;
      }
      while (v48);
      v53 = *v49;
      if (v53 <= v8)
        v54 = v53;
      else
        v54 = v8;
      if (v53 >= v6)
        v55 = v54;
      else
        v55 = v6;
      *v47 = v55;
      v32 += v31;
      v38 += v66;
      ++v46;
    }
    while (v46 != v45);
LABEL_86:
    if (v28 != 1)
    {
      do
      {
        v56 = *v32;
        if (v56 <= v8)
          v57 = *v32;
        else
          v57 = v8;
        if (v56 >= v6)
          v58 = v57;
        else
          v58 = v6;
        *v38 = v58;
        v32 += v30;
        v38 += v67;
        --v44;
      }
      while (v44);
    }
    goto LABEL_102;
  }
  do
  {
    v59 = *v32;
    if (v59 <= v8)
      v60 = *v32;
    else
      v60 = v8;
    if (v59 >= v6)
      v61 = v60;
    else
      v61 = v6;
    *v38 = v61;
    v32 += v31;
    v38 += v66;
    --v45;
  }
  while (v45);
LABEL_102:
  v62 = *v32;
  if (v62 <= v8)
    v63 = *v32;
  else
    v63 = v8;
  if (v62 >= v6)
    v64 = v63;
  else
    v64 = v6;
  *v38 = v64;
LABEL_109:
  v65 = v70;
  v70 = 0;
  if (v65)
    (*(void (**)(uint64_t))(*(_QWORD *)v65 + 8))(v65);
  result = v68[0];
  v68[0] = 0;
  if (result)
    return (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224330A4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224330AB0(uint64_t **a1)
{
  return sub_224330ABC(**a1, (*a1)[1]);
}

uint64_t sub_224330ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  _WORD *v43;
  int v44;
  unsigned __int8 *v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_70;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v49 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v49, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_33:
    v48 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (!v22)
      goto LABEL_64;
LABEL_34:
    v23 = *(_DWORD *)(a1 + 36);
    if (!v23)
      goto LABEL_64;
    v24 = *(unsigned int *)(a1 + 40);
    v25 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 40);
    v27 = *(unsigned int *)(a2 + 44);
    v28 = *(unsigned __int8 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(unsigned __int8 **)(a1 + 24);
    }
    v34 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(_WORD **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    if (v23 != 1)
    {
      if (v22 == 1)
      {
        do
        {
          *v34 = *v28;
          v28 += v25;
          v34 += v27;
          --v41;
        }
        while (v41);
LABEL_63:
        *v34 = *v28;
        goto LABEL_64;
      }
      v42 = 0;
      do
      {
        v43 = v34;
        v44 = v22 - 1;
        v45 = v28;
        do
        {
          *v43 = *v45;
          v45 += v24;
          v43 += v26;
          --v44;
        }
        while (v44);
        *v43 = *v45;
        v28 += v25;
        v34 += v27;
        ++v42;
      }
      while (v42 != v41);
    }
    if (v22 != 1)
    {
      do
      {
        *v34 = *v28;
        v28 += v24;
        v34 += v26;
        --v40;
      }
      while (v40);
    }
    goto LABEL_63;
  }
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_29;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_29;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  else
  {
LABEL_29:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v48, v13, 1);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22)
    goto LABEL_34;
LABEL_64:
  v46 = v48;
  v48 = 0;
  if (v46)
    (*(void (**)(uint64_t))(*(_QWORD *)v46 + 8))(v46);
  result = v49;
  v49 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224330E80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224330EE4(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  unsigned __int8 *v43;
  int v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  _WORD *v47;
  int v48;
  unsigned __int8 *v49;
  unsigned int v50;
  unsigned int v51;
  unsigned __int8 *v52;
  unsigned int v53;
  unsigned __int8 *v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_82;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_82;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_82:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v61 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v61, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (!v15)
  {
LABEL_33:
    v60 = 0;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_76;
    goto LABEL_34;
  }
LABEL_18:
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_29;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v15 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v20)
    goto LABEL_29;
  v21 = (unint64_t *)&v20->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  else
  {
LABEL_29:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v60, v15, 1);
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_76;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (!v25)
    goto LABEL_76;
  v26 = *(unsigned int *)(a1 + 40);
  v27 = *(unsigned int *)(a1 + 44);
  v28 = *(unsigned int *)(a2 + 40);
  v59 = *(unsigned int *)(a2 + 44);
  v29 = *(unsigned __int8 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 48) && v29)
  {
    v30 = *(_QWORD *)(a1 + 8);
    v31 = *(std::__shared_weak_count **)(a1 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v29 = *(unsigned __int8 **)(a1 + 24);
  }
  v35 = *(_WORD **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v35)
  {
    v36 = *(_QWORD *)(a2 + 8);
    v37 = *(std::__shared_weak_count **)(a2 + 16);
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
      do
        v40 = __ldaxr(v38);
      while (__stlxr(v40 - 1, v38));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v35 = *(_WORD **)(a2 + 24);
  }
  v41 = v24 - 1;
  v42 = v25 - 1;
  if (v25 == 1)
  {
    v43 = *a3;
  }
  else
  {
    v43 = *a3;
    if (v24 == 1)
    {
      v54 = a3[1];
      do
      {
        v55 = *v29;
        if (v55 < *v43)
          LOWORD(v55) = *(_WORD *)v54;
        *v35 = v55;
        v29 += v27;
        v35 += v59;
        --v42;
      }
      while (v42);
      goto LABEL_73;
    }
    v44 = 0;
    v45 = a3[1];
    do
    {
      v46 = a3[1];
      v47 = v35;
      v48 = v24 - 1;
      v49 = v29;
      do
      {
        v50 = *v49;
        if (v50 < *v43)
          LOWORD(v50) = *(_WORD *)v46;
        *v47 = v50;
        v49 += v26;
        v47 += v28;
        --v48;
      }
      while (v48);
      v51 = *v49;
      if (v51 < *v43)
        LOWORD(v51) = *(_WORD *)v45;
      *v47 = v51;
      v29 += v27;
      v35 += v59;
      ++v44;
    }
    while (v44 != v42);
  }
  if (v24 != 1)
  {
    v52 = a3[1];
    do
    {
      v53 = *v29;
      if (v53 < *v43)
        LOWORD(v53) = *(_WORD *)v52;
      *v35 = v53;
      v29 += v26;
      v35 += v28;
      --v41;
    }
    while (v41);
  }
LABEL_73:
  v56 = *v29;
  if (v56 < *v43)
    LOWORD(v56) = *(_WORD *)a3[1];
  *v35 = v56;
LABEL_76:
  v57 = v60;
  v60 = 0;
  if (v57)
    (*(void (**)(uint64_t))(*(_QWORD *)v57 + 8))(v57);
  result = v61;
  v61 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224331340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243313A4(uint64_t **a1, uint64_t a2, __n128 a3, __n128 _Q1, double a5, double a6, double a7, double a8, double _D6)
{
  uint64_t *v9;
  double v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  unsigned __int16 v20;
  unsigned int v22;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  _WORD *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  double v63;
  double v66;
  double v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;
  _WORD *v72;
  int v73;
  _BYTE *v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v9 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v10 = *(double *)a2;
    _Q1.n128_u64[0] = *(_QWORD *)(a2 + 8);
    if (*(double *)a2 < 0.0)
      v10 = 0.0;
    v11 = (int)v10;
    a3.n128_u64[0] = 0x406FE00000000000;
    if (_Q1.n128_f64[0] <= 255.0)
      a3.n128_u64[0] = *(_QWORD *)(a2 + 8);
    v12 = (int)a3.n128_f64[0];
    v14 = *v9;
    v13 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v22 = 1006632960;
    goto LABEL_14;
  }
  v11 = 0;
  v12 = 255;
  v14 = *v9;
  v13 = v9[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v15 = -65504.0;
  _Q1.n128_u64[0] = *(_QWORD *)(a2 + 24);
  if (_Q1.n128_f64[0] >= -65504.0)
    v15 = *(double *)(a2 + 24);
  _S0 = v15;
  __asm { FCVT            H0, S0 }
  v20 = LOWORD(_S0);
  a3.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a2 + 32) <= 65504.0)
    a3.n128_u64[0] = *(_QWORD *)(a2 + 32);
  _S0 = a3.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v22 = v20 | (LOWORD(_S0) << 16);
LABEL_14:
  _H8 = v22;
  _S9 = HIWORD(v22);
  __asm { FCVT            S1, H8 }
  a3.n128_f32[0] = (float)v12;
  __asm { FCVT            S1, H9 }
  _ZF = _ZF && _Q1.n128_f32[0] == a3.n128_f32[0];
  if (_ZF)
    return sub_2243326E4(v14, v13, a3.n128_f32[0]);
  v27 = *(_QWORD *)(v14 + 8);
  if (!v27)
    goto LABEL_35;
  v28 = *(std::__shared_weak_count **)(v14 + 16);
  if (!v28)
    goto LABEL_105;
  p_shared_owners = (unint64_t *)&v28->__shared_owners_;
  do
    v30 = __ldxr(p_shared_owners);
  while (__stxr(v30 + 1, p_shared_owners));
  do
    v31 = __ldaxr(p_shared_owners);
  while (__stlxr(v31 - 1, p_shared_owners));
  if (!v31)
  {
    ((void (*)(std::__shared_weak_count *, __n128, __n128))v28->__on_zero_shared)(v28, a3, _Q1);
    std::__shared_weak_count::__release_weak(v28);
  }
  v27 = *(_QWORD *)(v14 + 8);
  v32 = *(std::__shared_weak_count **)(v14 + 16);
  if (!v32)
    goto LABEL_105;
  v33 = (unint64_t *)&v32->__shared_owners_;
  do
    v34 = __ldxr(v33);
  while (__stxr(v34 + 1, v33));
  do
    v35 = __ldaxr(v33);
  while (__stlxr(v35 - 1, v33));
  if (v35)
  {
LABEL_105:
    if (*(_BYTE *)(v14 + 49))
      goto LABEL_31;
LABEL_35:
    v95 = 0;
    v36 = *(_QWORD *)(v13 + 8);
    if (!v36)
      goto LABEL_51;
LABEL_36:
    v38 = *(std::__shared_weak_count **)(v13 + 16);
    if (!v38)
      goto LABEL_47;
    v39 = (unint64_t *)&v38->__shared_owners_;
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 1, v39));
    do
      v41 = __ldaxr(v39);
    while (__stlxr(v41 - 1, v39));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
    v36 = *(_QWORD *)(v13 + 8);
    v42 = *(std::__shared_weak_count **)(v13 + 16);
    if (!v42)
      goto LABEL_47;
    v43 = (unint64_t *)&v42->__shared_owners_;
    do
      v44 = __ldxr(v43);
    while (__stxr(v44 + 1, v43));
    do
      v45 = __ldaxr(v43);
    while (__stlxr(v45 - 1, v43));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
      if (!*(_BYTE *)(v13 + 49))
        goto LABEL_51;
    }
    else
    {
LABEL_47:
      if (!*(_BYTE *)(v13 + 49))
        goto LABEL_51;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v36 + 96))(&v94, v36, 1);
    v46 = *(_DWORD *)(v14 + 32);
    if (v46)
      goto LABEL_52;
    goto LABEL_99;
  }
  ((void (*)(std::__shared_weak_count *, __n128, __n128))v32->__on_zero_shared)(v32, a3, _Q1);
  std::__shared_weak_count::__release_weak(v32);
  if (!*(_BYTE *)(v14 + 49))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, __n128, __n128))(*(_QWORD *)v27 + 96))(&v95, v27, 0, a3, _Q1);
  v36 = *(_QWORD *)(v13 + 8);
  if (v36)
    goto LABEL_36;
LABEL_51:
  v94 = 0;
  v46 = *(_DWORD *)(v14 + 32);
  if (v46)
  {
LABEL_52:
    v47 = *(_DWORD *)(v14 + 36);
    if (v47)
    {
      v48 = *(unsigned int *)(v14 + 40);
      v49 = *(unsigned int *)(v14 + 44);
      v50 = *(unsigned int *)(v13 + 40);
      v92 = *(unsigned int *)(v13 + 44);
      v93 = v50;
      v51 = *(_BYTE **)(v14 + 24);
      if (*(_BYTE *)(v14 + 48) && v51)
      {
        v52 = *(_QWORD *)(v14 + 8);
        v53 = *(std::__shared_weak_count **)(v14 + 16);
        if (v53)
        {
          v54 = (unint64_t *)&v53->__shared_owners_;
          do
            v55 = __ldxr(v54);
          while (__stxr(v55 + 1, v54));
          do
            v56 = __ldaxr(v54);
          while (__stlxr(v56 - 1, v54));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
            std::__shared_weak_count::__release_weak(v53);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v52 + 88))(v52, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v51 = *(_BYTE **)(v14 + 24);
        v50 = v93;
      }
      v57 = *(_WORD **)(v13 + 24);
      if (*(_BYTE *)(v13 + 48) && v57)
      {
        v58 = *(_QWORD *)(v13 + 8);
        v59 = *(std::__shared_weak_count **)(v13 + 16);
        if (v59)
        {
          v60 = (unint64_t *)&v59->__shared_owners_;
          do
            v61 = __ldxr(v60);
          while (__stxr(v61 + 1, v60));
          do
            v62 = __ldaxr(v60);
          while (__stlxr(v62 - 1, v60));
          if (!v62)
          {
            ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
            std::__shared_weak_count::__release_weak(v59);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v58 + 88))(v58, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v57 = *(_WORD **)(v13 + 24);
        v50 = v93;
      }
      v63 = (double)v11;
      __asm
      {
        FCVT            D0, H8
        FCVT            D4, H9
      }
      v66 = 1.0 / ((double)v12 - (double)v11);
      v67 = _D4 - _D0;
      v68 = v46 - 1;
      v69 = 2 * v50;
      v70 = v47 - 1;
      if (v47 != 1)
      {
        if (v46 == 1)
        {
          _D4 = 0.0;
          do
          {
            LOBYTE(_D6) = *v51;
            v81 = v66 * ((double)*(unint64_t *)&_D6 - v63);
            v82 = fmax(v81, 0.0);
            if (v81 <= 1.0)
              v83 = v82;
            else
              v83 = 1.0;
            _D6 = v67 * v83 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            *v57 = LOWORD(_D6);
            v51 += v49;
            v57 += v92;
            --v70;
          }
          while (v70);
        }
        else
        {
          v71 = 0;
          _D4 = 0.0;
          do
          {
            v72 = v57;
            v73 = v46 - 1;
            v74 = v51;
            do
            {
              LOBYTE(_D6) = *v74;
              v75 = v66 * ((double)*(unint64_t *)&_D6 - v63);
              v76 = fmax(v75, 0.0);
              if (v75 <= 1.0)
                v77 = v76;
              else
                v77 = 1.0;
              _D6 = v67 * v77 + _D0;
              *(float *)&_D6 = _D6;
              __asm { FCVT            H6, S6 }
              *v72 = LOWORD(_D6);
              v74 += v48;
              v72 = (_WORD *)((char *)v72 + v69);
              --v73;
            }
            while (v73);
            LOBYTE(_D6) = *v74;
            v78 = v66 * ((double)*(unint64_t *)&_D6 - v63);
            v79 = fmax(v78, 0.0);
            if (v78 <= 1.0)
              v80 = v79;
            else
              v80 = 1.0;
            _D6 = v67 * v80 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            *v72 = LOWORD(_D6);
            v51 += v49;
            v57 += v92;
            ++v71;
          }
          while (v71 != v70);
        }
      }
      if (v46 != 1)
      {
        _D4 = 0.0;
        do
        {
          LOBYTE(_D6) = *v51;
          v84 = v66 * ((double)*(unint64_t *)&_D6 - v63);
          v85 = fmax(v84, 0.0);
          if (v84 <= 1.0)
            v86 = v85;
          else
            v86 = 1.0;
          _D6 = v67 * v86 + _D0;
          *(float *)&_D6 = _D6;
          __asm { FCVT            H6, S6 }
          *v57 = LOWORD(_D6);
          v51 += v48;
          v57 = (_WORD *)((char *)v57 + v69);
          --v68;
        }
        while (v68);
      }
      LOBYTE(_D4) = *v51;
      v87 = v66 * ((double)*(unint64_t *)&_D4 - v63);
      v88 = fmax(v87, 0.0);
      if (v87 <= 1.0)
        v89 = v88;
      else
        v89 = 1.0;
      _S0 = v67 * v89 + _D0;
      __asm { FCVT            H0, S0 }
      *v57 = LOWORD(_S0);
    }
  }
LABEL_99:
  v91 = v94;
  v94 = 0;
  if (v91)
    (*(void (**)(uint64_t))(*(_QWORD *)v91 + 8))(v91);
  result = v95;
  v95 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433197C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243319E0(uint64_t **a1, uint64_t a2, float a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v14;
  uint64_t result;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  _WORD *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  _WORD *v62;
  int v63;
  unsigned __int8 *v64;
  unsigned int v65;
  unsigned int v68;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  unint64_t v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  unint64_t v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 *v95;
  uint64_t v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  unint64_t v100;
  _WORD *v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  unsigned int v107;
  int v108;
  uint64_t v109;
  int v110;
  int v111;
  _WORD *v112;
  int v113;
  unsigned __int8 *v114;
  unsigned int v115;
  unsigned int v117;
  uint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  unint64_t v132;
  std::__shared_weak_count *v133;
  unint64_t *v134;
  unint64_t v135;
  unint64_t v136;
  int v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned __int8 *v143;
  uint64_t v144;
  std::__shared_weak_count *v145;
  unint64_t *v146;
  unint64_t v147;
  unint64_t v148;
  _WORD *v149;
  uint64_t v150;
  std::__shared_weak_count *v151;
  unint64_t *v152;
  unint64_t v153;
  unint64_t v154;
  unsigned int v155;
  int v156;
  uint64_t v157;
  int v158;
  int v159;
  _WORD *v160;
  int v161;
  unsigned __int8 *v162;
  unsigned int v163;
  unsigned int v165;
  unsigned int v167;
  unsigned int v170;
  uint64_t v172;
  unsigned int v173;
  unsigned int v176;
  unsigned int v178;
  unsigned int v180;
  unsigned int v182;
  unsigned int v184;
  unsigned int v186;
  uint64_t v188;
  uint64_t v189;

  v6 = **a1;
  v5 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2243326E4(**a1, v5, a3);
  v7 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v7 = -65504.0;
  v8 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v8 = 65504.0;
  if (v7 < -65504.0)
    v7 = -65504.0;
  _S0 = v7;
  __asm { FCVT            H8, S0 }
  if (v8 <= 65504.0)
    v14 = v8;
  else
    v14 = 65504.0;
  _S0 = v14;
  __asm
  {
    FCVT            H9, S0
    FCVT            S11, H8
    FCVT            S10, H9
  }
  if (_NF == _VF && _S10 <= 255.0)
  {
    v20 = *(_QWORD *)(v6 + 8);
    if (!v20)
      goto LABEL_35;
    v21 = *(std::__shared_weak_count **)(v6 + 16);
    if (v21)
    {
      p_shared_owners = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(p_shared_owners);
      while (__stxr(v23 + 1, p_shared_owners));
      do
        v24 = __ldaxr(p_shared_owners);
      while (__stlxr(v24 - 1, p_shared_owners));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
      v20 = *(_QWORD *)(v6 + 8);
      v25 = *(std::__shared_weak_count **)(v6 + 16);
      if (v25)
      {
        v26 = (unint64_t *)&v25->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
    }
    if (*(_BYTE *)(v6 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v20 + 96))(&v189, v20, 0);
      v29 = *(_QWORD *)(v5 + 8);
      if (!v29)
        goto LABEL_51;
    }
    else
    {
LABEL_35:
      v189 = 0;
      v29 = *(_QWORD *)(v5 + 8);
      if (!v29)
        goto LABEL_51;
    }
    v30 = *(std::__shared_weak_count **)(v5 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
      v29 = *(_QWORD *)(v5 + 8);
      v34 = *(std::__shared_weak_count **)(v5 + 16);
      if (v34)
      {
        v35 = (unint64_t *)&v34->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
    }
    if (*(_BYTE *)(v5 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v29 + 96))(&v188, v29, 1);
      v38 = *(_DWORD *)(v6 + 32);
      if (!v38)
        goto LABEL_234;
      goto LABEL_52;
    }
LABEL_51:
    v188 = 0;
    v38 = *(_DWORD *)(v6 + 32);
    if (!v38)
      goto LABEL_234;
LABEL_52:
    v39 = *(_DWORD *)(v6 + 36);
    if (v39)
    {
      v40 = *(unsigned int *)(v6 + 40);
      v41 = *(unsigned int *)(v6 + 44);
      v43 = *(unsigned int *)(v5 + 40);
      v42 = *(unsigned int *)(v5 + 44);
      v44 = *(unsigned __int8 **)(v6 + 24);
      if (*(_BYTE *)(v6 + 48) && v44)
      {
        v45 = *(_QWORD *)(v6 + 8);
        v46 = *(std::__shared_weak_count **)(v6 + 16);
        if (v46)
        {
          v47 = (unint64_t *)&v46->__shared_owners_;
          do
            v48 = __ldxr(v47);
          while (__stxr(v48 + 1, v47));
          do
            v49 = __ldaxr(v47);
          while (__stlxr(v49 - 1, v47));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
            std::__shared_weak_count::__release_weak(v46);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v45 + 88))(v45, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v44 = *(unsigned __int8 **)(v6 + 24);
      }
      v50 = *(_WORD **)(v5 + 24);
      if (*(_BYTE *)(v5 + 48) && v50)
      {
        v51 = *(_QWORD *)(v5 + 8);
        v52 = *(std::__shared_weak_count **)(v5 + 16);
        if (v52)
        {
          v53 = (unint64_t *)&v52->__shared_owners_;
          do
            v54 = __ldxr(v53);
          while (__stxr(v54 + 1, v53));
          do
            v55 = __ldaxr(v53);
          while (__stlxr(v55 - 1, v53));
          if (!v55)
          {
            ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
            std::__shared_weak_count::__release_weak(v52);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v51 + 88))(v51, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v50 = *(_WORD **)(v5 + 24);
      }
      v56 = (int)_S11;
      v57 = (int)_S10;
      v58 = v38 - 1;
      v59 = 2 * v43;
      v60 = v39 - 1;
      if (v39 != 1)
      {
        if (v38 == 1)
        {
          do
          {
            v167 = *v44;
            _H0 = LOWORD(_S8);
            if (v167 >= v56)
            {
              _H0 = LOWORD(_S9);
              if (v167 <= v57)
              {
                _S0 = (float)v167;
                __asm { FCVT            H0, S0 }
              }
            }
            *v50 = _H0;
            v44 += v41;
            v50 += v42;
            --v60;
          }
          while (v60);
        }
        else
        {
          v61 = 0;
          do
          {
            v62 = v50;
            v63 = v38 - 1;
            v64 = v44;
            do
            {
              v65 = *v64;
              _H0 = LOWORD(_S8);
              if (v65 >= v56)
              {
                _H0 = LOWORD(_S9);
                if (v65 <= v57)
                {
                  _S0 = (float)v65;
                  __asm { FCVT            H0, S0 }
                }
              }
              *v62 = _H0;
              v64 += v40;
              v62 = (_WORD *)((char *)v62 + v59);
              --v63;
            }
            while (v63);
            v68 = *v64;
            _H0 = LOWORD(_S8);
            if (v68 >= v56)
            {
              _H0 = LOWORD(_S9);
              if (v68 <= v57)
              {
                _S0 = (float)v68;
                __asm { FCVT            H0, S0 }
              }
            }
            *v62 = _H0;
            v44 += v41;
            v50 += v42;
            ++v61;
          }
          while (v61 != v60);
        }
      }
      if (v38 != 1)
      {
        do
        {
          v173 = *v44;
          _H0 = LOWORD(_S8);
          if (v173 >= v56)
          {
            _H0 = LOWORD(_S9);
            if (v173 <= v57)
            {
              _S0 = (float)v173;
              __asm { FCVT            H0, S0 }
            }
          }
          *v50 = _H0;
          v44 += v40;
          v50 = (_WORD *)((char *)v50 + v59);
          --v58;
        }
        while (v58);
      }
      v170 = *v44;
      if (v170 >= v56)
      {
        LOWORD(_S8) = LOWORD(_S9);
        if (v170 <= v57)
        {
          _S0 = (float)v170;
          __asm { FCVT            H8, S0 }
        }
      }
      *v50 = LOWORD(_S8);
      v172 = v188;
      v188 = 0;
      if (!v172)
        goto LABEL_236;
      goto LABEL_235;
    }
LABEL_234:
    v172 = v188;
    v188 = 0;
    if (!v172)
      goto LABEL_236;
    goto LABEL_235;
  }
  if (_S11 >= 0.0)
  {
    v71 = *(_QWORD *)(v6 + 8);
    if (!v71)
      goto LABEL_99;
    v72 = *(std::__shared_weak_count **)(v6 + 16);
    if (v72)
    {
      v73 = (unint64_t *)&v72->__shared_owners_;
      do
        v74 = __ldxr(v73);
      while (__stxr(v74 + 1, v73));
      do
        v75 = __ldaxr(v73);
      while (__stlxr(v75 - 1, v73));
      if (!v75)
      {
        ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
        std::__shared_weak_count::__release_weak(v72);
      }
      v71 = *(_QWORD *)(v6 + 8);
      v76 = *(std::__shared_weak_count **)(v6 + 16);
      if (v76)
      {
        v77 = (unint64_t *)&v76->__shared_owners_;
        do
          v78 = __ldxr(v77);
        while (__stxr(v78 + 1, v77));
        do
          v79 = __ldaxr(v77);
        while (__stlxr(v79 - 1, v77));
        if (!v79)
        {
          ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
          std::__shared_weak_count::__release_weak(v76);
        }
      }
    }
    if (*(_BYTE *)(v6 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v71 + 96))(&v189, v71, 0);
      v80 = *(_QWORD *)(v5 + 8);
      if (!v80)
        goto LABEL_115;
    }
    else
    {
LABEL_99:
      v189 = 0;
      v80 = *(_QWORD *)(v5 + 8);
      if (!v80)
        goto LABEL_115;
    }
    v81 = *(std::__shared_weak_count **)(v5 + 16);
    if (v81)
    {
      v82 = (unint64_t *)&v81->__shared_owners_;
      do
        v83 = __ldxr(v82);
      while (__stxr(v83 + 1, v82));
      do
        v84 = __ldaxr(v82);
      while (__stlxr(v84 - 1, v82));
      if (!v84)
      {
        ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
        std::__shared_weak_count::__release_weak(v81);
      }
      v80 = *(_QWORD *)(v5 + 8);
      v85 = *(std::__shared_weak_count **)(v5 + 16);
      if (v85)
      {
        v86 = (unint64_t *)&v85->__shared_owners_;
        do
          v87 = __ldxr(v86);
        while (__stxr(v87 + 1, v86));
        do
          v88 = __ldaxr(v86);
        while (__stlxr(v88 - 1, v86));
        if (!v88)
        {
          ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
          std::__shared_weak_count::__release_weak(v85);
        }
      }
    }
    if (*(_BYTE *)(v5 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v80 + 96))(&v188, v80, 1);
      v89 = *(_DWORD *)(v6 + 32);
      if (!v89)
        goto LABEL_234;
      goto LABEL_116;
    }
LABEL_115:
    v188 = 0;
    v89 = *(_DWORD *)(v6 + 32);
    if (!v89)
      goto LABEL_234;
LABEL_116:
    v90 = *(_DWORD *)(v6 + 36);
    if (v90)
    {
      v91 = *(unsigned int *)(v6 + 40);
      v92 = *(unsigned int *)(v6 + 44);
      v94 = *(unsigned int *)(v5 + 40);
      v93 = *(unsigned int *)(v5 + 44);
      v95 = *(unsigned __int8 **)(v6 + 24);
      if (*(_BYTE *)(v6 + 48) && v95)
      {
        v96 = *(_QWORD *)(v6 + 8);
        v97 = *(std::__shared_weak_count **)(v6 + 16);
        if (v97)
        {
          v98 = (unint64_t *)&v97->__shared_owners_;
          do
            v99 = __ldxr(v98);
          while (__stxr(v99 + 1, v98));
          do
            v100 = __ldaxr(v98);
          while (__stlxr(v100 - 1, v98));
          if (!v100)
          {
            ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
            std::__shared_weak_count::__release_weak(v97);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v96 + 88))(v96, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v95 = *(unsigned __int8 **)(v6 + 24);
      }
      v101 = *(_WORD **)(v5 + 24);
      if (*(_BYTE *)(v5 + 48) && v101)
      {
        v102 = *(_QWORD *)(v5 + 8);
        v103 = *(std::__shared_weak_count **)(v5 + 16);
        if (v103)
        {
          v104 = (unint64_t *)&v103->__shared_owners_;
          do
            v105 = __ldxr(v104);
          while (__stxr(v105 + 1, v104));
          do
            v106 = __ldaxr(v104);
          while (__stlxr(v106 - 1, v104));
          if (!v106)
          {
            ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
            std::__shared_weak_count::__release_weak(v103);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v102 + 88))(v102, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v101 = *(_WORD **)(v5 + 24);
      }
      v107 = (int)_S11;
      v108 = v89 - 1;
      v109 = 2 * v94;
      v110 = v90 - 1;
      if (v90 != 1)
      {
        if (v89 == 1)
        {
          do
          {
            v176 = *v95;
            _S0 = (float)v176;
            __asm { FCVT            H0, S0 }
            if (v176 < v107)
              _S0 = _S8;
            *v101 = LOWORD(_S0);
            v95 += v92;
            v101 += v93;
            --v110;
          }
          while (v110);
        }
        else
        {
          v111 = 0;
          do
          {
            v112 = v101;
            v113 = v89 - 1;
            v114 = v95;
            do
            {
              v115 = *v114;
              _S0 = (float)v115;
              __asm { FCVT            H0, S0 }
              if (v115 < v107)
                _S0 = _S8;
              *v112 = LOWORD(_S0);
              v114 += v91;
              v112 = (_WORD *)((char *)v112 + v109);
              --v113;
            }
            while (v113);
            v117 = *v114;
            _S0 = (float)v117;
            __asm { FCVT            H0, S0 }
            if (v117 < v107)
              _S0 = _S8;
            *v112 = LOWORD(_S0);
            v95 += v92;
            v101 += v93;
            ++v111;
          }
          while (v111 != v110);
        }
      }
      if (v89 != 1)
      {
        do
        {
          v178 = *v95;
          _S0 = (float)v178;
          __asm { FCVT            H0, S0 }
          if (v178 < v107)
            _S0 = _S8;
          *v101 = LOWORD(_S0);
          v95 += v91;
          v101 = (_WORD *)((char *)v101 + v109);
          --v108;
        }
        while (v108);
      }
      v180 = *v95;
      _S0 = (float)v180;
      __asm { FCVT            H0, S0 }
      if (v180 < v107)
        _S0 = _S8;
      *v101 = LOWORD(_S0);
    }
    goto LABEL_234;
  }
  a3 = 255.0;
  if (_S10 > 255.0)
    return sub_2243326E4(**a1, v5, a3);
  v119 = *(_QWORD *)(v6 + 8);
  if (!v119)
    goto LABEL_161;
  v120 = *(std::__shared_weak_count **)(v6 + 16);
  if (v120)
  {
    v121 = (unint64_t *)&v120->__shared_owners_;
    do
      v122 = __ldxr(v121);
    while (__stxr(v122 + 1, v121));
    do
      v123 = __ldaxr(v121);
    while (__stlxr(v123 - 1, v121));
    if (!v123)
    {
      ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
      std::__shared_weak_count::__release_weak(v120);
    }
    v119 = *(_QWORD *)(v6 + 8);
    v124 = *(std::__shared_weak_count **)(v6 + 16);
    if (v124)
    {
      v125 = (unint64_t *)&v124->__shared_owners_;
      do
        v126 = __ldxr(v125);
      while (__stxr(v126 + 1, v125));
      do
        v127 = __ldaxr(v125);
      while (__stlxr(v127 - 1, v125));
      if (!v127)
      {
        ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
        std::__shared_weak_count::__release_weak(v124);
      }
    }
  }
  if (*(_BYTE *)(v6 + 49))
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v119 + 96))(&v189, v119, 0);
  else
LABEL_161:
    v189 = 0;
  v128 = *(_QWORD *)(v5 + 8);
  if (!v128)
    goto LABEL_177;
  v129 = *(std::__shared_weak_count **)(v5 + 16);
  if (v129)
  {
    v130 = (unint64_t *)&v129->__shared_owners_;
    do
      v131 = __ldxr(v130);
    while (__stxr(v131 + 1, v130));
    do
      v132 = __ldaxr(v130);
    while (__stlxr(v132 - 1, v130));
    if (!v132)
    {
      ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
      std::__shared_weak_count::__release_weak(v129);
    }
    v128 = *(_QWORD *)(v5 + 8);
    v133 = *(std::__shared_weak_count **)(v5 + 16);
    if (v133)
    {
      v134 = (unint64_t *)&v133->__shared_owners_;
      do
        v135 = __ldxr(v134);
      while (__stxr(v135 + 1, v134));
      do
        v136 = __ldaxr(v134);
      while (__stlxr(v136 - 1, v134));
      if (!v136)
      {
        ((void (*)(std::__shared_weak_count *))v133->__on_zero_shared)(v133);
        std::__shared_weak_count::__release_weak(v133);
      }
    }
  }
  if (*(_BYTE *)(v5 + 49))
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v128 + 96))(&v188, v128, 1);
  else
LABEL_177:
    v188 = 0;
  v137 = *(_DWORD *)(v6 + 32);
  if (!v137)
    goto LABEL_234;
  v138 = *(_DWORD *)(v6 + 36);
  if (!v138)
    goto LABEL_234;
  v139 = *(unsigned int *)(v6 + 40);
  v140 = *(unsigned int *)(v6 + 44);
  v142 = *(unsigned int *)(v5 + 40);
  v141 = *(unsigned int *)(v5 + 44);
  v143 = *(unsigned __int8 **)(v6 + 24);
  if (*(_BYTE *)(v6 + 48) && v143)
  {
    v144 = *(_QWORD *)(v6 + 8);
    v145 = *(std::__shared_weak_count **)(v6 + 16);
    if (v145)
    {
      v146 = (unint64_t *)&v145->__shared_owners_;
      do
        v147 = __ldxr(v146);
      while (__stxr(v147 + 1, v146));
      do
        v148 = __ldaxr(v146);
      while (__stlxr(v148 - 1, v146));
      if (!v148)
      {
        ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
        std::__shared_weak_count::__release_weak(v145);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v144 + 88))(v144, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v143 = *(unsigned __int8 **)(v6 + 24);
  }
  v149 = *(_WORD **)(v5 + 24);
  if (*(_BYTE *)(v5 + 48) && v149)
  {
    v150 = *(_QWORD *)(v5 + 8);
    v151 = *(std::__shared_weak_count **)(v5 + 16);
    if (v151)
    {
      v152 = (unint64_t *)&v151->__shared_owners_;
      do
        v153 = __ldxr(v152);
      while (__stxr(v153 + 1, v152));
      do
        v154 = __ldaxr(v152);
      while (__stlxr(v154 - 1, v152));
      if (!v154)
      {
        ((void (*)(std::__shared_weak_count *))v151->__on_zero_shared)(v151);
        std::__shared_weak_count::__release_weak(v151);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v150 + 88))(v150, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v149 = *(_WORD **)(v5 + 24);
  }
  v155 = (int)_S10;
  v156 = v137 - 1;
  v157 = 2 * v142;
  v158 = v138 - 1;
  if (v138 != 1)
  {
    if (v137 == 1)
    {
      do
      {
        v182 = *v143;
        _S0 = (float)v182;
        __asm { FCVT            H0, S0 }
        if (v182 > v155)
          _S0 = _S9;
        *v149 = LOWORD(_S0);
        v143 += v140;
        v149 += v141;
        --v158;
      }
      while (v158);
    }
    else
    {
      v159 = 0;
      do
      {
        v160 = v149;
        v161 = v137 - 1;
        v162 = v143;
        do
        {
          v163 = *v162;
          _S0 = (float)v163;
          __asm { FCVT            H0, S0 }
          if (v163 > v155)
            _S0 = _S9;
          *v160 = LOWORD(_S0);
          v162 += v139;
          v160 = (_WORD *)((char *)v160 + v157);
          --v161;
        }
        while (v161);
        v165 = *v162;
        _S0 = (float)v165;
        __asm { FCVT            H0, S0 }
        if (v165 > v155)
          _S0 = _S9;
        *v160 = LOWORD(_S0);
        v143 += v140;
        v149 += v141;
        ++v159;
      }
      while (v159 != v158);
    }
  }
  if (v137 != 1)
  {
    do
    {
      v184 = *v143;
      _S0 = (float)v184;
      __asm { FCVT            H0, S0 }
      if (v184 > v155)
        _S0 = _S9;
      *v149 = LOWORD(_S0);
      v143 += v139;
      v149 = (_WORD *)((char *)v149 + v157);
      --v156;
    }
    while (v156);
  }
  v186 = *v143;
  _S0 = (float)v186;
  __asm { FCVT            H0, S0 }
  if (v186 > v155)
    _S0 = _S9;
  *v149 = LOWORD(_S0);
  v172 = v188;
  v188 = 0;
  if (!v172)
    goto LABEL_236;
LABEL_235:
  (*(void (**)(uint64_t))(*(_QWORD *)v172 + 8))(v172);
LABEL_236:
  result = v189;
  v189 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224332644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243326D8(uint64_t **a1, float a2)
{
  return sub_2243326E4(**a1, (*a1)[1], a2);
}

uint64_t sub_2243326E4(uint64_t a1, uint64_t a2, float _S0)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  _WORD *v45;
  int v46;
  _BYTE *v47;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_70;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v56 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v55, v14, 1);
    v23 = *(_DWORD *)(a1 + 32);
    if (!v23)
      goto LABEL_64;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v56, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v55 = 0;
  v23 = *(_DWORD *)(a1 + 32);
  if (!v23)
    goto LABEL_64;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(unsigned int *)(a1 + 40);
    v26 = *(unsigned int *)(a1 + 44);
    v28 = *(unsigned int *)(a2 + 40);
    v27 = *(unsigned int *)(a2 + 44);
    v29 = *(_BYTE **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v29)
    {
      v30 = *(_QWORD *)(a1 + 8);
      v31 = *(std::__shared_weak_count **)(a1 + 16);
      if (v31)
      {
        v32 = (unint64_t *)&v31->__shared_owners_;
        do
          v33 = __ldxr(v32);
        while (__stxr(v33 + 1, v32));
        do
          v34 = __ldaxr(v32);
        while (__stlxr(v34 - 1, v32));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v29 = *(_BYTE **)(a1 + 24);
    }
    v35 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v35)
    {
      v36 = *(_QWORD *)(a2 + 8);
      v37 = *(std::__shared_weak_count **)(a2 + 16);
      if (v37)
      {
        v38 = (unint64_t *)&v37->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v35 = *(_WORD **)(a2 + 24);
    }
    v41 = v23 - 1;
    v42 = 2 * v28;
    v43 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        do
        {
          LOBYTE(_S0) = *v29;
          _S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v35 = LOWORD(_S0);
          v29 += v26;
          v35 += v27;
          --v43;
        }
        while (v43);
      }
      else
      {
        v44 = 0;
        do
        {
          v45 = v35;
          v46 = v23 - 1;
          v47 = v29;
          do
          {
            LOBYTE(_S0) = *v47;
            _S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *v45 = LOWORD(_S0);
            v47 += v25;
            v45 = (_WORD *)((char *)v45 + v42);
            --v46;
          }
          while (v46);
          LOBYTE(_S0) = *v47;
          _S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v45 = LOWORD(_S0);
          v29 += v26;
          v35 += v27;
          ++v44;
        }
        while (v44 != v43);
      }
    }
    if (v23 != 1)
    {
      do
      {
        LOBYTE(_S0) = *v29;
        _S0 = (float)LODWORD(_S0);
        __asm { FCVT            H0, S0 }
        *v35 = LOWORD(_S0);
        v29 += v25;
        v35 = (_WORD *)((char *)v35 + v42);
        --v41;
      }
      while (v41);
    }
    LOBYTE(_S0) = *v29;
    _S0 = (float)LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    *v35 = LOWORD(_S0);
  }
LABEL_64:
  v53 = v55;
  v55 = 0;
  if (v53)
    (*(void (**)(uint64_t))(*(_QWORD *)v53 + 8))(v53);
  result = v56;
  v56 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224332ACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_224332B30(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::string::size_type v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::string::size_type v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  std::logic_error *exception;
  std::string::size_type v24;
  std::__shared_weak_count *v25;
  std::string v26;

  if (*(_DWORD *)(a2 + 56) != 4)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224332E78((uint64_t)&v26, a2);
    std::logic_error::logic_error(exception, &v26);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v26.__r_.__value_.__r.__words[0] = v4;
  v26.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4)
  {
    v24 = v4;
    v25 = (std::__shared_weak_count *)v5;
    *(_OWORD *)&v26.__r_.__value_.__l.__data_ = 0uLL;
    goto LABEL_11;
  }
  v24 = 0;
  v25 = 0;
  if (!v26.__r_.__value_.__l.__size_)
    goto LABEL_11;
  v8 = (unint64_t *)(v26.__r_.__value_.__l.__size_ + 8);
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
  {
LABEL_11:
    v10 = v24;
    v11 = v25;
    if (v24)
      goto LABEL_21;
    goto LABEL_12;
  }
  (*(void (**)(std::string::size_type))(*(_QWORD *)v26.__r_.__value_.__l.__size_ + 16))(v26.__r_.__value_.__l.__size_);
  std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v26.__r_.__value_.__l.__size_);
  v11 = 0;
LABEL_12:
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a2 + 8) + 32))(&v26);
  v10 = v26.__r_.__value_.__r.__words[0];
  if (v26.__r_.__value_.__r.__words[0])
  {
    v11 = (std::__shared_weak_count *)operator new();
    v14 = v26.__r_.__value_.__r.__words[0];
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC20DE8;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = (std::__shared_weak_count_vtbl *)v14;
  }
  else
  {
    v11 = 0;
  }
LABEL_21:
  v15 = *(_QWORD *)(a2 + 24);
  if ((v15 & 0xFF00000000) != 0)
    v16 = (v15 >> 2) | 0x100000000;
  else
    v16 = 0;
  v17 = *(_WORD *)(a2 + 60);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  if (v11)
  {
    v18 = (unint64_t *)&v11->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
  }
  *(_QWORD *)(a1 + 16) = v16;
  (*(void (**)(std::string *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v10 + 64))(&v26, v10, 4);
  v20 = *(_QWORD *)(v26.__r_.__value_.__r.__words[0] + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v26.__r_.__value_.__l.__data_;
  *(_QWORD *)(a1 + 40) = v20;
  v26.__r_.__value_.__r.__words[0] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  *(_WORD *)(a1 + 72) = v17;
  if (v11)
  {
    v21 = (unint64_t *)&v11->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_224332DF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_224332E54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_224332E78(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  std::string *v4;
  std::string *v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  int64x2_t v10;
  int8x16_t v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  void *v17[2];
  char v18;
  std::string __p;
  void *v20[2];
  char v21;
  void *v22;
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v3 = atomic_load((unsigned __int8 *)&qword_2540CFB20);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2540CFB20))
  {
    v18 = 5;
    strcpy((char *)v17, "Image");
    v6 = sub_2231C26A0();
    if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&__p, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
    }
    else
    {
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v7;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v8 = sub_2231A27C0();
    if (*((char *)v8 + 23) < 0)
    {
      sub_223197FA4(&__p, *(void **)v8, *((_QWORD *)v8 + 1));
    }
    else
    {
      v9 = *v8;
      __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 2);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v9;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v22);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    sub_22319BD1C(&v15, (uint64_t)v20, 2uLL);
    sub_2245730F4((char *)v17, (uint64_t *)&v15, &stru_2540CFB58, v10, v11);
    v12 = (void **)v15;
    if (v15)
    {
      v13 = v16;
      v14 = v15;
      if (v16 != v15)
      {
        do
        {
          if (*((char *)v13 - 1) < 0)
            operator delete(*(v13 - 3));
          v13 -= 3;
        }
        while (v13 != v12);
        v14 = v15;
      }
      v16 = v12;
      operator delete(v14);
    }
    if (v23 < 0)
    {
      operator delete(v22);
      if ((v21 & 0x80000000) == 0)
      {
LABEL_24:
        if ((v18 & 0x80000000) == 0)
        {
LABEL_25:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2540CFB58, &dword_22314D000);
          __cxa_guard_release(&qword_2540CFB20);
          goto LABEL_2;
        }
LABEL_28:
        operator delete(v17[0]);
        goto LABEL_25;
      }
    }
    else if ((v21 & 0x80000000) == 0)
    {
      goto LABEL_24;
    }
    operator delete(v20[0]);
    if ((v18 & 0x80000000) == 0)
      goto LABEL_25;
    goto LABEL_28;
  }
LABEL_2:
  v4 = sub_2231DE81C();
  LODWORD(v20[0]) = *(_DWORD *)(a2 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)&stru_2540CFB58, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", (unsigned int *)v20);
}

void sub_224333108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, void **a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  void **v36;
  void **v37;

  if (__p)
  {
    v36 = a10;
    v37 = __p;
    if (a10 != __p)
    {
      do
      {
        if (*((char *)v36 - 1) < 0)
          operator delete(*(v36 - 3));
        v36 -= 3;
      }
      while (v36 != __p);
      v37 = __p;
    }
    operator delete(v37);
  }
  if (a35 < 0)
    operator delete(a30);
  if (a29 < 0)
    operator delete(a24);
  if (a17 < 0)
    operator delete(a12);
  __cxa_guard_abort(&qword_2540CFB20);
  _Unwind_Resume(a1);
}

uint64_t sub_2243331DC(uint64_t **a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t *v9;
  double v10;
  unsigned int v11;
  double v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  float v17;
  double v18;
  float v19;
  float v20;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _DWORD *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  int v63;
  int v64;
  int v65;
  _DWORD *v66;
  int v67;
  _BYTE *v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  float v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v9 = *a1;
  if (!*(_BYTE *)(a2 + 16))
  {
    v11 = 0;
    v13 = 255;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_32:
    v19 = 1.0;
    v17 = 0.0;
    v20 = (float)v11;
    if ((float)v11 != 0.0 || 1.0 != (float)v13)
      goto LABEL_15;
    return sub_224334474(v15, v14, v20);
  }
  v10 = *(double *)a2;
  if (*(double *)a2 < 0.0)
    v10 = 0.0;
  v11 = (int)v10;
  v12 = 255.0;
  if (*(double *)(a2 + 8) <= 255.0)
    v12 = *(double *)(a2 + 8);
  v13 = (int)v12;
  v15 = *v9;
  v14 = v9[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_32;
LABEL_7:
  v16 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v16 = *(double *)(a2 + 24);
  v17 = v16;
  v18 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v18 = *(double *)(a2 + 32);
  v19 = v18;
  v20 = (float)v11;
  if (v17 == (float)v11 && v19 == (float)v13)
    return sub_224334474(v15, v14, v20);
LABEL_15:
  v22 = *(_QWORD *)(v15 + 8);
  if (!v22)
    goto LABEL_38;
  v23 = *(std::__shared_weak_count **)(v15 + 16);
  if (v23)
  {
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(p_shared_owners);
    while (__stxr(v25 + 1, p_shared_owners));
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(v15 + 8);
    v27 = *(std::__shared_weak_count **)(v15 + 16);
    if (v27)
    {
      v28 = (unint64_t *)&v27->__shared_owners_;
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
      do
        v30 = __ldaxr(v28);
      while (__stlxr(v30 - 1, v28));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
      }
    }
  }
  if (*(_BYTE *)(v15 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v22 + 96))(&v89, v22, 0);
    v31 = *(_QWORD *)(v14 + 8);
    if (!v31)
      goto LABEL_54;
  }
  else
  {
LABEL_38:
    v89 = 0;
    v31 = *(_QWORD *)(v14 + 8);
    if (!v31)
      goto LABEL_54;
  }
  v34 = *(std::__shared_weak_count **)(v14 + 16);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldxr(v35);
    while (__stxr(v36 + 1, v35));
    do
      v37 = __ldaxr(v35);
    while (__stlxr(v37 - 1, v35));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
    v31 = *(_QWORD *)(v14 + 8);
    v38 = *(std::__shared_weak_count **)(v14 + 16);
    if (v38)
    {
      v39 = (unint64_t *)&v38->__shared_owners_;
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
      do
        v41 = __ldaxr(v39);
      while (__stlxr(v41 - 1, v39));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
      }
    }
  }
  if (*(_BYTE *)(v14 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v31 + 96))(&v88, v31, 1);
    v42 = *(_DWORD *)(v15 + 32);
    if (!v42)
      goto LABEL_102;
    goto LABEL_55;
  }
LABEL_54:
  v88 = 0;
  v42 = *(_DWORD *)(v15 + 32);
  if (!v42)
    goto LABEL_102;
LABEL_55:
  v43 = *(_DWORD *)(v15 + 36);
  if (!v43)
    goto LABEL_102;
  v44 = *(unsigned int *)(v15 + 40);
  v45 = *(unsigned int *)(v15 + 44);
  v87 = *(unsigned int *)(v14 + 40);
  v86 = *(unsigned int *)(v14 + 44);
  v46 = *(_BYTE **)(v15 + 24);
  if (*(_BYTE *)(v15 + 48) && v46)
  {
    v47 = *(_QWORD *)(v15 + 8);
    v48 = *(std::__shared_weak_count **)(v15 + 16);
    if (v48)
    {
      v49 = (unint64_t *)&v48->__shared_owners_;
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (!v51)
      {
        ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
        std::__shared_weak_count::__release_weak(v48);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v47 + 88))(v47, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v46 = *(_BYTE **)(v15 + 24);
  }
  v52 = *(_DWORD **)(v14 + 24);
  if (*(_BYTE *)(v14 + 48) && v52)
  {
    v53 = *(_QWORD *)(v14 + 8);
    v54 = *(std::__shared_weak_count **)(v14 + 16);
    if (v54)
    {
      v55 = (unint64_t *)&v54->__shared_owners_;
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 1, v55));
      do
        v57 = __ldaxr(v55);
      while (__stlxr(v57 - 1, v55));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
        std::__shared_weak_count::__release_weak(v54);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v53 + 88))(v53, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v52 = *(_DWORD **)(v14 + 24);
  }
  v58 = (double)v11;
  v59 = v17;
  v60 = v19;
  v61 = 1.0 / ((double)v13 - (double)v11);
  v62 = v19 - v17;
  v63 = v42 - 1;
  v64 = v43 - 1;
  if (v43 == 1)
    goto LABEL_86;
  if (v42 != 1)
  {
    v65 = 0;
    v60 = 0.0;
    do
    {
      v66 = v52;
      v67 = v42 - 1;
      v68 = v46;
      do
      {
        LOBYTE(a9) = *v68;
        v69 = v61 * ((double)*(unint64_t *)&a9 - v58);
        v70 = fmax(v69, 0.0);
        if (v69 <= 1.0)
          v71 = v70;
        else
          v71 = 1.0;
        a9 = v62 * v71 + v59;
        *(float *)&a9 = a9;
        *v66 = LODWORD(a9);
        v68 += v44;
        v66 += v87;
        --v67;
      }
      while (v67);
      LOBYTE(a9) = *v68;
      v72 = v61 * ((double)*(unint64_t *)&a9 - v58);
      v73 = fmax(v72, 0.0);
      if (v72 <= 1.0)
        v74 = v73;
      else
        v74 = 1.0;
      a9 = v62 * v74 + v59;
      *(float *)&a9 = a9;
      *v66 = LODWORD(a9);
      v46 += v45;
      v52 += v86;
      ++v65;
    }
    while (v65 != v64);
LABEL_86:
    if (v42 != 1)
    {
      v60 = 0.0;
      do
      {
        LOBYTE(a9) = *v46;
        v75 = v61 * ((double)*(unint64_t *)&a9 - v58);
        v76 = fmax(v75, 0.0);
        if (v75 <= 1.0)
          v77 = v76;
        else
          v77 = 1.0;
        a9 = v62 * v77 + v59;
        *(float *)&a9 = a9;
        *v52 = LODWORD(a9);
        v46 += v44;
        v52 += v87;
        --v63;
      }
      while (v63);
    }
    goto LABEL_98;
  }
  v60 = 0.0;
  do
  {
    LOBYTE(a9) = *v46;
    v78 = v61 * ((double)*(unint64_t *)&a9 - v58);
    v79 = fmax(v78, 0.0);
    if (v78 <= 1.0)
      v80 = v79;
    else
      v80 = 1.0;
    a9 = v62 * v80 + v59;
    *(float *)&a9 = a9;
    *v52 = LODWORD(a9);
    v46 += v45;
    v52 += v86;
    --v64;
  }
  while (v64);
LABEL_98:
  LOBYTE(v60) = *v46;
  v81 = v61 * ((double)*(unint64_t *)&v60 - v58);
  v82 = fmax(v81, 0.0);
  if (v81 <= 1.0)
    v83 = v82;
  else
    v83 = 1.0;
  v84 = v62 * v83 + v59;
  *(float *)v52 = v84;
LABEL_102:
  v85 = v88;
  v88 = 0;
  if (v85)
    (*(void (**)(uint64_t))(*(_QWORD *)v85 + 8))(v85);
  result = v89;
  v89 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224333784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243337E8(uint64_t **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  float v6;
  double v7;
  float v8;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  float *v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  int v51;
  int v52;
  float *v53;
  int v54;
  unsigned __int8 *v55;
  unsigned int v56;
  float v57;
  unsigned int v58;
  float v59;
  unsigned int v60;
  float v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned __int8 *v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  float *v101;
  int v102;
  unsigned __int8 *v103;
  unsigned int v104;
  float v105;
  unsigned int v106;
  float v107;
  unsigned int v108;
  float v109;
  uint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *p_shared_owners;
  unint64_t v113;
  unint64_t v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  int v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned __int8 *v134;
  uint64_t v135;
  std::__shared_weak_count *v136;
  unint64_t *v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  std::__shared_weak_count *v141;
  unint64_t *v142;
  unint64_t v143;
  unint64_t v144;
  unsigned int v145;
  int v146;
  int v147;
  int v148;
  float *v149;
  int v150;
  unsigned __int8 *v151;
  unsigned int v152;
  float v153;
  unsigned int v154;
  float v155;
  unsigned int v156;
  float v157;
  unsigned int v158;
  float v159;
  unsigned int v160;
  float v161;
  BOOL v162;
  unsigned int v163;
  float v164;
  unsigned int v165;
  uint64_t v166;
  unsigned int v167;
  float v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;

  v3 = **a1;
  v2 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    v8 = 3.4028e38;
    v6 = -3.4028e38;
    if (-3.4028e38 >= 0.0 && 3.4028e38 <= 255.0)
      goto LABEL_15;
LABEL_36:
    if (v6 < 0.0)
    {
      if (v8 > 255.0)
        return sub_224334474(**a1, v2, 255.0);
      v110 = *(_QWORD *)(v3 + 8);
      if (!v110)
        goto LABEL_179;
      v111 = *(std::__shared_weak_count **)(v3 + 16);
      if (v111)
      {
        p_shared_owners = (unint64_t *)&v111->__shared_owners_;
        do
          v113 = __ldxr(p_shared_owners);
        while (__stxr(v113 + 1, p_shared_owners));
        do
          v114 = __ldaxr(p_shared_owners);
        while (__stlxr(v114 - 1, p_shared_owners));
        if (!v114)
        {
          ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
          std::__shared_weak_count::__release_weak(v111);
        }
        v110 = *(_QWORD *)(v3 + 8);
        v115 = *(std::__shared_weak_count **)(v3 + 16);
        if (v115)
        {
          v116 = (unint64_t *)&v115->__shared_owners_;
          do
            v117 = __ldxr(v116);
          while (__stxr(v117 + 1, v116));
          do
            v118 = __ldaxr(v116);
          while (__stlxr(v118 - 1, v116));
          if (!v118)
          {
            ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
            std::__shared_weak_count::__release_weak(v115);
          }
        }
      }
      if (*(_BYTE *)(v3 + 49))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v110 + 96))(&v171, v110, 0);
        v119 = *(_QWORD *)(v2 + 8);
        if (!v119)
          goto LABEL_195;
      }
      else
      {
LABEL_179:
        v171 = 0;
        v119 = *(_QWORD *)(v2 + 8);
        if (!v119)
          goto LABEL_195;
      }
      v120 = *(std::__shared_weak_count **)(v2 + 16);
      if (v120)
      {
        v121 = (unint64_t *)&v120->__shared_owners_;
        do
          v122 = __ldxr(v121);
        while (__stxr(v122 + 1, v121));
        do
          v123 = __ldaxr(v121);
        while (__stlxr(v123 - 1, v121));
        if (!v123)
        {
          ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
          std::__shared_weak_count::__release_weak(v120);
        }
        v119 = *(_QWORD *)(v2 + 8);
        v124 = *(std::__shared_weak_count **)(v2 + 16);
        if (v124)
        {
          v125 = (unint64_t *)&v124->__shared_owners_;
          do
            v126 = __ldxr(v125);
          while (__stxr(v126 + 1, v125));
          do
            v127 = __ldaxr(v125);
          while (__stlxr(v127 - 1, v125));
          if (!v127)
          {
            ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
            std::__shared_weak_count::__release_weak(v124);
          }
        }
      }
      if (*(_BYTE *)(v2 + 49))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v119 + 96))(&v170, v119, 1);
        v128 = *(_DWORD *)(v3 + 32);
        if (!v128)
          goto LABEL_245;
        goto LABEL_196;
      }
LABEL_195:
      v170 = 0;
      v128 = *(_DWORD *)(v3 + 32);
      if (!v128)
        goto LABEL_245;
LABEL_196:
      v129 = *(_DWORD *)(v3 + 36);
      if (!v129)
        goto LABEL_245;
      v130 = *(unsigned int *)(v3 + 40);
      v131 = *(unsigned int *)(v3 + 44);
      v132 = *(unsigned int *)(v2 + 40);
      v133 = *(unsigned int *)(v2 + 44);
      v134 = *(unsigned __int8 **)(v3 + 24);
      if (*(_BYTE *)(v3 + 48) && v134)
      {
        v135 = *(_QWORD *)(v3 + 8);
        v136 = *(std::__shared_weak_count **)(v3 + 16);
        if (v136)
        {
          v137 = (unint64_t *)&v136->__shared_owners_;
          do
            v138 = __ldxr(v137);
          while (__stxr(v138 + 1, v137));
          do
            v139 = __ldaxr(v137);
          while (__stlxr(v139 - 1, v137));
          if (!v139)
          {
            ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
            std::__shared_weak_count::__release_weak(v136);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v135 + 88))(v135, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v134 = *(unsigned __int8 **)(v3 + 24);
      }
      v42 = *(float **)(v2 + 24);
      if (*(_BYTE *)(v2 + 48) && v42)
      {
        v140 = *(_QWORD *)(v2 + 8);
        v141 = *(std::__shared_weak_count **)(v2 + 16);
        if (v141)
        {
          v142 = (unint64_t *)&v141->__shared_owners_;
          do
            v143 = __ldxr(v142);
          while (__stxr(v143 + 1, v142));
          do
            v144 = __ldaxr(v142);
          while (__stlxr(v144 - 1, v142));
          if (!v144)
          {
            ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
            std::__shared_weak_count::__release_weak(v141);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v140 + 88))(v140, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v42 = *(float **)(v2 + 24);
      }
      v145 = (int)v8;
      v146 = v128 - 1;
      v147 = v129 - 1;
      if (v129 != 1)
      {
        if (v128 == 1)
        {
          do
          {
            v167 = *v134;
            v168 = (float)v167;
            if (v167 > v145)
              v168 = v8;
            *v42 = v168;
            v134 += v131;
            v42 += v133;
            --v147;
          }
          while (v147);
          goto LABEL_253;
        }
        v148 = 0;
        do
        {
          v149 = v42;
          v150 = v128 - 1;
          v151 = v134;
          do
          {
            v152 = *v151;
            v153 = (float)v152;
            if (v152 > v145)
              v153 = v8;
            *v149 = v153;
            v151 += v130;
            v149 += v132;
            --v150;
          }
          while (v150);
          v154 = *v151;
          v155 = (float)v154;
          if (v154 > v145)
            v155 = v8;
          *v149 = v155;
          v134 += v131;
          v42 += v133;
          ++v148;
        }
        while (v148 != v147);
      }
      if (v128 != 1)
      {
        do
        {
          v156 = *v134;
          v157 = (float)v156;
          if (v156 > v145)
            v157 = v8;
          *v42 = v157;
          v134 += v130;
          v42 += v132;
          --v146;
        }
        while (v146);
      }
LABEL_253:
      v169 = *v134;
      v161 = (float)v169;
      if (v169 > v145)
        v161 = v8;
      goto LABEL_244;
    }
    v62 = *(_QWORD *)(v3 + 8);
    if (!v62)
      goto LABEL_112;
    v63 = *(std::__shared_weak_count **)(v3 + 16);
    if (v63)
    {
      v64 = (unint64_t *)&v63->__shared_owners_;
      do
        v65 = __ldxr(v64);
      while (__stxr(v65 + 1, v64));
      do
        v66 = __ldaxr(v64);
      while (__stlxr(v66 - 1, v64));
      if (!v66)
      {
        ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
        std::__shared_weak_count::__release_weak(v63);
      }
      v62 = *(_QWORD *)(v3 + 8);
      v67 = *(std::__shared_weak_count **)(v3 + 16);
      if (v67)
      {
        v68 = (unint64_t *)&v67->__shared_owners_;
        do
          v69 = __ldxr(v68);
        while (__stxr(v69 + 1, v68));
        do
          v70 = __ldaxr(v68);
        while (__stlxr(v70 - 1, v68));
        if (!v70)
        {
          ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
          std::__shared_weak_count::__release_weak(v67);
        }
      }
    }
    if (*(_BYTE *)(v3 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v62 + 96))(&v171, v62, 0);
      v71 = *(_QWORD *)(v2 + 8);
      if (!v71)
        goto LABEL_128;
    }
    else
    {
LABEL_112:
      v171 = 0;
      v71 = *(_QWORD *)(v2 + 8);
      if (!v71)
        goto LABEL_128;
    }
    v72 = *(std::__shared_weak_count **)(v2 + 16);
    if (v72)
    {
      v73 = (unint64_t *)&v72->__shared_owners_;
      do
        v74 = __ldxr(v73);
      while (__stxr(v74 + 1, v73));
      do
        v75 = __ldaxr(v73);
      while (__stlxr(v75 - 1, v73));
      if (!v75)
      {
        ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
        std::__shared_weak_count::__release_weak(v72);
      }
      v71 = *(_QWORD *)(v2 + 8);
      v76 = *(std::__shared_weak_count **)(v2 + 16);
      if (v76)
      {
        v77 = (unint64_t *)&v76->__shared_owners_;
        do
          v78 = __ldxr(v77);
        while (__stxr(v78 + 1, v77));
        do
          v79 = __ldaxr(v77);
        while (__stlxr(v79 - 1, v77));
        if (!v79)
        {
          ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
          std::__shared_weak_count::__release_weak(v76);
        }
      }
    }
    if (*(_BYTE *)(v2 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v71 + 96))(&v170, v71, 1);
      v80 = *(_DWORD *)(v3 + 32);
      if (!v80)
        goto LABEL_245;
      goto LABEL_129;
    }
LABEL_128:
    v170 = 0;
    v80 = *(_DWORD *)(v3 + 32);
    if (!v80)
      goto LABEL_245;
LABEL_129:
    v81 = *(_DWORD *)(v3 + 36);
    if (!v81)
      goto LABEL_245;
    v82 = *(unsigned int *)(v3 + 40);
    v83 = *(unsigned int *)(v3 + 44);
    v84 = *(unsigned int *)(v2 + 40);
    v85 = *(unsigned int *)(v2 + 44);
    v86 = *(unsigned __int8 **)(v3 + 24);
    if (*(_BYTE *)(v3 + 48) && v86)
    {
      v87 = *(_QWORD *)(v3 + 8);
      v88 = *(std::__shared_weak_count **)(v3 + 16);
      if (v88)
      {
        v89 = (unint64_t *)&v88->__shared_owners_;
        do
          v90 = __ldxr(v89);
        while (__stxr(v90 + 1, v89));
        do
          v91 = __ldaxr(v89);
        while (__stlxr(v91 - 1, v89));
        if (!v91)
        {
          ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
          std::__shared_weak_count::__release_weak(v88);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v87 + 88))(v87, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v86 = *(unsigned __int8 **)(v3 + 24);
    }
    v42 = *(float **)(v2 + 24);
    if (*(_BYTE *)(v2 + 48) && v42)
    {
      v92 = *(_QWORD *)(v2 + 8);
      v93 = *(std::__shared_weak_count **)(v2 + 16);
      if (v93)
      {
        v94 = (unint64_t *)&v93->__shared_owners_;
        do
          v95 = __ldxr(v94);
        while (__stxr(v95 + 1, v94));
        do
          v96 = __ldaxr(v94);
        while (__stlxr(v96 - 1, v94));
        if (!v96)
        {
          ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
          std::__shared_weak_count::__release_weak(v93);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v92 + 88))(v92, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v42 = *(float **)(v2 + 24);
    }
    v97 = (int)v6;
    v98 = v80 - 1;
    v99 = v81 - 1;
    if (v81 != 1)
    {
      if (v80 == 1)
      {
        do
        {
          v163 = *v86;
          v164 = (float)v163;
          if (v163 < v97)
            v164 = v6;
          *v42 = v164;
          v86 += v83;
          v42 += v85;
          --v99;
        }
        while (v99);
        goto LABEL_241;
      }
      v100 = 0;
      do
      {
        v101 = v42;
        v102 = v80 - 1;
        v103 = v86;
        do
        {
          v104 = *v103;
          v105 = (float)v104;
          if (v104 < v97)
            v105 = v6;
          *v101 = v105;
          v103 += v82;
          v101 += v84;
          --v102;
        }
        while (v102);
        v106 = *v103;
        v107 = (float)v106;
        if (v106 < v97)
          v107 = v6;
        *v101 = v107;
        v86 += v83;
        v42 += v85;
        ++v100;
      }
      while (v100 != v99);
    }
    if (v80 != 1)
    {
      do
      {
        v108 = *v86;
        v109 = (float)v108;
        if (v108 < v97)
          v109 = v6;
        *v42 = v109;
        v86 += v82;
        v42 += v84;
        --v98;
      }
      while (v98);
    }
LABEL_241:
    v165 = *v86;
    v161 = (float)v165;
    v162 = v165 >= v97;
LABEL_242:
    if (!v162)
      v161 = v6;
LABEL_244:
    *v42 = v161;
    goto LABEL_245;
  }
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = -3.40282347e38;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 3.40282347e38;
  if (v4 < -3.40282347e38)
    v4 = -3.40282347e38;
  v6 = v4;
  if (v5 <= 3.40282347e38)
    v7 = v5;
  else
    v7 = 3.40282347e38;
  v8 = v7;
  if (v6 < 0.0 || v8 > 255.0)
    goto LABEL_36;
LABEL_15:
  v10 = *(_QWORD *)(v3 + 8);
  if (!v10)
    goto LABEL_39;
  v11 = *(std::__shared_weak_count **)(v3 + 16);
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    v10 = *(_QWORD *)(v3 + 8);
    v15 = *(std::__shared_weak_count **)(v3 + 16);
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      do
        v18 = __ldaxr(v16);
      while (__stlxr(v18 - 1, v16));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_BYTE *)(v3 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v10 + 96))(&v171, v10, 0);
    v19 = *(_QWORD *)(v2 + 8);
    if (!v19)
      goto LABEL_55;
  }
  else
  {
LABEL_39:
    v171 = 0;
    v19 = *(_QWORD *)(v2 + 8);
    if (!v19)
      goto LABEL_55;
  }
  v22 = *(std::__shared_weak_count **)(v2 + 16);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
    v19 = *(_QWORD *)(v2 + 8);
    v26 = *(std::__shared_weak_count **)(v2 + 16);
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
      do
        v29 = __ldaxr(v27);
      while (__stlxr(v29 - 1, v27));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
  }
  if (!*(_BYTE *)(v2 + 49))
  {
LABEL_55:
    v170 = 0;
    v30 = *(_DWORD *)(v3 + 32);
    if (!v30)
      goto LABEL_245;
    goto LABEL_56;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v19 + 96))(&v170, v19, 1);
  v30 = *(_DWORD *)(v3 + 32);
  if (!v30)
    goto LABEL_245;
LABEL_56:
  v31 = *(_DWORD *)(v3 + 36);
  if (v31)
  {
    v32 = *(unsigned int *)(v3 + 40);
    v33 = *(unsigned int *)(v3 + 44);
    v34 = *(unsigned int *)(v2 + 40);
    v35 = *(unsigned int *)(v2 + 44);
    v36 = *(unsigned __int8 **)(v3 + 24);
    if (*(_BYTE *)(v3 + 48) && v36)
    {
      v37 = *(_QWORD *)(v3 + 8);
      v38 = *(std::__shared_weak_count **)(v3 + 16);
      if (v38)
      {
        v39 = (unint64_t *)&v38->__shared_owners_;
        do
          v40 = __ldxr(v39);
        while (__stxr(v40 + 1, v39));
        do
          v41 = __ldaxr(v39);
        while (__stlxr(v41 - 1, v39));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v37 + 88))(v37, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v36 = *(unsigned __int8 **)(v3 + 24);
    }
    v42 = *(float **)(v2 + 24);
    if (*(_BYTE *)(v2 + 48) && v42)
    {
      v43 = *(_QWORD *)(v2 + 8);
      v44 = *(std::__shared_weak_count **)(v2 + 16);
      if (v44)
      {
        v45 = (unint64_t *)&v44->__shared_owners_;
        do
          v46 = __ldxr(v45);
        while (__stxr(v46 + 1, v45));
        do
          v47 = __ldaxr(v45);
        while (__stlxr(v47 - 1, v45));
        if (!v47)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v43 + 88))(v43, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v42 = *(float **)(v2 + 24);
    }
    v48 = (int)v6;
    v49 = (int)v8;
    v50 = v30 - 1;
    v51 = v31 - 1;
    if (v31 != 1)
    {
      if (v30 == 1)
      {
        do
        {
          v158 = *v36;
          v159 = (float)v158;
          if (v158 > v49)
            v159 = v8;
          if (v158 < v48)
            v159 = v6;
          *v42 = v159;
          v36 += v33;
          v42 += v35;
          --v51;
        }
        while (v51);
        goto LABEL_235;
      }
      v52 = 0;
      do
      {
        v53 = v42;
        v54 = v30 - 1;
        v55 = v36;
        do
        {
          v56 = *v55;
          v57 = (float)v56;
          if (v56 > v49)
            v57 = v8;
          if (v56 < v48)
            v57 = v6;
          *v53 = v57;
          v55 += v32;
          v53 += v34;
          --v54;
        }
        while (v54);
        v58 = *v55;
        v59 = (float)v58;
        if (v58 > v49)
          v59 = v8;
        if (v58 < v48)
          v59 = v6;
        *v53 = v59;
        v36 += v33;
        v42 += v35;
        ++v52;
      }
      while (v52 != v51);
    }
    if (v30 != 1)
    {
      do
      {
        v60 = *v36;
        v61 = (float)v60;
        if (v60 > v49)
          v61 = v8;
        if (v60 < v48)
          v61 = v6;
        *v42 = v61;
        v36 += v32;
        v42 += v34;
        --v50;
      }
      while (v50);
    }
LABEL_235:
    v160 = *v36;
    v161 = (float)v160;
    if (v160 > v49)
      v161 = v8;
    v162 = v160 >= v48;
    goto LABEL_242;
  }
LABEL_245:
  v166 = v170;
  v170 = 0;
  if (v166)
    (*(void (**)(uint64_t))(*(_QWORD *)v166 + 8))(v166);
  result = v171;
  v171 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243343D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224334468(uint64_t **a1, float a2)
{
  return sub_224334474(**a1, (*a1)[1], a2);
}

uint64_t sub_224334474(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  float *v44;
  int v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_70;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v50 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v50, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (!v14)
  {
LABEL_33:
    v49 = 0;
    v23 = *(_DWORD *)(a1 + 32);
    if (!v23)
      goto LABEL_64;
LABEL_34:
    v24 = *(_DWORD *)(a1 + 36);
    if (!v24)
      goto LABEL_64;
    v25 = *(unsigned int *)(a1 + 40);
    v26 = *(unsigned int *)(a1 + 44);
    v27 = *(unsigned int *)(a2 + 40);
    v28 = *(unsigned int *)(a2 + 44);
    v29 = *(_BYTE **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v29)
    {
      v30 = *(_QWORD *)(a1 + 8);
      v31 = *(std::__shared_weak_count **)(a1 + 16);
      if (v31)
      {
        v32 = (unint64_t *)&v31->__shared_owners_;
        do
          v33 = __ldxr(v32);
        while (__stxr(v33 + 1, v32));
        do
          v34 = __ldaxr(v32);
        while (__stlxr(v34 - 1, v32));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v29 = *(_BYTE **)(a1 + 24);
    }
    v35 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v35)
    {
      v36 = *(_QWORD *)(a2 + 8);
      v37 = *(std::__shared_weak_count **)(a2 + 16);
      if (v37)
      {
        v38 = (unint64_t *)&v37->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v35 = *(float **)(a2 + 24);
    }
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        do
        {
          LOBYTE(a3) = *v29;
          a3 = (float)LODWORD(a3);
          *v35 = a3;
          v29 += v26;
          v35 += v28;
          --v42;
        }
        while (v42);
LABEL_63:
        LOBYTE(a3) = *v29;
        *v35 = (float)LODWORD(a3);
        goto LABEL_64;
      }
      v43 = 0;
      do
      {
        v44 = v35;
        v45 = v23 - 1;
        v46 = v29;
        do
        {
          LOBYTE(a3) = *v46;
          a3 = (float)LODWORD(a3);
          *v44 = a3;
          v46 += v25;
          v44 += v27;
          --v45;
        }
        while (v45);
        LOBYTE(a3) = *v46;
        a3 = (float)LODWORD(a3);
        *v44 = a3;
        v29 += v26;
        v35 += v28;
        ++v43;
      }
      while (v43 != v42);
    }
    if (v23 != 1)
    {
      do
      {
        LOBYTE(a3) = *v29;
        a3 = (float)LODWORD(a3);
        *v35 = a3;
        v29 += v25;
        v35 += v27;
        --v41;
      }
      while (v41);
    }
    goto LABEL_63;
  }
LABEL_18:
  v15 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v15)
    goto LABEL_29;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldxr(v16);
  while (__stxr(v17 + 1, v16));
  do
    v18 = __ldaxr(v16);
  while (__stlxr(v18 - 1, v16));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  v14 = *(_QWORD *)(a2 + 8);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_29;
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  else
  {
LABEL_29:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v49, v14, 1);
  v23 = *(_DWORD *)(a1 + 32);
  if (v23)
    goto LABEL_34;
LABEL_64:
  v47 = v49;
  v49 = 0;
  if (v47)
    (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  result = v50;
  v50 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433484C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243348B0(char *__s, unsigned int *a2, uint64_t a3, unsigned int *a4, uint64_t a5)
{
  uint64_t result;
  char v10;
  char v11;
  _DWORD v12[6];
  int v13;
  _QWORD **v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v13 = 0;
  sub_2232C8A68(v12, __s);
  sub_2231A0B14((uint64_t)&v11, (uint64_t)v12, a2);
  v14 = (_QWORD **)v12;
  v15 = a3;
  v16 = v12;
  v17 = a3;
  v18 = a3;
  if (v13 == -1)
    sub_22316DD70();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24EC73870[v13])(&v19, v12);
  sub_2231A0B14((uint64_t)&v10, (uint64_t)v12, a4);
  v14 = (_QWORD **)v12;
  v15 = a5;
  v16 = v12;
  v17 = a5;
  v18 = a5;
  if (v13 == -1)
    sub_22316DD70();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24EC73888[v13])(&v19, v12);
  if (v13 == -1)
    sub_22316DD70();
  v14 = &v19;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24EC73810[v13])(&v14, v12);
  if (v13 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24EC737F8[v13])(&v14, v12);
  return result;
}

void sub_224334A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224334A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224334A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224334A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224334A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224334A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224334A84(int a1)
{
  __asm { BR              X10 }
}

void sub_224334AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16, void *__dst, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,__int16 a24,uint64_t a25,void *__dsta,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,std::string *a52)
{
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *p_shared_owners;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int16 v73;
  unint64_t *v74;
  unint64_t v75;
  uint64_t (**v76)();
  uint64_t v77;
  std::__shared_weak_count *v78;
  uint64_t (**v79)();
  uint64_t v80;
  std::__shared_weak_count *v81;
  unsigned int v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  __int16 v87;

  sub_224336BA4((uint64_t)&v76, *(_QWORD *)v53, *(_DWORD *)(v53 + 16), *(_QWORD *)v53 + 32);
  v79 = &off_24EC24788;
  sub_22432F240((uint64_t)&v80, (uint64_t)&v76);
  v55 = v78;
  if (v78)
  {
    p_shared_owners = (unint64_t *)&v78->__shared_owners_;
    do
      v57 = __ldaxr(p_shared_owners);
    while (__stlxr(v57 - 1, p_shared_owners));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
      std::__shared_weak_count::__release_weak(v55);
    }
  }
  v59 = *(_QWORD *)v53;
  v58 = *(_QWORD *)(v53 + 8);
  v76 = &off_24EC22138;
  sub_2236B487C((uint64_t)&v79, &v77);
  *(_QWORD *)(v54 - 112) = v59;
  *(_QWORD *)(v54 - 104) = &v76;
  v60 = *(unsigned int *)(v58 + 64);
  if ((_DWORD)v60 == -1)
    sub_22316DD70();
  *(_QWORD *)(v54 - 96) = v54 - 112;
  ((void (*)(uint64_t, uint64_t))off_24EC738A0[v60])(v54 - 96, v58 + 8);
  v61 = v78;
  if (!v78)
    goto LABEL_11;
  v62 = (unint64_t *)&v78->__shared_owners_;
  do
    v63 = __ldaxr(v62);
  while (__stlxr(v63 - 1, v62));
  if (!v63)
  {
    ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
    std::__shared_weak_count::__release_weak(v61);
    *(_QWORD *)v52 = &off_24EC1F958;
    v65 = v80;
    v64 = v81;
    if (v81)
    {
LABEL_12:
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      v68 = v81;
      goto LABEL_17;
    }
  }
  else
  {
LABEL_11:
    *(_QWORD *)v52 = &off_24EC1F958;
    v65 = v80;
    v64 = v81;
    if (v81)
      goto LABEL_12;
  }
  v68 = 0;
LABEL_17:
  v69 = v86;
  if (v83)
    v70 = v82 | 0x100000000;
  else
    v70 = 0;
  v71 = v85;
  v72 = v84;
  v73 = v87;
  *(_QWORD *)(v52 + 8) = v65;
  *(_QWORD *)(v52 + 16) = v64;
  *(_QWORD *)(v52 + 24) = v70;
  *(_QWORD *)(v52 + 32) = v71;
  *(_DWORD *)(v52 + 40) = v69;
  *(_QWORD *)(v52 + 48) = v72;
  *(_DWORD *)(v52 + 56) = 1;
  *(_WORD *)(v52 + 60) = v73;
  if (v68)
  {
    v74 = (unint64_t *)&v68->__shared_owners_;
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
      ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
      std::__shared_weak_count::__release_weak(v68);
    }
  }
}

void sub_22433692C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  if (a12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
    v27 = a11;
    if (!a11)
    {
LABEL_3:
      v28 = *(_QWORD *)(v25 - 96);
      *(_QWORD *)(v25 - 96) = 0;
      if (!v28)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v27 = a11;
    if (!a11)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
  v28 = *(_QWORD *)(v25 - 96);
  *(_QWORD *)(v25 - 96) = 0;
  if (!v28)
  {
LABEL_4:
    sub_223167354(a10);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_224336BA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(2);
  v34 = &off_24EC5ABE8;
  sub_22432F8EC((uint64_t)&v35, (uint64_t)v45);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = 2 * v41;
  if (v38)
    v26 = (2 * v37) | 0x100000000;
  else
    v26 = 0;
  v27 = v40;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v26;
  *(_QWORD *)(a1 + 32) = v27;
  *(_DWORD *)(a1 + 40) = v25;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 2;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_224336E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  sub_22319B358(v14 - 88);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224336E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224336E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_224336E58(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t result;
  double v16;
  double v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _WORD *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  double v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int v67;
  unint64_t v68;
  int v69;
  uint64_t v70;

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    v6 = 65535.0;
    if (*(double *)(a2 + 8) <= 65535.0)
      v6 = *(double *)(a2 + 8);
    v7 = v5 | ((int)v6 << 16);
    v9 = *v3;
    v8 = v3[1];
    v10 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
    {
LABEL_7:
      v11 = *(double *)(a2 + 24);
      if (v11 < 0.0)
        v11 = 0.0;
      v10 = (int)v11;
      v12 = 255.0;
      if (*(double *)(a2 + 32) <= 255.0)
        v12 = *(double *)(a2 + 32);
      v13 = (int)v12;
      v14 = HIWORD(v7);
      if (v10 != (unsigned __int16)v7)
        goto LABEL_17;
      goto LABEL_15;
    }
  }
  else
  {
    v7 = -65536;
    v9 = *v3;
    v8 = v3[1];
    v10 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
  }
  v13 = 255;
  v14 = HIWORD(v7);
  if (v10 != (unsigned __int16)v7)
    goto LABEL_17;
LABEL_15:
  if (v14 == v13)
    return sub_224337418(v9, v8);
LABEL_17:
  v62 = (double)(unsigned __int16)v7;
  v16 = 1.0 / ((double)v14 - v62);
  v60 = (double)v10;
  v61 = v16;
  v17 = (double)v13;
  a3.n128_f64[0] = (double)v13 - (double)v10;
  v59 = a3.n128_f64[0];
  v58[0] = &v62;
  v58[1] = &v61;
  v57[0] = &v60;
  v57[1] = &v59;
  v56[0] = v58;
  v56[1] = v57;
  v18 = *(_QWORD *)(v9 + 8);
  if (!v18)
    goto LABEL_33;
  v19 = *(std::__shared_weak_count **)(v9 + 16);
  if (v19)
  {
    p_shared_owners = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(p_shared_owners);
    while (__stxr(v21 + 1, p_shared_owners));
    do
      v22 = __ldaxr(p_shared_owners);
    while (__stlxr(v22 - 1, p_shared_owners));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(v9 + 8);
    v23 = *(std::__shared_weak_count **)(v9 + 16);
    if (v23)
    {
      v24 = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
      do
        v26 = __ldaxr(v24);
      while (__stlxr(v26 - 1, v24));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
  }
  if (*(_BYTE *)(v9 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v18 + 96))(&v64, v18, 0);
    v27 = *(_QWORD *)(v8 + 8);
    if (!v27)
      goto LABEL_49;
  }
  else
  {
LABEL_33:
    v64 = 0;
    v27 = *(_QWORD *)(v8 + 8);
    if (!v27)
      goto LABEL_49;
  }
  v28 = *(std::__shared_weak_count **)(v8 + 16);
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
    v27 = *(_QWORD *)(v8 + 8);
    v32 = *(std::__shared_weak_count **)(v8 + 16);
    if (v32)
    {
      v33 = (unint64_t *)&v32->__shared_owners_;
      do
        v34 = __ldxr(v33);
      while (__stxr(v34 + 1, v33));
      do
        v35 = __ldaxr(v33);
      while (__stlxr(v35 - 1, v33));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
  }
  if (*(_BYTE *)(v8 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v27 + 96))(&v63, v27, 1);
    v65 = v56;
    v36 = *(_DWORD *)(v9 + 32);
    if (v36)
      goto LABEL_50;
    goto LABEL_73;
  }
LABEL_49:
  v63 = 0;
  v65 = v56;
  v36 = *(_DWORD *)(v9 + 32);
  if (v36)
  {
LABEL_50:
    v37 = *(_DWORD *)(v9 + 36);
    if (v37)
    {
      v67 = v36 - 1;
      v38 = *(unsigned int *)(v9 + 44);
      v39 = *(unsigned int *)(v8 + 44);
      v68 = *(unsigned int *)(v9 + 40) | ((unint64_t)*(unsigned int *)(v8 + 40) << 32);
      v66 = 0;
      v69 = v37 - 1;
      v70 = v38 | (v39 << 32);
      v40 = *(_WORD **)(v9 + 24);
      if (*(_BYTE *)(v9 + 48) && v40)
      {
        v41 = *(_QWORD *)(v9 + 8);
        v42 = *(std::__shared_weak_count **)(v9 + 16);
        if (v42)
        {
          v43 = (unint64_t *)&v42->__shared_owners_;
          do
            v44 = __ldxr(v43);
          while (__stxr(v44 + 1, v43));
          do
            v45 = __ldaxr(v43);
          while (__stlxr(v45 - 1, v43));
          if (!v45)
          {
            ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
            std::__shared_weak_count::__release_weak(v42);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v41 + 88))(v41, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v40 = *(_WORD **)(v9 + 24);
      }
      v46 = *(_BYTE **)(v8 + 24);
      if (*(_BYTE *)(v8 + 48) && v46)
      {
        v47 = *(_QWORD *)(v8 + 8);
        v48 = *(std::__shared_weak_count **)(v8 + 16);
        if (v48)
        {
          v49 = (unint64_t *)&v48->__shared_owners_;
          do
            v50 = __ldxr(v49);
          while (__stxr(v50 + 1, v49));
          do
            v51 = __ldaxr(v49);
          while (__stlxr(v51 - 1, v49));
          if (!v51)
          {
            ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
            std::__shared_weak_count::__release_weak(v48);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v47 + 88))(v47, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v46 = *(_BYTE **)(v8 + 24);
      }
      v52 = v69;
      if (v69)
      {
        v53 = HIDWORD(v70);
        v54 = 2 * v70;
        do
        {
          a3.n128_f64[0] = sub_22433783C(&v66, (uint64_t)&v65, v40, v46, a3.n128_f64[0], v17, v16);
          v46 += v53;
          v40 = (_WORD *)((char *)v40 + v54);
          --v52;
        }
        while (v52);
      }
      a3.n128_f64[0] = sub_22433783C(&v66, (uint64_t)&v65, v40, v46, a3.n128_f64[0], v17, v16);
    }
  }
LABEL_73:
  v55 = v63;
  v63 = 0;
  if (v55)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v55 + 8))(v55, a3);
  result = v64;
  v64 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2243372EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (!a21)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a21 + 8))(a21);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224337350(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  int v8;
  double v9;
  unsigned __int16 *v11[4];
  int v12;
  char v13;
  char v14;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 255.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 255.0)
      v9 = v7;
    else
      v9 = 255.0;
    v14 = v8;
    v13 = (int)v9;
    HIWORD(v12) = v8;
    LOWORD(v12) = (int)v9;
  }
  else
  {
    v14 = 0;
    v13 = -1;
    v12 = 255;
  }
  v11[0] = (unsigned __int16 *)&v12 + 1;
  v11[1] = (unsigned __int16 *)&v14;
  v11[2] = (unsigned __int16 *)&v12;
  v11[3] = (unsigned __int16 *)&v13;
  return sub_224337910(v4, v5, v11);
}

uint64_t sub_22433740C(uint64_t **a1)
{
  return sub_224337418(**a1, (*a1)[1]);
}

uint64_t sub_224337418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  _BYTE *v44;
  int v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_70;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v50 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v49, v13, 1);
    v22 = *(_DWORD *)(a1 + 32);
    if (!v22)
      goto LABEL_64;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v50, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v49 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (!v22)
    goto LABEL_64;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v25 = *(unsigned int *)(a1 + 40);
    v24 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 40);
    v27 = *(unsigned int *)(a2 + 44);
    v28 = *(_BYTE **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(_BYTE **)(a1 + 24);
    }
    v34 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(_BYTE **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = 2 * v25;
    v42 = v23 - 1;
    if (v23 != 1)
    {
      if (v22 == 1)
      {
        do
        {
          *v34 = *v28;
          v34 += v27;
          v28 += 2 * v24;
          --v42;
        }
        while (v42);
      }
      else
      {
        v43 = 0;
        do
        {
          v44 = v28;
          v45 = v22 - 1;
          v46 = v34;
          do
          {
            *v46 = *v44;
            v46 += v26;
            v44 += v41;
            --v45;
          }
          while (v45);
          *v46 = *v44;
          v28 += 2 * v24;
          v34 += v27;
          ++v43;
        }
        while (v43 != v42);
      }
    }
    if (v22 != 1)
    {
      do
      {
        *v34 = *v28;
        v34 += v26;
        v28 += v41;
        --v40;
      }
      while (v40);
    }
    *v34 = *v28;
  }
LABEL_64:
  v47 = v49;
  v49 = 0;
  if (v47)
    (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  result = v50;
  v50 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243377D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_22433783C(_DWORD *a1, uint64_t a2, _WORD *a3, _BYTE *a4, double a5, double a6, double a7)
{
  unsigned int v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double result;

  if (a1[2])
  {
    v7 = 0;
    a5 = 0.0;
    do
    {
      LOWORD(a7) = *a3;
      v8 = ((double)*(unint64_t *)&a7 - ****(double ****)a2) * **(double **)(**(_QWORD **)a2 + 8);
      v9 = fmax(v8, 0.0);
      if (v8 <= 1.0)
        v10 = v9;
      else
        v10 = 1.0;
      a7 = ***(double ***)(*(_QWORD *)a2 + 8) + v10 * **(double **)(*(_QWORD *)(*(_QWORD *)a2 + 8) + 8);
      *a4 = llround(a7);
      a3 += a1[3];
      a4 += a1[4];
      ++v7;
    }
    while (v7 < a1[2]);
  }
  LOWORD(a5) = *a3;
  v11 = ((double)*(unint64_t *)&a5 - ****(double ****)a2) * **(double **)(**(_QWORD **)a2 + 8);
  v12 = fmax(v11, 0.0);
  if (v11 <= 1.0)
    v13 = v12;
  else
    v13 = 1.0;
  result = ***(double ***)(*(_QWORD *)a2 + 8) + v13 * **(double **)(*(_QWORD *)(*(_QWORD *)a2 + 8) + 8);
  *a4 = llround(result);
  return result;
}

uint64_t sub_224337910(uint64_t a1, uint64_t a2, unsigned __int16 **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  unsigned __int16 *v46;
  unsigned __int16 *v47;
  int v48;
  _BYTE *v49;
  unsigned __int16 *v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned __int16 *v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_18;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (v10)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_15;
LABEL_18:
    v61 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v61, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (!v15)
  {
LABEL_35:
    v60 = 0;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_91;
    goto LABEL_36;
  }
LABEL_19:
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_31;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (v19)
  {
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_31;
  }
  v21 = (unint64_t *)&v20->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (v23)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
  std::__shared_weak_count::__release_weak(v20);
  if (!*(_BYTE *)(a2 + 49))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v60, v15, 1);
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_91;
LABEL_36:
  v25 = *(_DWORD *)(a1 + 36);
  if (!v25)
    goto LABEL_91;
  v26 = *(unsigned int *)(a1 + 40);
  v59 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 40);
  v28 = *(unsigned int *)(a2 + 44);
  v29 = *(unsigned __int16 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 48) && v29)
  {
    v30 = *(_QWORD *)(a1 + 8);
    v31 = *(std::__shared_weak_count **)(a1 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v29 = *(unsigned __int16 **)(a1 + 24);
  }
  v35 = *(_BYTE **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v35)
  {
    v36 = *(_QWORD *)(a2 + 8);
    v37 = *(std::__shared_weak_count **)(a2 + 16);
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
      do
        v40 = __ldaxr(v38);
      while (__stlxr(v40 - 1, v38));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v35 = *(_BYTE **)(a2 + 24);
  }
  v41 = v24 - 1;
  v42 = 2 * v26;
  v43 = v25 - 1;
  if (v25 != 1)
  {
    v44 = 2 * v59;
    if (v24 != 1)
    {
      v45 = 0;
      while (1)
      {
        v47 = v29;
        v48 = v24 - 1;
        v49 = v35;
        do
        {
          while (1)
          {
            v51 = *v47;
            if (v51 >= **a3)
              break;
            v50 = a3[1];
LABEL_62:
            *v49 = *(_BYTE *)v50;
            v49 += v27;
            v47 = (unsigned __int16 *)((char *)v47 + v42);
            if (!--v48)
              goto LABEL_67;
          }
          if (v51 > *a3[2])
          {
            v50 = a3[3];
            goto LABEL_62;
          }
          *v49 = v51;
          v49 += v27;
          v47 = (unsigned __int16 *)((char *)v47 + v42);
          --v48;
        }
        while (v48);
LABEL_67:
        v52 = *v47;
        if (v52 < **a3)
        {
          v46 = a3[1];
          goto LABEL_59;
        }
        if (v52 <= *a3[2])
        {
          *v49 = v52;
          v29 = (unsigned __int16 *)((char *)v29 + v44);
          v35 += v28;
          if (++v45 == v43)
            goto LABEL_78;
          continue;
        }
        v46 = a3[3];
LABEL_59:
        *v49 = *(_BYTE *)v46;
        v29 = (unsigned __int16 *)((char *)v29 + v44);
        v35 += v28;
        if (++v45 == v43)
          goto LABEL_78;
      }
    }
    do
    {
      while (1)
      {
        while (1)
        {
          v53 = *v29;
          if (v53 >= **a3)
            break;
          *v35 = *(_BYTE *)a3[1];
          v35 += v28;
          v29 = (unsigned __int16 *)((char *)v29 + v44);
          if (!--v43)
            goto LABEL_78;
        }
        if (v53 > *a3[2])
          break;
        *v35 = v53;
        v35 += v28;
        v29 = (unsigned __int16 *)((char *)v29 + v44);
        if (!--v43)
          goto LABEL_78;
      }
      *v35 = *(_BYTE *)a3[3];
      v35 += v28;
      v29 = (unsigned __int16 *)((char *)v29 + v44);
      --v43;
    }
    while (v43);
  }
LABEL_78:
  if (v24 != 1)
  {
    do
    {
      while (1)
      {
        v55 = *v29;
        if (v55 >= **a3)
          break;
        v54 = a3[1];
LABEL_81:
        *v35 = *(_BYTE *)v54;
        v35 += v27;
        v29 = (unsigned __int16 *)((char *)v29 + v42);
        if (!--v41)
          goto LABEL_86;
      }
      if (v55 > *a3[2])
      {
        v54 = a3[3];
        goto LABEL_81;
      }
      *v35 = v55;
      v35 += v27;
      v29 = (unsigned __int16 *)((char *)v29 + v42);
      --v41;
    }
    while (v41);
  }
LABEL_86:
  v56 = *v29;
  if (v56 >= **a3)
  {
    if (v56 > *a3[2])
      LOBYTE(v56) = *(_BYTE *)a3[3];
  }
  else
  {
    LOBYTE(v56) = *(_BYTE *)a3[1];
  }
  *v35 = v56;
LABEL_91:
  v57 = v60;
  v60 = 0;
  if (v57)
    (*(void (**)(uint64_t))(*(_QWORD *)v57 + 8))(v57);
  result = v61;
  v61 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224337E74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224337ED8(uint64_t **a1, uint64_t a2, __n128 a3, __n128 _Q1, double a5, double a6, double a7, double a8, double _D6)
{
  uint64_t *v9;
  double v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  unsigned __int16 v20;
  unsigned int v22;
  unsigned int v23;
  unsigned int v27;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t result;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _WORD *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  _WORD *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  double v64;
  double v67;
  double v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  _WORD *v74;
  _WORD *v75;
  int v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v9 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v10 = *(double *)a2;
    _Q1.n128_u64[0] = *(_QWORD *)(a2 + 8);
    if (*(double *)a2 < 0.0)
      v10 = 0.0;
    v11 = (int)v10;
    a3.n128_u64[0] = 0x40EFFFE000000000;
    if (_Q1.n128_f64[0] <= 65535.0)
      a3.n128_u64[0] = *(_QWORD *)(a2 + 8);
    v12 = v11 | ((int)a3.n128_f64[0] << 16);
    v14 = *v9;
    v13 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v22 = 1006632960;
    goto LABEL_14;
  }
  v12 = -65536;
  v14 = *v9;
  v13 = v9[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v15 = -65504.0;
  _Q1.n128_u64[0] = *(_QWORD *)(a2 + 24);
  if (_Q1.n128_f64[0] >= -65504.0)
    v15 = *(double *)(a2 + 24);
  _S0 = v15;
  __asm { FCVT            H0, S0 }
  v20 = LOWORD(_S0);
  a3.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a2 + 32) <= 65504.0)
    a3.n128_u64[0] = *(_QWORD *)(a2 + 32);
  _S0 = a3.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v22 = v20 | (LOWORD(_S0) << 16);
LABEL_14:
  v23 = (unsigned __int16)v12;
  _H8 = v22;
  _S9 = HIWORD(v22);
  __asm { FCVT            S1, H8 }
  v27 = HIWORD(v12);
  a3.n128_f32[0] = (float)HIWORD(v12);
  __asm { FCVT            S1, H9 }
  _ZF = _ZF && _Q1.n128_f32[0] == a3.n128_f32[0];
  if (_ZF)
    return sub_2243392A4(v14, v13, a3.n128_f32[0]);
  v29 = *(_QWORD *)(v14 + 8);
  if (!v29)
    goto LABEL_35;
  v30 = *(std::__shared_weak_count **)(v14 + 16);
  if (!v30)
    goto LABEL_105;
  p_shared_owners = (unint64_t *)&v30->__shared_owners_;
  do
    v32 = __ldxr(p_shared_owners);
  while (__stxr(v32 + 1, p_shared_owners));
  do
    v33 = __ldaxr(p_shared_owners);
  while (__stlxr(v33 - 1, p_shared_owners));
  if (!v33)
  {
    ((void (*)(std::__shared_weak_count *, __n128, __n128))v30->__on_zero_shared)(v30, a3, _Q1);
    std::__shared_weak_count::__release_weak(v30);
  }
  v29 = *(_QWORD *)(v14 + 8);
  v34 = *(std::__shared_weak_count **)(v14 + 16);
  if (!v34)
    goto LABEL_105;
  v35 = (unint64_t *)&v34->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_105:
    if (*(_BYTE *)(v14 + 49))
      goto LABEL_31;
LABEL_35:
    v97 = 0;
    v38 = *(_QWORD *)(v13 + 8);
    if (!v38)
      goto LABEL_51;
LABEL_36:
    v40 = *(std::__shared_weak_count **)(v13 + 16);
    if (!v40)
      goto LABEL_47;
    v41 = (unint64_t *)&v40->__shared_owners_;
    do
      v42 = __ldxr(v41);
    while (__stxr(v42 + 1, v41));
    do
      v43 = __ldaxr(v41);
    while (__stlxr(v43 - 1, v41));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
    v38 = *(_QWORD *)(v13 + 8);
    v44 = *(std::__shared_weak_count **)(v13 + 16);
    if (!v44)
      goto LABEL_47;
    v45 = (unint64_t *)&v44->__shared_owners_;
    do
      v46 = __ldxr(v45);
    while (__stxr(v46 + 1, v45));
    do
      v47 = __ldaxr(v45);
    while (__stlxr(v47 - 1, v45));
    if (!v47)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
      if (!*(_BYTE *)(v13 + 49))
        goto LABEL_51;
    }
    else
    {
LABEL_47:
      if (!*(_BYTE *)(v13 + 49))
        goto LABEL_51;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v38 + 96))(&v96, v38, 1);
    v48 = *(_DWORD *)(v14 + 32);
    if (v48)
      goto LABEL_52;
    goto LABEL_99;
  }
  ((void (*)(std::__shared_weak_count *, __n128, __n128))v34->__on_zero_shared)(v34, a3, _Q1);
  std::__shared_weak_count::__release_weak(v34);
  if (!*(_BYTE *)(v14 + 49))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, __n128, __n128))(*(_QWORD *)v29 + 96))(&v97, v29, 0, a3, _Q1);
  v38 = *(_QWORD *)(v13 + 8);
  if (v38)
    goto LABEL_36;
LABEL_51:
  v96 = 0;
  v48 = *(_DWORD *)(v14 + 32);
  if (v48)
  {
LABEL_52:
    v49 = *(_DWORD *)(v14 + 36);
    if (v49)
    {
      v50 = *(unsigned int *)(v14 + 40);
      v51 = *(unsigned int *)(v13 + 40);
      v94 = *(unsigned int *)(v14 + 44);
      v95 = *(unsigned int *)(v13 + 44);
      v52 = *(_WORD **)(v14 + 24);
      if (*(_BYTE *)(v14 + 48) && v52)
      {
        v53 = *(_QWORD *)(v14 + 8);
        v54 = *(std::__shared_weak_count **)(v14 + 16);
        if (v54)
        {
          v55 = (unint64_t *)&v54->__shared_owners_;
          do
            v56 = __ldxr(v55);
          while (__stxr(v56 + 1, v55));
          do
            v57 = __ldaxr(v55);
          while (__stlxr(v57 - 1, v55));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v53 + 88))(v53, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v52 = *(_WORD **)(v14 + 24);
      }
      v58 = *(_WORD **)(v13 + 24);
      if (*(_BYTE *)(v13 + 48) && v58)
      {
        v59 = *(_QWORD *)(v13 + 8);
        v60 = *(std::__shared_weak_count **)(v13 + 16);
        if (v60)
        {
          v61 = (unint64_t *)&v60->__shared_owners_;
          do
            v62 = __ldxr(v61);
          while (__stxr(v62 + 1, v61));
          do
            v63 = __ldaxr(v61);
          while (__stlxr(v63 - 1, v61));
          if (!v63)
          {
            ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
            std::__shared_weak_count::__release_weak(v60);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v59 + 88))(v59, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v58 = *(_WORD **)(v13 + 24);
      }
      v64 = (double)v23;
      __asm
      {
        FCVT            D0, H8
        FCVT            D4, H9
      }
      v67 = 1.0 / ((double)v27 - (double)v23);
      v68 = _D4 - _D0;
      v69 = v48 - 1;
      v70 = 2 * v50;
      v71 = 2 * v51;
      v72 = v49 - 1;
      if (v49 != 1)
      {
        if (v48 == 1)
        {
          _D4 = 0.0;
          do
          {
            LOWORD(_D6) = *v52;
            v83 = v67 * ((double)*(unint64_t *)&_D6 - v64);
            v84 = fmax(v83, 0.0);
            if (v83 <= 1.0)
              v85 = v84;
            else
              v85 = 1.0;
            _D6 = v68 * v85 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            *v58 = LOWORD(_D6);
            v52 += v94;
            v58 += v95;
            --v72;
          }
          while (v72);
        }
        else
        {
          v73 = 0;
          _D4 = 0.0;
          do
          {
            v74 = v58;
            v75 = v52;
            v76 = v48 - 1;
            do
            {
              LOWORD(_D6) = *v75;
              v77 = v67 * ((double)*(unint64_t *)&_D6 - v64);
              v78 = fmax(v77, 0.0);
              if (v77 <= 1.0)
                v79 = v78;
              else
                v79 = 1.0;
              _D6 = v68 * v79 + _D0;
              *(float *)&_D6 = _D6;
              __asm { FCVT            H6, S6 }
              *v74 = LOWORD(_D6);
              v75 = (_WORD *)((char *)v75 + v70);
              v74 = (_WORD *)((char *)v74 + v71);
              --v76;
            }
            while (v76);
            LOWORD(_D6) = *v75;
            v80 = v67 * ((double)*(unint64_t *)&_D6 - v64);
            v81 = fmax(v80, 0.0);
            if (v80 <= 1.0)
              v82 = v81;
            else
              v82 = 1.0;
            _D6 = v68 * v82 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            *v74 = LOWORD(_D6);
            v52 += v94;
            v58 += v95;
            ++v73;
          }
          while (v73 != v72);
        }
      }
      if (v48 != 1)
      {
        _D4 = 0.0;
        do
        {
          LOWORD(_D6) = *v52;
          v86 = v67 * ((double)*(unint64_t *)&_D6 - v64);
          v87 = fmax(v86, 0.0);
          if (v86 <= 1.0)
            v88 = v87;
          else
            v88 = 1.0;
          _D6 = v68 * v88 + _D0;
          *(float *)&_D6 = _D6;
          __asm { FCVT            H6, S6 }
          *v58 = LOWORD(_D6);
          v52 = (_WORD *)((char *)v52 + v70);
          v58 = (_WORD *)((char *)v58 + v71);
          --v69;
        }
        while (v69);
      }
      LOWORD(_D4) = *v52;
      v89 = v67 * ((double)*(unint64_t *)&_D4 - v64);
      v90 = fmax(v89, 0.0);
      if (v89 <= 1.0)
        v91 = v90;
      else
        v91 = 1.0;
      _S0 = v68 * v91 + _D0;
      __asm { FCVT            H0, S0 }
      *v58 = LOWORD(_S0);
    }
  }
LABEL_99:
  v93 = v96;
  v96 = 0;
  if (v93)
    (*(void (**)(uint64_t))(*(_QWORD *)v93 + 8))(v93);
  result = v97;
  v97 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243384BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224338520(uint64_t **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  double v12;
  unint64_t v14;
  uint64_t result;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int16 *v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  _WORD *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  _WORD *v62;
  unsigned __int16 *v63;
  int v64;
  unsigned int v65;
  unint64_t v66;
  unsigned int v68;
  uint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  unint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int16 *v94;
  uint64_t v95;
  std::__shared_weak_count *v96;
  unint64_t *v97;
  unint64_t v98;
  unint64_t v99;
  _WORD *v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t v105;
  unsigned int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  int v111;
  _WORD *v112;
  unsigned __int16 *v113;
  int v114;
  unsigned int v115;
  unsigned int v117;
  uint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  unint64_t v132;
  std::__shared_weak_count *v133;
  unint64_t *v134;
  unint64_t v135;
  unint64_t v136;
  int v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned __int16 *v143;
  uint64_t v144;
  std::__shared_weak_count *v145;
  unint64_t *v146;
  unint64_t v147;
  unint64_t v148;
  _WORD *v149;
  uint64_t v150;
  std::__shared_weak_count *v151;
  unint64_t *v152;
  unint64_t v153;
  unint64_t v154;
  unsigned int v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  int v160;
  _WORD *v161;
  unsigned __int16 *v162;
  int v163;
  unsigned int v164;
  unsigned int v166;
  unsigned int v168;
  unint64_t v169;
  unsigned int v171;
  uint64_t v173;
  unsigned int v174;
  unint64_t v175;
  unsigned int v177;
  unsigned int v179;
  unsigned int v181;
  unsigned int v183;
  unsigned int v185;
  unsigned int v187;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;

  v3 = **a1;
  v2 = (*a1)[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v4 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v4 = -65504.0;
    v5 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v5 = 65504.0;
    if (v4 < -65504.0)
      v4 = -65504.0;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v11 = LOWORD(_S0);
    if (v5 <= 65504.0)
      v12 = v5;
    else
      v12 = 65504.0;
    _S0 = v12;
    __asm { FCVT            H0, S0 }
    v14 = v11 | ((unint64_t)LOWORD(_S0) << 16);
  }
  else
  {
    v14 = 2080373759;
  }
  _S11 = *(float *)&v14;
  __asm { FCVT            S9, H11 }
  LODWORD(_S10) = v14 >> 16;
  __asm { FCVT            S8, H10 }
  if (_NF == _VF && _S8 <= 65535.0)
  {
    v21 = *(_QWORD *)(v3 + 8);
    if (!v21)
      goto LABEL_37;
    v22 = *(std::__shared_weak_count **)(v3 + 16);
    if (v22)
    {
      p_shared_owners = (unint64_t *)&v22->__shared_owners_;
      do
        v24 = __ldxr(p_shared_owners);
      while (__stxr(v24 + 1, p_shared_owners));
      do
        v25 = __ldaxr(p_shared_owners);
      while (__stlxr(v25 - 1, p_shared_owners));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
      v21 = *(_QWORD *)(v3 + 8);
      v26 = *(std::__shared_weak_count **)(v3 + 16);
      if (v26)
      {
        v27 = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
        do
          v29 = __ldaxr(v27);
        while (__stlxr(v29 - 1, v27));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
    }
    if (*(_BYTE *)(v3 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v21 + 96))(&v192, v21, 0);
      v30 = *(_QWORD *)(v2 + 8);
      if (!v30)
        goto LABEL_53;
    }
    else
    {
LABEL_37:
      v192 = 0;
      v30 = *(_QWORD *)(v2 + 8);
      if (!v30)
        goto LABEL_53;
    }
    v31 = *(std::__shared_weak_count **)(v2 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
      v30 = *(_QWORD *)(v2 + 8);
      v35 = *(std::__shared_weak_count **)(v2 + 16);
      if (v35)
      {
        v36 = (unint64_t *)&v35->__shared_owners_;
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 1, v36));
        do
          v38 = __ldaxr(v36);
        while (__stlxr(v38 - 1, v36));
        if (!v38)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
    }
    if (*(_BYTE *)(v2 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v30 + 96))(&v191, v30, 1);
      v39 = *(_DWORD *)(v3 + 32);
      if (!v39)
        goto LABEL_236;
      goto LABEL_54;
    }
LABEL_53:
    v191 = 0;
    v39 = *(_DWORD *)(v3 + 32);
    if (!v39)
      goto LABEL_236;
LABEL_54:
    v40 = *(_DWORD *)(v3 + 36);
    if (v40)
    {
      v41 = *(unsigned int *)(v3 + 40);
      v42 = *(unsigned int *)(v2 + 40);
      v189 = *(unsigned int *)(v3 + 44);
      v190 = *(unsigned int *)(v2 + 44);
      v43 = *(unsigned __int16 **)(v3 + 24);
      if (*(_BYTE *)(v3 + 48) && v43)
      {
        v44 = *(_QWORD *)(v3 + 8);
        v45 = *(std::__shared_weak_count **)(v3 + 16);
        if (v45)
        {
          v46 = (unint64_t *)&v45->__shared_owners_;
          do
            v47 = __ldxr(v46);
          while (__stxr(v47 + 1, v46));
          do
            v48 = __ldaxr(v46);
          while (__stlxr(v48 - 1, v46));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
            std::__shared_weak_count::__release_weak(v45);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v44 + 88))(v44, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v43 = *(unsigned __int16 **)(v3 + 24);
      }
      v49 = *(_WORD **)(v2 + 24);
      if (*(_BYTE *)(v2 + 48) && v49)
      {
        v50 = *(_QWORD *)(v2 + 8);
        v51 = *(std::__shared_weak_count **)(v2 + 16);
        if (v51)
        {
          v52 = (unint64_t *)&v51->__shared_owners_;
          do
            v53 = __ldxr(v52);
          while (__stxr(v53 + 1, v52));
          do
            v54 = __ldaxr(v52);
          while (__stlxr(v54 - 1, v52));
          if (!v54)
          {
            ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
            std::__shared_weak_count::__release_weak(v51);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v50 + 88))(v50, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v49 = *(_WORD **)(v2 + 24);
      }
      v55 = (int)_S9;
      v56 = (int)_S8;
      v57 = v39 - 1;
      v58 = 2 * v41;
      v59 = 2 * v42;
      v60 = v40 - 1;
      if (v40 != 1)
      {
        if (v39 == 1)
        {
          do
          {
            v168 = *v43;
            LOWORD(v169) = v14;
            if (v168 >= v55)
            {
              v169 = v14 >> 16;
              if (v168 <= v56)
              {
                _S0 = (float)v168;
                __asm { FCVT            H0, S0 }
                LOWORD(v169) = LOWORD(_S0);
              }
            }
            *v49 = v169;
            v43 += v189;
            v49 += v190;
            --v60;
          }
          while (v60);
        }
        else
        {
          v61 = 0;
          do
          {
            v62 = v49;
            v63 = v43;
            v64 = v39 - 1;
            do
            {
              v65 = *v63;
              LOWORD(v66) = v14;
              if (v65 >= v55)
              {
                v66 = v14 >> 16;
                if (v65 <= v56)
                {
                  _S0 = (float)v65;
                  __asm { FCVT            H0, S0 }
                  LOWORD(v66) = LOWORD(_S0);
                }
              }
              *v62 = v66;
              v63 = (unsigned __int16 *)((char *)v63 + v58);
              v62 = (_WORD *)((char *)v62 + v59);
              --v64;
            }
            while (v64);
            v68 = *v63;
            LOWORD(v63) = v14;
            if (v68 >= v55)
            {
              v63 = (unsigned __int16 *)(v14 >> 16);
              if (v68 <= v56)
              {
                _S0 = (float)v68;
                __asm { FCVT            H0, S0 }
                LOWORD(v63) = LOWORD(_S0);
              }
            }
            *v62 = (_WORD)v63;
            v43 += v189;
            v49 += v190;
            ++v61;
          }
          while (v61 != v60);
        }
      }
      if (v39 != 1)
      {
        do
        {
          v174 = *v43;
          LOWORD(v175) = v14;
          if (v174 >= v55)
          {
            v175 = v14 >> 16;
            if (v174 <= v56)
            {
              _S0 = (float)v174;
              __asm { FCVT            H0, S0 }
              LOWORD(v175) = LOWORD(_S0);
            }
          }
          *v49 = v175;
          v43 = (unsigned __int16 *)((char *)v43 + v58);
          v49 = (_WORD *)((char *)v49 + v59);
          --v57;
        }
        while (v57);
      }
      v171 = *v43;
      if (v171 >= v55)
      {
        v14 >>= 16;
        if (v171 <= v56)
        {
          _S0 = (float)v171;
          __asm { FCVT            H0, S0 }
          LOWORD(v14) = LOWORD(_S0);
        }
      }
      *v49 = v14;
      v173 = v191;
      v191 = 0;
      if (!v173)
        goto LABEL_238;
      goto LABEL_237;
    }
LABEL_236:
    v173 = v191;
    v191 = 0;
    if (!v173)
      goto LABEL_238;
    goto LABEL_237;
  }
  if (_S9 >= 0.0)
  {
    v70 = *(_QWORD *)(v3 + 8);
    if (!v70)
      goto LABEL_101;
    v71 = *(std::__shared_weak_count **)(v3 + 16);
    if (v71)
    {
      v72 = (unint64_t *)&v71->__shared_owners_;
      do
        v73 = __ldxr(v72);
      while (__stxr(v73 + 1, v72));
      do
        v74 = __ldaxr(v72);
      while (__stlxr(v74 - 1, v72));
      if (!v74)
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
      v70 = *(_QWORD *)(v3 + 8);
      v75 = *(std::__shared_weak_count **)(v3 + 16);
      if (v75)
      {
        v76 = (unint64_t *)&v75->__shared_owners_;
        do
          v77 = __ldxr(v76);
        while (__stxr(v77 + 1, v76));
        do
          v78 = __ldaxr(v76);
        while (__stlxr(v78 - 1, v76));
        if (!v78)
        {
          ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
          std::__shared_weak_count::__release_weak(v75);
        }
      }
    }
    if (*(_BYTE *)(v3 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v70 + 96))(&v192, v70, 0);
      v79 = *(_QWORD *)(v2 + 8);
      if (!v79)
        goto LABEL_117;
    }
    else
    {
LABEL_101:
      v192 = 0;
      v79 = *(_QWORD *)(v2 + 8);
      if (!v79)
        goto LABEL_117;
    }
    v80 = *(std::__shared_weak_count **)(v2 + 16);
    if (v80)
    {
      v81 = (unint64_t *)&v80->__shared_owners_;
      do
        v82 = __ldxr(v81);
      while (__stxr(v82 + 1, v81));
      do
        v83 = __ldaxr(v81);
      while (__stlxr(v83 - 1, v81));
      if (!v83)
      {
        ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
        std::__shared_weak_count::__release_weak(v80);
      }
      v79 = *(_QWORD *)(v2 + 8);
      v84 = *(std::__shared_weak_count **)(v2 + 16);
      if (v84)
      {
        v85 = (unint64_t *)&v84->__shared_owners_;
        do
          v86 = __ldxr(v85);
        while (__stxr(v86 + 1, v85));
        do
          v87 = __ldaxr(v85);
        while (__stlxr(v87 - 1, v85));
        if (!v87)
        {
          ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
          std::__shared_weak_count::__release_weak(v84);
        }
      }
    }
    if (*(_BYTE *)(v2 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v79 + 96))(&v191, v79, 1);
      v88 = *(_DWORD *)(v3 + 32);
      if (!v88)
        goto LABEL_236;
      goto LABEL_118;
    }
LABEL_117:
    v191 = 0;
    v88 = *(_DWORD *)(v3 + 32);
    if (!v88)
      goto LABEL_236;
LABEL_118:
    v89 = *(_DWORD *)(v3 + 36);
    if (v89)
    {
      v91 = *(unsigned int *)(v3 + 40);
      v90 = *(unsigned int *)(v3 + 44);
      v93 = *(unsigned int *)(v2 + 40);
      v92 = *(unsigned int *)(v2 + 44);
      v94 = *(unsigned __int16 **)(v3 + 24);
      if (*(_BYTE *)(v3 + 48) && v94)
      {
        v95 = *(_QWORD *)(v3 + 8);
        v96 = *(std::__shared_weak_count **)(v3 + 16);
        if (v96)
        {
          v97 = (unint64_t *)&v96->__shared_owners_;
          do
            v98 = __ldxr(v97);
          while (__stxr(v98 + 1, v97));
          do
            v99 = __ldaxr(v97);
          while (__stlxr(v99 - 1, v97));
          if (!v99)
          {
            ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
            std::__shared_weak_count::__release_weak(v96);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v95 + 88))(v95, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v94 = *(unsigned __int16 **)(v3 + 24);
      }
      v100 = *(_WORD **)(v2 + 24);
      if (*(_BYTE *)(v2 + 48) && v100)
      {
        v101 = *(_QWORD *)(v2 + 8);
        v102 = *(std::__shared_weak_count **)(v2 + 16);
        if (v102)
        {
          v103 = (unint64_t *)&v102->__shared_owners_;
          do
            v104 = __ldxr(v103);
          while (__stxr(v104 + 1, v103));
          do
            v105 = __ldaxr(v103);
          while (__stlxr(v105 - 1, v103));
          if (!v105)
          {
            ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
            std::__shared_weak_count::__release_weak(v102);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v101 + 88))(v101, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v100 = *(_WORD **)(v2 + 24);
      }
      v106 = (int)_S9;
      v107 = v88 - 1;
      v108 = 2 * v91;
      v109 = 2 * v93;
      v110 = v89 - 1;
      if (v89 != 1)
      {
        if (v88 == 1)
        {
          do
          {
            v177 = *v94;
            _S0 = (float)v177;
            __asm { FCVT            H0, S0 }
            if (v177 < v106)
              _S0 = _S11;
            *v100 = LOWORD(_S0);
            v94 += v90;
            v100 += v92;
            --v110;
          }
          while (v110);
        }
        else
        {
          v111 = 0;
          do
          {
            v112 = v100;
            v113 = v94;
            v114 = v88 - 1;
            do
            {
              v115 = *v113;
              _S0 = (float)v115;
              __asm { FCVT            H0, S0 }
              if (v115 < v106)
                _S0 = _S11;
              *v112 = LOWORD(_S0);
              v113 = (unsigned __int16 *)((char *)v113 + v108);
              v112 = (_WORD *)((char *)v112 + v109);
              --v114;
            }
            while (v114);
            v117 = *v113;
            _S0 = (float)v117;
            __asm { FCVT            H0, S0 }
            if (v117 < v106)
              _S0 = _S11;
            *v112 = LOWORD(_S0);
            v94 += v90;
            v100 += v92;
            ++v111;
          }
          while (v111 != v110);
        }
      }
      if (v88 != 1)
      {
        do
        {
          v179 = *v94;
          _S0 = (float)v179;
          __asm { FCVT            H0, S0 }
          if (v179 < v106)
            _S0 = _S11;
          *v100 = LOWORD(_S0);
          v94 = (unsigned __int16 *)((char *)v94 + v108);
          v100 = (_WORD *)((char *)v100 + v109);
          --v107;
        }
        while (v107);
      }
      v181 = *v94;
      _S0 = (float)v181;
      __asm { FCVT            H0, S0 }
      if (v181 < v106)
        _S0 = _S11;
      *v100 = LOWORD(_S0);
    }
    goto LABEL_236;
  }
  if (_S8 > 65535.0)
    return sub_2243392A4(**a1, v2, 65535.0);
  v119 = *(_QWORD *)(v3 + 8);
  if (!v119)
    goto LABEL_164;
  v120 = *(std::__shared_weak_count **)(v3 + 16);
  if (v120)
  {
    v121 = (unint64_t *)&v120->__shared_owners_;
    do
      v122 = __ldxr(v121);
    while (__stxr(v122 + 1, v121));
    do
      v123 = __ldaxr(v121);
    while (__stlxr(v123 - 1, v121));
    if (!v123)
    {
      ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
      std::__shared_weak_count::__release_weak(v120);
    }
    v119 = *(_QWORD *)(v3 + 8);
    v124 = *(std::__shared_weak_count **)(v3 + 16);
    if (v124)
    {
      v125 = (unint64_t *)&v124->__shared_owners_;
      do
        v126 = __ldxr(v125);
      while (__stxr(v126 + 1, v125));
      do
        v127 = __ldaxr(v125);
      while (__stlxr(v127 - 1, v125));
      if (!v127)
      {
        ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
        std::__shared_weak_count::__release_weak(v124);
      }
    }
  }
  if (*(_BYTE *)(v3 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v119 + 96))(&v192, v119, 0);
    v128 = *(_QWORD *)(v2 + 8);
    if (!v128)
      goto LABEL_180;
  }
  else
  {
LABEL_164:
    v192 = 0;
    v128 = *(_QWORD *)(v2 + 8);
    if (!v128)
      goto LABEL_180;
  }
  v129 = *(std::__shared_weak_count **)(v2 + 16);
  if (v129)
  {
    v130 = (unint64_t *)&v129->__shared_owners_;
    do
      v131 = __ldxr(v130);
    while (__stxr(v131 + 1, v130));
    do
      v132 = __ldaxr(v130);
    while (__stlxr(v132 - 1, v130));
    if (!v132)
    {
      ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
      std::__shared_weak_count::__release_weak(v129);
    }
    v128 = *(_QWORD *)(v2 + 8);
    v133 = *(std::__shared_weak_count **)(v2 + 16);
    if (v133)
    {
      v134 = (unint64_t *)&v133->__shared_owners_;
      do
        v135 = __ldxr(v134);
      while (__stxr(v135 + 1, v134));
      do
        v136 = __ldaxr(v134);
      while (__stlxr(v136 - 1, v134));
      if (!v136)
      {
        ((void (*)(std::__shared_weak_count *))v133->__on_zero_shared)(v133);
        std::__shared_weak_count::__release_weak(v133);
      }
    }
  }
  if (!*(_BYTE *)(v2 + 49))
  {
LABEL_180:
    v191 = 0;
    v137 = *(_DWORD *)(v3 + 32);
    if (!v137)
      goto LABEL_236;
    goto LABEL_181;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v128 + 96))(&v191, v128, 1);
  v137 = *(_DWORD *)(v3 + 32);
  if (!v137)
    goto LABEL_236;
LABEL_181:
  v138 = *(_DWORD *)(v3 + 36);
  if (!v138)
    goto LABEL_236;
  v140 = *(unsigned int *)(v3 + 40);
  v139 = *(unsigned int *)(v3 + 44);
  v142 = *(unsigned int *)(v2 + 40);
  v141 = *(unsigned int *)(v2 + 44);
  v143 = *(unsigned __int16 **)(v3 + 24);
  if (*(_BYTE *)(v3 + 48) && v143)
  {
    v144 = *(_QWORD *)(v3 + 8);
    v145 = *(std::__shared_weak_count **)(v3 + 16);
    if (v145)
    {
      v146 = (unint64_t *)&v145->__shared_owners_;
      do
        v147 = __ldxr(v146);
      while (__stxr(v147 + 1, v146));
      do
        v148 = __ldaxr(v146);
      while (__stlxr(v148 - 1, v146));
      if (!v148)
      {
        ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
        std::__shared_weak_count::__release_weak(v145);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v144 + 88))(v144, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v143 = *(unsigned __int16 **)(v3 + 24);
  }
  v149 = *(_WORD **)(v2 + 24);
  if (*(_BYTE *)(v2 + 48) && v149)
  {
    v150 = *(_QWORD *)(v2 + 8);
    v151 = *(std::__shared_weak_count **)(v2 + 16);
    if (v151)
    {
      v152 = (unint64_t *)&v151->__shared_owners_;
      do
        v153 = __ldxr(v152);
      while (__stxr(v153 + 1, v152));
      do
        v154 = __ldaxr(v152);
      while (__stlxr(v154 - 1, v152));
      if (!v154)
      {
        ((void (*)(std::__shared_weak_count *))v151->__on_zero_shared)(v151);
        std::__shared_weak_count::__release_weak(v151);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v150 + 88))(v150, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v149 = *(_WORD **)(v2 + 24);
  }
  v155 = (int)_S8;
  v156 = v137 - 1;
  v157 = 2 * v140;
  v158 = 2 * v142;
  v159 = v138 - 1;
  if (v138 != 1)
  {
    if (v137 == 1)
    {
      do
      {
        v183 = *v143;
        _S0 = (float)v183;
        __asm { FCVT            H0, S0 }
        if (v183 > v155)
          _S0 = _S10;
        *v149 = LOWORD(_S0);
        v143 += v139;
        v149 += v141;
        --v159;
      }
      while (v159);
    }
    else
    {
      v160 = 0;
      do
      {
        v161 = v149;
        v162 = v143;
        v163 = v137 - 1;
        do
        {
          v164 = *v162;
          _S0 = (float)v164;
          __asm { FCVT            H0, S0 }
          if (v164 > v155)
            _S0 = _S10;
          *v161 = LOWORD(_S0);
          v162 = (unsigned __int16 *)((char *)v162 + v157);
          v161 = (_WORD *)((char *)v161 + v158);
          --v163;
        }
        while (v163);
        v166 = *v162;
        _S0 = (float)v166;
        __asm { FCVT            H0, S0 }
        if (v166 > v155)
          _S0 = _S10;
        *v161 = LOWORD(_S0);
        v143 += v139;
        v149 += v141;
        ++v160;
      }
      while (v160 != v159);
    }
  }
  if (v137 != 1)
  {
    do
    {
      v185 = *v143;
      _S0 = (float)v185;
      __asm { FCVT            H0, S0 }
      if (v185 > v155)
        _S0 = _S10;
      *v149 = LOWORD(_S0);
      v143 = (unsigned __int16 *)((char *)v143 + v157);
      v149 = (_WORD *)((char *)v149 + v158);
      --v156;
    }
    while (v156);
  }
  v187 = *v143;
  _S0 = (float)v187;
  __asm { FCVT            H0, S0 }
  if (v187 > v155)
    _S0 = _S10;
  *v149 = LOWORD(_S0);
  v173 = v191;
  v191 = 0;
  if (!v173)
    goto LABEL_238;
LABEL_237:
  (*(void (**)(uint64_t))(*(_QWORD *)v173 + 8))(v173);
LABEL_238:
  result = v192;
  v192 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224339204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224339298(uint64_t **a1, float a2)
{
  return sub_2243392A4(**a1, (*a1)[1], a2);
}

uint64_t sub_2243392A4(uint64_t a1, uint64_t a2, float _S0)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _WORD *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  _WORD *v46;
  _WORD *v47;
  int v48;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_70;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v57 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v56, v14, 1);
    v23 = *(_DWORD *)(a1 + 32);
    if (!v23)
      goto LABEL_64;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v57, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v56 = 0;
  v23 = *(_DWORD *)(a1 + 32);
  if (!v23)
    goto LABEL_64;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v26 = *(unsigned int *)(a1 + 40);
    v25 = *(unsigned int *)(a1 + 44);
    v28 = *(unsigned int *)(a2 + 40);
    v27 = *(unsigned int *)(a2 + 44);
    v29 = *(_WORD **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v29)
    {
      v30 = *(_QWORD *)(a1 + 8);
      v31 = *(std::__shared_weak_count **)(a1 + 16);
      if (v31)
      {
        v32 = (unint64_t *)&v31->__shared_owners_;
        do
          v33 = __ldxr(v32);
        while (__stxr(v33 + 1, v32));
        do
          v34 = __ldaxr(v32);
        while (__stlxr(v34 - 1, v32));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v29 = *(_WORD **)(a1 + 24);
    }
    v35 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v35)
    {
      v36 = *(_QWORD *)(a2 + 8);
      v37 = *(std::__shared_weak_count **)(a2 + 16);
      if (v37)
      {
        v38 = (unint64_t *)&v37->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v35 = *(_WORD **)(a2 + 24);
    }
    v41 = v23 - 1;
    v42 = 2 * v26;
    v43 = 2 * v28;
    v44 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        do
        {
          LOWORD(_S0) = *v29;
          _S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v35 = LOWORD(_S0);
          v29 += v25;
          v35 += v27;
          --v44;
        }
        while (v44);
      }
      else
      {
        v45 = 0;
        do
        {
          v46 = v35;
          v47 = v29;
          v48 = v23 - 1;
          do
          {
            LOWORD(_S0) = *v47;
            _S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *v46 = LOWORD(_S0);
            v47 = (_WORD *)((char *)v47 + v42);
            v46 = (_WORD *)((char *)v46 + v43);
            --v48;
          }
          while (v48);
          LOWORD(_S0) = *v47;
          _S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v46 = LOWORD(_S0);
          v29 += v25;
          v35 += v27;
          ++v45;
        }
        while (v45 != v44);
      }
    }
    if (v23 != 1)
    {
      do
      {
        LOWORD(_S0) = *v29;
        _S0 = (float)LODWORD(_S0);
        __asm { FCVT            H0, S0 }
        *v35 = LOWORD(_S0);
        v29 = (_WORD *)((char *)v29 + v42);
        v35 = (_WORD *)((char *)v35 + v43);
        --v41;
      }
      while (v41);
    }
    LOWORD(_S0) = *v29;
    _S0 = (float)LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    *v35 = LOWORD(_S0);
  }
LABEL_64:
  v54 = v56;
  v56 = 0;
  if (v54)
    (*(void (**)(uint64_t))(*(_QWORD *)v54 + 8))(v54);
  result = v57;
  v57 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

