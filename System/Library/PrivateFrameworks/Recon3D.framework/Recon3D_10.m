void sub_223507DE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_2234B3E44(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223507EC8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__"
                     "113shared_futureIbEEvS9_Lb0EE25EnqueueMessageAndDispatchIZNKSA_4SendERKS6_EUlT_T0_E_EEvSD_SE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToReq"
                                "uestENSt3__113shared_futureIbEEvS9_Lb0EE25EnqueueMessageAndDispatchIZNKSA_4SendERKS6_EUl"
                                "T_T0_E_EEvSD_SE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE25EnqueueMessageAndDispatchIZNKSA_4SendERKS6_EUlT_T0_E_EEvSD_SE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE25EnqueueMessageAndDispatchIZNKSA_4SendERKS6_EUlT_T0_E_EEvSD_SE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223507F34()
{
  return &unk_24EC43348;
}

uint64_t sub_223507F40(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  BOOL v8;
  uint64_t v9;
  uint64_t i;
  unsigned __int8 v11;
  _QWORD *v12;
  _QWORD *j;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t result;
  unint64_t *v20;
  unint64_t v21;
  std::exception_ptr v22;
  uint64_t v23;

  v6 = *a1;
  if (!v6)
  {
    sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    v7 = atomic_load((unsigned __int8 *)&qword_255795680);
    if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
    {
      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
      __cxa_guard_release(&qword_255795680);
    }
    if (byte_255795670)
      v8 = byte_255795678 == 0;
    else
      v8 = 0;
    if (!v8)
    {
      v9 = qword_255795648;
      for (i = qword_255795650; v9 != i; v9 += 16)
        (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v9)(*(_QWORD *)(v9 + 8), "callable_", 9, "", 0);
    }
    v11 = atomic_load((unsigned __int8 *)&qword_255795680);
    if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
    {
      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
      __cxa_guard_release(&qword_255795680);
    }
    if (!byte_255795670)
      abort();
    qword_255795660(*(_QWORD *)algn_255795668, "callable_", 9, "", 0);
    v6 = *a1;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(&v23, v6, a2);
  v12 = a1 + 1;
  for (j = (_QWORD *)a1[2]; j != v12; j = (_QWORD *)j[1])
    (*(void (**)(_QWORD *, uint64_t *))(j[2] + 16))(j + 2, &v23);
  if (*((_BYTE *)a3 + 8))
  {
    v14 = *a3;
    if (!v14)
      sub_2233236D4(3u);
    std::mutex::lock((std::mutex *)(v14 + 24));
    if ((*(_BYTE *)(v14 + 136) & 1) != 0
      || (v22.__ptr_ = 0, v15 = *(_QWORD *)(v14 + 16), std::exception_ptr::~exception_ptr(&v22), v15))
    {
      sub_2233236D4(2u);
    }
    v16 = v23;
    *(_QWORD *)(v14 + 144) = v23;
    if (v16)
    {
      v17 = (unint64_t *)(v16 + 8);
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
    }
    *(_DWORD *)(v14 + 136) |= 5u;
    std::condition_variable::notify_all((std::condition_variable *)(v14 + 88));
    std::mutex::unlock((std::mutex *)(v14 + 24));
  }
  result = v23;
  if (v23)
  {
    v20 = (unint64_t *)(v23 + 8);
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  }
  return result;
}

void sub_2235081F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, int a13, __int16 a14, char a15, unsigned __int8 a16, uint64_t a17)
{
  std::mutex *v17;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  std::mutex::unlock(v17);
  v20 = a17;
  if (a17)
  {
    v21 = (unint64_t *)(a17 + 8);
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 16))(v20);
  }
  if (a2 == 1)
  {
    v23 = (uint64_t *)__cxa_begin_catch(a1);
    v24 = *v23;
    a10 = *(_QWORD *)(*(_QWORD *)(*v23 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a9 = (*(uint64_t (**)(void))(v24 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", (const char *)&a10, "\n", "message: ", (const char *)&a9, "\n");
    if ((a16 & 0x80u) == 0)
      v25 = (uint64_t *)&a11;
    else
      v25 = a11;
    if ((a16 & 0x80u) == 0)
      v26 = a16;
    else
      v26 = a12;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_2235082F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x223508310);
}

uint64_t sub_22350831C(uint64_t a1)
{
  std::__shared_weak_count *v2;

  *(_QWORD *)a1 = off_24EC43368;
  if (*(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    v2 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v2)
      return a1;
    goto LABEL_3;
  }
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
LABEL_3:
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223508370(uint64_t a1)
{
  std::__shared_weak_count *v2;

  *(_QWORD *)a1 = off_24EC43368;
  if (*(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    v2 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v2)
      goto LABEL_6;
  }
  else
  {
    v2 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v2)
      goto LABEL_6;
  }
  std::__shared_weak_count::__release_weak(v2);
LABEL_6:
  JUMPOUT(0x227684CE8);
}

char *sub_2235083D4(uint64_t a1)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _BYTE *v8;

  v2 = (char *)operator new(0x38uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v2 = off_24EC43368;
  *((_QWORD *)v2 + 1) = v5;
  *((_QWORD *)v2 + 2) = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[24] = *(_BYTE *)(a1 + 24);
  v8 = v2 + 32;
  if (*(char *)(a1 + 55) < 0)
  {
    sub_223197FA4(v8, *(void **)(a1 + 32), *(_QWORD *)(a1 + 40));
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)(a1 + 32);
    *((_QWORD *)v3 + 6) = *(_QWORD *)(a1 + 48);
  }
  return v3;
}

void sub_22350846C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_22350848C(char *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  __int128 v6;

  v3 = *((_QWORD *)result + 1);
  v2 = *((_QWORD *)result + 2);
  *(_QWORD *)a2 = off_24EC43368;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_BYTE *)(a2 + 24) = result[24];
  if (result[55] < 0)
    return (char *)sub_223197FA4((_BYTE *)(a2 + 32), *((void **)result + 4), *((_QWORD *)result + 5));
  v6 = *((_OWORD *)result + 2);
  *(_QWORD *)(a2 + 48) = *((_QWORD *)result + 6);
  *(_OWORD *)(a2 + 32) = v6;
  return result;
}

void sub_223508514(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22350852C(uint64_t a1)
{
  std::__shared_weak_count *v2;

  if ((*(char *)(a1 + 55) & 0x80000000) == 0)
  {
    v2 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v2)
      return;
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 32));
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
LABEL_3:
    std::__shared_weak_count::__release_weak(v2);
}

void sub_223508574(void **__p)
{
  std::__shared_weak_count *v2;

  if (*((char *)__p + 55) < 0)
  {
    operator delete(__p[4]);
    v2 = (std::__shared_weak_count *)__p[2];
    if (!v2)
      goto LABEL_4;
    goto LABEL_3;
  }
  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
LABEL_3:
    std::__shared_weak_count::__release_weak(v2);
LABEL_4:
  operator delete(__p);
}

void sub_2235085BC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_223507F40((uint64_t *)(v5 + 88), a1 + 24, &v8);
        if (v9)
          sub_2234B3E44(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223508664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_2234B3E44(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235086B0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__"
                     "113shared_futureIbEEvS9_Lb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToReq"
                                "uestENSt3__113shared_futureIbEEvS9_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22350871C()
{
  return &unk_24EC433C8;
}

_QWORD *sub_223508728(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC433E8;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2235087B0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC433E8;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_223508848(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC433E8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_2235088D8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC433E8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_223508948(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_2235089C8(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_223508A44(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_223507F40(v13, v5, (uint64_t *)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_2234B3E44((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223508D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223508D4C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x223508B58);
    JUMPOUT(0x223508B28);
  }
  sub_2233236D4(3u);
}

void sub_223508DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223508DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_2234B3E44(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_223508EC0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__"
                     "113shared_futureIbEEvS9_Lb0EE25EnqueueMessageAndDispatchIZNKSA_7ProcessERKS6_NS7_7promiseIS9_EEEUlT"
                     "_T0_E_EEvSD_SG_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToReq"
                                "uestENSt3__113shared_futureIbEEvS9_Lb0EE25EnqueueMessageAndDispatchIZNKSA_7ProcessERKS6_"
                                "NS7_7promiseIS9_EEEUlT_T0_E_EEvSD_SG_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE25EnqueueMessageAndDispatchIZNKSA_7ProcessERKS6_NS7_7promiseIS9_EEEUlT_T0_E_EEvSD_SG_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE25EnqueueMessageAndDispatchIZNKSA_7ProcessERKS6_NS7_7promiseIS9_EEEUlT_T0_E_EEvSD_SG_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223508F2C()
{
  return &unk_24EC43448;
}

uint64_t sub_223508F38(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *(_QWORD *)a1 = off_24EC43468;
  v2 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_6;
LABEL_10:
    operator delete(*(void **)(a1 + 32));
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return a1;
    goto LABEL_7;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_10;
LABEL_6:
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_7:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_223508FCC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *(_QWORD *)a1 = off_24EC43468;
  v2 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
    {
LABEL_6:
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      if (!v5)
        goto LABEL_11;
      goto LABEL_7;
    }
  }
  else
  {
LABEL_5:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_6;
  }
  operator delete(*(void **)(a1 + 32));
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_11;
LABEL_7:
  std::__shared_weak_count::__release_weak(v5);
LABEL_11:
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223509070(uint64_t a1)
{
  char *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v2 = (char *)operator new(0x48uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v2 = off_24EC43468;
  *((_QWORD *)v2 + 1) = v5;
  *((_QWORD *)v2 + 2) = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[24] = *(_BYTE *)(a1 + 24);
  v8 = v2 + 32;
  if (*(char *)(a1 + 55) < 0)
  {
    sub_223197FA4(v8, *(void **)(a1 + 32), *(_QWORD *)(a1 + 40));
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)(a1 + 32);
    v3[6] = *(_QWORD *)(a1 + 48);
  }
  v9 = *(_QWORD *)(a1 + 64);
  v3[7] = *(_QWORD *)(a1 + 56);
  v3[8] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return v3;
}

void sub_22350911C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

_BYTE *sub_22350913C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _BYTE *result;
  __int128 v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a2 = off_24EC43468;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  *(_BYTE *)(a2 + 24) = *(_BYTE *)(a1 + 24);
  result = (_BYTE *)(a2 + 32);
  if (*(char *)(a1 + 55) < 0)
  {
    result = sub_223197FA4(result, *(void **)(a1 + 32), *(_QWORD *)(a1 + 40));
  }
  else
  {
    v9 = *(_OWORD *)(a1 + 32);
    *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
    *(_OWORD *)result = v9;
  }
  v10 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a2 + 64) = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

void sub_2235091DC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235091F4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
    {
LABEL_6:
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      if (!v5)
        return;
      goto LABEL_7;
    }
  }
  else
  {
LABEL_5:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_6;
  }
  operator delete(*(void **)(a1 + 32));
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_7:
    std::__shared_weak_count::__release_weak(v5);
}

void sub_22350927C(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 8);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    if ((__p[55] & 0x80000000) == 0)
      goto LABEL_6;
LABEL_10:
    operator delete(*((void **)__p + 4));
    v5 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
    if (!v5)
      goto LABEL_8;
    goto LABEL_7;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  if (__p[55] < 0)
    goto LABEL_10;
LABEL_6:
  v5 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v5)
LABEL_7:
    std::__shared_weak_count::__release_weak(v5);
LABEL_8:
  operator delete(__p);
}

void sub_223509304(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[7];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_223507F40((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t *)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_2234B3E44((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_223509414(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_22350948C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x2235094C0);
  JUMPOUT(0x2235094F0);
}

uint64_t sub_2235094F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__"
                     "113shared_futureIbEEvS9_Lb0EE7ProcessERKS6_NS7_7promiseIS9_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToReq"
                                "uestENSt3__113shared_futureIbEEvS9_Lb0EE7ProcessERKS6_NS7_7promiseIS9_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE7ProcessERKS6_NS7_7promiseIS9_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE7ProcessERKS6_NS7_7promiseIS9_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223509564()
{
  return &unk_24EC434C8;
}

_QWORD *sub_223509570(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC434E8;
  v2 = a1[4];
  a1[3] = &off_24EC37F20;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235095C8(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC434E8;
  v2 = a1[4];
  a1[3] = &off_24EC37F20;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223509630(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC434E8;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC37F20;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_2235096A8(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235096C8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC434E8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC37F20;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_223509730(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223509748(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC37F20;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223509798(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC37F20;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235097E4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC37F20;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223509898(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235098D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__1"
                     "13shared_futureIbEEvS9_Lb0EE9SubscribeENS1_12ChannelInputIS9_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequ"
                                "estENSt3__113shared_futureIbEEvS9_Lb0EE9SubscribeENS1_12ChannelInputIS9_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE9SubscribeENS1_12ChannelInputIS9_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE9SubscribeENS1_12ChannelInputIS9_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223509940()
{
  return &unk_24EC43548;
}

_QWORD *sub_22350994C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC43568;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223509984(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC43568;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235099CC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC43568;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_223509A1C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC43568;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_223509A4C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223509A5C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223509A88(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223509B1C(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223509B58(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__1"
                     "13shared_futureIbEEvS9_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequ"
                                "estENSt3__113shared_futureIbEEvS9_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223509BC4()
{
  return &unk_24EC435C8;
}

_QWORD *sub_223509BD0(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC435E8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223509C08(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC435E8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223509C50(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC435E8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_223509CA8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC435E8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_223509CE0(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223509CF0(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223509D1C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_223509E98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223509F08(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__"
                     "113shared_futureIbEEvS9_Lb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToReq"
                                "uestENSt3__113shared_futureIbEEvS9_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223509F74()
{
  return &unk_24EC43648;
}

_QWORD *sub_223509F80(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC43668;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223509FB8(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC43668;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350A000(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC43668;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22350A058(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC43668;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22350A090(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22350A0A0(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22350A0CC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22350A184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22350A1D0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__"
                     "113shared_futureIbEEvS9_Lb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToReq"
                                "uestENSt3__113shared_futureIbEEvS9_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng34KeyframePlaneSaveSnapshotToRequestENSt3__113shared_futureIbEEvS9_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22350A23C()
{
  return &unk_24EC436C8;
}

void sub_22350A24C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22350A270(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_22350A288(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng34KeyframePlaneSaveSnaps"
                     "hotToRequestENS_13shared_futureIbEEvSA_Lb0EEEE27__shared_ptr_default_deleteISB_SB_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng34KeyframePla"
                                "neSaveSnapshotToRequestENS_13shared_futureIbEEvSA_Lb0EEEE27__shared_ptr_default_deleteISB_SB_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng34KeyframePlaneSaveSnapshotToRequestENS_13shared_futureIbEEvSA_Lb0EEEE27__shared_ptr_default_deleteISB_SB_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng34KeyframePlaneSaveSnapshotToRequestENS_13shared_futureIbEEvSA_Lb0EEEE27__shared_ptr_default_deleteISB_SB_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_22350A2F8(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22350A324(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350A360@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC43738;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_22350A3C8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22350A458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22350A46C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22350A4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22350A510(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22350A5D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22350A5E8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22350A6AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22350A6C0(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_22350A764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22350A778(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22350A7E0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22350A848(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 48))(*(_QWORD *)(a1 + 8));
}

void sub_22350A85C(uint64_t a1)
{
  sub_22350BFFC(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22350A880(_QWORD *a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t *p_shared_weak_owners;
  std::__shared_weak_count *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count **v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  std::mutex **v22;
  uint64_t **v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t **v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  __int128 *v46;
  __int128 *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 *v51;
  _BYTE v52[24];
  _BYTE *v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v2 = (uint64_t *)a1[18];
  if (v2)
  {
    v3 = (std::__shared_weak_count *)operator new(0x20uLL);
    v3->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    v3->__shared_weak_owners_ = 0;
    p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC439E0;
    v6 = v3 + 1;
    do
      v7 = __ldxr(p_shared_weak_owners);
    while (__stxr(v7 + 1, p_shared_weak_owners));
    v8 = (_QWORD *)operator new();
    *v8 = v2 + 7;
    std::mutex::lock((std::mutex *)(v2 + 7));
    *(_QWORD *)&v49 = v8;
    *((_QWORD *)&v49 + 1) = v2;
    if (!*((_BYTE *)v2 + 48))
      sub_22324A974();
    v9 = v2[4];
    v10 = *v2;
    v11 = (std::__shared_weak_count **)(*v2 + 16 * v9);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *v11 = v6;
    v13 = v10 + 16 * v9;
    v14 = *(std::__shared_weak_count **)(v13 + 8);
    *(_QWORD *)(v13 + 8) = v3;
    if (v14)
    {
      v15 = (unint64_t *)&v14->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    v17 = (v2[1] - *v2) >> 4;
    v18 = v2[5];
    v19 = v2[4] + 1;
    if (v19 >= v17)
      v20 = (v2[1] - *v2) >> 4;
    else
      v20 = 0;
    v2[4] = v19 - v20;
    if (v18 == v17)
    {
      v21 = v2[3] + 1;
      if (v21 < v17)
        v17 = 0;
      v2[3] = v21 - v17;
      v22 = (std::mutex **)v49;
      if (!(_QWORD)v49)
      {
LABEL_33:
        v32 = (uint64_t **)a1[9];
        v49 = 0uLL;
        v33 = (std::__shared_weak_count *)a1[5];
        if (v33)
        {
          v34 = std::__shared_weak_count::lock(v33);
          if (v34)
          {
            v35 = v34;
            v36 = a1[4];
            v37 = (unint64_t *)&v34->__shared_weak_owners_;
            do
              v38 = __ldxr(v37);
            while (__stxr(v38 + 1, v37));
            *(_QWORD *)&v49 = v36;
            *((_QWORD *)&v49 + 1) = v34;
            v39 = (unint64_t *)&v34->__shared_owners_;
            do
              v40 = __ldaxr(v39);
            while (__stlxr(v40 - 1, v39));
            if (!v40)
            {
              ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
              std::__shared_weak_count::__release_weak(v35);
            }
          }
          else
          {
            v49 = 0uLL;
          }
        }
        v41 = (char *)operator new(0x30uLL);
        *(_QWORD *)v41 = &off_24EC43A30;
        *(_OWORD *)(v41 + 8) = v49;
        v49 = 0uLL;
        *((_QWORD *)v41 + 3) = v6;
        *((_QWORD *)v41 + 4) = v3;
        v50 = 0;
        v51 = 0;
        v53 = v41;
        sub_2245022E4(*v32, (uint64_t)v52);
        v42 = v53;
        if (v53 == v52)
        {
          v43 = 4;
          v42 = v52;
        }
        else
        {
          if (!v53)
            goto LABEL_47;
          v43 = 5;
        }
        (*(void (**)(_QWORD *))(*v42 + 8 * v43))(v42);
LABEL_47:
        if (v3)
        {
          v44 = (unint64_t *)&v3->__shared_owners_;
          do
            v45 = __ldaxr(v44);
          while (__stlxr(v45 - 1, v44));
          if (!v45)
          {
            ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
            std::__shared_weak_count::__release_weak(v3);
          }
        }
        return;
      }
    }
    else
    {
      v2[5] = v18 + 1;
      v22 = (std::mutex **)v49;
      if (!(_QWORD)v49)
        goto LABEL_33;
    }
    std::mutex::unlock(*v22);
    MEMORY[0x227684CE8](v22, 0x20C4093837F09);
    goto LABEL_33;
  }
  v23 = (uint64_t **)a1[9];
  v24 = (std::__shared_weak_count *)a1[5];
  if (v24)
  {
    v25 = std::__shared_weak_count::lock(v24);
    v26 = v25;
    if (v25)
    {
      v27 = a1[4];
      v28 = (unint64_t *)&v25->__shared_weak_owners_;
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
      v30 = (unint64_t *)&v25->__shared_owners_;
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    else
    {
      v27 = 0;
    }
  }
  else
  {
    v27 = 0;
    v26 = 0;
  }
  v46 = (__int128 *)operator new(0x20uLL);
  *(_QWORD *)v46 = &off_24EC43AB0;
  *((_QWORD *)v46 + 1) = v27;
  *((_QWORD *)v46 + 2) = v26;
  v51 = v46;
  sub_2245022E4(*v23, (uint64_t)&v49);
  v47 = v51;
  if (v51 == &v49)
  {
    v48 = 4;
    v47 = &v49;
  }
  else
  {
    if (!v51)
      return;
    v48 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v47 + 8 * v48))();
}

void sub_22350AC80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;

  if (a14 == v19)
  {
    (*(void (**)(void))(a11 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a14)
  {
    (*(void (**)(void))(*(_QWORD *)a14 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22350AD74(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22350AD84(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22350AD90(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_22350ADA0(_QWORD *a1, uint64_t a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t *p_shared_weak_owners;
  std::__shared_weak_count *v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count **v17;
  unint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  std::mutex **v28;
  uint64_t **v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  std::__shared_weak_count *v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t **v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  char *v47;
  std::string *v48;
  uint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  __int128 *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  __int128 *v62;
  std::string *v63;
  std::runtime_error *exception;
  std::runtime_error *v65;
  __int128 v66;
  _QWORD *v67;
  std::__shared_weak_count *v68;
  std::__shared_weak_count *v69;
  std::runtime_error v70;
  std::__shared_weak_count *v71;
  std::__shared_weak_count *v72;
  __int128 v73;
  _QWORD *v74;
  __int128 *v75;
  _QWORD v76[3];
  std::string v77;
  std::string *v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v73 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v73 + 1) = 45;
    v61 = (_QWORD *)a1[6];
    v60 = a1 + 6;
    v59 = v61;
    v62 = (__int128 *)*((unsigned __int8 *)v60 + 23);
    if ((char)v62 < 0)
      v62 = (__int128 *)v60[1];
    else
      v59 = v60;
    v74 = v59;
    v75 = v62;
    sub_2231A9820((uint64_t)&v73, (uint64_t)v76, 0, 0, &v77);
    if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v63 = &v77;
    else
      v63 = (std::string *)v77.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v70, (const char *)v63);
    v70.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v65 = std::runtime_error::runtime_error(exception, &v70);
    v65->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v65, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v5 = (std::__shared_weak_count *)operator new(0x20uLL);
    v5->__shared_weak_owners_ = 0;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&unk_24EC2F420;
    v5[1].__vftable = *a3;
    v69 = v5;
    v67 = &v5[1].__vftable;
    v68 = v5;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    *a3 = 0;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    if (!a1[18]
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v8 = (std::__shared_weak_count *)operator new(0x20uLL);
    v8->__shared_owners_ = 0;
    v9 = (unint64_t *)&v8->__shared_owners_;
    v8->__shared_weak_owners_ = 0;
    p_shared_weak_owners = (unint64_t *)&v8->__shared_weak_owners_;
    v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC439E0;
    v11 = v8 + 1;
    v71 = v8 + 1;
    v72 = v8;
    do
      v12 = __ldxr(p_shared_weak_owners);
    while (__stxr(v12 + 1, p_shared_weak_owners));
    v13 = (uint64_t *)a1[18];
    v14 = (_QWORD *)operator new();
    *v14 = v13 + 7;
    std::mutex::lock((std::mutex *)(v13 + 7));
    *(_QWORD *)&v73 = v14;
    *((_QWORD *)&v73 + 1) = v13;
    if (!*((_BYTE *)v13 + 48))
      sub_22324A974();
    v15 = v13[4];
    v16 = *v13;
    v17 = (std::__shared_weak_count **)(*v13 + 16 * v15);
    do
      v18 = __ldxr(v9);
    while (__stxr(v18 + 1, v9));
    *v17 = v11;
    v19 = v16 + 16 * v15;
    v20 = *(std::__shared_weak_count **)(v19 + 8);
    *(_QWORD *)(v19 + 8) = v8;
    if (v20)
    {
      v21 = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    v23 = (v13[1] - *v13) >> 4;
    v24 = v13[5];
    v25 = v13[4] + 1;
    if (v25 >= v23)
      v26 = (v13[1] - *v13) >> 4;
    else
      v26 = 0;
    v13[4] = v25 - v26;
    if (v24 == v23)
    {
      v27 = v13[3] + 1;
      if (v27 < v23)
        v23 = 0;
      v13[3] = v27 - v23;
      v28 = (std::mutex **)v73;
      if (!(_QWORD)v73)
      {
LABEL_37:
        v38 = (uint64_t **)a1[9];
        v73 = 0uLL;
        v39 = (std::__shared_weak_count *)a1[5];
        if (v39)
        {
          v40 = std::__shared_weak_count::lock(v39);
          if (v40)
          {
            v41 = v40;
            v42 = a1[4];
            v43 = (unint64_t *)&v40->__shared_weak_owners_;
            do
              v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
            *(_QWORD *)&v73 = v42;
            *((_QWORD *)&v73 + 1) = v40;
            v45 = (unint64_t *)&v40->__shared_owners_;
            do
              v46 = __ldaxr(v45);
            while (__stlxr(v46 - 1, v45));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
              std::__shared_weak_count::__release_weak(v41);
            }
          }
          else
          {
            v73 = 0uLL;
          }
        }
        v47 = (char *)operator new(0x38uLL);
        *(_QWORD *)v47 = &off_24EC43B30;
        *(_OWORD *)(v47 + 8) = v73;
        v73 = 0uLL;
        *((_QWORD *)v47 + 3) = v11;
        *((_QWORD *)v47 + 4) = v8;
        v74 = 0;
        v75 = 0;
        *((_QWORD *)v47 + 5) = v67;
        *((_QWORD *)v47 + 6) = v68;
        v76[0] = 0;
        v76[1] = 0;
        v78 = (std::string *)v47;
        sub_2245022E4(*v38, (uint64_t)&v77);
        v48 = v78;
        if (v78 == &v77)
        {
          v49 = 4;
          v48 = &v77;
        }
        else
        {
          if (!v78)
            goto LABEL_51;
          v49 = 5;
        }
        (*(void (**)(void))(v48->__r_.__value_.__r.__words[0] + 8 * v49))();
LABEL_51:
        if (v72)
        {
          v50 = &v72->__shared_owners_;
          do
            v51 = __ldaxr((unint64_t *)v50);
          while (__stlxr(v51 - 1, (unint64_t *)v50));
          if (!v51)
          {
            ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
            std::__shared_weak_count::__release_weak(v72);
          }
        }
        if (v69)
        {
          v52 = (unint64_t *)&v69->__shared_owners_;
          do
            v53 = __ldaxr(v52);
          while (__stlxr(v53 - 1, v52));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
            std::__shared_weak_count::__release_weak(v69);
          }
        }
        return;
      }
    }
    else
    {
      v13[5] = v24 + 1;
      v28 = (std::mutex **)v73;
      if (!(_QWORD)v73)
        goto LABEL_37;
    }
    std::mutex::unlock(*v28);
    MEMORY[0x227684CE8](v28, 0x20C4093837F09);
    goto LABEL_37;
  }
  v29 = (uint64_t **)a1[9];
  v66 = 0uLL;
  v30 = (std::__shared_weak_count *)a1[5];
  if (v30)
  {
    v31 = std::__shared_weak_count::lock(v30);
    if (v31)
    {
      v32 = v31;
      v33 = a1[4];
      v34 = (unint64_t *)&v31->__shared_weak_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
      *(_QWORD *)&v66 = v33;
      *((_QWORD *)&v66 + 1) = v31;
      v36 = (unint64_t *)&v31->__shared_owners_;
      do
        v37 = __ldaxr(v36);
      while (__stlxr(v37 - 1, v36));
      if (!v37)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
    else
    {
      v66 = 0uLL;
    }
  }
  v54 = operator new(0x20uLL);
  v54[1] = 0;
  v54[2] = 0;
  *v54 = &unk_24EC2F420;
  v54[3] = *a3;
  *a3 = 0;
  v55 = (char *)operator new(0x30uLL);
  *(_QWORD *)v55 = &off_24EC43BB0;
  *(_OWORD *)(v55 + 8) = v66;
  *((_QWORD *)v55 + 4) = v54 + 3;
  *((_QWORD *)v55 + 5) = v54;
  v75 = (__int128 *)v55;
  sub_2245022E4(*v29, (uint64_t)&v73);
  v57 = v75;
  if (v75 == &v73)
  {
    v58 = 4;
    v57 = &v73;
  }
  else
  {
    if (!v75)
      return;
    v58 = 5;
  }
  (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)v57 + 8 * v58))(v57, v56);
}

void sub_22350B3AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::runtime_error a18, std::exception_ptr a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  std::promise<void> *v25;
  uint64_t v26;
  std::exception_ptr v27;

  if (a2)
  {
    __cxa_begin_catch(exception_object);
    std::current_exception();
    __cxa_end_catch();
    v27.__ptr_ = &a19;
    std::promise<void>::set_exception(v25, v27);
    std::exception_ptr::~exception_ptr(&a19);
    std::runtime_error::~runtime_error(&a18);
    if (*(char *)(v26 - 81) < 0)
      operator delete(*(void **)(v26 - 104));
    JUMPOUT(0x22350B2C0);
  }
  _Unwind_Resume(exception_object);
}

void sub_22350B4B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  va_list va1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va2;
  uint64_t v22;
  va_list va3;

  va_start(va3, a6);
  va_start(va2, a6);
  va_start(va1, a6);
  va_start(va, a6);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v14 = va_arg(va2, _QWORD);
  v16 = va_arg(va2, _QWORD);
  v17 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v20 = va_arg(va3, _QWORD);
  v22 = va_arg(va3, _QWORD);
  v9 = *(_QWORD **)(v7 - 80);
  if (v9 == v6)
  {
    v10 = 4;
    v9 = (_QWORD *)(v7 - 104);
  }
  else
  {
    if (!v9)
      goto LABEL_6;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_6:
  sub_22332429C((uint64_t *)va3);
  sub_223167354((uint64_t)va2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22350B554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v7;
  va_list va;
  uint64_t v9;
  va_list va1;

  va_start(va1, a6);
  va_start(va, a6);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22350B570(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_22350B5E4(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC43C30;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_22350B6F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22350B758(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC43CB0;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_22350B868(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_22350B8CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC43D30;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22350BAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_22350BBAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC43DB0;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22350BDC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22350BE8C(uint64_t a1)
{
  return sub_22350BFFC(a1 - 16);
}

void sub_22350BE94(uint64_t a1)
{
  sub_22350BFFC(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350BEBC(uint64_t a1)
{
  return sub_22350B5E4((_QWORD *)(a1 - 16));
}

uint64_t *sub_22350BEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22350B8CC((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22350BECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22350BBAC((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_22350BED4(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_22350BEDC(uint64_t a1)
{
  return sub_22350BFFC(a1 - 24);
}

void sub_22350BEE4(uint64_t a1)
{
  sub_22350BFFC(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350BF0C(uint64_t a1)
{
  return sub_22350B758((_QWORD *)(a1 - 24));
}

uint64_t sub_22350BF14(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_22350BF1C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22350BF84(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22350BFEC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_22350BFFC(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC437F0;
  *(_QWORD *)(a1 + 16) = &unk_24EC43868;
  *(_QWORD *)(a1 + 24) = &unk_24EC438A8;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v14 = *(_QWORD *)(a1 + 96);
    v13 = *(uint64_t **)(a1 + 104);
    v15 = *v13;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v14 + 8);
    **(_QWORD **)(v14 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v13 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v13[1];
        operator delete(v13);
        v13 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

void sub_22350C1E8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC439E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_22350C1F8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC439E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350C230(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC43A30;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_22350C274(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC43A30;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350C2C8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC43A30;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_22350C338(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC43A30;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_22350C388(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_22350C3C4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_22350C3FC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  _BYTE v20[8];
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      v20[0] = 0;
      v21 = 0;
      sub_22350C720((uint64_t *)(v8 + 88), v5, (uint64_t)v20);
      if (v21)
        MEMORY[0x227684B68](v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_22350C5C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    MEMORY[0x227684B68](&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22350C6A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE25Enque"
                     "ueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvL"
                                "b0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22350C714()
{
  return &unk_24EC43A90;
}

void sub_22350C720(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 276, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v6, a2);
  if (*(_BYTE *)(a3 + 8))
    std::promise<void>::set_value((std::promise<void> *)a3);
}

void sub_22350C7B8()
{
  __break(1u);
}

void sub_22350C864(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x22350C884);
}

_QWORD *sub_22350C890(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC43AB0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22350C8C8(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC43AB0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350C910(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC43AB0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_22350C960(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC43AB0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_22350C990(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22350C9A0(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22350C9CC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  _BYTE v8[8];
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v8[0] = 0;
        v9 = 0;
        sub_22350C720((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)v8);
        if (v9)
          MEMORY[0x227684B68](v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22350CA74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    MEMORY[0x227684B68](&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22350CAC0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvL"
                                "b0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22350CB2C()
{
  return &unk_24EC43B10;
}

_QWORD *sub_22350CB38(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC43B30;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_22350CBC0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC43B30;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_22350CC58(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC43B30;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_22350CCE8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC43B30;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_22350CD58(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_22350CDD8(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_22350CE54(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_22350C720(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    MEMORY[0x227684B68](&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_22350D108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11, std::exception_ptr a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22350D260(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE25Enque"
                     "ueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIvEEEUlT_T0_E_EEvSA_SE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvL"
                                "b0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIvEEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIvEEEUlT_T0_E_EEvSA_SE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIvEEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22350D2CC()
{
  return &unk_24EC43B90;
}

_QWORD *sub_22350D2D8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC43BB0;
  v2 = (std::__shared_weak_count *)a1[5];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_22350D354(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC43BB0;
  v2 = (std::__shared_weak_count *)a1[5];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  std::__shared_weak_count::__release_weak(v5);
LABEL_9:
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350D3E0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC43BB0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[5];
  result[4] = a1[4];
  result[5] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_22350D450(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC43BB0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[5];
  a2[4] = result[4];
  a2[5] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_22350D4A0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
}

void sub_22350D510(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (std::__shared_weak_count *)__p[5];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (std::__shared_weak_count *)__p[2];
      if (!v5)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = (std::__shared_weak_count *)__p[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  operator delete(__p);
}

void sub_22350D580(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[4];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_22350C720((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    MEMORY[0x227684B68](&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_22350D694(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::runtime_error a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (LOBYTE(a11.__imp_.__imp_))
    MEMORY[0x227684B68](&a11);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22350D73C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE7Proces"
                     "sERKS6_NSt3__17promiseIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvL"
                                "b0EE7ProcessERKS6_NSt3__17promiseIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE7ProcessERKS6_NSt3__17promiseIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE7ProcessERKS6_NSt3__17promiseIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22350D7A8()
{
  return &unk_24EC43C10;
}

_QWORD *sub_22350D7B4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC43C30;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22350D7EC(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC43C30;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350D834(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC43C30;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_22350D884(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC43C30;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_22350D8B4(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22350D8C4(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22350D8F0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 96);
        v7 = (_QWORD *)(v5 + 96);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22350D984(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22350D9C0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE9Subscri"
                     "beENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb"
                                "0EE9SubscribeENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE9SubscribeENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE9SubscribeENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22350DA2C()
{
  return &unk_24EC43C90;
}

_QWORD *sub_22350DA38(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC43CB0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22350DA70(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC43CB0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350DAB8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC43CB0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_22350DB08(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC43CB0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_22350DB38(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22350DB48(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22350DB74(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22350DC08(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22350DC44(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE15AddErr"
                     "orHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb"
                                "0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22350DCB0()
{
  return &unk_24EC43D10;
}

_QWORD *sub_22350DCBC(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC43D30;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22350DCF4(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC43D30;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350DD3C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC43D30;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22350DD94(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC43D30;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22350DDCC(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22350DDDC(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22350DE08(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22350DEC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22350DF0C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE16Outpu"
                     "tHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvL"
                                "b0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22350DF78()
{
  return &unk_24EC43D90;
}

_QWORD *sub_22350DF84(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC43DB0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22350DFBC(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC43DB0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350E004(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC43DB0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22350E05C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC43DB0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22350E094(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22350E0A4(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22350E0D0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22350E188(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22350E1D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE15Error"
                     "HandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvL"
                                "b0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng25KeyframePlaneResetRequestEvvvLb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22350E240()
{
  return &unk_24EC43E10;
}

void sub_22350E250(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22350E274(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_22350E28C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng25KeyframePlaneResetRequ"
                     "estEvvvLb0EEEE27__shared_ptr_default_deleteIS9_S9_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng25KeyframePla"
                                "neResetRequestEvvvLb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng25KeyframePlaneResetRequestEvvvLb0EEEE27__shared_ptr_default_deleteIS9_S9_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng25KeyframePlaneResetRequestEvvvLb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_22350E2FC(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22350E328(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22350E364@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC43E80;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_22350E3CC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22350E45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22350E470(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22350E500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22350E514(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22350E5D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22350E5EC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22350E6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22350E6C4(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_22350E768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22350E77C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22350E7E4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22350E84C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 64))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_22350E85C(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC41AD8;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC2E888;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC41B08;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_22350EA40(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC41A70;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC37EE8;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC41AA0;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_22350EC24(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC41A08;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC37DE0;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC41A38;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_22350EE08(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC419A0;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC41968;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC419D0;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_22350EFEC(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC41938;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC41968;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC2B348;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t *sub_22350F1D0(uint64_t *result, uint64_t a2)
{
  uint64_t v2;

  v2 = *result;
  *result = a2;
  if (v2)
  {
    sub_2234EF0F8(v2 + 1008);
    sub_22350E85C(v2 + 840);
    sub_2234EE968(v2 + 672);
    sub_22350EA40(v2 + 504);
    sub_22350EC24(v2 + 336);
    sub_22350EE08(v2 + 168);
    sub_22350EFEC(v2);
    JUMPOUT(0x227684CE8);
  }
  return result;
}

uint64_t sub_22350F248(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;

  *(_QWORD *)a1 = &off_24EC41908;
  v2 = (uint64_t *)(a1 + 72);
  sub_22350F1D0((uint64_t *)(a1 + 72), 0);
  v3 = *(std::__shared_weak_count **)(a1 + 64);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  if (!v3)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    sub_22350F1D0(v2, 0);
    v6 = *(std::__shared_weak_count **)(a1 + 64);
    if (!v6)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    sub_22350F1D0(v2, 0);
    v6 = *(std::__shared_weak_count **)(a1 + 64);
    if (!v6)
      goto LABEL_11;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_11:
  if (*(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
  }
  else if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    return a1;
  }
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_22350F360(uint64_t a1, uint64_t *a2)
{
  void **v4;
  void **v5;
  void **v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  void **v15;
  void **v16;
  _BYTE *v17;
  size_t v18;
  char *v19;
  void **v20;
  char *v21;
  void **v22;
  char *v23;
  void **v24;
  char *v25;
  char *v26;
  void **v27;
  char *v28;
  void **v29;
  char *v30;
  void **v31;
  char *v32;
  char *v33;
  void **v34;
  char *v35;
  char *v36;
  void **v37;
  void **v38;
  char *v39;
  void **v40;
  char *v41;
  void **v42;
  char *v43;
  void **v44;
  char *v45;
  char *v46;
  void **v47;
  void **v48;
  char *v49;
  char *v50;
  void **v51;
  char *v52;
  char *v53;
  void **v54;
  void **v55;
  char *v56;
  char *v57;
  void **v58;
  char *v59;
  char *v60;
  void **v61;
  void **v62;
  char *v63;
  void **v64;
  char *v65;
  char *v66;
  void **v67;
  void **v68;
  char *v69;
  char *v70;
  void **v71;
  void **v73;
  void **v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE __p[24];
  void *__dst[2];
  uint64_t v79;

  *(_OWORD *)(a1 + 8) = 0u;
  v4 = (void **)(a1 + 8);
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  v75 = a1 + 64;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  v5 = (void **)(a1 + 120);
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  v6 = (void **)(a1 + 176);
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  v7 = a1 + 232;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  v8 = (void **)(a1 + 344);
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  v9 = a1 + 456;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 696) = 0u;
  *(_OWORD *)(a1 + 712) = 0u;
  v74 = (void **)(a1 + 680);
  *(_OWORD *)(a1 + 680) = 0u;
  *(_OWORD *)(a1 + 752) = 0u;
  *(_OWORD *)(a1 + 768) = 0u;
  *(_OWORD *)(a1 + 736) = 0u;
  v10 = a1 + 792;
  *(_OWORD *)(a1 + 808) = 0u;
  *(_OWORD *)(a1 + 824) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 864) = 0u;
  *(_OWORD *)(a1 + 880) = 0u;
  *(_OWORD *)(a1 + 848) = 0u;
  *(_OWORD *)(a1 + 920) = 0u;
  *(_OWORD *)(a1 + 936) = 0u;
  v76 = a1 + 904;
  *(_OWORD *)(a1 + 904) = 0u;
  *(_OWORD *)(a1 + 976) = 0u;
  *(_OWORD *)(a1 + 992) = 0u;
  *(_OWORD *)(a1 + 960) = 0u;
  *(_OWORD *)(a1 + 1032) = 0u;
  *(_OWORD *)(a1 + 1048) = 0u;
  v73 = (void **)(a1 + 1016);
  *(_OWORD *)(a1 + 1016) = 0u;
  *(_OWORD *)(a1 + 1152) = 0u;
  *(_OWORD *)(a1 + 1136) = 0u;
  *(_OWORD *)(a1 + 1120) = 0u;
  *(_OWORD *)(a1 + 1104) = 0u;
  *(_OWORD *)(a1 + 1088) = 0u;
  *(_OWORD *)(a1 + 1072) = 0u;
  *(_QWORD *)a1 = &off_24EC43F38;
  *(_QWORD *)(a1 + 56) = &unk_24EC43FF8;
  *(_QWORD *)(a1 + 112) = &unk_24EC44020;
  *(_QWORD *)(a1 + 168) = &unk_24EC44048;
  *(_QWORD *)(a1 + 224) = &unk_24EC44070;
  *(_QWORD *)(a1 + 280) = &unk_24EC44098;
  *(_QWORD *)(a1 + 336) = &unk_24EC440C0;
  *(_QWORD *)(a1 + 392) = &unk_24EC440E8;
  *(_QWORD *)(a1 + 448) = &unk_24EC44110;
  *(_QWORD *)(a1 + 504) = &unk_24EC44138;
  *(_QWORD *)(a1 + 560) = &unk_24EC44160;
  *(_QWORD *)(a1 + 616) = &unk_24EC44188;
  *(_QWORD *)(a1 + 672) = &unk_24EC441B0;
  *(_QWORD *)(a1 + 728) = &unk_24EC441D8;
  *(_QWORD *)(a1 + 784) = &unk_24EC44200;
  *(_QWORD *)(a1 + 840) = &unk_24EC44228;
  *(_QWORD *)(a1 + 896) = &unk_24EC44250;
  *(_QWORD *)(a1 + 952) = &unk_24EC44278;
  *(_QWORD *)(a1 + 1008) = &unk_24EC442A0;
  *(_QWORD *)(a1 + 1064) = &unk_24EC442C8;
  v11 = *a2;
  *(_QWORD *)(a1 + 1168) = *a2;
  if (v11)
  {
    v12 = (_QWORD *)operator new();
    v13 = *a2;
    *v12 = &off_24EC44B70;
    v12[1] = 0;
    v12[2] = 0;
    v12[3] = v13;
  }
  else
  {
    v12 = 0;
  }
  *(_QWORD *)(a1 + 1176) = v12;
  *a2 = 0;
  HIBYTE(v79) = 13;
  strcpy((char *)__dst, "Keyframe Node");
  v14 = (char *)operator new(0x28uLL);
  v15 = (void **)(a1 + 1120);
  *(_QWORD *)__p = v14;
  *(_OWORD *)&__p[8] = xmmword_2245C4640;
  strcpy(v14, "Handles keyframe based mapping task.");
  if ((void **)(a1 + 1120) != __dst)
  {
    if (*(char *)(a1 + 1143) < 0)
    {
      sub_22319C4B8(v15, __dst, 0xDuLL);
    }
    else
    {
      *(_OWORD *)v15 = *(_OWORD *)__dst;
      *(_QWORD *)(a1 + 1136) = v79;
    }
  }
  v16 = (void **)(a1 + 1144);
  if ((_BYTE *)(a1 + 1144) != __p)
  {
    if (*(char *)(a1 + 1167) < 0)
    {
      if (__p[23] >= 0)
        v17 = __p;
      else
        v17 = *(_BYTE **)__p;
      if (__p[23] >= 0)
        v18 = __p[23];
      else
        v18 = *(_QWORD *)&__p[8];
      sub_22319C4B8(v16, v17, v18);
    }
    else if ((__p[23] & 0x80) != 0)
    {
      sub_22319C3F4(v16, *(void **)__p, *(size_t *)&__p[8]);
    }
    else
    {
      *(_OWORD *)v16 = *(_OWORD *)__p;
      *(_QWORD *)(a1 + 1160) = *(_QWORD *)&__p[16];
    }
  }
  if ((__p[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)__p);
    if ((SHIBYTE(v79) & 0x80000000) == 0)
      goto LABEL_22;
  }
  else if ((SHIBYTE(v79) & 0x80000000) == 0)
  {
    goto LABEL_22;
  }
  operator delete(__dst[0]);
LABEL_22:
  v19 = (char *)operator new(0x58uLL);
  strcpy(v19, "Given a frame bundle, processes the data and updates the keyframe representation");
  if (*(char *)(a1 + 31) < 0)
    operator delete(*v4);
  strcpy((char *)(a1 + 8), "Process Frame Bundle");
  *(_BYTE *)(a1 + 31) = 20;
  sub_223197FA4(__dst, v19, 0x50uLL);
  v20 = (void **)(a1 + 32);
  if (*(char *)(a1 + 55) < 0)
    operator delete(*v20);
  *(_OWORD *)v20 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 48) = v79;
  operator delete(v19);
  v21 = (char *)operator new(0x28uLL);
  strcpy(v21, "Resets the current keyframe map.");
  if (*(char *)(a1 + 143) < 0)
    operator delete(*v5);
  strcpy((char *)(a1 + 120), "Reset Session");
  *(_WORD *)(a1 + 134) = 0;
  *(_BYTE *)(a1 + 143) = 13;
  sub_223197FA4(__dst, v21, 0x20uLL);
  v22 = (void **)(a1 + 144);
  if (*(char *)(a1 + 167) < 0)
    operator delete(*v22);
  *(_OWORD *)v22 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 160) = v79;
  operator delete(v21);
  v23 = (char *)operator new(0x28uLL);
  strcpy(v23, "Wait for ongoing process to finish.");
  if (*(char *)(a1 + 199) < 0)
    operator delete(*v6);
  strcpy((char *)(a1 + 176), "Wait Session");
  *(_BYTE *)(a1 + 189) = 0;
  *(_WORD *)(a1 + 190) = 0;
  *(_BYTE *)(a1 + 199) = 12;
  sub_223197FA4(__dst, v23, 0x23uLL);
  v24 = (void **)(a1 + 200);
  if (*(char *)(a1 + 223) < 0)
    operator delete(*v24);
  *(_OWORD *)v24 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 216) = v79;
  operator delete(v23);
  v25 = (char *)operator new(0x20uLL);
  strcpy(v25, "Filesystem access granted");
  v26 = (char *)operator new(0x38uLL);
  strcpy(v26, "Inform the session about granted filesystem access.");
  sub_223197FA4(__dst, v25, 0x19uLL);
  if (*(char *)(a1 + 255) < 0)
    operator delete(*(void **)v7);
  *(_OWORD *)v7 = *(_OWORD *)__dst;
  *(_QWORD *)(v7 + 16) = v79;
  sub_223197FA4(__dst, v26, 0x33uLL);
  v27 = (void **)(a1 + 256);
  if (*(char *)(a1 + 279) < 0)
    operator delete(*v27);
  *(_OWORD *)v27 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 272) = v79;
  operator delete(v26);
  operator delete(v25);
  v28 = (char *)operator new(0x38uLL);
  strcpy(v28, "Takes a snapshot with all keyframes and their metadata");
  if (*(char *)(a1 + 367) < 0)
    operator delete(*v8);
  strcpy((char *)(a1 + 344), "Save Snapshot");
  *(_WORD *)(a1 + 358) = 0;
  *(_BYTE *)(a1 + 367) = 13;
  sub_223197FA4(__dst, v28, 0x36uLL);
  v29 = (void **)(a1 + 368);
  if (*(char *)(a1 + 391) < 0)
    operator delete(*v29);
  *(_OWORD *)v29 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 384) = v79;
  operator delete(v28);
  v30 = (char *)operator new(0x60uLL);
  strcpy(v30, "Takes a snapshot with all keyframes and their metadata, and copies it to the given directory.");
  if (*(char *)(a1 + 423) < 0)
    operator delete(*(void **)(a1 + 400));
  strcpy((char *)(a1 + 400), "Save Snapshot to");
  *(_BYTE *)(a1 + 423) = 16;
  sub_223197FA4(__dst, v30, 0x5DuLL);
  v31 = (void **)(a1 + 424);
  if (*(char *)(a1 + 447) < 0)
    operator delete(*v31);
  *(_OWORD *)v31 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 440) = v79;
  operator delete(v30);
  v32 = (char *)operator new(0x20uLL);
  strcpy(v32, "Save keyframe diagnostic data");
  v33 = (char *)operator new(0x48uLL);
  strcpy(v33, "Saves different modalities of keyframes and their metadata to disk.");
  sub_223197FA4(__dst, v32, 0x1DuLL);
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)v9);
  *(_OWORD *)v9 = *(_OWORD *)__dst;
  *(_QWORD *)(v9 + 16) = v79;
  sub_223197FA4(__dst, v33, 0x43uLL);
  v34 = (void **)(a1 + 480);
  if (*(char *)(a1 + 503) < 0)
    operator delete(*v34);
  *(_OWORD *)v34 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 496) = v79;
  operator delete(v33);
  operator delete(v32);
  v35 = (char *)operator new(0x20uLL);
  strcpy(v35, "Localize restored keyframes");
  v36 = (char *)operator new(0x28uLL);
  strcpy(v36, "Localizes all restored keyframes.");
  sub_223197FA4(__dst, v35, 0x1BuLL);
  v37 = (void **)(a1 + 288);
  if (*(char *)(a1 + 311) < 0)
    operator delete(*v37);
  *(_OWORD *)v37 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 304) = v79;
  sub_223197FA4(__dst, v36, 0x21uLL);
  v38 = (void **)(a1 + 312);
  if (*(char *)(a1 + 335) < 0)
    operator delete(*v38);
  *(_OWORD *)v38 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 328) = v79;
  operator delete(v36);
  operator delete(v35);
  v39 = (char *)operator new(0x28uLL);
  strcpy(v39, "Saves keyframes independently to files.");
  if (*(char *)(a1 + 535) < 0)
    operator delete(*(void **)(a1 + 512));
  strcpy((char *)(a1 + 512), "Save Keyframes");
  *(_BYTE *)(a1 + 527) = 0;
  *(_BYTE *)(a1 + 535) = 14;
  sub_223197FA4(__dst, v39, 0x27uLL);
  v40 = (void **)(a1 + 536);
  if (*(char *)(a1 + 559) < 0)
    operator delete(*v40);
  *(_OWORD *)v40 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 552) = v79;
  operator delete(v39);
  v41 = (char *)operator new(0x38uLL);
  strcpy(v41, "Get list of all the keyframes that fit in memory.");
  if (*(char *)(a1 + 647) < 0)
    operator delete(*(void **)(a1 + 624));
  strcpy((char *)(a1 + 624), "Get all Keyframes");
  *(_BYTE *)(a1 + 647) = 17;
  sub_223197FA4(__dst, v41, 0x31uLL);
  v42 = (void **)(a1 + 648);
  if (*(char *)(a1 + 671) < 0)
    operator delete(*v42);
  *(_OWORD *)v42 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 664) = v79;
  operator delete(v41);
  v43 = (char *)operator new(0x38uLL);
  strcpy(v43, "Get list of nearby keyframes in memory with valid pose.");
  if (*(char *)(a1 + 703) < 0)
    operator delete(*v74);
  strcpy((char *)(a1 + 680), "Get nearby Keyframes");
  *(_BYTE *)(a1 + 703) = 20;
  sub_223197FA4(__dst, v43, 0x37uLL);
  v44 = (void **)(a1 + 704);
  if (*(char *)(a1 + 727) < 0)
    operator delete(*v44);
  *(_OWORD *)v44 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 720) = v79;
  operator delete(v43);
  v45 = (char *)operator new(0x20uLL);
  strcpy(v45, "Flush pending update keyframes");
  v46 = (char *)operator new(0x50uLL);
  strcpy(v46, "Get a list of keyframes (no more than maximum batch size) that are in backlog.");
  sub_223197FA4(__dst, v45, 0x1EuLL);
  v47 = (void **)(a1 + 736);
  if (*(char *)(a1 + 759) < 0)
    operator delete(*v47);
  *(_OWORD *)v47 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 752) = v79;
  sub_223197FA4(__dst, v46, 0x4EuLL);
  v48 = (void **)(a1 + 760);
  if (*(char *)(a1 + 783) < 0)
    operator delete(*v48);
  *(_OWORD *)v48 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 776) = v79;
  operator delete(v46);
  operator delete(v45);
  v49 = (char *)operator new(0x38uLL);
  strcpy(v49, "Global reference system flush pending update keyframes.");
  v50 = (char *)operator new(0x58uLL);
  strcpy(v50, "Get a list of keyframes that are required by global reference system for remeshing.");
  sub_223197FA4(__dst, v49, 0x37uLL);
  if (*(char *)(a1 + 815) < 0)
    operator delete(*(void **)v10);
  *(_OWORD *)v10 = *(_OWORD *)__dst;
  *(_QWORD *)(v10 + 16) = v79;
  sub_223197FA4(__dst, v50, 0x53uLL);
  v51 = (void **)(a1 + 816);
  if (*(char *)(a1 + 839) < 0)
    operator delete(*v51);
  *(_OWORD *)v51 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 832) = v79;
  operator delete(v50);
  operator delete(v49);
  v52 = (char *)operator new(0x28uLL);
  strcpy(v52, "Get keyframes overlapping frustum");
  v53 = (char *)operator new(0x30uLL);
  strcpy(v53, "Get list of keyframes that overlap a frustum.");
  sub_223197FA4(__dst, v52, 0x21uLL);
  v54 = (void **)(a1 + 848);
  if (*(char *)(a1 + 871) < 0)
    operator delete(*v54);
  *(_OWORD *)v54 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 864) = v79;
  sub_223197FA4(__dst, v53, 0x2DuLL);
  v55 = (void **)(a1 + 872);
  if (*(char *)(a1 + 895) < 0)
    operator delete(*v55);
  *(_OWORD *)v55 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 888) = v79;
  operator delete(v53);
  operator delete(v52);
  v56 = (char *)operator new(0x20uLL);
  strcpy(v56, "Get keyframes in a sphere");
  v57 = (char *)operator new(0x40uLL);
  strcpy(v57, "Get list of keyframes uuid that are contained in a sphere.");
  sub_223197FA4(__dst, v56, 0x19uLL);
  if (*(char *)(a1 + 927) < 0)
    operator delete(*(void **)v76);
  *(_OWORD *)v76 = *(_OWORD *)__dst;
  *(_QWORD *)(v76 + 16) = v79;
  sub_223197FA4(__dst, v57, 0x3AuLL);
  v58 = (void **)(a1 + 928);
  if (*(char *)(a1 + 951) < 0)
    operator delete(*v58);
  *(_OWORD *)v58 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 944) = v79;
  operator delete(v57);
  operator delete(v56);
  v59 = (char *)operator new(0x28uLL);
  strcpy(v59, "Get keyframes updated after timestamp");
  v60 = (char *)operator new(0x48uLL);
  strcpy(v60, "Get list of keyframes uuid that have been updated after a timestamp.");
  sub_223197FA4(__dst, v59, 0x25uLL);
  v61 = (void **)(a1 + 960);
  if (*(char *)(a1 + 983) < 0)
    operator delete(*v61);
  *(_OWORD *)v61 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 976) = v79;
  sub_223197FA4(__dst, v60, 0x44uLL);
  v62 = (void **)(a1 + 984);
  if (*(char *)(a1 + 1007) < 0)
    operator delete(*v62);
  *(_OWORD *)v62 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 1000) = v79;
  operator delete(v60);
  operator delete(v59);
  v63 = (char *)operator new(0x28uLL);
  strcpy(v63, "Get keyframe associated to the uuid.");
  if (*(char *)(a1 + 1039) < 0)
    operator delete(*v73);
  strcpy((char *)(a1 + 1016), "Get keyframe from uuid");
  *(_BYTE *)(a1 + 1039) = 22;
  sub_223197FA4(__dst, v63, 0x24uLL);
  v64 = (void **)(a1 + 1040);
  if (*(char *)(a1 + 1063) < 0)
    operator delete(*v64);
  *(_OWORD *)v64 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 1056) = v79;
  operator delete(v63);
  v65 = (char *)operator new(0x28uLL);
  strcpy(v65, "Invalidate color of all keyframes");
  v66 = (char *)operator new(0x38uLL);
  strcpy(v66, "Clear color image of all the keyframes in memory.");
  sub_223197FA4(__dst, v65, 0x21uLL);
  v67 = (void **)(a1 + 1072);
  if (*(char *)(a1 + 1095) < 0)
    operator delete(*v67);
  *(_OWORD *)v67 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 1088) = v79;
  sub_223197FA4(__dst, v66, 0x31uLL);
  v68 = (void **)(a1 + 1096);
  if (*(char *)(a1 + 1119) < 0)
    operator delete(*v68);
  *(_OWORD *)v68 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 1112) = v79;
  operator delete(v66);
  operator delete(v65);
  v69 = (char *)operator new(0x20uLL);
  strcpy(v69, "Process Frame Bundle Sync");
  v70 = (char *)operator new(0x80uLL);
  strcpy(v70, "Given a frame bundle, processes the data and updates the keyframe representation without forwarding the result to anything.");
  sub_223197FA4(__dst, v69, 0x19uLL);
  if (*(char *)(a1 + 87) < 0)
    operator delete(*(void **)v75);
  *(_OWORD *)v75 = *(_OWORD *)__dst;
  *(_QWORD *)(v75 + 16) = v79;
  sub_223197FA4(__dst, v70, 0x7BuLL);
  v71 = (void **)(a1 + 88);
  if (*(char *)(a1 + 111) < 0)
    operator delete(*v71);
  *(_OWORD *)v71 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 104) = v79;
  operator delete(v70);
  operator delete(v69);
  return a1;
}

void sub_2235104E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  uint64_t v24;

  if (a18 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  sub_223167354(v24 + 1168);
  sub_223510670(v24);
  _Unwind_Resume(a1);
}

uint64_t sub_223510670(uint64_t a1)
{
  *(_QWORD *)a1 = off_24EC44580;
  *(_QWORD *)(a1 + 56) = &unk_24EC445A8;
  *(_QWORD *)(a1 + 112) = &unk_24EC445D0;
  *(_QWORD *)(a1 + 168) = &unk_24EC445F8;
  *(_QWORD *)(a1 + 224) = &unk_24EC44620;
  *(_QWORD *)(a1 + 280) = &unk_24EC44648;
  *(_QWORD *)(a1 + 336) = &unk_24EC44670;
  *(_QWORD *)(a1 + 392) = &unk_24EC44698;
  *(_QWORD *)(a1 + 448) = &unk_24EC446C0;
  *(_QWORD *)(a1 + 504) = &unk_24EC446E8;
  *(_QWORD *)(a1 + 560) = &unk_24EC44710;
  *(_QWORD *)(a1 + 616) = &unk_24EC44738;
  *(_QWORD *)(a1 + 672) = &unk_24EC44760;
  *(_QWORD *)(a1 + 728) = &unk_24EC44788;
  *(_QWORD *)(a1 + 784) = &unk_24EC447B0;
  *(_QWORD *)(a1 + 840) = &unk_24EC447D8;
  *(_QWORD *)(a1 + 896) = &unk_24EC44800;
  *(_QWORD *)(a1 + 952) = &unk_24EC44828;
  *(_QWORD *)(a1 + 1008) = &unk_24EC44850;
  *(_QWORD *)(a1 + 1064) = &unk_24EC44878;
  if (*(char *)(a1 + 1167) < 0)
  {
    operator delete(*(void **)(a1 + 1144));
    if ((*(char *)(a1 + 1143) & 0x80000000) == 0)
    {
LABEL_3:
      *(_QWORD *)(a1 + 1064) = off_24EC44B48;
      if ((*(char *)(a1 + 1119) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_46;
    }
  }
  else if ((*(char *)(a1 + 1143) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 1120));
  *(_QWORD *)(a1 + 1064) = off_24EC44B48;
  if ((*(char *)(a1 + 1119) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(a1 + 1095) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_47;
  }
LABEL_46:
  operator delete(*(void **)(a1 + 1096));
  if ((*(char *)(a1 + 1095) & 0x80000000) == 0)
  {
LABEL_5:
    *(_QWORD *)(a1 + 1008) = off_24EC44B20;
    if ((*(char *)(a1 + 1063) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_48;
  }
LABEL_47:
  operator delete(*(void **)(a1 + 1072));
  *(_QWORD *)(a1 + 1008) = off_24EC44B20;
  if ((*(char *)(a1 + 1063) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(a1 + 1039) & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_49;
  }
LABEL_48:
  operator delete(*(void **)(a1 + 1040));
  if ((*(char *)(a1 + 1039) & 0x80000000) == 0)
  {
LABEL_7:
    *(_QWORD *)(a1 + 952) = off_24EC44AF8;
    if ((*(char *)(a1 + 1007) & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_50;
  }
LABEL_49:
  operator delete(*(void **)(a1 + 1016));
  *(_QWORD *)(a1 + 952) = off_24EC44AF8;
  if ((*(char *)(a1 + 1007) & 0x80000000) == 0)
  {
LABEL_8:
    if ((*(char *)(a1 + 983) & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_51;
  }
LABEL_50:
  operator delete(*(void **)(a1 + 984));
  if ((*(char *)(a1 + 983) & 0x80000000) == 0)
  {
LABEL_9:
    *(_QWORD *)(a1 + 896) = off_24EC44AD0;
    if ((*(char *)(a1 + 951) & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_52;
  }
LABEL_51:
  operator delete(*(void **)(a1 + 960));
  *(_QWORD *)(a1 + 896) = off_24EC44AD0;
  if ((*(char *)(a1 + 951) & 0x80000000) == 0)
  {
LABEL_10:
    if ((*(char *)(a1 + 927) & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_53;
  }
LABEL_52:
  operator delete(*(void **)(a1 + 928));
  if ((*(char *)(a1 + 927) & 0x80000000) == 0)
  {
LABEL_11:
    *(_QWORD *)(a1 + 840) = off_24EC44AA8;
    if ((*(char *)(a1 + 895) & 0x80000000) == 0)
      goto LABEL_12;
    goto LABEL_54;
  }
LABEL_53:
  operator delete(*(void **)(a1 + 904));
  *(_QWORD *)(a1 + 840) = off_24EC44AA8;
  if ((*(char *)(a1 + 895) & 0x80000000) == 0)
  {
LABEL_12:
    if ((*(char *)(a1 + 871) & 0x80000000) == 0)
      goto LABEL_13;
    goto LABEL_55;
  }
LABEL_54:
  operator delete(*(void **)(a1 + 872));
  if ((*(char *)(a1 + 871) & 0x80000000) == 0)
  {
LABEL_13:
    *(_QWORD *)(a1 + 784) = off_24EC44A80;
    if ((*(char *)(a1 + 839) & 0x80000000) == 0)
      goto LABEL_14;
    goto LABEL_56;
  }
LABEL_55:
  operator delete(*(void **)(a1 + 848));
  *(_QWORD *)(a1 + 784) = off_24EC44A80;
  if ((*(char *)(a1 + 839) & 0x80000000) == 0)
  {
LABEL_14:
    if ((*(char *)(a1 + 815) & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_57;
  }
LABEL_56:
  operator delete(*(void **)(a1 + 816));
  if ((*(char *)(a1 + 815) & 0x80000000) == 0)
  {
LABEL_15:
    *(_QWORD *)(a1 + 728) = off_24EC44A58;
    if ((*(char *)(a1 + 783) & 0x80000000) == 0)
      goto LABEL_16;
    goto LABEL_58;
  }
LABEL_57:
  operator delete(*(void **)(a1 + 792));
  *(_QWORD *)(a1 + 728) = off_24EC44A58;
  if ((*(char *)(a1 + 783) & 0x80000000) == 0)
  {
LABEL_16:
    if ((*(char *)(a1 + 759) & 0x80000000) == 0)
      goto LABEL_17;
    goto LABEL_59;
  }
LABEL_58:
  operator delete(*(void **)(a1 + 760));
  if ((*(char *)(a1 + 759) & 0x80000000) == 0)
  {
LABEL_17:
    *(_QWORD *)(a1 + 672) = off_24EC44A30;
    if ((*(char *)(a1 + 727) & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_60;
  }
LABEL_59:
  operator delete(*(void **)(a1 + 736));
  *(_QWORD *)(a1 + 672) = off_24EC44A30;
  if ((*(char *)(a1 + 727) & 0x80000000) == 0)
  {
LABEL_18:
    if ((*(char *)(a1 + 703) & 0x80000000) == 0)
      goto LABEL_19;
    goto LABEL_61;
  }
LABEL_60:
  operator delete(*(void **)(a1 + 704));
  if ((*(char *)(a1 + 703) & 0x80000000) == 0)
  {
LABEL_19:
    *(_QWORD *)(a1 + 616) = off_24EC44A08;
    if ((*(char *)(a1 + 671) & 0x80000000) == 0)
      goto LABEL_20;
    goto LABEL_62;
  }
LABEL_61:
  operator delete(*(void **)(a1 + 680));
  *(_QWORD *)(a1 + 616) = off_24EC44A08;
  if ((*(char *)(a1 + 671) & 0x80000000) == 0)
  {
LABEL_20:
    if ((*(char *)(a1 + 647) & 0x80000000) == 0)
      goto LABEL_21;
    goto LABEL_63;
  }
LABEL_62:
  operator delete(*(void **)(a1 + 648));
  if ((*(char *)(a1 + 647) & 0x80000000) == 0)
  {
LABEL_21:
    *(_QWORD *)(a1 + 560) = off_24EC449E0;
    if ((*(char *)(a1 + 615) & 0x80000000) == 0)
      goto LABEL_22;
    goto LABEL_64;
  }
LABEL_63:
  operator delete(*(void **)(a1 + 624));
  *(_QWORD *)(a1 + 560) = off_24EC449E0;
  if ((*(char *)(a1 + 615) & 0x80000000) == 0)
  {
LABEL_22:
    if ((*(char *)(a1 + 591) & 0x80000000) == 0)
      goto LABEL_23;
    goto LABEL_65;
  }
LABEL_64:
  operator delete(*(void **)(a1 + 592));
  if ((*(char *)(a1 + 591) & 0x80000000) == 0)
  {
LABEL_23:
    *(_QWORD *)(a1 + 504) = off_24EC449B8;
    if ((*(char *)(a1 + 559) & 0x80000000) == 0)
      goto LABEL_24;
    goto LABEL_66;
  }
LABEL_65:
  operator delete(*(void **)(a1 + 568));
  *(_QWORD *)(a1 + 504) = off_24EC449B8;
  if ((*(char *)(a1 + 559) & 0x80000000) == 0)
  {
LABEL_24:
    if ((*(char *)(a1 + 535) & 0x80000000) == 0)
      goto LABEL_25;
    goto LABEL_67;
  }
LABEL_66:
  operator delete(*(void **)(a1 + 536));
  if ((*(char *)(a1 + 535) & 0x80000000) == 0)
  {
LABEL_25:
    *(_QWORD *)(a1 + 448) = off_24EC41840;
    if ((*(char *)(a1 + 503) & 0x80000000) == 0)
      goto LABEL_26;
    goto LABEL_68;
  }
LABEL_67:
  operator delete(*(void **)(a1 + 512));
  *(_QWORD *)(a1 + 448) = off_24EC41840;
  if ((*(char *)(a1 + 503) & 0x80000000) == 0)
  {
LABEL_26:
    if ((*(char *)(a1 + 479) & 0x80000000) == 0)
      goto LABEL_27;
    goto LABEL_69;
  }
LABEL_68:
  operator delete(*(void **)(a1 + 480));
  if ((*(char *)(a1 + 479) & 0x80000000) == 0)
  {
LABEL_27:
    *(_QWORD *)(a1 + 392) = off_24EC44990;
    if ((*(char *)(a1 + 447) & 0x80000000) == 0)
      goto LABEL_28;
    goto LABEL_70;
  }
LABEL_69:
  operator delete(*(void **)(a1 + 456));
  *(_QWORD *)(a1 + 392) = off_24EC44990;
  if ((*(char *)(a1 + 447) & 0x80000000) == 0)
  {
LABEL_28:
    if ((*(char *)(a1 + 423) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_71;
  }
LABEL_70:
  operator delete(*(void **)(a1 + 424));
  if ((*(char *)(a1 + 423) & 0x80000000) == 0)
  {
LABEL_29:
    *(_QWORD *)(a1 + 336) = off_24EC44968;
    if ((*(char *)(a1 + 391) & 0x80000000) == 0)
      goto LABEL_30;
    goto LABEL_72;
  }
LABEL_71:
  operator delete(*(void **)(a1 + 400));
  *(_QWORD *)(a1 + 336) = off_24EC44968;
  if ((*(char *)(a1 + 391) & 0x80000000) == 0)
  {
LABEL_30:
    if ((*(char *)(a1 + 367) & 0x80000000) == 0)
      goto LABEL_31;
    goto LABEL_73;
  }
LABEL_72:
  operator delete(*(void **)(a1 + 368));
  if ((*(char *)(a1 + 367) & 0x80000000) == 0)
  {
LABEL_31:
    *(_QWORD *)(a1 + 280) = off_24EC44940;
    if ((*(char *)(a1 + 335) & 0x80000000) == 0)
      goto LABEL_32;
    goto LABEL_74;
  }
LABEL_73:
  operator delete(*(void **)(a1 + 344));
  *(_QWORD *)(a1 + 280) = off_24EC44940;
  if ((*(char *)(a1 + 335) & 0x80000000) == 0)
  {
LABEL_32:
    if ((*(char *)(a1 + 311) & 0x80000000) == 0)
      goto LABEL_33;
    goto LABEL_75;
  }
LABEL_74:
  operator delete(*(void **)(a1 + 312));
  if ((*(char *)(a1 + 311) & 0x80000000) == 0)
  {
LABEL_33:
    *(_QWORD *)(a1 + 224) = off_24EC41890;
    if ((*(char *)(a1 + 279) & 0x80000000) == 0)
      goto LABEL_34;
    goto LABEL_76;
  }
LABEL_75:
  operator delete(*(void **)(a1 + 288));
  *(_QWORD *)(a1 + 224) = off_24EC41890;
  if ((*(char *)(a1 + 279) & 0x80000000) == 0)
  {
LABEL_34:
    if ((*(char *)(a1 + 255) & 0x80000000) == 0)
      goto LABEL_35;
    goto LABEL_77;
  }
LABEL_76:
  operator delete(*(void **)(a1 + 256));
  if ((*(char *)(a1 + 255) & 0x80000000) == 0)
  {
LABEL_35:
    *(_QWORD *)(a1 + 168) = off_24EC44918;
    if ((*(char *)(a1 + 223) & 0x80000000) == 0)
      goto LABEL_36;
    goto LABEL_78;
  }
LABEL_77:
  operator delete(*(void **)(a1 + 232));
  *(_QWORD *)(a1 + 168) = off_24EC44918;
  if ((*(char *)(a1 + 223) & 0x80000000) == 0)
  {
LABEL_36:
    if ((*(char *)(a1 + 199) & 0x80000000) == 0)
      goto LABEL_37;
    goto LABEL_79;
  }
LABEL_78:
  operator delete(*(void **)(a1 + 200));
  if ((*(char *)(a1 + 199) & 0x80000000) == 0)
  {
LABEL_37:
    *(_QWORD *)(a1 + 112) = off_24EC448F0;
    if ((*(char *)(a1 + 167) & 0x80000000) == 0)
      goto LABEL_38;
    goto LABEL_80;
  }
LABEL_79:
  operator delete(*(void **)(a1 + 176));
  *(_QWORD *)(a1 + 112) = off_24EC448F0;
  if ((*(char *)(a1 + 167) & 0x80000000) == 0)
  {
LABEL_38:
    if ((*(char *)(a1 + 143) & 0x80000000) == 0)
      goto LABEL_39;
    goto LABEL_81;
  }
LABEL_80:
  operator delete(*(void **)(a1 + 144));
  if ((*(char *)(a1 + 143) & 0x80000000) == 0)
  {
LABEL_39:
    *(_QWORD *)(a1 + 56) = off_24EC448C8;
    if ((*(char *)(a1 + 111) & 0x80000000) == 0)
      goto LABEL_40;
    goto LABEL_82;
  }
LABEL_81:
  operator delete(*(void **)(a1 + 120));
  *(_QWORD *)(a1 + 56) = off_24EC448C8;
  if ((*(char *)(a1 + 111) & 0x80000000) == 0)
  {
LABEL_40:
    if ((*(char *)(a1 + 87) & 0x80000000) == 0)
      goto LABEL_41;
    goto LABEL_83;
  }
LABEL_82:
  operator delete(*(void **)(a1 + 88));
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
LABEL_41:
    *(_QWORD *)a1 = off_24EC448A0;
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_42;
LABEL_84:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_85;
  }
LABEL_83:
  operator delete(*(void **)(a1 + 64));
  *(_QWORD *)a1 = off_24EC448A0;
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_84;
LABEL_42:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_85:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_223510D0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_223510D1C(a3, *(_QWORD *)(a1 + 1168), a2);
}

void sub_223510D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  __int128 v8;
  void *__p;
  char v10;
  unsigned __int8 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  char v18;
  __int128 v19;
  __int128 v20;
  char v21;
  char v22;
  void *v23;
  char v24;
  void *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a2 + 16))(&v19, a2, a3);
  if (v29)
  {
    v4 = operator new(0xA08uLL);
    v4[1] = 0;
    v4[2] = 0;
    *v4 = &off_24EC44BC0;
    *(_QWORD *)a1 = sub_2235146D4((uint64_t)(v4 + 3), (uint64_t)&v19);
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    v8 = v19;
    v5 = sub_22319FFBC(&__p, &v20);
    *(_OWORD *)a1 = v8;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v18)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v6 = v11;
      if (v11)
      {
        *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)v5 + 2);
        *((_QWORD *)v5 + 1) = 0;
        *((_QWORD *)v5 + 2) = 0;
        *(_QWORD *)v5 = 0;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v17)
      {
        v7 = v14;
        *(_QWORD *)(a1 + 64) = v13;
        *(_OWORD *)(a1 + 48) = v12;
        v12 = 0uLL;
        *(_QWORD *)(a1 + 72) = v7;
        *(_OWORD *)(a1 + 80) = v15;
        *(_QWORD *)(a1 + 96) = v16;
        v13 = 0;
        v15 = 0uLL;
        v16 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v6 && v10 < 0)
        operator delete(__p);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
  }
  if (v29)
  {
    sub_2235141E0((uint64_t)&v19);
  }
  else if (v28)
  {
    if (v27)
    {
      if (v26 < 0)
        operator delete(v25);
      if (v24 < 0)
        operator delete(v23);
    }
    if (v22)
    {
      if (v21 < 0)
        operator delete((void *)v20);
    }
  }
}

void sub_223510F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  sub_223510F4C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223510F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  sub_223510F4C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223510F2C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_223510D1C(a3, *(_QWORD *)(a1 + 1168), a2);
}

void sub_223510F3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_223510D1C(a3, *(_QWORD *)(a1 + 1112), a2);
}

uint64_t sub_223510F4C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 2544))
  {
    sub_2235141E0(a1);
    return a1;
  }
  if (!*(_BYTE *)(a1 + 112))
    return a1;
  if (!*(_BYTE *)(a1 + 104))
    goto LABEL_8;
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_8;
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(_BYTE *)(a1 + 40))
      return a1;
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0)
    goto LABEL_12;
LABEL_8:
  if (!*(_BYTE *)(a1 + 40))
    return a1;
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)(a1 + 16));
  return a1;
}

uint64_t sub_223510FE8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1168) + 112))(*(_QWORD *)(a1 + 1168));
}

uint64_t sub_223510FF8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1056) + 112))(*(_QWORD *)(a1 + 1056));
}

uint64_t sub_223511008(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1168) + 120))(*(_QWORD *)(a1 + 1168));
}

uint64_t sub_223511018(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1000) + 120))(*(_QWORD *)(a1 + 1000));
}

uint64_t sub_223511028(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1168) + 128))(*(_QWORD *)(a1 + 1168));
}

uint64_t sub_223511038(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 944) + 128))(*(_QWORD *)(a1 + 944));
}

uint64_t sub_223511048(uint64_t a1, unsigned __int8 *a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 1168) + 136))(*(_QWORD *)(a1 + 1168), *a2);
}

uint64_t sub_22351105C(uint64_t a1, unsigned __int8 *a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 832) + 136))(*(_QWORD *)(a1 + 832), *a2);
}

_QWORD *sub_223511070@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD, _QWORD, unsigned __int8 *))(**(_QWORD **)(a1 + 1168)
                                                                                               + 144))(&v5, *(_QWORD *)(a1 + 1168), *a2, a2 + 8);
  *a3 = v5;
  return result;
}

_QWORD *sub_2235110B8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD, _QWORD, unsigned __int8 *))(**(_QWORD **)(a1 + 776)
                                                                                               + 144))(&v5, *(_QWORD *)(a1 + 776), *a2, a2 + 8);
  *a3 = v5;
  return result;
}

uint64_t sub_223511100(uint64_t a1, unsigned int *a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, unsigned int *))(**(_QWORD **)(a1 + 1168) + 152))(*(_QWORD *)(a1 + 1168), *a2, a2 + 2);
}

uint64_t sub_223511118(uint64_t a1, unsigned int *a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, unsigned int *))(**(_QWORD **)(a1 + 720) + 152))(*(_QWORD *)(a1 + 720), *a2, a2 + 2);
}

uint64_t sub_223511130(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1168) + 96))(*(_QWORD *)(a1 + 1168));
}

uint64_t sub_223511140(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 664) + 96))(*(_QWORD *)(a1 + 664));
}

uint64_t sub_223511150(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1168) + 104))(*(_QWORD *)(a1 + 1168));
}

uint64_t sub_223511160(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 608) + 104))(*(_QWORD *)(a1 + 608));
}

uint64_t sub_223511170(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1168) + 32))(*(_QWORD *)(a1 + 1168));
}

uint64_t sub_223511180(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 552) + 32))(*(_QWORD *)(a1 + 552));
}

uint64_t sub_223511190(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1168) + 40))(*(_QWORD *)(a1 + 1168));
}

uint64_t sub_2235111A0(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 496) + 40))(*(_QWORD *)(a1 + 496));
}

uint64_t sub_2235111B0(uint64_t a1, unsigned __int8 *a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 1168) + 160))(*(_QWORD *)(a1 + 1168), *a2);
}

uint64_t sub_2235111C4(uint64_t a1, unsigned __int8 *a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 888) + 160))(*(_QWORD *)(a1 + 888), *a2);
}

uint64_t sub_2235111D8(uint64_t a1)
{
  _DWORD v2[2];

  v2[0] = 3;
  v2[1] = 65792;
  return (*(uint64_t (**)(_QWORD, _DWORD *))(**(_QWORD **)(a1 + 1168) + 80))(*(_QWORD *)(a1 + 1168), v2);
}

uint64_t sub_223511218(uint64_t a1)
{
  _DWORD v2[2];

  v2[0] = 3;
  v2[1] = 65792;
  return (*(uint64_t (**)(_QWORD, _DWORD *))(**(_QWORD **)(a1 + 440) + 80))(*(_QWORD *)(a1 + 440), v2);
}

uint64_t sub_223511258(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 1168) + 88))(*(_QWORD *)(a1 + 1168), a2, a2 + 24);
}

uint64_t sub_22351126C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 384) + 88))(*(_QWORD *)(a1 + 384), a2, a2 + 24);
}

uint64_t sub_223511280(uint64_t a1, float *a2)
{
  return (*(uint64_t (**)(_QWORD, float, float, float, float))(**(_QWORD **)(a1 + 1168) + 48))(*(_QWORD *)(a1 + 1168), a2[16], a2[17], a2[18], a2[19]);
}

uint64_t sub_223511298(uint64_t a1, float *a2)
{
  return (*(uint64_t (**)(_QWORD, float, float, float, float))(**(_QWORD **)(a1 + 328) + 48))(*(_QWORD *)(a1 + 328), a2[16], a2[17], a2[18], a2[19]);
}

uint64_t sub_2235112B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, float))(**(_QWORD **)(a1 + 1168) + 56))(*(_QWORD *)(a1 + 1168), *(float *)(a2 + 12));
}

uint64_t sub_2235112C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, float))(**(_QWORD **)(a1 + 272) + 56))(*(_QWORD *)(a1 + 272), *(float *)(a2 + 12));
}

uint64_t sub_2235112D8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1168) + 64))(*(_QWORD *)(a1 + 1168));
}

uint64_t sub_2235112E8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 216) + 64))(*(_QWORD *)(a1 + 216));
}

uint64_t sub_2235112F8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1168) + 72))(*(_QWORD *)(a1 + 1168));
}

uint64_t sub_223511308(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 160) + 72))(*(_QWORD *)(a1 + 160));
}

uint64_t sub_223511318(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 1168) + 168))(*(_QWORD *)(a1 + 1168));
}

uint64_t sub_223511328(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 104) + 168))(*(_QWORD *)(a1 + 104));
}

uint64_t sub_223511338(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC43F38;
  a1[7] = &unk_24EC43FF8;
  a1[14] = &unk_24EC44020;
  a1[21] = &unk_24EC44048;
  a1[28] = &unk_24EC44070;
  a1[35] = &unk_24EC44098;
  a1[42] = &unk_24EC440C0;
  a1[49] = &unk_24EC440E8;
  a1[56] = &unk_24EC44110;
  a1[63] = &unk_24EC44138;
  a1[70] = &unk_24EC44160;
  a1[77] = &unk_24EC44188;
  a1[84] = &unk_24EC441B0;
  a1[91] = &unk_24EC441D8;
  a1[98] = &unk_24EC44200;
  a1[105] = &unk_24EC44228;
  a1[112] = &unk_24EC44250;
  a1[119] = &unk_24EC44278;
  a1[126] = &unk_24EC442A0;
  a1[133] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[147];
  if (!v2)
    return sub_223510670((uint64_t)a1);
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)a1);
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670((uint64_t)a1);
}

void sub_223511444(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC43F38;
  a1[7] = &unk_24EC43FF8;
  a1[14] = &unk_24EC44020;
  a1[21] = &unk_24EC44048;
  a1[28] = &unk_24EC44070;
  a1[35] = &unk_24EC44098;
  a1[42] = &unk_24EC440C0;
  a1[49] = &unk_24EC440E8;
  a1[56] = &unk_24EC44110;
  a1[63] = &unk_24EC44138;
  a1[70] = &unk_24EC44160;
  a1[77] = &unk_24EC44188;
  a1[84] = &unk_24EC441B0;
  a1[91] = &unk_24EC441D8;
  a1[98] = &unk_24EC44200;
  a1[105] = &unk_24EC44228;
  a1[112] = &unk_24EC44250;
  a1[119] = &unk_24EC44278;
  a1[126] = &unk_24EC442A0;
  a1[133] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[147];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670((uint64_t)a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223511554(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &unk_24EC43FF8;
  a1[7] = &unk_24EC44020;
  a1[14] = &unk_24EC44048;
  a1[21] = &unk_24EC44070;
  a1[28] = &unk_24EC44098;
  a1[35] = &unk_24EC440C0;
  a1[42] = &unk_24EC440E8;
  a1[49] = &unk_24EC44110;
  a1[56] = &unk_24EC44138;
  a1[63] = &unk_24EC44160;
  a1[70] = &unk_24EC44188;
  a1[77] = &unk_24EC441B0;
  a1[84] = &unk_24EC441D8;
  a1[91] = &unk_24EC44200;
  a1[98] = &unk_24EC44228;
  a1[105] = &unk_24EC44250;
  a1[112] = &unk_24EC44278;
  a1[119] = &unk_24EC442A0;
  a1[126] = &unk_24EC442C8;
  v1 = (std::__shared_weak_count *)a1[140];
  *(a1 - 7) = &off_24EC43F38;
  v2 = (uint64_t)(a1 - 7);
  if (!v1)
    return sub_223510670((uint64_t)(a1 - 7));
  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 7));
  ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
  std::__shared_weak_count::__release_weak(v1);
  return sub_223510670(v2);
}

void sub_223511660(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &unk_24EC43FF8;
  a1[7] = &unk_24EC44020;
  a1[14] = &unk_24EC44048;
  a1[21] = &unk_24EC44070;
  a1[28] = &unk_24EC44098;
  a1[35] = &unk_24EC440C0;
  a1[42] = &unk_24EC440E8;
  a1[49] = &unk_24EC44110;
  a1[56] = &unk_24EC44138;
  a1[63] = &unk_24EC44160;
  a1[70] = &unk_24EC44188;
  a1[77] = &unk_24EC441B0;
  a1[84] = &unk_24EC441D8;
  a1[91] = &unk_24EC44200;
  a1[98] = &unk_24EC44228;
  a1[105] = &unk_24EC44250;
  a1[112] = &unk_24EC44278;
  a1[119] = &unk_24EC442A0;
  a1[126] = &unk_24EC442C8;
  v1 = (std::__shared_weak_count *)a1[140];
  *(a1 - 7) = &off_24EC43F38;
  v2 = (uint64_t)(a1 - 7);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  sub_223510670(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223511770(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *(a1 - 7) = &unk_24EC43FF8;
  *a1 = &unk_24EC44020;
  a1[7] = &unk_24EC44048;
  a1[14] = &unk_24EC44070;
  a1[21] = &unk_24EC44098;
  a1[28] = &unk_24EC440C0;
  a1[35] = &unk_24EC440E8;
  a1[42] = &unk_24EC44110;
  a1[49] = &unk_24EC44138;
  a1[56] = &unk_24EC44160;
  a1[63] = &unk_24EC44188;
  a1[70] = &unk_24EC441B0;
  a1[77] = &unk_24EC441D8;
  a1[84] = &unk_24EC44200;
  a1[91] = &unk_24EC44228;
  a1[98] = &unk_24EC44250;
  a1[105] = &unk_24EC44278;
  a1[112] = &unk_24EC442A0;
  a1[119] = &unk_24EC442C8;
  v1 = (std::__shared_weak_count *)a1[133];
  *(a1 - 14) = &off_24EC43F38;
  v2 = (uint64_t)(a1 - 14);
  if (!v1)
    return sub_223510670((uint64_t)(a1 - 14));
  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 14));
  ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
  std::__shared_weak_count::__release_weak(v1);
  return sub_223510670(v2);
}

void sub_22351187C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *(a1 - 7) = &unk_24EC43FF8;
  *a1 = &unk_24EC44020;
  a1[7] = &unk_24EC44048;
  a1[14] = &unk_24EC44070;
  a1[21] = &unk_24EC44098;
  a1[28] = &unk_24EC440C0;
  a1[35] = &unk_24EC440E8;
  a1[42] = &unk_24EC44110;
  a1[49] = &unk_24EC44138;
  a1[56] = &unk_24EC44160;
  a1[63] = &unk_24EC44188;
  a1[70] = &unk_24EC441B0;
  a1[77] = &unk_24EC441D8;
  a1[84] = &unk_24EC44200;
  a1[91] = &unk_24EC44228;
  a1[98] = &unk_24EC44250;
  a1[105] = &unk_24EC44278;
  a1[112] = &unk_24EC442A0;
  a1[119] = &unk_24EC442C8;
  v1 = (std::__shared_weak_count *)a1[133];
  *(a1 - 14) = &off_24EC43F38;
  v2 = (uint64_t)(a1 - 14);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  sub_223510670(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22351198C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *(a1 - 14) = &unk_24EC43FF8;
  *(a1 - 7) = &unk_24EC44020;
  *a1 = &unk_24EC44048;
  a1[7] = &unk_24EC44070;
  a1[14] = &unk_24EC44098;
  a1[21] = &unk_24EC440C0;
  a1[28] = &unk_24EC440E8;
  a1[35] = &unk_24EC44110;
  a1[42] = &unk_24EC44138;
  a1[49] = &unk_24EC44160;
  a1[56] = &unk_24EC44188;
  a1[63] = &unk_24EC441B0;
  a1[70] = &unk_24EC441D8;
  a1[77] = &unk_24EC44200;
  a1[84] = &unk_24EC44228;
  a1[91] = &unk_24EC44250;
  a1[98] = &unk_24EC44278;
  a1[105] = &unk_24EC442A0;
  a1[112] = &unk_24EC442C8;
  v1 = (std::__shared_weak_count *)a1[126];
  *(a1 - 21) = &off_24EC43F38;
  v2 = (uint64_t)(a1 - 21);
  if (!v1)
    return sub_223510670((uint64_t)(a1 - 21));
  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 21));
  ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
  std::__shared_weak_count::__release_weak(v1);
  return sub_223510670(v2);
}

void sub_223511A98(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *(a1 - 14) = &unk_24EC43FF8;
  *(a1 - 7) = &unk_24EC44020;
  *a1 = &unk_24EC44048;
  a1[7] = &unk_24EC44070;
  a1[14] = &unk_24EC44098;
  a1[21] = &unk_24EC440C0;
  a1[28] = &unk_24EC440E8;
  a1[35] = &unk_24EC44110;
  a1[42] = &unk_24EC44138;
  a1[49] = &unk_24EC44160;
  a1[56] = &unk_24EC44188;
  a1[63] = &unk_24EC441B0;
  a1[70] = &unk_24EC441D8;
  a1[77] = &unk_24EC44200;
  a1[84] = &unk_24EC44228;
  a1[91] = &unk_24EC44250;
  a1[98] = &unk_24EC44278;
  a1[105] = &unk_24EC442A0;
  a1[112] = &unk_24EC442C8;
  v1 = (std::__shared_weak_count *)a1[126];
  *(a1 - 21) = &off_24EC43F38;
  v2 = (uint64_t)(a1 - 21);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  sub_223510670(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223511BA8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *(a1 - 21) = &unk_24EC43FF8;
  *(a1 - 14) = &unk_24EC44020;
  *(a1 - 7) = &unk_24EC44048;
  *a1 = &unk_24EC44070;
  a1[7] = &unk_24EC44098;
  a1[14] = &unk_24EC440C0;
  a1[21] = &unk_24EC440E8;
  a1[28] = &unk_24EC44110;
  a1[35] = &unk_24EC44138;
  a1[42] = &unk_24EC44160;
  a1[49] = &unk_24EC44188;
  a1[56] = &unk_24EC441B0;
  a1[63] = &unk_24EC441D8;
  a1[70] = &unk_24EC44200;
  a1[77] = &unk_24EC44228;
  a1[84] = &unk_24EC44250;
  a1[91] = &unk_24EC44278;
  a1[98] = &unk_24EC442A0;
  a1[105] = &unk_24EC442C8;
  v1 = (std::__shared_weak_count *)a1[119];
  *(a1 - 28) = &off_24EC43F38;
  v2 = (uint64_t)(a1 - 28);
  if (!v1)
    return sub_223510670((uint64_t)(a1 - 28));
  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 28));
  ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
  std::__shared_weak_count::__release_weak(v1);
  return sub_223510670(v2);
}

void sub_223511CB4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *(a1 - 21) = &unk_24EC43FF8;
  *(a1 - 14) = &unk_24EC44020;
  *(a1 - 7) = &unk_24EC44048;
  *a1 = &unk_24EC44070;
  a1[7] = &unk_24EC44098;
  a1[14] = &unk_24EC440C0;
  a1[21] = &unk_24EC440E8;
  a1[28] = &unk_24EC44110;
  a1[35] = &unk_24EC44138;
  a1[42] = &unk_24EC44160;
  a1[49] = &unk_24EC44188;
  a1[56] = &unk_24EC441B0;
  a1[63] = &unk_24EC441D8;
  a1[70] = &unk_24EC44200;
  a1[77] = &unk_24EC44228;
  a1[84] = &unk_24EC44250;
  a1[91] = &unk_24EC44278;
  a1[98] = &unk_24EC442A0;
  a1[105] = &unk_24EC442C8;
  v1 = (std::__shared_weak_count *)a1[119];
  *(a1 - 28) = &off_24EC43F38;
  v2 = (uint64_t)(a1 - 28);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  sub_223510670(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223511DC4(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 35);
  *(a1 - 35) = &off_24EC43F38;
  *(a1 - 28) = &unk_24EC43FF8;
  *(a1 - 21) = &unk_24EC44020;
  *(a1 - 14) = &unk_24EC44048;
  *(a1 - 7) = &unk_24EC44070;
  *a1 = &unk_24EC44098;
  a1[7] = &unk_24EC440C0;
  a1[14] = &unk_24EC440E8;
  a1[21] = &unk_24EC44110;
  a1[28] = &unk_24EC44138;
  a1[35] = &unk_24EC44160;
  a1[42] = &unk_24EC44188;
  a1[49] = &unk_24EC441B0;
  a1[56] = &unk_24EC441D8;
  a1[63] = &unk_24EC44200;
  a1[70] = &unk_24EC44228;
  a1[77] = &unk_24EC44250;
  a1[84] = &unk_24EC44278;
  a1[91] = &unk_24EC442A0;
  a1[98] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[112];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 35));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 35));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_223511ED0(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 35);
  *(a1 - 35) = &off_24EC43F38;
  *(a1 - 28) = &unk_24EC43FF8;
  *(a1 - 21) = &unk_24EC44020;
  *(a1 - 14) = &unk_24EC44048;
  *(a1 - 7) = &unk_24EC44070;
  *a1 = &unk_24EC44098;
  a1[7] = &unk_24EC440C0;
  a1[14] = &unk_24EC440E8;
  a1[21] = &unk_24EC44110;
  a1[28] = &unk_24EC44138;
  a1[35] = &unk_24EC44160;
  a1[42] = &unk_24EC44188;
  a1[49] = &unk_24EC441B0;
  a1[56] = &unk_24EC441D8;
  a1[63] = &unk_24EC44200;
  a1[70] = &unk_24EC44228;
  a1[77] = &unk_24EC44250;
  a1[84] = &unk_24EC44278;
  a1[91] = &unk_24EC442A0;
  a1[98] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[112];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223511FE0(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 42);
  *(a1 - 42) = &off_24EC43F38;
  *(a1 - 35) = &unk_24EC43FF8;
  *(a1 - 28) = &unk_24EC44020;
  *(a1 - 21) = &unk_24EC44048;
  *(a1 - 14) = &unk_24EC44070;
  *(a1 - 7) = &unk_24EC44098;
  *a1 = &unk_24EC440C0;
  a1[7] = &unk_24EC440E8;
  a1[14] = &unk_24EC44110;
  a1[21] = &unk_24EC44138;
  a1[28] = &unk_24EC44160;
  a1[35] = &unk_24EC44188;
  a1[42] = &unk_24EC441B0;
  a1[49] = &unk_24EC441D8;
  a1[56] = &unk_24EC44200;
  a1[63] = &unk_24EC44228;
  a1[70] = &unk_24EC44250;
  a1[77] = &unk_24EC44278;
  a1[84] = &unk_24EC442A0;
  a1[91] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[105];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 42));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 42));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_2235120F0(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 42);
  *(a1 - 42) = &off_24EC43F38;
  *(a1 - 35) = &unk_24EC43FF8;
  *(a1 - 28) = &unk_24EC44020;
  *(a1 - 21) = &unk_24EC44048;
  *(a1 - 14) = &unk_24EC44070;
  *(a1 - 7) = &unk_24EC44098;
  *a1 = &unk_24EC440C0;
  a1[7] = &unk_24EC440E8;
  a1[14] = &unk_24EC44110;
  a1[21] = &unk_24EC44138;
  a1[28] = &unk_24EC44160;
  a1[35] = &unk_24EC44188;
  a1[42] = &unk_24EC441B0;
  a1[49] = &unk_24EC441D8;
  a1[56] = &unk_24EC44200;
  a1[63] = &unk_24EC44228;
  a1[70] = &unk_24EC44250;
  a1[77] = &unk_24EC44278;
  a1[84] = &unk_24EC442A0;
  a1[91] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[105];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223512204(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 49);
  *(a1 - 49) = &off_24EC43F38;
  *(a1 - 42) = &unk_24EC43FF8;
  *(a1 - 35) = &unk_24EC44020;
  *(a1 - 28) = &unk_24EC44048;
  *(a1 - 21) = &unk_24EC44070;
  *(a1 - 14) = &unk_24EC44098;
  *(a1 - 7) = &unk_24EC440C0;
  *a1 = &unk_24EC440E8;
  a1[7] = &unk_24EC44110;
  a1[14] = &unk_24EC44138;
  a1[21] = &unk_24EC44160;
  a1[28] = &unk_24EC44188;
  a1[35] = &unk_24EC441B0;
  a1[42] = &unk_24EC441D8;
  a1[49] = &unk_24EC44200;
  a1[56] = &unk_24EC44228;
  a1[63] = &unk_24EC44250;
  a1[70] = &unk_24EC44278;
  a1[77] = &unk_24EC442A0;
  a1[84] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[98];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 49));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 49));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_223512318(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 49);
  *(a1 - 49) = &off_24EC43F38;
  *(a1 - 42) = &unk_24EC43FF8;
  *(a1 - 35) = &unk_24EC44020;
  *(a1 - 28) = &unk_24EC44048;
  *(a1 - 21) = &unk_24EC44070;
  *(a1 - 14) = &unk_24EC44098;
  *(a1 - 7) = &unk_24EC440C0;
  *a1 = &unk_24EC440E8;
  a1[7] = &unk_24EC44110;
  a1[14] = &unk_24EC44138;
  a1[21] = &unk_24EC44160;
  a1[28] = &unk_24EC44188;
  a1[35] = &unk_24EC441B0;
  a1[42] = &unk_24EC441D8;
  a1[49] = &unk_24EC44200;
  a1[56] = &unk_24EC44228;
  a1[63] = &unk_24EC44250;
  a1[70] = &unk_24EC44278;
  a1[77] = &unk_24EC442A0;
  a1[84] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[98];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223512430(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 56);
  *(a1 - 56) = &off_24EC43F38;
  *(a1 - 49) = &unk_24EC43FF8;
  *(a1 - 42) = &unk_24EC44020;
  *(a1 - 35) = &unk_24EC44048;
  *(a1 - 28) = &unk_24EC44070;
  *(a1 - 21) = &unk_24EC44098;
  *(a1 - 14) = &unk_24EC440C0;
  *(a1 - 7) = &unk_24EC440E8;
  *a1 = &unk_24EC44110;
  a1[7] = &unk_24EC44138;
  a1[14] = &unk_24EC44160;
  a1[21] = &unk_24EC44188;
  a1[28] = &unk_24EC441B0;
  a1[35] = &unk_24EC441D8;
  a1[42] = &unk_24EC44200;
  a1[49] = &unk_24EC44228;
  a1[56] = &unk_24EC44250;
  a1[63] = &unk_24EC44278;
  a1[70] = &unk_24EC442A0;
  a1[77] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[91];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 56));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 56));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_223512548(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 56);
  *(a1 - 56) = &off_24EC43F38;
  *(a1 - 49) = &unk_24EC43FF8;
  *(a1 - 42) = &unk_24EC44020;
  *(a1 - 35) = &unk_24EC44048;
  *(a1 - 28) = &unk_24EC44070;
  *(a1 - 21) = &unk_24EC44098;
  *(a1 - 14) = &unk_24EC440C0;
  *(a1 - 7) = &unk_24EC440E8;
  *a1 = &unk_24EC44110;
  a1[7] = &unk_24EC44138;
  a1[14] = &unk_24EC44160;
  a1[21] = &unk_24EC44188;
  a1[28] = &unk_24EC441B0;
  a1[35] = &unk_24EC441D8;
  a1[42] = &unk_24EC44200;
  a1[49] = &unk_24EC44228;
  a1[56] = &unk_24EC44250;
  a1[63] = &unk_24EC44278;
  a1[70] = &unk_24EC442A0;
  a1[77] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[91];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223512664(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 63);
  *(a1 - 63) = &off_24EC43F38;
  *(a1 - 56) = &unk_24EC43FF8;
  *(a1 - 49) = &unk_24EC44020;
  *(a1 - 42) = &unk_24EC44048;
  *(a1 - 35) = &unk_24EC44070;
  *(a1 - 28) = &unk_24EC44098;
  *(a1 - 21) = &unk_24EC440C0;
  *(a1 - 14) = &unk_24EC440E8;
  *(a1 - 7) = &unk_24EC44110;
  *a1 = &unk_24EC44138;
  a1[7] = &unk_24EC44160;
  a1[14] = &unk_24EC44188;
  a1[21] = &unk_24EC441B0;
  a1[28] = &unk_24EC441D8;
  a1[35] = &unk_24EC44200;
  a1[42] = &unk_24EC44228;
  a1[49] = &unk_24EC44250;
  a1[56] = &unk_24EC44278;
  a1[63] = &unk_24EC442A0;
  a1[70] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[84];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 63));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 63));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_223512780(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 63);
  *(a1 - 63) = &off_24EC43F38;
  *(a1 - 56) = &unk_24EC43FF8;
  *(a1 - 49) = &unk_24EC44020;
  *(a1 - 42) = &unk_24EC44048;
  *(a1 - 35) = &unk_24EC44070;
  *(a1 - 28) = &unk_24EC44098;
  *(a1 - 21) = &unk_24EC440C0;
  *(a1 - 14) = &unk_24EC440E8;
  *(a1 - 7) = &unk_24EC44110;
  *a1 = &unk_24EC44138;
  a1[7] = &unk_24EC44160;
  a1[14] = &unk_24EC44188;
  a1[21] = &unk_24EC441B0;
  a1[28] = &unk_24EC441D8;
  a1[35] = &unk_24EC44200;
  a1[42] = &unk_24EC44228;
  a1[49] = &unk_24EC44250;
  a1[56] = &unk_24EC44278;
  a1[63] = &unk_24EC442A0;
  a1[70] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[84];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235128A0(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 70);
  *(a1 - 70) = &off_24EC43F38;
  *(a1 - 63) = &unk_24EC43FF8;
  *(a1 - 56) = &unk_24EC44020;
  *(a1 - 49) = &unk_24EC44048;
  *(a1 - 42) = &unk_24EC44070;
  *(a1 - 35) = &unk_24EC44098;
  *(a1 - 28) = &unk_24EC440C0;
  *(a1 - 21) = &unk_24EC440E8;
  *(a1 - 14) = &unk_24EC44110;
  *(a1 - 7) = &unk_24EC44138;
  *a1 = &unk_24EC44160;
  a1[7] = &unk_24EC44188;
  a1[14] = &unk_24EC441B0;
  a1[21] = &unk_24EC441D8;
  a1[28] = &unk_24EC44200;
  a1[35] = &unk_24EC44228;
  a1[42] = &unk_24EC44250;
  a1[49] = &unk_24EC44278;
  a1[56] = &unk_24EC442A0;
  a1[63] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[77];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 70));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 70));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_2235129C0(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 70);
  *(a1 - 70) = &off_24EC43F38;
  *(a1 - 63) = &unk_24EC43FF8;
  *(a1 - 56) = &unk_24EC44020;
  *(a1 - 49) = &unk_24EC44048;
  *(a1 - 42) = &unk_24EC44070;
  *(a1 - 35) = &unk_24EC44098;
  *(a1 - 28) = &unk_24EC440C0;
  *(a1 - 21) = &unk_24EC440E8;
  *(a1 - 14) = &unk_24EC44110;
  *(a1 - 7) = &unk_24EC44138;
  *a1 = &unk_24EC44160;
  a1[7] = &unk_24EC44188;
  a1[14] = &unk_24EC441B0;
  a1[21] = &unk_24EC441D8;
  a1[28] = &unk_24EC44200;
  a1[35] = &unk_24EC44228;
  a1[42] = &unk_24EC44250;
  a1[49] = &unk_24EC44278;
  a1[56] = &unk_24EC442A0;
  a1[63] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[77];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223512AE4(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 77);
  *(a1 - 77) = &off_24EC43F38;
  *(a1 - 70) = &unk_24EC43FF8;
  *(a1 - 63) = &unk_24EC44020;
  *(a1 - 56) = &unk_24EC44048;
  *(a1 - 49) = &unk_24EC44070;
  *(a1 - 42) = &unk_24EC44098;
  *(a1 - 35) = &unk_24EC440C0;
  *(a1 - 28) = &unk_24EC440E8;
  *(a1 - 21) = &unk_24EC44110;
  *(a1 - 14) = &unk_24EC44138;
  *(a1 - 7) = &unk_24EC44160;
  *a1 = &unk_24EC44188;
  a1[7] = &unk_24EC441B0;
  a1[14] = &unk_24EC441D8;
  a1[21] = &unk_24EC44200;
  a1[28] = &unk_24EC44228;
  a1[35] = &unk_24EC44250;
  a1[42] = &unk_24EC44278;
  a1[49] = &unk_24EC442A0;
  a1[56] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[70];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 77));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 77));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_223512C08(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 77);
  *(a1 - 77) = &off_24EC43F38;
  *(a1 - 70) = &unk_24EC43FF8;
  *(a1 - 63) = &unk_24EC44020;
  *(a1 - 56) = &unk_24EC44048;
  *(a1 - 49) = &unk_24EC44070;
  *(a1 - 42) = &unk_24EC44098;
  *(a1 - 35) = &unk_24EC440C0;
  *(a1 - 28) = &unk_24EC440E8;
  *(a1 - 21) = &unk_24EC44110;
  *(a1 - 14) = &unk_24EC44138;
  *(a1 - 7) = &unk_24EC44160;
  *a1 = &unk_24EC44188;
  a1[7] = &unk_24EC441B0;
  a1[14] = &unk_24EC441D8;
  a1[21] = &unk_24EC44200;
  a1[28] = &unk_24EC44228;
  a1[35] = &unk_24EC44250;
  a1[42] = &unk_24EC44278;
  a1[49] = &unk_24EC442A0;
  a1[56] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[70];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223512D30(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 84);
  *(a1 - 84) = &off_24EC43F38;
  *(a1 - 77) = &unk_24EC43FF8;
  *(a1 - 70) = &unk_24EC44020;
  *(a1 - 63) = &unk_24EC44048;
  *(a1 - 56) = &unk_24EC44070;
  *(a1 - 49) = &unk_24EC44098;
  *(a1 - 42) = &unk_24EC440C0;
  *(a1 - 35) = &unk_24EC440E8;
  *(a1 - 28) = &unk_24EC44110;
  *(a1 - 21) = &unk_24EC44138;
  *(a1 - 14) = &unk_24EC44160;
  *(a1 - 7) = &unk_24EC44188;
  *a1 = &unk_24EC441B0;
  a1[7] = &unk_24EC441D8;
  a1[14] = &unk_24EC44200;
  a1[21] = &unk_24EC44228;
  a1[28] = &unk_24EC44250;
  a1[35] = &unk_24EC44278;
  a1[42] = &unk_24EC442A0;
  a1[49] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[63];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 84));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 84));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_223512E58(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 84);
  *(a1 - 84) = &off_24EC43F38;
  *(a1 - 77) = &unk_24EC43FF8;
  *(a1 - 70) = &unk_24EC44020;
  *(a1 - 63) = &unk_24EC44048;
  *(a1 - 56) = &unk_24EC44070;
  *(a1 - 49) = &unk_24EC44098;
  *(a1 - 42) = &unk_24EC440C0;
  *(a1 - 35) = &unk_24EC440E8;
  *(a1 - 28) = &unk_24EC44110;
  *(a1 - 21) = &unk_24EC44138;
  *(a1 - 14) = &unk_24EC44160;
  *(a1 - 7) = &unk_24EC44188;
  *a1 = &unk_24EC441B0;
  a1[7] = &unk_24EC441D8;
  a1[14] = &unk_24EC44200;
  a1[21] = &unk_24EC44228;
  a1[28] = &unk_24EC44250;
  a1[35] = &unk_24EC44278;
  a1[42] = &unk_24EC442A0;
  a1[49] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[63];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223512F84(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 91);
  *(a1 - 91) = &off_24EC43F38;
  *(a1 - 84) = &unk_24EC43FF8;
  *(a1 - 77) = &unk_24EC44020;
  *(a1 - 70) = &unk_24EC44048;
  *(a1 - 63) = &unk_24EC44070;
  *(a1 - 56) = &unk_24EC44098;
  *(a1 - 49) = &unk_24EC440C0;
  *(a1 - 42) = &unk_24EC440E8;
  *(a1 - 35) = &unk_24EC44110;
  *(a1 - 28) = &unk_24EC44138;
  *(a1 - 21) = &unk_24EC44160;
  *(a1 - 14) = &unk_24EC44188;
  *(a1 - 7) = &unk_24EC441B0;
  *a1 = &unk_24EC441D8;
  a1[7] = &unk_24EC44200;
  a1[14] = &unk_24EC44228;
  a1[21] = &unk_24EC44250;
  a1[28] = &unk_24EC44278;
  a1[35] = &unk_24EC442A0;
  a1[42] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[56];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 91));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 91));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_2235130B0(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 91);
  *(a1 - 91) = &off_24EC43F38;
  *(a1 - 84) = &unk_24EC43FF8;
  *(a1 - 77) = &unk_24EC44020;
  *(a1 - 70) = &unk_24EC44048;
  *(a1 - 63) = &unk_24EC44070;
  *(a1 - 56) = &unk_24EC44098;
  *(a1 - 49) = &unk_24EC440C0;
  *(a1 - 42) = &unk_24EC440E8;
  *(a1 - 35) = &unk_24EC44110;
  *(a1 - 28) = &unk_24EC44138;
  *(a1 - 21) = &unk_24EC44160;
  *(a1 - 14) = &unk_24EC44188;
  *(a1 - 7) = &unk_24EC441B0;
  *a1 = &unk_24EC441D8;
  a1[7] = &unk_24EC44200;
  a1[14] = &unk_24EC44228;
  a1[21] = &unk_24EC44250;
  a1[28] = &unk_24EC44278;
  a1[35] = &unk_24EC442A0;
  a1[42] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[56];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235131E0(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 98);
  *(a1 - 98) = &off_24EC43F38;
  *(a1 - 91) = &unk_24EC43FF8;
  *(a1 - 84) = &unk_24EC44020;
  *(a1 - 77) = &unk_24EC44048;
  *(a1 - 70) = &unk_24EC44070;
  *(a1 - 63) = &unk_24EC44098;
  *(a1 - 56) = &unk_24EC440C0;
  *(a1 - 49) = &unk_24EC440E8;
  *(a1 - 42) = &unk_24EC44110;
  *(a1 - 35) = &unk_24EC44138;
  *(a1 - 28) = &unk_24EC44160;
  *(a1 - 21) = &unk_24EC44188;
  *(a1 - 14) = &unk_24EC441B0;
  *(a1 - 7) = &unk_24EC441D8;
  *a1 = &unk_24EC44200;
  a1[7] = &unk_24EC44228;
  a1[14] = &unk_24EC44250;
  a1[21] = &unk_24EC44278;
  a1[28] = &unk_24EC442A0;
  a1[35] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[49];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 98));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 98));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_223513310(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 98);
  *(a1 - 98) = &off_24EC43F38;
  *(a1 - 91) = &unk_24EC43FF8;
  *(a1 - 84) = &unk_24EC44020;
  *(a1 - 77) = &unk_24EC44048;
  *(a1 - 70) = &unk_24EC44070;
  *(a1 - 63) = &unk_24EC44098;
  *(a1 - 56) = &unk_24EC440C0;
  *(a1 - 49) = &unk_24EC440E8;
  *(a1 - 42) = &unk_24EC44110;
  *(a1 - 35) = &unk_24EC44138;
  *(a1 - 28) = &unk_24EC44160;
  *(a1 - 21) = &unk_24EC44188;
  *(a1 - 14) = &unk_24EC441B0;
  *(a1 - 7) = &unk_24EC441D8;
  *a1 = &unk_24EC44200;
  a1[7] = &unk_24EC44228;
  a1[14] = &unk_24EC44250;
  a1[21] = &unk_24EC44278;
  a1[28] = &unk_24EC442A0;
  a1[35] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[49];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223513444(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 105);
  *(a1 - 105) = &off_24EC43F38;
  *(a1 - 98) = &unk_24EC43FF8;
  *(a1 - 91) = &unk_24EC44020;
  *(a1 - 84) = &unk_24EC44048;
  *(a1 - 77) = &unk_24EC44070;
  *(a1 - 70) = &unk_24EC44098;
  *(a1 - 63) = &unk_24EC440C0;
  *(a1 - 56) = &unk_24EC440E8;
  *(a1 - 49) = &unk_24EC44110;
  *(a1 - 42) = &unk_24EC44138;
  *(a1 - 35) = &unk_24EC44160;
  *(a1 - 28) = &unk_24EC44188;
  *(a1 - 21) = &unk_24EC441B0;
  *(a1 - 14) = &unk_24EC441D8;
  *(a1 - 7) = &unk_24EC44200;
  *a1 = &unk_24EC44228;
  a1[7] = &unk_24EC44250;
  a1[14] = &unk_24EC44278;
  a1[21] = &unk_24EC442A0;
  a1[28] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[42];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 105));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 105));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_223513578(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 105);
  *(a1 - 105) = &off_24EC43F38;
  *(a1 - 98) = &unk_24EC43FF8;
  *(a1 - 91) = &unk_24EC44020;
  *(a1 - 84) = &unk_24EC44048;
  *(a1 - 77) = &unk_24EC44070;
  *(a1 - 70) = &unk_24EC44098;
  *(a1 - 63) = &unk_24EC440C0;
  *(a1 - 56) = &unk_24EC440E8;
  *(a1 - 49) = &unk_24EC44110;
  *(a1 - 42) = &unk_24EC44138;
  *(a1 - 35) = &unk_24EC44160;
  *(a1 - 28) = &unk_24EC44188;
  *(a1 - 21) = &unk_24EC441B0;
  *(a1 - 14) = &unk_24EC441D8;
  *(a1 - 7) = &unk_24EC44200;
  *a1 = &unk_24EC44228;
  a1[7] = &unk_24EC44250;
  a1[14] = &unk_24EC44278;
  a1[21] = &unk_24EC442A0;
  a1[28] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[42];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235136B0(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 112);
  *(a1 - 112) = &off_24EC43F38;
  *(a1 - 105) = &unk_24EC43FF8;
  *(a1 - 98) = &unk_24EC44020;
  *(a1 - 91) = &unk_24EC44048;
  *(a1 - 84) = &unk_24EC44070;
  *(a1 - 77) = &unk_24EC44098;
  *(a1 - 70) = &unk_24EC440C0;
  *(a1 - 63) = &unk_24EC440E8;
  *(a1 - 56) = &unk_24EC44110;
  *(a1 - 49) = &unk_24EC44138;
  *(a1 - 42) = &unk_24EC44160;
  *(a1 - 35) = &unk_24EC44188;
  *(a1 - 28) = &unk_24EC441B0;
  *(a1 - 21) = &unk_24EC441D8;
  *(a1 - 14) = &unk_24EC44200;
  *(a1 - 7) = &unk_24EC44228;
  *a1 = &unk_24EC44250;
  a1[7] = &unk_24EC44278;
  a1[14] = &unk_24EC442A0;
  a1[21] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[35];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 112));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 112));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_2235137E8(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 112);
  *(a1 - 112) = &off_24EC43F38;
  *(a1 - 105) = &unk_24EC43FF8;
  *(a1 - 98) = &unk_24EC44020;
  *(a1 - 91) = &unk_24EC44048;
  *(a1 - 84) = &unk_24EC44070;
  *(a1 - 77) = &unk_24EC44098;
  *(a1 - 70) = &unk_24EC440C0;
  *(a1 - 63) = &unk_24EC440E8;
  *(a1 - 56) = &unk_24EC44110;
  *(a1 - 49) = &unk_24EC44138;
  *(a1 - 42) = &unk_24EC44160;
  *(a1 - 35) = &unk_24EC44188;
  *(a1 - 28) = &unk_24EC441B0;
  *(a1 - 21) = &unk_24EC441D8;
  *(a1 - 14) = &unk_24EC44200;
  *(a1 - 7) = &unk_24EC44228;
  *a1 = &unk_24EC44250;
  a1[7] = &unk_24EC44278;
  a1[14] = &unk_24EC442A0;
  a1[21] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[35];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223513924(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 119);
  *(a1 - 119) = &off_24EC43F38;
  *(a1 - 112) = &unk_24EC43FF8;
  *(a1 - 105) = &unk_24EC44020;
  *(a1 - 98) = &unk_24EC44048;
  *(a1 - 91) = &unk_24EC44070;
  *(a1 - 84) = &unk_24EC44098;
  *(a1 - 77) = &unk_24EC440C0;
  *(a1 - 70) = &unk_24EC440E8;
  *(a1 - 63) = &unk_24EC44110;
  *(a1 - 56) = &unk_24EC44138;
  *(a1 - 49) = &unk_24EC44160;
  *(a1 - 42) = &unk_24EC44188;
  *(a1 - 35) = &unk_24EC441B0;
  *(a1 - 28) = &unk_24EC441D8;
  *(a1 - 21) = &unk_24EC44200;
  *(a1 - 14) = &unk_24EC44228;
  *(a1 - 7) = &unk_24EC44250;
  *a1 = &unk_24EC44278;
  a1[7] = &unk_24EC442A0;
  a1[14] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[28];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 119));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 119));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_223513A60(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 119);
  *(a1 - 119) = &off_24EC43F38;
  *(a1 - 112) = &unk_24EC43FF8;
  *(a1 - 105) = &unk_24EC44020;
  *(a1 - 98) = &unk_24EC44048;
  *(a1 - 91) = &unk_24EC44070;
  *(a1 - 84) = &unk_24EC44098;
  *(a1 - 77) = &unk_24EC440C0;
  *(a1 - 70) = &unk_24EC440E8;
  *(a1 - 63) = &unk_24EC44110;
  *(a1 - 56) = &unk_24EC44138;
  *(a1 - 49) = &unk_24EC44160;
  *(a1 - 42) = &unk_24EC44188;
  *(a1 - 35) = &unk_24EC441B0;
  *(a1 - 28) = &unk_24EC441D8;
  *(a1 - 21) = &unk_24EC44200;
  *(a1 - 14) = &unk_24EC44228;
  *(a1 - 7) = &unk_24EC44250;
  *a1 = &unk_24EC44278;
  a1[7] = &unk_24EC442A0;
  a1[14] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[28];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223513BA0(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 126);
  *(a1 - 126) = &off_24EC43F38;
  *(a1 - 119) = &unk_24EC43FF8;
  *(a1 - 112) = &unk_24EC44020;
  *(a1 - 105) = &unk_24EC44048;
  *(a1 - 98) = &unk_24EC44070;
  *(a1 - 91) = &unk_24EC44098;
  *(a1 - 84) = &unk_24EC440C0;
  *(a1 - 77) = &unk_24EC440E8;
  *(a1 - 70) = &unk_24EC44110;
  *(a1 - 63) = &unk_24EC44138;
  *(a1 - 56) = &unk_24EC44160;
  *(a1 - 49) = &unk_24EC44188;
  *(a1 - 42) = &unk_24EC441B0;
  *(a1 - 35) = &unk_24EC441D8;
  *(a1 - 28) = &unk_24EC44200;
  *(a1 - 21) = &unk_24EC44228;
  *(a1 - 14) = &unk_24EC44250;
  *(a1 - 7) = &unk_24EC44278;
  *a1 = &unk_24EC442A0;
  a1[7] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[21];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 126));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 126));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_223513CE0(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 126);
  *(a1 - 126) = &off_24EC43F38;
  *(a1 - 119) = &unk_24EC43FF8;
  *(a1 - 112) = &unk_24EC44020;
  *(a1 - 105) = &unk_24EC44048;
  *(a1 - 98) = &unk_24EC44070;
  *(a1 - 91) = &unk_24EC44098;
  *(a1 - 84) = &unk_24EC440C0;
  *(a1 - 77) = &unk_24EC440E8;
  *(a1 - 70) = &unk_24EC44110;
  *(a1 - 63) = &unk_24EC44138;
  *(a1 - 56) = &unk_24EC44160;
  *(a1 - 49) = &unk_24EC44188;
  *(a1 - 42) = &unk_24EC441B0;
  *(a1 - 35) = &unk_24EC441D8;
  *(a1 - 28) = &unk_24EC44200;
  *(a1 - 21) = &unk_24EC44228;
  *(a1 - 14) = &unk_24EC44250;
  *(a1 - 7) = &unk_24EC44278;
  *a1 = &unk_24EC442A0;
  a1[7] = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[21];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223513E24(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 133);
  *(a1 - 133) = &off_24EC43F38;
  *(a1 - 126) = &unk_24EC43FF8;
  *(a1 - 119) = &unk_24EC44020;
  *(a1 - 112) = &unk_24EC44048;
  *(a1 - 105) = &unk_24EC44070;
  *(a1 - 98) = &unk_24EC44098;
  *(a1 - 91) = &unk_24EC440C0;
  *(a1 - 84) = &unk_24EC440E8;
  *(a1 - 77) = &unk_24EC44110;
  *(a1 - 70) = &unk_24EC44138;
  *(a1 - 63) = &unk_24EC44160;
  *(a1 - 56) = &unk_24EC44188;
  *(a1 - 49) = &unk_24EC441B0;
  *(a1 - 42) = &unk_24EC441D8;
  *(a1 - 35) = &unk_24EC44200;
  *(a1 - 28) = &unk_24EC44228;
  *(a1 - 21) = &unk_24EC44250;
  *(a1 - 14) = &unk_24EC44278;
  *(a1 - 7) = &unk_24EC442A0;
  *a1 = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[14];
  if (!v2)
    return sub_223510670((uint64_t)(a1 - 133));
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223510670((uint64_t)(a1 - 133));
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223510670(v1);
}

void sub_223513F68(_QWORD *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = (uint64_t)(a1 - 133);
  *(a1 - 133) = &off_24EC43F38;
  *(a1 - 126) = &unk_24EC43FF8;
  *(a1 - 119) = &unk_24EC44020;
  *(a1 - 112) = &unk_24EC44048;
  *(a1 - 105) = &unk_24EC44070;
  *(a1 - 98) = &unk_24EC44098;
  *(a1 - 91) = &unk_24EC440C0;
  *(a1 - 84) = &unk_24EC440E8;
  *(a1 - 77) = &unk_24EC44110;
  *(a1 - 70) = &unk_24EC44138;
  *(a1 - 63) = &unk_24EC44160;
  *(a1 - 56) = &unk_24EC44188;
  *(a1 - 49) = &unk_24EC441B0;
  *(a1 - 42) = &unk_24EC441D8;
  *(a1 - 35) = &unk_24EC44200;
  *(a1 - 28) = &unk_24EC44228;
  *(a1 - 21) = &unk_24EC44250;
  *(a1 - 14) = &unk_24EC44278;
  *(a1 - 7) = &unk_24EC442A0;
  *a1 = &unk_24EC442C8;
  v2 = (std::__shared_weak_count *)a1[14];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223510670(v1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235141E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  void *v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;

  v2 = *(_QWORD *)(a1 + 2520);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 2528);
    v4 = *(void **)(a1 + 2520);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 224);
        if (v5)
        {
          p_shared_owners = (unint64_t *)&v5->__shared_owners_;
          do
            v7 = __ldaxr(p_shared_owners);
          while (__stlxr(v7 - 1, p_shared_owners));
          if (!v7)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
        v3 -= 248;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 2520);
    }
    *(_QWORD *)(a1 + 2528) = v2;
    operator delete(v4);
  }
  if (*(_BYTE *)(a1 + 2512))
    sub_2235144E4(a1 + 2320);
  if (*(_BYTE *)(a1 + 2312))
  {
    v8 = *(void **)(a1 + 2224);
    if (v8)
    {
      *(_QWORD *)(a1 + 2232) = v8;
      operator delete(v8);
    }
    v9 = *(_QWORD *)(a1 + 2200);
    if (v9)
    {
      v10 = *(_QWORD *)(a1 + 2208);
      v11 = *(void **)(a1 + 2200);
      if (v10 != v9)
      {
        do
        {
          v12 = *(std::__shared_weak_count **)(v10 - 224);
          if (v12)
          {
            v13 = (unint64_t *)&v12->__shared_owners_;
            do
              v14 = __ldaxr(v13);
            while (__stlxr(v14 - 1, v13));
            if (!v14)
            {
              ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
              std::__shared_weak_count::__release_weak(v12);
            }
          }
          v10 -= 248;
        }
        while (v10 != v9);
        v11 = *(void **)(a1 + 2200);
      }
      *(_QWORD *)(a1 + 2208) = v9;
      operator delete(v11);
    }
  }
  v15 = *(void **)(a1 + 2160);
  if (v15)
  {
    *(_QWORD *)(a1 + 2168) = v15;
    operator delete(v15);
  }
  if (*(_BYTE *)(a1 + 2152))
  {
    *(_QWORD *)(a1 + 2120) = &off_24EC715B8;
    v16 = *(std::__shared_weak_count **)(a1 + 2136);
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    *(_QWORD *)(a1 + 2096) = &off_24EC715B8;
    v19 = *(std::__shared_weak_count **)(a1 + 2112);
    if (v19)
    {
      v20 = (unint64_t *)&v19->__shared_owners_;
      do
        v21 = __ldaxr(v20);
      while (__stlxr(v21 - 1, v20));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    *(_QWORD *)(a1 + 2072) = &off_24EC715B8;
    v22 = *(std::__shared_weak_count **)(a1 + 2088);
    if (v22)
    {
      v23 = (unint64_t *)&v22->__shared_owners_;
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
  }
  v25 = *(void **)(a1 + 2048);
  if (v25)
  {
    *(_QWORD *)(a1 + 2056) = v25;
    operator delete(v25);
  }
  v26 = *(void **)(a1 + 2024);
  if (v26)
  {
    *(_QWORD *)(a1 + 2032) = v26;
    operator delete(v26);
  }
  v27 = *(void **)(a1 + 1896);
  if (v27)
  {
    *(_QWORD *)(a1 + 1904) = v27;
    operator delete(v27);
  }
  v28 = *(_QWORD *)(a1 + 1872);
  if (v28)
  {
    v29 = *(_QWORD *)(a1 + 1880);
    v30 = *(void **)(a1 + 1872);
    if (v29 != v28)
    {
      do
      {
        v31 = *(std::__shared_weak_count **)(v29 - 224);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldaxr(v32);
          while (__stlxr(v33 - 1, v32));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        v29 -= 248;
      }
      while (v29 != v28);
      v30 = *(void **)(a1 + 1872);
    }
    *(_QWORD *)(a1 + 1880) = v28;
    operator delete(v30);
  }
  if (*(_BYTE *)(a1 + 1864))
  {
    v34 = *(_QWORD *)(a1 + 1840);
    if (v34)
    {
      v35 = *(_QWORD *)(a1 + 1848);
      v36 = *(void **)(a1 + 1840);
      if (v35 != v34)
      {
        do
        {
          v37 = *(void **)(v35 - 24);
          if (v37)
          {
            *(_QWORD *)(v35 - 16) = v37;
            operator delete(v37);
          }
          v35 -= 40;
        }
        while (v35 != v34);
        v36 = *(void **)(a1 + 1840);
      }
      *(_QWORD *)(a1 + 1848) = v34;
      operator delete(v36);
    }
  }
  if (*(_BYTE *)(a1 + 1832))
    sub_2232555B8(a1 + 8);
  return a1;
}

uint64_t sub_2235144E4(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  if (*(_BYTE *)(a1 + 184))
  {
    v2 = *(_QWORD **)(a1 + 72);
    if (v2)
    {
      v3 = *(_QWORD **)(a1 + 80);
      v4 = *(void **)(a1 + 72);
      if (v3 != v2)
      {
        do
          v3 = sub_223173E64(v3 - 45);
        while (v3 != v2);
        v4 = *(void **)(a1 + 72);
      }
      *(_QWORD *)(a1 + 80) = v2;
      operator delete(v4);
    }
    v5 = *(_QWORD **)(a1 + 48);
    if (v5)
    {
      v6 = *(_QWORD **)(a1 + 56);
      v7 = *(void **)(a1 + 48);
      if (v6 != v5)
      {
        do
          v6 = sub_223173E64(v6 - 45);
        while (v6 != v5);
        v7 = *(void **)(a1 + 48);
      }
      *(_QWORD *)(a1 + 56) = v5;
      operator delete(v7);
    }
  }
  if (*(_BYTE *)(a1 + 40))
    sub_223198030(a1 + 16, *(_QWORD **)(a1 + 24));
  v8 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v8)
    return a1;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (v10)
    return a1;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_2235145DC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223514600(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_223514618(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d5recon2kf15IKeyframeEngineEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d5recon2kf15IKeyframeEngineEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d5recon2kf15IKeyframeEngineEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d5recon2kf15IKeyframeEngineEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_223514688(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC44BC0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223514698(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC44BC0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235146C8(uint64_t a1)
{
  return sub_2235141E0(a1 + 24);
}

uint64_t sub_2235146D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = 0;
  v4 = a1 + 8;
  *(_BYTE *)(a1 + 1832) = 0;
  if (*(_BYTE *)(a2 + 1832))
  {
    sub_2232568B4(v4, a2 + 8);
    *(_BYTE *)(a1 + 1832) = 1;
  }
  *(_BYTE *)(a1 + 1840) = 0;
  *(_BYTE *)(a1 + 1864) = 0;
  if (*(_BYTE *)(a2 + 1864))
  {
    *(_QWORD *)(a1 + 1856) = 0;
    *(_OWORD *)(a1 + 1840) = 0u;
    *(_OWORD *)(a1 + 1840) = *(_OWORD *)(a2 + 1840);
    *(_QWORD *)(a1 + 1856) = *(_QWORD *)(a2 + 1856);
    *(_QWORD *)(a2 + 1856) = 0;
    *(_OWORD *)(a2 + 1840) = 0u;
    *(_BYTE *)(a1 + 1864) = 1;
  }
  *(_QWORD *)(a1 + 1888) = 0;
  *(_OWORD *)(a1 + 1872) = 0u;
  *(_OWORD *)(a1 + 1872) = *(_OWORD *)(a2 + 1872);
  *(_QWORD *)(a1 + 1888) = *(_QWORD *)(a2 + 1888);
  *(_QWORD *)(a2 + 1888) = 0;
  *(_OWORD *)(a2 + 1872) = 0u;
  *(_QWORD *)(a1 + 1912) = 0;
  *(_OWORD *)(a1 + 1896) = 0u;
  *(_QWORD *)(a1 + 1896) = *(_QWORD *)(a2 + 1896);
  *(_QWORD *)(a1 + 1904) = *(_QWORD *)(a2 + 1904);
  *(_QWORD *)(a1 + 1912) = *(_QWORD *)(a2 + 1912);
  *(_QWORD *)(a2 + 1912) = 0;
  *(_OWORD *)(a2 + 1896) = 0u;
  v5 = *(_OWORD *)(a2 + 1920);
  v6 = *(_OWORD *)(a2 + 1936);
  *(_OWORD *)(a1 + 1952) = *(_OWORD *)(a2 + 1952);
  *(_OWORD *)(a1 + 1936) = v6;
  *(_OWORD *)(a1 + 1920) = v5;
  v7 = *(_OWORD *)(a2 + 1968);
  v8 = *(_OWORD *)(a2 + 1984);
  v9 = *(_OWORD *)(a2 + 2000);
  *(_QWORD *)(a1 + 2016) = *(_QWORD *)(a2 + 2016);
  *(_OWORD *)(a1 + 2000) = v9;
  *(_OWORD *)(a1 + 1984) = v8;
  *(_OWORD *)(a1 + 1968) = v7;
  *(_QWORD *)(a1 + 2024) = 0;
  *(_OWORD *)(a1 + 2032) = 0u;
  *(_QWORD *)(a1 + 2024) = *(_QWORD *)(a2 + 2024);
  *(_QWORD *)(a1 + 2032) = *(_QWORD *)(a2 + 2032);
  *(_QWORD *)(a1 + 2040) = *(_QWORD *)(a2 + 2040);
  *(_QWORD *)(a2 + 2040) = 0;
  *(_OWORD *)(a2 + 2024) = 0u;
  *(_QWORD *)(a1 + 2064) = 0;
  *(_OWORD *)(a1 + 2048) = 0u;
  *(_OWORD *)(a1 + 2048) = *(_OWORD *)(a2 + 2048);
  *(_QWORD *)(a1 + 2064) = *(_QWORD *)(a2 + 2064);
  *(_QWORD *)(a2 + 2064) = 0;
  *(_OWORD *)(a2 + 2048) = 0u;
  *(_BYTE *)(a1 + 2072) = 0;
  *(_BYTE *)(a1 + 2152) = 0;
  if (*(_BYTE *)(a2 + 2152))
  {
    *(_QWORD *)(a1 + 2072) = &off_24EC715B8;
    *(_OWORD *)(a1 + 2080) = *(_OWORD *)(a2 + 2080);
    *(_QWORD *)(a2 + 2088) = 0;
    *(_QWORD *)(a2 + 2080) = 0;
    *(_QWORD *)(a1 + 2096) = &off_24EC715B8;
    *(_QWORD *)(a1 + 2104) = *(_QWORD *)(a2 + 2104);
    *(_QWORD *)(a1 + 2112) = *(_QWORD *)(a2 + 2112);
    *(_QWORD *)(a2 + 2112) = 0;
    *(_QWORD *)(a2 + 2104) = 0;
    *(_QWORD *)(a1 + 2120) = &off_24EC715B8;
    *(_OWORD *)(a1 + 2128) = *(_OWORD *)(a2 + 2128);
    *(_QWORD *)(a2 + 2136) = 0;
    *(_QWORD *)(a2 + 2128) = 0;
    *(_QWORD *)(a1 + 2144) = *(_QWORD *)(a2 + 2144);
    *(_BYTE *)(a1 + 2152) = 1;
  }
  *(_QWORD *)(a1 + 2176) = 0;
  *(_OWORD *)(a1 + 2160) = 0uLL;
  *(_OWORD *)(a1 + 2160) = *(_OWORD *)(a2 + 2160);
  *(_QWORD *)(a1 + 2176) = *(_QWORD *)(a2 + 2176);
  *(_QWORD *)(a2 + 2176) = 0;
  *(_OWORD *)(a2 + 2160) = 0uLL;
  *(_QWORD *)(a1 + 2184) = *(_QWORD *)(a2 + 2184);
  *(_BYTE *)(a1 + 2192) = 0;
  *(_BYTE *)(a1 + 2312) = 0;
  if (*(_BYTE *)(a2 + 2312))
  {
    *(_BYTE *)(a1 + 2192) = *(_BYTE *)(a2 + 2192);
    *(_QWORD *)(a1 + 2200) = 0;
    *(_QWORD *)(a1 + 2216) = 0;
    *(_QWORD *)(a1 + 2208) = 0;
    *(_QWORD *)(a1 + 2200) = *(_QWORD *)(a2 + 2200);
    *(_QWORD *)(a1 + 2208) = *(_QWORD *)(a2 + 2208);
    *(_QWORD *)(a1 + 2216) = *(_QWORD *)(a2 + 2216);
    *(_QWORD *)(a2 + 2208) = 0;
    *(_QWORD *)(a2 + 2200) = 0;
    *(_QWORD *)(a2 + 2216) = 0;
    *(_QWORD *)(a1 + 2232) = 0;
    *(_QWORD *)(a1 + 2224) = 0;
    *(_QWORD *)(a1 + 2240) = 0;
    *(_OWORD *)(a1 + 2224) = *(_OWORD *)(a2 + 2224);
    *(_QWORD *)(a1 + 2240) = *(_QWORD *)(a2 + 2240);
    *(_QWORD *)(a2 + 2232) = 0;
    *(_QWORD *)(a2 + 2224) = 0;
    *(_QWORD *)(a2 + 2240) = 0;
    v10 = *(_OWORD *)(a2 + 2248);
    v11 = *(_OWORD *)(a2 + 2264);
    v12 = *(_OWORD *)(a2 + 2280);
    *(_OWORD *)(a1 + 2296) = *(_OWORD *)(a2 + 2296);
    *(_OWORD *)(a1 + 2280) = v12;
    *(_OWORD *)(a1 + 2264) = v11;
    *(_OWORD *)(a1 + 2248) = v10;
    *(_BYTE *)(a1 + 2312) = 1;
  }
  *(_BYTE *)(a1 + 2320) = 0;
  *(_BYTE *)(a1 + 2512) = 0;
  if (*(_BYTE *)(a2 + 2512))
  {
    *(_OWORD *)(a1 + 2320) = *(_OWORD *)(a2 + 2320);
    *(_OWORD *)(a2 + 2320) = 0u;
    *(_BYTE *)(a1 + 2336) = 0;
    *(_BYTE *)(a1 + 2360) = 0;
    if (*(_BYTE *)(a2 + 2360))
    {
      *(_QWORD *)(a1 + 2336) = *(_QWORD *)(a2 + 2336);
      v13 = a1 + 2344;
      v14 = *(_QWORD *)(a2 + 2344);
      *(_QWORD *)(a1 + 2344) = v14;
      v15 = *(_QWORD *)(a2 + 2352);
      *(_QWORD *)(a1 + 2352) = v15;
      if (v15)
      {
        *(_QWORD *)(v14 + 16) = v13;
        *(_QWORD *)(a2 + 2336) = a2 + 2344;
        *(_QWORD *)(a2 + 2344) = 0;
        *(_QWORD *)(a2 + 2352) = 0;
      }
      else
      {
        *(_QWORD *)(a1 + 2336) = v13;
      }
      *(_BYTE *)(a1 + 2360) = 1;
    }
    *(_BYTE *)(a1 + 2368) = 0;
    *(_BYTE *)(a1 + 2504) = 0;
    if (*(_BYTE *)(a2 + 2504))
    {
      *(_QWORD *)(a1 + 2368) = 0;
      *(_QWORD *)(a1 + 2376) = 0;
      *(_QWORD *)(a1 + 2384) = 0;
      *(_OWORD *)(a1 + 2368) = *(_OWORD *)(a2 + 2368);
      *(_QWORD *)(a1 + 2384) = *(_QWORD *)(a2 + 2384);
      *(_QWORD *)(a2 + 2376) = 0;
      *(_QWORD *)(a2 + 2368) = 0;
      *(_QWORD *)(a2 + 2384) = 0;
      *(_QWORD *)(a1 + 2400) = 0;
      *(_QWORD *)(a1 + 2392) = 0;
      *(_QWORD *)(a1 + 2408) = 0;
      *(_QWORD *)(a1 + 2392) = *(_QWORD *)(a2 + 2392);
      *(_QWORD *)(a1 + 2400) = *(_QWORD *)(a2 + 2400);
      *(_QWORD *)(a1 + 2408) = *(_QWORD *)(a2 + 2408);
      *(_QWORD *)(a2 + 2400) = 0;
      *(_QWORD *)(a2 + 2392) = 0;
      *(_QWORD *)(a2 + 2408) = 0;
      v16 = *(_OWORD *)(a2 + 2416);
      v17 = *(_OWORD *)(a2 + 2432);
      v18 = *(_OWORD *)(a2 + 2448);
      *(_OWORD *)(a1 + 2464) = *(_OWORD *)(a2 + 2464);
      *(_OWORD *)(a1 + 2448) = v18;
      *(_OWORD *)(a1 + 2432) = v17;
      *(_OWORD *)(a1 + 2416) = v16;
      v19 = *(_OWORD *)(a2 + 2480);
      *(_BYTE *)(a1 + 2496) = *(_BYTE *)(a2 + 2496);
      *(_OWORD *)(a1 + 2480) = v19;
      *(_BYTE *)(a1 + 2504) = 1;
    }
    *(_BYTE *)(a1 + 2512) = 1;
  }
  *(_QWORD *)(a1 + 2536) = 0;
  *(_OWORD *)(a1 + 2520) = 0u;
  *(_QWORD *)(a1 + 2520) = *(_QWORD *)(a2 + 2520);
  *(_QWORD *)(a1 + 2528) = *(_QWORD *)(a2 + 2528);
  *(_QWORD *)(a1 + 2536) = *(_QWORD *)(a2 + 2536);
  *(_QWORD *)(a2 + 2536) = 0;
  *(_OWORD *)(a2 + 2520) = 0u;
  return a1;
}

uint64_t sub_223514AB8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  kdebug_trace();
  v4 = a1[1];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 52, (uint64_t)"mapper != nullptr", 17, (uint64_t)"Invalid mapper", 14, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = a1[1];
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 56))(v4, a2);
  if (*a1)
    (*(void (**)(_QWORD))(*(_QWORD *)*a1 + 24))(*a1);
  return kdebug_trace();
}

void sub_223514BC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2231874DC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_223514BDC(uint64_t **a1, uint64_t *a2, uint64_t *a3, uint64_t a4, _OWORD *a5, char a6, uint64_t a7)
{
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  _BOOL4 v17;
  uint64_t *v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t *v22;
  int v23;
  int v25;

  *a1 = 0;
  a1[1] = 0;
  v13 = (uint64_t *)*a3;
  *a3 = 0;
  v14 = *a1;
  *a1 = v13;
  if (v14)
    (*(void (**)(uint64_t *))(*v14 + 8))(v14);
  v15 = (uint64_t *)*a2;
  *a2 = 0;
  v16 = a1[1];
  a1[1] = v15;
  if (v16)
  {
    (*(void (**)(uint64_t *))(*v16 + 8))(v16);
    v15 = a1[1];
  }
  if (v15)
  {
    v17 = sub_223514DC4(a1, a7, a4);
    v18 = *a1;
    if (((v17 ^ (*a1 == 0)) & 1) != 0)
      goto LABEL_9;
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 77, (uint64_t)"ret == (adaptor != nullptr)", 27, (uint64_t)"Attach fails.", 13, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
  }
  v18 = *a1;
LABEL_9:
  if (!v18)
    goto LABEL_14;
  if (a6)
  {
    v19 = *((unsigned __int8 *)v18 + 144);
    *((_OWORD *)v18 + 8) = *a5;
    if (v19)
    {
      v20 = v18[14];
      v21 = *(unsigned __int8 *)(v20 + 144);
      *(_OWORD *)(v20 + 128) = *a5;
      if (v21)
        goto LABEL_13;
    }
    else
    {
      *((_BYTE *)v18 + 144) = 1;
      v20 = v18[14];
      v25 = *(unsigned __int8 *)(v20 + 144);
      *(_OWORD *)(v20 + 128) = *a5;
      if (v25)
        goto LABEL_13;
    }
    *(_BYTE *)(v20 + 144) = 1;
  }
LABEL_13:
  *((_DWORD *)v18 + 37) = a4;
  *((_BYTE *)v18 + 152) = 1;
LABEL_14:
  v22 = a1[1];
  if (v22)
  {
    if (a6)
    {
      v23 = *((unsigned __int8 *)v22 + 2232);
      *(_OWORD *)(v22 + 277) = *a5;
      if (!v23)
        *((_BYTE *)v22 + 2232) = 1;
    }
    if ((a4 & 0xFF00000000) != 0)
    {
      *((_DWORD *)v22 + 559) = a4;
      *((_BYTE *)v22 + 2240) = 1;
    }
  }
  return a1;
}

void sub_223514D74(_Unwind_Exception *exception_object)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[1];
  v1[1] = 0;
  if (v3)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *v1;
    *v1 = 0;
    if (!v4)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v4 = *v1;
    *v1 = 0;
    if (!v4)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  _Unwind_Resume(exception_object);
}

BOOL sub_223514DC4(uint64_t **a1, uint64_t a2, int a3)
{
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v12;
  int v13;
  _QWORD v14[3];
  _QWORD *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  if (!a1[1]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 89, (uint64_t)"mapper", 6, (uint64_t)"Missing Volumetric mapper", 25, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v6 = *a1;
  if (*a1)
  {
    v7 = (uint64_t)a1[1];
    v14[0] = &off_24EC44C10;
    v14[1] = a1;
    v15 = v14;
    sub_223A5DBE8(v7, v14);
    v8 = v15;
    if (v15 == v14)
    {
      v9 = 4;
      v8 = v14;
    }
    else
    {
      if (!v15)
      {
LABEL_9:
        v10 = *a1;
        v13 = a3;
        v12 = v10;
        sub_2235194BC((void ***)(a2 + 416), &v13, &v12);
        return v6 != 0;
      }
      v9 = 5;
    }
    (*(void (**)(void))(*v8 + 8 * v9))();
    goto LABEL_9;
  }
  return v6 != 0;
}

void sub_223514EE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  if (a15 == v15)
  {
    (*(void (**)(void))(a12 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (!a15)
    _Unwind_Resume(exception_object);
  (*(void (**)(void))(*(_QWORD *)a15 + 40))();
  _Unwind_Resume(exception_object);
}

uint64_t sub_223514F38(uint64_t **a1, uint64_t a2, int a3)
{
  uint64_t *v6;

  kdebug_trace();
  v6 = a1[1];
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 102, (uint64_t)"mapper != nullptr", 17, (uint64_t)"Invalid mapper", 14, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = a1[1];
  }
  (*(void (**)(uint64_t *))(*v6 + 64))(v6);
  if (*a1)
    (*(void (**)(uint64_t *))(**a1 + 40))(*a1);
  sub_223514DC4(a1, a2, a3);
  return kdebug_trace();
}

void sub_223515060(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2231874DC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_223515074(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;

  v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(_QWORD **)(a1 + 16);
    if (!v5)
      goto LABEL_7;
  }
  else
  {
LABEL_5:
    v5 = *(_QWORD **)(a1 + 16);
    if (!v5)
      goto LABEL_7;
  }
  do
  {
    v6 = (_QWORD *)*v5;
    operator delete(v5);
    v5 = v6;
  }
  while (v6);
LABEL_7:
  v7 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v7)
    operator delete(v7);
  return a1;
}

uint64_t ***sub_223515100(uint64_t ***a1)
{
  uint64_t **v2;
  uint64_t **v3;
  uint64_t **v4;

  v2 = *a1;
  if (*a1)
  {
    v3 = a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
        sub_22351916C(--v3);
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t **sub_223515160(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = v2[1];
    v2[1] = 0;
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *v2;
    *v2 = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    MEMORY[0x227684CE8](v2, 0x20C40A4A59CD2);
  }
  return a1;
}

uint64_t sub_2235151D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  BOOL v5;
  uint64_t *v6;
  _BOOL4 v7;

  v2 = a1 + 64;
  v1 = *(_QWORD *)(a1 + 64);
  if (!v1)
    goto LABEL_11;
  v3 = a1 + 64;
  do
  {
    v4 = *(_DWORD *)(v1 + 32);
    v5 = v4 < 0;
    if (v4 >= 0)
      v6 = (uint64_t *)v1;
    else
      v6 = (uint64_t *)(v1 + 8);
    if (!v5)
      v3 = v1;
    v1 = *v6;
  }
  while (*v6);
  if (v3 == v2 || *(int *)(v3 + 32) >= 1)
  {
LABEL_11:
    v7 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 144, (uint64_t)"iter != vol_bundle_store.end()", 30, (uint64_t)"Bundle not found.", 17, (void (*)(void **))sub_22457406C);
    v3 = v2;
    if (v7)
      abort();
  }
  return *(_QWORD *)(v3 + 40);
}

uint64_t sub_22351526C(uint64_t a1, _OWORD *a2)
{
  _BYTE *v2;
  BOOL v3;
  BOOL v4;
  BOOL v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;
  uint64_t *v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t *v15;
  int v16;
  uint64_t **v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t **v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  int v40;
  _QWORD *v41;
  size_t v42;
  void **v43;
  size_t v44;
  void **p_dst;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  void **v55;
  uint64_t v56;
  const char *v57;
  size_t v58;
  unint64_t v59;
  unsigned __int8 v60;
  unsigned __int8 v61;
  const char *v62;
  size_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  size_t v73;
  std::__shared_weak_count_vtbl *v74;
  std::__shared_weak_count *v75;
  size_t v76;
  size_t v77;
  _QWORD *v78;
  void *v79;
  int v80;
  unint64_t v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  void **v85;
  uint64_t v86;
  const char *v87;
  size_t v88;
  unint64_t v89;
  unsigned __int8 v90;
  unsigned __int8 v91;
  const char *v92;
  size_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  size_t v103;
  std::__shared_weak_count_vtbl *v104;
  std::__shared_weak_count *v105;
  size_t v106;
  size_t v107;
  _QWORD *v108;
  void *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  char v114;
  _QWORD *v115;
  uint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  char *v120;
  unint64_t *v121;
  unint64_t v122;
  std::__shared_weak_count *v123;
  unint64_t *v124;
  unint64_t v125;
  unint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  const char *v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  _QWORD *v145;
  std::__shared_weak_count *v146;
  unint64_t *v147;
  unint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  std::__shared_weak_count *v152;
  unint64_t *v153;
  unint64_t v154;
  std::__shared_weak_count *v155;
  unint64_t *v156;
  unint64_t v157;
  const char *v158;
  std::__shared_weak_count *v159;
  unint64_t *v160;
  unint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  int v164;
  _DWORD *v165;
  uint64_t **v166;
  uint64_t v167;
  uint64_t **v168;
  const char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t *v175;
  uint64_t *v176;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  char v181;
  _QWORD *v182;
  uint64_t v183;
  std::__shared_weak_count *v184;
  unint64_t *v185;
  unint64_t v186;
  char *v187;
  unint64_t *v188;
  unint64_t v189;
  std::__shared_weak_count *v190;
  unint64_t *v191;
  unint64_t v192;
  unint64_t v193;
  std::__shared_weak_count *v194;
  unint64_t *v195;
  unint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  const char *v202;
  uint64_t v203;
  __int128 v204;
  uint64_t v205;
  std::__shared_weak_count *v206;
  unint64_t *v207;
  unint64_t v208;
  std::__shared_weak_count *v209;
  unint64_t *v210;
  unint64_t v211;
  _QWORD *v212;
  std::__shared_weak_count *v213;
  unint64_t *v214;
  unint64_t v215;
  std::__shared_weak_count *v216;
  unint64_t *v217;
  unint64_t v218;
  std::__shared_weak_count *v219;
  unint64_t *v220;
  unint64_t v221;
  std::__shared_weak_count *v222;
  unint64_t *v223;
  unint64_t v224;
  const char *v225;
  std::__shared_weak_count *v226;
  unint64_t *v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  const char *v232;
  const char *v233;
  int v234;
  int v235;
  uint64_t *v236;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v238;
  int v239;
  const char *v240;
  int v241;
  const char *v242;
  uint64_t v243;
  std::__shared_weak_count *v244;
  void **__dst;
  size_t v246;
  int64_t v247;
  void *v248[2];
  uint64_t v249;
  uint64_t v250;
  const void *v251;
  uint64_t v252;
  const void *v253;
  unint64_t v254;
  void *__p;
  char v256;
  unint64_t v257;
  int v258;
  _BYTE v259[152];
  uint64_t v260;
  void *v261;
  uint64_t **v262;
  __int128 v263;
  std::__shared_weak_count *v264;
  char *v265;
  std::__shared_weak_count *v266;
  _QWORD *v267;
  __int128 v268;
  __int128 v269;
  _BYTE v270[24];
  __int128 v271;
  char *v272;
  size_t v273;
  unint64_t v274;
  char v275;
  uint64_t v276[5];

  v276[2] = *MEMORY[0x24BDAC8D0];
  v2 = *(_BYTE **)(a1 + 24);
  if (v2[560])
    v3 = v2[880] == 0;
  else
    v3 = 1;
  v4 = v3 || v2[976] == 0;
  if (v4 || (v2[497] ? (v5 = v2[272] == 0) : (v5 = 1), v5 || !v2[524]))
  {
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 156, (uint64_t)"", 0, (uint64_t)"Mapper type not supported or cluster recon disabled.", 52, (void (*)(void **))sub_22457406C);
    abort();
  }
  v8 = *(unsigned int *)(a1 + 104);
  *(_DWORD *)(a1 + 104) = v8 + 1;
  v262 = 0;
  v9 = *(_QWORD *)(a1 + 88);
  if (*(_QWORD *)(a1 + 80) == v9)
  {
    sub_223227930((uint64_t *)&v261);
    sub_2232279C4(&v269);
    v23 = *(_QWORD *)(a1 + 24);
    v24 = operator new();
    v248[0] = 0;
    sub_223ABF6DC(v24, v23, (uint64_t *)v248);
    if (v248[0])
      (*(void (**)(void *))(*(_QWORD *)v248[0] + 8))(v248[0]);
    v25 = *(_QWORD *)(a1 + 24);
    v26 = (void *)operator new();
    sub_223A5D068((uint64_t)v26, v25);
    v27 = *(_QWORD *)(a1 + 16);
    v28 = (uint64_t **)operator new();
    v248[0] = v26;
    *(_QWORD *)v270 = v24;
    sub_223514BDC(v28, (uint64_t *)v248, (uint64_t *)v270, v8 | 0x100000000, a2, 1, v27);
    if (*(_QWORD *)v270)
      (*(void (**)(_QWORD))(**(_QWORD **)v270 + 8))(*(_QWORD *)v270);
    if (v248[0])
      (*(void (**)(void *))(*(_QWORD *)v248[0] + 8))(v248[0]);
    v262 = v28;
    sub_223516DAC(&v260);
    if (**(int **)(v260 + 56) > 3
      || (v34 = *(unsigned __int8 *)(v260 + 72),
          v35 = sub_22322F254(v260, "OSLogSurrogateAppender", 1, 0),
          v36 = v35,
          !v34)
      && !v35)
    {
      v37 = (std::__shared_weak_count *)*((_QWORD *)&v269 + 1);
      if (!*((_QWORD *)&v269 + 1))
        goto LABEL_36;
LABEL_33:
      p_shared_owners = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldaxr(p_shared_owners);
      while (__stlxr(v39 - 1, p_shared_owners));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
        sub_22322797C(&v261, v46, v47, v48, v49, v50);
        v22 = (_QWORD *)(a1 + 64);
        v21 = *(_QWORD *)(a1 + 64);
        if (v21)
          goto LABEL_240;
LABEL_238:
        v163 = v22;
LABEL_244:
        v165 = operator new(0x30uLL);
        v165[8] = v8;
        v166 = v262;
        v262 = 0;
        *((_QWORD *)v165 + 5) = v166;
        *(_QWORD *)v165 = 0;
        *((_QWORD *)v165 + 1) = 0;
        *((_QWORD *)v165 + 2) = v163;
        *v22 = v165;
        v167 = **(_QWORD **)(a1 + 56);
        if (v167)
        {
          *(_QWORD *)(a1 + 56) = v167;
          v165 = (_DWORD *)*v22;
        }
        sub_2231A9A8C(*(uint64_t **)(a1 + 64), (uint64_t *)v165);
        ++*(_QWORD *)(a1 + 72);
        goto LABEL_247;
      }
LABEL_36:
      sub_22322797C(&v261, v29, v30, v31, v32, v33);
      v22 = (_QWORD *)(a1 + 64);
      v21 = *(_QWORD *)(a1 + 64);
      if (v21)
        goto LABEL_240;
      goto LABEL_238;
    }
    sub_223195210((uint64_t)v248);
    sub_2231813E8(&v249, (uint64_t)"VLM:GCRS add new bundle ", 24);
    std::ostream::operator<<();
    v235 = v34;
    if ((v258 & 0x10) != 0)
    {
      v81 = v257;
      if (v257 < v254)
      {
        v257 = v254;
        v81 = v254;
      }
      v82 = v253;
      v44 = v81 - (_QWORD)v253;
      if (v81 - (unint64_t)v253 > 0x7FFFFFFFFFFFFFF7)
        goto LABEL_178;
    }
    else
    {
      if ((v258 & 8) == 0)
      {
        v44 = 0;
        HIBYTE(v247) = 0;
        p_dst = (void **)&__dst;
        goto LABEL_114;
      }
      v82 = v251;
      v44 = v252 - (_QWORD)v251;
      if ((unint64_t)(v252 - (_QWORD)v251) > 0x7FFFFFFFFFFFFFF7)
LABEL_178:
        sub_22316DBC0();
    }
    if (v44 >= 0x17)
    {
      v83 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v44 | 7) != 0x17)
        v83 = v44 | 7;
      v84 = v83 + 1;
      p_dst = (void **)operator new(v83 + 1);
      v246 = v44;
      v247 = v84 | 0x8000000000000000;
      __dst = p_dst;
    }
    else
    {
      HIBYTE(v247) = v44;
      p_dst = (void **)&__dst;
      if (!v44)
      {
LABEL_114:
        *((_BYTE *)p_dst + v44) = 0;
        v236 = &v260;
        rep = std::chrono::steady_clock::now().__d_.__rep_;
        v238 = std::chrono::system_clock::now().__d_.__rep_;
        v239 = 3;
        v240 = "unknown file";
        v241 = 170;
        v243 = 0;
        v244 = 0;
        v242 = "unknown function";
        if (v247 >= 0)
          v85 = (void **)&__dst;
        else
          v85 = __dst;
        v86 = *v236;
        v87 = (const char *)(*v236 + 16);
        v231 = *v236;
        v233 = v87;
        if (*(char *)(*v236 + 39) < 0)
        {
          v87 = *(const char **)(v86 + 16);
          v88 = *(_QWORD *)(v86 + 24);
          v89 = v36;
          v91 = atomic_load((unsigned __int8 *)&qword_255788F58);
          if ((v91 & 1) != 0)
            goto LABEL_121;
        }
        else
        {
          v88 = *(unsigned __int8 *)(*v236 + 39);
          v89 = v36;
          v90 = atomic_load((unsigned __int8 *)&qword_255788F58);
          if ((v90 & 1) != 0)
            goto LABEL_121;
        }
        if (__cxa_guard_acquire(&qword_255788F58))
        {
          sub_224568628((uint64_t)v270);
          sub_223199C58("com.apple.cv3d", (unint64_t)v270, &xmmword_255788F40);
          if ((_BYTE)v271 && (v270[23] & 0x80000000) != 0)
            operator delete(*(void **)v270);
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
          __cxa_guard_release(&qword_255788F58);
        }
LABEL_121:
        if (byte_255788F57 >= 0)
          v92 = (const char *)&xmmword_255788F40;
        else
          v92 = (const char *)xmmword_255788F40;
        if (byte_255788F57 >= 0)
          v93 = byte_255788F57;
        else
          v93 = *((_QWORD *)&xmmword_255788F40 + 1);
        *(_QWORD *)v270 = os_log_create(v92, v87);
        v94 = &v270[8];
        if (v93 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v93 >= 0x17)
        {
          v95 = (v93 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v93 | 7) != 0x17)
            v95 = v93 | 7;
          v96 = v95 + 1;
          v94 = operator new(v95 + 1);
          *(_QWORD *)&v270[16] = v93;
          *(_QWORD *)&v271 = v96 | 0x8000000000000000;
          *(_QWORD *)&v270[8] = v94;
        }
        else
        {
          BYTE7(v271) = v93;
          if (!v93)
          {
LABEL_135:
            v94[v93] = 0;
            BYTE8(v271) = 1;
            v97 = (char *)&v272;
            if (v88 > 0x7FFFFFFFFFFFFFF7)
              sub_22316DBC0();
            v98 = v89;
            if (v88 >= 0x17)
            {
              v100 = (v88 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v88 | 7) != 0x17)
                v100 = v88 | 7;
              v101 = v100 + 1;
              v97 = (char *)operator new(v100 + 1);
              v99 = (const char *)v85;
              v273 = v88;
              v274 = v101 | 0x8000000000000000;
              v272 = v97;
            }
            else
            {
              HIBYTE(v274) = v88;
              v99 = (const char *)v85;
              if (!v88)
              {
LABEL_143:
                v97[v88] = 0;
                v275 = 1;
                v102 = *(NSObject **)v270;
                if (SHIBYTE(v274) < 0)
                  operator delete(v272);
                if (BYTE8(v271) && SBYTE7(v271) < 0)
                  operator delete(*(void **)&v270[8]);
                if (*(_QWORD *)v270)
                  os_release(*(void **)v270);
                if (!v98 || !*(_QWORD *)(v98 + 24))
                {
                  os_log_type_enabled(v102, OS_LOG_TYPE_INFO);
                  *(_DWORD *)v270 = 136315138;
                  *(_QWORD *)&v270[4] = v99;
                  v109 = (void *)_os_log_send_and_compose_impl();
                  v110 = v235;
                  if (v109)
                    free(v109);
LABEL_320:
                  if (v110)
                  {
                    v225 = (const char *)&__dst;
                    if (v247 < 0)
                      v225 = (const char *)__dst;
                    sub_22322C138((uint64_t)&v236, "%s", v225);
                    sub_223182C08((uint64_t)&v236);
                  }
                  sub_223182C08((uint64_t)&v236);
                  v226 = v244;
                  if (v244)
                  {
                    v227 = (unint64_t *)&v244->__shared_owners_;
                    do
                      v228 = __ldaxr(v227);
                    while (__stlxr(v228 - 1, v227));
                    if (!v228)
                    {
                      ((void (*)(std::__shared_weak_count *))v226->__on_zero_shared)(v226);
                      std::__shared_weak_count::__release_weak(v226);
                    }
                  }
                  if (SHIBYTE(v247) < 0)
                    operator delete(__dst);
                  v248[0] = *(void **)MEMORY[0x24BEDB7F0];
                  v229 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
                  *(void **)((char *)v248 + *((_QWORD *)v248[0] - 3)) = *(void **)(MEMORY[0x24BEDB7F0] + 64);
                  v249 = v229;
                  v250 = MEMORY[0x24BEDB848] + 16;
                  if (v256 < 0)
                    operator delete(__p);
                  std::streambuf::~streambuf();
                  std::iostream::~basic_iostream();
                  MEMORY[0x227684BE0](v259);
                  v37 = (std::__shared_weak_count *)*((_QWORD *)&v269 + 1);
                  if (!*((_QWORD *)&v269 + 1))
                    goto LABEL_36;
                  goto LABEL_33;
                }
                v103 = _os_log_pack_size();
                v104 = (std::__shared_weak_count_vtbl *)operator new(v103, (std::align_val_t)8uLL);
                v105 = (std::__shared_weak_count *)operator new();
                v105->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
                v105->__shared_owners_ = 0;
                v105->__shared_weak_owners_ = 0;
                v105[1].__vftable = v104;
                *(_QWORD *)&v263 = v104;
                *((_QWORD *)&v263 + 1) = v104;
                v265 = 0;
                v266 = 0;
                v264 = v105;
                v106 = strlen(v99);
                if (v106 > 0x7FFFFFFFFFFFFFF7)
                  sub_22316DBC0();
                v107 = v106;
                if (v106 >= 0x17)
                {
                  v178 = (v106 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v106 | 7) != 0x17)
                    v178 = v106 | 7;
                  v179 = v178 + 1;
                  v108 = operator new(v178 + 1);
                  *(_QWORD *)&v268 = v107;
                  *((_QWORD *)&v268 + 1) = v179 | 0x8000000000000000;
                  v267 = v108;
                }
                else
                {
                  HIBYTE(v268) = v106;
                  v108 = &v267;
                  if (!v106)
                  {
LABEL_260:
                    *((_BYTE *)v108 + v107) = 0;
                    v180 = v267;
                    v276[0] = v268;
                    *(uint64_t *)((char *)v276 + 7) = *(_QWORD *)((char *)&v268 + 7);
                    v181 = HIBYTE(v268);
                    v182 = operator new(0x38uLL);
                    v182[1] = 0;
                    v182[2] = 0;
                    v182[3] = off_24EC1FA48;
                    *v182 = &off_24EC1F9F8;
                    v183 = v276[0];
                    v182[4] = v180;
                    v182[5] = v183;
                    *(_QWORD *)((char *)v182 + 47) = *(uint64_t *)((char *)v276 + 7);
                    *((_BYTE *)v182 + 55) = v181;
                    memset(v276, 0, 15);
                    v184 = v266;
                    v265 = (char *)(v182 + 3);
                    v266 = (std::__shared_weak_count *)v182;
                    if (v184)
                    {
                      v185 = (unint64_t *)&v184->__shared_owners_;
                      do
                        v186 = __ldaxr(v185);
                      while (__stlxr(v186 - 1, v185));
                      if (!v186)
                      {
                        ((void (*)(std::__shared_weak_count *))v184->__on_zero_shared)(v184);
                        std::__shared_weak_count::__release_weak(v184);
                      }
                    }
                    *(_OWORD *)v270 = v263;
                    v187 = v265;
                    *(_QWORD *)&v270[16] = v264;
                    if (v264)
                    {
                      v188 = (unint64_t *)&v264->__shared_owners_;
                      do
                        v189 = __ldxr(v188);
                      while (__stxr(v189 + 1, v188));
                    }
                    v190 = v266;
                    *(_QWORD *)&v271 = v187;
                    *((_QWORD *)&v271 + 1) = v266;
                    if (v266)
                    {
                      v191 = (unint64_t *)&v266->__shared_owners_;
                      do
                        v192 = __ldxr(v191);
                      while (__stxr(v192 + 1, v191));
                      v272 = v187;
                      do
                        v193 = __ldaxr(v191);
                      while (__stlxr(v193 - 1, v191));
                      if (!v193)
                      {
                        ((void (*)(std::__shared_weak_count *))v190->__on_zero_shared)(v190);
                        std::__shared_weak_count::__release_weak(v190);
                      }
                    }
                    else
                    {
                      v272 = v187;
                    }
                    v194 = v264;
                    if (v264)
                    {
                      v195 = (unint64_t *)&v264->__shared_owners_;
                      do
                        v196 = __ldaxr(v195);
                      while (__stlxr(v196 - 1, v195));
                      if (!v196)
                      {
                        ((void (*)(std::__shared_weak_count *))v194->__on_zero_shared)(v194);
                        std::__shared_weak_count::__release_weak(v194);
                      }
                    }
                    v197 = *(_QWORD *)v270;
                    if (v272[31] >= 0)
                      v198 = v272 + 8;
                    else
                      v198 = (char *)*((_QWORD *)v272 + 1);
                    v199 = _os_log_pack_fill();
                    *(_DWORD *)v199 = 136315138;
                    *(_QWORD *)(v199 + 4) = v198;
                    v200 = operator new();
                    v201 = *(unsigned __int8 *)(v231 + 39);
                    v202 = *(const char **)(v231 + 16);
                    v203 = *(_QWORD *)(v231 + 24);
                    v204 = v271;
                    *(_OWORD *)(v200 + 8) = *(_OWORD *)&v270[8];
                    if ((v201 & 0x80u) != 0)
                      v201 = v203;
                    else
                      v202 = v233;
                    *(_QWORD *)v200 = v197;
                    *(_QWORD *)&v270[8] = 0;
                    *(_QWORD *)&v270[16] = 0;
                    *(_OWORD *)(v200 + 24) = v204;
                    v271 = 0uLL;
                    *(_QWORD *)(v200 + 40) = v202;
                    *(_QWORD *)(v200 + 48) = v201;
                    *(_BYTE *)(v200 + 56) = 1;
                    v267 = 0;
                    *(_QWORD *)&v263 = v200;
                    (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v98 + 24) + 40))(*(_QWORD *)(v98 + 24), &v263);
                    v205 = v263;
                    *(_QWORD *)&v263 = 0;
                    if (v205)
                    {
                      v206 = *(std::__shared_weak_count **)(v205 + 32);
                      if (v206)
                      {
                        v207 = (unint64_t *)&v206->__shared_owners_;
                        do
                          v208 = __ldaxr(v207);
                        while (__stlxr(v208 - 1, v207));
                        if (!v208)
                        {
                          ((void (*)(std::__shared_weak_count *))v206->__on_zero_shared)(v206);
                          std::__shared_weak_count::__release_weak(v206);
                        }
                      }
                      v209 = *(std::__shared_weak_count **)(v205 + 16);
                      if (v209)
                      {
                        v210 = (unint64_t *)&v209->__shared_owners_;
                        do
                          v211 = __ldaxr(v210);
                        while (__stlxr(v211 - 1, v210));
                        if (!v211)
                        {
                          ((void (*)(std::__shared_weak_count *))v209->__on_zero_shared)(v209);
                          std::__shared_weak_count::__release_weak(v209);
                        }
                      }
                      MEMORY[0x227684CE8](v205, 0x10F0C40B62ED6C6);
                      v212 = v267;
                      v267 = 0;
                      if (v212)
                      {
                        v213 = (std::__shared_weak_count *)v212[4];
                        if (v213)
                        {
                          v214 = (unint64_t *)&v213->__shared_owners_;
                          do
                            v215 = __ldaxr(v214);
                          while (__stlxr(v215 - 1, v214));
                          if (!v215)
                          {
                            ((void (*)(std::__shared_weak_count *))v213->__on_zero_shared)(v213);
                            std::__shared_weak_count::__release_weak(v213);
                          }
                        }
                        v216 = (std::__shared_weak_count *)v212[2];
                        if (v216)
                        {
                          v217 = (unint64_t *)&v216->__shared_owners_;
                          do
                            v218 = __ldaxr(v217);
                          while (__stlxr(v218 - 1, v217));
                          if (!v218)
                          {
                            ((void (*)(std::__shared_weak_count *))v216->__on_zero_shared)(v216);
                            std::__shared_weak_count::__release_weak(v216);
                          }
                        }
                        MEMORY[0x227684CE8](v212, 0x10F0C40B62ED6C6);
                      }
                    }
                    v219 = (std::__shared_weak_count *)*((_QWORD *)&v271 + 1);
                    v110 = v235;
                    if (*((_QWORD *)&v271 + 1))
                    {
                      v220 = (unint64_t *)(*((_QWORD *)&v271 + 1) + 8);
                      do
                        v221 = __ldaxr(v220);
                      while (__stlxr(v221 - 1, v220));
                      if (!v221)
                      {
                        ((void (*)(std::__shared_weak_count *))v219->__on_zero_shared)(v219);
                        std::__shared_weak_count::__release_weak(v219);
                      }
                    }
                    v222 = *(std::__shared_weak_count **)&v270[16];
                    if (*(_QWORD *)&v270[16])
                    {
                      v223 = (unint64_t *)(*(_QWORD *)&v270[16] + 8);
                      do
                        v224 = __ldaxr(v223);
                      while (__stlxr(v224 - 1, v223));
                      if (!v224)
                      {
                        ((void (*)(std::__shared_weak_count *))v222->__on_zero_shared)(v222);
                        std::__shared_weak_count::__release_weak(v222);
                      }
                    }
                    goto LABEL_320;
                  }
                }
                memcpy(v108, v99, v107);
                goto LABEL_260;
              }
            }
            memmove(v97, v87, v88);
            goto LABEL_143;
          }
        }
        memmove(v94, v92, v93);
        goto LABEL_135;
      }
    }
    memmove(p_dst, v82, v44);
    goto LABEL_114;
  }
  v10 = *(uint64_t ***)(v9 - 8);
  *(_QWORD *)(v9 - 8) = 0;
  v262 = v10;
  v11 = *v10;
  v12 = *((unsigned __int8 *)*v10 + 144);
  *((_OWORD *)*v10 + 8) = *a2;
  if (v12)
  {
    v13 = v11[14];
    v14 = *(unsigned __int8 *)(v13 + 144);
    *(_OWORD *)(v13 + 128) = *a2;
    if (v14)
      goto LABEL_16;
  }
  else
  {
    *((_BYTE *)v11 + 144) = 1;
    v13 = v11[14];
    v40 = *(unsigned __int8 *)(v13 + 144);
    *(_OWORD *)(v13 + 128) = *a2;
    if (v40)
      goto LABEL_16;
  }
  *(_BYTE *)(v13 + 144) = 1;
LABEL_16:
  *((_DWORD *)v11 + 37) = v8;
  *((_BYTE *)v11 + 152) = 1;
  v15 = v10[1];
  v16 = *((unsigned __int8 *)v15 + 2232);
  *(_OWORD *)(v15 + 277) = *a2;
  if (!v16)
    *((_BYTE *)v15 + 2232) = 1;
  *((_DWORD *)v15 + 559) = v8;
  *((_BYTE *)v15 + 2240) = 1;
  sub_223514DC4(v10, *(_QWORD *)(a1 + 16), v8);
  v17 = (uint64_t **)(*(_QWORD *)(a1 + 88) - 8);
  sub_22351916C(v17);
  *(_QWORD *)(a1 + 88) = v17;
  sub_223516DAC(v276);
  if (**(int **)(v276[0] + 56) > 3
    || (v18 = *(unsigned __int8 *)(v276[0] + 72),
        v19 = sub_22322F254(v276[0], "OSLogSurrogateAppender", 1, 0),
        v20 = v19,
        !v18)
    && !v19)
  {
    v22 = (_QWORD *)(a1 + 64);
    v21 = *(_QWORD *)(a1 + 64);
    if (v21)
      goto LABEL_240;
    goto LABEL_238;
  }
  sub_223195210((uint64_t)v248);
  sub_2231813E8(&v249, (uint64_t)"VLM:GCRS add new bundle ", 24);
  v41 = (_QWORD *)std::ostream::operator<<();
  sub_2231813E8(v41, (uint64_t)"from recycled bundle", 20);
  v234 = v18;
  if ((v258 & 0x10) != 0)
  {
    v51 = v257;
    if (v257 < v254)
    {
      v257 = v254;
      v51 = v254;
    }
    v52 = v253;
    v42 = v51 - (_QWORD)v253;
    if (v51 - (unint64_t)v253 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_109;
  }
  else
  {
    if ((v258 & 8) == 0)
    {
      v42 = 0;
      HIBYTE(v247) = 0;
      v43 = (void **)&__dst;
      goto LABEL_58;
    }
    v52 = v251;
    v42 = v252 - (_QWORD)v251;
    if ((unint64_t)(v252 - (_QWORD)v251) > 0x7FFFFFFFFFFFFFF7)
LABEL_109:
      sub_22316DBC0();
  }
  if (v42 >= 0x17)
  {
    v53 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v53 = v42 | 7;
    v54 = v53 + 1;
    v43 = (void **)operator new(v53 + 1);
    v246 = v42;
    v247 = v54 | 0x8000000000000000;
    __dst = v43;
    goto LABEL_57;
  }
  HIBYTE(v247) = v42;
  v43 = (void **)&__dst;
  if (v42)
LABEL_57:
    memmove(v43, v52, v42);
LABEL_58:
  *((_BYTE *)v43 + v42) = 0;
  v236 = v276;
  rep = std::chrono::steady_clock::now().__d_.__rep_;
  v238 = std::chrono::system_clock::now().__d_.__rep_;
  v239 = 3;
  v240 = "unknown file";
  v241 = 177;
  v243 = 0;
  v244 = 0;
  v242 = "unknown function";
  if (v247 >= 0)
    v55 = (void **)&__dst;
  else
    v55 = __dst;
  v56 = *v236;
  v57 = (const char *)(*v236 + 16);
  v230 = *v236;
  v232 = v57;
  if (*(char *)(*v236 + 39) < 0)
  {
    v57 = *(const char **)(v56 + 16);
    v58 = *(_QWORD *)(v56 + 24);
    v59 = v20;
    v61 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v61 & 1) != 0)
      goto LABEL_65;
  }
  else
  {
    v58 = *(unsigned __int8 *)(*v236 + 39);
    v59 = v20;
    v60 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v60 & 1) != 0)
      goto LABEL_65;
  }
  if (__cxa_guard_acquire(&qword_255788F58))
  {
    sub_224568628((uint64_t)v270);
    sub_223199C58("com.apple.cv3d", (unint64_t)v270, &xmmword_255788F40);
    if ((_BYTE)v271 && (v270[23] & 0x80000000) != 0)
      operator delete(*(void **)v270);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
    __cxa_guard_release(&qword_255788F58);
  }
LABEL_65:
  if (byte_255788F57 >= 0)
    v62 = (const char *)&xmmword_255788F40;
  else
    v62 = (const char *)xmmword_255788F40;
  if (byte_255788F57 >= 0)
    v63 = byte_255788F57;
  else
    v63 = *((_QWORD *)&xmmword_255788F40 + 1);
  *(_QWORD *)v270 = os_log_create(v62, v57);
  v64 = &v270[8];
  if (v63 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v63 >= 0x17)
  {
    v65 = (v63 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v63 | 7) != 0x17)
      v65 = v63 | 7;
    v66 = v65 + 1;
    v64 = operator new(v65 + 1);
    *(_QWORD *)&v270[16] = v63;
    *(_QWORD *)&v271 = v66 | 0x8000000000000000;
    *(_QWORD *)&v270[8] = v64;
    goto LABEL_78;
  }
  BYTE7(v271) = v63;
  if (v63)
LABEL_78:
    memmove(v64, v62, v63);
  v64[v63] = 0;
  BYTE8(v271) = 1;
  v67 = (char *)&v272;
  if (v58 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  v68 = v59;
  if (v58 >= 0x17)
  {
    v70 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v58 | 7) != 0x17)
      v70 = v58 | 7;
    v71 = v70 + 1;
    v67 = (char *)operator new(v70 + 1);
    v69 = (const char *)v55;
    v273 = v58;
    v274 = v71 | 0x8000000000000000;
    v272 = v67;
    goto LABEL_86;
  }
  HIBYTE(v274) = v58;
  v69 = (const char *)v55;
  if (v58)
LABEL_86:
    memmove(v67, v57, v58);
  v67[v58] = 0;
  v275 = 1;
  v72 = *(NSObject **)v270;
  if (SHIBYTE(v274) < 0)
    operator delete(v272);
  if (BYTE8(v271) && SBYTE7(v271) < 0)
    operator delete(*(void **)&v270[8]);
  if (*(_QWORD *)v270)
    os_release(*(void **)v270);
  if (v68 && *(_QWORD *)(v68 + 24))
  {
    v73 = _os_log_pack_size();
    v74 = (std::__shared_weak_count_vtbl *)operator new(v73, (std::align_val_t)8uLL);
    v75 = (std::__shared_weak_count *)operator new();
    v75->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v75->__shared_owners_ = 0;
    v75->__shared_weak_owners_ = 0;
    v75[1].__vftable = v74;
    *(_QWORD *)&v263 = v74;
    *((_QWORD *)&v263 + 1) = v74;
    v265 = 0;
    v266 = 0;
    v264 = v75;
    v76 = strlen(v69);
    if (v76 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    v77 = v76;
    if (v76 >= 0x17)
    {
      v111 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v76 | 7) != 0x17)
        v111 = v76 | 7;
      v112 = v111 + 1;
      v78 = operator new(v111 + 1);
      *(_QWORD *)&v268 = v77;
      *((_QWORD *)&v268 + 1) = v112 | 0x8000000000000000;
      v267 = v78;
    }
    else
    {
      HIBYTE(v268) = v76;
      v78 = &v267;
      if (!v76)
      {
LABEL_162:
        *((_BYTE *)v78 + v77) = 0;
        v113 = v267;
        *(_QWORD *)&v269 = v268;
        *(_QWORD *)((char *)&v269 + 7) = *(_QWORD *)((char *)&v268 + 7);
        v114 = HIBYTE(v268);
        v115 = operator new(0x38uLL);
        v115[1] = 0;
        v115[2] = 0;
        v115[3] = off_24EC1FA48;
        *v115 = &off_24EC1F9F8;
        v116 = v269;
        v115[4] = v113;
        v115[5] = v116;
        *(_QWORD *)((char *)v115 + 47) = *(_QWORD *)((char *)&v269 + 7);
        *((_BYTE *)v115 + 55) = v114;
        *(_QWORD *)&v269 = 0;
        *(_QWORD *)((char *)&v269 + 7) = 0;
        v117 = v266;
        v265 = (char *)(v115 + 3);
        v266 = (std::__shared_weak_count *)v115;
        if (v117)
        {
          v118 = (unint64_t *)&v117->__shared_owners_;
          do
            v119 = __ldaxr(v118);
          while (__stlxr(v119 - 1, v118));
          if (!v119)
          {
            ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
            std::__shared_weak_count::__release_weak(v117);
          }
        }
        *(_OWORD *)v270 = v263;
        v120 = v265;
        *(_QWORD *)&v270[16] = v264;
        if (v264)
        {
          v121 = (unint64_t *)&v264->__shared_owners_;
          do
            v122 = __ldxr(v121);
          while (__stxr(v122 + 1, v121));
        }
        v123 = v266;
        *(_QWORD *)&v271 = v120;
        *((_QWORD *)&v271 + 1) = v266;
        if (v266)
        {
          v124 = (unint64_t *)&v266->__shared_owners_;
          do
            v125 = __ldxr(v124);
          while (__stxr(v125 + 1, v124));
          v272 = v120;
          do
            v126 = __ldaxr(v124);
          while (__stlxr(v126 - 1, v124));
          if (!v126)
          {
            ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
            std::__shared_weak_count::__release_weak(v123);
          }
        }
        else
        {
          v272 = v120;
        }
        v127 = v264;
        if (v264)
        {
          v128 = (unint64_t *)&v264->__shared_owners_;
          do
            v129 = __ldaxr(v128);
          while (__stlxr(v129 - 1, v128));
          if (!v129)
          {
            ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
            std::__shared_weak_count::__release_weak(v127);
          }
        }
        v130 = *(_QWORD *)v270;
        if (v272[31] >= 0)
          v131 = v272 + 8;
        else
          v131 = (char *)*((_QWORD *)v272 + 1);
        v132 = _os_log_pack_fill();
        *(_DWORD *)v132 = 136315138;
        *(_QWORD *)(v132 + 4) = v131;
        v133 = operator new();
        v134 = *(unsigned __int8 *)(v230 + 39);
        v135 = *(const char **)(v230 + 16);
        v136 = *(_QWORD *)(v230 + 24);
        v137 = v271;
        *(_OWORD *)(v133 + 8) = *(_OWORD *)&v270[8];
        if ((v134 & 0x80u) != 0)
          v134 = v136;
        else
          v135 = v232;
        *(_QWORD *)v133 = v130;
        *(_QWORD *)&v270[8] = 0;
        *(_QWORD *)&v270[16] = 0;
        *(_OWORD *)(v133 + 24) = v137;
        v271 = 0uLL;
        *(_QWORD *)(v133 + 40) = v135;
        *(_QWORD *)(v133 + 48) = v134;
        *(_BYTE *)(v133 + 56) = 1;
        v267 = 0;
        *(_QWORD *)&v263 = v133;
        (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v68 + 24) + 40))(*(_QWORD *)(v68 + 24), &v263);
        v138 = v263;
        *(_QWORD *)&v263 = 0;
        if (v138)
        {
          v139 = *(std::__shared_weak_count **)(v138 + 32);
          if (v139)
          {
            v140 = (unint64_t *)&v139->__shared_owners_;
            do
              v141 = __ldaxr(v140);
            while (__stlxr(v141 - 1, v140));
            if (!v141)
            {
              ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
              std::__shared_weak_count::__release_weak(v139);
            }
          }
          v142 = *(std::__shared_weak_count **)(v138 + 16);
          if (v142)
          {
            v143 = (unint64_t *)&v142->__shared_owners_;
            do
              v144 = __ldaxr(v143);
            while (__stlxr(v144 - 1, v143));
            if (!v144)
            {
              ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
              std::__shared_weak_count::__release_weak(v142);
            }
          }
          MEMORY[0x227684CE8](v138, 0x10F0C40B62ED6C6);
          v145 = v267;
          v267 = 0;
          if (v145)
          {
            v146 = (std::__shared_weak_count *)v145[4];
            if (v146)
            {
              v147 = (unint64_t *)&v146->__shared_owners_;
              do
                v148 = __ldaxr(v147);
              while (__stlxr(v148 - 1, v147));
              if (!v148)
              {
                ((void (*)(std::__shared_weak_count *))v146->__on_zero_shared)(v146);
                std::__shared_weak_count::__release_weak(v146);
              }
            }
            v149 = (std::__shared_weak_count *)v145[2];
            if (v149)
            {
              v150 = (unint64_t *)&v149->__shared_owners_;
              do
                v151 = __ldaxr(v150);
              while (__stlxr(v151 - 1, v150));
              if (!v151)
              {
                ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
                std::__shared_weak_count::__release_weak(v149);
              }
            }
            MEMORY[0x227684CE8](v145, 0x10F0C40B62ED6C6);
          }
        }
        v152 = (std::__shared_weak_count *)*((_QWORD *)&v271 + 1);
        v80 = v234;
        if (*((_QWORD *)&v271 + 1))
        {
          v153 = (unint64_t *)(*((_QWORD *)&v271 + 1) + 8);
          do
            v154 = __ldaxr(v153);
          while (__stlxr(v154 - 1, v153));
          if (!v154)
          {
            ((void (*)(std::__shared_weak_count *))v152->__on_zero_shared)(v152);
            std::__shared_weak_count::__release_weak(v152);
          }
        }
        v155 = *(std::__shared_weak_count **)&v270[16];
        if (*(_QWORD *)&v270[16])
        {
          v156 = (unint64_t *)(*(_QWORD *)&v270[16] + 8);
          do
            v157 = __ldaxr(v156);
          while (__stlxr(v157 - 1, v156));
          if (!v157)
          {
            ((void (*)(std::__shared_weak_count *))v155->__on_zero_shared)(v155);
            std::__shared_weak_count::__release_weak(v155);
          }
        }
        goto LABEL_224;
      }
    }
    memcpy(v78, v69, v77);
    goto LABEL_162;
  }
  os_log_type_enabled(v72, OS_LOG_TYPE_INFO);
  *(_DWORD *)v270 = 136315138;
  *(_QWORD *)&v270[4] = v69;
  v79 = (void *)_os_log_send_and_compose_impl();
  v80 = v234;
  if (v79)
    free(v79);
LABEL_224:
  if (v80)
  {
    v158 = (const char *)&__dst;
    if (v247 < 0)
      v158 = (const char *)__dst;
    sub_22322C138((uint64_t)&v236, "%s", v158);
    sub_223182C08((uint64_t)&v236);
  }
  sub_223182C08((uint64_t)&v236);
  v159 = v244;
  if (v244)
  {
    v160 = (unint64_t *)&v244->__shared_owners_;
    do
      v161 = __ldaxr(v160);
    while (__stlxr(v161 - 1, v160));
    if (!v161)
    {
      ((void (*)(std::__shared_weak_count *))v159->__on_zero_shared)(v159);
      std::__shared_weak_count::__release_weak(v159);
    }
  }
  if (SHIBYTE(v247) < 0)
    operator delete(__dst);
  v248[0] = *(void **)MEMORY[0x24BEDB7F0];
  v162 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(void **)((char *)v248 + *((_QWORD *)v248[0] - 3)) = *(void **)(MEMORY[0x24BEDB7F0] + 64);
  v249 = v162;
  v250 = MEMORY[0x24BEDB848] + 16;
  if (v256 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v259);
  v22 = (_QWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 64);
  if (!v21)
    goto LABEL_238;
  while (1)
  {
LABEL_240:
    while (1)
    {
      v163 = (_QWORD *)v21;
      v164 = *(_DWORD *)(v21 + 32);
      if ((int)v8 >= v164)
        break;
      v21 = *v163;
      v22 = v163;
      if (!*v163)
        goto LABEL_244;
    }
    if (v164 >= (int)v8)
      break;
    v21 = v163[1];
    if (!v21)
    {
      v22 = v163 + 1;
      goto LABEL_244;
    }
  }
LABEL_247:
  v168 = v262;
  v262 = 0;
  if (v168)
  {
    sub_223227930((uint64_t *)v248);
    v174 = v168[1];
    v168[1] = 0;
    if (v174)
      (*(void (**)(uint64_t *))(*v174 + 8))(v174);
    sub_22322797C(v248, v169, v170, v171, v172, v173);
    v175 = v168[1];
    v168[1] = 0;
    if (v175)
      (*(void (**)(uint64_t *))(*v175 + 8))(v175);
    v176 = *v168;
    *v168 = 0;
    if (v176)
      (*(void (**)(uint64_t *))(*v176 + 8))(v176);
    MEMORY[0x227684CE8](v168, 0x20C40A4A59CD2);
  }
  return v8;
}

void sub_223516A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a66;
  uint64_t *a67;
  uint64_t v67;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  if (*(_BYTE *)(v67 - 168) && *(char *)(v67 - 169) < 0)
    operator delete(*(void **)(v67 - 192));
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a15);
  if (a29 < 0)
    operator delete(__p);
  sub_223195348((uint64_t)&a30);
  sub_223167354(v67 - 208);
  sub_22322797C(&a66, v69, v70, v71, v72, v73);
  sub_22351916C(&a67);
  _Unwind_Resume(a1);
}

void sub_223516DAC(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CAEF8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CAEF8))
  {
    sub_22455F53C(&v5);
    sub_223174DE4(__p, "cv3d.recon.sng");
    sub_2232300E0(&v5, (uint64_t)__p, &qword_2540CAEF0);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_2540CAEF8);
  }
  *a1 = qword_2540CAEF0;
}

void sub_223516E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CAEF8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CAEF8);
  _Unwind_Resume(a1);
}

unint64_t sub_223516EA0(uint64_t a1, int a2, uint64_t a3)
{
  _BYTE *v3;
  BOOL v4;
  BOOL v5;
  BOOL v6;
  uint64_t v9;
  uint64_t **v10;
  uint64_t **v11;
  int v12;
  BOOL v13;
  uint64_t *v14;
  _BOOL4 v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int v21;
  BOOL v22;
  uint64_t *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t **v29;
  uint64_t **v30;
  int v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t **v36;
  uint64_t *v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t *v48;
  char *v49;
  uint64_t **v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t **v54;
  uint64_t **v55;
  char *v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t **v61;
  uint64_t *v62;
  uint64_t **v63;
  uint64_t v64;
  int v65;
  BOOL v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t **v70;
  unint64_t result;
  int v72;
  unint64_t v74;
  _QWORD *v75;
  size_t v76;
  void **v77;
  unint64_t v78;
  const void *v79;
  uint64_t v80;
  uint64_t v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  size_t v85;
  const char *v86;
  unsigned __int8 v87;
  unsigned __int8 v88;
  const char *v89;
  size_t v90;
  _BYTE *v91;
  uint64_t v92;
  unint64_t v93;
  const char *v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void **v99;
  NSObject *v100;
  uint64_t v101;
  uint64_t v102;
  size_t v103;
  std::__shared_weak_count_vtbl *v104;
  std::__shared_weak_count *v105;
  size_t v106;
  size_t v107;
  _QWORD *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char v113;
  _QWORD *v114;
  uint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *p_shared_owners;
  unint64_t v118;
  void *v119;
  unint64_t *v120;
  unint64_t v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  unint64_t v125;
  std::__shared_weak_count *v126;
  unint64_t *v127;
  unint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  std::__shared_weak_count *v141;
  unint64_t *v142;
  unint64_t v143;
  _QWORD *v144;
  std::__shared_weak_count *v145;
  unint64_t *v146;
  unint64_t v147;
  std::__shared_weak_count *v148;
  unint64_t *v149;
  unint64_t v150;
  std::__shared_weak_count *v151;
  unint64_t *v152;
  unint64_t v153;
  std::__shared_weak_count *v154;
  unint64_t *v155;
  unint64_t v156;
  const char *v157;
  std::__shared_weak_count *v158;
  unint64_t *v159;
  unint64_t v160;
  uint64_t v161;
  const char *v162;
  _QWORD v163[3];
  int v164;
  const char *v165;
  int v166;
  const char *v167;
  uint64_t v168;
  std::__shared_weak_count *v169;
  void *__dst[2];
  int64_t v171;
  _QWORD v172[2];
  _QWORD v173[3];
  const void *v174;
  uint64_t v175;
  const void *v176;
  unint64_t v177;
  void *__p;
  char v179;
  unint64_t v180;
  int v181;
  uint64_t v182;
  unint64_t v183;
  __int128 v184;
  std::__shared_weak_count *v185;
  char *v186;
  std::__shared_weak_count *v187;
  _QWORD *v188;
  __int128 v189;
  _BYTE v190[24];
  __int128 v191;
  void *v192[2];
  unint64_t v193;
  char v194;
  _QWORD v195[5];

  v195[2] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE **)(a1 + 24);
  if (v3[560])
    v4 = v3[880] == 0;
  else
    v4 = 1;
  v5 = v4 || v3[976] == 0;
  if (v5 || (v3[497] ? (v6 = v3[272] == 0) : (v6 = 1), v6 || !v3[524]))
  {
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 185, (uint64_t)"", 0, (uint64_t)"Mapper type not supported or cluster recon disabled.", 52, (void (*)(void **))sub_22457406C);
    goto LABEL_246;
  }
  v10 = (uint64_t **)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 64);
  if (!v9)
    goto LABEL_260;
  v11 = (uint64_t **)(a1 + 64);
  do
  {
    v12 = *(_DWORD *)(v9 + 32);
    v13 = v12 < a2;
    if (v12 >= a2)
      v14 = (uint64_t *)v9;
    else
      v14 = (uint64_t *)(v9 + 8);
    if (!v13)
      v11 = (uint64_t **)v9;
    v9 = *v14;
  }
  while (*v14);
  if (v11 == v10 || *((_DWORD *)v11 + 8) > a2)
  {
LABEL_260:
    v15 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 132, (uint64_t)"iter != vol_bundle_store.end()", 30, (uint64_t)"Bundle not found.", 17, (void (*)(void **))sub_22457406C);
    v11 = v10;
    if (v15)
      goto LABEL_246;
  }
  v16 = v11[5];
  sub_223517F6C(*(_QWORD *)(a1 + 16), a2, a3);
  v17 = *(_QWORD **)(a1 + 16);
  v18 = *v16;
  v19 = v17[53];
  if (!v19)
    goto LABEL_261;
  v20 = v17 + 53;
  do
  {
    v21 = *(_DWORD *)(v19 + 32);
    v22 = v21 < a2;
    if (v21 >= a2)
      v23 = (uint64_t *)v19;
    else
      v23 = (uint64_t *)(v19 + 8);
    if (!v22)
      v20 = (_QWORD *)v19;
    v19 = *v23;
  }
  while (*v23);
  if (v20 == v17 + 53 || *((_DWORD *)v20 + 8) > a2)
  {
LABEL_261:
    v20 = v17 + 53;
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 769, (uint64_t)"iter != mapper_bundle_event_listeners_.end()", 44, (uint64_t)"Bundle does not exist", 21, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_246;
    }
  }
  if (v20[5] != v18
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 770, (uint64_t)"iter->second == &listener", 25, (uint64_t)"Listener does not match", 23, (void (*)(void **))sub_22457406C))
  {
LABEL_246:
    abort();
  }
  v24 = (_QWORD *)v20[1];
  if (v24)
  {
    do
    {
      v25 = v24;
      v24 = (_QWORD *)*v24;
    }
    while (v24);
  }
  else
  {
    v26 = v20;
    do
    {
      v25 = (_QWORD *)v26[2];
      v4 = *v25 == (_QWORD)v26;
      v26 = v25;
    }
    while (!v4);
  }
  if ((_QWORD *)v17[52] == v20)
    v17[52] = v25;
  v27 = (uint64_t *)v17[53];
  --v17[54];
  sub_2231AFE60(v27, v20);
  operator delete(v20);
  (*(void (**)(uint64_t))(*(_QWORD *)v16[1] + 64))(v16[1]);
  if (*v16)
    (*(void (**)(uint64_t))(*(_QWORD *)*v16 + 40))(*v16);
  v28 = *(uint64_t **)(a1 + 64);
  v29 = v10;
  v30 = v10;
  if (v28)
  {
    while (1)
    {
      while (1)
      {
        v30 = (uint64_t **)v28;
        v31 = *((_DWORD *)v28 + 8);
        if (v31 <= a2)
          break;
        v28 = *v30;
        v29 = v30;
        if (!*v30)
          goto LABEL_54;
      }
      if (v31 >= a2)
        break;
      v28 = v30[1];
      if (!v28)
      {
        v29 = v30 + 1;
        goto LABEL_54;
      }
    }
  }
  else
  {
LABEL_54:
    v32 = (uint64_t *)v30;
    v30 = (uint64_t **)operator new(0x30uLL);
    *((_DWORD *)v30 + 8) = a2;
    v30[5] = 0;
    *v30 = 0;
    v30[1] = 0;
    v30[2] = v32;
    *v29 = (uint64_t *)v30;
    v33 = **(_QWORD **)(a1 + 56);
    v34 = (uint64_t *)v30;
    if (v33)
    {
      *(_QWORD *)(a1 + 56) = v33;
      v34 = *v29;
    }
    sub_2231A9A8C(*(uint64_t **)(a1 + 64), v34);
    ++*(_QWORD *)(a1 + 72);
  }
  v36 = *(uint64_t ***)(a1 + 88);
  v35 = *(_QWORD *)(a1 + 96);
  if ((unint64_t)v36 < v35)
  {
    v37 = v30[5];
    v30[5] = 0;
    *v36 = v37;
    v38 = v36 + 1;
    goto LABEL_81;
  }
  v39 = *(_QWORD *)(a1 + 80);
  v40 = (char *)v36 - v39;
  v41 = ((uint64_t)v36 - v39) >> 3;
  if ((unint64_t)(v41 + 1) >> 61)
    sub_22316E078();
  v42 = v35 - v39;
  v43 = v42 >> 2;
  if (v42 >> 2 <= (unint64_t)(v41 + 1))
    v43 = v41 + 1;
  if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFF8)
    v44 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v44 = v43;
  if (v44)
  {
    if (v44 >> 61)
      sub_223174E94();
    v45 = (char *)operator new(8 * v44);
  }
  else
  {
    v45 = 0;
  }
  v46 = &v45[8 * v41];
  v47 = &v45[8 * v44];
  v48 = v30[5];
  v30[5] = 0;
  *(_QWORD *)v46 = v48;
  v38 = v46 + 8;
  v49 = *(char **)(a1 + 80);
  v50 = *(uint64_t ***)(a1 + 88);
  if (v50 == (uint64_t **)v49)
  {
    *(_QWORD *)(a1 + 80) = v46;
    *(_QWORD *)(a1 + 88) = v38;
    *(_QWORD *)(a1 + 96) = v47;
    if (v50)
LABEL_80:
      operator delete(v50);
  }
  else
  {
    v51 = (char *)v50 - v49 - 8;
    if (v51 < 0x78
      || (char *)v50 - (v51 & 0xFFFFFFFFFFFFFFF8) - 8 < v46
      && &v40[(_QWORD)v45 - (v51 & 0xFFFFFFFFFFFFFFF8) - 8] < (char *)v50)
    {
      goto LABEL_259;
    }
    v52 = (v51 >> 3) + 1;
    v53 = 8 * (v52 & 0x3FFFFFFFFFFFFFFCLL);
    v46 -= v53;
    v54 = &v50[v53 / 0xFFFFFFFFFFFFFFF8];
    v55 = v50 - 2;
    v56 = &v45[8 * v41 - 16];
    v57 = v52 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v59 = *((_OWORD *)v55 - 1);
      v58 = *(_OWORD *)v55;
      *((_OWORD *)v55 - 1) = 0uLL;
      *(_OWORD *)v55 = 0uLL;
      *((_OWORD *)v56 - 1) = v59;
      *(_OWORD *)v56 = v58;
      v55 -= 4;
      v56 -= 32;
      v57 -= 4;
    }
    while (v57);
    v50 = v54;
    if (v52 != (v52 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_259:
      do
      {
        v60 = (uint64_t)*--v50;
        *v50 = 0;
        *((_QWORD *)v46 - 1) = v60;
        v46 -= 8;
      }
      while (v50 != (uint64_t **)v49);
    }
    v50 = *(uint64_t ***)(a1 + 80);
    v61 = *(uint64_t ***)(a1 + 88);
    *(_QWORD *)(a1 + 80) = v46;
    *(_QWORD *)(a1 + 88) = v38;
    *(_QWORD *)(a1 + 96) = v47;
    while (v61 != v50)
      sub_22351916C(--v61);
    if (v50)
      goto LABEL_80;
  }
LABEL_81:
  *(_QWORD *)(a1 + 88) = v38;
  v62 = *(uint64_t **)(a1 + 64);
  if (v62)
  {
    v63 = v10;
    v64 = *(_QWORD *)(a1 + 64);
    do
    {
      v65 = *(_DWORD *)(v64 + 32);
      v66 = v65 < a2;
      if (v65 >= a2)
        v67 = (uint64_t *)v64;
      else
        v67 = (uint64_t *)(v64 + 8);
      if (!v66)
        v63 = (uint64_t **)v64;
      v64 = *v67;
    }
    while (*v67);
    if (v63 != v10 && *((_DWORD *)v63 + 8) <= a2)
    {
      v68 = v63[1];
      if (v68)
      {
        do
        {
          v69 = v68;
          v68 = (uint64_t *)*v68;
        }
        while (v68);
      }
      else
      {
        v70 = v63;
        do
        {
          v69 = v70[2];
          v4 = *v69 == (_QWORD)v70;
          v70 = (uint64_t **)v69;
        }
        while (!v4);
      }
      if (*(uint64_t ***)(a1 + 56) == v63)
        *(_QWORD *)(a1 + 56) = v69;
      --*(_QWORD *)(a1 + 72);
      sub_2231AFE60(v62, (uint64_t *)v63);
      sub_22351916C(v63 + 5);
      operator delete(v63);
    }
  }
  sub_223516DAC(&v183);
  result = v183;
  if (**(int **)(v183 + 56) <= 3)
  {
    v72 = *(unsigned __int8 *)(v183 + 72);
    result = sub_22322F254(v183, "OSLogSurrogateAppender", 1, 0);
    if (v72 || result != 0)
    {
      v74 = result;
      sub_223195210((uint64_t)v172);
      sub_2231813E8(v173, (uint64_t)"VLM:GCRS recycle mapper bundle ", 31);
      v75 = (_QWORD *)std::ostream::operator<<();
      sub_2231813E8(v75, (uint64_t)" recycler size: ", 16);
      std::ostream::operator<<();
      if ((v181 & 0x10) != 0)
      {
        v78 = v180;
        if (v180 < v177)
        {
          v180 = v177;
          v78 = v177;
        }
        v79 = v176;
        v76 = v78 - (_QWORD)v176;
        if (v78 - (unint64_t)v176 > 0x7FFFFFFFFFFFFFF7)
          goto LABEL_165;
      }
      else
      {
        if ((v181 & 8) == 0)
        {
          v76 = 0;
          HIBYTE(v171) = 0;
          v77 = __dst;
          goto LABEL_120;
        }
        v79 = v174;
        v76 = v175 - (_QWORD)v174;
        if ((unint64_t)(v175 - (_QWORD)v174) > 0x7FFFFFFFFFFFFFF7)
LABEL_165:
          sub_22316DBC0();
      }
      if (v76 >= 0x17)
      {
        v80 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v76 | 7) != 0x17)
          v80 = v76 | 7;
        v81 = v80 + 1;
        v77 = (void **)operator new(v80 + 1);
        __dst[1] = (void *)v76;
        v171 = v81 | 0x8000000000000000;
        __dst[0] = v77;
      }
      else
      {
        HIBYTE(v171) = v76;
        v77 = __dst;
        if (!v76)
        {
LABEL_120:
          *((_BYTE *)v77 + v76) = 0;
          v163[0] = &v183;
          v163[1] = std::chrono::steady_clock::now().__d_.__rep_;
          v163[2] = std::chrono::system_clock::now().__d_.__rep_;
          v164 = 3;
          v165 = "unknown file";
          v166 = 198;
          v168 = 0;
          v169 = 0;
          v167 = "unknown function";
          if (v171 >= 0)
            v82 = (const char *)__dst;
          else
            v82 = (const char *)__dst[0];
          v83 = *(_QWORD *)v163[0];
          v84 = *(_QWORD *)v163[0] + 16;
          if (*(char *)(*(_QWORD *)v163[0] + 39) < 0)
          {
            v86 = *(const char **)(v83 + 16);
            v85 = *(_QWORD *)(v83 + 24);
            v88 = atomic_load((unsigned __int8 *)&qword_255788F58);
            if ((v88 & 1) != 0)
              goto LABEL_127;
          }
          else
          {
            v85 = *(unsigned __int8 *)(*(_QWORD *)v163[0] + 39);
            v86 = (const char *)(*(_QWORD *)v163[0] + 16);
            v87 = atomic_load((unsigned __int8 *)&qword_255788F58);
            if ((v87 & 1) != 0)
              goto LABEL_127;
          }
          if (__cxa_guard_acquire(&qword_255788F58))
          {
            sub_224568628((uint64_t)v190);
            sub_223199C58("com.apple.cv3d", (unint64_t)v190, &xmmword_255788F40);
            if ((_BYTE)v191 && (v190[23] & 0x80000000) != 0)
              operator delete(*(void **)v190);
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
            __cxa_guard_release(&qword_255788F58);
          }
LABEL_127:
          if (byte_255788F57 >= 0)
            v89 = (const char *)&xmmword_255788F40;
          else
            v89 = (const char *)xmmword_255788F40;
          if (byte_255788F57 >= 0)
            v90 = byte_255788F57;
          else
            v90 = *((_QWORD *)&xmmword_255788F40 + 1);
          *(_QWORD *)v190 = os_log_create(v89, v86);
          v91 = &v190[8];
          if (v90 > 0x7FFFFFFFFFFFFFF7)
            sub_22316DBC0();
          if (v90 >= 0x17)
          {
            v162 = v86;
            v92 = v83;
            v93 = v74;
            v94 = v82;
            v95 = v72;
            v96 = v84;
            v97 = (v90 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v90 | 7) != 0x17)
              v97 = v90 | 7;
            v98 = v97 + 1;
            v91 = operator new(v97 + 1);
            *(_QWORD *)&v190[16] = v90;
            *(_QWORD *)&v191 = v98 | 0x8000000000000000;
            *(_QWORD *)&v190[8] = v91;
            v84 = v96;
            v72 = v95;
            v82 = v94;
            v74 = v93;
            v83 = v92;
            v86 = v162;
          }
          else
          {
            BYTE7(v191) = v90;
            if (!v90)
            {
LABEL_141:
              v91[v90] = 0;
              BYTE8(v191) = 1;
              v99 = v192;
              if (v85 > 0x7FFFFFFFFFFFFFF7)
                sub_22316DBC0();
              if (v85 >= 0x17)
              {
                v101 = (v85 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v85 | 7) != 0x17)
                  v101 = v85 | 7;
                v102 = v101 + 1;
                v99 = (void **)operator new(v101 + 1);
                v192[1] = (void *)v85;
                v193 = v102 | 0x8000000000000000;
                v192[0] = v99;
              }
              else
              {
                HIBYTE(v193) = v85;
                if (!v85)
                {
                  LOBYTE(v192[0]) = 0;
                  v194 = 1;
                  v100 = *(NSObject **)v190;
                  if ((SHIBYTE(v193) & 0x80000000) == 0)
                    goto LABEL_145;
                  goto LABEL_151;
                }
              }
              memmove(v99, v86, v85);
              *((_BYTE *)v99 + v85) = 0;
              v194 = 1;
              v100 = *(NSObject **)v190;
              if ((SHIBYTE(v193) & 0x80000000) == 0)
              {
LABEL_145:
                if (!BYTE8(v191))
                  goto LABEL_154;
                goto LABEL_152;
              }
LABEL_151:
              operator delete(v192[0]);
              if (!BYTE8(v191))
                goto LABEL_154;
LABEL_152:
              if (SBYTE7(v191) < 0)
                operator delete(*(void **)&v190[8]);
LABEL_154:
              if (*(_QWORD *)v190)
                os_release(*(void **)v190);
              if (!v74 || !*(_QWORD *)(v74 + 24))
              {
                os_log_type_enabled(v100, OS_LOG_TYPE_INFO);
                *(_DWORD *)v190 = 136315138;
                *(_QWORD *)&v190[4] = v82;
                v109 = (void *)_os_log_send_and_compose_impl();
                if (v109)
                  free(v109);
                goto LABEL_230;
              }
              v103 = _os_log_pack_size();
              v104 = (std::__shared_weak_count_vtbl *)operator new(v103, (std::align_val_t)8uLL);
              v105 = (std::__shared_weak_count *)operator new();
              v105->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
              v105->__shared_owners_ = 0;
              v105->__shared_weak_owners_ = 0;
              v105[1].__vftable = v104;
              *(_QWORD *)&v184 = v104;
              *((_QWORD *)&v184 + 1) = v104;
              v186 = 0;
              v187 = 0;
              v185 = v105;
              v106 = strlen(v82);
              if (v106 > 0x7FFFFFFFFFFFFFF7)
                sub_22316DBC0();
              v107 = v106;
              if (v106 >= 0x17)
              {
                v110 = (v106 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v106 | 7) != 0x17)
                  v110 = v106 | 7;
                v111 = v110 + 1;
                v108 = operator new(v110 + 1);
                *(_QWORD *)&v189 = v107;
                *((_QWORD *)&v189 + 1) = v111 | 0x8000000000000000;
                v188 = v108;
              }
              else
              {
                HIBYTE(v189) = v106;
                v108 = &v188;
                if (!v106)
                {
LABEL_170:
                  *((_BYTE *)v108 + v107) = 0;
                  v112 = v188;
                  v195[0] = v189;
                  *(_QWORD *)((char *)v195 + 7) = *(_QWORD *)((char *)&v189 + 7);
                  v113 = HIBYTE(v189);
                  v114 = operator new(0x38uLL);
                  v114[1] = 0;
                  v114[2] = 0;
                  v114[3] = off_24EC1FA48;
                  *v114 = &off_24EC1F9F8;
                  v115 = v195[0];
                  v114[4] = v112;
                  v114[5] = v115;
                  *(_QWORD *)((char *)v114 + 47) = *(_QWORD *)((char *)v195 + 7);
                  *((_BYTE *)v114 + 55) = v113;
                  v195[0] = 0;
                  *(_QWORD *)((char *)v195 + 7) = 0;
                  v116 = v187;
                  v186 = (char *)(v114 + 3);
                  v187 = (std::__shared_weak_count *)v114;
                  if (v116)
                  {
                    p_shared_owners = (unint64_t *)&v116->__shared_owners_;
                    do
                      v118 = __ldaxr(p_shared_owners);
                    while (__stlxr(v118 - 1, p_shared_owners));
                    if (!v118)
                    {
                      ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
                      std::__shared_weak_count::__release_weak(v116);
                    }
                  }
                  *(_OWORD *)v190 = v184;
                  v119 = v186;
                  *(_QWORD *)&v190[16] = v185;
                  if (v185)
                  {
                    v120 = (unint64_t *)&v185->__shared_owners_;
                    do
                      v121 = __ldxr(v120);
                    while (__stxr(v121 + 1, v120));
                  }
                  v122 = v187;
                  *(_QWORD *)&v191 = v119;
                  *((_QWORD *)&v191 + 1) = v187;
                  if (v187)
                  {
                    v123 = (unint64_t *)&v187->__shared_owners_;
                    do
                      v124 = __ldxr(v123);
                    while (__stxr(v124 + 1, v123));
                    v192[0] = v119;
                    do
                      v125 = __ldaxr(v123);
                    while (__stlxr(v125 - 1, v123));
                    if (!v125)
                    {
                      ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
                      std::__shared_weak_count::__release_weak(v122);
                    }
                  }
                  else
                  {
                    v192[0] = v119;
                  }
                  v126 = v185;
                  if (v185)
                  {
                    v127 = (unint64_t *)&v185->__shared_owners_;
                    do
                      v128 = __ldaxr(v127);
                    while (__stlxr(v128 - 1, v127));
                    if (!v128)
                    {
                      ((void (*)(std::__shared_weak_count *))v126->__on_zero_shared)(v126);
                      std::__shared_weak_count::__release_weak(v126);
                    }
                  }
                  v129 = *(_QWORD *)v190;
                  if (*((char *)v192[0] + 31) >= 0)
                    v130 = (char *)v192[0] + 8;
                  else
                    v130 = (char *)*((_QWORD *)v192[0] + 1);
                  v131 = _os_log_pack_fill();
                  *(_DWORD *)v131 = 136315138;
                  *(_QWORD *)(v131 + 4) = v130;
                  v132 = operator new();
                  v133 = *(unsigned __int8 *)(v83 + 39);
                  v134 = *(_QWORD *)(v83 + 16);
                  v135 = *(_QWORD *)(v83 + 24);
                  v136 = v191;
                  *(_OWORD *)(v132 + 8) = *(_OWORD *)&v190[8];
                  if ((v133 & 0x80u) != 0)
                    v133 = v135;
                  else
                    v134 = v84;
                  *(_QWORD *)v132 = v129;
                  *(_QWORD *)&v190[8] = 0;
                  *(_QWORD *)&v190[16] = 0;
                  *(_OWORD *)(v132 + 24) = v136;
                  v191 = 0uLL;
                  *(_QWORD *)(v132 + 40) = v134;
                  *(_QWORD *)(v132 + 48) = v133;
                  *(_BYTE *)(v132 + 56) = 1;
                  v188 = 0;
                  *(_QWORD *)&v184 = v132;
                  (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v74 + 24) + 40))(*(_QWORD *)(v74 + 24), &v184);
                  v137 = v184;
                  *(_QWORD *)&v184 = 0;
                  if (v137)
                  {
                    v138 = *(std::__shared_weak_count **)(v137 + 32);
                    if (v138)
                    {
                      v139 = (unint64_t *)&v138->__shared_owners_;
                      do
                        v140 = __ldaxr(v139);
                      while (__stlxr(v140 - 1, v139));
                      if (!v140)
                      {
                        ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
                        std::__shared_weak_count::__release_weak(v138);
                      }
                    }
                    v141 = *(std::__shared_weak_count **)(v137 + 16);
                    if (v141)
                    {
                      v142 = (unint64_t *)&v141->__shared_owners_;
                      do
                        v143 = __ldaxr(v142);
                      while (__stlxr(v143 - 1, v142));
                      if (!v143)
                      {
                        ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
                        std::__shared_weak_count::__release_weak(v141);
                      }
                    }
                    MEMORY[0x227684CE8](v137, 0x10F0C40B62ED6C6);
                    v144 = v188;
                    v188 = 0;
                    if (v144)
                    {
                      v145 = (std::__shared_weak_count *)v144[4];
                      if (v145)
                      {
                        v146 = (unint64_t *)&v145->__shared_owners_;
                        do
                          v147 = __ldaxr(v146);
                        while (__stlxr(v147 - 1, v146));
                        if (!v147)
                        {
                          ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
                          std::__shared_weak_count::__release_weak(v145);
                        }
                      }
                      v148 = (std::__shared_weak_count *)v144[2];
                      if (v148)
                      {
                        v149 = (unint64_t *)&v148->__shared_owners_;
                        do
                          v150 = __ldaxr(v149);
                        while (__stlxr(v150 - 1, v149));
                        if (!v150)
                        {
                          ((void (*)(std::__shared_weak_count *))v148->__on_zero_shared)(v148);
                          std::__shared_weak_count::__release_weak(v148);
                        }
                      }
                      MEMORY[0x227684CE8](v144, 0x10F0C40B62ED6C6);
                    }
                  }
                  v151 = (std::__shared_weak_count *)*((_QWORD *)&v191 + 1);
                  if (*((_QWORD *)&v191 + 1))
                  {
                    v152 = (unint64_t *)(*((_QWORD *)&v191 + 1) + 8);
                    do
                      v153 = __ldaxr(v152);
                    while (__stlxr(v153 - 1, v152));
                    if (!v153)
                    {
                      ((void (*)(std::__shared_weak_count *))v151->__on_zero_shared)(v151);
                      std::__shared_weak_count::__release_weak(v151);
                    }
                  }
                  v154 = *(std::__shared_weak_count **)&v190[16];
                  if (*(_QWORD *)&v190[16])
                  {
                    v155 = (unint64_t *)(*(_QWORD *)&v190[16] + 8);
                    do
                      v156 = __ldaxr(v155);
                    while (__stlxr(v156 - 1, v155));
                    if (!v156)
                    {
                      ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
                      std::__shared_weak_count::__release_weak(v154);
                    }
                  }
LABEL_230:
                  if (v72)
                  {
                    v157 = (const char *)__dst;
                    if (v171 < 0)
                      v157 = (const char *)__dst[0];
                    sub_22322C138((uint64_t)v163, "%s", v157);
                    sub_223182C08((uint64_t)v163);
                  }
                  sub_223182C08((uint64_t)v163);
                  v158 = v169;
                  if (v169)
                  {
                    v159 = (unint64_t *)&v169->__shared_owners_;
                    do
                      v160 = __ldaxr(v159);
                    while (__stlxr(v160 - 1, v159));
                    if (!v160)
                    {
                      ((void (*)(std::__shared_weak_count *))v158->__on_zero_shared)(v158);
                      std::__shared_weak_count::__release_weak(v158);
                    }
                  }
                  if (SHIBYTE(v171) < 0)
                    operator delete(__dst[0]);
                  v172[0] = *MEMORY[0x24BEDB7F0];
                  v161 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
                  *(_QWORD *)((char *)v172 + *(_QWORD *)(v172[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
                  v173[0] = v161;
                  v173[1] = MEMORY[0x24BEDB848] + 16;
                  if (v179 < 0)
                    operator delete(__p);
                  std::streambuf::~streambuf();
                  std::iostream::~basic_iostream();
                  return MEMORY[0x227684BE0](&v182);
                }
              }
              memcpy(v108, v82, v107);
              goto LABEL_170;
            }
          }
          memmove(v91, v89, v90);
          goto LABEL_141;
        }
      }
      memmove(v77, v79, v76);
      goto LABEL_120;
    }
  }
  return result;
}

void sub_223517E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28)
{
  uint64_t v28;

  if (*(_BYTE *)(v28 - 168) && *(char *)(v28 - 169) < 0)
    operator delete(*(void **)(v28 - 192));
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a13);
  if (a27 < 0)
  {
    operator delete(__p);
    sub_223195348((uint64_t)&a28);
    _Unwind_Resume(a1);
  }
  sub_223195348((uint64_t)&a28);
  _Unwind_Resume(a1);
}

uint64_t sub_223517F6C(uint64_t a1, int a2, uint64_t a3)
{
  _QWORD **v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  _QWORD *v15;
  _QWORD **v16;
  BOOL v17;
  uint64_t v19;
  int v20;
  _QWORD **v21;
  _QWORD *v22[2];

  sub_223CF60A0((_QWORD **)(a1 + 456), a2, a3, (uint64_t)&v21);
  v5 = v21;
  if (v21 == v22)
  {
    v6 = 0;
  }
  else
  {
    v6 = 0;
    do
    {
      v7 = *((unsigned int *)v5 + 7);
      if (*(_QWORD *)(a1 + 104) <= v7
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 667, (uint64_t)"index < metadata_blocks_.size()", 31, (uint64_t)"Out of range", 12, (void (*)(void **))sub_22457406C))
      {
LABEL_17:
        abort();
      }
      v8 = *(_QWORD *)(a1 + 96) + v7;
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8 * (v8 / 0x1F));
      v10 = v8 % 0x1F;
      if (*(_BYTE *)(v9 + 132 * v10 + 20))
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 668, (uint64_t)"!metadata_blocks_[index].IsErased()", 35, (uint64_t)"Cannot get an erased block", 26, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_17;
        }
        v11 = *(_QWORD *)(a1 + 96) + v7;
        v10 = v11 % 0x1F;
        v9 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8 * (v11 / 0x1F));
      }
      v12 = (uint64_t *)(v9 + 132 * v10);
      v13 = *v12;
      v20 = *((_DWORD *)v12 + 2);
      v19 = v13;
      v14 = sub_2235196C0(a1 + 16, (uint64_t)&v19, a2);
      v15 = v5[1];
      if (v15)
      {
        do
        {
          v16 = (_QWORD **)v15;
          v15 = (_QWORD *)*v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          v16 = (_QWORD **)v5[2];
          v17 = *v16 == v5;
          v5 = v16;
        }
        while (!v17);
      }
      v6 |= v14;
      v5 = v16;
    }
    while (v16 != v22);
  }
  sub_223198030((uint64_t)&v21, v22[0]);
  return v6 & 1;
}

void sub_223518148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, _QWORD *a13)
{
  sub_223198030((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_223518160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, _QWORD *a13)
{
  sub_223198030((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_223518178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, _QWORD *a13)
{
  sub_223198030((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_223518190(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t ***v10;
  uint64_t v11;
  unsigned int v12;
  float *v13;
  float *v14;
  float v15;
  float v16;
  unsigned int v17;
  unsigned int v18;
  float v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  float *v34;
  float v35;
  float v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _OWORD *v43;
  _OWORD *v44;
  uint64_t **v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  void **v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  int v55;
  BOOL v56;
  uint64_t *v57;
  _BYTE *v58;
  BOOL v59;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  int v66;
  _DWORD *v67;
  uint64_t v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void **v86;
  std::__shared_weak_count *v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;

  v91 = *MEMORY[0x24BDAC8D0];
  v5 = operator new();
  v6 = v5;
  v7 = *(std::__shared_weak_count **)(a2 + 8);
  v86 = *(void ***)a2;
  v87 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  *(_QWORD *)v5 = 0;
  *(_QWORD *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 48) = 0;
  v10 = (uint64_t ***)(v5 + 48);
  *(_QWORD *)(v5 + 64) = 0;
  *(_QWORD *)(v5 + 56) = v5 + 64;
  *(_QWORD *)(v5 + 80) = 0;
  *(_QWORD *)(v5 + 72) = 0;
  *(_QWORD *)(v5 + 40) = 0;
  *(_QWORD *)(v5 + 88) = 0;
  *(_QWORD *)(v5 + 96) = 0;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_DWORD *)(v5 + 144) = 1065353216;
  *(_OWORD *)(v5 + 128) = 0u;
  sub_2232D3688();
  *(_DWORD *)(v6 + 104) = 0;
  v11 = *(_QWORD *)(v6 + 24);
  if (!*(_BYTE *)(v11 + 560))
    sub_22324A974();
  if (*(_BYTE *)(v11 + 372))
  {
    v12 = *(_DWORD *)(v11 + 368);
    if (*(_BYTE *)(v11 + 364))
    {
LABEL_7:
      v13 = (float *)(v11 + 344);
      goto LABEL_24;
    }
  }
  else
  {
    if (*(_BYTE *)(v11 + 364))
    {
      v14 = (float *)(v11 + 344);
    }
    else
    {
      if (!*(_BYTE *)(v11 + 328))
      {
LABEL_145:
        sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Common/src/MeshingConfig.cpp", 152, (uint64_t)&unk_2245AD60A, 0, (uint64_t)"No valid meshing mapper exists.", 31, (void (*)(void **))sub_22457406C);
        goto LABEL_146;
      }
      v14 = (float *)(v11 + 288);
    }
    v15 = pow((float)(*v14 * 8.0), 3.0);
    v16 = log2f(1811.9 / v15);
    if (*(_BYTE *)(v11 + 524))
    {
      v17 = *(_DWORD *)(v11 + 528);
      if (v17 >= 0xF
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Common/include/Reconstruction/Common/Utils.h", 101, (uint64_t)"memory_factor <= kLowerBound && \"Invalid memory factor\"", 55, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_146:
        abort();
      }
    }
    else
    {
      LOBYTE(v17) = 0;
    }
    v18 = vcvtms_u32_f32(v16);
    if (v18 >= 0x11)
      v18 = 17;
    if (v18 <= 0xE)
      LOBYTE(v18) = 14;
    v12 = 1 << (v18 - v17);
    if (*(_BYTE *)(v11 + 364))
      goto LABEL_7;
  }
  if (!*(_BYTE *)(v11 + 328))
    goto LABEL_145;
  v13 = (float *)(v11 + 288);
LABEL_24:
  v19 = *v13;
  v20 = (_QWORD *)operator new();
  sub_223A2E91C(v20, v12, *(_BYTE *)(v11 + 385), v19);
  v21 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v6 + 16) = v20;
  if (v21)
    (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
  *(_DWORD *)(v6 + 104) = 0;
  v22 = *(_QWORD *)(v6 + 24);
  if (!*(_BYTE *)(v22 + 47))
  {
    nullsub_30(&v86);
    sub_223226DFC(&v90, &v86, v23, v24, v25, v26);
    v27 = v90;
    v90 = 0uLL;
    v28 = *(std::__shared_weak_count **)(v6 + 40);
    *(_OWORD *)(v6 + 32) = v27;
    if (!v28)
      goto LABEL_34;
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
      v31 = (std::__shared_weak_count *)*((_QWORD *)&v90 + 1);
      if (!*((_QWORD *)&v90 + 1))
        goto LABEL_38;
    }
    else
    {
LABEL_34:
      v31 = (std::__shared_weak_count *)*((_QWORD *)&v90 + 1);
      if (!*((_QWORD *)&v90 + 1))
        goto LABEL_38;
    }
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
      v22 = *(_QWORD *)(v6 + 24);
      if (!*(_BYTE *)(v22 + 372))
        goto LABEL_39;
LABEL_28:
      if (*(_DWORD *)(v22 + 368) > 0xFFFu)
        goto LABEL_54;
      goto LABEL_53;
    }
LABEL_38:
    v22 = *(_QWORD *)(v6 + 24);
    if (!*(_BYTE *)(v22 + 372))
      goto LABEL_39;
    goto LABEL_28;
  }
  if (*(_BYTE *)(v22 + 372))
    goto LABEL_28;
LABEL_39:
  if (*(_BYTE *)(v22 + 364))
  {
    v34 = (float *)(v22 + 344);
  }
  else
  {
    if (!*(_BYTE *)(v22 + 328))
    {
      sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Common/src/MeshingConfig.cpp", 152, (uint64_t)&unk_2245AD60A, 0, (uint64_t)"No valid meshing mapper exists.", 31, (void (*)(void **))sub_22457406C);
      goto LABEL_149;
    }
    v34 = (float *)(v22 + 288);
  }
  v35 = pow((float)(*v34 * 8.0), 3.0);
  v36 = log2f(1811.9 / v35);
  if (*(_BYTE *)(v22 + 524))
  {
    v37 = *(_DWORD *)(v22 + 528);
    if (v37 >= 0xF
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Common/include/Reconstruction/Common/Utils.h", 101, (uint64_t)"memory_factor <= kLowerBound && \"Invalid memory factor\"", 55, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_149;
    }
  }
  else
  {
    LOBYTE(v37) = 0;
  }
  v38 = vcvtms_u32_f32(v36);
  if (v38 >= 0x11)
    v38 = 17;
  if (v38 <= 0xE)
    LOBYTE(v38) = 14;
  if ((1 << (v38 - v37)) <= 0xFFF)
  {
LABEL_53:
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 126, (uint64_t)"recon::ComputeBlockTableBucketSize(*session_config.meshing) >= (1u << vlm::cfg::kMinBucketsOrderOfMagnitude)", 108, (uint64_t)"Table size too small!", 21, (void (*)(void **))sub_22457406C))goto LABEL_54;
LABEL_149:
    abort();
  }
LABEL_54:
  v39 = operator new();
  *(_QWORD *)v39 = 0;
  *(_QWORD *)(v39 + 8) = 0;
  *(_QWORD *)(v39 + 16) = 0;
  v40 = (char *)operator new(0x5460uLL);
  *(_QWORD *)v39 = v40;
  *(_QWORD *)(v39 + 8) = v40;
  v41 = v40 + 21600;
  *(_QWORD *)(v39 + 16) = v40 + 21600;
  v42 = 50;
  do
  {
    v43 = (_OWORD *)sub_2241498F4((uint64_t)v40, 1);
    v43[25] = 0u;
    v43[26] = 0u;
    v43[24] = 0u;
    v40 = (char *)(v43 + 27);
    --v42;
  }
  while (v42);
  *(_QWORD *)(v39 + 8) = v41;
  *(_QWORD *)(v39 + 32) = 0;
  *(_QWORD *)(v39 + 40) = 0;
  *(_QWORD *)(v39 + 24) = 0;
  v44 = operator new(0x32uLL);
  *(_QWORD *)(v39 + 32) = (char *)v44 + 50;
  *(_QWORD *)(v39 + 40) = (char *)v44 + 50;
  *v44 = 0u;
  v44[1] = 0u;
  v44[2] = 0u;
  *((_WORD *)v44 + 24) = 0;
  *(_QWORD *)(v39 + 24) = v44;
  *(_OWORD *)(v39 + 48) = 0u;
  *(_OWORD *)(v39 + 64) = 0u;
  *(_DWORD *)(v39 + 80) = 1065353216;
  v45 = *v10;
  *v10 = (uint64_t **)v39;
  if (v45)
    sub_2235190BC(v6 + 48, v45);
  *a3 = v6;
  v46 = v87;
  if (!v87)
    goto LABEL_152;
  v47 = (unint64_t *)&v87->__shared_owners_;
  do
    v48 = __ldaxr(v47);
  while (__stlxr(v48 - 1, v47));
  if (!v48)
  {
    ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
    std::__shared_weak_count::__release_weak(v46);
    if (*(_BYTE *)(a1 + 560))
      goto LABEL_66;
  }
  else
  {
LABEL_152:
    if (*(_BYTE *)(a1 + 560))
      goto LABEL_66;
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 221, (uint64_t)"config.meshing.has_value()", 26, (uint64_t)"Do not support meshing.", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_66:
  if (!*(_BYTE *)(a1 + 328))
    goto LABEL_113;
  v49 = 0;
  if (*(_BYTE *)(a1 + 560) && *(_BYTE *)(a1 + 880) && *(_BYTE *)(a1 + 976))
  {
    if (*(_BYTE *)(a1 + 497) && *(_BYTE *)(a1 + 272) && *(_BYTE *)(a1 + 524))
      goto LABEL_113;
    v49 = operator new();
    *(_QWORD *)&v90 = 0;
    sub_223ABF6DC(v49, a1, (uint64_t *)&v90);
    if ((_QWORD)v90)
      (*(void (**)(_QWORD))(*(_QWORD *)v90 + 8))(v90);
  }
  v50 = (void **)operator new();
  sub_223A5D068((uint64_t)v50, a1);
  v51 = *a3;
  v53 = (uint64_t *)(*a3 + 64);
  v52 = *v53;
  if (*v53)
  {
    v54 = *a3 + 64;
    do
    {
      v55 = *(_DWORD *)(v52 + 32);
      v56 = v55 < 0;
      if (v55 >= 0)
        v57 = (uint64_t *)v52;
      else
        v57 = (uint64_t *)(v52 + 8);
      if (!v56)
        v54 = v52;
      v52 = *v57;
    }
    while (*v57);
    if ((uint64_t *)v54 != v53
      && *(int *)(v54 + 32) <= 0
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 205, (uint64_t)"!vol_bundle_store.contains(kVolumetricMapperId) && \"Default mapper already created\"", 83, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_147;
    }
  }
  v58 = *(_BYTE **)(v51 + 24);
  v59 = !v58[560] || v58[880] == 0;
  if (!v59 && v58[976] != 0)
  {
    v61 = !v58[497] || v58[272] == 0;
    if (!v61
      && v58[524]
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 207, (uint64_t)"!frame::SupportClusterRecon(session_config) && \"Should not be used with cluster-recon\"", 86, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
LABEL_147:
      abort();
    }
  }
  v90 = xmmword_2245F6D10;
  v62 = *(_QWORD *)(v51 + 16);
  v63 = operator new();
  v86 = v50;
  v89 = v49;
  sub_223514BDC((uint64_t **)v63, (uint64_t *)&v86, &v89, 0x100000000, &v90, 1, v62);
  v88 = v63;
  if (v89)
    (*(void (**)(uint64_t))(*(_QWORD *)v89 + 8))(v89);
  if (v86)
    (*((void (**)(void **))*v86 + 1))(v86);
  v64 = *v53;
  v65 = v53;
  if (*v53)
  {
    while (1)
    {
      while (1)
      {
        v65 = (uint64_t *)v64;
        v66 = *(_DWORD *)(v64 + 32);
        if (v66 < 1)
          break;
        v64 = *v65;
        v53 = v65;
        if (!*v65)
          goto LABEL_110;
      }
      if ((v66 & 0x80000000) == 0)
        break;
      v64 = v65[1];
      if (!v64)
      {
        v53 = v65 + 1;
        goto LABEL_110;
      }
    }
    v88 = 0;
  }
  else
  {
LABEL_110:
    v67 = operator new(0x30uLL);
    v67[8] = 0;
    v88 = 0;
    *((_QWORD *)v67 + 5) = v63;
    *(_QWORD *)v67 = 0;
    *((_QWORD *)v67 + 1) = 0;
    *((_QWORD *)v67 + 2) = v65;
    *v53 = (uint64_t)v67;
    v68 = **(_QWORD **)(v51 + 56);
    if (v68)
    {
      *(_QWORD *)(v51 + 56) = v68;
      v67 = (_DWORD *)*v53;
    }
    sub_2231A9A8C(*(uint64_t **)(v51 + 64), (uint64_t *)v67);
    ++*(_QWORD *)(v51 + 72);
    v63 = v88;
    v88 = 0;
    if (!v63)
    {
LABEL_113:
      if (!*(_BYTE *)(a1 + 416))
        goto LABEL_138;
      goto LABEL_127;
    }
  }
  sub_223227930((uint64_t *)&v90);
  v74 = *(_QWORD *)(v63 + 8);
  *(_QWORD *)(v63 + 8) = 0;
  if (v74)
    (*(void (**)(uint64_t))(*(_QWORD *)v74 + 8))(v74);
  sub_22322797C((void **)&v90, v69, v70, v71, v72, v73);
  v75 = *(_QWORD *)(v63 + 8);
  *(_QWORD *)(v63 + 8) = 0;
  if (v75)
    (*(void (**)(uint64_t))(*(_QWORD *)v75 + 8))(v75);
  v76 = *(uint64_t **)v63;
  *(_QWORD *)v63 = 0;
  if (v76)
    (*(void (**)(uint64_t *))(*v76 + 8))(v76);
  MEMORY[0x227684CE8](v63, 0x20C40A4A59CD2);
  if (*(_BYTE *)(a1 + 416))
  {
LABEL_127:
    v77 = 0;
    if (*(_BYTE *)(a1 + 560))
    {
      if (*(_BYTE *)(a1 + 880))
      {
        if (*(_BYTE *)(a1 + 976))
        {
          v77 = operator new();
          *(_QWORD *)&v90 = 0;
          sub_223ABF11C(v77, a1, (uint64_t *)&v90);
          if ((_QWORD)v90)
            (*(void (**)(_QWORD))(*(_QWORD *)v90 + 8))(v90);
        }
      }
    }
    v78 = operator new();
    sub_223918394(v78, a1);
    v79 = (_QWORD *)operator new();
    *v79 = v77;
    v79[1] = v78;
    v80 = *(uint64_t **)*a3;
    *(_QWORD *)*a3 = v79;
    if (v80)
    {
      v81 = v80[1];
      v80[1] = 0;
      if (v81)
        (*(void (**)(uint64_t))(*(_QWORD *)v81 + 8))(v81);
      v82 = *v80;
      *v80 = 0;
      if (v82)
        (*(void (**)(uint64_t))(*(_QWORD *)v82 + 8))(v82);
      MEMORY[0x227684CE8](v80, 0x20C40A4A59CD2);
    }
  }
LABEL_138:
  if (*(_BYTE *)(a1 + 364))
  {
    v83 = operator new();
    *(_QWORD *)&v90 = 0;
    sub_223AAC6D4(v83, (__int128 *)(a1 + 332), (uint64_t *)&v90);
    if ((_QWORD)v90)
      (*(void (**)(_QWORD))(*(_QWORD *)v90 + 8))(v90);
    v84 = *(_QWORD *)(*a3 + 8);
    *(_QWORD *)(*a3 + 8) = v83;
    if (v84)
      (*(void (**)(uint64_t))(*(_QWORD *)v84 + 8))(v84);
  }
}

void sub_223518C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  if (a15)
    (*(void (**)(uint64_t))(*(_QWORD *)a15 + 8))(a15);
  MEMORY[0x227684CE8](v15, 0x10A1C40F97F79BFLL);
  sub_223518F34(a10);
  _Unwind_Resume(a1);
}

void sub_223518DEC()
{
  uint64_t **v0;

  sub_223518F78(v0);
  MEMORY[0x227684CE8](v0, 0x10B0C40C5532595);
  JUMPOUT(0x223518E78);
}

void sub_223518E20()
{
  uint64_t v0;

  MEMORY[0x227684CE8](v0, 0x10B1C4048FBB818);
  JUMPOUT(0x223518E78);
}

void sub_223518E40()
{
  uint64_t v0;
  void **v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(v0 + 128);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *v1;
  *v1 = 0;
  if (v4)
    operator delete(v4);
  JUMPOUT(0x223518E80);
}

void sub_223518E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t ***v3;
  uint64_t v4;
  uint64_t ***v5;
  uint64_t v6;
  uint64_t ***v7;
  uint64_t v8;
  uint64_t **v10;
  uint64_t v11;
  uint64_t v12;
  va_list va;

  va_start(va, a3);
  sub_223515074(v8);
  sub_223515100(v7);
  sub_223519678(v6, *v3);
  v10 = *v5;
  *v5 = 0;
  if (v10)
  {
    sub_2235190BC((uint64_t)v5, v10);
    sub_223167354(a2);
    v11 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(v4 + 16) = 0;
    if (!v11)
    {
LABEL_3:
      v12 = *(_QWORD *)(v4 + 8);
      *(_QWORD *)(v4 + 8) = 0;
      if (!v12)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else
  {
    sub_223167354(a2);
    v11 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(v4 + 16) = 0;
    if (!v11)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  v12 = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(v4 + 8) = 0;
  if (!v12)
  {
LABEL_5:
    sub_223515160((uint64_t **)v4);
    sub_223167354((uint64_t)va);
    MEMORY[0x227684CE8](v4, 0x10E0C40148EADE0);
    _Unwind_Resume(a1);
  }
LABEL_4:
  (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  goto LABEL_5;
}

uint64_t *sub_223518F34(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_22351920C(v2);
    MEMORY[0x227684CE8](v3, 0x10E0C40148EADE0);
  }
  return a1;
}

uint64_t **sub_223518F78(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;

  v2 = *a1;
  if (*a1)
  {
    v3 = a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v3 -= 54;
        sub_223518FD8(v3);
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t *sub_223518FD8(uint64_t *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = (std::__shared_weak_count *)a1[53];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[51];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[51];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[49];
  if (!v8)
    return sub_22316F8F4(a1);
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    return sub_22316F8F4(a1);
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  return sub_22316F8F4(a1);
}

void sub_2235190BC(uint64_t a1, uint64_t **a2)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;

  if (a2)
  {
    v3 = a2[8];
    if (v3)
    {
      do
      {
        v4 = (uint64_t *)*v3;
        operator delete(v3);
        v3 = v4;
      }
      while (v4);
    }
    v5 = a2[6];
    a2[6] = 0;
    if (v5)
      operator delete(v5);
    v6 = a2[3];
    if (v6)
    {
      a2[4] = v6;
      operator delete(v6);
    }
    v7 = *a2;
    if (*a2)
    {
      v8 = a2[1];
      v9 = *a2;
      if (v8 != v7)
      {
        do
        {
          v8 -= 54;
          sub_223518FD8(v8);
        }
        while (v8 != v7);
        v9 = *a2;
      }
      a2[1] = v7;
      operator delete(v9);
    }
    JUMPOUT(0x227684CE8);
  }
}

uint64_t **sub_22351916C(uint64_t **result)
{
  uint64_t *v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v1 = *result;
  *result = 0;
  if (v1)
  {
    sub_223227930((uint64_t *)&v10);
    v7 = v1[1];
    v1[1] = 0;
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    sub_22322797C(&v10, v2, v3, v4, v5, v6);
    v8 = v1[1];
    v1[1] = 0;
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = *v1;
    *v1 = 0;
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    return (uint64_t **)MEMORY[0x227684CE8](v1, 0x20C40A4A59CD2);
  }
  return result;
}

uint64_t sub_22351920C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  uint64_t **v8;
  uint64_t **v9;
  void *v10;
  uint64_t **v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(std::__shared_weak_count **)(a1 + 160);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(_QWORD **)(a1 + 128);
    if (!v5)
      goto LABEL_7;
  }
  else
  {
LABEL_5:
    v5 = *(_QWORD **)(a1 + 128);
    if (!v5)
      goto LABEL_7;
  }
  do
  {
    v6 = (_QWORD *)*v5;
    operator delete(v5);
    v5 = v6;
  }
  while (v6);
LABEL_7:
  v7 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = 0;
  if (v7)
    operator delete(v7);
  v8 = *(uint64_t ***)(a1 + 80);
  if (v8)
  {
    v9 = *(uint64_t ***)(a1 + 88);
    v10 = *(void **)(a1 + 80);
    if (v9 != v8)
    {
      do
        sub_22351916C(--v9);
      while (v9 != v8);
      v10 = *(void **)(a1 + 80);
    }
    *(_QWORD *)(a1 + 88) = v8;
    operator delete(v10);
  }
  sub_223519678(a1 + 56, *(uint64_t ***)(a1 + 64));
  v11 = *(uint64_t ***)(a1 + 48);
  *(_QWORD *)(a1 + 48) = 0;
  if (v11)
    sub_2235190BC(a1 + 48, v11);
  v12 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v12)
    goto LABEL_20;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (v14)
  {
LABEL_20:
    v15 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = 0;
    if (!v15)
      goto LABEL_22;
    goto LABEL_21;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  v15 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  if (v15)
LABEL_21:
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
LABEL_22:
  v16 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v16)
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  v17 = *(uint64_t **)a1;
  *(_QWORD *)a1 = 0;
  if (v17)
  {
    v18 = v17[1];
    v17[1] = 0;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = *v17;
    *v17 = 0;
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
    MEMORY[0x227684CE8](v17, 0x20C40A4A59CD2);
  }
  return a1;
}

void sub_2235193C8()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235193DC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC44C10;
  result[1] = v3;
  return result;
}

uint64_t sub_223519410(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC44C10;
  a2[1] = v2;
  return result;
}

uint64_t sub_22351942C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(***(_QWORD ***)(a1 + 8) + 64))(**(_QWORD **)(a1 + 8), a2, *a3);
}

uint64_t sub_223519444(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d5recon3sng22VolumetricMapperBundle6AttachERNS0_3vlm10BlockStoreEiE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d5recon3sng22VolumetricMapperBundle6AttachERNS0_3vlm10BlockStoreEiE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d5recon3sng22VolumetricMapperBundle6AttachERNS0_3vlm10BlockStoreEiE3$_0"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d5recon3sng22VolumetricMapperBundle6AttachERNS0_3vlm10BlockStoreEiE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235194B0()
{
  return &unk_24EC44C80;
}

uint64_t **sub_2235194BC(void ***a1, int *a2, uint64_t **a3)
{
  void **v5;
  void **v6;
  int v7;
  uint64_t **v8;
  uint64_t *v9;
  int v10;
  BOOL v11;
  uint64_t **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void **v18;
  BOOL v19;
  void **v20;
  _DWORD *v21;
  void **v22;
  uint64_t *v23;
  int v24;

  v6 = (void **)(a1 + 1);
  v5 = a1[1];
  v7 = *a2;
  if (v5)
  {
    v8 = (uint64_t **)(a1 + 1);
    v9 = (uint64_t *)a1[1];
    do
    {
      v10 = *((_DWORD *)v9 + 8);
      v11 = v10 < v7;
      if (v10 >= v7)
        v12 = (uint64_t **)v9;
      else
        v12 = (uint64_t **)(v9 + 1);
      if (!v11)
        v8 = (uint64_t **)v9;
      v9 = *v12;
    }
    while (*v12);
    v13 = (void **)(a1 + 1);
    if (v8 != (uint64_t **)v6)
    {
      if (v7 >= *((_DWORD *)v8 + 8))
      {
        v8[5] = *a3;
        return v8;
      }
      v13 = (void **)v8;
    }
    v14 = (void **)*v13;
    v15 = v13;
    if (*a1 == v13)
      goto LABEL_23;
  }
  else
  {
    v14 = 0;
    v13 = (void **)(a1 + 1);
    v15 = (void **)(a1 + 1);
    if (*a1 == v6)
    {
LABEL_23:
      if (v14)
        v20 = v15;
      else
        v20 = v13;
      if (v14)
        v6 = v15 + 1;
      else
        v6 = v13;
      goto LABEL_29;
    }
  }
  if (v14)
  {
    v16 = v14;
    do
    {
      v15 = v16;
      v16 = (void **)v16[1];
    }
    while (v16);
  }
  else
  {
    v18 = v13;
    do
    {
      v15 = (void **)v18[2];
      v19 = *v15 == v18;
      v18 = v15;
    }
    while (v19);
  }
  if (*((_DWORD *)v15 + 8) < v7)
    goto LABEL_23;
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        v20 = v5;
        v24 = *((_DWORD *)v5 + 8);
        if (v24 <= v7)
          break;
        v5 = (void **)*v20;
        v6 = v20;
        if (!*v20)
          goto LABEL_30;
      }
      if (v24 >= v7)
        break;
      v6 = v20 + 1;
      v5 = (void **)v20[1];
      if (!v5)
        goto LABEL_30;
    }
  }
  else
  {
    v20 = (void **)(a1 + 1);
  }
LABEL_29:
  v21 = *v6;
  if (!*v6)
  {
LABEL_30:
    v21 = operator new(0x30uLL);
    v21[8] = v7;
    *((_QWORD *)v21 + 5) = *a3;
    *(_QWORD *)v21 = 0;
    *((_QWORD *)v21 + 1) = 0;
    *((_QWORD *)v21 + 2) = v20;
    *v6 = v21;
    v22 = (void **)**a1;
    v23 = (uint64_t *)v21;
    if (v22)
    {
      *a1 = v22;
      v23 = (uint64_t *)*v6;
    }
    sub_2231A9A8C((uint64_t *)a1[1], v23);
    a1[2] = (void **)((char *)a1[2] + 1);
  }
  return (uint64_t **)v21;
}

void sub_223519678(uint64_t a1, uint64_t **a2)
{
  if (a2)
  {
    sub_223519678(a1, *a2);
    sub_223519678(a1, a2[1]);
    sub_22351916C(a2 + 5);
    operator delete(a2);
  }
}

BOOL sub_2235196C0(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  unsigned __int8 v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  unsigned __int8 v30;
  unint64_t v31;
  unint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  unsigned __int8 v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  unsigned __int8 v47;
  unint64_t v48;
  unint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  unsigned __int8 v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  unsigned __int8 v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  _DWORD *v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  _BYTE *v75;
  _DWORD *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _OWORD *v82;
  char *v83;
  uint64_t v84;
  __int128 v85;
  int v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  BOOL v91;
  uint64_t *v92;
  void *v93;
  _QWORD *v95;
  _QWORD *v96;
  BOOL v97;
  _QWORD *v98;
  signed int v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t *v102;
  unsigned __int8 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE __p[12];
  int v108;

  v6 = (_QWORD *)(a1 + 8);
  *(_DWORD *)__p = a3;
  *(_QWORD *)&__p[4] = *(_QWORD *)a2;
  v108 = *(_DWORD *)(a2 + 8);
  v7 = sub_22351A45C((_QWORD *)(a1 + 8), (int *)__p);
  v8 = v7;
  if (v7)
  {
    v101 = a2;
    v102 = v7;
    v99 = a3;
    v98 = v6;
    v9 = *(_QWORD *)(a1 + 80) + *((unsigned int *)v7 + 8);
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * (v9 / 0x1F));
    v11 = v9 % 0x1F;
    v100 = (_BYTE *)(v10 + 132 * (v9 % 0x1F) + 20);
    if (*v100
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 592, (uint64_t)"!metadata_block.IsErased()", 26, (uint64_t)"The block should not be in erased state", 39, (void (*)(void **))sub_22457406C))
    {
LABEL_137:
      abort();
    }
    if (*(_BYTE *)(a1 + 434))
    {
      v105 = v10 + 132 * v11 + 24;
      v12 = -1;
      do
      {
        v106 = v12 + 1;
        v103 = v12;
        v104 = 1 - v12;
        v13 = -1;
        do
        {
          v14 = v13 + 1;
          v15 = *(unsigned int *)(v105 + 4 * byte_22466F874[9 * v106 + 3 + 3 * v13]);
          if ((_DWORD)v15 != -1)
          {
            if (*(_QWORD *)(a1 + 88) <= v15)
            {
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 647, (uint64_t)"idx_block < metadata_blocks_.size()", 35, (uint64_t)"Out of range", 12, (void (*)(void **))sub_22457406C);
              v16 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670 || byte_255795678)
              {
                v17 = qword_255795648;
                v18 = qword_255795650;
                while (v17 != v18)
                {
                  v20 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v17;
                  v19 = *(_QWORD *)(v17 + 8);
                  v17 += 16;
                  v20(v19, "idx_block < metadata_blocks_.size()", 35, "Out of range", 12);
                }
              }
              v21 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v21 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670)
                goto LABEL_137;
              qword_255795660(*(_QWORD *)algn_255795668, "idx_block < metadata_blocks_.size()", 35, "Out of range", 12);
            }
            v22 = *(_QWORD *)(a1 + 80) + v15;
            v23 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * (v22 / 0x1F));
            v24 = v22 % 0x1F;
            if (*(_BYTE *)(v23 + 132 * v24 + 20))
            {
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 648, (uint64_t)"!metadata_blocks_[idx_block].IsErased()", 39, (uint64_t)"The block is erased", 19, (void (*)(void **))sub_22457406C);
              v25 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v25 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670 || byte_255795678)
              {
                v26 = qword_255795648;
                v27 = qword_255795650;
                while (v26 != v27)
                {
                  v29 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v26;
                  v28 = *(_QWORD *)(v26 + 8);
                  v26 += 16;
                  v29(v28, "!metadata_blocks_[idx_block].IsErased()", 39, "The block is erased", 19);
                }
              }
              v30 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v30 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670)
                goto LABEL_137;
              qword_255795660(*(_QWORD *)algn_255795668, "!metadata_blocks_[idx_block].IsErased()", 39, "The block is erased", 19);
              v31 = *(_QWORD *)(a1 + 80) + v15;
              v24 = v31 % 0x1F;
              v23 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * (v31 / 0x1F));
            }
            *(_DWORD *)(v23 + 132 * v24 + 4 * byte_22466F874[9 * v104 + 5 + -3 * v13] + 24) = -1;
          }
          if (v13 | v103)
          {
            v32 = *(unsigned int *)(v105 + 4 * byte_22466F874[9 * v106 + 1 + 3 * v14]);
            if ((_DWORD)v32 != -1)
            {
              if (*(_QWORD *)(a1 + 88) <= v32)
              {
                sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 647, (uint64_t)"idx_block < metadata_blocks_.size()", 35, (uint64_t)"Out of range", 12, (void (*)(void **))sub_22457406C);
                v33 = atomic_load((unsigned __int8 *)&qword_255795680);
                if ((v33 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                {
                  __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                  __cxa_guard_release(&qword_255795680);
                }
                if (!byte_255795670 || byte_255795678)
                {
                  v34 = qword_255795648;
                  v35 = qword_255795650;
                  while (v34 != v35)
                  {
                    v37 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v34;
                    v36 = *(_QWORD *)(v34 + 8);
                    v34 += 16;
                    v37(v36, "idx_block < metadata_blocks_.size()", 35, "Out of range", 12);
                  }
                }
                v38 = atomic_load((unsigned __int8 *)&qword_255795680);
                if ((v38 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                {
                  __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                  __cxa_guard_release(&qword_255795680);
                }
                if (!byte_255795670)
                  goto LABEL_137;
                qword_255795660(*(_QWORD *)algn_255795668, "idx_block < metadata_blocks_.size()", 35, "Out of range", 12);
              }
              v39 = *(_QWORD *)(a1 + 80) + v32;
              v40 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * (v39 / 0x1F));
              v41 = v39 % 0x1F;
              if (*(_BYTE *)(v40 + 132 * v41 + 20))
              {
                sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 648, (uint64_t)"!metadata_blocks_[idx_block].IsErased()", 39, (uint64_t)"The block is erased", 19, (void (*)(void **))sub_22457406C);
                v42 = atomic_load((unsigned __int8 *)&qword_255795680);
                if ((v42 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                {
                  __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                  __cxa_guard_release(&qword_255795680);
                }
                if (!byte_255795670 || byte_255795678)
                {
                  v43 = qword_255795648;
                  v44 = qword_255795650;
                  while (v43 != v44)
                  {
                    v46 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v43;
                    v45 = *(_QWORD *)(v43 + 8);
                    v43 += 16;
                    v46(v45, "!metadata_blocks_[idx_block].IsErased()", 39, "The block is erased", 19);
                  }
                }
                v47 = atomic_load((unsigned __int8 *)&qword_255795680);
                if ((v47 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                {
                  __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                  __cxa_guard_release(&qword_255795680);
                }
                if (!byte_255795670)
                  goto LABEL_137;
                qword_255795660(*(_QWORD *)algn_255795668, "!metadata_blocks_[idx_block].IsErased()", 39, "The block is erased", 19);
                v48 = *(_QWORD *)(a1 + 80) + v32;
                v41 = v48 % 0x1F;
                v40 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * (v48 / 0x1F));
              }
              *(_DWORD *)(v40 + 132 * v41 + 4 * byte_22466F874[9 * v104 + 4 + -3 * v13] + 24) = -1;
            }
          }
          v49 = *(unsigned int *)(v105 + 4 * byte_22466F874[9 * v106 + 2 + 3 * v14]);
          if ((_DWORD)v49 != -1)
          {
            if (*(_QWORD *)(a1 + 88) <= v49)
            {
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 647, (uint64_t)"idx_block < metadata_blocks_.size()", 35, (uint64_t)"Out of range", 12, (void (*)(void **))sub_22457406C);
              v50 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v50 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670 || byte_255795678)
              {
                v51 = qword_255795648;
                v52 = qword_255795650;
                while (v51 != v52)
                {
                  v54 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v51;
                  v53 = *(_QWORD *)(v51 + 8);
                  v51 += 16;
                  v54(v53, "idx_block < metadata_blocks_.size()", 35, "Out of range", 12);
                }
              }
              v55 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v55 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670)
                goto LABEL_137;
              qword_255795660(*(_QWORD *)algn_255795668, "idx_block < metadata_blocks_.size()", 35, "Out of range", 12);
            }
            v56 = *(_QWORD *)(a1 + 80) + v49;
            v57 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * (v56 / 0x1F));
            v58 = v56 % 0x1F;
            if (*(_BYTE *)(v57 + 132 * v58 + 20))
            {
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 648, (uint64_t)"!metadata_blocks_[idx_block].IsErased()", 39, (uint64_t)"The block is erased", 19, (void (*)(void **))sub_22457406C);
              v59 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v59 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670 || byte_255795678)
              {
                v60 = qword_255795648;
                v61 = qword_255795650;
                while (v60 != v61)
                {
                  v63 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v60;
                  v62 = *(_QWORD *)(v60 + 8);
                  v60 += 16;
                  v63(v62, "!metadata_blocks_[idx_block].IsErased()", 39, "The block is erased", 19);
                }
              }
              v64 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v64 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670)
                goto LABEL_137;
              qword_255795660(*(_QWORD *)algn_255795668, "!metadata_blocks_[idx_block].IsErased()", 39, "The block is erased", 19);
              v65 = *(_QWORD *)(a1 + 80) + v49;
              v58 = v65 % 0x1F;
              v57 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * (v65 / 0x1F));
            }
            *(_DWORD *)(v57 + 132 * v58 + 4 * byte_22466F874[9 * v104 + 3 + -3 * v13] + 24) = -1;
          }
          ++v13;
        }
        while (v14 != 2);
        v12 = v106;
      }
      while (v106 != 2);
    }
    *v100 = 1;
    v67 = *(char **)(a1 + 104);
    v66 = *(_QWORD *)(a1 + 112);
    if ((unint64_t)v67 >= v66)
    {
      v70 = *(char **)(a1 + 96);
      v71 = (v67 - v70) >> 2;
      v72 = v71 + 1;
      v68 = v101;
      v8 = v102;
      if ((unint64_t)(v71 + 1) >> 62)
        sub_22316E078();
      v73 = v66 - (_QWORD)v70;
      if (v73 >> 1 > v72)
        v72 = v73 >> 1;
      if ((unint64_t)v73 >= 0x7FFFFFFFFFFFFFFCLL)
        v74 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v74 = v72;
      if (v74)
      {
        if (v74 >> 62)
          sub_223174E94();
        v75 = operator new(4 * v74);
      }
      else
      {
        v75 = 0;
      }
      v76 = &v75[4 * v71];
      v77 = &v75[4 * v74];
      *v76 = *((_DWORD *)v102 + 8);
      v69 = v76 + 1;
      if (v67 != v70)
      {
        v78 = v67 - v70 - 4;
        if (v78 < 0x2C)
          goto LABEL_142;
        if ((unint64_t)(v70 - v75) < 0x20)
          goto LABEL_142;
        v79 = (v78 >> 2) + 1;
        v80 = 4 * (v79 & 0x7FFFFFFFFFFFFFF8);
        v81 = &v67[-v80];
        v76 = (_DWORD *)((char *)v76 - v80);
        v82 = &v75[4 * v71 - 16];
        v83 = v67 - 16;
        v84 = v79 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v85 = *(_OWORD *)v83;
          *(v82 - 1) = *((_OWORD *)v83 - 1);
          *v82 = v85;
          v82 -= 2;
          v83 -= 32;
          v84 -= 8;
        }
        while (v84);
        v67 = v81;
        if (v79 != (v79 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_142:
          do
          {
            v86 = *((_DWORD *)v67 - 1);
            v67 -= 4;
            *--v76 = v86;
          }
          while (v67 != v70);
        }
      }
      *(_QWORD *)(a1 + 96) = v76;
      *(_QWORD *)(a1 + 104) = v69;
      *(_QWORD *)(a1 + 112) = v77;
      if (v70)
        operator delete(v70);
    }
    else
    {
      v68 = v101;
      v8 = v102;
      *(_DWORD *)v67 = *((_DWORD *)v102 + 8);
      v69 = v67 + 4;
    }
    *(_QWORD *)(a1 + 104) = v69;
    v87 = *(_QWORD **)(a1 + 376);
    if (v87 != (_QWORD *)(a1 + 384))
    {
      do
      {
        (*(void (**)(_QWORD, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v87[4] + 24))(v87[4], v68, v99, *((unsigned int *)v8 + 8));
        v95 = (_QWORD *)v87[1];
        if (v95)
        {
          do
          {
            v96 = v95;
            v95 = (_QWORD *)*v95;
          }
          while (v95);
        }
        else
        {
          do
          {
            v96 = (_QWORD *)v87[2];
            v97 = *v96 == (_QWORD)v87;
            v87 = v96;
          }
          while (!v97);
        }
        v87 = v96;
      }
      while (v96 != (_QWORD *)(a1 + 384));
    }
    v88 = *(_QWORD *)(a1 + 408);
    if (v88)
    {
      v89 = a1 + 408;
      do
      {
        v90 = *(_DWORD *)(v88 + 32);
        v91 = v90 < v99;
        if (v90 >= v99)
          v92 = (uint64_t *)v88;
        else
          v92 = (uint64_t *)(v88 + 8);
        if (!v91)
          v89 = v88;
        v88 = *v92;
      }
      while (*v92);
      if (v89 != a1 + 408 && *(_DWORD *)(v89 + 32) <= v99)
        (*(void (**)(_QWORD, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(v89 + 40) + 24))(*(_QWORD *)(v89 + 40), v68, v99, *((unsigned int *)v8 + 8));
    }
    sub_2231AFBB8(v98, v8, (uint64_t)__p);
    v93 = *(void **)__p;
    *(_QWORD *)__p = 0;
    if (v93)
      operator delete(v93);
  }
  return v8 != 0;
}

uint64_t *sub_22351A45C(_QWORD *a1, int *a2)
{
  int8x8_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unint64_t v7;
  uint8x8_t v8;
  uint64_t v9;
  uint64_t **v10;
  uint64_t *result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = (19349669 * v4) ^ (73856093 * *a2) ^ (83492791 * v5) ^ (37783632 * v6);
  v8 = (uint8x8_t)vcnt_s8(v2);
  v8.i16[0] = vaddlv_u8(v8);
  if (v8.u32[0] > 1uLL)
  {
    v9 = (19349669 * v4) ^ (73856093 * v3) ^ (83492791 * v5) ^ (37783632 * v6);
    if (v7 >= *(_QWORD *)&v2)
      v9 = v7 % *(_QWORD *)&v2;
  }
  else
  {
    v9 = v7 & (*(_QWORD *)&v2 - 1);
  }
  v10 = *(uint64_t ***)(*a1 + 8 * v9);
  if (!v10)
    return 0;
  result = *v10;
  if (*v10)
  {
    if (v8.u32[0] < 2uLL)
    {
      v12 = *(_QWORD *)&v2 - 1;
      while (1)
      {
        v14 = result[1];
        if (v14 == v7)
        {
          if (*((_DWORD *)result + 4) == v3
            && *((_DWORD *)result + 5) == v4
            && *((_DWORD *)result + 6) == v5
            && *((_DWORD *)result + 7) == v6)
          {
            return result;
          }
        }
        else if ((v14 & v12) != v9)
        {
          return 0;
        }
        result = (uint64_t *)*result;
        if (!result)
          return result;
      }
    }
    do
    {
      v13 = result[1];
      if (v13 == v7)
      {
        if (*((_DWORD *)result + 4) == v3
          && *((_DWORD *)result + 5) == v4
          && *((_DWORD *)result + 6) == v5
          && *((_DWORD *)result + 7) == v6)
        {
          return result;
        }
      }
      else
      {
        if (v13 >= *(_QWORD *)&v2)
          v13 %= *(_QWORD *)&v2;
        if (v13 != v9)
          return 0;
      }
      result = (uint64_t *)*result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_22351A5C4(uint64_t a1, int a2)
{
  __n128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _BYTE v8[2520];
  std::__shared_weak_count *v9;
  int v10;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  v10 = a2;
  sub_223524FBC(&v10, (uint64_t)v8);
  v3.n128_f64[0] = sub_223524E3C();
  v4 = v9;
  if (!v9)
    return a1;
  p_shared_owners = (unint64_t *)&v9->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
    return a1;
  ((void (*)(std::__shared_weak_count *, __n128))v4->__on_zero_shared)(v4, v3);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_22351A670(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;

  sub_2245658A0((uint64_t)&STACK[0x9D0]);
  v3 = *(_QWORD **)(v1 + 16);
  if (v3)
  {
    do
    {
      v4 = (_QWORD *)*v3;
      operator delete(v3);
      v3 = v4;
    }
    while (v4);
  }
  v5 = *(void **)v1;
  *(_QWORD *)v1 = 0;
  if (v5)
    operator delete(v5);
  _Unwind_Resume(a1);
}

void sub_22351A6B8(_QWORD *a1@<X0>, int a2@<W1>, __int32 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned int a6@<W5>, _QWORD *a7@<X8>, int32x4_t a8@<Q0>, int32x4_t a9@<Q1>, float32x4_t a10@<Q5>)
{
  float32x2_t v10;
  double v11;
  __int128 v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  double v20;
  int32x2_t v21;
  unsigned __int32 v22;
  float32x4_t v24;
  float32x4_t v25;
  unsigned int v26;
  signed int v27;
  signed int v28;
  double v33;
  __n128 v34;
  __n128 v35;
  int8x8_t v36;
  float32x4_t v37;
  int32x2_t v38;
  int32x2_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  int8x8_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t **v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _BYTE *v69;
  uint64_t **v70;
  char *v71;
  unint64_t v72;
  char *v73;
  uint64_t *v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  float32x4_t *v79;
  float32x4_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  double v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  uint64_t v99[16];
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *__p;
  void *v107;
  _OWORD v108[3];
  double v109;
  unsigned __int32 v110;
  int v111;
  uint64_t v112;
  __int32 v113;
  uint64_t v114;
  __int32 v115;
  uint64_t v116;

  LODWORD(v11) = a8.i32[0];
  a8.i64[0] = *(_QWORD *)a4;
  a8.i32[2] = *(_DWORD *)(a4 + 8);
  a9.i64[0] = *(_QWORD *)(a4 + 16);
  a9.i32[2] = *(_DWORD *)(a4 + 24);
  *(_QWORD *)&v16 = vzip1q_s32(a8, a9).u64[0];
  a10.i64[0] = *(_QWORD *)(a4 + 48);
  a10.i32[2] = *(_DWORD *)(a4 + 56);
  v17 = (int8x16_t)vnegq_f32(a10);
  v18 = (int8x16_t)vtrn2q_s32(a8, a9);
  v18.i32[2] = HIDWORD(*(_QWORD *)(a4 + 32));
  v10.i32[0] = *(_DWORD *)(a4 + 40);
  v19 = (int8x16_t)vzip2q_s32(a8, a9);
  v20 = COERCE_DOUBLE(vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)&v16, *(float *)v17.i32), *(float32x2_t *)v18.i8, *(float32x2_t *)a10.f32, 1), *(float32x2_t *)v19.i8, a10, 2));
  v19.i32[2] = v10.i32[0];
  v21 = (int32x2_t)vdupq_laneq_s32((int32x4_t)v19, 2).u64[0];
  *((_QWORD *)&v16 + 1) = *(_QWORD *)(a4 + 32);
  v22 = vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(a4 + 32), *(float32x2_t *)v17.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(a4 + 32), 1), *(float32x2_t *)a10.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL), v10).u32[0];
  _Q2.i32[3] = 0;
  _Q2.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v18, 0).i32[3];
  *(uint64_t *)((char *)_Q2.i64 + 4) = vextq_s8(v18, v19, 4uLL).u64[0];
  v19.i64[1] = v21.u32[0];
  v108[1] = _Q2;
  v108[2] = v19;
  v108[0] = v16;
  v109 = v20;
  v110 = v22;
  v111 = 1065353216;
  *(double *)_Q2.i64 = v20;
  _Q2.i32[2] = v22;
  v94 = v11;
  *(float *)&v20 = 1.0 / *(float *)&v11;
  v19.i32[0] = *a3;
  v21.i32[0] = a3[1];
  v24 = (float32x4_t)vdupq_lane_s32(v21, 0);
  v17.i64[0] = 0x3F0000003F000000;
  v17.i64[1] = 0x3F0000003F000000;
  v25 = vaddq_f32(vmulq_n_f32(vsubq_f32(_Q2, v24), 1.0 / *(float *)&v11), (float32x4_t)v17);
  v97 = v25;
  v25.i32[0] = v25.i32[2];
  v26 = -a6;
  v98 = vaddq_f32(vmulq_n_f32(vaddq_f32(_Q2, v24), 1.0 / *(float *)&v11), (float32x4_t)v17);
  v27 = vcvtms_s32_f32(v25.f32[2]) & -a6;
  v28 = vcvtms_s32_f32(v98.f32[2]) & -a6;
  v112 = 0;
  __asm { FMOV            V2.2S, #1.0 }
  v116 = _Q2.i64[0];
  sub_223EA0B54(v99, (float32x2_t *)v108, a5, (float *)&v112, (float *)&v116, (float32x4_t)v19, *(float *)v21.i32, *(double *)_Q2.i64, v20, v24, *(double *)v25.i64, 0.0000305175853);
  *a7 = 0;
  a7[1] = 0;
  v89 = a7;
  a7[2] = 0;
  if (v27 <= v28)
  {
    v37.i64[1] = v97.i64[1];
    v36 = (int8x8_t)vdup_n_s32(v26);
    *(int8x8_t *)v37.f32 = vand_s8(v36, (int8x8_t)vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v97.f32)));
    v38 = (int32x2_t)vand_s8(v36, (int8x8_t)vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v98.f32)));
    v39 = vcgt_s32(*(int32x2_t *)v37.f32, v38);
    if (((v39.i32[1] | v39.i32[0]) & 1) == 0)
    {
      v92 = v37.i32[0];
      v40 = v38.i32[0];
      v83 = v37.i32[1];
      v90 = 0;
      v91 = v38.i32[1];
      v41 = v27;
      v82 = v28;
      v42 = a6;
      do
      {
        v37.f32[0] = (float)(int)v41;
        v96 = v37;
        v84 = v41 + v42;
        v37.f32[0] = (float)(v41 + v42);
        v95 = *(double *)v37.i64;
        v43 = v83;
        do
        {
          v93 = v43 + v42;
          v44 = v92;
          v45 = (37783632 * v41) ^ (73856093 * a2) ^ (83492791 * v43);
          do
          {
            v37.f32[0] = (float)(int)v44;
            v37.f32[1] = (float)(int)v43;
            v37.i32[2] = v96.i32[0];
            v47 = v44 + v42;
            v48.f32[0] = (float)(v44 + v42);
            v48.f32[1] = (float)(v43 + v42);
            v49 = vmulq_n_f32(v37, *(float *)&v94);
            v48.i64[1] = __PAIR64__(v96.u32[3], LODWORD(v95));
            v113 = v49.i32[2];
            v50 = vmulq_n_f32(v48, *(float *)&v94);
            v112 = v49.i64[0];
            v115 = v50.i32[2];
            v114 = v50.i64[0];
            if (sub_223EA4E3C((uint64_t)v99, (uint64_t)&v112, v49, v50, v94, v95, v33, v34, v35))
            {
              v51 = (int8x8_t)a1[1];
              if (v51)
              {
                v52 = v45 ^ (19349669 * v44);
                *(int8x8_t *)v37.f32 = vcnt_s8(v51);
                v37.i16[0] = vaddlv_u8(*(uint8x8_t *)v37.f32);
                if (v37.u32[0] > 1uLL)
                {
                  v53 = v45 ^ (19349669 * v44);
                  if (v52 >= *(_QWORD *)&v51)
                    v53 = v52 % *(_QWORD *)&v51;
                }
                else
                {
                  v53 = (*(_QWORD *)&v51 - 1) & v52;
                }
                v54 = *(uint64_t ***)(*a1 + 8 * v53);
                if (v54)
                {
                  v55 = *v54;
                  if (v55)
                  {
                    if (v37.u32[0] < 2uLL)
                    {
                      v56 = *(_QWORD *)&v51 - 1;
                      while (1)
                      {
                        v58 = v55[1];
                        if (v52 == v58)
                        {
                          if (*((_DWORD *)v55 + 4) == a2
                            && *((_DWORD *)v55 + 5) == (_DWORD)v44
                            && *((_DWORD *)v55 + 6) == (_DWORD)v43
                            && *((_DWORD *)v55 + 7) == (_DWORD)v41)
                          {
                            goto LABEL_47;
                          }
                        }
                        else if ((v58 & v56) != v53)
                        {
                          goto LABEL_19;
                        }
                        v55 = (uint64_t *)*v55;
                        if (!v55)
                          goto LABEL_19;
                      }
                    }
                    do
                    {
                      v57 = v55[1];
                      if (v52 == v57)
                      {
                        if (*((_DWORD *)v55 + 4) == a2
                          && *((_DWORD *)v55 + 5) == (_DWORD)v44
                          && *((_DWORD *)v55 + 6) == (_DWORD)v43
                          && *((_DWORD *)v55 + 7) == (_DWORD)v41)
                        {
LABEL_47:
                          v59 = v55 + 4;
                          v60 = v89;
                          v61 = v89[2];
                          if ((unint64_t)v90 < v61)
                          {
                            *(_QWORD *)v90 = v59;
                            v46 = (uint64_t)(v90 + 8);
                            goto LABEL_18;
                          }
                          v62 = (uint64_t)&v90[-*v89];
                          v63 = (char *)*v89;
                          v64 = v62 >> 3;
                          v65 = (v62 >> 3) + 1;
                          if (v65 >> 61)
                            sub_22352449C();
                          v66 = v61 - (_QWORD)v63;
                          if (v66 >> 2 > v65)
                            v65 = v66 >> 2;
                          if ((unint64_t)v66 >= 0x7FFFFFFFFFFFFFF8)
                            v67 = 0x1FFFFFFFFFFFFFFFLL;
                          else
                            v67 = v65;
                          if (v67)
                          {
                            v85 = v59;
                            v86 = &v90[-*v89];
                            v87 = v62 >> 3;
                            v88 = (char *)*v89;
                            if (v67 >> 61)
                              sub_223174E94();
                            v68 = v67;
                            v69 = operator new(8 * v67);
                            v64 = v87;
                            v63 = v88;
                            v67 = v68;
                            v62 = (uint64_t)v86;
                            v70 = (uint64_t **)&v69[8 * v87];
                            *v70 = v85;
                            v46 = (uint64_t)(v70 + 1);
                            v71 = (char *)(v90 - v88);
                            if (v90 != v88)
                            {
LABEL_57:
                              v72 = (unint64_t)(v71 - 8);
                              if (v72 < 0x168)
                              {
                                v73 = v90;
                                goto LABEL_59;
                              }
                              v76 = (v90 - 8 - v63) & 0xFFFFFFFFFFFFFFF8;
                              if (&v69[v62 - 8 - v76] > &v69[v62 - 8])
                              {
                                v73 = v90;
                                goto LABEL_59;
                              }
                              if (&v90[-v76 - 8] > v90 - 8)
                              {
                                v73 = v90;
                                goto LABEL_59;
                              }
                              if ((unint64_t)(v90 - v69 - v62) < 0x20)
                              {
                                v73 = v90;
                                goto LABEL_59;
                              }
                              v77 = (v72 >> 3) + 1;
                              v78 = 8 * (v77 & 0x3FFFFFFFFFFFFFFCLL);
                              v73 = &v90[-v78];
                              v70 = (uint64_t **)((char *)v70 - v78);
                              v79 = (float32x4_t *)&v69[8 * v64 - 16];
                              v80 = (float32x4_t *)(v90 - 16);
                              v81 = v77 & 0x3FFFFFFFFFFFFFFCLL;
                              do
                              {
                                v37 = *v80;
                                v79[-1] = v80[-1];
                                *v79 = v37;
                                v79 -= 2;
                                v80 -= 2;
                                v81 -= 4;
                              }
                              while (v81);
                              if (v77 != (v77 & 0x3FFFFFFFFFFFFFFCLL))
                              {
                                do
                                {
LABEL_59:
                                  v74 = (uint64_t *)*((_QWORD *)v73 - 1);
                                  v73 -= 8;
                                  *--v70 = v74;
                                }
                                while (v73 != v63);
                              }
                              v60 = v89;
                              v75 = (char *)*v89;
                              *v89 = v70;
                              v89[1] = v46;
                              v89[2] = &v69[8 * v67];
                              if (!v75)
                              {
LABEL_18:
                                v60[1] = v46;
                                v90 = (char *)v46;
                                break;
                              }
LABEL_64:
                              operator delete(v75);
                              v60 = v89;
                              goto LABEL_18;
                            }
                          }
                          else
                          {
                            v69 = 0;
                            v70 = (uint64_t **)(8 * v64);
                            *(_QWORD *)(8 * v64) = v59;
                            v46 = 8 * v64 + 8;
                            v71 = (char *)(v90 - v63);
                            if (v90 != v63)
                              goto LABEL_57;
                          }
                          v60 = v89;
                          v75 = v90;
                          *v89 = v70;
                          v89[1] = v46;
                          v89[2] = &v69[8 * v67];
                          if (!v90)
                            goto LABEL_18;
                          goto LABEL_64;
                        }
                      }
                      else
                      {
                        if (v57 >= *(_QWORD *)&v51)
                          v57 %= *(_QWORD *)&v51;
                        if (v57 != v53)
                          break;
                      }
                      v55 = (uint64_t *)*v55;
                    }
                    while (v55);
                  }
                }
              }
            }
LABEL_19:
            v44 = v47;
          }
          while (v47 <= v40);
          v43 += v42;
        }
        while (v93 <= v91);
        v41 += v42;
      }
      while (v84 <= v82);
    }
  }
  if (__p)
  {
    v107 = __p;
    operator delete(__p);
  }
  if (v104)
  {
    v105 = v104;
    operator delete(v104);
  }
  if (v102)
  {
    v103 = v102;
    operator delete(v102);
  }
  if (v100)
  {
    v101 = v100;
    operator delete(v100);
  }
}

void sub_22351ACF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,void *a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,uint64_t a57,void *__p,uint64_t a59)
{
  void *v60;
  void *v61;
  void *v62;
  void *v63;

  if (a16)
  {
    *(_QWORD *)(a17 + 8) = a16;
    operator delete(a16);
    v60 = __p;
    if (!__p)
    {
LABEL_3:
      v61 = a55;
      if (!a55)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else
  {
    v60 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v60);
  v61 = a55;
  if (!a55)
  {
LABEL_4:
    v62 = a52;
    if (!a52)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(v61);
  v62 = a52;
  if (!a52)
  {
LABEL_5:
    v63 = a49;
    if (!a49)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(v62);
  v63 = a49;
  if (!a49)
LABEL_6:
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(v63);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22351AD94(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      sub_223523BA4((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

uint64_t sub_22351ADF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  int v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  __int128 *v59;
  __int128 *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (***v63)();
  uint64_t v64;
  __int128 *v65;
  __int128 *v66;
  uint64_t v67;
  __int128 *v68;
  uint64_t v69;
  __int128 *v70;
  uint64_t v71;
  __int128 *v72;
  uint64_t v73;
  __int128 *v74;
  uint64_t v75;
  __int128 *v76;
  uint64_t v77;
  __int128 *v78;
  uint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  __int128 *v84;
  __int128 *v85;
  __int128 *v86;
  __int128 *v87;
  __int128 *v88;
  void **v89;
  std::__shared_weak_count *v90;
  void **v91;
  std::__shared_weak_count *v92;
  char v93;
  __int16 v94;
  void *v95;
  _QWORD v96[2];
  uint64_t (**v97)();
  void *v98;
  uint64_t (***v99)();
  __int128 v100;
  __int128 *v101;
  uint64_t v102;

  v102 = *MEMORY[0x24BDAC8D0];
  v5 = *(std::__shared_weak_count **)(a3 + 8);
  v89 = *(void ***)a3;
  v90 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  *(_QWORD *)a1 = &off_24EC44CA0;
  *(_QWORD *)(a1 + 8) = 0;
  v8 = (uint64_t *)(a1 + 8);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = a2;
  *(_OWORD *)(a1 + 40) = 0u;
  v9 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_QWORD *)(a1 + 88) = 0;
  sub_22351A5C4(a1 + 96, 98127634);
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 160) = a1 + 168;
  *(_QWORD *)(a1 + 176) = 0;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_DWORD *)(a1 + 232) = 1065353216;
  v84 = (__int128 *)(a1 + 240);
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 328) = 0;
  *(_QWORD *)(a1 + 360) = 0;
  *(_QWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 424) = 0;
  *(_QWORD *)(a1 + 456) = 0;
  v91 = v89;
  v92 = v90;
  if (v90)
  {
    v10 = (unint64_t *)&v90->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  v87 = (__int128 *)(a1 + 368);
  v88 = (__int128 *)(a1 + 400);
  v86 = (__int128 *)(a1 + 336);
  sub_223518190(a2, (uint64_t)&v91, (uint64_t *)&v100);
  v12 = v100;
  *(_QWORD *)&v100 = 0;
  v13 = *v8;
  *v8 = v12;
  if (v13)
  {
    v14 = sub_22351920C(v13);
    MEMORY[0x227684CE8](v14, 0x10E0C40148EADE0);
    v15 = v100;
    *(_QWORD *)&v100 = 0;
    if (v15)
    {
      v16 = sub_22351920C(v15);
      MEMORY[0x227684CE8](v16, 0x10E0C40148EADE0);
    }
  }
  v17 = v92;
  if (v92)
  {
    v18 = (unint64_t *)&v92->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v20 = *(_QWORD *)(a1 + 32);
  v21 = operator new();
  *(_QWORD *)&v100 = 0;
  sub_2234737B8(v21, v20, (uint64_t *)&v100);
  if ((_QWORD)v100)
    (*(void (**)(_QWORD))(*(_QWORD *)v100 + 16))(v100);
  v22 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v21;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  v23 = operator new(0xA08uLL);
  v23[1] = 0;
  v23[2] = 0;
  *v23 = &off_24EC44DA8;
  v24 = sub_223C02640((uint64_t)(v23 + 3), a2);
  v25 = *(std::__shared_weak_count **)(a1 + 192);
  *(_QWORD *)(a1 + 184) = v24;
  *(_QWORD *)(a1 + 192) = v23;
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = *(_QWORD *)(a1 + 32);
  v29 = (_QWORD *)operator new();
  *v29 = &off_24EC37AC0;
  v29[2] = 0;
  v29[1] = v29 + 2;
  v29[5] = 0;
  v29[3] = 0;
  v29[4] = v29 + 5;
  v29[6] = 0;
  sub_2232E4FC0((uint64_t)(v29 + 7), v28);
  sub_22347A0F4((uint64_t)v29);
  v30 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v29;
  if (v30)
    (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
  if (*(_BYTE *)(a2 + 880) && *(_BYTE *)(a2 + 764))
  {
    v31 = (_QWORD *)operator new();
    sub_2231BE34C(v31);
  }
  else
  {
    v32 = *(_DWORD *)(a2 + 392);
    v33 = *(_WORD *)(a2 + 396);
    LODWORD(v100) = *(_DWORD *)(a2 + 88);
    DWORD1(v100) = v32;
    WORD4(v100) = v33;
    v31 = (_QWORD *)operator new();
    sub_2231BBC58((uint64_t)v31, (uint64_t *)&v100);
  }
  v34 = *v9;
  *v9 = (uint64_t)v31;
  if (v34)
    (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
  if (!*(_BYTE *)(*(_QWORD *)(a1 + 32) + 47))
  {
    nullsub_30(&v89);
    sub_223226DFC(&v100, &v89, v38, v39, v40, v41);
    v42 = v100;
    v100 = 0uLL;
    v43 = *(std::__shared_weak_count **)(a1 + 80);
    *(_OWORD *)(a1 + 72) = v42;
    if (v43)
    {
      v44 = (unint64_t *)&v43->__shared_owners_;
      do
        v45 = __ldaxr(v44);
      while (__stlxr(v45 - 1, v44));
      if (!v45)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
      }
    }
    v46 = (std::__shared_weak_count *)*((_QWORD *)&v100 + 1);
    if (*((_QWORD *)&v100 + 1))
    {
      v47 = (unint64_t *)(*((_QWORD *)&v100 + 1) + 8);
      do
        v48 = __ldaxr(v47);
      while (__stlxr(v48 - 1, v47));
      if (!v48)
      {
        ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
        std::__shared_weak_count::__release_weak(v46);
      }
    }
  }
  v97 = &off_24EC45318;
  v98 = (void *)a1;
  v99 = &v97;
  sub_223227930((uint64_t *)&v95);
  v35 = *(_QWORD *)(a1 + 32);
  v93 = *(_BYTE *)(v35 + 47);
  v94 = *(_WORD *)(v35 + 321);
  v36 = operator new();
  v37 = (uint64_t)v99;
  if (!v99)
    goto LABEL_36;
  if (v99 != &v97)
  {
    v37 = (*v99)[2]();
LABEL_36:
    v101 = (__int128 *)v37;
    goto LABEL_48;
  }
  v101 = &v100;
  ((void (*)(uint64_t (***)(), __int128 *))v97[3])(&v97, &v100);
LABEL_48:
  v49 = *(std::__shared_weak_count **)(a1 + 80);
  v96[0] = *(_QWORD *)(a1 + 72);
  v96[1] = v49;
  if (v49)
  {
    v50 = (unint64_t *)&v49->__shared_owners_;
    do
      v51 = __ldxr(v50);
    while (__stxr(v51 + 1, v50));
  }
  sub_223A3C8BC(v36, (uint64_t)&v100, v96, (__int16 *)&v93);
  if (v49)
  {
    v57 = (unint64_t *)&v49->__shared_owners_;
    do
      v58 = __ldaxr(v57);
    while (__stlxr(v58 - 1, v57));
    if (!v58)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
      v59 = v101;
      if (v101 != &v100)
        goto LABEL_56;
LABEL_59:
      v61 = 4;
      v59 = &v100;
      v60 = (__int128 *)(a1 + 304);
      goto LABEL_60;
    }
  }
  v59 = v101;
  if (v101 == &v100)
    goto LABEL_59;
LABEL_56:
  v60 = (__int128 *)(a1 + 304);
  if (!v59)
    goto LABEL_61;
  v61 = 5;
LABEL_60:
  (*(void (**)(void))(*(_QWORD *)v59 + 8 * v61))();
LABEL_61:
  v62 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v36;
  if (v62)
    (*(void (**)(uint64_t))(*(_QWORD *)v62 + 8))(v62);
  sub_22322797C(&v95, v52, v53, v54, v55, v56);
  v63 = v99;
  v85 = (__int128 *)(a1 + 432);
  if (v99 == &v97)
  {
    v64 = 4;
    v63 = &v97;
  }
  else
  {
    if (!v99)
      goto LABEL_68;
    v64 = 5;
  }
  (*v63)[v64]();
LABEL_68:
  *(_QWORD *)&v100 = &off_24EC44DF8;
  *((_QWORD *)&v100 + 1) = sub_223527778;
  v65 = &v100;
  v101 = &v100;
  if (v84 == &v100)
  {
    v67 = 4;
    goto LABEL_76;
  }
  v65 = *(__int128 **)(a1 + 264);
  if (v65 == v84)
  {
    v97 = &off_24EC44DF8;
    v98 = sub_223527778;
    v101 = 0;
    (*(void (**)(__int128 *, __int128 *))(*(_QWORD *)v84 + 24))(v84, &v100);
    (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 264) + 32))(*(_QWORD *)(a1 + 264));
    *(_QWORD *)(a1 + 264) = 0;
    v101 = &v100;
    ((void (*)(uint64_t (***)(), __int128 *))v97[3])(&v97, v84);
    ((void (*)(uint64_t (***)()))v97[4])(&v97);
    *(_QWORD *)(a1 + 264) = v84;
    v65 = v101;
    v66 = (__int128 *)(a1 + 272);
    if (v101 != &v100)
      goto LABEL_71;
LABEL_75:
    v67 = 4;
    v65 = &v100;
    goto LABEL_76;
  }
  *(_QWORD *)(a1 + 240) = &off_24EC44DF8;
  *(_QWORD *)(a1 + 248) = sub_223527778;
  v101 = v65;
  *(_QWORD *)(a1 + 264) = v84;
  v66 = (__int128 *)(a1 + 272);
  if (v65 == &v100)
    goto LABEL_75;
LABEL_71:
  if (!v65)
    goto LABEL_77;
  v67 = 5;
LABEL_76:
  (*(void (**)(void))(*(_QWORD *)v65 + 8 * v67))();
  v66 = (__int128 *)(a1 + 272);
LABEL_77:
  *(_QWORD *)&v100 = &off_24EC44EA8;
  *((_QWORD *)&v100 + 1) = sub_22351A6B8;
  v68 = &v100;
  v101 = &v100;
  if (v66 == &v100)
  {
    v69 = 4;
    goto LABEL_85;
  }
  v68 = *(__int128 **)(a1 + 296);
  if (v68 == v66)
  {
    v97 = &off_24EC44EA8;
    v98 = sub_22351A6B8;
    v101 = 0;
    (*(void (**)(__int128 *, __int128 *))(*(_QWORD *)v66 + 24))(v66, &v100);
    (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 296) + 32))(*(_QWORD *)(a1 + 296));
    *(_QWORD *)(a1 + 296) = 0;
    v101 = &v100;
    ((void (*)(uint64_t (***)(), __int128 *))v97[3])(&v97, v66);
    ((void (*)(uint64_t (***)()))v97[4])(&v97);
    *(_QWORD *)(a1 + 296) = v66;
    v68 = v101;
    if (v101 != &v100)
      goto LABEL_80;
LABEL_84:
    v69 = 4;
    v68 = &v100;
    goto LABEL_85;
  }
  *(_QWORD *)(a1 + 272) = &off_24EC44EA8;
  *(_QWORD *)(a1 + 280) = sub_22351A6B8;
  v101 = v68;
  *(_QWORD *)(a1 + 296) = v66;
  if (v68 == &v100)
    goto LABEL_84;
LABEL_80:
  if (!v68)
    goto LABEL_86;
  v69 = 5;
LABEL_85:
  (*(void (**)(void))(*(_QWORD *)v68 + 8 * v69))();
LABEL_86:
  *(_QWORD *)&v100 = &off_24EC44F58;
  *((_QWORD *)&v100 + 1) = sub_22352B900;
  v70 = &v100;
  v101 = &v100;
  if (v60 == &v100)
  {
    v71 = 4;
    goto LABEL_94;
  }
  v70 = *(__int128 **)(a1 + 328);
  if (v70 == v60)
  {
    v97 = &off_24EC44F58;
    v98 = sub_22352B900;
    v101 = 0;
    (*(void (**)(__int128 *, __int128 *))(*(_QWORD *)v60 + 24))(v60, &v100);
    (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 328) + 32))(*(_QWORD *)(a1 + 328));
    *(_QWORD *)(a1 + 328) = 0;
    v101 = &v100;
    ((void (*)(uint64_t (***)(), __int128 *))v97[3])(&v97, v60);
    ((void (*)(uint64_t (***)()))v97[4])(&v97);
    *(_QWORD *)(a1 + 328) = v60;
    v70 = v101;
    if (v101 != &v100)
      goto LABEL_89;
LABEL_93:
    v71 = 4;
    v70 = &v100;
    goto LABEL_94;
  }
  *(_QWORD *)(a1 + 304) = &off_24EC44F58;
  *(_QWORD *)(a1 + 312) = sub_22352B900;
  v101 = v70;
  *(_QWORD *)(a1 + 328) = v60;
  if (v70 == &v100)
    goto LABEL_93;
LABEL_89:
  if (!v70)
    goto LABEL_95;
  v71 = 5;
LABEL_94:
  (*(void (**)(void))(*(_QWORD *)v70 + 8 * v71))();
LABEL_95:
  *(_QWORD *)&v100 = &off_24EC45008;
  *((_QWORD *)&v100 + 1) = sub_22352C45C;
  v72 = &v100;
  v101 = &v100;
  if (v86 == &v100)
  {
    v73 = 4;
  }
  else
  {
    v72 = *(__int128 **)(a1 + 360);
    if (v72 == v86)
    {
      v101 = 0;
      v72 = &v100;
      (*(void (**)(__int128 *, __int128 *))(*(_QWORD *)v86 + 24))(v86, &v100);
      (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 360) + 32))(*(_QWORD *)(a1 + 360));
      v101 = &v100;
      *(_QWORD *)(a1 + 336) = &off_24EC45008;
      *(_QWORD *)(a1 + 344) = sub_22352C45C;
      v73 = 4;
      *(_QWORD *)(a1 + 360) = v86;
    }
    else
    {
      *(_QWORD *)(a1 + 336) = &off_24EC45008;
      *(_QWORD *)(a1 + 344) = sub_22352C45C;
      v101 = v72;
      *(_QWORD *)(a1 + 360) = v86;
      if (v72 == &v100)
      {
        v73 = 4;
        v72 = &v100;
      }
      else
      {
        if (!v72)
          goto LABEL_104;
        v73 = 5;
      }
    }
  }
  (*(void (**)(__int128 *))(*(_QWORD *)v72 + 8 * v73))(v72);
LABEL_104:
  *(_QWORD *)&v100 = &off_24EC450B8;
  *((_QWORD *)&v100 + 1) = sub_22352D494;
  v74 = &v100;
  v101 = &v100;
  if (v87 == &v100)
  {
    v75 = 4;
  }
  else
  {
    v74 = *(__int128 **)(a1 + 392);
    if (v74 == v87)
    {
      v101 = 0;
      v74 = &v100;
      (*(void (**)(__int128 *, __int128 *))(*(_QWORD *)v87 + 24))(v87, &v100);
      (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 392) + 32))(*(_QWORD *)(a1 + 392));
      v101 = &v100;
      *(_QWORD *)(a1 + 368) = &off_24EC450B8;
      *(_QWORD *)(a1 + 376) = sub_22352D494;
      v75 = 4;
      *(_QWORD *)(a1 + 392) = v87;
    }
    else
    {
      *(_QWORD *)(a1 + 368) = &off_24EC450B8;
      *(_QWORD *)(a1 + 376) = sub_22352D494;
      v101 = v74;
      *(_QWORD *)(a1 + 392) = v87;
      if (v74 == &v100)
      {
        v75 = 4;
        v74 = &v100;
      }
      else
      {
        if (!v74)
          goto LABEL_113;
        v75 = 5;
      }
    }
  }
  (*(void (**)(__int128 *))(*(_QWORD *)v74 + 8 * v75))(v74);
LABEL_113:
  *(_QWORD *)&v100 = &off_24EC45168;
  *((_QWORD *)&v100 + 1) = sub_22352FD20;
  v76 = &v100;
  v101 = &v100;
  if (v88 == &v100)
  {
    v77 = 4;
  }
  else
  {
    v76 = *(__int128 **)(a1 + 424);
    if (v76 == v88)
    {
      v101 = 0;
      v76 = &v100;
      (*(void (**)(__int128 *, __int128 *))(*(_QWORD *)v88 + 24))(v88, &v100);
      (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 424) + 32))(*(_QWORD *)(a1 + 424));
      v101 = &v100;
      *(_QWORD *)(a1 + 400) = &off_24EC45168;
      *(_QWORD *)(a1 + 408) = sub_22352FD20;
      v77 = 4;
      *(_QWORD *)(a1 + 424) = v88;
    }
    else
    {
      *(_QWORD *)(a1 + 400) = &off_24EC45168;
      *(_QWORD *)(a1 + 408) = sub_22352FD20;
      v101 = v76;
      *(_QWORD *)(a1 + 424) = v88;
      if (v76 == &v100)
      {
        v77 = 4;
        v76 = &v100;
      }
      else
      {
        if (!v76)
          goto LABEL_122;
        v77 = 5;
      }
    }
  }
  (*(void (**)(__int128 *))(*(_QWORD *)v76 + 8 * v77))(v76);
LABEL_122:
  *(_QWORD *)&v100 = &off_24EC45218;
  *((_QWORD *)&v100 + 1) = sub_22352E6B0;
  v78 = &v100;
  v101 = &v100;
  if (v85 == &v100)
  {
    v79 = 4;
    goto LABEL_130;
  }
  v78 = *(__int128 **)(a1 + 456);
  if (v78 == v85)
  {
    v101 = 0;
    v78 = &v100;
    (*(void (**)(__int128 *, __int128 *))(*(_QWORD *)v85 + 24))(v85, &v100);
    (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 456) + 32))(*(_QWORD *)(a1 + 456));
    v101 = &v100;
    *(_QWORD *)(a1 + 432) = &off_24EC45218;
    *(_QWORD *)(a1 + 440) = sub_22352E6B0;
    v79 = 4;
    *(_QWORD *)(a1 + 456) = v85;
    goto LABEL_130;
  }
  *(_QWORD *)(a1 + 432) = &off_24EC45218;
  *(_QWORD *)(a1 + 440) = sub_22352E6B0;
  v101 = v78;
  *(_QWORD *)(a1 + 456) = v85;
  if (v78 == &v100)
  {
    v79 = 4;
    v78 = &v100;
    goto LABEL_130;
  }
  if (v78)
  {
    v79 = 5;
LABEL_130:
    (*(void (**)(__int128 *))(*(_QWORD *)v78 + 8 * v79))(v78);
  }
  v80 = v90;
  if (v90)
  {
    v81 = (unint64_t *)&v90->__shared_owners_;
    do
      v82 = __ldaxr(v81);
    while (__stlxr(v82 - 1, v81));
    if (!v82)
    {
      ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
      std::__shared_weak_count::__release_weak(v80);
    }
  }
  return a1;
}

void sub_22351BA08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,char a31,int a32,__int16 a33,char a34,char a35)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22351BE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;

  sub_223167354(a14);
  v15 = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v14 + 64) = 0;
  if (!v15)
    JUMPOUT(0x22351BD90);
  JUMPOUT(0x22351BD84);
}

uint64_t sub_22351BE3C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  void *v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *(_QWORD *)a1 = &off_24EC44CA0;
  v2 = (_QWORD *)(a1 + 432);
  v3 = *(_QWORD **)(a1 + 456);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(_QWORD **)(a1 + 424);
  if (v5 == (_QWORD *)(a1 + 400))
  {
    v6 = 4;
    v5 = (_QWORD *)(a1 + 400);
  }
  else
  {
    if (!v5)
      goto LABEL_11;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_11:
  v7 = *(_QWORD **)(a1 + 392);
  if (v7 == (_QWORD *)(a1 + 368))
  {
    v8 = 4;
    v7 = (_QWORD *)(a1 + 368);
  }
  else
  {
    if (!v7)
      goto LABEL_16;
    v8 = 5;
  }
  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_16:
  v9 = *(_QWORD **)(a1 + 360);
  if (v9 == (_QWORD *)(a1 + 336))
  {
    v10 = 4;
    v9 = (_QWORD *)(a1 + 336);
  }
  else
  {
    if (!v9)
      goto LABEL_21;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_21:
  v11 = *(_QWORD **)(a1 + 328);
  if (v11 == (_QWORD *)(a1 + 304))
  {
    v12 = 4;
    v11 = (_QWORD *)(a1 + 304);
  }
  else
  {
    if (!v11)
      goto LABEL_26;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_26:
  v13 = *(_QWORD **)(a1 + 296);
  if (v13 == (_QWORD *)(a1 + 272))
  {
    v14 = 4;
    v13 = (_QWORD *)(a1 + 272);
  }
  else
  {
    if (!v13)
      goto LABEL_31;
    v14 = 5;
  }
  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_31:
  v15 = *(_QWORD **)(a1 + 264);
  if (v15 == (_QWORD *)(a1 + 240))
  {
    v16 = 4;
    v15 = (_QWORD *)(a1 + 240);
  }
  else
  {
    if (!v15)
      goto LABEL_36;
    v16 = 5;
  }
  (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_36:
  v17 = *(_QWORD **)(a1 + 216);
  if (v17)
  {
    do
    {
      v18 = (_QWORD *)*v17;
      sub_223523BA4((uint64_t)(v17 + 2));
      operator delete(v17);
      v17 = v18;
    }
    while (v18);
  }
  v19 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = 0;
  if (v19)
    operator delete(v19);
  v20 = *(std::__shared_weak_count **)(a1 + 192);
  if (!v20)
    goto LABEL_44;
  p_shared_owners = (unint64_t *)&v20->__shared_owners_;
  do
    v22 = __ldaxr(p_shared_owners);
  while (__stlxr(v22 - 1, p_shared_owners));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
    sub_223198030(a1 + 160, *(_QWORD **)(a1 + 168));
    v23 = *(std::__shared_weak_count **)(a1 + 144);
    if (!v23)
      goto LABEL_50;
  }
  else
  {
LABEL_44:
    sub_223198030(a1 + 160, *(_QWORD **)(a1 + 168));
    v23 = *(std::__shared_weak_count **)(a1 + 144);
    if (!v23)
      goto LABEL_50;
  }
  v24 = (unint64_t *)&v23->__shared_owners_;
  do
    v25 = __ldaxr(v24);
  while (__stlxr(v25 - 1, v24));
  if (!v25)
  {
    ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
    std::__shared_weak_count::__release_weak(v23);
  }
LABEL_50:
  v26 = *(_QWORD **)(a1 + 112);
  if (v26)
  {
    do
    {
      v27 = (_QWORD *)*v26;
      operator delete(v26);
      v26 = v27;
    }
    while (v27);
  }
  v28 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = 0;
  if (v28)
    operator delete(v28);
  v29 = *(std::__shared_weak_count **)(a1 + 80);
  if (v29)
  {
    v30 = (unint64_t *)&v29->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
      v32 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 64) = 0;
      if (!v32)
        goto LABEL_60;
      goto LABEL_59;
    }
  }
  v32 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = 0;
  if (v32)
LABEL_59:
    (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
LABEL_60:
  v33 = *(std::__shared_weak_count **)(a1 + 56);
  if (!v33)
    goto LABEL_64;
  v34 = (unint64_t *)&v33->__shared_owners_;
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_64:
    v36 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = 0;
    if (!v36)
      goto LABEL_66;
    goto LABEL_65;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  v36 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = 0;
  if (v36)
LABEL_65:
    (*(void (**)(uint64_t))(*(_QWORD *)v36 + 8))(v36);
LABEL_66:
  v37 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0;
  if (v37)
    (*(void (**)(uint64_t))(*(_QWORD *)v37 + 8))(v37);
  v38 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  if (v38)
    (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
  v39 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v39)
  {
    v40 = sub_22351920C(v39);
    MEMORY[0x227684CE8](v40, 0x10E0C40148EADE0);
  }
  return a1;
}

void sub_22351C1C8(uint64_t a1)
{
  sub_22351BE3C(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22351C1EC(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CAF08);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CAF08))
  {
    sub_22455F53C(&v5);
    sub_223174DE4(__p, "cv3d.recon.sng");
    sub_2232300E0(&v5, (uint64_t)__p, &qword_2540CAF00);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_2540CAF08);
  }
  *a1 = qword_2540CAF00;
}

void sub_22351C288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CAF08);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CAF08);
  _Unwind_Resume(a1);
}

uint64_t sub_22351C2E0(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  void **v9;
  size_t v10;
  size_t v11;
  BOOL v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  BOOL v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  __int128 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 *p_dst;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  int v53;
  void *__p[2];
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char v67;
  char *v68;
  __int128 __dst;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;

  v77 = *MEMORY[0x24BDAC8D0];
  v62 = a2[2];
  v63 = 0;
  v64 = 0;
  v65 = 0;
  v66 = 728333712;
  kdebug_trace();
  v6 = (_QWORD *)*a2;
  v4 = a2 + 1;
  v5 = v6;
  if (v6 != v4)
  {
    do
    {
      v7 = v5 + 4;
      v8 = v5[6];
      DWORD2(v70) = 0;
      sub_22319B83C((uint64_t)&v68, (uint64_t)&__dst, (unsigned __int8 *)v5 + 32);
      if (DWORD2(v70) == -1)
        sub_22316DD70();
      v68 = &v67;
      ((void (*)(void **__return_ptr, char **, __int128 *))off_24EC44D80[DWORD2(v70)])(__p, &v68, &__dst);
      if (DWORD2(v70) != -1)
        ((void (*)(char **, __int128 *))off_24EC44D68[DWORD2(v70)])(&v68, &__dst);
      if (v56 >= 0)
        v9 = __p;
      else
        v9 = (void **)__p[0];
      *(_QWORD *)&__dst = 0;
      v10 = strnlen((const char *)v9, 8uLL);
      memcpy(&__dst, v9, v10);
      v57 = __dst;
      v59 = 0;
      v60 = 0;
      v58 = 0;
      v61 = 728333720;
      *(_QWORD *)&__dst = 0;
      v11 = strnlen((const char *)v9, 8uLL);
      memcpy(&__dst, v9, v11);
      kdebug_trace();
      if (v56 < 0)
        operator delete(__p[0]);
      __dst = xmmword_2245F6D10;
      v12 = *v7 == 0xC8F5B4EBD7BCC25 && v5[5] == 0xB606D763D1A232ECLL;
      if (v12)
      {
        v40 = *(_QWORD *)(a1 + 32);
        if (*(_BYTE *)(v40 + 560))
        {
          if (*(_BYTE *)(v40 + 416))
          {
            v41 = **(uint64_t ***)(a1 + 8);
            if ((*(_BYTE *)(v8 + 1) & 2) != 0)
            {
              v42 = *(_OWORD *)(v40 + 160);
              __dst = *(_OWORD *)(v40 + 144);
              v43 = *(_OWORD *)(v40 + 176);
              v44 = *(_OWORD *)(v40 + 192);
              v70 = v42;
              v71 = v43;
              v72 = v44;
              v45 = *(_OWORD *)(v8 + 52);
              v46 = *(_OWORD *)(v8 + 36);
              v47 = *(_OWORD *)(v8 + 20);
              v73 = *(_OWORD *)(v8 + 4);
              v74 = v47;
              v75 = v46;
              v76 = v45;
              sub_223514AB8(v41, (uint64_t)&__dst);
            }
            v48 = *v41;
            *((_QWORD *)&v70 + 1) = 0;
            (*(void (**)(uint64_t, uint64_t, __int128 *))(*(_QWORD *)v48 + 16))(v48, v8, &__dst);
            p_dst = (__int128 *)*((_QWORD *)&v70 + 1);
            if (*((__int128 **)&v70 + 1) == &__dst)
            {
              p_dst = &__dst;
              v50 = 4;
              goto LABEL_78;
            }
            if (*((_QWORD *)&v70 + 1))
            {
              v50 = 5;
LABEL_78:
              (*(void (**)(void))(*(_QWORD *)p_dst + 8 * v50))();
            }
          }
        }
      }
      v13 = *(_QWORD *)(a1 + 16);
      v16 = *(unsigned __int8 **)(v13 + 56);
      v14 = (unsigned __int8 *)(v13 + 56);
      v15 = v16;
      if (!v16)
        goto LABEL_71;
      v17 = v14;
      do
      {
        v18 = v15[28];
        v19 = *((unsigned __int8 *)v5 + 32);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[29];
        v19 = *((unsigned __int8 *)v5 + 33);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[30];
        v19 = *((unsigned __int8 *)v5 + 34);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[31];
        v19 = *((unsigned __int8 *)v5 + 35);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[32];
        v19 = *((unsigned __int8 *)v5 + 36);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[33];
        v19 = *((unsigned __int8 *)v5 + 37);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[34];
        v19 = *((unsigned __int8 *)v5 + 38);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[35];
        v19 = *((unsigned __int8 *)v5 + 39);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[36];
        v19 = *((unsigned __int8 *)v5 + 40);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[37];
        v19 = *((unsigned __int8 *)v5 + 41);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[38];
        v19 = *((unsigned __int8 *)v5 + 42);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[39];
        v19 = *((unsigned __int8 *)v5 + 43);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[40];
        v19 = *((unsigned __int8 *)v5 + 44);
        if (v18 != v19)
          goto LABEL_35;
        v18 = v15[41];
        v19 = *((unsigned __int8 *)v5 + 45);
        if (v18 == v19
          && (v18 = v15[42], v19 = *((unsigned __int8 *)v5 + 46), v18 == v19)
          && (v18 = v15[43], v19 = *((unsigned __int8 *)v5 + 47), v18 == v19))
        {
          v17 = v15;
        }
        else
        {
LABEL_35:
          if (v18 < v19)
            v15 += 8;
          else
            v17 = v15;
        }
        v15 = *(unsigned __int8 **)v15;
      }
      while (v15);
      if (v17 == v14 || (char)sub_22319835C((unsigned __int8 *)v5 + 32, v17 + 28) < 0)
        goto LABEL_71;
      v20 = sub_223C05798(*(_QWORD *)(a1 + 16) + 24, (unsigned __int8 *)v5 + 32);
      v22 = v20;
      v23 = *(_QWORD *)(a1 + 8);
      v25 = v23 + 64;
      v24 = *(_QWORD *)(v23 + 64);
      if (!v24)
        goto LABEL_51;
      v26 = v23 + 64;
      do
      {
        v27 = *(_DWORD *)(v24 + 32);
        v28 = v27 < v20;
        if (v27 >= v20)
          v29 = (uint64_t *)v24;
        else
          v29 = (uint64_t *)(v24 + 8);
        if (!v28)
          v26 = v24;
        v24 = *v29;
      }
      while (*v29);
      if (v26 == v25 || *(_DWORD *)(v26 + 32) > v20)
      {
LABEL_51:
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 132, (uint64_t)"iter != vol_bundle_store.end()", 30, (uint64_t)"Bundle not found.", 17, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v23 = *(_QWORD *)(a1 + 8);
        v26 = v25;
      }
      v30 = *(_QWORD *)(v26 + 40);
      if ((*(_BYTE *)(v8 + 1) & 2) != 0)
      {
        sub_223517F6C(*(_QWORD *)(v23 + 16), v22, v21);
        sub_223514F38((uint64_t **)v30, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 16), v22);
        v31 = *(uint64_t **)v30;
        v32 = *(unsigned __int8 *)(*(_QWORD *)v30 + 144);
        *(_OWORD *)(*(_QWORD *)v30 + 128) = *(_OWORD *)v7;
        if (v32)
        {
          v33 = v31[14];
          v34 = *(unsigned __int8 *)(v33 + 144);
          *(_OWORD *)(v33 + 128) = *(_OWORD *)v7;
          if (v34)
          {
LABEL_56:
            *((_DWORD *)v31 + 37) = v22;
            *((_BYTE *)v31 + 152) = 1;
            v35 = *(_QWORD *)(v30 + 8);
            v36 = *(unsigned __int8 *)(v35 + 2232);
            *(_OWORD *)(v35 + 2216) = *(_OWORD *)v7;
            if (!v36)
              *(_BYTE *)(v35 + 2232) = 1;
            *(_DWORD *)(v35 + 2236) = v22;
            *(_BYTE *)(v35 + 2240) = 1;
            goto LABEL_59;
          }
        }
        else
        {
          *((_BYTE *)v31 + 144) = 1;
          v33 = v31[14];
          v53 = *(unsigned __int8 *)(v33 + 144);
          *(_OWORD *)(v33 + 128) = *(_OWORD *)v7;
          if (v53)
            goto LABEL_56;
        }
        *(_BYTE *)(v33 + 144) = 1;
        goto LABEL_56;
      }
LABEL_59:
      v37 = *(uint64_t **)v30;
      *(_QWORD *)&__dst = &off_24EC44CE8;
      *((_QWORD *)&__dst + 1) = a1;
      *((_QWORD *)&v70 + 1) = &__dst;
      (*(void (**)(uint64_t *, uint64_t, __int128 *))(*v37 + 32))(v37, v8, &__dst);
      v38 = (__int128 *)*((_QWORD *)&v70 + 1);
      if (*((__int128 **)&v70 + 1) == &__dst)
      {
        v38 = &__dst;
        v39 = 4;
        goto LABEL_70;
      }
      if (*((_QWORD *)&v70 + 1))
      {
        v39 = 5;
LABEL_70:
        (*(void (**)(void))(*(_QWORD *)v38 + 8 * v39))();
      }
LABEL_71:
      kdebug_trace();
      v51 = (_QWORD *)v5[1];
      if (v51)
      {
        do
        {
          v52 = v51;
          v51 = (_QWORD *)*v51;
        }
        while (v51);
      }
      else
      {
        do
        {
          v52 = (_QWORD *)v5[2];
          v12 = *v52 == (_QWORD)v5;
          v5 = v52;
        }
        while (!v12);
      }
      v5 = v52;
    }
    while (v52 != v4);
  }
  return kdebug_trace();
}

void sub_22351C910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22351C9B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  BOOL v8;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  _BYTE *v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t **v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  unint64_t *v27;
  unint64_t v28;
  int32x4_t v29;
  double v30;
  float32x2_t v31;
  double v32;
  float32x4_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  __int128 v38;
  int32x4_t v39;
  uint64_t *v40;
  uint64_t **v41;
  unsigned int v42;
  unsigned int v43;
  BOOL v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  _OWORD *v53;
  unint64_t *v54;
  uint64_t v55;
  std::__shared_weak_count *v56;
  _OWORD v57[2];
  int32x4_t v58;
  int32x4_t v59;
  uint64_t **v60;
  uint64_t *v61;
  uint64_t v62;

  if (*(_QWORD *)(a1 + 48))
    v8 = 1;
  else
    v8 = *(_BYTE *)(a2 + 1832) == 0;
  if (!v8)
  {
    v9 = operator new(0x70uLL);
    v9[1] = 0;
    v9[2] = 0;
    *v9 = &off_24EC452C8;
    v9[3] = &off_24EC216B8;
    LODWORD(v57[0]) = -947920896;
    sub_22321B00C((_DWORD *)(a2 + 1336), v57, (_WORD *)v9 + 16);
    v10 = *(std::__shared_weak_count **)(a1 + 56);
    *(_QWORD *)(a1 + 48) = v9 + 3;
    *(_QWORD *)(a1 + 56) = v9;
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  if (*(_QWORD *)a3)
    sub_223763B54((_QWORD *)(a1 + 200), *(_QWORD **)a3);
  v13 = *(_BYTE **)(a1 + 32);
  if (v13[272] && v13[560] && v13[497])
  {
    if (!*(_BYTE *)(a2 + 2312)
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManager.cpp", 215, (uint64_t)"keyframe_engine_result.global_reference_system_result.has_value()", 65, (uint64_t)&unk_224589191, 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v14 = *(std::__shared_weak_count **)(a3 + 8);
    if (v14)
    {
      v15 = (unint64_t *)&v14->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
    sub_22351CFC0();
    if (v14)
    {
      v17 = (unint64_t *)&v14->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
LABEL_100:
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
      return;
    }
    return;
  }
  v19 = *(_QWORD *)a3;
  v14 = *(std::__shared_weak_count **)(a3 + 8);
  if (v14)
  {
    v20 = (unint64_t *)&v14->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
  }
  v61 = 0;
  v62 = 0;
  v22 = &v61;
  v60 = &v61;
  sub_223485264(a4);
  *(_WORD *)a4 = 1025;
  v23 = *(_OWORD **)(a1 + 32);
  v24 = v23[11];
  v25 = v23[12];
  v26 = v23[10];
  *(_OWORD *)(a4 + 4) = v23[9];
  *(_OWORD *)(a4 + 52) = v25;
  *(_OWORD *)(a4 + 36) = v24;
  *(_OWORD *)(a4 + 20) = v26;
  v55 = v19;
  v56 = v14;
  if (v14)
  {
    v27 = (unint64_t *)&v14->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  sub_2235684AC(a2, &v55, a1 + 200, (uint64_t)v57);
  sub_22347D8E4((char **)(a4 + 168), (uint64_t)v57);
  sub_223480A2C((char **)v57);
  v34 = v56;
  if (v56)
  {
    v35 = (unint64_t *)&v56->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = *(_QWORD *)(a1 + 32);
  v38 = *(_OWORD *)(v37 + 160);
  v57[0] = *(_OWORD *)(v37 + 144);
  v57[1] = v38;
  v39 = *(int32x4_t *)(v37 + 192);
  v58 = *(int32x4_t *)(v37 + 176);
  v59 = v39;
  sub_22347DD4C((uint64_t)v57, (_QWORD *)(a4 + 168), v58, v39, v29, v30, v31, v32, v33);
  if (*(_BYTE *)(a4 + 2016))
    (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), a4 + 192);
  sub_22347E72C(*(_QWORD *)(a1 + 24), a4);
  v40 = v61;
  if (v61)
  {
    while (1)
    {
      v41 = (uint64_t **)v40;
      v42 = *((unsigned __int8 *)v40 + 32);
      if (v42 != 37)
        break;
      v43 = *((unsigned __int8 *)v41 + 33);
      v44 = v43 > 0xCC;
      if (v43 != 204)
        goto LABEL_59;
      v45 = *((unsigned __int8 *)v41 + 34);
      v44 = v45 > 0x7B;
      if (v45 != 123)
        goto LABEL_59;
      v46 = *((unsigned __int8 *)v41 + 35);
      v44 = v46 > 0xBD;
      if (v46 == 189
        && (v47 = *((unsigned __int8 *)v41 + 36), v44 = v47 > 0x4E, v47 == 78)
        && (v48 = *((unsigned __int8 *)v41 + 37), v44 = v48 > 0x5B, v48 == 91))
      {
        v49 = *((unsigned __int8 *)v41 + 38);
        if (v49 == 143)
        {
          v49 = *((unsigned __int8 *)v41 + 39);
          if (v49 == 12)
          {
            v49 = *((unsigned __int8 *)v41 + 40);
            if (v49 == 236)
            {
              v49 = *((unsigned __int8 *)v41 + 41);
              if (v49 == 50)
              {
                v49 = *((unsigned __int8 *)v41 + 42);
                if (v49 == 162)
                {
                  v49 = *((unsigned __int8 *)v41 + 43);
                  if (v49 == 209)
                  {
                    v49 = *((unsigned __int8 *)v41 + 44);
                    if (v49 == 99)
                    {
                      v49 = *((unsigned __int8 *)v41 + 45);
                      if (v49 == 215)
                      {
                        v49 = *((unsigned __int8 *)v41 + 46);
                        if (v49 == 6)
                        {
                          v49 = *((unsigned __int8 *)v41 + 47);
                          if (v49 == 182)
                            goto LABEL_72;
                          v50 = 182;
                        }
                        else
                        {
                          v50 = 6;
                        }
                      }
                      else
                      {
                        v50 = 215;
                      }
                    }
                    else
                    {
                      v50 = 99;
                    }
                  }
                  else
                  {
                    v50 = 209;
                  }
                }
                else
                {
                  v50 = 162;
                }
              }
              else
              {
                v50 = 50;
              }
            }
            else
            {
              v50 = 236;
            }
          }
          else
          {
            v50 = 12;
          }
        }
        else
        {
          v50 = 143;
        }
        if (v50 >= v49)
        {
LABEL_72:
          v51 = *((unsigned __int8 *)v41 + 38);
          if (v51 == 143)
          {
            v51 = *((unsigned __int8 *)v41 + 39);
            if (v51 == 12)
            {
              v51 = *((unsigned __int8 *)v41 + 40);
              if (v51 == 236)
              {
                v51 = *((unsigned __int8 *)v41 + 41);
                if (v51 == 50)
                {
                  v51 = *((unsigned __int8 *)v41 + 42);
                  if (v51 == 162)
                  {
                    v51 = *((unsigned __int8 *)v41 + 43);
                    if (v51 == 209)
                    {
                      v51 = *((unsigned __int8 *)v41 + 44);
                      if (v51 == 99)
                      {
                        v51 = *((unsigned __int8 *)v41 + 45);
                        if (v51 == 215)
                        {
                          v51 = *((unsigned __int8 *)v41 + 46);
                          if (v51 == 6)
                          {
                            v51 = *((unsigned __int8 *)v41 + 47);
                            if (v51 == 182)
                              goto LABEL_97;
                            v52 = 182;
                          }
                          else
                          {
                            v52 = 6;
                          }
                        }
                        else
                        {
                          v52 = 215;
                        }
                      }
                      else
                      {
                        v52 = 99;
                      }
                    }
                    else
                    {
                      v52 = 209;
                    }
                  }
                  else
                  {
                    v52 = 162;
                  }
                }
                else
                {
                  v52 = 50;
                }
              }
              else
              {
                v52 = 236;
              }
            }
            else
            {
              v52 = 12;
            }
          }
          else
          {
            v52 = 143;
          }
          if (v51 >= v52)
            goto LABEL_97;
          goto LABEL_60;
        }
LABEL_39:
        v40 = *v41;
        v22 = v41;
        if (!*v41)
          goto LABEL_94;
      }
      else
      {
LABEL_59:
        if (v44)
          goto LABEL_39;
LABEL_60:
        v40 = v41[1];
        if (!v40)
        {
          v22 = v41 + 1;
          goto LABEL_94;
        }
      }
    }
    if (v42 >= 0x26)
      goto LABEL_39;
    goto LABEL_60;
  }
  v41 = &v61;
LABEL_94:
  v53 = operator new(0x38uLL);
  v53[2] = xmmword_2245F6D10;
  *((_QWORD *)v53 + 6) = a4;
  *(_QWORD *)v53 = 0;
  *((_QWORD *)v53 + 1) = 0;
  *((_QWORD *)v53 + 2) = v41;
  *v22 = (uint64_t *)v53;
  if (*v60)
  {
    v60 = (uint64_t **)*v60;
    v53 = *v22;
  }
  sub_2231A9A8C(v61, (uint64_t *)v53);
  ++v62;
LABEL_97:
  sub_22351C2E0(a1, &v60);
  sub_223198030((uint64_t)&v60, v61);
  if (v14)
  {
    v54 = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(v54);
    while (__stlxr(v18 - 1, v54));
    goto LABEL_100;
  }
}

void sub_22351CF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22351CF50(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_22351CF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v4;
  va_list va;

  va_start(va, a3);
  sub_22347D81C(v3);
  sub_223198030(v4 - 88, *(_QWORD **)(v4 - 80));
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_22351CFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD **v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t *v14;
  char *v15;
  __int128 v16;
  uint64_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  _BYTE *v20;
  BOOL v21;
  BOOL v23;
  unsigned __int8 *v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  unsigned __int8 *v37;
  unsigned __int8 *v38;
  _QWORD *v39;
  _QWORD *v40;
  size_t v41;
  void **p_dst;
  unint64_t v43;
  const void **v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  uint64_t v49;
  const char *v50;
  size_t v51;
  unsigned __int8 v52;
  unsigned __int8 v53;
  const char *v54;
  size_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  NSObject *v60;
  uint64_t v61;
  uint64_t v62;
  size_t v63;
  std::__shared_weak_count_vtbl *v64;
  std::__shared_weak_count *v65;
  size_t v66;
  size_t v67;
  _QWORD *v68;
  void *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  char v74;
  _QWORD *v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *p_shared_owners;
  unint64_t v79;
  char *v80;
  unint64_t *v81;
  unint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  const char *v95;
  void *v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  std::__shared_weak_count *v100;
  unint64_t *v101;
  unint64_t v102;
  _QWORD *v103;
  std::__shared_weak_count *v104;
  unint64_t *v105;
  unint64_t v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  std::__shared_weak_count *v113;
  unint64_t *v114;
  unint64_t v115;
  const char *v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  _QWORD *v120;
  _QWORD **v121;
  int v122;
  int v123;
  unint64_t v124;
  unint64_t v125;
  _QWORD *v127;
  _QWORD *v128;
  size_t v129;
  void **v130;
  unint64_t v131;
  const void **v132;
  const void *v133;
  uint64_t v134;
  uint64_t v135;
  void **v136;
  uint64_t v137;
  const char *v138;
  size_t v139;
  _QWORD **v140;
  unsigned __int8 v141;
  unsigned __int8 v142;
  const char *v143;
  size_t v144;
  _BYTE *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  const char *v149;
  NSObject *v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  size_t v154;
  std::__shared_weak_count_vtbl *v155;
  std::__shared_weak_count *v156;
  size_t v157;
  size_t v158;
  _QWORD *v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  char v164;
  _QWORD *v165;
  uint64_t v166;
  std::__shared_weak_count *v167;
  unint64_t *v168;
  unint64_t v169;
  char *v170;
  unint64_t *v171;
  unint64_t v172;
  std::__shared_weak_count *v173;
  unint64_t *v174;
  unint64_t v175;
  unint64_t v176;
  std::__shared_weak_count *v177;
  unint64_t *v178;
  unint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  const char *v185;
  void *v186;
  std::__shared_weak_count *v187;
  unint64_t *v188;
  unint64_t v189;
  std::__shared_weak_count *v190;
  unint64_t *v191;
  unint64_t v192;
  _QWORD *v193;
  std::__shared_weak_count *v194;
  unint64_t *v195;
  unint64_t v196;
  std::__shared_weak_count *v197;
  unint64_t *v198;
  unint64_t v199;
  std::__shared_weak_count *v200;
  unint64_t *v201;
  unint64_t v202;
  std::__shared_weak_count *v203;
  unint64_t *v204;
  unint64_t v205;
  const char *v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  _QWORD *v210;
  _QWORD *v211;
  uint64_t v212;
  std::__shared_weak_count *v213;
  unint64_t *v214;
  unint64_t v215;
  std::__shared_weak_count *v216;
  unint64_t *v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  _QWORD *v227;
  int v228;
  int v229;
  _QWORD *v230;
  _QWORD *v231;
  __int128 *v232;
  uint64_t *v233;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v234;
  _BYTE *v235;
  BOOL v236;
  BOOL v237;
  uint64_t v238;
  uint64_t *v239;
  _QWORD *v240;
  _QWORD *v241;
  unsigned __int8 **v242;
  _QWORD *v243;
  _QWORD *v244;
  uint64_t **v245;
  unsigned int v246;
  unsigned int v247;
  BOOL v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  BOOL v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  uint64_t **v282;
  uint64_t **v283;
  unsigned int v284;
  unsigned int v285;
  BOOL v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  BOOL v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  uint64_t *v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  uint64_t **v324;
  uint64_t ***v325;
  uint64_t *v326;
  unsigned __int8 *v328;
  uint64_t *v329;
  uint64_t *v330;
  uint64_t *v331;
  char v332;
  char **v333;
  char **v334;
  unsigned __int8 *v335;
  unsigned int v336;
  unsigned int v337;
  uint64_t *v338;
  char *v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  uint64_t *v343;
  uint64_t *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t *v349;
  uint64_t *v350;
  uint64_t *v351;
  uint64_t *v352;
  const char *v353;
  const char *v354;
  uint64_t v355;
  char *__s;
  char *__sa;
  uint64_t *v358;
  int v359;
  int v360;
  uint64_t v361;
  uint64_t *v362[2];
  uint64_t v363;
  uint64_t v364;
  _BYTE v365[16];
  unint64_t v366;
  uint64_t v367;
  unint64_t v368;
  void *__p;
  char v370;
  unint64_t v371;
  int v372;
  _BYTE v373[2032];
  uint64_t v374;
  std::__shared_weak_count *v375;
  double v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  int v380;
  __int128 v381;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  int v383;
  const char *v384;
  int v385;
  const char *v386;
  uint64_t v387;
  std::__shared_weak_count *v388;
  void **__dst;
  size_t v390;
  int64_t v391;
  uint64_t v392;
  void *v393[2];
  std::__shared_weak_count *v394;
  char *v395;
  std::__shared_weak_count *v396;
  _QWORD *v397;
  __int128 v398;
  char v399[8];
  _QWORD *v400;
  _QWORD *v401[3];
  _QWORD *v402[6];
  char v403;
  _QWORD **v404;
  _QWORD *v405[2];
  unsigned __int8 *v406;
  _QWORD *v407[2];
  _QWORD *v408[3];
  _QWORD *v409[3];
  _QWORD *v410[6];
  char v411[8];
  float32x2_t v412[228];
  char v413;
  char v414;
  char v415;
  _BYTE v416[176];
  _BYTE v417[24];
  __int128 v418;
  char *v419;
  size_t v420;
  unint64_t v421;
  char v422;
  _QWORD v423[5];

  v0 = MEMORY[0x24BDAC7A8]();
  v358 = v2;
  v3 = v1;
  v5 = v4;
  v6 = v0;
  v423[2] = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(v1 + 1832))
    v7 = (double)*(uint64_t *)(v1 + 1240) / 1000000000.0;
  else
    v7 = 0.0;
  v376 = v7;
  v377 = 0;
  v379 = 0;
  v378 = 0;
  v380 = 728333584;
  kdebug_trace();
  sub_223523E5C((uint64_t)&v411, v3);
  if (v413)
    (*(void (**)(_QWORD, float32x2_t *))(**(_QWORD **)(v5 + 40) + 16))(*(_QWORD *)(v5 + 40), v412);
  v361 = v6;
  sub_223473998(*(_BYTE **)(v5 + 16), (uint64_t)&v411, (uint64_t)&v404);
  v8 = *(_QWORD *)(v5 + 16);
  v9 = *(_QWORD **)(v8 + 24);
  v10 = (_QWORD *)(v8 + 32);
  if (v9 != (_QWORD *)(v8 + 32))
  {
    v11 = (_QWORD **)(v5 + 160);
    do
    {
      v12 = sub_223525C14((_QWORD *)(v5 + 160), (uint64_t *)(v5 + 168), v362, (uint64_t **)v417, *((_DWORD *)v9 + 7));
      if (*v12)
      {
        v13 = (_QWORD *)v9[1];
        if (v13)
          goto LABEL_15;
      }
      else
      {
        v14 = v12;
        v15 = (char *)operator new(0x30uLL);
        v16 = *(_OWORD *)((char *)v9 + 28);
        *((_DWORD *)v15 + 11) = *((_DWORD *)v9 + 11);
        *(_OWORD *)(v15 + 28) = v16;
        v17 = v362[0];
        *(_QWORD *)v15 = 0;
        *((_QWORD *)v15 + 1) = 0;
        *((_QWORD *)v15 + 2) = v17;
        *v14 = (uint64_t)v15;
        v18 = (_QWORD *)**v11;
        if (v18)
        {
          *v11 = v18;
          v15 = (char *)*v14;
        }
        sub_2231A9A8C(*(uint64_t **)(v5 + 168), (uint64_t *)v15);
        ++*(_QWORD *)(v5 + 176);
        v13 = (_QWORD *)v9[1];
        if (v13)
        {
          do
          {
LABEL_15:
            v19 = v13;
            v13 = (_QWORD *)*v13;
          }
          while (v13);
          goto LABEL_8;
        }
      }
      do
      {
        v19 = (_QWORD *)v9[2];
        v21 = *v19 == (_QWORD)v9;
        v9 = v19;
      }
      while (!v21);
LABEL_8:
      v9 = v19;
    }
    while (v19 != v10);
  }
  v20 = *(_BYTE **)(v5 + 32);
  if (v20[560])
    v21 = v20[880] == 0;
  else
    v21 = 1;
  if (!v21 && v20[976] != 0)
  {
    v23 = !v20[497] || v20[272] == 0;
    if (!v23 && v20[524])
    {
      v24 = v406;
      if (v406 != (unsigned __int8 *)v407)
      {
        v349 = *(uint64_t **)(MEMORY[0x24BEDB7F0] + 64);
        v351 = (uint64_t *)*MEMORY[0x24BEDB7F0];
        v347 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v345 = MEMORY[0x24BEDB848] + 16;
        while (1)
        {
          v25 = *(_QWORD *)(v5 + 16);
          v28 = *(unsigned __int8 **)(v25 + 56);
          v26 = (unsigned __int8 *)(v25 + 56);
          v27 = v28;
          if (!v28)
            goto LABEL_750;
          v29 = v26;
          do
          {
            v30 = v27[28];
            v31 = v24[25];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[29];
            v31 = v24[26];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[30];
            v31 = v24[27];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[31];
            v31 = v24[28];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[32];
            v31 = v24[29];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[33];
            v31 = v24[30];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[34];
            v31 = v24[31];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[35];
            v31 = v24[32];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[36];
            v31 = v24[33];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[37];
            v31 = v24[34];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[38];
            v31 = v24[35];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[39];
            v31 = v24[36];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[40];
            v31 = v24[37];
            if (v30 != v31)
              goto LABEL_54;
            v30 = v27[41];
            v31 = v24[38];
            if (v30 == v31 && (v30 = v27[42], v31 = v24[39], v30 == v31) && (v30 = v27[43], v31 = v24[40], v30 == v31))
            {
              v29 = v27;
            }
            else
            {
LABEL_54:
              if (v30 < v31)
                v27 += 8;
              else
                v29 = v27;
            }
            v27 = *(unsigned __int8 **)v27;
          }
          while (v27);
          if (v29 == v26 || (char)sub_22319835C(v24 + 25, v29 + 28) < 0)
          {
LABEL_750:
            if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManager.cpp", 134, (uint64_t)"cluster_integrator_->GetIntegratorMap().ContainsCluster(del_cid)", 64, (uint64_t)&unk_224589191, 0, (void (*)(void **))sub_22457406C))
            {
              abort();
            }
          }
          v32 = sub_223C05798(*(_QWORD *)(v5 + 16) + 24, v24 + 25);
          sub_223C05BA4((_QWORD *)(*(_QWORD *)(v5 + 16) + 24), v24 + 25);
          sub_223516EA0(*(_QWORD *)(v5 + 8), v32, v33);
          sub_223C18AC0(v24 + 25);
          sub_22351C1EC(&v392);
          if (**(int **)(v392 + 56) > 3
            || (v34 = *(unsigned __int8 *)(v392 + 72),
                v35 = sub_22322F254(v392, "OSLogSurrogateAppender", 1, 0),
                v36 = v35,
                (v359 = v34) == 0)
            && !v35)
          {
            v37 = (unsigned __int8 *)*((_QWORD *)v24 + 1);
            if (!v37)
              goto LABEL_200;
            goto LABEL_65;
          }
          sub_223195210((uint64_t)v362);
          v39 = sub_2231813E8(&v363, (uint64_t)"VLM:GCRS Delete from integrator map cid:", 40);
          sub_2245664AC(v24 + 25, v417);
          v40 = sub_2231813E8(v39, (uint64_t)v417, 36);
          sub_2231813E8(v40, (uint64_t)" bid:", 5);
          std::ostream::operator<<();
          if ((v372 & 0x10) != 0)
          {
            v43 = v371;
            v44 = (const void **)&v367;
            if (v371 < v368)
            {
              v371 = v368;
              v43 = v368;
              v44 = (const void **)&v367;
            }
          }
          else
          {
            if ((v372 & 8) == 0)
            {
              v41 = 0;
              HIBYTE(v391) = 0;
              p_dst = (void **)&__dst;
              goto LABEL_81;
            }
            v43 = v366;
            v44 = (const void **)v365;
          }
          v45 = *v44;
          v41 = v43 - (_QWORD)*v44;
          if (v41 > 0x7FFFFFFFFFFFFFF7)
            sub_22316DBC0();
          if (v41 >= 0x17)
            break;
          HIBYTE(v391) = v43 - *(_BYTE *)v44;
          p_dst = (void **)&__dst;
          if (v41)
            goto LABEL_80;
LABEL_81:
          *((_BYTE *)p_dst + v41) = 0;
          *(_QWORD *)&v381 = &v392;
          *((std::chrono::steady_clock::time_point *)&v381 + 1) = std::chrono::steady_clock::now();
          rep = std::chrono::system_clock::now().__d_.__rep_;
          v383 = 3;
          v384 = "unknown file";
          v385 = 139;
          v386 = "unknown function";
          v387 = 0;
          v388 = 0;
          if (v391 >= 0)
            v48 = (void **)&__dst;
          else
            v48 = __dst;
          v49 = *(_QWORD *)v381;
          v50 = (const char *)(*(_QWORD *)v381 + 16);
          v354 = v50;
          __s = (char *)v48;
          if (*(char *)(*(_QWORD *)v381 + 39) < 0)
          {
            v50 = *(const char **)(v49 + 16);
            v51 = *(_QWORD *)(v49 + 24);
            v53 = atomic_load((unsigned __int8 *)&qword_255788F58);
            if ((v53 & 1) != 0)
              goto LABEL_88;
          }
          else
          {
            v51 = *(unsigned __int8 *)(*(_QWORD *)v381 + 39);
            v52 = atomic_load((unsigned __int8 *)&qword_255788F58);
            if ((v52 & 1) != 0)
              goto LABEL_88;
          }
          if (__cxa_guard_acquire(&qword_255788F58))
          {
            sub_224568628((uint64_t)v393);
            sub_223199C58("com.apple.cv3d", (unint64_t)v393, &xmmword_255788F40);
            if ((_BYTE)v395 && SHIBYTE(v394) < 0)
              operator delete(v393[0]);
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
            __cxa_guard_release(&qword_255788F58);
          }
LABEL_88:
          if (byte_255788F57 >= 0)
            v54 = (const char *)&xmmword_255788F40;
          else
            v54 = (const char *)xmmword_255788F40;
          if (byte_255788F57 >= 0)
            v55 = byte_255788F57;
          else
            v55 = *((_QWORD *)&xmmword_255788F40 + 1);
          *(_QWORD *)v417 = os_log_create(v54, v50);
          if (v55 > 0x7FFFFFFFFFFFFFF7)
            sub_22316DBC0();
          if (v55 >= 0x17)
          {
            v57 = (v55 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v55 | 7) != 0x17)
              v57 = v55 | 7;
            v58 = v57 + 1;
            v56 = operator new(v57 + 1);
            *(_QWORD *)&v417[16] = v55;
            *(_QWORD *)&v418 = v58 | 0x8000000000000000;
            *(_QWORD *)&v417[8] = v56;
LABEL_101:
            memmove(v56, v54, v55);
            goto LABEL_102;
          }
          BYTE7(v418) = v55;
          v56 = &v417[8];
          if (v55)
            goto LABEL_101;
LABEL_102:
          v56[v55] = 0;
          BYTE8(v418) = 1;
          if (v51 > 0x7FFFFFFFFFFFFFF7)
            sub_22316DBC0();
          if (v51 >= 0x17)
          {
            v61 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v51 | 7) != 0x17)
              v61 = v51 | 7;
            v62 = v61 + 1;
            v59 = (char *)operator new(v61 + 1);
            v420 = v51;
            v421 = v62 | 0x8000000000000000;
            v419 = v59;
          }
          else
          {
            HIBYTE(v421) = v51;
            v59 = (char *)&v419;
            if (!v51)
            {
              LOBYTE(v419) = 0;
              v422 = 1;
              v60 = *(NSObject **)v417;
              if ((SHIBYTE(v421) & 0x80000000) == 0)
                goto LABEL_106;
              goto LABEL_112;
            }
          }
          memmove(v59, v50, v51);
          v59[v51] = 0;
          v422 = 1;
          v60 = *(NSObject **)v417;
          if ((SHIBYTE(v421) & 0x80000000) == 0)
          {
LABEL_106:
            if (!BYTE8(v418))
              goto LABEL_115;
            goto LABEL_113;
          }
LABEL_112:
          operator delete(v419);
          if (!BYTE8(v418))
            goto LABEL_115;
LABEL_113:
          if (SBYTE7(v418) < 0)
            operator delete(*(void **)&v417[8]);
LABEL_115:
          if (*(_QWORD *)v417)
            os_release(*(void **)v417);
          if (!v36 || !*(_QWORD *)(v36 + 24))
          {
            os_log_type_enabled(v60, OS_LOG_TYPE_INFO);
            *(_DWORD *)v417 = 136315138;
            *(_QWORD *)&v417[4] = __s;
            v69 = (void *)_os_log_send_and_compose_impl();
            v70 = v359;
            if (!v69)
              goto LABEL_187;
            free(v69);
            if (!v359)
              goto LABEL_191;
            goto LABEL_188;
          }
          v63 = _os_log_pack_size();
          v64 = (std::__shared_weak_count_vtbl *)operator new(v63, (std::align_val_t)8uLL);
          v65 = (std::__shared_weak_count *)operator new();
          v65->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
          v65->__shared_owners_ = 0;
          v65->__shared_weak_owners_ = 0;
          v65[1].__vftable = v64;
          v393[0] = v64;
          v393[1] = v64;
          v394 = v65;
          v395 = 0;
          v396 = 0;
          v66 = strlen(__s);
          if (v66 > 0x7FFFFFFFFFFFFFF7)
            sub_22316DBC0();
          v67 = v66;
          if (v66 >= 0x17)
          {
            v71 = (v66 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v66 | 7) != 0x17)
              v71 = v66 | 7;
            v72 = v71 + 1;
            v68 = operator new(v71 + 1);
            *((_QWORD *)&v398 + 1) = v72 | 0x8000000000000000;
            v397 = v68;
            *(_QWORD *)&v398 = v67;
LABEL_129:
            memcpy(v68, __s, v67);
            goto LABEL_130;
          }
          HIBYTE(v398) = v66;
          v68 = &v397;
          if (v66)
            goto LABEL_129;
LABEL_130:
          *((_BYTE *)v68 + v67) = 0;
          v73 = v397;
          v423[0] = v398;
          *(_QWORD *)((char *)v423 + 7) = *(_QWORD *)((char *)&v398 + 7);
          v74 = HIBYTE(v398);
          v75 = operator new(0x38uLL);
          v75[1] = 0;
          v75[2] = 0;
          v75[3] = off_24EC1FA48;
          *v75 = &off_24EC1F9F8;
          v76 = v423[0];
          v75[4] = v73;
          v75[5] = v76;
          *(_QWORD *)((char *)v75 + 47) = *(_QWORD *)((char *)v423 + 7);
          *((_BYTE *)v75 + 55) = v74;
          v423[0] = 0;
          *(_QWORD *)((char *)v423 + 7) = 0;
          v77 = v396;
          v395 = (char *)(v75 + 3);
          v396 = (std::__shared_weak_count *)v75;
          if (v77)
          {
            p_shared_owners = (unint64_t *)&v77->__shared_owners_;
            do
              v79 = __ldaxr(p_shared_owners);
            while (__stlxr(v79 - 1, p_shared_owners));
            if (!v79)
            {
              ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
              std::__shared_weak_count::__release_weak(v77);
            }
          }
          *(_OWORD *)v417 = *(_OWORD *)v393;
          v80 = v395;
          *(_QWORD *)&v417[16] = v394;
          if (v394)
          {
            v81 = (unint64_t *)&v394->__shared_owners_;
            do
              v82 = __ldxr(v81);
            while (__stxr(v82 + 1, v81));
          }
          v83 = v396;
          *(_QWORD *)&v418 = v80;
          *((_QWORD *)&v418 + 1) = v396;
          if (v396)
          {
            v84 = (unint64_t *)&v396->__shared_owners_;
            do
              v85 = __ldxr(v84);
            while (__stxr(v85 + 1, v84));
            v419 = v80;
            do
              v86 = __ldaxr(v84);
            while (__stlxr(v86 - 1, v84));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
              std::__shared_weak_count::__release_weak(v83);
            }
          }
          else
          {
            v419 = v80;
          }
          v87 = v394;
          if (v394)
          {
            v88 = (unint64_t *)&v394->__shared_owners_;
            do
              v89 = __ldaxr(v88);
            while (__stlxr(v89 - 1, v88));
            if (!v89)
            {
              ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
              std::__shared_weak_count::__release_weak(v87);
            }
          }
          v90 = *(_QWORD *)v417;
          if (v419[31] >= 0)
            v91 = v419 + 8;
          else
            v91 = (char *)*((_QWORD *)v419 + 1);
          v92 = _os_log_pack_fill();
          *(_DWORD *)v92 = 136315138;
          *(_QWORD *)(v92 + 4) = v91;
          v93 = (char *)operator new();
          v94 = *(unsigned __int8 *)(v49 + 39);
          v95 = v354;
          if ((v94 & 0x80u) != 0)
          {
            v95 = *(const char **)(v49 + 16);
            v94 = *(_QWORD *)(v49 + 24);
          }
          *(_QWORD *)v93 = v90;
          *(_OWORD *)(v93 + 8) = *(_OWORD *)&v417[8];
          *(_QWORD *)&v417[8] = 0;
          *(_QWORD *)&v417[16] = 0;
          *(_OWORD *)(v93 + 24) = v418;
          v418 = 0uLL;
          *((_QWORD *)v93 + 5) = v95;
          *((_QWORD *)v93 + 6) = v94;
          v93[56] = 1;
          v397 = 0;
          v393[0] = v93;
          (*(void (**)(_QWORD, void **))(**(_QWORD **)(v36 + 24) + 40))(*(_QWORD *)(v36 + 24), v393);
          v96 = v393[0];
          v393[0] = 0;
          v70 = v359;
          if (v96)
          {
            v97 = (std::__shared_weak_count *)*((_QWORD *)v96 + 4);
            if (v97)
            {
              v98 = (unint64_t *)&v97->__shared_owners_;
              do
                v99 = __ldaxr(v98);
              while (__stlxr(v99 - 1, v98));
              if (!v99)
              {
                ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
                std::__shared_weak_count::__release_weak(v97);
              }
            }
            v100 = (std::__shared_weak_count *)*((_QWORD *)v96 + 2);
            if (v100)
            {
              v101 = (unint64_t *)&v100->__shared_owners_;
              do
                v102 = __ldaxr(v101);
              while (__stlxr(v102 - 1, v101));
              if (!v102)
              {
                ((void (*)(std::__shared_weak_count *))v100->__on_zero_shared)(v100);
                std::__shared_weak_count::__release_weak(v100);
              }
            }
            MEMORY[0x227684CE8](v96, 0x10F0C40B62ED6C6);
            v103 = v397;
            v397 = 0;
            if (v103)
            {
              v104 = (std::__shared_weak_count *)v103[4];
              if (v104)
              {
                v105 = (unint64_t *)&v104->__shared_owners_;
                do
                  v106 = __ldaxr(v105);
                while (__stlxr(v106 - 1, v105));
                if (!v106)
                {
                  ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
                  std::__shared_weak_count::__release_weak(v104);
                }
              }
              v107 = (std::__shared_weak_count *)v103[2];
              if (v107)
              {
                v108 = (unint64_t *)&v107->__shared_owners_;
                do
                  v109 = __ldaxr(v108);
                while (__stlxr(v109 - 1, v108));
                if (!v109)
                {
                  ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
                  std::__shared_weak_count::__release_weak(v107);
                }
              }
              MEMORY[0x227684CE8](v103, 0x10F0C40B62ED6C6);
            }
          }
          v110 = (std::__shared_weak_count *)*((_QWORD *)&v418 + 1);
          if (!*((_QWORD *)&v418 + 1))
            goto LABEL_183;
          v111 = (unint64_t *)(*((_QWORD *)&v418 + 1) + 8);
          do
            v112 = __ldaxr(v111);
          while (__stlxr(v112 - 1, v111));
          if (!v112)
          {
            ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
            std::__shared_weak_count::__release_weak(v110);
            v113 = *(std::__shared_weak_count **)&v417[16];
            if (!*(_QWORD *)&v417[16])
              goto LABEL_187;
          }
          else
          {
LABEL_183:
            v113 = *(std::__shared_weak_count **)&v417[16];
            if (!*(_QWORD *)&v417[16])
              goto LABEL_187;
          }
          v114 = (unint64_t *)&v113->__shared_owners_;
          do
            v115 = __ldaxr(v114);
          while (__stlxr(v115 - 1, v114));
          if (v115)
          {
LABEL_187:
            if (!v70)
              goto LABEL_191;
            goto LABEL_188;
          }
          ((void (*)(std::__shared_weak_count *))v113->__on_zero_shared)(v113);
          std::__shared_weak_count::__release_weak(v113);
          if (!v359)
            goto LABEL_191;
LABEL_188:
          v116 = (const char *)&__dst;
          if (v391 < 0)
            v116 = (const char *)__dst;
          sub_22322C138((uint64_t)&v381, "%s", v116);
          sub_223182C08((uint64_t)&v381);
LABEL_191:
          sub_223182C08((uint64_t)&v381);
          v117 = v388;
          if (!v388)
            goto LABEL_195;
          v118 = (unint64_t *)&v388->__shared_owners_;
          do
            v119 = __ldaxr(v118);
          while (__stlxr(v119 - 1, v118));
          if (v119)
          {
LABEL_195:
            if ((SHIBYTE(v391) & 0x80000000) == 0)
              goto LABEL_197;
LABEL_196:
            operator delete(__dst);
            goto LABEL_197;
          }
          ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
          std::__shared_weak_count::__release_weak(v117);
          if (SHIBYTE(v391) < 0)
            goto LABEL_196;
LABEL_197:
          v362[0] = v351;
          *(uint64_t **)((char *)v362 + *(v351 - 3)) = v349;
          v363 = v347;
          v364 = v345;
          if (v370 < 0)
            operator delete(__p);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          MEMORY[0x227684BE0](v373);
          v37 = (unsigned __int8 *)*((_QWORD *)v24 + 1);
          if (!v37)
          {
            do
            {
LABEL_200:
              v38 = (unsigned __int8 *)*((_QWORD *)v24 + 2);
              v21 = *(_QWORD *)v38 == (_QWORD)v24;
              v24 = v38;
            }
            while (!v21);
            goto LABEL_34;
          }
          do
          {
LABEL_65:
            v38 = v37;
            v37 = *(unsigned __int8 **)v37;
          }
          while (v37);
LABEL_34:
          v24 = v38;
          if (v38 == (unsigned __int8 *)v407)
            goto LABEL_214;
        }
        v46 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v41 | 7) != 0x17)
          v46 = v41 | 7;
        v47 = v46 + 1;
        p_dst = (void **)operator new(v46 + 1);
        v391 = v47 | 0x8000000000000000;
        __dst = p_dst;
        v390 = v41;
LABEL_80:
        memmove(p_dst, v45, v41);
        goto LABEL_81;
      }
LABEL_214:
      v120 = v404;
      v121 = v405;
      if (v404 != v405)
      {
        v350 = *(uint64_t **)(MEMORY[0x24BEDB7F0] + 64);
        v352 = (uint64_t *)*MEMORY[0x24BEDB7F0];
        v348 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v346 = MEMORY[0x24BEDB848] + 16;
        while (1)
        {
          v122 = sub_22351526C(*(_QWORD *)(v5 + 8), (_QWORD *)((char *)v120 + 25));
          sub_223C05D34((uint64_t **)(*(_QWORD *)(v5 + 16) + 24), (unsigned __int8 *)v120 + 25, v122);
          sub_22351C1EC(&v392);
          if (**(int **)(v392 + 56) <= 3)
          {
            v123 = *(unsigned __int8 *)(v392 + 72);
            v124 = sub_22322F254(v392, "OSLogSurrogateAppender", 1, 0);
            v125 = v124;
            if (v123 || v124 != 0)
              break;
          }
LABEL_355:
          v210 = (_QWORD *)v120[1];
          if (v210)
          {
            do
            {
              v211 = v210;
              v210 = (_QWORD *)*v210;
            }
            while (v210);
          }
          else
          {
            do
            {
              v211 = (_QWORD *)v120[2];
              v21 = *v211 == (_QWORD)v120;
              v120 = v211;
            }
            while (!v21);
          }
          v120 = v211;
          if (v211 == v121)
            goto LABEL_372;
        }
        sub_223195210((uint64_t)v362);
        v127 = sub_2231813E8(&v363, (uint64_t)"VLM:GCRS Add to integrator map cid:", 35);
        sub_2245664AC((unsigned __int8 *)v120 + 25, v417);
        v128 = sub_2231813E8(v127, (uint64_t)v417, 36);
        sub_2231813E8(v128, (uint64_t)" bid:", 5);
        std::ostream::operator<<();
        if ((v372 & 0x10) != 0)
        {
          v131 = v371;
          v132 = (const void **)&v367;
          if (v371 < v368)
          {
            v371 = v368;
            v131 = v368;
            v132 = (const void **)&v367;
          }
        }
        else
        {
          if ((v372 & 8) == 0)
          {
            v129 = 0;
            HIBYTE(v391) = 0;
            v130 = (void **)&__dst;
            goto LABEL_236;
          }
          v131 = v366;
          v132 = (const void **)v365;
        }
        v133 = *v132;
        v129 = v131 - (_QWORD)*v132;
        if (v129 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v129 >= 0x17)
        {
          v134 = (v129 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v129 | 7) != 0x17)
            v134 = v129 | 7;
          v135 = v134 + 1;
          v130 = (void **)operator new(v134 + 1);
          v391 = v135 | 0x8000000000000000;
          __dst = v130;
          v390 = v129;
        }
        else
        {
          HIBYTE(v391) = v131 - *(_BYTE *)v132;
          v130 = (void **)&__dst;
          if (!v129)
          {
LABEL_236:
            v360 = v123;
            *((_BYTE *)v130 + v129) = 0;
            *(_QWORD *)&v381 = &v392;
            *((std::chrono::steady_clock::time_point *)&v381 + 1) = std::chrono::steady_clock::now();
            rep = std::chrono::system_clock::now().__d_.__rep_;
            v383 = 3;
            v384 = "unknown file";
            v385 = 146;
            v386 = "unknown function";
            v387 = 0;
            v388 = 0;
            if (v391 >= 0)
              v136 = (void **)&__dst;
            else
              v136 = __dst;
            v137 = *(_QWORD *)v381;
            v138 = (const char *)(*(_QWORD *)v381 + 16);
            v353 = v138;
            v355 = *(_QWORD *)v381;
            __sa = (char *)v136;
            if (*(char *)(*(_QWORD *)v381 + 39) < 0)
            {
              v138 = *(const char **)(v137 + 16);
              v139 = *(_QWORD *)(v137 + 24);
              v140 = v121;
              v142 = atomic_load((unsigned __int8 *)&qword_255788F58);
              if ((v142 & 1) != 0)
                goto LABEL_243;
            }
            else
            {
              v139 = *(unsigned __int8 *)(*(_QWORD *)v381 + 39);
              v140 = v121;
              v141 = atomic_load((unsigned __int8 *)&qword_255788F58);
              if ((v141 & 1) != 0)
                goto LABEL_243;
            }
            if (__cxa_guard_acquire(&qword_255788F58))
            {
              sub_224568628((uint64_t)v393);
              sub_223199C58("com.apple.cv3d", (unint64_t)v393, &xmmword_255788F40);
              if ((_BYTE)v395 && SHIBYTE(v394) < 0)
                operator delete(v393[0]);
              __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
              __cxa_guard_release(&qword_255788F58);
            }
LABEL_243:
            if (byte_255788F57 >= 0)
              v143 = (const char *)&xmmword_255788F40;
            else
              v143 = (const char *)xmmword_255788F40;
            if (byte_255788F57 >= 0)
              v144 = byte_255788F57;
            else
              v144 = *((_QWORD *)&xmmword_255788F40 + 1);
            *(_QWORD *)v417 = os_log_create(v143, v138);
            if (v144 > 0x7FFFFFFFFFFFFFF7)
              sub_22316DBC0();
            if (v144 >= 0x17)
            {
              v146 = (v144 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v144 | 7) != 0x17)
                v146 = v144 | 7;
              v147 = v146 + 1;
              v145 = operator new(v146 + 1);
              *(_QWORD *)&v417[16] = v144;
              *(_QWORD *)&v418 = v147 | 0x8000000000000000;
              *(_QWORD *)&v417[8] = v145;
            }
            else
            {
              BYTE7(v418) = v144;
              v145 = &v417[8];
              if (!v144)
              {
LABEL_257:
                v145[v144] = 0;
                BYTE8(v418) = 1;
                if (v139 > 0x7FFFFFFFFFFFFFF7)
                  sub_22316DBC0();
                v121 = v140;
                if (v139 >= 0x17)
                {
                  v152 = (v139 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v139 | 7) != 0x17)
                    v152 = v139 | 7;
                  v153 = v152 + 1;
                  v149 = __sa;
                  v148 = (char *)operator new(v152 + 1);
                  v420 = v139;
                  v421 = v153 | 0x8000000000000000;
                  v419 = v148;
                }
                else
                {
                  HIBYTE(v421) = v139;
                  v148 = (char *)&v419;
                  v149 = __sa;
                  if (!v139)
                  {
                    LOBYTE(v419) = 0;
                    v422 = 1;
                    v150 = *(NSObject **)v417;
                    if ((SHIBYTE(v421) & 0x80000000) == 0)
                      goto LABEL_261;
                    goto LABEL_267;
                  }
                }
                memmove(v148, v138, v139);
                v148[v139] = 0;
                v422 = 1;
                v150 = *(NSObject **)v417;
                if ((SHIBYTE(v421) & 0x80000000) == 0)
                {
LABEL_261:
                  v151 = v360;
                  if (!BYTE8(v418))
                    goto LABEL_270;
                  goto LABEL_268;
                }
LABEL_267:
                operator delete(v419);
                v151 = v360;
                if (!BYTE8(v418))
                  goto LABEL_270;
LABEL_268:
                if (SBYTE7(v418) < 0)
                  operator delete(*(void **)&v417[8]);
LABEL_270:
                if (*(_QWORD *)v417)
                  os_release(*(void **)v417);
                if (!v125 || !*(_QWORD *)(v125 + 24))
                {
                  os_log_type_enabled(v150, OS_LOG_TYPE_INFO);
                  *(_DWORD *)v417 = 136315138;
                  *(_QWORD *)&v417[4] = v149;
                  v160 = (void *)_os_log_send_and_compose_impl();
                  if (!v160)
                    goto LABEL_342;
                  free(v160);
                  if (!v151)
                    goto LABEL_346;
                  goto LABEL_343;
                }
                v154 = _os_log_pack_size();
                v155 = (std::__shared_weak_count_vtbl *)operator new(v154, (std::align_val_t)8uLL);
                v156 = (std::__shared_weak_count *)operator new();
                v156->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
                v156->__shared_owners_ = 0;
                v156->__shared_weak_owners_ = 0;
                v156[1].__vftable = v155;
                v393[0] = v155;
                v393[1] = v155;
                v394 = v156;
                v395 = 0;
                v396 = 0;
                v157 = strlen(v149);
                if (v157 > 0x7FFFFFFFFFFFFFF7)
                  sub_22316DBC0();
                v158 = v157;
                if (v157 >= 0x17)
                {
                  v161 = (v157 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v157 | 7) != 0x17)
                    v161 = v157 | 7;
                  v162 = v161 + 1;
                  v159 = operator new(v161 + 1);
                  *((_QWORD *)&v398 + 1) = v162 | 0x8000000000000000;
                  v397 = v159;
                  *(_QWORD *)&v398 = v158;
                }
                else
                {
                  HIBYTE(v398) = v157;
                  v159 = &v397;
                  if (!v157)
                  {
LABEL_285:
                    *((_BYTE *)v159 + v158) = 0;
                    v163 = v397;
                    v423[0] = v398;
                    *(_QWORD *)((char *)v423 + 7) = *(_QWORD *)((char *)&v398 + 7);
                    v164 = HIBYTE(v398);
                    v165 = operator new(0x38uLL);
                    v165[1] = 0;
                    v165[2] = 0;
                    v165[3] = off_24EC1FA48;
                    *v165 = &off_24EC1F9F8;
                    v166 = v423[0];
                    v165[4] = v163;
                    v165[5] = v166;
                    *(_QWORD *)((char *)v165 + 47) = *(_QWORD *)((char *)v423 + 7);
                    *((_BYTE *)v165 + 55) = v164;
                    v423[0] = 0;
                    *(_QWORD *)((char *)v423 + 7) = 0;
                    v167 = v396;
                    v395 = (char *)(v165 + 3);
                    v396 = (std::__shared_weak_count *)v165;
                    if (v167)
                    {
                      v168 = (unint64_t *)&v167->__shared_owners_;
                      do
                        v169 = __ldaxr(v168);
                      while (__stlxr(v169 - 1, v168));
                      if (!v169)
                      {
                        ((void (*)(std::__shared_weak_count *))v167->__on_zero_shared)(v167);
                        std::__shared_weak_count::__release_weak(v167);
                      }
                    }
                    *(_OWORD *)v417 = *(_OWORD *)v393;
                    v170 = v395;
                    *(_QWORD *)&v417[16] = v394;
                    if (v394)
                    {
                      v171 = (unint64_t *)&v394->__shared_owners_;
                      do
                        v172 = __ldxr(v171);
                      while (__stxr(v172 + 1, v171));
                    }
                    v173 = v396;
                    *(_QWORD *)&v418 = v170;
                    *((_QWORD *)&v418 + 1) = v396;
                    if (v396)
                    {
                      v174 = (unint64_t *)&v396->__shared_owners_;
                      do
                        v175 = __ldxr(v174);
                      while (__stxr(v175 + 1, v174));
                      v419 = v170;
                      do
                        v176 = __ldaxr(v174);
                      while (__stlxr(v176 - 1, v174));
                      if (!v176)
                      {
                        ((void (*)(std::__shared_weak_count *))v173->__on_zero_shared)(v173);
                        std::__shared_weak_count::__release_weak(v173);
                      }
                    }
                    else
                    {
                      v419 = v170;
                    }
                    v177 = v394;
                    if (v394)
                    {
                      v178 = (unint64_t *)&v394->__shared_owners_;
                      do
                        v179 = __ldaxr(v178);
                      while (__stlxr(v179 - 1, v178));
                      if (!v179)
                      {
                        ((void (*)(std::__shared_weak_count *))v177->__on_zero_shared)(v177);
                        std::__shared_weak_count::__release_weak(v177);
                      }
                    }
                    v180 = *(_QWORD *)v417;
                    if (v419[31] >= 0)
                      v181 = v419 + 8;
                    else
                      v181 = (char *)*((_QWORD *)v419 + 1);
                    v182 = _os_log_pack_fill();
                    *(_DWORD *)v182 = 136315138;
                    *(_QWORD *)(v182 + 4) = v181;
                    v183 = (char *)operator new();
                    v184 = *(unsigned __int8 *)(v355 + 39);
                    v185 = v353;
                    if ((v184 & 0x80u) != 0)
                    {
                      v185 = *(const char **)(v355 + 16);
                      v184 = *(_QWORD *)(v355 + 24);
                    }
                    *(_QWORD *)v183 = v180;
                    *(_OWORD *)(v183 + 8) = *(_OWORD *)&v417[8];
                    *(_QWORD *)&v417[8] = 0;
                    *(_QWORD *)&v417[16] = 0;
                    *(_OWORD *)(v183 + 24) = v418;
                    v418 = 0uLL;
                    *((_QWORD *)v183 + 5) = v185;
                    *((_QWORD *)v183 + 6) = v184;
                    v183[56] = 1;
                    v397 = 0;
                    v393[0] = v183;
                    (*(void (**)(_QWORD, void **))(**(_QWORD **)(v125 + 24) + 40))(*(_QWORD *)(v125 + 24), v393);
                    v151 = v360;
                    v186 = v393[0];
                    v393[0] = 0;
                    if (v186)
                    {
                      v187 = (std::__shared_weak_count *)*((_QWORD *)v186 + 4);
                      if (v187)
                      {
                        v188 = (unint64_t *)&v187->__shared_owners_;
                        do
                          v189 = __ldaxr(v188);
                        while (__stlxr(v189 - 1, v188));
                        if (!v189)
                        {
                          ((void (*)(std::__shared_weak_count *))v187->__on_zero_shared)(v187);
                          std::__shared_weak_count::__release_weak(v187);
                        }
                      }
                      v190 = (std::__shared_weak_count *)*((_QWORD *)v186 + 2);
                      if (v190)
                      {
                        v191 = (unint64_t *)&v190->__shared_owners_;
                        do
                          v192 = __ldaxr(v191);
                        while (__stlxr(v192 - 1, v191));
                        if (!v192)
                        {
                          ((void (*)(std::__shared_weak_count *))v190->__on_zero_shared)(v190);
                          std::__shared_weak_count::__release_weak(v190);
                        }
                      }
                      MEMORY[0x227684CE8](v186, 0x10F0C40B62ED6C6);
                      v193 = v397;
                      v397 = 0;
                      if (v193)
                      {
                        v194 = (std::__shared_weak_count *)v193[4];
                        if (v194)
                        {
                          v195 = (unint64_t *)&v194->__shared_owners_;
                          do
                            v196 = __ldaxr(v195);
                          while (__stlxr(v196 - 1, v195));
                          if (!v196)
                          {
                            ((void (*)(std::__shared_weak_count *))v194->__on_zero_shared)(v194);
                            std::__shared_weak_count::__release_weak(v194);
                          }
                        }
                        v197 = (std::__shared_weak_count *)v193[2];
                        if (v197)
                        {
                          v198 = (unint64_t *)&v197->__shared_owners_;
                          do
                            v199 = __ldaxr(v198);
                          while (__stlxr(v199 - 1, v198));
                          if (!v199)
                          {
                            ((void (*)(std::__shared_weak_count *))v197->__on_zero_shared)(v197);
                            std::__shared_weak_count::__release_weak(v197);
                          }
                        }
                        MEMORY[0x227684CE8](v193, 0x10F0C40B62ED6C6);
                      }
                    }
                    v200 = (std::__shared_weak_count *)*((_QWORD *)&v418 + 1);
                    if (!*((_QWORD *)&v418 + 1))
                      goto LABEL_338;
                    v201 = (unint64_t *)(*((_QWORD *)&v418 + 1) + 8);
                    do
                      v202 = __ldaxr(v201);
                    while (__stlxr(v202 - 1, v201));
                    if (!v202)
                    {
                      ((void (*)(std::__shared_weak_count *))v200->__on_zero_shared)(v200);
                      std::__shared_weak_count::__release_weak(v200);
                      v203 = *(std::__shared_weak_count **)&v417[16];
                      if (!*(_QWORD *)&v417[16])
                        goto LABEL_342;
                    }
                    else
                    {
LABEL_338:
                      v203 = *(std::__shared_weak_count **)&v417[16];
                      if (!*(_QWORD *)&v417[16])
                        goto LABEL_342;
                    }
                    v204 = (unint64_t *)&v203->__shared_owners_;
                    do
                      v205 = __ldaxr(v204);
                    while (__stlxr(v205 - 1, v204));
                    if (v205)
                    {
LABEL_342:
                      if (!v151)
                        goto LABEL_346;
                      goto LABEL_343;
                    }
                    ((void (*)(std::__shared_weak_count *))v203->__on_zero_shared)(v203);
                    std::__shared_weak_count::__release_weak(v203);
                    if (!v360)
                      goto LABEL_346;
LABEL_343:
                    v206 = (const char *)&__dst;
                    if (v391 < 0)
                      v206 = (const char *)__dst;
                    sub_22322C138((uint64_t)&v381, "%s", v206);
                    sub_223182C08((uint64_t)&v381);
LABEL_346:
                    sub_223182C08((uint64_t)&v381);
                    v207 = v388;
                    if (!v388)
                      goto LABEL_350;
                    v208 = (unint64_t *)&v388->__shared_owners_;
                    do
                      v209 = __ldaxr(v208);
                    while (__stlxr(v209 - 1, v208));
                    if (!v209)
                    {
                      ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
                      std::__shared_weak_count::__release_weak(v207);
                      if ((SHIBYTE(v391) & 0x80000000) == 0)
                        goto LABEL_352;
                    }
                    else
                    {
LABEL_350:
                      if ((SHIBYTE(v391) & 0x80000000) == 0)
                      {
LABEL_352:
                        v362[0] = v352;
                        *(uint64_t **)((char *)v362 + *(v352 - 3)) = v350;
                        v363 = v348;
                        v364 = v346;
                        if (v370 < 0)
                          operator delete(__p);
                        std::streambuf::~streambuf();
                        std::iostream::~basic_iostream();
                        MEMORY[0x227684BE0](v373);
                        goto LABEL_355;
                      }
                    }
                    operator delete(__dst);
                    goto LABEL_352;
                  }
                }
                memcpy(v159, v149, v158);
                goto LABEL_285;
              }
            }
            memmove(v145, v143, v144);
            goto LABEL_257;
          }
        }
        memmove(v130, v133, v129);
        goto LABEL_236;
      }
LABEL_372:
      sub_22366E2E4((_QWORD *)(*(_QWORD *)(v5 + 16) + 24));
    }
  }
  v212 = *(_QWORD *)(v5 + 24);
  v213 = (std::__shared_weak_count *)v358[1];
  v374 = *v358;
  v375 = v213;
  if (v213)
  {
    v214 = (unint64_t *)&v213->__shared_owners_;
    do
      v215 = __ldxr(v214);
    while (__stxr(v215 + 1, v214));
  }
  (*(void (**)(_BYTE *__return_ptr, uint64_t, char *, uint64_t *, uint64_t, _QWORD ***))(*(_QWORD *)v212 + 16))(v417, v212, &v411, &v374, v5 + 200, &v404);
  v216 = v375;
  if (!v375)
    goto LABEL_380;
  v217 = (unint64_t *)&v375->__shared_owners_;
  do
    v218 = __ldaxr(v217);
  while (__stlxr(v218 - 1, v217));
  if (!v218)
  {
    ((void (*)(std::__shared_weak_count *))v216->__on_zero_shared)(v216);
    std::__shared_weak_count::__release_weak(v216);
    v219 = *(_QWORD *)(v5 + 16);
    v220 = *(_QWORD *)(*(_QWORD *)(v5 + 8) + 16);
    v221 = *(_QWORD *)(v5 + 32);
    if (*(_BYTE *)(v221 + 560))
    {
LABEL_381:
      if (!*(_BYTE *)(v221 + 524))
        goto LABEL_390;
    }
  }
  else
  {
LABEL_380:
    v219 = *(_QWORD *)(v5 + 16);
    v220 = *(_QWORD *)(*(_QWORD *)(v5 + 8) + 16);
    v221 = *(_QWORD *)(v5 + 32);
    if (*(_BYTE *)(v221 + 560))
      goto LABEL_381;
  }
  if (v413 && v416[144] && v416[136] && v415)
  {
    v222 = v414;
    v223 = *(_QWORD *)(v5 + 184);
    if (!v223)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManager.cpp", 275, (uint64_t)"cluster_mapping_manager_ != nullptr", 35, (uint64_t)"Cluster mapping manager not initialized", 39, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_745;
      }
      v223 = *(_QWORD *)(v5 + 184);
    }
    sub_223BF6BC4(v223, (uint64_t)v416, v412, v222, v220 + 456, v219 + 24, *(_QWORD *)(v5 + 64));
  }
LABEL_390:
  v224 = *(_QWORD *)(v5 + 184);
  if (!v224)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManager.cpp", 320, (uint64_t)"cluster_mapping_manager_ != nullptr", 35, (uint64_t)"Cluster mapping manager not initialized", 39, (void (*)(void **))sub_22457406C))
    {
      v224 = *(_QWORD *)(v5 + 184);
      goto LABEL_393;
    }
LABEL_745:
    abort();
  }
LABEL_393:
  v225 = *(_QWORD *)(v5 + 24);
  sub_223C00D38(v224, (uint64_t)&v399);
  if (!v403)
    goto LABEL_409;
  v226 = *(_QWORD **)(v225 + 32);
  v227 = (_QWORD *)(v225 + 40);
  if (v226 == v227)
    goto LABEL_408;
  do
  {
    if (!v403)
      sub_22324A974();
    v228 = sub_22347AB40((uint64_t)&v399, (uint64_t)(v226 + 4));
    v229 = *((unsigned __int8 *)v226 + 2379);
    *((_WORD *)v226 + 1188) = v228;
    *((_BYTE *)v226 + 2378) = BYTE2(v228);
    if (v229)
    {
      v230 = (_QWORD *)v226[1];
      if (!v230)
        goto LABEL_404;
    }
    else
    {
      *((_BYTE *)v226 + 2379) = 1;
      v230 = (_QWORD *)v226[1];
      if (!v230)
      {
        do
        {
LABEL_404:
          v231 = (_QWORD *)v226[2];
          v21 = *v231 == (_QWORD)v226;
          v226 = v231;
        }
        while (!v21);
        goto LABEL_396;
      }
    }
    do
    {
      v231 = v230;
      v230 = (_QWORD *)*v230;
    }
    while (v230);
LABEL_396:
    v226 = v231;
  }
  while (v231 != v227);
  if (v403)
  {
LABEL_408:
    sub_223198030((uint64_t)v402, v402[1]);
    sub_223198030((uint64_t)v401, v401[1]);
    sub_223198030((uint64_t)&v399, v400);
  }
LABEL_409:
  sub_22351C2E0(v5, v417);
  v232 = &v381;
  v233 = *(uint64_t **)&v417[8];
  v381 = *(_OWORD *)v417;
  v234 = *(_QWORD *)&v417[16];
  *(_QWORD *)&v417[8] = 0;
  *(_QWORD *)&v417[16] = 0;
  rep = v234;
  if (v234)
    v232 = (__int128 *)(v233 + 2);
  *(_QWORD *)v232 = (char *)&v381 + 8;
  *(_QWORD *)v417 = &v417[8];
  v235 = *(_BYTE **)(v5 + 32);
  if (v235[560])
    v236 = v235[880] == 0;
  else
    v236 = 1;
  v237 = v236 || v235[976] == 0;
  if (!v237 && v235[497] && v235[272] && v235[524])
  {
    v238 = *(_QWORD *)(v5 + 16);
    v239 = *(uint64_t **)(v5 + 24);
    v240 = *(_QWORD **)(v238 + 48);
    v241 = (_QWORD *)(v238 + 56);
    if (v240 != (_QWORD *)(v238 + 56))
    {
      do
      {
        v242 = (unsigned __int8 **)(*(uint64_t (**)(uint64_t *, uint64_t))(*v239 + 32))(v239, (uint64_t)v240 + 28);
        sub_223C0D590(v242, (unsigned __int8 *)v240 + 28, (int *)v240 + 11);
        v243 = (_QWORD *)v240[1];
        if (v243)
        {
          do
          {
            v244 = v243;
            v243 = (_QWORD *)*v243;
          }
          while (v243);
        }
        else
        {
          do
          {
            v244 = (_QWORD *)v240[2];
            v21 = *v244 == (_QWORD)v240;
            v240 = v244;
          }
          while (!v21);
        }
        v240 = v244;
      }
      while (v244 != v241);
      v239 = *(uint64_t **)(v5 + 24);
    }
    sub_22366F024(v239);
    v233 = (uint64_t *)*((_QWORD *)&v381 + 1);
  }
  if (v233)
  {
    v245 = (uint64_t **)v233;
    while (1)
    {
      v247 = *((unsigned __int8 *)v245 + 32);
      v248 = v247 > 0x25;
      if (v247 != 37)
        goto LABEL_457;
      v249 = *((unsigned __int8 *)v245 + 33);
      v248 = v249 > 0xCC;
      if (v249 != 204)
        goto LABEL_457;
      v250 = *((unsigned __int8 *)v245 + 34);
      v248 = v250 > 0x7B;
      if (v250 != 123
        || (v251 = *((unsigned __int8 *)v245 + 35), v248 = v251 > 0xBD, v251 != 189)
        || (v252 = *((unsigned __int8 *)v245 + 36), v248 = v252 > 0x4E, v252 != 78)
        || (v253 = *((unsigned __int8 *)v245 + 37), v248 = v253 > 0x5B, v253 != 91))
      {
LABEL_457:
        if (v248)
          goto LABEL_439;
        goto LABEL_438;
      }
      v254 = *((unsigned __int8 *)v245 + 38);
      if (v254 != 143)
      {
        v255 = 143;
        goto LABEL_469;
      }
      v254 = *((unsigned __int8 *)v245 + 39);
      if (v254 != 12)
      {
        v255 = 12;
        goto LABEL_469;
      }
      v254 = *((unsigned __int8 *)v245 + 40);
      if (v254 != 236)
      {
        v255 = 236;
        goto LABEL_469;
      }
      v254 = *((unsigned __int8 *)v245 + 41);
      if (v254 != 50)
      {
        v255 = 50;
        goto LABEL_469;
      }
      v254 = *((unsigned __int8 *)v245 + 42);
      if (v254 != 162)
      {
        v255 = 162;
        goto LABEL_469;
      }
      v254 = *((unsigned __int8 *)v245 + 43);
      if (v254 != 209)
      {
        v255 = 209;
        goto LABEL_469;
      }
      v254 = *((unsigned __int8 *)v245 + 44);
      if (v254 != 99)
      {
        v255 = 99;
        goto LABEL_469;
      }
      v254 = *((unsigned __int8 *)v245 + 45);
      if (v254 != 215)
        break;
      v254 = *((unsigned __int8 *)v245 + 46);
      if (v254 != 6)
      {
        v255 = 6;
LABEL_469:
        if (v255 < v254)
          goto LABEL_439;
        goto LABEL_470;
      }
      v254 = *((unsigned __int8 *)v245 + 47);
      if (v254 != 182)
      {
        v255 = 182;
        goto LABEL_469;
      }
LABEL_470:
      v256 = *((unsigned __int8 *)v245 + 38);
      if (v256 == 143)
      {
        v256 = *((unsigned __int8 *)v245 + 39);
        if (v256 == 12)
        {
          v256 = *((unsigned __int8 *)v245 + 40);
          if (v256 == 236)
          {
            v256 = *((unsigned __int8 *)v245 + 41);
            if (v256 == 50)
            {
              v256 = *((unsigned __int8 *)v245 + 42);
              if (v256 == 162)
              {
                v256 = *((unsigned __int8 *)v245 + 43);
                if (v256 == 209)
                {
                  v256 = *((unsigned __int8 *)v245 + 44);
                  if (v256 == 99)
                  {
                    v256 = *((unsigned __int8 *)v245 + 45);
                    if (v256 == 215)
                    {
                      v256 = *((unsigned __int8 *)v245 + 46);
                      if (v256 == 6)
                      {
                        v256 = *((unsigned __int8 *)v245 + 47);
                        if (v256 == 182)
                          goto LABEL_491;
                        v246 = 182;
                      }
                      else
                      {
                        v246 = 6;
                      }
                    }
                    else
                    {
                      v246 = 215;
                    }
                  }
                  else
                  {
                    v246 = 99;
                  }
                }
                else
                {
                  v246 = 209;
                }
              }
              else
              {
                v246 = 162;
              }
            }
            else
            {
              v246 = 50;
            }
          }
          else
          {
            v246 = 236;
          }
        }
        else
        {
          v246 = 12;
        }
      }
      else
      {
        v246 = 143;
      }
      if (v256 >= v246)
        goto LABEL_491;
LABEL_438:
      ++v245;
LABEL_439:
      v245 = (uint64_t **)*v245;
      if (!v245)
        goto LABEL_489;
    }
    v255 = 215;
    goto LABEL_469;
  }
LABEL_489:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManager.cpp", 46, (uint64_t)"cluster_result_map.count(GlobalClusterId())", 43, (uint64_t)"Global cluster does not exist", 29, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v233 = (uint64_t *)*((_QWORD *)&v381 + 1);
LABEL_491:
  if (!v233)
LABEL_734:
    sub_223198218("map::at:  key not found");
  while (2)
  {
    while (2)
    {
      v257 = *((unsigned __int8 *)v233 + 32);
      if (v257 != 37)
      {
        if (v257 >= 0x26)
          goto LABEL_493;
        goto LABEL_514;
      }
      v258 = *((unsigned __int8 *)v233 + 33);
      v259 = v258 > 0xCC;
      if (v258 != 204)
        goto LABEL_513;
      v260 = *((unsigned __int8 *)v233 + 34);
      v259 = v260 > 0x7B;
      if (v260 != 123
        || (v261 = *((unsigned __int8 *)v233 + 35), v259 = v261 > 0xBD, v261 != 189)
        || (v262 = *((unsigned __int8 *)v233 + 36), v259 = v262 > 0x4E, v262 != 78)
        || (v263 = *((unsigned __int8 *)v233 + 37), v259 = v263 > 0x5B, v263 != 91))
      {
LABEL_513:
        if (v259)
          goto LABEL_493;
        goto LABEL_514;
      }
      v264 = *((unsigned __int8 *)v233 + 38);
      if (v264 == 143)
      {
        v265 = *((unsigned __int8 *)v233 + 39);
        if (v265 == 12)
        {
          v266 = *((unsigned __int8 *)v233 + 40);
          if (v266 == 236)
          {
            v267 = *((unsigned __int8 *)v233 + 41);
            if (v267 == 50)
            {
              v268 = *((unsigned __int8 *)v233 + 42);
              if (v268 == 162)
              {
                v269 = *((unsigned __int8 *)v233 + 43);
                if (v269 == 209)
                {
                  v270 = *((unsigned __int8 *)v233 + 44);
                  if (v270 == 99)
                  {
                    v271 = *((unsigned __int8 *)v233 + 45);
                    if (v271 == 215)
                    {
                      v272 = *((unsigned __int8 *)v233 + 46);
                      if (v272 == 6)
                      {
                        if (*((unsigned __int8 *)v233 + 47) > 0xB6u)
                          goto LABEL_493;
                      }
                      else if (v272 > 6)
                      {
LABEL_493:
                        v233 = (uint64_t *)*v233;
                        if (!v233)
                          goto LABEL_734;
                        continue;
                      }
                    }
                    else if (v271 > 0xD7)
                    {
                      goto LABEL_493;
                    }
                  }
                  else if (v270 > 0x63)
                  {
                    goto LABEL_493;
                  }
                }
                else if (v269 > 0xD1)
                {
                  goto LABEL_493;
                }
              }
              else if (v268 > 0xA2)
              {
                goto LABEL_493;
              }
            }
            else if (v267 > 0x32)
            {
              goto LABEL_493;
            }
          }
          else if (v266 > 0xEC)
          {
            goto LABEL_493;
          }
        }
        else if (v265 > 0xC)
        {
          goto LABEL_493;
        }
      }
      else if (v264 > 0x8F)
      {
        goto LABEL_493;
      }
      break;
    }
    v273 = *((unsigned __int8 *)v233 + 38);
    if (v273 != 143)
    {
      if (v273 >= 0x8F)
        break;
      goto LABEL_514;
    }
    v274 = *((unsigned __int8 *)v233 + 39);
    if (v274 != 12)
    {
      if (v274 >= 0xC)
        break;
      goto LABEL_514;
    }
    v275 = *((unsigned __int8 *)v233 + 40);
    if (v275 != 236)
    {
      if (v275 >= 0xEC)
        break;
      goto LABEL_514;
    }
    v276 = *((unsigned __int8 *)v233 + 41);
    if (v276 != 50)
    {
      if (v276 >= 0x32)
        break;
      goto LABEL_514;
    }
    v277 = *((unsigned __int8 *)v233 + 42);
    if (v277 != 162)
    {
      if (v277 >= 0xA2)
        break;
      goto LABEL_514;
    }
    v278 = *((unsigned __int8 *)v233 + 43);
    if (v278 != 209)
    {
      if (v278 >= 0xD1)
        break;
      goto LABEL_514;
    }
    v279 = *((unsigned __int8 *)v233 + 44);
    if (v279 != 99)
    {
      if (v279 >= 0x63)
        break;
      goto LABEL_514;
    }
    v280 = *((unsigned __int8 *)v233 + 45);
    if (v280 != 215)
    {
      if (v280 >= 0xD7)
        break;
      goto LABEL_514;
    }
    v281 = *((unsigned __int8 *)v233 + 46);
    if (v281 == 6)
    {
      if (*((unsigned __int8 *)v233 + 47) >= 0xB6u)
        break;
      goto LABEL_514;
    }
    if (v281 < 6)
    {
LABEL_514:
      v233 = (uint64_t *)v233[1];
      if (!v233)
        goto LABEL_734;
      continue;
    }
    break;
  }
  sub_223480CB4((uint64_t)v362, v233[6] + 168);
  v282 = (uint64_t **)*((_QWORD *)&v381 + 1);
  if (*((_QWORD *)&v381 + 1))
  {
    v283 = (uint64_t **)*((_QWORD *)&v381 + 1);
    while (1)
    {
      v285 = *((unsigned __int8 *)v283 + 32);
      v286 = v285 > 0x25;
      if (v285 != 37)
        goto LABEL_584;
      v287 = *((unsigned __int8 *)v283 + 33);
      v286 = v287 > 0xCC;
      if (v287 != 204)
        goto LABEL_584;
      v288 = *((unsigned __int8 *)v283 + 34);
      v286 = v288 > 0x7B;
      if (v288 != 123
        || (v289 = *((unsigned __int8 *)v283 + 35), v286 = v289 > 0xBD, v289 != 189)
        || (v290 = *((unsigned __int8 *)v283 + 36), v286 = v290 > 0x4E, v290 != 78)
        || (v291 = *((unsigned __int8 *)v283 + 37), v286 = v291 > 0x5B, v291 != 91))
      {
LABEL_584:
        if (v286)
          goto LABEL_566;
        goto LABEL_565;
      }
      v292 = *((unsigned __int8 *)v283 + 38);
      if (v292 != 143)
      {
        v293 = 143;
        goto LABEL_596;
      }
      v292 = *((unsigned __int8 *)v283 + 39);
      if (v292 != 12)
      {
        v293 = 12;
        goto LABEL_596;
      }
      v292 = *((unsigned __int8 *)v283 + 40);
      if (v292 != 236)
      {
        v293 = 236;
        goto LABEL_596;
      }
      v292 = *((unsigned __int8 *)v283 + 41);
      if (v292 != 50)
      {
        v293 = 50;
        goto LABEL_596;
      }
      v292 = *((unsigned __int8 *)v283 + 42);
      if (v292 != 162)
      {
        v293 = 162;
        goto LABEL_596;
      }
      v292 = *((unsigned __int8 *)v283 + 43);
      if (v292 != 209)
      {
        v293 = 209;
        goto LABEL_596;
      }
      v292 = *((unsigned __int8 *)v283 + 44);
      if (v292 != 99)
      {
        v293 = 99;
        goto LABEL_596;
      }
      v292 = *((unsigned __int8 *)v283 + 45);
      if (v292 != 215)
        break;
      v292 = *((unsigned __int8 *)v283 + 46);
      if (v292 != 6)
      {
        v293 = 6;
LABEL_596:
        if (v293 < v292)
          goto LABEL_566;
        goto LABEL_597;
      }
      v292 = *((unsigned __int8 *)v283 + 47);
      if (v292 != 182)
      {
        v293 = 182;
        goto LABEL_596;
      }
LABEL_597:
      v294 = *((unsigned __int8 *)v283 + 38);
      if (v294 == 143)
      {
        v294 = *((unsigned __int8 *)v283 + 39);
        if (v294 == 12)
        {
          v294 = *((unsigned __int8 *)v283 + 40);
          if (v294 == 236)
          {
            v294 = *((unsigned __int8 *)v283 + 41);
            if (v294 == 50)
            {
              v294 = *((unsigned __int8 *)v283 + 42);
              if (v294 == 162)
              {
                v294 = *((unsigned __int8 *)v283 + 43);
                if (v294 == 209)
                {
                  v294 = *((unsigned __int8 *)v283 + 44);
                  if (v294 == 99)
                  {
                    v294 = *((unsigned __int8 *)v283 + 45);
                    if (v294 == 215)
                    {
                      v294 = *((unsigned __int8 *)v283 + 46);
                      if (v294 == 6)
                      {
                        v294 = *((unsigned __int8 *)v283 + 47);
                        if (v294 == 182)
                          goto LABEL_618;
                        v284 = 182;
                      }
                      else
                      {
                        v284 = 6;
                      }
                    }
                    else
                    {
                      v284 = 215;
                    }
                  }
                  else
                  {
                    v284 = 99;
                  }
                }
                else
                {
                  v284 = 209;
                }
              }
              else
              {
                v284 = 162;
              }
            }
            else
            {
              v284 = 50;
            }
          }
          else
          {
            v284 = 236;
          }
        }
        else
        {
          v284 = 12;
        }
      }
      else
      {
        v284 = 143;
      }
      if (v294 >= v284)
        goto LABEL_618;
LABEL_565:
      ++v283;
LABEL_566:
      v283 = (uint64_t **)*v283;
      if (!v283)
        goto LABEL_616;
    }
    v293 = 215;
    goto LABEL_596;
  }
LABEL_616:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManager.cpp", 51, (uint64_t)"cluster_result_map.count(GlobalClusterId())", 43, (uint64_t)"Global cluster does not exist", 29, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v282 = (uint64_t **)*((_QWORD *)&v381 + 1);
LABEL_618:
  if (!v282)
LABEL_619:
    sub_223198218("map::at:  key not found");
  while (2)
  {
    while (2)
    {
      v295 = *((unsigned __int8 *)v282 + 32);
      if (v295 != 37)
      {
        if (v295 >= 0x26)
          goto LABEL_620;
        goto LABEL_641;
      }
      v296 = *((unsigned __int8 *)v282 + 33);
      v297 = v296 > 0xCC;
      if (v296 != 204)
        goto LABEL_640;
      v298 = *((unsigned __int8 *)v282 + 34);
      v297 = v298 > 0x7B;
      if (v298 != 123
        || (v299 = *((unsigned __int8 *)v282 + 35), v297 = v299 > 0xBD, v299 != 189)
        || (v300 = *((unsigned __int8 *)v282 + 36), v297 = v300 > 0x4E, v300 != 78)
        || (v301 = *((unsigned __int8 *)v282 + 37), v297 = v301 > 0x5B, v301 != 91))
      {
LABEL_640:
        if (v297)
          goto LABEL_620;
        goto LABEL_641;
      }
      v302 = *((unsigned __int8 *)v282 + 38);
      if (v302 == 143)
      {
        v303 = *((unsigned __int8 *)v282 + 39);
        if (v303 == 12)
        {
          v304 = *((unsigned __int8 *)v282 + 40);
          if (v304 == 236)
          {
            v305 = *((unsigned __int8 *)v282 + 41);
            if (v305 == 50)
            {
              v306 = *((unsigned __int8 *)v282 + 42);
              if (v306 == 162)
              {
                v307 = *((unsigned __int8 *)v282 + 43);
                if (v307 == 209)
                {
                  v308 = *((unsigned __int8 *)v282 + 44);
                  if (v308 == 99)
                  {
                    v309 = *((unsigned __int8 *)v282 + 45);
                    if (v309 == 215)
                    {
                      v310 = *((unsigned __int8 *)v282 + 46);
                      if (v310 == 6)
                      {
                        if (*((unsigned __int8 *)v282 + 47) > 0xB6u)
                          goto LABEL_620;
                      }
                      else if (v310 > 6)
                      {
LABEL_620:
                        v282 = (uint64_t **)*v282;
                        if (!v282)
                          goto LABEL_619;
                        continue;
                      }
                    }
                    else if (v309 > 0xD7)
                    {
                      goto LABEL_620;
                    }
                  }
                  else if (v308 > 0x63)
                  {
                    goto LABEL_620;
                  }
                }
                else if (v307 > 0xD1)
                {
                  goto LABEL_620;
                }
              }
              else if (v306 > 0xA2)
              {
                goto LABEL_620;
              }
            }
            else if (v305 > 0x32)
            {
              goto LABEL_620;
            }
          }
          else if (v304 > 0xEC)
          {
            goto LABEL_620;
          }
        }
        else if (v303 > 0xC)
        {
          goto LABEL_620;
        }
      }
      else if (v302 > 0x8F)
      {
        goto LABEL_620;
      }
      break;
    }
    v311 = *((unsigned __int8 *)v282 + 38);
    if (v311 != 143)
    {
      if (v311 >= 0x8F)
        break;
      goto LABEL_641;
    }
    v312 = *((unsigned __int8 *)v282 + 39);
    if (v312 != 12)
    {
      if (v312 >= 0xC)
        break;
      goto LABEL_641;
    }
    v313 = *((unsigned __int8 *)v282 + 40);
    if (v313 != 236)
    {
      if (v313 >= 0xEC)
        break;
      goto LABEL_641;
    }
    v314 = *((unsigned __int8 *)v282 + 41);
    if (v314 != 50)
    {
      if (v314 >= 0x32)
        break;
      goto LABEL_641;
    }
    v315 = *((unsigned __int8 *)v282 + 42);
    if (v315 != 162)
    {
      if (v315 >= 0xA2)
        break;
      goto LABEL_641;
    }
    v316 = *((unsigned __int8 *)v282 + 43);
    if (v316 != 209)
    {
      if (v316 >= 0xD1)
        break;
      goto LABEL_641;
    }
    v317 = *((unsigned __int8 *)v282 + 44);
    if (v317 != 99)
    {
      if (v317 >= 0x63)
        break;
      goto LABEL_641;
    }
    v318 = *((unsigned __int8 *)v282 + 45);
    if (v318 != 215)
    {
      if (v318 >= 0xD7)
        break;
      goto LABEL_641;
    }
    v319 = *((unsigned __int8 *)v282 + 46);
    if (v319 == 6)
    {
      if (*((unsigned __int8 *)v282 + 47) >= 0xB6u)
        break;
      goto LABEL_641;
    }
    if (v319 < 6)
    {
LABEL_641:
      v282 = (uint64_t **)v282[1];
      if (!v282)
        goto LABEL_619;
      continue;
    }
    break;
  }
  v320 = v282[6];
  *(_WORD *)v361 = *(_WORD *)v320;
  v321 = *(_OWORD *)((char *)v320 + 4);
  v322 = *(_OWORD *)((char *)v320 + 20);
  v323 = *(_OWORD *)((char *)v320 + 36);
  *(_OWORD *)(v361 + 52) = *(_OWORD *)((char *)v320 + 52);
  *(_OWORD *)(v361 + 36) = v323;
  *(_OWORD *)(v361 + 20) = v322;
  *(_OWORD *)(v361 + 4) = v321;
  sub_22347F1D8((_QWORD *)(v361 + 72), v320 + 9);
  *(_QWORD *)(v361 + 128) = 0;
  v324 = (uint64_t **)(v361 + 128);
  *(_QWORD *)(v361 + 120) = v361 + 128;
  v325 = (uint64_t ***)(v361 + 120);
  *(_QWORD *)(v361 + 136) = 0;
  v326 = (uint64_t *)v320[15];
  if (v326 != v320 + 16)
  {
    do
    {
      v328 = (unsigned __int8 *)v326 + 28;
      v329 = *v324;
      if (*v325 == v324)
      {
        v331 = (uint64_t *)(v361 + 128);
      }
      else
      {
        v330 = (uint64_t *)(v361 + 128);
        if (v329)
        {
          do
          {
            v331 = v329;
            v329 = (uint64_t *)v329[1];
          }
          while (v329);
        }
        else
        {
          do
          {
            v331 = (uint64_t *)v330[2];
            v21 = *v331 == (_QWORD)v330;
            v330 = v331;
          }
          while (v21);
        }
        v332 = sub_22319835C((unsigned __int8 *)v331 + 28, (unsigned __int8 *)v326 + 28);
        v329 = *v324;
        if ((v332 & 0x80000000) == 0)
        {
          v333 = (char **)(v361 + 128);
          v334 = (char **)(v361 + 128);
          if (!v329)
            goto LABEL_726;
          v333 = (char **)(v361 + 128);
          while (1)
          {
            while (1)
            {
              v334 = (char **)v329;
              v335 = (unsigned __int8 *)v329 + 28;
              v336 = *((unsigned __int8 *)v329 + 28);
              v337 = *v328;
              if (v337 == v336)
              {
                v337 = *((unsigned __int8 *)v326 + 29);
                v336 = *((unsigned __int8 *)v334 + 29);
                if (v337 == v336)
                {
                  v337 = *((unsigned __int8 *)v326 + 30);
                  v336 = *((unsigned __int8 *)v334 + 30);
                  if (v337 == v336)
                  {
                    v337 = *((unsigned __int8 *)v326 + 31);
                    v336 = *((unsigned __int8 *)v334 + 31);
                    if (v337 == v336)
                    {
                      v337 = *((unsigned __int8 *)v326 + 32);
                      v336 = *((unsigned __int8 *)v334 + 32);
                      if (v337 == v336)
                      {
                        v337 = *((unsigned __int8 *)v326 + 33);
                        v336 = *((unsigned __int8 *)v334 + 33);
                        if (v337 == v336)
                        {
                          v337 = *((unsigned __int8 *)v326 + 34);
                          v336 = *((unsigned __int8 *)v334 + 34);
                          if (v337 == v336)
                          {
                            v337 = *((unsigned __int8 *)v326 + 35);
                            v336 = *((unsigned __int8 *)v334 + 35);
                            if (v337 == v336)
                            {
                              v337 = *((unsigned __int8 *)v326 + 36);
                              v336 = *((unsigned __int8 *)v334 + 36);
                              if (v337 == v336)
                              {
                                v337 = *((unsigned __int8 *)v326 + 37);
                                v336 = *((unsigned __int8 *)v334 + 37);
                                if (v337 == v336)
                                {
                                  v337 = *((unsigned __int8 *)v326 + 38);
                                  v336 = *((unsigned __int8 *)v334 + 38);
                                  if (v337 == v336)
                                  {
                                    v337 = *((unsigned __int8 *)v326 + 39);
                                    v336 = *((unsigned __int8 *)v334 + 39);
                                    if (v337 == v336)
                                    {
                                      v337 = *((unsigned __int8 *)v326 + 40);
                                      v336 = *((unsigned __int8 *)v334 + 40);
                                      if (v337 == v336)
                                      {
                                        v337 = *((unsigned __int8 *)v326 + 41);
                                        v336 = *((unsigned __int8 *)v334 + 41);
                                        if (v337 == v336)
                                        {
                                          v337 = *((unsigned __int8 *)v326 + 42);
                                          v336 = *((unsigned __int8 *)v334 + 42);
                                          if (v337 == v336)
                                          {
                                            v337 = *((unsigned __int8 *)v326 + 43);
                                            v336 = *((unsigned __int8 *)v334 + 43);
                                            if (v337 == v336)
                                              break;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              if (v337 >= v336)
                break;
              v329 = (uint64_t *)*v334;
              v333 = v334;
              if (!*v334)
                goto LABEL_726;
            }
            if (((char)sub_22319835C(v335, (unsigned __int8 *)v326 + 28) & 0x80000000) == 0)
              goto LABEL_723;
            v333 = v334 + 1;
            v329 = (uint64_t *)v334[1];
            if (!v329)
              goto LABEL_726;
          }
        }
      }
      v333 = (char **)(v361 + 128);
      v334 = (char **)(v361 + 128);
      if (!v329)
        goto LABEL_726;
      v333 = (char **)(v331 + 1);
      v334 = (char **)v331;
LABEL_723:
      if (*v333)
      {
        v338 = (uint64_t *)v326[1];
        if (!v338)
          goto LABEL_731;
        goto LABEL_729;
      }
LABEL_726:
      v339 = (char *)operator new(0x70uLL);
      *(_OWORD *)(v339 + 28) = *(_OWORD *)v328;
      v340 = *(_OWORD *)((char *)v326 + 44);
      v341 = *(_OWORD *)((char *)v326 + 60);
      v342 = *(_OWORD *)((char *)v326 + 76);
      *(_OWORD *)(v339 + 92) = *(_OWORD *)((char *)v326 + 92);
      *(_OWORD *)(v339 + 76) = v342;
      *(_OWORD *)(v339 + 60) = v341;
      *(_OWORD *)(v339 + 44) = v340;
      *(_QWORD *)v339 = 0;
      *((_QWORD *)v339 + 1) = 0;
      *((_QWORD *)v339 + 2) = v334;
      *v333 = v339;
      v343 = **v325;
      if (v343)
      {
        *v325 = (uint64_t **)v343;
        v339 = *v333;
      }
      sub_2231A9A8C(*(uint64_t **)(v361 + 128), (uint64_t *)v339);
      ++*(_QWORD *)(v361 + 136);
      v338 = (uint64_t *)v326[1];
      if (!v338)
      {
        do
        {
LABEL_731:
          v344 = (uint64_t *)v326[2];
          v21 = *v344 == (_QWORD)v326;
          v326 = v344;
        }
        while (!v21);
        goto LABEL_690;
      }
      do
      {
LABEL_729:
        v344 = v338;
        v338 = (uint64_t *)*v338;
      }
      while (v338);
LABEL_690:
      v326 = v344;
    }
    while (v344 != v320 + 16);
  }
  *(_QWORD *)(v361 + 152) = 0;
  *(_QWORD *)(v361 + 144) = v361 + 152;
  *(_QWORD *)(v361 + 160) = 0;
  sub_223475C18((_QWORD *)(v361 + 144), (unsigned __int8 *)v320[18], (unsigned __int8 *)v320 + 152);
  sub_223480CB4(v361 + 168, (uint64_t)(v320 + 21));
  *(_DWORD *)(v361 + 2328) = *((_DWORD *)v320 + 582);
  sub_223480A2C((char **)v362);
  sub_223198030((uint64_t)&v381, *((_QWORD **)&v381 + 1));
  sub_223198030((uint64_t)v417, *(_QWORD **)&v417[8]);
  sub_223198030((uint64_t)v410, v410[1]);
  sub_223475E64((uint64_t)v409, v409[1]);
  sub_223475E64((uint64_t)v408, v408[1]);
  sub_223198030((uint64_t)&v406, v407[0]);
  sub_223198030((uint64_t)&v404, v405[0]);
  sub_2235141E0((uint64_t)&v411);
  return kdebug_trace();
}

void sub_22351FBC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (LOBYTE(STACK[0x9F8]) && SLOBYTE(STACK[0x9F7]) < 0)
    operator delete((void *)STACK[0x9E0]);
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&STACK[0x978]);
  if (SLOBYTE(STACK[0x9D7]) < 0)
    operator delete((void *)STACK[0x9C0]);
  sub_223195348((uint64_t)&a35);
  sub_2234759A4((_QWORD **)&STACK[0xA90]);
  sub_2235141E0((uint64_t)&STACK[0xB20]);
  sub_2231874DC((uint64_t)&STACK[0x950]);
  _Unwind_Resume(a1);
}

uint64_t sub_22351FEC4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 96))
  {
    sub_223198030(a1 + 48, *(_QWORD **)(a1 + 56));
    sub_223198030(a1 + 24, *(_QWORD **)(a1 + 32));
    sub_223198030(a1, *(_QWORD **)(a1 + 8));
  }
  return a1;
}

void sub_22351FF10(uint64_t *a1, uint64_t a2)
{
  _BYTE *v3;
  BOOL v4;
  BOOL v5;
  BOOL v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int v17;
  _DWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  _DWORD *v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t *v27;
  _QWORD *v28[2];
  uint64_t *v29;

  v3 = *(_BYTE **)(a2 + 32);
  if (v3[560])
    v4 = v3[880] == 0;
  else
    v4 = 1;
  v5 = v4 || v3[976] == 0;
  if (v5 || (v3[497] ? (v6 = v3[272] == 0) : (v6 = 1), v6 || !v3[524]))
  {
    a1[2] = 0;
    a1[1] = 0;
    *a1 = (uint64_t)(a1 + 1);
    v22 = sub_223525C14(a1, a1 + 1, &v27, &v29, 0);
    if (!*v22)
    {
      v23 = v22;
      v24 = operator new(0x30uLL);
      v24[7] = 0;
      *((_OWORD *)v24 + 2) = xmmword_2245F6D10;
      v25 = v27;
      *(_QWORD *)v24 = 0;
      *((_QWORD *)v24 + 1) = 0;
      *((_QWORD *)v24 + 2) = v25;
      *v23 = (uint64_t)v24;
      v26 = *(_QWORD **)*a1;
      if (v26)
      {
        *a1 = (uint64_t)v26;
        v24 = (_DWORD *)*v23;
      }
      sub_2231A9A8C((uint64_t *)a1[1], (uint64_t *)v24);
      ++a1[2];
    }
  }
  else
  {
    sub_22347F028(*(uint64_t **)(a2 + 24), (uint64_t)&v27);
    a1[1] = 0;
    v8 = a1 + 1;
    v9 = *(_QWORD *)(a2 + 16);
    a1[2] = 0;
    *a1 = (uint64_t)(a1 + 1);
    v10 = v27;
    if (v27 != (uint64_t *)v28)
    {
      v11 = v9 + 24;
      do
      {
        v12 = sub_223C05798(v11, (unsigned __int8 *)v10 + 25);
        v13 = v12;
        v14 = *v8;
        v15 = a1 + 1;
        v16 = a1 + 1;
        if (*v8)
        {
          while (1)
          {
            while (1)
            {
              v16 = (_QWORD *)v14;
              v17 = *(_DWORD *)(v14 + 28);
              if (v12 >= v17)
                break;
              v14 = *v16;
              v15 = v16;
              if (!*v16)
                goto LABEL_23;
            }
            if (v17 >= v12)
              break;
            v14 = v16[1];
            if (!v14)
            {
              v15 = v16 + 1;
              goto LABEL_23;
            }
          }
        }
        else
        {
LABEL_23:
          v18 = operator new(0x30uLL);
          v18[7] = v13;
          *((_OWORD *)v18 + 2) = *(_OWORD *)((char *)v10 + 25);
          *(_QWORD *)v18 = 0;
          *((_QWORD *)v18 + 1) = 0;
          *((_QWORD *)v18 + 2) = v16;
          *v15 = v18;
          v19 = *(_QWORD **)*a1;
          if (v19)
          {
            *a1 = (uint64_t)v19;
            v18 = (_DWORD *)*v15;
          }
          sub_2231A9A8C((uint64_t *)a1[1], (uint64_t *)v18);
          ++a1[2];
        }
        v20 = (uint64_t *)v10[1];
        if (v20)
        {
          do
          {
            v21 = v20;
            v20 = (uint64_t *)*v20;
          }
          while (v20);
        }
        else
        {
          do
          {
            v21 = (uint64_t *)v10[2];
            v4 = *v21 == (_QWORD)v10;
            v10 = v21;
          }
          while (!v4);
        }
        v10 = v21;
      }
      while (v21 != (uint64_t *)v28);
    }
    sub_223198030((uint64_t)&v27, v28[0]);
  }
}

void sub_223520144(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223198030(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_22352015C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v10;

  sub_223198030(v10, *(_QWORD **)(v10 + 8));
  sub_223198030((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_223520180(uint64_t a1)
{
  _QWORD **v2;
  uint64_t v3;
  int8x16_t v4;
  int32x4_t v5;
  int32x4_t v6;
  float32x2_t v7;
  float32x4_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  uint64_t *v17;
  _BOOL4 v18;
  _QWORD *v19;
  _BYTE *v20;
  BOOL v21;
  BOOL v23;
  float32x2_t *v24;
  float32x4_t v25;
  int8x16_t v26;
  int8x16_t v27;
  float32x4_t v28;
  int32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *p_shared_owners;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD **v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  _OWORD v46[4];
  _QWORD **v47;
  _QWORD *v48;

  kdebug_trace();
  sub_22351FF10((uint64_t *)&v47, a1);
  if (!*(_QWORD *)(a1 + 184)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManager.cpp", 358, (uint64_t)"cluster_mapping_manager_ != nullptr", 35, (uint64_t)"Cluster mapping manager not initialized", 39, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v2 = v47;
  if (v47 != &v48)
  {
    do
    {
      v3 = (*(uint64_t (**)(_QWORD, _QWORD **))(**(_QWORD **)(a1 + 24) + 32))(*(_QWORD *)(a1 + 24), v2 + 4);
      v9 = *(_QWORD *)(a1 + 8);
      v12 = *(_QWORD *)(v9 + 64);
      v11 = v9 + 64;
      v10 = v12;
      if (!v12)
        goto LABEL_16;
      v13 = *((_DWORD *)v2 + 7);
      v14 = v11;
      do
      {
        v15 = *(_DWORD *)(v10 + 32);
        v16 = v15 < v13;
        if (v15 >= v13)
          v17 = (uint64_t *)v10;
        else
          v17 = (uint64_t *)(v10 + 8);
        if (!v16)
          v14 = v10;
        v10 = *v17;
      }
      while (*v17);
      if (v14 == v11 || *(_DWORD *)(v14 + 32) > v13)
      {
LABEL_16:
        v18 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 132, (uint64_t)"iter != vol_bundle_store.end()", 30, (uint64_t)"Bundle not found.", 17, (void (*)(void **))sub_22457406C);
        v14 = v11;
        if (v18)
          abort();
      }
      v19 = *(_QWORD **)(v14 + 40);
      v20 = *(_BYTE **)(a1 + 32);
      if (v20[560])
        v21 = v20[880] == 0;
      else
        v21 = 1;
      if (!v21 && v20[976] != 0)
      {
        v23 = !v20[497] || v20[272] == 0;
        if (!v23 && v20[524])
        {
          v24 = *(float32x2_t **)(*v19 + 120);
          *(float32x2_t *)v5.i8 = v24[1];
          v5.i32[2] = v24[2].i32[0];
          *(float32x2_t *)v6.i8 = v24[3];
          v6.i32[2] = v24[4].i32[0];
          v7.i32[0] = v24[6].i32[0];
          v25.i64[0] = vzip1q_s32(v5, v6).u64[0];
          *(float32x2_t *)v8.f32 = v24[7];
          v8.i32[2] = v24[8].i32[0];
          v26 = (int8x16_t)vnegq_f32(v8);
          v27 = (int8x16_t)vtrn2q_s32(v5, v6);
          v27.i32[2] = HIDWORD(*(_QWORD *)&v24[5]);
          v28 = (float32x4_t)vzip2q_s32(v5, v6);
          *(float32x2_t *)v4.i8 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v25.f32, *(float *)v26.i32), *(float32x2_t *)v27.i8, *(float32x2_t *)v8.f32, 1), *(float32x2_t *)v28.f32, v8, 2);
          v28.i32[2] = v7.i32[0];
          v29 = vdupq_lane_s32(*(int32x2_t *)v27.i8, 0);
          v27.i64[0] = vextq_s8(v27, v4, 4uLL).u64[0];
          v4.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(v24[5], *(float32x2_t *)v26.i8), (float32x2_t)vdup_lane_s32((int32x2_t)v24[5], 1), *(float32x2_t *)v8.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v26, v26, 8uLL), v7).u32[0]);
          v25.i64[1] = *(_QWORD *)&v24[5];
          v30.i32[3] = 0;
          v30.i32[0] = v29.i32[3];
          *(uint64_t *)((char *)v30.i64 + 4) = v27.i64[0];
          v28.i64[1] = vdupq_laneq_s32((int32x4_t)v28, 2).u32[0];
          v31 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, COERCE_FLOAT(*(_OWORD *)v24[9].f32)), v30, v24[9], 1), v28, *(float32x4_t *)v24[9].f32, 2), (float32x4_t)v4, *(float32x4_t *)v24[9].f32, 3);
          v32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, COERCE_FLOAT(*(_OWORD *)v24[11].f32)), v30, v24[11], 1), v28, *(float32x4_t *)v24[11].f32, 2), (float32x4_t)v4, *(float32x4_t *)v24[11].f32, 3);
          v33 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, COERCE_FLOAT(*(_OWORD *)v24[13].f32)), v30, v24[13], 1), v28, *(float32x4_t *)v24[13].f32, 2), (float32x4_t)v4, *(float32x4_t *)v24[13].f32, 3);
          v34 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, COERCE_FLOAT(*(_OWORD *)v24[15].f32)), v30, v24[15], 1), v28, *(float32x4_t *)v24[15].f32, 2), (float32x4_t)v4, *(float32x4_t *)v24[15].f32, 3);
          v46[0] = v31;
          v46[1] = v32;
          v46[2] = v33;
          v46[3] = v34;
          v35 = v19[1];
          v36 = *(std::__shared_weak_count **)(a1 + 192);
          v44 = *(_QWORD *)(a1 + 184);
          v45 = v36;
          if (v36)
          {
            p_shared_owners = (unint64_t *)&v36->__shared_owners_;
            do
              v38 = __ldxr(p_shared_owners);
            while (__stxr(v38 + 1, p_shared_owners));
          }
          (*(void (**)(uint64_t, uint64_t *, _QWORD **, _OWORD *))(*(_QWORD *)v35 + 72))(v35, &v44, v2 + 4, v46);
          v39 = v45;
          if (v45)
          {
            v40 = (unint64_t *)&v45->__shared_owners_;
            do
              v41 = __ldaxr(v40);
            while (__stlxr(v41 - 1, v40));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
              std::__shared_weak_count::__release_weak(v39);
            }
          }
        }
      }
      (*(void (**)(_QWORD, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v19[1] + 56))(v19[1], v3 + 168, *v19, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 16));
      v42 = v2[1];
      if (v42)
      {
        do
        {
          v43 = (_QWORD **)v42;
          v42 = (_QWORD *)*v42;
        }
        while (v42);
      }
      else
      {
        do
        {
          v43 = (_QWORD **)v2[2];
          v21 = *v43 == v2;
          v2 = v43;
        }
        while (!v21);
      }
      v2 = v43;
    }
    while (v43 != &v48);
  }
  kdebug_trace();
  sub_223198030((uint64_t)&v47, v48);
}

void sub_223520528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,_QWORD *a21)
{
  sub_223198030((uint64_t)&a20, a21);
  _Unwind_Resume(a1);
}

void sub_223520548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,_QWORD *a21)
{
  sub_223167354((uint64_t)&a9);
  sub_223198030((uint64_t)&a20, a21);
  _Unwind_Resume(a1);
}

void sub_223520568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,_QWORD *a21)
{
  sub_223198030((uint64_t)&a20, a21);
  _Unwind_Resume(a1);
}

void sub_223520580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,_QWORD *a21)
{
  sub_223198030((uint64_t)&a20, a21);
  _Unwind_Resume(a1);
}

void sub_223520598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,_QWORD *a21)
{
  sub_223198030((uint64_t)&a20, a21);
  _Unwind_Resume(a1);
}

void sub_2235205B0(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 **a4@<X8>)
{
  uint64_t v8;
  int32x4_t v9;
  int32x4_t v10;
  float32x4_t v11;
  float32x2_t v12;
  float32x2_t *v13;
  int v14;
  BOOL v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  BOOL v22;
  char v23;
  char v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  std::__shared_weak_count *v33;
  unint64_t *p_shared_owners;
  unint64_t v35;
  __int128 v36;
  int8x16_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int32x4_t v40;
  float32x2_t v41;
  float32x2_t v42;
  float32x2_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  unsigned __int8 *v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  unsigned __int8 *v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  int v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v75;
  const char *v76;
  size_t v77;
  unsigned __int8 v78;
  const char *v79;
  size_t v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  void **v84;
  NSObject *v85;
  uint64_t v86;
  uint64_t v87;
  size_t v88;
  std::__shared_weak_count_vtbl *v89;
  std::__shared_weak_count *v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  const char *v99;
  uint64_t v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  std::__shared_weak_count *v104;
  unint64_t *v105;
  unint64_t v106;
  uint64_t v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  std::__shared_weak_count *v114;
  int v115;
  unint64_t *v116;
  unint64_t v117;
  std::__shared_weak_count *v118;
  unint64_t *v119;
  unint64_t v120;
  void *v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  unsigned __int8 *v125;
  unsigned __int8 *v126;
  int32x2_t v127;
  uint64_t *v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  std::__shared_weak_count *v135;
  unint64_t *v136;
  unint64_t v137;
  int v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  size_t v142;
  const char *v143;
  unsigned __int8 v144;
  const char *v145;
  size_t v146;
  _BYTE *v147;
  unint64_t v148;
  const char *v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  void **v154;
  uint64_t v155;
  uint64_t v156;
  NSObject *v157;
  size_t v158;
  std::__shared_weak_count_vtbl *v159;
  std::__shared_weak_count *v160;
  std::__shared_weak_count *v161;
  unint64_t *v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  std::__shared_weak_count *v170;
  unint64_t *v171;
  unint64_t v172;
  std::__shared_weak_count *v173;
  unint64_t *v174;
  unint64_t v175;
  std::__shared_weak_count *v176;
  unint64_t *v177;
  unint64_t v178;
  std::__shared_weak_count *v179;
  unint64_t *v180;
  unint64_t v181;
  void *v182;
  std::__shared_weak_count *v183;
  unint64_t *v184;
  unint64_t v185;
  const char *v186;
  uint64_t v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  int64x2_t __p;
  _OWORD v200[3];
  float32x2_t v201;
  unsigned __int32 v202;
  int v203;
  int64x2_t v204;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  int v206;
  const char *v207;
  int v208;
  const char *v209;
  uint64_t v210;
  std::__shared_weak_count *v211;
  uint64_t v212[3];
  __int128 v213;
  __int128 v214;
  BOOL v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  _BYTE v219[24];
  __int128 v220;
  void **v221;
  size_t v222;
  unint64_t v223;
  char v224;
  uint64_t v225;

  v225 = *MEMORY[0x24BDAC8D0];
  kdebug_trace();
  if ((_BYTE)a3)
    v8 = a2;
  else
    v8 = 0;
  a1[11] = v8;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  v213 = 0u;
  v214 = 0u;
  sub_22351FF10(v212, (uint64_t)a1);
  v13 = (float32x2_t *)a1[4];
  v14 = v13[122].u8[0];
  if (v13[70].i8[0])
    v15 = v13[110].i8[0] == 0;
  else
    v15 = 1;
  v16 = v15 || v14 == 0;
  v195 = a3;
  if (v16)
  {
    v17 = a1[2];
    v193 = a1 + 2;
    v18 = a1[1];
    v196 = *(_QWORD **)(v18 + 48);
    v19 = *(_QWORD *)(v18 + 16);
    v20 = v18 + 112;
    v191 = v17 + 24;
    if (v13[70].i8[0])
    {
      if (!v13[41].i8[0])
      {
        v21 = 0;
        if (!*(_BYTE *)(v17 + 216))
          goto LABEL_30;
LABEL_33:
        if (v21)
        {
          v28 = a1[3];
          *(_OWORD *)v219 = xmmword_2245F6D10;
          v24 = 0;
          v23 = *(_BYTE *)((*(uint64_t (**)(uint64_t, _BYTE *))(*(_QWORD *)v28 + 32))(v28, v219) + 1);
          LOBYTE(v21) = 1;
        }
        else
        {
          v24 = 0;
          v23 = 4;
        }
        goto LABEL_36;
      }
      v21 = 0;
      if (v13[110].i8[0])
        v22 = v14 == 0;
      else
        v22 = 1;
      if (v22)
      {
        v23 = 4;
        v24 = 1;
LABEL_36:
        v204.i64[0] = 0;
        LOBYTE(v200[0]) = v23;
        __p.i8[0] = v21;
        LOBYTE(v216) = v24;
        v29 = a1[57];
        if (!v29)
          sub_223198474();
        (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t, _QWORD *, uint64_t, _QWORD *, uint64_t, _OWORD *, int64x2_t *, uint64_t *, int64x2_t *))(*(_QWORD *)v29 + 48))(v219, v29, v191, a1 + 20, v20, v196, v19, v200, &__p, &v216, &v204);
        v30 = *a4;
        if (*a4)
        {
          v31 = a4[1];
          v32 = *a4;
          if (v31 != v30)
          {
            do
            {
              v33 = (std::__shared_weak_count *)*((_QWORD *)v31 - 12);
              if (v33)
              {
                p_shared_owners = (unint64_t *)&v33->__shared_owners_;
                do
                  v35 = __ldaxr(p_shared_owners);
                while (__stlxr(v35 - 1, p_shared_owners));
                if (!v35)
                {
                  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
                  std::__shared_weak_count::__release_weak(v33);
                }
              }
              v31 -= 120;
            }
            while (v31 != v30);
            v32 = *a4;
          }
          a4[1] = v30;
          operator delete(v32);
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
        }
        v9.i32[3] = *(_DWORD *)&v219[12];
        *(_OWORD *)a4 = *(_OWORD *)v219;
        a4[2] = *(unsigned __int8 **)&v219[16];
        LODWORD(v213) = v204.i32[0];
        v13 = (float32x2_t *)a1[4];
        a3 = v195;
LABEL_49:
        *(float32x2_t *)v9.i8 = v13[18];
        v9.i32[2] = v13[19].i32[0];
        *(float32x2_t *)v10.i8 = v13[20];
        v10.i32[2] = v13[21].i32[0];
        *(float32x2_t *)v11.f32 = v13[24];
        v11.i32[2] = v13[25].i32[0];
        *(_QWORD *)&v36 = vzip1q_s32(v9, v10).u64[0];
        v37 = (int8x16_t)vnegq_f32(v11);
        v12.i32[0] = v13[23].i32[0];
        v38 = (int8x16_t)vtrn2q_s32(v9, v10);
        v38.i32[2] = HIDWORD(*(_QWORD *)&v13[22]);
        v39 = (int8x16_t)vzip2q_s32(v9, v10);
        v40 = (int32x4_t)v39;
        v40.i32[2] = v12.i32[0];
        v41 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)&v36, *(float *)v37.i32), *(float32x2_t *)v38.i8, *(float32x2_t *)v11.f32, 1), *(float32x2_t *)v39.i8, v11, 2);
        v42 = vmls_lane_f32(vmul_f32(v13[22], *(float32x2_t *)v37.i8), (float32x2_t)vdup_lane_s32((int32x2_t)v13[22], 1), *(float32x2_t *)v11.f32, 1);
        v43 = (float32x2_t)vextq_s8(v37, v37, 8uLL).u64[0];
        *((_QWORD *)&v36 + 1) = *(_QWORD *)&v13[22];
        v37.i32[3] = 0;
        v37.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v38, 0).i32[3];
        *(uint64_t *)((char *)v37.i64 + 4) = vextq_s8(v38, v39, 4uLL).u64[0];
        v40.i64[1] = vdupq_laneq_s32(v40, 2).u32[0];
        v200[1] = v37;
        v200[2] = v40;
        v200[0] = v36;
        v201 = v41;
        v202 = vmla_f32(v42, v43, v12).u32[0];
        v203 = 1065353216;
        if ((v24 & 1) != 0)
        {
          v44 = 0;
          v45 = 0;
          v46 = 0;
        }
        else
        {
          v46 = v212;
          v44 = a1[3] + 32;
          v45 = 1;
        }
        *(_QWORD *)v219 = v46;
        *(_QWORD *)&v219[8] = v45;
        v204.i64[0] = v44;
        v204.i64[1] = v45;
        v216 = a2;
        v217 = a3;
        LOBYTE(v218) = v21;
        LOBYTE(v198) = v24;
        v47 = a1[53];
        if (!v47)
          sub_223198474();
        (*(void (**)(int64x2_t *__return_ptr))(*(_QWORD *)v47 + 48))(&__p);
        v194 = a2;
        sub_223530D70(a4, &__p, (int64x2_t *)v219);
        v48 = *a4;
        if (*a4)
        {
          v49 = a4[1];
          v50 = *a4;
          if (v49 != v48)
          {
            do
            {
              v51 = (std::__shared_weak_count *)*((_QWORD *)v49 - 12);
              if (v51)
              {
                v52 = (unint64_t *)&v51->__shared_owners_;
                do
                  v53 = __ldaxr(v52);
                while (__stlxr(v53 - 1, v52));
                if (!v53)
                {
                  ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
                  std::__shared_weak_count::__release_weak(v51);
                }
              }
              v49 -= 120;
            }
            while (v49 != v48);
            v50 = *a4;
          }
          a4[1] = v48;
          operator delete(v50);
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          LOBYTE(a3) = v195;
        }
        *(_OWORD *)a4 = *(_OWORD *)v219;
        a4[2] = *(unsigned __int8 **)&v219[16];
        v54 = a2;
        if ((v24 & 1) == 0)
        {
          v55 = a1[3];
          *(_OWORD *)v219 = xmmword_2245F6D10;
          v56 = *(_BYTE *)(*(uint64_t (**)(uint64_t, _BYTE *))(*(_QWORD *)v55 + 32))(v55, v219);
          if ((v56 & 0x10) != 0)
          {
            v57 = a1[3] + 32;
            v204.i64[0] = v191;
            v204.i64[1] = 1;
            v216 = v57;
            v217 = 1;
            LOBYTE(v218) = v21;
            LOBYTE(v198) = 0;
            v215 = (v56 & 2) != 0;
            v58 = a1[45];
            if (!v58)
              sub_223198474();
            (*(void (**)(_BYTE *__return_ptr, uint64_t, _QWORD *, uint64_t, _OWORD *, uint64_t *, uint64_t *, BOOL *, int64x2_t *, uint64_t *))(*(_QWORD *)v58 + 48))(v219, v58, v196, v20, v200, &v218, &v198, &v215, &v204, &v216);
            sub_223530D70(a4, (int64x2_t *)v219, &v204);
            v59 = *a4;
            if (*a4)
            {
              v60 = a4[1];
              v61 = *a4;
              if (v60 != v59)
              {
                do
                {
                  v62 = (std::__shared_weak_count *)*((_QWORD *)v60 - 12);
                  if (v62)
                  {
                    v63 = (unint64_t *)&v62->__shared_owners_;
                    do
                      v64 = __ldaxr(v63);
                    while (__stlxr(v64 - 1, v63));
                    if (!v64)
                    {
                      ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
                      std::__shared_weak_count::__release_weak(v62);
                    }
                  }
                  v60 -= 120;
                }
                while (v60 != v59);
                v61 = *a4;
              }
              a4[1] = v59;
              operator delete(v61);
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
            }
            *(int64x2_t *)a4 = v204;
            a4[2] = (unsigned __int8 *)rep;
            v65 = *(_QWORD *)v219;
            if (*(_QWORD *)v219)
            {
              v66 = *(_QWORD *)&v219[8];
              v67 = *(void **)v219;
              if (*(_QWORD *)&v219[8] != *(_QWORD *)v219)
              {
                do
                {
                  v68 = *(std::__shared_weak_count **)(v66 - 96);
                  if (v68)
                  {
                    v69 = (unint64_t *)&v68->__shared_owners_;
                    do
                      v70 = __ldaxr(v69);
                    while (__stlxr(v70 - 1, v69));
                    if (!v70)
                    {
                      ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
                      std::__shared_weak_count::__release_weak(v68);
                    }
                  }
                  v66 -= 120;
                }
                while (v66 != v65);
                v67 = *(void **)v219;
              }
              *(_QWORD *)&v219[8] = v65;
              operator delete(v67);
            }
            LOBYTE(a3) = v195;
          }
        }
        sub_22351C1EC(&v198);
        if (**(int **)(v198 + 56) > 3)
          goto LABEL_183;
        v71 = *(unsigned __int8 *)(v198 + 72);
        v72 = sub_22322F254(v198, "OSLogSurrogateAppender", 1, 0);
        v73 = v72;
        if (!v71 && v72 == 0)
          goto LABEL_183;
        v188 = v71;
        v204.i64[0] = (uint64_t)&v198;
        v204.u64[1] = std::chrono::steady_clock::now().__d_.__rep_;
        rep = std::chrono::system_clock::now().__d_.__rep_;
        v206 = 3;
        v207 = "unknown file";
        v208 = 458;
        v210 = 0;
        v211 = 0;
        v209 = "unknown function";
        v75 = *(_QWORD *)v204.i64[0];
        v76 = (const char *)(*(_QWORD *)v204.i64[0] + 16);
        v186 = v76;
        v187 = *(_QWORD *)v204.i64[0];
        if (*(char *)(*(_QWORD *)v204.i64[0] + 39) < 0)
        {
          v76 = *(const char **)(v75 + 16);
          v77 = *(_QWORD *)(v75 + 24);
        }
        else
        {
          v77 = *(unsigned __int8 *)(*(_QWORD *)v204.i64[0] + 39);
        }
        v190 = v196[3];
        v192 = v196[4];
        v189 = v196[9];
        v78 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v78 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
        {
          sub_224568628((uint64_t)v219);
          sub_223199C58("com.apple.cv3d", (unint64_t)v219, &xmmword_255788F40);
          if ((_BYTE)v220 && (v219[23] & 0x80000000) != 0)
            operator delete(*(void **)v219);
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
          __cxa_guard_release(&qword_255788F58);
          LOBYTE(a3) = v195;
        }
        if (byte_255788F57 >= 0)
          v79 = (const char *)&xmmword_255788F40;
        else
          v79 = (const char *)xmmword_255788F40;
        if (byte_255788F57 >= 0)
          v80 = byte_255788F57;
        else
          v80 = *((_QWORD *)&xmmword_255788F40 + 1);
        *(_QWORD *)v219 = os_log_create(v79, v76);
        v81 = &v219[8];
        if (v80 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v80 >= 0x17)
        {
          v82 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v80 | 7) != 0x17)
            v82 = v80 | 7;
          v83 = v82 + 1;
          v81 = operator new(v82 + 1);
          *(_QWORD *)&v219[16] = v80;
          *(_QWORD *)&v220 = v83 | 0x8000000000000000;
          *(_QWORD *)&v219[8] = v81;
        }
        else
        {
          BYTE7(v220) = v80;
          if (!v80)
          {
LABEL_115:
            v81[v80] = 0;
            BYTE8(v220) = 1;
            v84 = (void **)&v221;
            if (v77 > 0x7FFFFFFFFFFFFFF7)
              sub_22316DBC0();
            if (v77 >= 0x17)
            {
              v86 = (v77 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v77 | 7) != 0x17)
                v86 = v77 | 7;
              v87 = v86 + 1;
              v84 = (void **)operator new(v86 + 1);
              v222 = v77;
              v223 = v87 | 0x8000000000000000;
              v221 = v84;
            }
            else
            {
              HIBYTE(v223) = v77;
              if (!v77)
              {
                LOBYTE(v221) = 0;
                v224 = 1;
                v85 = *(NSObject **)v219;
                if ((SHIBYTE(v223) & 0x80000000) == 0)
                  goto LABEL_119;
                goto LABEL_125;
              }
            }
            memmove(v84, v76, v77);
            *((_BYTE *)v84 + v77) = 0;
            v224 = 1;
            v85 = *(NSObject **)v219;
            if ((SHIBYTE(v223) & 0x80000000) == 0)
            {
LABEL_119:
              if (!BYTE8(v220))
                goto LABEL_128;
              goto LABEL_126;
            }
LABEL_125:
            operator delete(v221);
            if (!BYTE8(v220))
            {
LABEL_128:
              if (*(_QWORD *)v219)
                os_release(*(void **)v219);
              if (v73 && *(_QWORD *)(v73 + 24))
              {
                v88 = _os_log_pack_size();
                v89 = (std::__shared_weak_count_vtbl *)operator new(v88, (std::align_val_t)8uLL);
                v90 = (std::__shared_weak_count *)operator new();
                v91 = v90;
                v90->__shared_owners_ = 0;
                v92 = (unint64_t *)&v90->__shared_owners_;
                v90->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
                v90->__shared_weak_owners_ = 0;
                v90[1].__vftable = v89;
                *(_QWORD *)v219 = v89;
                *(_QWORD *)&v219[8] = v89;
                *(_QWORD *)&v219[16] = v90;
                do
                  v93 = __ldxr(v92);
                while (__stxr(v93 + 1, v92));
                v220 = 0uLL;
                v221 = 0;
                do
                  v94 = __ldaxr(v92);
                while (__stlxr(v94 - 1, v92));
                if (!v94)
                {
                  ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
                  std::__shared_weak_count::__release_weak(v91);
                }
                v95 = *(_QWORD *)v219;
                v96 = _os_log_pack_fill();
                *(_DWORD *)v96 = 134218240;
                *(_QWORD *)(v96 + 4) = v192 - v190;
                *(_WORD *)(v96 + 12) = 2048;
                *(_QWORD *)(v96 + 14) = v189;
                v97 = operator new();
                v98 = *(unsigned __int8 *)(v187 + 39);
                v99 = v186;
                if ((v98 & 0x80u) != 0)
                {
                  v99 = *(const char **)(v187 + 16);
                  v98 = *(_QWORD *)(v187 + 24);
                }
                *(_QWORD *)v97 = v95;
                *(_OWORD *)(v97 + 8) = *(_OWORD *)&v219[8];
                *(_QWORD *)&v219[8] = 0;
                *(_QWORD *)&v219[16] = 0;
                *(_OWORD *)(v97 + 24) = v220;
                v220 = 0uLL;
                *(_QWORD *)(v97 + 40) = v99;
                *(_QWORD *)(v97 + 48) = v98;
                *(_BYTE *)(v97 + 56) = 1;
                v218 = 0;
                v216 = v97;
                (*(void (**)(_QWORD, uint64_t *))(**(_QWORD **)(v73 + 24) + 40))(*(_QWORD *)(v73 + 24), &v216);
                v100 = v216;
                v216 = 0;
                if (v100)
                {
                  v101 = *(std::__shared_weak_count **)(v100 + 32);
                  if (v101)
                  {
                    v102 = (unint64_t *)&v101->__shared_owners_;
                    do
                      v103 = __ldaxr(v102);
                    while (__stlxr(v103 - 1, v102));
                    if (!v103)
                    {
                      ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
                      std::__shared_weak_count::__release_weak(v101);
                    }
                  }
                  v104 = *(std::__shared_weak_count **)(v100 + 16);
                  if (v104)
                  {
                    v105 = (unint64_t *)&v104->__shared_owners_;
                    do
                      v106 = __ldaxr(v105);
                    while (__stlxr(v106 - 1, v105));
                    if (!v106)
                    {
                      ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
                      std::__shared_weak_count::__release_weak(v104);
                    }
                  }
                  MEMORY[0x227684CE8](v100, 0x10F0C40B62ED6C6);
                  v107 = v218;
                  v218 = 0;
                  if (v107)
                  {
                    v108 = *(std::__shared_weak_count **)(v107 + 32);
                    if (v108)
                    {
                      v109 = (unint64_t *)&v108->__shared_owners_;
                      do
                        v110 = __ldaxr(v109);
                      while (__stlxr(v110 - 1, v109));
                      if (!v110)
                      {
                        ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
                        std::__shared_weak_count::__release_weak(v108);
                      }
                    }
                    v111 = *(std::__shared_weak_count **)(v107 + 16);
                    if (v111)
                    {
                      v112 = (unint64_t *)&v111->__shared_owners_;
                      do
                        v113 = __ldaxr(v112);
                      while (__stlxr(v113 - 1, v112));
                      if (!v113)
                      {
                        ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
                        std::__shared_weak_count::__release_weak(v111);
                      }
                    }
                    MEMORY[0x227684CE8](v107, 0x10F0C40B62ED6C6);
                  }
                }
                v114 = (std::__shared_weak_count *)*((_QWORD *)&v220 + 1);
                v115 = v188;
                if (*((_QWORD *)&v220 + 1))
                {
                  v116 = (unint64_t *)(*((_QWORD *)&v220 + 1) + 8);
                  do
                    v117 = __ldaxr(v116);
                  while (__stlxr(v117 - 1, v116));
                  if (!v117)
                  {
                    ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
                    std::__shared_weak_count::__release_weak(v114);
                  }
                }
                v118 = *(std::__shared_weak_count **)&v219[16];
                if (*(_QWORD *)&v219[16])
                {
                  v119 = (unint64_t *)(*(_QWORD *)&v219[16] + 8);
                  do
                    v120 = __ldaxr(v119);
                  while (__stlxr(v120 - 1, v119));
                  if (!v120)
                  {
                    ((void (*)(std::__shared_weak_count *))v118->__on_zero_shared)(v118);
                    std::__shared_weak_count::__release_weak(v118);
                  }
                }
              }
              else
              {
                os_log_type_enabled(v85, OS_LOG_TYPE_INFO);
                LOBYTE(a3) = v195;
                *(_DWORD *)v219 = 134218240;
                *(_QWORD *)&v219[4] = v192 - v190;
                *(_WORD *)&v219[12] = 2048;
                *(_QWORD *)&v219[14] = v189;
                v121 = (void *)_os_log_send_and_compose_impl();
                v115 = v188;
                if (v121)
                  free(v121);
              }
              if (v115)
              {
                sub_22322C138((uint64_t)&v204, "VLM:MEM GCHC:%ld GCHS:%ld", v196[4] - v196[3], v196[9]);
                sub_223182C08((uint64_t)&v204);
              }
              sub_223182C08((uint64_t)&v204);
              v122 = v211;
              if (v211)
              {
                v123 = (unint64_t *)&v211->__shared_owners_;
                do
                  v124 = __ldaxr(v123);
                while (__stlxr(v124 - 1, v123));
                if (!v124)
                {
                  ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
                  std::__shared_weak_count::__release_weak(v122);
                }
              }
              v54 = v194;
LABEL_183:
              v125 = *a4;
              v126 = a4[1];
              if (*a4 != v126)
              {
                v127 = *(int32x2_t *)((char *)&v214 + 4);
                do
                {
                  v128 = (uint64_t *)*((_QWORD *)v125 + 2);
                  v130.i64[0] = v128[14];
                  v129.i64[0] = v128[15];
                  v130.i64[1] = *v128;
                  v129.i64[1] = v128[1];
                  v131 = (int64x2_t)vshrq_n_u64((uint64x2_t)vsubq_s64(v129, v130), 2uLL);
                  v131.i64[0] = (-1431655765 * v131.i32[0]);
                  v131.i64[1] = (-1431655765 * v131.i32[2]);
                  v127 = vadd_s32(v127, vmovn_s64(v131));
                  v125 += 120;
                }
                while (v125 != v126);
                *(int32x2_t *)((char *)&v214 + 4) = v127;
              }
              sub_223473C18(*v193);
              sub_223670538((uint64_t *)a4, v54, a3, 0);
              kdebug_trace();
              sub_223531318((int *)&v213);
              v132 = __p.i64[0];
              if (__p.i64[0])
              {
                v133 = __p.i64[1];
                v134 = (void *)__p.i64[0];
                if (__p.i64[1] != __p.i64[0])
                {
                  do
                  {
                    v135 = *(std::__shared_weak_count **)(v133 - 96);
                    if (v135)
                    {
                      v136 = (unint64_t *)&v135->__shared_owners_;
                      do
                        v137 = __ldaxr(v136);
                      while (__stlxr(v137 - 1, v136));
                      if (!v137)
                      {
                        ((void (*)(std::__shared_weak_count *))v135->__on_zero_shared)(v135);
                        std::__shared_weak_count::__release_weak(v135);
                      }
                    }
                    v133 -= 120;
                  }
                  while (v133 != v132);
                  v134 = (void *)__p.i64[0];
                }
                __p.i64[1] = v132;
                operator delete(v134);
              }
              goto LABEL_198;
            }
LABEL_126:
            if (SBYTE7(v220) < 0)
              operator delete(*(void **)&v219[8]);
            goto LABEL_128;
          }
        }
        memmove(v81, v79, v80);
        goto LABEL_115;
      }
    }
    else
    {
      v21 = 0;
    }
    if (!*(_BYTE *)(v17 + 216))
      goto LABEL_30;
    goto LABEL_33;
  }
  if (v13[62].i8[1])
    v25 = v13[34].i8[0] == 0;
  else
    v25 = 1;
  if (v25 || !v13[65].i8[4])
  {
    v21 = 0;
LABEL_29:
    v26 = a1[2];
    v193 = a1 + 2;
    v27 = a1[1];
    v196 = *(_QWORD **)(v27 + 48);
    v19 = *(_QWORD *)(v27 + 16);
    v20 = v27 + 112;
    v191 = v26 + 24;
    if (!*(_BYTE *)(v26 + 216))
    {
LABEL_30:
      v24 = 0;
      goto LABEL_49;
    }
    goto LABEL_33;
  }
  if (v212[2] || a1[22])
  {
    v21 = 1;
    goto LABEL_29;
  }
  sub_22351C1EC(&v216);
  if (**(int **)(v216 + 56) > 3)
    goto LABEL_198;
  v138 = *(unsigned __int8 *)(v216 + 72);
  v139 = sub_22322F254(v216, "OSLogSurrogateAppender", 1, 0);
  v140 = v139;
  if (!v138 && !v139)
    goto LABEL_198;
  v204.i64[0] = (uint64_t)&v216;
  v204.u64[1] = std::chrono::steady_clock::now().__d_.__rep_;
  rep = std::chrono::system_clock::now().__d_.__rep_;
  v206 = 3;
  v207 = "unknown file";
  v208 = 394;
  v210 = 0;
  v211 = 0;
  v209 = "unknown function";
  v141 = v216;
  if (*(char *)(v216 + 39) < 0)
  {
    v143 = *(const char **)(v216 + 16);
    v142 = *(_QWORD *)(v216 + 24);
  }
  else
  {
    v142 = *(unsigned __int8 *)(v216 + 39);
    v143 = (const char *)(*(_QWORD *)v204.i64[0] + 16);
  }
  v197 = *(_QWORD *)v204.i64[0] + 16;
  v144 = atomic_load((unsigned __int8 *)&qword_255788F58);
  if ((v144 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
  {
    sub_224568628((uint64_t)v219);
    sub_223199C58("com.apple.cv3d", (unint64_t)v219, &xmmword_255788F40);
    if ((_BYTE)v220 && (v219[23] & 0x80000000) != 0)
      operator delete(*(void **)v219);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
    __cxa_guard_release(&qword_255788F58);
  }
  if (byte_255788F57 >= 0)
    v145 = (const char *)&xmmword_255788F40;
  else
    v145 = (const char *)xmmword_255788F40;
  if (byte_255788F57 >= 0)
    v146 = byte_255788F57;
  else
    v146 = *((_QWORD *)&xmmword_255788F40 + 1);
  *(_QWORD *)v219 = os_log_create(v145, v143);
  v147 = &v219[8];
  if (v146 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v146 >= 0x17)
  {
    v148 = v140;
    v149 = v143;
    v150 = v141;
    v151 = v138;
    v152 = (v146 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v146 | 7) != 0x17)
      v152 = v146 | 7;
    v153 = v152 + 1;
    v147 = operator new(v152 + 1);
    *(_QWORD *)&v219[16] = v146;
    *(_QWORD *)&v220 = v153 | 0x8000000000000000;
    *(_QWORD *)&v219[8] = v147;
    v138 = v151;
    v141 = v150;
    v143 = v149;
    v140 = v148;
    goto LABEL_219;
  }
  BYTE7(v220) = v146;
  if (v146)
LABEL_219:
    memmove(v147, v145, v146);
  v147[v146] = 0;
  BYTE8(v220) = 1;
  v154 = (void **)&v221;
  if (v142 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v142 >= 0x17)
  {
    v155 = (v142 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v142 | 7) != 0x17)
      v155 = v142 | 7;
    v156 = v155 + 1;
    v154 = (void **)operator new(v155 + 1);
    v222 = v142;
    v223 = v156 | 0x8000000000000000;
    v221 = v154;
  }
  else
  {
    HIBYTE(v223) = v142;
    if (!v142)
      goto LABEL_228;
  }
  memmove(v154, v143, v142);
LABEL_228:
  *((_BYTE *)v154 + v142) = 0;
  v224 = 1;
  v157 = *(NSObject **)v219;
  if (SHIBYTE(v223) < 0)
    operator delete(v221);
  if (BYTE8(v220) && SBYTE7(v220) < 0)
    operator delete(*(void **)&v219[8]);
  if (*(_QWORD *)v219)
    os_release(*(void **)v219);
  if (v140 && *(_QWORD *)(v140 + 24))
  {
    v158 = _os_log_pack_size();
    v159 = (std::__shared_weak_count_vtbl *)operator new(v158, (std::align_val_t)8uLL);
    v160 = (std::__shared_weak_count *)operator new();
    v161 = v160;
    v160->__shared_owners_ = 0;
    v162 = (unint64_t *)&v160->__shared_owners_;
    v160->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v160->__shared_weak_owners_ = 0;
    v160[1].__vftable = v159;
    *(_QWORD *)v219 = v159;
    *(_QWORD *)&v219[8] = v159;
    *(_QWORD *)&v219[16] = v160;
    do
      v163 = __ldxr(v162);
    while (__stxr(v163 + 1, v162));
    v220 = 0uLL;
    v221 = 0;
    do
      v164 = __ldaxr(v162);
    while (__stlxr(v164 - 1, v162));
    if (!v164)
    {
      ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
      std::__shared_weak_count::__release_weak(v161);
    }
    v165 = *(_QWORD *)v219;
    *(_WORD *)_os_log_pack_fill() = 0;
    v166 = operator new();
    v167 = *(unsigned __int8 *)(v141 + 39);
    v168 = v197;
    if ((v167 & 0x80u) != 0)
    {
      v168 = *(_QWORD *)(v141 + 16);
      v167 = *(_QWORD *)(v141 + 24);
    }
    *(_QWORD *)v166 = v165;
    *(_OWORD *)(v166 + 8) = *(_OWORD *)&v219[8];
    *(_QWORD *)&v219[8] = 0;
    *(_QWORD *)&v219[16] = 0;
    *(_OWORD *)(v166 + 24) = v220;
    v220 = 0uLL;
    *(_QWORD *)(v166 + 40) = v168;
    *(_QWORD *)(v166 + 48) = v167;
    *(_BYTE *)(v166 + 56) = 1;
    __p.i64[0] = 0;
    *(_QWORD *)&v200[0] = v166;
    (*(void (**)(_QWORD, _OWORD *))(**(_QWORD **)(v140 + 24) + 40))(*(_QWORD *)(v140 + 24), v200);
    v169 = *(_QWORD *)&v200[0];
    *(_QWORD *)&v200[0] = 0;
    if (v169)
    {
      v170 = *(std::__shared_weak_count **)(v169 + 32);
      if (v170)
      {
        v171 = (unint64_t *)&v170->__shared_owners_;
        do
          v172 = __ldaxr(v171);
        while (__stlxr(v172 - 1, v171));
        if (!v172)
        {
          ((void (*)(std::__shared_weak_count *))v170->__on_zero_shared)(v170);
          std::__shared_weak_count::__release_weak(v170);
        }
      }
      v173 = *(std::__shared_weak_count **)(v169 + 16);
      if (v173)
      {
        v174 = (unint64_t *)&v173->__shared_owners_;
        do
          v175 = __ldaxr(v174);
        while (__stlxr(v175 - 1, v174));
        if (!v175)
        {
          ((void (*)(std::__shared_weak_count *))v173->__on_zero_shared)(v173);
          std::__shared_weak_count::__release_weak(v173);
        }
      }
      MEMORY[0x227684CE8](v169, 0x10F0C40B62ED6C6);
      __p.i64[0] = 0;
    }
    v176 = (std::__shared_weak_count *)*((_QWORD *)&v220 + 1);
    if (*((_QWORD *)&v220 + 1))
    {
      v177 = (unint64_t *)(*((_QWORD *)&v220 + 1) + 8);
      do
        v178 = __ldaxr(v177);
      while (__stlxr(v178 - 1, v177));
      if (!v178)
      {
        ((void (*)(std::__shared_weak_count *))v176->__on_zero_shared)(v176);
        std::__shared_weak_count::__release_weak(v176);
      }
    }
    v179 = *(std::__shared_weak_count **)&v219[16];
    if (*(_QWORD *)&v219[16])
    {
      v180 = (unint64_t *)(*(_QWORD *)&v219[16] + 8);
      do
        v181 = __ldaxr(v180);
      while (__stlxr(v181 - 1, v180));
      if (!v181)
      {
        ((void (*)(std::__shared_weak_count *))v179->__on_zero_shared)(v179);
        std::__shared_weak_count::__release_weak(v179);
      }
    }
  }
  else
  {
    os_log_type_enabled(v157, OS_LOG_TYPE_INFO);
    *(_WORD *)v219 = 0;
    v182 = (void *)_os_log_send_and_compose_impl();
    if (v182)
      free(v182);
  }
  if (v138)
  {
    sub_22322C138((uint64_t)&v204, "Run mesh extraction without cluster");
    sub_223182C08((uint64_t)&v204);
  }
  sub_223182C08((uint64_t)&v204);
  v183 = v211;
  if (v211)
  {
    v184 = (unint64_t *)&v211->__shared_owners_;
    do
      v185 = __ldaxr(v184);
    while (__stlxr(v185 - 1, v184));
    if (!v185)
    {
      ((void (*)(std::__shared_weak_count *))v183->__on_zero_shared)(v183);
      std::__shared_weak_count::__release_weak(v183);
    }
  }
LABEL_198:
  sub_223198030((uint64_t)v212, (_QWORD *)v212[1]);
}

void sub_223521AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,_QWORD *a45)
{
  void **v45;
  uint64_t v46;

  if (*(_BYTE *)(v46 - 152))
  {
    if (*(char *)(v46 - 153) < 0)
      operator delete(*(void **)(v46 - 176));
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a35);
  sub_223198030((uint64_t)&a44, a45);
  sub_223295868(v45);
  _Unwind_Resume(a1);
}

uint64_t sub_223521CE0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  int32x4_t v4;
  int32x4_t v5;
  float32x2_t v6;
  float32x4_t v7;
  float32x2_t *v8;
  char v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  __int128 v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  float32x2_t v19;
  uint64_t v20;
  float32x2_t v21;
  float32x2_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v28[3];
  float32x2_t v29;
  unsigned __int32 v30;
  int v31;
  __int128 v32;
  __int128 v33;
  int v34;
  char v35;
  BOOL v36;
  _QWORD v37[2];
  _QWORD v38[2];

  v32 = 0u;
  v33 = 0u;
  v34 = 728333812;
  kdebug_trace();
  v8 = (float32x2_t *)a1[4];
  if (v8[70].i8[0])
  {
    v9 = v8[41].i8[0];
    if (v9)
    {
      if (v8[110].i8[0])
        v9 = v8[122].i8[0] == 0;
      else
        v9 = 1;
    }
  }
  else
  {
    v9 = 0;
  }
  v10 = a1[1];
  if (v8[70].i8[0])
    v11 = v8[110].i8[0] == 0;
  else
    v11 = 1;
  v12 = v11 || v8[122].i8[0] == 0;
  v14 = !v12 && (v8[62].i8[1] ? (v13 = v8[34].i8[0] == 0) : (v13 = 1), !v13) && v8[65].i8[4] != 0;
  *(float32x2_t *)v4.i8 = v8[18];
  v4.i32[2] = v8[19].i32[0];
  *(float32x2_t *)v5.i8 = v8[20];
  v5.i32[2] = v8[21].i32[0];
  v6.i32[0] = v8[23].i32[0];
  *(float32x2_t *)v7.f32 = v8[24];
  v7.i32[2] = v8[25].i32[0];
  *(_QWORD *)&v15 = vzip1q_s32(v4, v5).u64[0];
  v16 = (int8x16_t)vnegq_f32(v7);
  v17 = (int8x16_t)vtrn2q_s32(v4, v5);
  v17.i32[2] = HIDWORD(*(_QWORD *)&v8[22]);
  v18 = (int8x16_t)vzip2q_s32(v4, v5);
  v19 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)&v15, *(float *)v16.i32), *(float32x2_t *)v17.i8, *(float32x2_t *)v7.f32, 1), *(float32x2_t *)v18.i8, v7, 2);
  v18.i32[2] = v6.i32[0];
  v20 = *(_QWORD *)(v10 + 48);
  v21 = vmls_lane_f32(vmul_f32(v8[22], *(float32x2_t *)v16.i8), (float32x2_t)vdup_lane_s32((int32x2_t)v8[22], 1), *(float32x2_t *)v7.f32, 1);
  v22 = (float32x2_t)vextq_s8(v16, v16, 8uLL).u64[0];
  *((_QWORD *)&v15 + 1) = *(_QWORD *)&v8[22];
  v16.i32[3] = 0;
  v16.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v17, 0).i32[3];
  *(uint64_t *)((char *)v16.i64 + 4) = vextq_s8(v17, v18, 4uLL).u64[0];
  v18.i64[1] = vdupq_laneq_s32((int32x4_t)v18, 2).u32[0];
  v28[1] = v16;
  v28[2] = v18;
  v28[0] = v15;
  v29 = v19;
  v30 = vmla_f32(v21, v22, v6).u32[0];
  v31 = 1065353216;
  if ((v9 & 1) != 0)
  {
    v23 = 0;
    v24 = 0;
    v25 = 0;
  }
  else
  {
    v25 = a1[2] + 24;
    v23 = a1[3] + 32;
    v24 = 1;
  }
  v38[0] = v25;
  v38[1] = v24;
  v37[0] = v23;
  v37[1] = v24;
  v36 = v14;
  v35 = v9;
  v26 = a1[49];
  if (!v26)
    sub_223198474();
  (*(void (**)(uint64_t, uint64_t, uint64_t, _OWORD *, BOOL *, char *, _QWORD *, _QWORD *))(*(_QWORD *)v26 + 48))(v26, v20, v10 + 112, v28, &v36, &v35, v38, v37);
  sub_223670538(a2, 0, 0, 1);
  return kdebug_trace();
}

void sub_223521F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void **v9;
  va_list va;

  va_start(va, a9);
  sub_223295868(v9);
  sub_2231874DC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223521F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_2231874DC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223521F34(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  char *v9;
  _QWORD *v10;
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  void *__p;
  __int128 v22;
  void *v23;
  _QWORD *v24;

  kdebug_trace();
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_WORD *)(a3 + 24) = 1;
  if (*a2)
  {
    v6 = *(_QWORD *)(a1 + 64);
    __p = operator new(0x20uLL);
    v22 = xmmword_2245B8D50;
    strcpy((char *)__p, "Monitoring.QueryMappedState");
    (*(void (**)(void **__return_ptr, uint64_t, _BYTE *, _BYTE *, _BYTE *, void **))(*(_QWORD *)v6 + 24))(&v23, v6, a2 + 8, a2 + 16, a2 + 40, &__p);
    if (SHIBYTE(v22) < 0)
    {
      operator delete(__p);
      v7 = v23;
      v8 = v24;
      if (v23 == v24)
      {
LABEL_4:
        if (!v7)
          return;
        goto LABEL_13;
      }
    }
    else
    {
      v7 = v23;
      v8 = v24;
      if (v23 == v24)
        goto LABEL_4;
    }
    v9 = *(char **)(a3 + 8);
    do
    {
      if ((unint64_t)v9 < *(_QWORD *)(a3 + 16))
      {
        *(_OWORD *)v9 = *(_OWORD *)v7;
        v9 += 16;
        *v7 = 0;
        v7[1] = 0;
      }
      else
      {
        v9 = sub_223524C1C((char **)a3, (uint64_t)v7);
      }
      *(_QWORD *)(a3 + 8) = v9;
      v7 += 6;
    }
    while (v7 != v8);
    v7 = v23;
    if (v23)
    {
LABEL_13:
      v10 = v24;
      v11 = v7;
      if (v24 == v7)
      {
LABEL_32:
        v24 = v7;
        operator delete(v11);
        return;
      }
      while (1)
      {
        v12 = (std::__shared_weak_count *)*(v10 - 1);
        if (!v12)
          goto LABEL_20;
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
          v15 = (std::__shared_weak_count *)*(v10 - 3);
          if (v15)
          {
LABEL_21:
            v16 = (unint64_t *)&v15->__shared_owners_;
            do
              v17 = __ldaxr(v16);
            while (__stlxr(v17 - 1, v16));
            if (!v17)
            {
              ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
              std::__shared_weak_count::__release_weak(v15);
            }
          }
        }
        else
        {
LABEL_20:
          v15 = (std::__shared_weak_count *)*(v10 - 3);
          if (v15)
            goto LABEL_21;
        }
        v18 = (std::__shared_weak_count *)*(v10 - 5);
        if (v18)
        {
          v19 = (unint64_t *)&v18->__shared_owners_;
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        v10 -= 6;
        if (v10 == v7)
        {
          v11 = v23;
          goto LABEL_32;
        }
      }
    }
  }
}

void sub_223522164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  void **v15;

  if (a14 < 0)
  {
    operator delete(__p);
    sub_2231B888C(v15);
    _Unwind_Resume(a1);
  }
  sub_2231B888C(v15);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235221BC(uint64_t *a1)
{
  if (*a1)
  {
    sub_223524D48(a1);
    operator delete((void *)*a1);
  }
  return a1;
}

uint64_t sub_2235221F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v10;

  kdebug_trace();
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD **)(v4 + 56);
  v6 = (_QWORD *)(v4 + 64);
  if (v5 != (_QWORD *)(v4 + 64))
  {
    do
    {
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(v5[5] + 8) + 48))(*(_QWORD *)(v5[5] + 8), a2);
      v8 = (_QWORD *)v5[1];
      if (v8)
      {
        do
        {
          v9 = v8;
          v8 = (_QWORD *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          v9 = (_QWORD *)v5[2];
          v10 = *v9 == (_QWORD)v5;
          v5 = v9;
        }
        while (!v10);
      }
      v5 = v9;
    }
    while (v9 != v6);
  }
  return kdebug_trace();
}

void sub_2235222E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2231874DC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235222F4(uint64_t a1, double a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v10;

  kdebug_trace();
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD **)(v4 + 56);
  v6 = (_QWORD *)(v4 + 64);
  if (v5 != (_QWORD *)(v4 + 64))
  {
    do
    {
      (*(void (**)(_QWORD, double))(**(_QWORD **)(v5[5] + 8) + 40))(*(_QWORD *)(v5[5] + 8), a2);
      v8 = (_QWORD *)v5[1];
      if (v8)
      {
        do
        {
          v9 = v8;
          v8 = (_QWORD *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          v9 = (_QWORD *)v5[2];
          v10 = *v9 == (_QWORD)v5;
          v5 = v9;
        }
        while (!v10);
      }
      v5 = v9;
    }
    while (v9 != v6);
  }
  return kdebug_trace();
}

void sub_2235223E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2231874DC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235223F4@<X0>(_QWORD *a1@<X0>, float32x2_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  int32x4_t v8;
  int32x4_t v9;
  float32x2_t v10;
  float32x4_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  int v15;
  uint64_t v16;
  _QWORD *v17;
  float32x4_t v18;
  float32x2_t v19;
  int8x16_t v20;
  float32x2_t v21;
  float32x4_t v22;
  int8x16_t v23;
  int32x4_t v24;
  float32x4_t v25;
  int32x4_t v26;
  int8x16_t v27;
  uint64_t v28;
  uint64_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int8x16_t v32;
  float32x4_t v33;
  float32x4_t v34;
  unint64_t v35;
  int8x16_t v36;
  float32x4_t v37;
  int8x16_t v38;
  int8x16_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x4_t *v45;
  float32x4_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  float32x4_t *v52;
  float32x4_t *v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _BYTE *v64;
  char *v65;
  int64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _OWORD *v71;
  char *v72;
  uint64_t v73;
  __int128 v74;
  int v75;
  _QWORD *v76;
  _QWORD *v77;
  BOOL v78;
  char *v79;
  unint64_t v80;
  float32x4_t *v81;
  float32x4_t v82;
  float32x4_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  float32x4_t v102;
  _QWORD *v103;
  char *__p;
  char *v105;
  char *v106;
  float32x4_t *v107;
  float32x4_t *v108;
  float32x4_t *v109;
  char *v110;
  char *v111;
  int v112;
  int v113[3];

  kdebug_trace();
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  v12 = a1[1];
  v13 = a1[4];
  if (*(_BYTE *)(v13 + 364))
  {
    v14 = (int *)(v13 + 344);
  }
  else
  {
    if (!*(_BYTE *)(v13 + 328))
    {
      sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Common/src/MeshingConfig.cpp", 152, (uint64_t)&unk_2245AD60A, 0, (uint64_t)"No valid meshing mapper exists.", 31, (void (*)(void **))sub_22457406C);
      abort();
    }
    v14 = (int *)(v13 + 288);
  }
  v15 = *v14;
  v107 = 0;
  v108 = 0;
  v109 = 0;
  __p = 0;
  v105 = 0;
  v106 = 0;
  if (!*(_BYTE *)(v13 + 560) || !*(_BYTE *)(v13 + 328) || *(_BYTE *)(v13 + 880) && *(_BYTE *)(v13 + 976))
  {
    v93 = a1[1];
    v94 = a3;
    v16 = a1[2];
    v17 = *(_QWORD **)(v16 + 24);
    v103 = (_QWORD *)(v16 + 32);
    if (v17 == (_QWORD *)(v16 + 32))
    {
      v79 = 0;
      goto LABEL_66;
    }
    v8.i64[0] = *(_QWORD *)(v13 + 144);
    v8.i32[2] = *(_DWORD *)(v13 + 152);
    v9.i64[0] = *(_QWORD *)(v13 + 160);
    v9.i32[2] = *(_DWORD *)(v13 + 168);
    v18.i64[0] = *(_QWORD *)(v13 + 176);
    v10.i32[0] = *(_DWORD *)(v13 + 184);
    v19 = (float32x2_t)vzip1q_s32(v8, v9).u64[0];
    v11.i64[0] = *(_QWORD *)(v13 + 192);
    v11.i32[2] = *(_DWORD *)(v13 + 200);
    v20 = (int8x16_t)vnegq_f32(v11);
    v21 = vmul_n_f32(v19, *(float *)v20.i32);
    *(float32x2_t *)v22.f32 = v19;
    v22.i64[1] = v18.u32[0];
    v23 = (int8x16_t)vtrn2q_s32(v8, v9);
    v23.i32[2] = v18.i32[1];
    v24 = vzip2q_s32(v8, v9);
    *(float32x2_t *)v25.f32 = vmls_laneq_f32(vmls_lane_f32(v21, *(float32x2_t *)v23.i8, *(float32x2_t *)v11.f32, 1), *(float32x2_t *)v24.i8, v11, 2);
    v26 = v24;
    v26.i32[2] = v10.i32[0];
    v27 = (int8x16_t)vdupq_laneq_s32(v26, 2);
    v25.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)v18.f32, *(float32x2_t *)v20.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v18.f32, 1), *(float32x2_t *)v11.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v20, v20, 8uLL), v10).u32[0]);
    v18.i32[3] = 0;
    v18.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v23, 0).i32[3];
    *(uint64_t *)((char *)v18.i64 + 4) = vextq_s8(v23, v27, 4uLL).u64[0];
    v99 = v18;
    v92 = a1;
    v28 = a1[3];
    v26.i64[1] = v27.u32[0];
    v100 = (float32x4_t)v26;
    v101 = v22;
    v102 = v25;
    while (1)
    {
      v29 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v28 + 32))(v28, v17 + 4);
      v30 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v101, COERCE_FLOAT(*(_OWORD *)(v29 + 4))), v99, *(float32x2_t *)(v29 + 4), 1), v100, *(float32x4_t *)(v29 + 4), 2), v102, *(float32x4_t *)(v29 + 4), 3);
      v31 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v101, COERCE_FLOAT(*(_OWORD *)(v29 + 20))), v99, *(float32x2_t *)(v29 + 20), 1), v100, *(float32x4_t *)(v29 + 20), 2), v102, *(float32x4_t *)(v29 + 20), 3);
      v32 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v101, COERCE_FLOAT(*(_OWORD *)(v29 + 36))), v99, *(float32x2_t *)(v29 + 36), 1), v100, *(float32x4_t *)(v29 + 36), 2), v102, *(float32x4_t *)(v29 + 36), 3);
      v33 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v101, COERCE_FLOAT(*(_OWORD *)(v29 + 52))), v99, *(float32x2_t *)(v29 + 52), 1), v100, *(float32x4_t *)(v29 + 52), 2), v102, *(float32x4_t *)(v29 + 52), 3);
      v34.i64[0] = vzip1q_s32(v30, v31).u64[0];
      v35 = v33.i64[0] ^ 0x8000000080000000;
      v34.i64[1] = v32.u32[0];
      v36 = (int8x16_t)vtrn2q_s32(v30, v31);
      v36.i32[2] = v32.i32[1];
      v37 = (float32x4_t)vzip2q_s32(v30, v31);
      v38 = (int8x16_t)v37;
      v38.i32[2] = v32.i32[2];
      *(float32x2_t *)v33.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v34.f32, COERCE_FLOAT(v33.i32[0] ^ 0x80000000)), *(float32x2_t *)v36.i8, (float32x2_t)(v33.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v37.f32, COERCE_FLOAT(v33.i32[2] ^ 0x80000000));
      v33.i64[1] = __PAIR64__(1.0, vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v32.i8, (float32x2_t)v35), (float32x2_t)vdup_lane_s32((int32x2_t)v35, 1), *(float32x2_t *)v32.i8, 1), (float32x2_t)(v33.i64[1] ^ 0xFFFFFFFF80000000), (float32x2_t)*(_OWORD *)&vextq_s8(v32, v32, 8uLL)).u32[0]);
      v39 = vextq_s8(vextq_s8(v36, v36, 0xCuLL), v38, 8uLL);
      v40.i64[0] = __PAIR64__(v39.u32[0], v36.u32[0]);
      v40.i64[1] = v39.u32[1];
      v37.i64[0] = v39.i64[1];
      v37.i64[1] = vdupq_laneq_s32((int32x4_t)v38, 2).u32[0];
      v41 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v34, COERCE_FLOAT(*(_OWORD *)a2->f32)), v40, *a2, 1), v37, *(float32x4_t *)a2->f32, 2), v33, *(float32x4_t *)a2->f32, 3);
      v42 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v34, COERCE_FLOAT(*(_OWORD *)a2[2].f32)), v40, a2[2], 1), v37, *(float32x4_t *)a2[2].f32, 2), v33, *(float32x4_t *)a2[2].f32, 3);
      v43 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v34, COERCE_FLOAT(*(_OWORD *)a2[4].f32)), v40, a2[4], 1), v37, *(float32x4_t *)a2[4].f32, 2), v33, *(float32x4_t *)a2[4].f32, 3);
      v44 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v34, COERCE_FLOAT(*(_OWORD *)a2[6].f32)), v40, a2[6], 1), v37, *(float32x4_t *)a2[6].f32, 2), v33, *(float32x4_t *)a2[6].f32, 3);
      v45 = v108;
      if (v108 < v109)
      {
        *v108 = v41;
        v108[1] = v42;
        v46 = v108 + 4;
        v108[2] = v43;
        v108[3] = v44;
        goto LABEL_29;
      }
      v47 = ((char *)v108 - (char *)v107) >> 6;
      v48 = v47 + 1;
      if ((unint64_t)(v47 + 1) >> 58)
        sub_223257BE4();
      v49 = (char *)v109 - (char *)v107;
      if (((char *)v109 - (char *)v107) >> 5 > v48)
        v48 = v49 >> 5;
      if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFC0)
        v50 = 0x3FFFFFFFFFFFFFFLL;
      else
        v50 = v48;
      if (v50)
      {
        v95 = v44;
        v96 = v43;
        v97 = v42;
        v98 = v41;
        if (v50 >> 58)
          goto LABEL_72;
        v51 = (char *)operator new(v50 << 6);
        v52 = (float32x4_t *)&v51[64 * v47];
        *v52 = v98;
        v52[1] = v97;
        v52[2] = v96;
        v52[3] = v95;
        v53 = v52;
        if (v108 == v107)
          goto LABEL_27;
      }
      else
      {
        v51 = 0;
        v52 = (float32x4_t *)(v47 << 6);
        *v52 = v41;
        v52[1] = v42;
        v52[2] = v43;
        v52[3] = v44;
        v53 = (float32x4_t *)(v47 << 6);
        if (v108 == v107)
          goto LABEL_27;
      }
      do
      {
        v54 = v45[-4];
        v55 = v45[-3];
        v56 = v45[-1];
        v53[-2] = v45[-2];
        v53[-1] = v56;
        v53[-4] = v54;
        v53[-3] = v55;
        v53 -= 4;
        v45 -= 4;
      }
      while (v45 != v107);
      v45 = v107;
LABEL_27:
      v46 = v52 + 4;
      v107 = v53;
      v109 = (float32x4_t *)&v51[64 * v50];
      if (v45)
        operator delete(v45);
LABEL_29:
      v108 = v46;
      v57 = v105;
      if (v105 >= v106)
      {
        v59 = __p;
        v60 = (v105 - __p) >> 2;
        v61 = v60 + 1;
        if ((unint64_t)(v60 + 1) >> 62)
          sub_22352449C();
        v62 = v106 - __p;
        if ((v106 - __p) >> 1 > v61)
          v61 = v62 >> 1;
        if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFFCLL)
          v63 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v63 = v61;
        if (v63)
        {
          if (v63 >> 62)
LABEL_72:
            sub_223174E94();
          v64 = operator new(4 * v63);
          v65 = &v64[4 * v60];
          *(_DWORD *)v65 = *((_DWORD *)v17 + 7);
          v58 = (uint64_t)(v65 + 4);
          v66 = v105 - __p;
          if (v105 == __p)
            goto LABEL_48;
LABEL_42:
          v67 = v66 - 4;
          if (v67 < 0x2C)
            goto LABEL_78;
          if ((unint64_t)(__p - v64) < 0x20)
            goto LABEL_78;
          v68 = (v67 >> 2) + 1;
          v69 = 4 * (v68 & 0x7FFFFFFFFFFFFFF8);
          v70 = &v105[-v69];
          v65 -= v69;
          v71 = &v64[4 * v60 - 16];
          v72 = v105 - 16;
          v73 = v68 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v74 = *(_OWORD *)v72;
            *(v71 - 1) = *((_OWORD *)v72 - 1);
            *v71 = v74;
            v71 -= 2;
            v72 -= 32;
            v73 -= 8;
          }
          while (v73);
          v57 = v70;
          if (v68 != (v68 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_78:
            do
            {
              v75 = *((_DWORD *)v57 - 1);
              v57 -= 4;
              *((_DWORD *)v65 - 1) = v75;
              v65 -= 4;
            }
            while (v57 != __p);
          }
        }
        else
        {
          v64 = 0;
          v65 = (char *)(4 * v60);
          *(_DWORD *)(4 * v60) = *((_DWORD *)v17 + 7);
          v58 = 4 * v60 + 4;
          v66 = v105 - __p;
          if (v105 != __p)
            goto LABEL_42;
        }
LABEL_48:
        __p = v65;
        v106 = &v64[4 * v63];
        if (v59)
          operator delete(v59);
        goto LABEL_50;
      }
      *(_DWORD *)v105 = *((_DWORD *)v17 + 7);
      v58 = (uint64_t)(v105 + 4);
LABEL_50:
      v105 = (char *)v58;
      v76 = (_QWORD *)v17[1];
      if (v76)
      {
        do
        {
          v77 = v76;
          v76 = (_QWORD *)*v76;
        }
        while (v76);
      }
      else
      {
        do
        {
          v77 = (_QWORD *)v17[2];
          v78 = *v77 == (_QWORD)v17;
          v17 = v77;
        }
        while (!v78);
      }
      v17 = v77;
      if (v77 == v103)
      {
        v79 = __p;
        v12 = v93;
        a3 = v94;
        a1 = v92;
        v80 = v58 - (_QWORD)__p;
        if (((v58 - (_QWORD)__p) & 0x3FFFFFFFCLL) == 0)
          goto LABEL_66;
        goto LABEL_60;
      }
    }
  }
  v81 = (float32x4_t *)operator new(0x40uLL);
  v82 = *(float32x4_t *)a2[2].f32;
  *v81 = *(float32x4_t *)a2->f32;
  v81[1] = v82;
  v83 = *(float32x4_t *)a2[6].f32;
  v81[2] = *(float32x4_t *)a2[4].f32;
  v81[3] = v83;
  v107 = v81;
  v84 = (char *)operator new(4uLL);
  *(_DWORD *)v84 = 0;
  __p = v84;
  v80 = 4;
LABEL_60:
  v85 = 0;
  v86 = 0;
  v87 = v12 + 112;
  v88 = (v80 >> 2);
  do
  {
    v89 = *(_DWORD *)&__p[4 * v86];
    v113[0] = v15;
    v112 = v89;
    v90 = a1[41];
    if (!v90)
      sub_223198474();
    (*(void (**)(char **__return_ptr, uint64_t, float32x4_t *, uint64_t, uint64_t, int *, int *))(*(_QWORD *)v90 + 48))(&v110, v90, &v107[v85], a3, v87, v113, &v112);
    sub_223198B3C((uint64_t)a4, a4[1], v110, v111, (v111 - v110) >> 4);
    if (v110)
    {
      v111 = v110;
      operator delete(v110);
    }
    ++v86;
    v85 += 4;
  }
  while (v88 != v86);
  v79 = __p;
LABEL_66:
  if (v79)
    operator delete(v79);
  if (v107)
    operator delete(v107);
  return kdebug_trace();
}

void sub_223522B00(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2231874DC(v1 - 176);
  _Unwind_Resume(a1);
}

void sub_223522B14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32,uint64_t a33,void *a34,uint64_t a35)
{
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;

  if (__p)
  {
    operator delete(__p);
    v37 = a34;
    if (a34)
    {
LABEL_7:
      operator delete(v37);
      v38 = *(void **)v35;
      if (*(_QWORD *)v35)
      {
LABEL_8:
        *(_QWORD *)(v35 + 8) = v38;
        operator delete(v38);
        sub_2231874DC(v36 - 176);
        _Unwind_Resume(a1);
      }
LABEL_4:
      sub_2231874DC(v36 - 176);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v37 = a34;
    if (a34)
      goto LABEL_7;
  }
  v38 = *(void **)v35;
  if (*(_QWORD *)v35)
    goto LABEL_8;
  goto LABEL_4;
}

uint64_t sub_223522BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  float32x2_t *v6;
  int32x4_t v7;
  int32x4_t v8;
  float32x4_t v9;
  float32x2_t v10;
  int8x16_t v11;
  float32x2_t v12;
  int8x16_t v13;
  int8x16_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  int32x4_t v18;
  int v19;
  int v20;
  int v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  int v24;
  uint64_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  uint64_t v29;
  uint64_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  void *v39;
  void *v40;
  __int128 v41;
  __int128 v42;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  _BYTE v52[64];
  char v53;
  __int128 v54;
  __int128 v55;
  int v56;
  int v57;
  int v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  v54 = 0u;
  v55 = 0u;
  v56 = 728333828;
  kdebug_trace();
  v17.i32[3] = 0;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_DWORD *)(a3 + 48) = 1065353216;
  *(_DWORD *)(a3 + 68) = 1065353216;
  *(_DWORD *)(a3 + 88) = 1065353216;
  *(_DWORD *)(a3 + 108) = 1065353216;
  v52[0] = 0;
  v53 = 0;
  v6 = *(float32x2_t **)(a1 + 32);
  *(float32x2_t *)v7.i8 = v6[18];
  v7.i32[2] = v6[19].i32[0];
  *(float32x2_t *)v8.i8 = v6[20];
  v8.i32[2] = v6[21].i32[0];
  *(float32x2_t *)v9.f32 = v6[24];
  v9.i32[2] = v6[25].i32[0];
  v10 = (float32x2_t)vzip1q_s32(v7, v8).u64[0];
  v11 = (int8x16_t)vnegq_f32(v9);
  v12 = vmul_n_f32(v10, *(float *)v11.i32);
  *(float32x2_t *)v16.f32 = v10;
  v10.i32[0] = v6[23].i32[0];
  v13 = (int8x16_t)vtrn2q_s32(v7, v8);
  v13.i32[2] = HIDWORD(*(_QWORD *)&v6[22]);
  v14 = (int8x16_t)vzip2q_s32(v7, v8);
  v18 = (int32x4_t)v14;
  v18.i32[2] = v10.i32[0];
  *(float32x2_t *)v15.f32 = vmls_laneq_f32(vmls_lane_f32(v12, *(float32x2_t *)v13.i8, *(float32x2_t *)v9.f32, 1), *(float32x2_t *)v14.i8, v9, 2);
  v15.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(v6[22], *(float32x2_t *)v11.i8), (float32x2_t)vdup_lane_s32((int32x2_t)v6[22], 1), *(float32x2_t *)v9.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL), v10).u32[0]);
  v16.i64[1] = *(_QWORD *)&v6[22];
  v17.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v13, 0).i32[3];
  *(uint64_t *)((char *)v17.i64 + 4) = vextq_s8(v13, v14, 4uLL).u64[0];
  v18.i64[1] = vdupq_laneq_s32(v18, 2).u32[0];
  v19 = v6[70].u8[0];
  v20 = v6[110].u8[0];
  v21 = v6[122].u8[0];
  if (v6[70].i8[0] && v6[110].i8[0] && v6[122].i8[0] && v6[62].i8[1] && v6[34].i8[0] && v6[65].i8[4])
  {
    v22 = *(unsigned __int8 **)(a1 + 16);
    if (!v22[216] || !v22[208])
      goto LABEL_22;
    v44 = v16;
    v46 = (float32x4_t)v18;
    v48 = v15;
    v50 = v17;
    v23 = v22 + 192;
    v24 = sub_223C05798((uint64_t)(v22 + 24), v22 + 192);
    v25 = (*(uint64_t (**)(_QWORD, unsigned __int8 *))(**(_QWORD **)(a1 + 24) + 32))(*(_QWORD *)(a1 + 24), v23);
    v26 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)(v25 + 20))), v50, *(float32x2_t *)(v25 + 20), 1), v46, *(float32x4_t *)(v25 + 20), 2), v48, *(float32x4_t *)(v25 + 20), 3);
    v27 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)(v25 + 36))), v50, *(float32x2_t *)(v25 + 36), 1), v46, *(float32x4_t *)(v25 + 36), 2), v48, *(float32x4_t *)(v25 + 36), 3);
    v28 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)(v25 + 52))), v50, *(float32x2_t *)(v25 + 52), 1), v46, *(float32x4_t *)(v25 + 52), 2), v48, *(float32x4_t *)(v25 + 52), 3);
    *(float32x4_t *)v52 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)(v25 + 4))), v50, *(float32x2_t *)(v25 + 4), 1), v46, *(float32x4_t *)(v25 + 4), 2), v48, *(float32x4_t *)(v25 + 4), 3);
    *(float32x4_t *)&v52[16] = v26;
    *(float32x4_t *)&v52[32] = v27;
    *(float32x4_t *)&v52[48] = v28;
    v53 = 1;
  }
  else
  {
    memset(&v52[20], 0, 40);
    *(_OWORD *)&v52[4] = 0u;
    *(_DWORD *)v52 = 1065353216;
    *(_DWORD *)&v52[20] = 1065353216;
    *(_DWORD *)&v52[40] = 1065353216;
    *(_DWORD *)&v52[60] = 1065353216;
    v53 = 1;
    if (!v19 || !v6[41].i8[0] || (v24 = 0, v20) && v21)
    {
      v45 = v16;
      v47 = (float32x4_t)v18;
      v49 = v15;
      v51 = v17;
      v29 = *(_QWORD *)(a1 + 24);
      v59 = xmmword_2245F6D10;
      v30 = (*(uint64_t (**)(uint64_t, __int128 *))(*(_QWORD *)v29 + 32))(v29, &v59);
      v24 = 0;
      v31 = *(float32x4_t *)(v30 + 52);
      v32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v45, COERCE_FLOAT(*(_OWORD *)(v30 + 20))), v51, *(float32x2_t *)(v30 + 20), 1), v47, *(float32x4_t *)(v30 + 20), 2), v49, *(float32x4_t *)(v30 + 20), 3);
      v33 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v45, COERCE_FLOAT(*(_OWORD *)(v30 + 36))), v51, *(float32x2_t *)(v30 + 36), 1), v47, *(float32x4_t *)(v30 + 36), 2), v49, *(float32x4_t *)(v30 + 36), 3);
      *(float32x4_t *)v52 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v45, COERCE_FLOAT(*(_OWORD *)(v30 + 4))), v51, *(float32x2_t *)(v30 + 4), 1), v47, *(float32x4_t *)(v30 + 4), 2), v49, *(float32x4_t *)(v30 + 4), 3);
      *(float32x4_t *)&v52[16] = v32;
      *(float32x4_t *)&v52[32] = v33;
      *(float32x4_t *)&v52[48] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v45, v31.f32[0]), v51, *(float32x2_t *)v31.f32, 1), v47, v31, 2), v49, v31, 3);
    }
  }
  v34 = *(_QWORD *)(a1 + 32);
  v35 = *(_QWORD *)(a1 + 8);
  v36 = *(_QWORD *)(v35 + 48);
  v37 = *(_DWORD *)(v34 + 288);
  v58 = v24;
  v57 = v37;
  v38 = *(_QWORD *)(a1 + 264);
  if (!v38)
    sub_223198474();
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, int *, uint64_t, uint64_t, int *))(*(_QWORD *)v38 + 48))(&v59, v38, a2, a1 + 96, v35 + 112, v52, &v58, v34 + 16, v36, &v57);
  v39 = *(void **)a3;
  if (*(_QWORD *)a3)
  {
    *(_QWORD *)(a3 + 8) = v39;
    operator delete(v39);
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
  }
  *(_OWORD *)a3 = v59;
  *(_QWORD *)(a3 + 16) = v60;
  v60 = 0;
  v59 = 0uLL;
  v40 = *(void **)(a3 + 24);
  if (v40)
  {
    *(_QWORD *)(a3 + 32) = v40;
    operator delete(v40);
    *(_QWORD *)(a3 + 24) = 0;
    *(_QWORD *)(a3 + 32) = 0;
    *(_QWORD *)(a3 + 40) = 0;
    v40 = (void *)v59;
  }
  *(_OWORD *)(a3 + 24) = v61;
  *(_QWORD *)(a3 + 40) = v62;
  v62 = 0;
  v61 = 0uLL;
  v41 = v64;
  *(_OWORD *)(a3 + 48) = v63;
  *(_OWORD *)(a3 + 64) = v41;
  v42 = v66;
  *(_OWORD *)(a3 + 80) = v65;
  *(_OWORD *)(a3 + 96) = v42;
  if (v40)
  {
    *((_QWORD *)&v59 + 1) = v40;
    operator delete(v40);
  }
LABEL_22:
  sub_22367310C(a3);
  return kdebug_trace();
}

void sub_223522FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  sub_2233400F8(v29);
  sub_2231874DC((uint64_t)&a29);
  _Unwind_Resume(a1);
}

uint64_t sub_22352302C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  uint64_t *v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  __int16 v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  __int16 v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  __int16 v49;
  uint64_t v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  uint64_t (**v63)();
  uint64_t v64;
  std::__shared_weak_count *v65;
  uint64_t v66;
  __int128 v67;
  __int16 v68;
  uint64_t v69;
  std::__shared_weak_count *v70;
  std::__shared_weak_count *v71;
  std::__shared_weak_count *v72;
  __int128 v73;
  __int128 v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  void *__p[5];
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  uint64_t (**v83)();

  v73 = 0u;
  v74 = 0u;
  v75 = 728333852;
  kdebug_trace();
  v6 = (_BYTE *)a1[4];
  if ((!v6[560] || !v6[328] || v6[880] && v6[976])
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManager.cpp", 707, (uint64_t)"frame::SupportVolumetricEfficiencyPipeline(session_config_) && \"Expect volumetric efficiency pipeline\"", 102, (uint64_t)&unk_224589191, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v7 = a1[1];
  v10 = *(_QWORD *)(v7 + 64);
  v9 = v7 + 64;
  v8 = v10;
  if (!v10)
    goto LABEL_16;
  v11 = v9;
  do
  {
    v12 = *(_DWORD *)(v8 + 32);
    v13 = v12 < 0;
    if (v12 >= 0)
      v14 = (uint64_t *)v8;
    else
      v14 = (uint64_t *)(v8 + 8);
    if (!v13)
      v11 = v8;
    v8 = *v14;
  }
  while (*v14);
  if (v11 == v9 || *(int *)(v11 + 32) >= 1)
  {
LABEL_16:
    v15 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 144, (uint64_t)"iter != vol_bundle_store.end()", 30, (uint64_t)"Bundle not found.", 17, (void (*)(void **))sub_22457406C);
    v11 = v9;
    if (v15)
      abort();
  }
  (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v11 + 40) + 8) + 16))(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 8), a2);
  if (*(_BYTE *)(a3 + 1824))
  {
    v16 = a1[8];
    v63 = *(uint64_t (***)())(a2 + 1232);
    __p[0] = operator new(0x19uLL);
    *(_OWORD *)&__p[1] = xmmword_2245B9430;
    strcpy((char *)__p[0], "Volumetric.Preprocesing");
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t (***)(), uint64_t, uint64_t, void **))(*(_QWORD *)v16 + 16))(&v69, v16, &v63, a2 + 1336, a2 + 1240, __p);
    if (SHIBYTE(__p[2]) < 0)
    {
      operator delete(__p[0]);
      v17 = v69;
      if (!v69)
        goto LABEL_74;
    }
    else
    {
      v17 = v69;
      if (!v69)
        goto LABEL_74;
    }
    v63 = &off_24EC28BC8;
    v83 = &off_24EC217B0;
    sub_224498F50((_DWORD *)(v17 + 64), (uint64_t)__p);
    v18 = operator new();
    *(_QWORD *)v18 = &off_24EC217F8;
    *(_OWORD *)(v18 + 8) = *(_OWORD *)&__p[1];
    *(_OWORD *)(v18 + 20) = *(_OWORD *)((char *)&__p[2] + 4);
    *(_OWORD *)(v18 + 40) = v80;
    *(_QWORD *)(v18 + 56) = v81;
    *(_OWORD *)(v18 + 64) = v82;
    v76 = v18;
    v77 = v18;
    v19 = (std::__shared_weak_count *)operator new();
    v19->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC21890;
    v19->__shared_owners_ = 0;
    v19->__shared_weak_owners_ = 0;
    v19[1].__vftable = (std::__shared_weak_count_vtbl *)v18;
    v78 = v19;
    v76 = 0;
    sub_2232C24E8(&v64, &v77);
    v20 = v78;
    if (v78)
    {
      p_shared_owners = (unint64_t *)&v78->__shared_owners_;
      do
        v22 = __ldaxr(p_shared_owners);
      while (__stlxr(v22 - 1, p_shared_owners));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    v23 = v76;
    if (v76)
    {
      v24 = *(void **)(v76 + 48);
      if (v24)
        free(v24);
      *(_QWORD *)(v23 + 48) = 0;
      MEMORY[0x227684CE8](v23, 0x1091C406A8758A4);
    }
    sub_223523778(v69, (uint64_t)&v63);
    if (*(_BYTE *)(a3 + 688))
    {
      v26 = v64;
      v25 = v65;
      if (v65)
      {
        v27 = (unint64_t *)&v65->__shared_owners_;
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
        v29 = v68;
        do
          v30 = __ldxr(v27);
        while (__stxr(v30 + 1, v27));
        v31 = v66;
        *(_OWORD *)__p = v67;
        do
          v32 = __ldxr(v27);
        while (__stxr(v32 + 1, v27));
        do
          v33 = __ldaxr(v27);
        while (__stlxr(v33 - 1, v27));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
        do
          v34 = __ldaxr(v27);
        while (__stlxr(v34 - 1, v27));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      else
      {
        v29 = v68;
        v31 = v66;
        *(_OWORD *)__p = v67;
      }
      *(_QWORD *)(a3 + 640) = v26;
      v45 = *(std::__shared_weak_count **)(a3 + 648);
      *(_QWORD *)(a3 + 648) = v25;
      if (v45)
      {
        v46 = (unint64_t *)&v45->__shared_owners_;
        do
          v47 = __ldaxr(v46);
        while (__stlxr(v47 - 1, v46));
        if (!v47)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
      }
      *(_QWORD *)(a3 + 656) = v31;
      *(_OWORD *)(a3 + 664) = *(_OWORD *)__p;
      *(_WORD *)(a3 + 680) = v29;
      v63 = &off_24EC28BC8;
      v48 = v65;
      if (!v65)
        goto LABEL_74;
    }
    else
    {
      *(_QWORD *)(a3 + 632) = &off_24EC27198;
      v35 = v64;
      v36 = v65;
      if (v65)
      {
        v37 = (unint64_t *)&v65->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        v39 = v68;
        do
          v40 = __ldxr(v37);
        while (__stxr(v40 + 1, v37));
        v41 = v66;
        *(_OWORD *)(a3 + 664) = v67;
        do
          v42 = __ldxr(v37);
        while (__stxr(v42 + 1, v37));
        *(_QWORD *)(a3 + 640) = v35;
        *(_QWORD *)(a3 + 648) = v36;
        *(_QWORD *)(a3 + 656) = v41;
        *(_WORD *)(a3 + 680) = v39;
        do
          v43 = __ldaxr(v37);
        while (__stlxr(v43 - 1, v37));
        if (!v43)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
        do
          v44 = __ldaxr(v37);
        while (__stlxr(v44 - 1, v37));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      else
      {
        v49 = v68;
        v50 = v66;
        *(_QWORD *)(a3 + 640) = v64;
        *(_QWORD *)(a3 + 648) = 0;
        *(_QWORD *)(a3 + 656) = v50;
        *(_OWORD *)(a3 + 664) = v67;
        *(_WORD *)(a3 + 680) = v49;
      }
      *(_BYTE *)(a3 + 688) = 1;
      v63 = &off_24EC28BC8;
      v48 = v65;
      if (!v65)
        goto LABEL_74;
    }
    v51 = (unint64_t *)&v48->__shared_owners_;
    do
      v52 = __ldaxr(v51);
    while (__stlxr(v52 - 1, v51));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
LABEL_74:
    v53 = v72;
    if (v72)
    {
      v54 = (unint64_t *)&v72->__shared_owners_;
      do
        v55 = __ldaxr(v54);
      while (__stlxr(v55 - 1, v54));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
        std::__shared_weak_count::__release_weak(v53);
      }
    }
    v56 = v71;
    if (v71)
    {
      v57 = (unint64_t *)&v71->__shared_owners_;
      do
        v58 = __ldaxr(v57);
      while (__stlxr(v58 - 1, v57));
      if (!v58)
      {
        ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
        std::__shared_weak_count::__release_weak(v56);
      }
    }
    v59 = v70;
    if (v70)
    {
      v60 = (unint64_t *)&v70->__shared_owners_;
      do
        v61 = __ldaxr(v60);
      while (__stlxr(v61 - 1, v60));
      if (!v61)
      {
        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
        std::__shared_weak_count::__release_weak(v59);
      }
    }
  }
  return kdebug_trace();
}

void sub_223523690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43)
{
  uint64_t v43;

  sub_2232C2028(&a10);
  sub_223223EDC(&a17);
  if (!*(_BYTE *)(v43 + 1824))
  {
    sub_2231874DC((uint64_t)&a23);
    _Unwind_Resume(a1);
  }
  sub_2232555B8(v43);
  sub_2231874DC((uint64_t)&a23);
  _Unwind_Resume(a1);
}

void sub_223523750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  sub_2231874DC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223523764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  sub_2231874DC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_223523778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (!v4)
    {
LABEL_21:
      v25 = 0;
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
        goto LABEL_22;
LABEL_18:
      if (!v13)
        goto LABEL_37;
      goto LABEL_34;
    }
    goto LABEL_16;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    if (!v4)
      goto LABEL_21;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v4)
      goto LABEL_21;
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_16;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_16:
    if (!*(_BYTE *)(a1 + 81))
      goto LABEL_21;
    goto LABEL_17;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 81))
    goto LABEL_21;
LABEL_17:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_18;
LABEL_22:
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    if (!v13)
      goto LABEL_37;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    if (!v13)
      goto LABEL_37;
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (v18)
  {
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (*(_BYTE *)(a2 + 49))
        goto LABEL_35;
      goto LABEL_37;
    }
  }
LABEL_34:
  if (*(_BYTE *)(a2 + 49))
  {
LABEL_35:
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
    goto LABEL_38;
  }
LABEL_37:
  v24 = 0;
LABEL_38:
  sub_223526F4C(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_223523990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235239F4(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  uint64_t *v11;

  kdebug_trace();
  v4 = *(_BYTE **)(a1 + 32);
  if ((!v4[560] || !v4[328] || v4[880] && v4[976])
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManager.cpp", 728, (uint64_t)"frame::SupportVolumetricEfficiencyPipeline(session_config_) && \"Expect volumetric efficiency pipeline\"", 102, (uint64_t)&unk_224589191, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v5 = *(_QWORD *)(a1 + 8);
  v7 = v5 + 64;
  v6 = *(_QWORD *)(v5 + 64);
  if (!v6)
    goto LABEL_16;
  v8 = v5 + 64;
  do
  {
    v9 = *(_DWORD *)(v6 + 32);
    v10 = v9 < 0;
    if (v9 >= 0)
      v11 = (uint64_t *)v6;
    else
      v11 = (uint64_t *)(v6 + 8);
    if (!v10)
      v8 = v6;
    v6 = *v11;
  }
  while (*v11);
  if (v8 == v7 || *(int *)(v8 + 32) >= 1)
  {
LABEL_16:
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 144, (uint64_t)"iter != vol_bundle_store.end()", 30, (uint64_t)"Bundle not found.", 17, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
    v8 = v7;
  }
  (*(void (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(*(_QWORD *)(v8 + 40) + 8) + 24))(*(_QWORD *)(*(_QWORD *)(v8 + 40) + 8), a2, *(_QWORD *)(v5 + 16));
  return kdebug_trace();
}

void sub_223523B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2231874DC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223523B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2231874DC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223523BA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  if (*(_BYTE *)(a1 + 464))
  {
    v2 = *(_QWORD *)(a1 + 440);
    if (v2)
    {
      v3 = *(_QWORD *)(a1 + 448);
      v4 = *(void **)(a1 + 440);
      if (v3 != v2)
      {
        v5 = *(_QWORD *)(a1 + 448);
        do
        {
          v7 = *(void **)(v5 - 24);
          v5 -= 24;
          v6 = v7;
          if (v7)
          {
            *(_QWORD *)(v3 - 16) = v6;
            operator delete(v6);
          }
          v3 = v5;
        }
        while (v5 != v2);
        v4 = *(void **)(a1 + 440);
      }
      *(_QWORD *)(a1 + 448) = v2;
      operator delete(v4);
    }
  }
  if (*(_BYTE *)(a1 + 432))
  {
    v8 = *(void **)(a1 + 408);
    if (v8)
    {
      *(_QWORD *)(a1 + 416) = v8;
      operator delete(v8);
    }
  }
  if (*(_BYTE *)(a1 + 400))
  {
    v9 = *(void **)(a1 + 376);
    if (v9)
    {
      *(_QWORD *)(a1 + 384) = v9;
      operator delete(v9);
    }
  }
  v10 = *(void **)(a1 + 296);
  if (v10)
  {
    *(_QWORD *)(a1 + 304) = v10;
    operator delete(v10);
  }
}

void sub_223523C6C()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223523C80(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC44CE8;
  result[1] = v3;
  return result;
}

uint64_t sub_223523CB4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC44CE8;
  a2[1] = v2;
  return result;
}

uint64_t sub_223523CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char __p[18];
  char v11;

  v7 = *(_QWORD *)(a1 + 8);
  kdebug_trace();
  v8 = *(_QWORD *)(v7 + 64);
  v11 = 17;
  strcpy(__p, "KeyframingAdaptor");
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)v8 + 24))(v8, a2, a3, a4, __p);
  if (v11 < 0)
    operator delete(*(void **)__p);
  return kdebug_trace();
}

void sub_223523DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  kdebug_trace();
  _Unwind_Resume(a1);
}

uint64_t sub_223523DE4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d5recon3sng13MapperManager45UpdateMapperBundleWithClusterCoordinateResultERKNSt3__13mapINS_3"
                     "esn6random4UUIDERKNS0_5frame28ReferenceSystemManagerResultENS3_4lessIS7_EENS3_9allocatorINS3_4pairI"
                     "KS7_SB_EEEEEEENK3$_0clINS0_3vlm10BlockStoreEEEDaSB_RNS1_22VolumetricMapperBundleERT_RSG_iEUlRKNS3_6"
                     "chrono8durationIxNS3_5ratioILl1ELl1000000000EEEEERKNS3_6vectorIN3cva15SE3GroupStorageIfNS14_6Matrix"
                     "IfLj4ELj4ELb1EEEEENSE_IS18_EEEERKNS_3kit3cam13PinholeCameraIfLNS1E_11PixelOriginE1EEERKNS3_12basic_"
                     "stringIcNS3_11char_traitsIcEENSE_IcEEEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d5recon3sng13MapperManager45UpdateMapperBundleWithClusterCoordinateResultERKNSt3_"
                                "_13mapINS_3esn6random4UUIDERKNS0_5frame28ReferenceSystemManagerResultENS3_4lessIS7_EENS3"
                                "_9allocatorINS3_4pairIKS7_SB_EEEEEEENK3$_0clINS0_3vlm10BlockStoreEEEDaSB_RNS1_22Volumetr"
                                "icMapperBundleERT_RSG_iEUlRKNS3_6chrono8durationIxNS3_5ratioILl1ELl1000000000EEEEERKNS3_"
                                "6vectorIN3cva15SE3GroupStorageIfNS14_6MatrixIfLj4ELj4ELb1EEEEENSE_IS18_EEEERKNS_3kit3cam"
                                "13PinholeCameraIfLNS1E_11PixelOriginE1EEERKNS3_12basic_stringIcNS3_11char_traitsIcEENSE_IcEEEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d5recon3sng13MapperManager45UpdateMapperBundleWithClusterCoordinateResultERKNSt3__13mapINS_3esn6random4UUIDERKNS0_5frame28ReferenceSystemManagerResultENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_SB_EEEEEEENK3$_0clINS0_3vlm10BlockStoreEEEDaSB_RNS1_22VolumetricMapperBundleERT_RSG_iEUlRKNS3_6chrono8durationIxNS3_5ratioILl1ELl1000000000EEEEERKNS3_6vectorIN3cva15SE3GroupStorageIfNS14_6MatrixIfLj4ELj4ELb1EEEEENSE_IS18_EEEERKNS_3kit3cam13PinholeCameraIfLNS1E_11PixelOriginE1EEERKNS3_12basic_stringIcNS3_11char_traitsIcEENSE_IcEEEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d5recon3sng13MapperManager45UpdateMapperBundleWithClusterCoordinateResultERKNSt3__13mapINS_3esn6random4UUIDERKNS0_5frame28ReferenceSystemManagerResultENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_SB_EEEEEEENK3$_0clINS0_3vlm10BlockStoreEEEDaSB_RNS1_22VolumetricMapperBundleERT_RSG_iEUlRKNS3_6chrono8durationIxNS3_5ratioILl1ELl1000000000EEEEERKNS3_6vectorIN3cva15SE3GroupStorageIfNS14_6MatrixIfLj4ELj4ELb1EEEEENSE_IS18_EEEERKNS_3kit3cam13PinholeCameraIfLNS1E_11PixelOriginE1EEERKNS3_12basic_stringIcNS3_11char_traitsIcEENSE_IcEEEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223523E50()
{
  return &unk_24EC44D58;
}

uint64_t sub_223523E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE *v21;
  _BYTE *v22;
  int64_t v23;
  char *v24;
  char *v25;
  _BYTE *v26;
  _BYTE *v27;
  int64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 1832) = 0;
  if (*(_BYTE *)(a2 + 1832))
  {
    sub_223257000(a1 + 8, a2 + 8);
    *(_BYTE *)(a1 + 1832) = 1;
  }
  *(_BYTE *)(a1 + 1840) = 0;
  *(_BYTE *)(a1 + 1864) = 0;
  if (*(_BYTE *)(a2 + 1864))
  {
    sub_22345F4D8((_QWORD *)(a1 + 1840), (uint64_t **)(a2 + 1840));
    *(_BYTE *)(a1 + 1864) = 1;
  }
  sub_223260C0C((_QWORD *)(a1 + 1872), (uint64_t *)(a2 + 1872));
  *(_QWORD *)(a1 + 1912) = 0;
  *(_OWORD *)(a1 + 1896) = 0u;
  v4 = *(_QWORD *)(a2 + 1896);
  v5 = *(_QWORD *)(a2 + 1904);
  v6 = v5 - v4;
  if (v5 != v4)
  {
    v7 = 0xCF3CF3CF3CF3CF3DLL * (v6 >> 2);
    if (v7 >= 0x30C30C30C30C30DLL)
      sub_22316E078();
    v8 = (char *)operator new(v6);
    v9 = 0;
    *(_QWORD *)(a1 + 1896) = v8;
    *(_QWORD *)(a1 + 1904) = v8;
    *(_QWORD *)(a1 + 1912) = &v8[84 * v7];
    do
    {
      v10 = v4 + v9;
      v11 = &v8[v9];
      v12 = *(_OWORD *)(v4 + v9);
      v11[16] = *(_BYTE *)(v4 + v9 + 16);
      *(_OWORD *)v11 = v12;
      v13 = *(_OWORD *)(v4 + v9 + 20);
      v14 = *(_OWORD *)(v4 + v9 + 36);
      v15 = *(_OWORD *)(v4 + v9 + 52);
      *(_OWORD *)(v11 + 68) = *(_OWORD *)(v4 + v9 + 68);
      *(_OWORD *)(v11 + 52) = v15;
      *(_OWORD *)(v11 + 36) = v14;
      *(_OWORD *)(v11 + 20) = v13;
      v9 += 84;
    }
    while (v10 + 84 != v5);
    *(_QWORD *)(a1 + 1904) = &v8[v9];
  }
  v16 = *(_OWORD *)(a2 + 1920);
  v17 = *(_OWORD *)(a2 + 1936);
  *(_OWORD *)(a1 + 1952) = *(_OWORD *)(a2 + 1952);
  *(_OWORD *)(a1 + 1936) = v17;
  *(_OWORD *)(a1 + 1920) = v16;
  v18 = *(_OWORD *)(a2 + 1968);
  v19 = *(_OWORD *)(a2 + 1984);
  v20 = *(_OWORD *)(a2 + 2000);
  *(_QWORD *)(a1 + 2016) = *(_QWORD *)(a2 + 2016);
  *(_OWORD *)(a1 + 2000) = v20;
  *(_OWORD *)(a1 + 1984) = v19;
  *(_OWORD *)(a1 + 1968) = v18;
  *(_QWORD *)(a1 + 2024) = 0;
  *(_QWORD *)(a1 + 2040) = 0;
  *(_QWORD *)(a1 + 2032) = 0;
  v21 = *(_BYTE **)(a2 + 2024);
  v22 = *(_BYTE **)(a2 + 2032);
  v23 = v22 - v21;
  if (v22 != v21)
  {
    if (v23 < 0)
      sub_22316E078();
    v24 = (char *)operator new(v22 - v21);
    *(_QWORD *)(a1 + 2024) = v24;
    *(_QWORD *)(a1 + 2032) = v24;
    v25 = &v24[16 * (v23 >> 4)];
    *(_QWORD *)(a1 + 2040) = v25;
    memcpy(v24, v21, v23);
    *(_QWORD *)(a1 + 2032) = v25;
  }
  *(_QWORD *)(a1 + 2064) = 0;
  *(_OWORD *)(a1 + 2048) = 0u;
  v26 = *(_BYTE **)(a2 + 2048);
  v27 = *(_BYTE **)(a2 + 2056);
  v28 = v27 - v26;
  if (v27 != v26)
  {
    if (v28 < 0)
      sub_22316E078();
    v29 = (char *)operator new(v27 - v26);
    *(_QWORD *)(a1 + 2048) = v29;
    *(_QWORD *)(a1 + 2056) = v29;
    v30 = &v29[16 * (v28 >> 4)];
    *(_QWORD *)(a1 + 2064) = v30;
    memcpy(v29, v26, v28);
    *(_QWORD *)(a1 + 2056) = v30;
  }
  *(_BYTE *)(a1 + 2072) = 0;
  *(_BYTE *)(a1 + 2152) = 0;
  if (*(_BYTE *)(a2 + 2152))
  {
    *(_QWORD *)(a1 + 2072) = &off_24EC715B8;
    *(_QWORD *)(a1 + 2080) = *(_QWORD *)(a2 + 2080);
    v31 = *(_QWORD *)(a2 + 2088);
    *(_QWORD *)(a1 + 2088) = v31;
    if (v31)
    {
      v32 = (unint64_t *)(v31 + 8);
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
    }
    *(_QWORD *)(a1 + 2096) = &off_24EC715B8;
    *(_QWORD *)(a1 + 2104) = *(_QWORD *)(a2 + 2104);
    v34 = *(_QWORD *)(a2 + 2112);
    *(_QWORD *)(a1 + 2112) = v34;
    if (v34)
    {
      v35 = (unint64_t *)(v34 + 8);
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 1, v35));
    }
    *(_QWORD *)(a1 + 2120) = &off_24EC715B8;
    *(_QWORD *)(a1 + 2128) = *(_QWORD *)(a2 + 2128);
    v37 = *(_QWORD *)(a2 + 2136);
    *(_QWORD *)(a1 + 2136) = v37;
    if (v37)
    {
      v38 = (unint64_t *)(v37 + 8);
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
    }
    *(_QWORD *)(a1 + 2144) = *(_QWORD *)(a2 + 2144);
    *(_BYTE *)(a1 + 2152) = 1;
  }
  *(_QWORD *)(a1 + 2176) = 0;
  *(_OWORD *)(a1 + 2160) = 0u;
  v40 = *(_QWORD *)(a2 + 2160);
  v41 = *(_QWORD *)(a2 + 2168);
  v42 = v41 - v40;
  if (v41 != v40)
  {
    v43 = 0xCCCCCCCCCCCCCCCDLL * (v42 >> 5);
    if (v43 >= 0x19999999999999ALL)
      sub_22352449C();
    v44 = (char *)operator new(v42);
    v45 = 0;
    *(_QWORD *)(a1 + 2160) = v44;
    *(_QWORD *)(a1 + 2168) = v44;
    *(_QWORD *)(a1 + 2176) = &v44[160 * v43];
    do
    {
      v46 = &v44[v45];
      v47 = v40 + v45;
      *(_OWORD *)v46 = *(_OWORD *)(v40 + v45);
      v46[16] = 0;
      v46[152] = 0;
      if (*(_BYTE *)(v40 + v45 + 152))
      {
        *((_QWORD *)v46 + 2) = *(_QWORD *)(v47 + 16);
        v48 = *(_OWORD *)(v47 + 24);
        v49 = *(_OWORD *)(v47 + 40);
        v50 = *(_OWORD *)(v47 + 56);
        *(_OWORD *)(v46 + 72) = *(_OWORD *)(v47 + 72);
        *(_OWORD *)(v46 + 56) = v50;
        *(_OWORD *)(v46 + 40) = v49;
        *(_OWORD *)(v46 + 24) = v48;
        v51 = *(_OWORD *)(v47 + 88);
        v52 = *(_OWORD *)(v47 + 104);
        v53 = *(_OWORD *)(v47 + 120);
        *(_OWORD *)(v46 + 136) = *(_OWORD *)(v47 + 136);
        *(_OWORD *)(v46 + 120) = v53;
        *(_OWORD *)(v46 + 104) = v52;
        *(_OWORD *)(v46 + 88) = v51;
        v46[152] = 1;
      }
      v45 += 160;
    }
    while (v47 + 160 != v41);
    *(_QWORD *)(a1 + 2168) = &v44[v45];
  }
  *(_QWORD *)(a1 + 2184) = *(_QWORD *)(a2 + 2184);
  sub_2235244B0(a1 + 2192, a2 + 2192);
  *(_BYTE *)(a1 + 2320) = 0;
  *(_BYTE *)(a1 + 2512) = 0;
  if (*(_BYTE *)(a2 + 2512))
  {
    sub_2235245C4(a1 + 2320, a2 + 2320);
    *(_BYTE *)(a1 + 2512) = 1;
  }
  sub_223260C0C((_QWORD *)(a1 + 2520), (uint64_t *)(a2 + 2520));
  return a1;
}

void sub_2235242C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, char **a10)
{
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  uint64_t v14;
  void **v15;
  void **v16;
  uint64_t v17;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  if (*(_BYTE *)(v11 + 2512))
    sub_2235144E4(v14);
  sub_2235243EC(v17);
  v19 = *v16;
  if (*v16)
  {
    *(_QWORD *)(v11 + 2168) = v19;
    operator delete(v19);
  }
  sub_22328455C(v11 + 2072);
  v20 = *v15;
  if (*v15)
  {
    *(_QWORD *)(v11 + 2056) = v20;
    operator delete(v20);
  }
  v21 = *a9;
  if (*a9)
  {
    *(_QWORD *)(v11 + 2032) = v21;
    operator delete(v21);
  }
  v22 = *v13;
  if (*v13)
  {
    *(_QWORD *)(v11 + 1904) = v22;
    operator delete(v22);
  }
  sub_223473EA8(v12);
  sub_22347D6FC(a10);
  if (*(_BYTE *)(v11 + 1832))
    sub_2232555B8(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2235243EC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_BYTE *)(a1 + 120))
  {
    v2 = *(void **)(a1 + 32);
    if (v2)
    {
      *(_QWORD *)(a1 + 40) = v2;
      operator delete(v2);
    }
    v3 = *(_QWORD *)(a1 + 8);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      v5 = *(void **)(a1 + 8);
      if (v4 != v3)
      {
        do
        {
          v6 = *(std::__shared_weak_count **)(v4 - 224);
          if (v6)
          {
            p_shared_owners = (unint64_t *)&v6->__shared_owners_;
            do
              v8 = __ldaxr(p_shared_owners);
            while (__stlxr(v8 - 1, p_shared_owners));
            if (!v8)
            {
              ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
              std::__shared_weak_count::__release_weak(v6);
            }
          }
          v4 -= 248;
        }
        while (v4 != v3);
        v5 = *(void **)(a1 + 8);
      }
      *(_QWORD *)(a1 + 16) = v3;
      operator delete(v5);
    }
  }
  return a1;
}

void sub_22352449C()
{
  sub_22316DBD4("vector");
}

uint64_t sub_2235244B0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 120) = 0;
  if (*(_BYTE *)(a2 + 120))
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    sub_22347F1D8((_QWORD *)(a1 + 8), (uint64_t *)(a2 + 8));
    v4 = *(_OWORD *)(a2 + 56);
    v5 = *(_OWORD *)(a2 + 72);
    v6 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = v6;
    *(_OWORD *)(a1 + 72) = v5;
    *(_OWORD *)(a1 + 56) = v4;
    *(_BYTE *)(a1 + 120) = 1;
  }
  return a1;
}

void sub_223524530(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;
  char *v5;
  char *v6;
  void *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  if (*(_BYTE *)(v1 + 120))
  {
    v4 = *(void **)(v1 + 32);
    if (v4)
    {
      *(_QWORD *)(v1 + 40) = v4;
      operator delete(v4);
    }
    v5 = (char *)*v2;
    if (*v2)
    {
      v6 = *(char **)(v1 + 16);
      v7 = *v2;
      if (v6 != v5)
      {
        do
        {
          v8 = (std::__shared_weak_count *)*((_QWORD *)v6 - 28);
          if (v8)
          {
            p_shared_owners = (unint64_t *)&v8->__shared_owners_;
            do
              v10 = __ldaxr(p_shared_owners);
            while (__stlxr(v10 - 1, p_shared_owners));
            if (!v10)
            {
              ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
              std::__shared_weak_count::__release_weak(v8);
            }
          }
          v6 -= 248;
        }
        while (v6 != v5);
        v7 = *v2;
      }
      *(_QWORD *)(v1 + 16) = v5;
      operator delete(v7);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235245C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  if (*(_BYTE *)(a2 + 40))
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = a1 + 24;
    sub_2235246CC((uint64_t *)(a1 + 16), *(int **)(a2 + 16), (int *)(a2 + 24));
    *(_BYTE *)(a1 + 40) = 1;
  }
  sub_223524A70((_BYTE *)(a1 + 48), a2 + 48);
  return a1;
}

void sub_223524654(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD **v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  sub_223198030(v2, *(_QWORD **)(v1 + 24));
  if (*(_BYTE *)(v1 + 40))
    sub_223198030(v2, *v3);
  v5 = *(std::__shared_weak_count **)(v1 + 8);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_2235246CC(uint64_t *result, int *a2, int *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  int *v6;
  uint64_t *v7;
  uint64_t *v8;
  int *v9;
  uint64_t *v10;
  char *v11;
  int v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t *v15;
  int *v16;
  BOOL v17;
  uint64_t *v18;
  uint64_t *v19[9];

  if (a2 != a3)
  {
    v19[7] = v3;
    v19[8] = v4;
    v6 = a2;
    v7 = result;
    v8 = result + 1;
    do
    {
      result = sub_2235247E0((uint64_t **)v7, v8, v19, &v18, v6 + 7);
      if (*result)
      {
        v9 = (int *)*((_QWORD *)v6 + 1);
        if (v9)
          goto LABEL_11;
      }
      else
      {
        v10 = result;
        v11 = (char *)operator new(0x28uLL);
        v12 = v6[9];
        *(_QWORD *)(v11 + 28) = *(_QWORD *)(v6 + 7);
        *((_DWORD *)v11 + 9) = v12;
        v13 = v19[0];
        *(_QWORD *)v11 = 0;
        *((_QWORD *)v11 + 1) = 0;
        *((_QWORD *)v11 + 2) = v13;
        *v10 = (uint64_t)v11;
        v14 = *(_QWORD **)*v7;
        if (v14)
        {
          *v7 = (uint64_t)v14;
          v15 = (uint64_t *)*v10;
        }
        else
        {
          v15 = (uint64_t *)v11;
        }
        result = sub_2231A9A8C((uint64_t *)v7[1], v15);
        ++v7[2];
        v9 = (int *)*((_QWORD *)v6 + 1);
        if (v9)
        {
          do
          {
LABEL_11:
            v16 = v9;
            v9 = *(int **)v9;
          }
          while (v9);
          goto LABEL_3;
        }
      }
      do
      {
        v16 = (int *)*((_QWORD *)v6 + 2);
        v17 = *(_QWORD *)v16 == (_QWORD)v6;
        v6 = v16;
      }
      while (!v17);
LABEL_3:
      v6 = v16;
    }
    while (v16 != a3);
  }
  return result;
}

uint64_t *sub_2235247E0(uint64_t **a1, uint64_t *a2, uint64_t **a3, uint64_t **a4, int *a5)
{
  uint64_t **v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  BOOL v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  int v21;
  uint64_t *v22;
  int v23;
  int v24;
  uint64_t **v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  int v33;
  BOOL v34;
  int v35;
  int v36;
  uint64_t *v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;

  v5 = a1 + 1;
  if (a1 + 1 == (uint64_t **)a2)
    goto LABEL_9;
  v6 = *a5;
  v7 = *((_DWORD *)a2 + 7);
  if (*a5 == v7)
  {
    v8 = a5[1];
    v9 = *((_DWORD *)a2 + 8);
    v10 = v8 < v9;
    if (v8 == v9)
    {
      v8 = a5[2];
      v9 = *((_DWORD *)a2 + 9);
      v10 = v8 < v9;
    }
    if (!v10)
    {
      if (v9 >= v8)
      {
LABEL_7:
        *a3 = a2;
        *a4 = a2;
        return (uint64_t *)a4;
      }
      goto LABEL_41;
    }
LABEL_9:
    v12 = (uint64_t *)*a2;
    if (*a1 == a2)
    {
      v14 = a2;
    }
    else
    {
      if (v12)
      {
        v13 = (uint64_t *)*a2;
        do
        {
          v14 = v13;
          v13 = (uint64_t *)v13[1];
        }
        while (v13);
      }
      else
      {
        v15 = a2;
        do
        {
          v14 = (uint64_t *)v15[2];
          v16 = *v14 == (_QWORD)v15;
          v15 = v14;
        }
        while (v16);
      }
      v17 = *((_DWORD *)v14 + 7);
      v18 = *a5;
      v19 = v17 < *a5;
      if (v17 == *a5 && (v20 = *((_DWORD *)v14 + 8), v21 = a5[1], v19 = v20 < v21, v20 == v21))
      {
        if (*((_DWORD *)v14 + 9) >= a5[2])
        {
LABEL_20:
          v22 = *v5;
          if (!*v5)
          {
LABEL_67:
            *a3 = (uint64_t *)v5;
            return (uint64_t *)(a1 + 1);
          }
          v23 = a5[1];
          v24 = a5[2];
          while (1)
          {
            while (1)
            {
              v25 = (uint64_t **)v22;
              v26 = *((_DWORD *)v22 + 7);
              if (v18 == v26)
                break;
              if (v18 >= v26)
              {
                if (v26 >= v18)
                  goto LABEL_66;
                goto LABEL_33;
              }
LABEL_22:
              v22 = *v25;
              v5 = v25;
              if (!*v25)
                goto LABEL_66;
            }
            v27 = *((_DWORD *)v25 + 8);
            if (v23 != v27)
            {
              if (v23 >= v27)
              {
                if (v27 >= v23)
                  goto LABEL_66;
                goto LABEL_33;
              }
              goto LABEL_22;
            }
            v28 = *((_DWORD *)v25 + 9);
            if (v24 < v28)
              goto LABEL_22;
            if (v28 >= v24)
              goto LABEL_66;
LABEL_33:
            v5 = v25 + 1;
            v22 = v25[1];
            if (!v22)
            {
LABEL_66:
              *a3 = (uint64_t *)v25;
              return (uint64_t *)v5;
            }
          }
        }
      }
      else if (!v19)
      {
        goto LABEL_20;
      }
    }
    if (v12)
    {
      *a3 = v14;
      return v14 + 1;
    }
    else
    {
      *a3 = a2;
      return a2;
    }
  }
  if (v6 < v7)
    goto LABEL_9;
  if (v7 >= v6)
    goto LABEL_7;
LABEL_41:
  v29 = a2[1];
  if (v29)
  {
    v30 = (uint64_t *)a2[1];
    do
    {
      v31 = v30;
      v30 = (uint64_t *)*v30;
    }
    while (v30);
  }
  else
  {
    v32 = a2;
    do
    {
      v31 = (uint64_t *)v32[2];
      v16 = *v31 == (_QWORD)v32;
      v32 = v31;
    }
    while (!v16);
  }
  if (v31 != (uint64_t *)v5)
  {
    v33 = *((_DWORD *)v31 + 7);
    v34 = v6 < v33;
    if (v6 == v33 && (v35 = a5[1], v36 = *((_DWORD *)v31 + 8), v34 = v35 < v36, v35 == v36))
    {
      if (a5[2] >= *((_DWORD *)v31 + 9))
        goto LABEL_52;
    }
    else if (!v34)
    {
LABEL_52:
      v37 = *v5;
      if (*v5)
      {
        v38 = a5[1];
        v39 = a5[2];
        while (1)
        {
          while (1)
          {
            v25 = (uint64_t **)v37;
            v40 = *((_DWORD *)v37 + 7);
            if (v6 == v40)
              break;
            if (v6 >= v40)
            {
              if (v40 >= v6)
                goto LABEL_66;
              goto LABEL_65;
            }
LABEL_54:
            v37 = *v25;
            v5 = v25;
            if (!*v25)
              goto LABEL_66;
          }
          v41 = *((_DWORD *)v25 + 8);
          if (v38 != v41)
          {
            if (v38 >= v41)
            {
              if (v41 >= v38)
                goto LABEL_66;
              goto LABEL_65;
            }
            goto LABEL_54;
          }
          v42 = *((_DWORD *)v25 + 9);
          if (v39 < v42)
            goto LABEL_54;
          if (v42 >= v39)
            goto LABEL_66;
LABEL_65:
          v5 = v25 + 1;
          v37 = v25[1];
          if (!v37)
            goto LABEL_66;
        }
      }
      goto LABEL_67;
    }
  }
  if (v29)
  {
    *a3 = v31;
    return v31;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
}

_BYTE *sub_223524A70(_BYTE *a1, uint64_t a2)
{
  *a1 = 0;
  a1[136] = 0;
  if (*(_BYTE *)(a2 + 136))
  {
    sub_223524B3C((uint64_t)a1, a2);
    a1[136] = 1;
  }
  return a1;
}

void sub_223524AB8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  if (*(_BYTE *)(v1 + 136))
  {
    v3 = *(_QWORD **)(v1 + 24);
    if (v3)
    {
      v4 = *(_QWORD **)(v1 + 32);
      v5 = *(void **)(v1 + 24);
      if (v4 != v3)
      {
        do
          v4 = sub_223173E64(v4 - 45);
        while (v4 != v3);
        v5 = *(void **)(v1 + 24);
      }
      *(_QWORD *)(v1 + 32) = v3;
      operator delete(v5);
    }
    v6 = *(_QWORD **)v1;
    if (*(_QWORD *)v1)
    {
      v7 = *(_QWORD **)(v1 + 8);
      v8 = *(_QWORD **)v1;
      if (v7 != v6)
      {
        do
          v7 = sub_223173E64(v7 - 45);
        while (v7 != v6);
        v8 = *(_QWORD **)v1;
      }
      *(_QWORD *)(v1 + 8) = v6;
      operator delete(v8);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223524B3C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  sub_2231740C8(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), 0x4FA4FA4FA4FA4FA5 * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3));
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  sub_2231740C8(a1 + 24, *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), 0x4FA4FA4FA4FA4FA5 * ((uint64_t)(*(_QWORD *)(a2 + 32) - *(_QWORD *)(a2 + 24)) >> 3));
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v7;
  return a1;
}

void sub_223524BD8(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v3 = (_QWORD *)*v1;
  if (*v1)
  {
    v4 = (_QWORD *)v1[1];
    v5 = (_QWORD *)*v1;
    if (v4 != v3)
    {
      do
        v4 = sub_223173E64(v4 - 45);
      while (v4 != v3);
      v5 = (_QWORD *)*v1;
    }
    v1[1] = v3;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

char *sub_223524C1C(char **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;

  v3 = (a1[1] - *a1) >> 4;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 60)
    sub_22352449C();
  v5 = a1[2] - *a1;
  if (v5 >> 3 > v4)
    v4 = v5 >> 3;
  v6 = (unint64_t)v5 >= 0x7FFFFFFFFFFFFFF0;
  v7 = 0xFFFFFFFFFFFFFFFLL;
  if (!v6)
    v7 = v4;
  if (v7 >> 60)
    sub_223174E94();
  v9 = 16 * v7;
  v10 = (char *)operator new(16 * v7);
  v11 = &v10[16 * v3];
  *(_OWORD *)v11 = *(_OWORD *)a2;
  v12 = v11 + 16;
  v13 = &v10[v9];
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  v14 = *a1;
  v15 = a1[1];
  if (v15 == *a1)
  {
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v13;
  }
  else
  {
    do
    {
      v16 = *((_OWORD *)v15 - 1);
      v15 -= 16;
      *((_OWORD *)v11 - 1) = v16;
      v11 -= 16;
      *(_QWORD *)v15 = 0;
      *((_QWORD *)v15 + 1) = 0;
    }
    while (v15 != v14);
    v15 = *a1;
    v17 = a1[1];
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v13;
    while (v17 != v15)
    {
      v18 = (std::__shared_weak_count *)*((_QWORD *)v17 - 1);
      if (v18)
      {
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      v17 -= 16;
    }
  }
  if (v15)
    operator delete(v15);
  return v12;
}

void sub_223524D48(uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 48)
  {
    v4 = *(std::__shared_weak_count **)(i - 8);
    if (!v4)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      v7 = *(std::__shared_weak_count **)(i - 24);
      if (!v7)
        goto LABEL_14;
    }
    else
    {
LABEL_8:
      v7 = *(std::__shared_weak_count **)(i - 24);
      if (!v7)
        goto LABEL_14;
    }
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_14:
    v10 = *(std::__shared_weak_count **)(i - 40);
    if (v10)
    {
      v11 = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  a1[1] = v2;
}

double sub_223524E3C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  unsigned int v8;
  char *v9;
  double result;
  _BYTE v11[2512];
  __int128 v12;
  _BYTE __dst[2496];
  _BYTE v14[2496];

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v3 = 0;
  v4 = *(_QWORD *)(v0 + 2496);
  do
  {
    v5 = 4 * v4;
    v6 = v4 + 397;
    v4 = (v4 + 1) % 0x270;
    v7 = *(_DWORD *)(v0 + 4 * (v6 % 0x270)) ^ ((*(_DWORD *)(v0 + 4 * v4) & 0x7FFFFFFE | *(_DWORD *)(v0 + v5) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v0 + 4 * v4) << 31) >> 31) & 0x9908B0DF;
    *(_DWORD *)(v0 + v5) = v7;
    v8 = ((v7 ^ (v7 >> 11)) << 7) & 0x9D2C5680 ^ v7 ^ (v7 >> 11);
    *(_DWORD *)&v14[v3] = (v8 << 15) & 0xEFC60000 ^ v8 ^ (((v8 << 15) & 0xEFC60000 ^ v8) >> 18);
    v3 += 4;
  }
  while (v3 != 2496);
  *(_QWORD *)(v0 + 2496) = v4;
  memcpy(__dst, v14, sizeof(__dst));
  sub_2232D6424(__dst, (uint64_t)v11);
  v9 = (char *)operator new(0x9F8uLL);
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  *(_QWORD *)v9 = &off_24EC29A78;
  memcpy(v9 + 24, v11, 0x9C8uLL);
  *((_QWORD *)v9 + 316) = &off_24EC7A6B0;
  result = *(double *)&v12;
  *(_OWORD *)(v9 + 2536) = v12;
  *v2 = v9 + 24;
  v2[1] = v9;
  return result;
}

void sub_223524FA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2245658A0(v1 + 2504);
  _Unwind_Resume(a1);
}

void sub_223524FBC(int *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  int *v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t (**v10)();
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  int *v14;
  int *v15;
  int *v16;

  v3 = *a1;
  v4 = (int *)operator new(4uLL);
  v14 = v4;
  *v4 = v3;
  v15 = v4 + 1;
  v16 = v4 + 1;
  sub_224565790(&v14, &v12);
  if (v14)
  {
    v15 = v14;
    operator delete(v14);
  }
  v10 = &off_24EC7A6B0;
  v11 = v13;
  if (*((_QWORD *)&v13 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_2232D6564((_QWORD *)a2, (uint64_t)&v10);
  *(_QWORD *)(a2 + 2504) = &off_24EC7A6B0;
  *(_OWORD *)(a2 + 2512) = v11;
  v11 = 0uLL;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2235250A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2245658A0((uint64_t)va);
  sub_2245658A0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2235250C4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 - 40);
  if (v3)
  {
    *(_QWORD *)(v1 - 32) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_2235250E0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC44DA8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2235250F0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC44DA8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223525120(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  _QWORD *v21;
  void *v22;

  v2 = (_QWORD *)(a1 + 2536);
  v3 = *(_QWORD **)(a1 + 2560);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(void **)(a1 + 2488);
  if (v5)
  {
    *(_QWORD *)(a1 + 2496) = v5;
    operator delete(v5);
  }
  sub_223198030(a1 + 2464, *(_QWORD **)(a1 + 2472));
  sub_223198030(a1 + 2440, *(_QWORD **)(a1 + 2448));
  sub_223475E64(a1 + 2416, *(_QWORD **)(a1 + 2424));
  sub_22352532C(a1 + 2224, *(_QWORD **)(a1 + 2232));
  v6 = *(void **)(a1 + 2200);
  if (v6)
  {
    *(_QWORD *)(a1 + 2208) = v6;
    operator delete(v6);
  }
  v7 = *(_QWORD *)(a1 + 2160);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 2168);
    v9 = *(void **)(a1 + 2160);
    if (v8 != v7)
    {
      do
      {
        v10 = v8 - 24;
        sub_223198030(v8 - 24, *(_QWORD **)(v8 - 16));
        v8 = v10;
      }
      while (v10 != v7);
      v9 = *(void **)(a1 + 2160);
    }
    *(_QWORD *)(a1 + 2168) = v7;
    operator delete(v9);
  }
  *(_QWORD *)(a1 + 2104) = &off_24EC29028;
  v11 = *(std::__shared_weak_count **)(a1 + 2120);
  if (!v11)
    goto LABEL_19;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    *(_QWORD *)(a1 + 1984) = &off_24EC28BC8;
    v14 = *(std::__shared_weak_count **)(a1 + 2000);
    if (!v14)
      goto LABEL_25;
  }
  else
  {
LABEL_19:
    *(_QWORD *)(a1 + 1984) = &off_24EC28BC8;
    v14 = *(std::__shared_weak_count **)(a1 + 2000);
    if (!v14)
      goto LABEL_25;
  }
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
LABEL_25:
  sub_2232555B8(a1 + 160);
  v17 = *(_QWORD **)(a1 + 48);
  if (v17)
  {
    v18 = *(_QWORD **)(a1 + 56);
    v19 = *(void **)(a1 + 48);
    if (v18 != v17)
    {
      do
        v18 = sub_223173E64(v18 - 45);
      while (v18 != v17);
      v19 = *(void **)(a1 + 48);
    }
    *(_QWORD *)(a1 + 56) = v17;
    operator delete(v19);
  }
  v20 = *(_QWORD **)(a1 + 24);
  if (v20)
  {
    v21 = *(_QWORD **)(a1 + 32);
    v22 = *(void **)(a1 + 24);
    if (v21 != v20)
    {
      do
        v21 = sub_223173E64(v21 - 45);
      while (v21 != v20);
      v22 = *(void **)(a1 + 24);
    }
    *(_QWORD *)(a1 + 32) = v20;
    operator delete(v22);
  }
}

void sub_22352532C(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  if (a2)
  {
    sub_22352532C(a1, *a2);
    sub_22352532C(a1, a2[1]);
    v4 = (std::__shared_weak_count *)a2[8];
    if (!v4)
      goto LABEL_6;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      operator delete(a2);
    }
    else
    {
LABEL_6:
      operator delete(a2);
    }
  }
}

void sub_2235253B8()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235253CC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC44DF8;
  result[1] = v3;
  return result;
}

uint64_t sub_223525400(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC44DF8;
  a2[1] = v2;
  return result;
}

uint64_t sub_22352541C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int *a6, uint64_t a7, uint64_t a8, float *a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, float))(a1 + 8))(a2, a3, a4, a5, *a6, a7, a8, *a9);
}

uint64_t sub_22352544C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "PFN4cv3d5recon13VisibilityMapERKN3cva6MatrixIfLj3ELj1ELb1EEERNS0_7UUIDMapINS3_IiLj3ELj1ELb0EEENS0_6"
                     "Hash3DEEERKNS7_INS3_IiLj4ELj1ELb0EEENS0_6Hash4DEEERKNS2_15SE3GroupStorageIfNS3_IfLj4ELj4ELb1EEEEEiR"
                     "KNS0_19VisibilityMapConfigERKNS0_3vlm14ChunkMeshTableEfE")
    return a1 + 8;
  if (((v3 & (unint64_t)"PFN4cv3d5recon13VisibilityMapERKN3cva6MatrixIfLj3ELj1ELb1EEERNS0_7UUIDMapINS3_IiLj3ELj1E"
                                "Lb0EEENS0_6Hash3DEEERKNS7_INS3_IiLj4ELj1ELb0EEENS0_6Hash4DEEERKNS2_15SE3GroupStorageIfNS"
                                "3_IfLj4ELj4ELb1EEEEEiRKNS0_19VisibilityMapConfigERKNS0_3vlm14ChunkMeshTableEfE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "PFN4cv3d5recon13VisibilityMapERKN3cva6MatrixIfLj3ELj1ELb1EEERNS0_7UUIDMapINS3_IiLj3ELj1ELb0EEENS0_6Hash3DEEERKNS7_INS3_IiLj4ELj1ELb0EEENS0_6Hash4DEEERKNS2_15SE3GroupStorageIfNS3_IfLj4ELj4ELb1EEEEEiRKNS0_19VisibilityMapConfigERKNS0_3vlm14ChunkMeshTableEfE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"PFN4cv3d5recon13VisibilityMapERKN3cva6MatrixIfLj3ELj1ELb1EEERNS0_7UUIDMapINS3_IiLj3ELj1ELb0EEENS0_6Hash3DEEERKNS7_INS3_IiLj4ELj1ELb0EEENS0_6Hash4DEEERKNS2_15SE3GroupStorageIfNS3_IfLj4ELj4ELb1EEEEEiRKNS0_19VisibilityMapConfigERKNS0_3vlm14ChunkMeshTableEfE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235254B8()
{
  return &unk_24EC44E78;
}

void sub_2235254C8()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235254DC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC44EA8;
  result[1] = v3;
  return result;
}

uint64_t sub_223525510(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC44EA8;
  a2[1] = v2;
  return result;
}

uint64_t sub_22352552C(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int16 *a7, float *a8)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, float))(a1 + 8))(a2, *a3, a4, a5, a6, *a7, *a8);
}

uint64_t sub_223525558(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "PFNSt3__16vectorIPKjNS_9allocatorIS2_EEEERKNS_13unordered_mapIN3cva6MatrixIiLj4ELj1ELb0EEEjN4cv3d5r"
                     "econ6Hash4DENS_8equal_toIS9_EENS3_INS_4pairIKS9_jEEEEEEiRKNSB_10DepthRangeERKNS7_15SE3GroupStorageI"
                     "fNS8_IfLj4ELj4ELb1EEEEERKNSA_3kit3cam13PinholeCameraIfLNSV_11PixelOriginE1EEEtfE")
    return a1 + 8;
  if (((v3 & (unint64_t)"PFNSt3__16vectorIPKjNS_9allocatorIS2_EEEERKNS_13unordered_mapIN3cva6MatrixIiLj4ELj1ELb0E"
                                "EEjN4cv3d5recon6Hash4DENS_8equal_toIS9_EENS3_INS_4pairIKS9_jEEEEEEiRKNSB_10DepthRangeERK"
                                "NS7_15SE3GroupStorageIfNS8_IfLj4ELj4ELb1EEEEERKNSA_3kit3cam13PinholeCameraIfLNSV_11PixelOriginE1EEEtfE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "PFNSt3__16vectorIPKjNS_9allocatorIS2_EEEERKNS_13unordered_mapIN3cva6MatrixIiLj4ELj1ELb0EEEjN4cv3d5recon6Hash4DENS_8equal_toIS9_EENS3_INS_4pairIKS9_jEEEEEEiRKNSB_10DepthRangeERKNS7_15SE3GroupStorageIfNS8_IfLj4ELj4ELb1EEEEERKNSA_3kit3cam13PinholeCameraIfLNSV_11PixelOriginE1EEEtfE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"PFNSt3__16vectorIPKjNS_9allocatorIS2_EEEERKNS_13unordered_mapIN3cva6MatrixIiLj4ELj1ELb0EEEjN4cv3d5recon6Hash4DENS_8equal_toIS9_EENS3_INS_4pairIKS9_jEEEEEEiRKNSB_10DepthRangeERKNS7_15SE3GroupStorageIfNS8_IfLj4ELj4ELb1EEEEERKNSA_3kit3cam13PinholeCameraIfLNSV_11PixelOriginE1EEEtfE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235255C4()
{
  return &unk_24EC44F28;
}

void sub_2235255D4()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235255E8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC44F58;
  result[1] = v3;
  return result;
}

uint64_t sub_22352561C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC44F58;
  a2[1] = v2;
  return result;
}

uint64_t sub_223525638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, float *a5, unsigned int *a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, float))(a1 + 8))(a2, a3, a4, *a6, *a5);
}

uint64_t sub_223525658(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "PFNSt3__16vectorIN4cv3d3esn6random4UUIDENS_9allocatorIS4_EEEERKN3cva15SE3GroupStorageIfNS8_6MatrixI"
                     "fLj4ELj4ELb1EEEEERKNSA_IfLj3ELj1ELb1EEERNS1_5recon7UUIDMapINSA_IiLj4ELj1ELb0EEENSI_6Hash4DEEEfiE")
    return a1 + 8;
  if (((v3 & (unint64_t)"PFNSt3__16vectorIN4cv3d3esn6random4UUIDENS_9allocatorIS4_EEEERKN3cva15SE3GroupStorageIfN"
                                "S8_6MatrixIfLj4ELj4ELb1EEEEERKNSA_IfLj3ELj1ELb1EEERNS1_5recon7UUIDMapINSA_IiLj4ELj1ELb0E"
                                "EENSI_6Hash4DEEEfiE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "PFNSt3__16vectorIN4cv3d3esn6random4UUIDENS_9allocatorIS4_EEEERKN3cva15SE3GroupStorageIfNS8_6MatrixIfLj4ELj4ELb1EEEEERKNSA_IfLj3ELj1ELb1EEERNS1_5recon7UUIDMapINSA_IiLj4ELj1ELb0EEENSI_6Hash4DEEEfiE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"PFNSt3__16vectorIN4cv3d3esn6random4UUIDENS_9allocatorIS4_EEEERKN3cva15SE3GroupStorageIfNS8_6MatrixIfLj4ELj4ELb1EEEEERKNSA_IfLj3ELj1ELb1EEERNS1_5recon7UUIDMapINSA_IiLj4ELj1ELb0EEENSI_6Hash4DEEEfiE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235256C4()
{
  return &unk_24EC44FD8;
}

void sub_2235256D4()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235256E8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC45008;
  result[1] = v3;
  return result;
}

uint64_t sub_22352571C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC45008;
  a2[1] = v2;
  return result;
}

uint64_t sub_223525738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, unsigned __int8 *a6, unsigned __int8 *a7, _QWORD *a8, _QWORD *a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(a1 + 8))(a2, a3, a4, *a5, *a6, *a7, *a8, a8[1], *a9, a9[1]);
}

uint64_t sub_223525784(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS2_3vlm14ChunkMeshTableERKNS2_7UU"
                     "IDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERKNSC_15SE3GroupStorageIfNSD_IfLj4ELj4ELb1EEEEEbbbN"
                     "S1_3esn11OptionalRefIKNS_3mapIiNSO_6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSS_EEEEEEEENSP_IKNSQ_IS"
                     "S_NS2_5frame28ReferenceSystemManagerResultENST_ISS_EENS4_INSV_IKSS_S13_EEEEEEEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS2_3vlm14ChunkMeshTabl"
                                "eERKNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERKNSC_15SE3GroupStorageIfNSD_"
                                "IfLj4ELj4ELb1EEEEEbbbNS1_3esn11OptionalRefIKNS_3mapIiNSO_6random4UUIDENS_4lessIiEENS4_IN"
                                "S_4pairIKiSS_EEEEEEEENSP_IKNSQ_ISS_NS2_5frame28ReferenceSystemManagerResultENST_ISS_EENS"
                                "4_INSV_IKSS_S13_EEEEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS2_3vlm14ChunkMeshTableERKNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERKNSC_15SE3GroupStorageIfNSD_IfLj4ELj4ELb1EEEEEbbbNS1_3esn11OptionalRefIKNS_3mapIiNSO_6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSS_EEEEEEEENSP_IKNSQ_ISS_NS2_5frame28ReferenceSystemManagerResultENST_ISS_EENS4_INSV_IKSS_S13_EEEEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS2_3vlm14ChunkMeshTableERKNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERKNSC_15SE3GroupStorageIfNSD_IfLj4ELj4ELb1EEEEEbbbNS1_3esn11OptionalRefIKNS_3mapIiNSO_6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSS_EEEEEEEENSP_IKNSQ_ISS_NS2_5frame28ReferenceSystemManagerResultENST_ISS_EENS4_INSV_IKSS_S13_EEEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235257F0()
{
  return &unk_24EC45088;
}

void sub_223525800()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223525814(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC450B8;
  result[1] = v3;
  return result;
}

uint64_t sub_223525848(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC450B8;
  a2[1] = v2;
  return result;
}

uint64_t sub_223525864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, unsigned __int8 *a6, _QWORD *a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(a1 + 8))(a2, a3, a4, *a5, *a6, *a7, a7[1]);
}

uint64_t sub_2235258A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS2_3vlm14ChunkMeshTableERNS2_7UUI"
                     "DMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERKNSC_15SE3GroupStorageIfNSD_IfLj4ELj4ELb1EEEEEbbNS1"
                     "_3esn11OptionalRefIKNS_3mapIiNSN_6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSR_EEEEEEEENSO_IKNSP_ISR_"
                     "NS2_5frame28ReferenceSystemManagerResultENSS_ISR_EENS4_INSU_IKSR_S12_EEEEEEEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS2_3vlm14ChunkMeshTabl"
                                "eERNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERKNSC_15SE3GroupStorageIfNSD_I"
                                "fLj4ELj4ELb1EEEEEbbNS1_3esn11OptionalRefIKNS_3mapIiNSN_6random4UUIDENS_4lessIiEENS4_INS_"
                                "4pairIKiSR_EEEEEEEENSO_IKNSP_ISR_NS2_5frame28ReferenceSystemManagerResultENSS_ISR_EENS4_"
                                "INSU_IKSR_S12_EEEEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS2_3vlm14ChunkMeshTableERNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERKNSC_15SE3GroupStorageIfNSD_IfLj4ELj4ELb1EEEEEbbNS1_3esn11OptionalRefIKNS_3mapIiNSN_6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSR_EEEEEEEENSO_IKNSP_ISR_NS2_5frame28ReferenceSystemManagerResultENSS_ISR_EENS4_INSU_IKSR_S12_EEEEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS2_3vlm14ChunkMeshTableERNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERKNSC_15SE3GroupStorageIfNSD_IfLj4ELj4ELb1EEEEEbbNS1_3esn11OptionalRefIKNS_3mapIiNSN_6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSR_EEEEEEEENSO_IKNSP_ISR_NS2_5frame28ReferenceSystemManagerResultENSS_ISR_EENS4_INSU_IKSR_S12_EEEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223525914()
{
  return &unk_24EC45138;
}

void sub_223525924()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223525938(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC45168;
  result[1] = v3;
  return result;
}

uint64_t sub_22352596C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC45168;
  a2[1] = v2;
  return result;
}

uint64_t sub_223525988(uint64_t a1, uint64_t a2, unsigned __int8 *a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, _QWORD *a11, _QWORD *a12)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(a1 + 8))(a2, *a3, *a4, a5, a6, a7, a8, a9, *a10, a10[1], *a11, a11[1], *a12, a12[1]);
}

uint64_t sub_2235259EC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERNS2_3sng21MapperBundleContainerEbbR"
                     "NS2_3vlm10BlockStoreERNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERNSA_14ChunkMeshTableE"
                     "RN5petal12CommandQueueERKNSE_15SE3GroupStorageIfNSF_IfLj4ELj4ELb1EEEEENS1_3esn11OptionalRefIKNS_3ma"
                     "pIiNSU_6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSY_EEEEEEEENSV_IKNSW_ISY_NS2_5frame28ReferenceSyste"
                     "mManagerResultENSZ_ISY_EENS4_INS11_IKSY_S19_EEEEEEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1"
                     "ELl1000000000EEEEEEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERNS2_3sng21MapperBundleCo"
                                "ntainerEbbRNS2_3vlm10BlockStoreERNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEE"
                                "RNSA_14ChunkMeshTableERN5petal12CommandQueueERKNSE_15SE3GroupStorageIfNSF_IfLj4ELj4ELb1E"
                                "EEEENS1_3esn11OptionalRefIKNS_3mapIiNSU_6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSY_EEEE"
                                "EEEENSV_IKNSW_ISY_NS2_5frame28ReferenceSystemManagerResultENSZ_ISY_EENS4_INS11_IKSY_S19_"
                                "EEEEEEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERNS2_3sng21MapperBundleContainerEbbRNS2_3vlm10BlockStoreERNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERNSA_14ChunkMeshTableERN5petal12CommandQueueERKNSE_15SE3GroupStorageIfNSF_IfLj4ELj4ELb1EEEEENS1_3esn11OptionalRefIKNS_3mapIiNSU_6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSY_EEEEEEEENSV_IKNSW_ISY_NS2_5frame28ReferenceSystemManagerResultENSZ_ISY_EENS4_INS11_IKSY_S19_EEEEEEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERNS2_3sng21MapperBundleContainerEbbRNS2_3vlm10BlockStoreERNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERNSA_14ChunkMeshTableERN5petal12CommandQueueERKNSE_15SE3GroupStorageIfNSF_IfLj4ELj4ELb1EEEEENS1_3esn11OptionalRefIKNS_3mapIiNSU_6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSY_EEEEEEEENSV_IKNSW_ISY_NS2_5frame28ReferenceSystemManagerResultENSZ_ISY_EENS4_INS11_IKSY_S19_EEEEEEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223525A58()
{
  return &unk_24EC451E8;
}

void sub_223525A68()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223525A7C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC45218;
  result[1] = v3;
  return result;
}

uint64_t sub_223525AB0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC45218;
  a2[1] = v2;
  return result;
}

uint64_t sub_223525ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 *a7, unsigned __int8 *a8, unsigned __int8 *a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))(a1 + 8))(a2, a3, a4, a5, a6, *a7, *a8, *a9, a10);
}

uint64_t sub_223525B00(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS_3mapIiNS1_3esn6random4UUIDENS_4"
                     "lessIiEENS4_INS_4pairIKiSA_EEEEEESJ_RKNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERNS2_3"
                     "vlm14ChunkMeshTableERNSS_10BlockStoreENS2_5frame26GlobalAnchorTrackingStatusEbbRmE")
    return a1 + 8;
  if (((v3 & (unint64_t)"PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS_3mapIiNS1_3esn6rando"
                                "m4UUIDENS_4lessIiEENS4_INS_4pairIKiSA_EEEEEESJ_RKNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0E"
                                "EENS2_6Hash4DEEERNS2_3vlm14ChunkMeshTableERNSS_10BlockStoreENS2_5frame26GlobalAnchorTrac"
                                "kingStatusEbbRmE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS_3mapIiNS1_3esn6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSA_EEEEEESJ_RKNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERNS2_3vlm14ChunkMeshTableERNSS_10BlockStoreENS2_5frame26GlobalAnchorTrackingStatusEbbRmE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"PFNSt3__16vectorIN4cv3d5recon10MeshIdPairENS_9allocatorIS3_EEEERKNS_3mapIiNS1_3esn6random4UUIDENS_4lessIiEENS4_INS_4pairIKiSA_EEEEEESJ_RKNS2_7UUIDMapIN3cva6MatrixIiLj4ELj1ELb0EEENS2_6Hash4DEEERNS2_3vlm14ChunkMeshTableERNSS_10BlockStoreENS2_5frame26GlobalAnchorTrackingStatusEbbRmE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223525B6C()
{
  return &unk_24EC45298;
}

void sub_223525B78(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC452C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223525B88(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC452C8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223525BB8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 40);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t *sub_223525C14(_QWORD *a1, uint64_t *a2, uint64_t **a3, uint64_t **a4, int a5)
{
  uint64_t *v5;
  int v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  BOOL v14;
  uint64_t v15;
  uint64_t *v16;
  int v17;
  uint64_t *v19;
  uint64_t v20;
  int v21;

  v5 = a1 + 1;
  if (a1 + 1 == a2 || (v6 = *((_DWORD *)a2 + 7), v6 > a5))
  {
    v7 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      v9 = a2;
LABEL_18:
      if (v7)
      {
        *a3 = v9;
        return v9 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v7)
    {
      v8 = (uint64_t *)*a2;
      do
      {
        v9 = v8;
        v8 = (uint64_t *)v8[1];
      }
      while (v8);
    }
    else
    {
      v13 = a2;
      do
      {
        v9 = (uint64_t *)v13[2];
        v14 = *v9 == (_QWORD)v13;
        v13 = v9;
      }
      while (v14);
    }
    if (*((_DWORD *)v9 + 7) < a5)
      goto LABEL_18;
    v15 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          v16 = (uint64_t *)v15;
          v17 = *(_DWORD *)(v15 + 28);
          if (v17 <= a5)
            break;
          v15 = *v16;
          v5 = v16;
          if (!*v16)
            goto LABEL_22;
        }
        if (v17 >= a5)
          break;
        v5 = v16 + 1;
        v15 = v16[1];
      }
      while (v15);
    }
    else
    {
      v16 = a1 + 1;
    }
LABEL_22:
    *a3 = v16;
    return v5;
  }
  if (v6 >= a5)
  {
    *a3 = a2;
    *a4 = a2;
    return (uint64_t *)a4;
  }
  v10 = a2[1];
  if (v10)
  {
    v11 = (uint64_t *)a2[1];
    do
    {
      v12 = v11;
      v11 = (uint64_t *)*v11;
    }
    while (v11);
  }
  else
  {
    v19 = a2;
    do
    {
      v12 = (uint64_t *)v19[2];
      v14 = *v12 == (_QWORD)v19;
      v19 = v12;
    }
    while (!v14);
  }
  if (v12 != v5 && *((_DWORD *)v12 + 7) <= a5)
  {
    v20 = *v5;
    if (!*v5)
    {
      *a3 = v5;
      return a1 + 1;
    }
    do
    {
      while (1)
      {
        v16 = (uint64_t *)v20;
        v21 = *(_DWORD *)(v20 + 28);
        if (v21 <= a5)
          break;
        v20 = *v16;
        v5 = v16;
        if (!*v16)
          goto LABEL_22;
      }
      if (v21 >= a5)
        break;
      v5 = v16 + 1;
      v20 = v16[1];
    }
    while (v20);
    goto LABEL_22;
  }
  if (v10)
  {
    *a3 = v12;
    return v12;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
}

void sub_223525DA8()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223525DBC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC45318;
  result[1] = v3;
  return result;
}

uint64_t sub_223525DF0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC45318;
  a2[1] = v2;
  return result;
}

uint64_t sub_223525E0C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X1>, float32x4_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t *v6;
  _QWORD *v7;
  int32x4_t v8;
  int32x4_t v9;
  float32x2_t v10;
  float32x4_t v11;
  _QWORD *v12;
  float32x2_t *v13;
  __int32 v14;
  uint64_t v15;
  _QWORD *v16;
  float32x2_t v17;
  int8x16_t v18;
  float32x2_t v19;
  float32x4_t v20;
  int8x16_t v21;
  int32x4_t v22;
  float32x4_t v23;
  int32x4_t v24;
  int8x16_t v25;
  float32x4_t v26;
  uint64_t v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t *v37;
  float32x4_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  float32x4_t *v44;
  float32x4_t *v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t *v53;
  float32x4_t *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  float32x4_t *v60;
  float32x4_t *v61;
  float32x4_t v62;
  float32x4_t v63;
  float32x4_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _BYTE *v72;
  char *v73;
  int64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  _OWORD *v79;
  char *v80;
  uint64_t v81;
  __int128 v82;
  int v83;
  _QWORD *v84;
  _QWORD *v85;
  BOOL v86;
  unint64_t v87;
  _QWORD *v88;
  char *v89;
  float32x4_t *v90;
  float32x4_t v91;
  float32x4_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  __int128 *v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  unint64_t v109;
  unsigned __int8 v110;
  unsigned __int8 v111;
  unsigned __int8 v112;
  unsigned __int8 v113;
  uint64_t i;
  uint64_t v115;
  uint64_t j;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  char *v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  unint64_t v138;
  uint64_t k;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  char *v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  float32x2_t *v168;
  _QWORD *v169;
  float32x4_t v170;
  float32x4_t v171;
  float32x4_t v172;
  float32x4_t v173;
  _QWORD *v174;
  float32x4_t v175;
  float32x4_t v176;
  uint64_t v177;
  float32x4_t v178;
  float32x4_t v179;
  float32x4_t v181;
  float32x4_t v182;
  uint64_t v183;
  float32x4_t v184;
  float32x4_t v185;
  uint64_t v186;
  uint64_t v187;
  float32x4_t v188;
  float32x4_t v189;
  char *v190;
  uint64_t *v191;
  float32x4_t v192;
  float32x4_t v193;
  int64_t v194;
  char *v195;
  char *v196;
  char *v197;
  float32x4_t *v198;
  float32x4_t *v199;
  float32x4_t *v200;
  float32x4_t *v201;
  float32x4_t *v202;
  float32x4_t *v203;
  _QWORD v204[2];
  char *v205;
  _BYTE *v206;
  _BYTE *v207;
  __int32 v208;
  __int16 v209[5];

  v6 = a5;
  v7 = *(_QWORD **)(result + 8);
  if (*a2 && v7[11] > *a2)
  {
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
    return result;
  }
  kdebug_trace();
  *v6 = 0;
  v6[1] = 0;
  v6[2] = 0;
  v12 = *(_QWORD **)(v7[1] + 48);
  v13 = (float32x2_t *)v7[4];
  v14 = v13[36].i32[0];
  v201 = 0;
  v202 = 0;
  v203 = 0;
  v198 = 0;
  v199 = 0;
  v200 = 0;
  v195 = 0;
  v196 = 0;
  v197 = 0;
  v191 = v6;
  v168 = v13;
  v169 = v7;
  if (v13[70].i8[0] && v13[41].i8[0] && (!v13[110].i8[0] || !v13[122].i8[0]))
  {
    v89 = (char *)operator new(0x40uLL);
    *(_DWORD *)v89 = 1065353216;
    *(_QWORD *)(v89 + 12) = 0;
    *(_QWORD *)(v89 + 4) = 0;
    *((_DWORD *)v89 + 5) = 1065353216;
    *((_QWORD *)v89 + 3) = 0;
    *((_QWORD *)v89 + 4) = 0;
    *((_DWORD *)v89 + 10) = 1065353216;
    *(_QWORD *)(v89 + 52) = 0;
    *(_QWORD *)(v89 + 44) = 0;
    *((_DWORD *)v89 + 15) = 1065353216;
    v201 = (float32x4_t *)v89;
    v90 = (float32x4_t *)operator new(0x40uLL);
    v91 = a3[1];
    *v90 = *a3;
    v90[1] = v91;
    v92 = a3[3];
    v90[2] = a3[2];
    v90[3] = v92;
    v198 = v90;
    v93 = (char *)operator new(4uLL);
    *(_DWORD *)v93 = 0;
    v195 = v93;
    v87 = 4;
    v88 = v7;
    goto LABEL_76;
  }
  v15 = v7[2];
  v16 = *(_QWORD **)(v15 + 24);
  v174 = (_QWORD *)(v15 + 32);
  if (v16 != (_QWORD *)(v15 + 32))
  {
    *(float32x2_t *)v8.i8 = v13[18];
    v8.i32[2] = v13[19].i32[0];
    *(float32x2_t *)v9.i8 = v13[20];
    v9.i32[2] = v13[21].i32[0];
    v10.i32[0] = v13[23].i32[0];
    v17 = (float32x2_t)vzip1q_s32(v8, v9).u64[0];
    *(float32x2_t *)v11.f32 = v13[24];
    v11.i32[2] = v13[25].i32[0];
    v18 = (int8x16_t)vnegq_f32(v11);
    v19 = vmul_n_f32(v17, *(float *)v18.i32);
    *(float32x2_t *)v20.f32 = v17;
    v21 = (int8x16_t)vtrn2q_s32(v8, v9);
    v21.i32[2] = HIDWORD(*(_QWORD *)&v13[22]);
    v22 = vzip2q_s32(v8, v9);
    *(float32x2_t *)v23.f32 = vmls_laneq_f32(vmls_lane_f32(v19, *(float32x2_t *)v21.i8, *(float32x2_t *)v11.f32, 1), *(float32x2_t *)v22.i8, v11, 2);
    v24 = v22;
    v24.i32[2] = v10.i32[0];
    v25 = (int8x16_t)vdupq_laneq_s32(v24, 2);
    v23.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(v13[22], *(float32x2_t *)v18.i8), (float32x2_t)vdup_lane_s32((int32x2_t)v13[22], 1), *(float32x2_t *)v11.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL), v10).u32[0]);
    v20.i64[1] = *(_QWORD *)&v13[22];
    v26.i32[3] = 0;
    v26.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v21, 0).i32[3];
    *(uint64_t *)((char *)v26.i64 + 4) = vextq_s8(v21, v25, 4uLL).u64[0];
    v170 = v26;
    v27 = v7[3];
    v24.i64[1] = v25.u32[0];
    v171 = (float32x4_t)v24;
    v172 = v20;
    v173 = v23;
    while (1)
    {
      v28 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v27 + 32))(v27, v16 + 4);
      v29 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v172, COERCE_FLOAT(*(_OWORD *)(v28 + 4))), v170, *(float32x2_t *)(v28 + 4), 1), v171, *(float32x4_t *)(v28 + 4), 2), v173, *(float32x4_t *)(v28 + 4), 3);
      v30 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v172, COERCE_FLOAT(*(_OWORD *)(v28 + 20))), v170, *(float32x2_t *)(v28 + 20), 1), v171, *(float32x4_t *)(v28 + 20), 2), v173, *(float32x4_t *)(v28 + 20), 3);
      v31 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v172, COERCE_FLOAT(*(_OWORD *)(v28 + 36))), v170, *(float32x2_t *)(v28 + 36), 1), v171, *(float32x4_t *)(v28 + 36), 2), v173, *(float32x4_t *)(v28 + 36), 3);
      v32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v172, COERCE_FLOAT(*(_OWORD *)(v28 + 52))), v170, *(float32x2_t *)(v28 + 52), 1), v171, *(float32x4_t *)(v28 + 52), 2), v173, *(float32x4_t *)(v28 + 52), 3);
      v34 = *a3;
      v33 = a3[1];
      v36 = a3[2];
      v35 = a3[3];
      v37 = v202;
      if (v202 < v203)
      {
        *v202 = v29;
        v202[1] = v30;
        v38 = v202 + 4;
        v202[2] = v31;
        v202[3] = v32;
        goto LABEL_28;
      }
      v39 = ((char *)v202 - (char *)v201) >> 6;
      v40 = v39 + 1;
      if ((unint64_t)(v39 + 1) >> 58)
        goto LABEL_164;
      v41 = (char *)v203 - (char *)v201;
      if (((char *)v203 - (char *)v201) >> 5 > v40)
        v40 = v41 >> 5;
      if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFC0)
        v42 = 0x3FFFFFFFFFFFFFFLL;
      else
        v42 = v40;
      v192 = v29;
      v184 = v31;
      v188 = v30;
      v181 = v32;
      v178 = a3[2];
      v179 = a3[3];
      v175 = *a3;
      v176 = a3[1];
      if (v42)
      {
        if (v42 >> 58)
          goto LABEL_161;
        v43 = (char *)operator new(v42 << 6);
        v29 = v192;
        v31 = v184;
        v30 = v188;
        v32 = v181;
        v36 = v178;
        v35 = v179;
        v34 = v175;
        v33 = v176;
        v44 = (float32x4_t *)&v43[64 * v39];
        *v44 = v192;
        v44[1] = v188;
        v44[2] = v184;
        v44[3] = v181;
        v45 = v44;
        if (v202 == v201)
          goto LABEL_26;
      }
      else
      {
        v43 = 0;
        v44 = (float32x4_t *)(v39 << 6);
        *v44 = v29;
        v44[1] = v30;
        v44[2] = v31;
        v44[3] = v32;
        v45 = (float32x4_t *)(v39 << 6);
        if (v202 == v201)
          goto LABEL_26;
      }
      do
      {
        v46 = v37[-4];
        v47 = v37[-3];
        v48 = v37[-1];
        v45[-2] = v37[-2];
        v45[-1] = v48;
        v45[-4] = v46;
        v45[-3] = v47;
        v45 -= 4;
        v37 -= 4;
      }
      while (v37 != v201);
      v37 = v201;
LABEL_26:
      v38 = v44 + 4;
      v201 = v45;
      v203 = (float32x4_t *)&v43[64 * v42];
      if (v37)
      {
        operator delete(v37);
        v34 = v175;
        v33 = v176;
        v36 = v178;
        v35 = v179;
        v32 = v181;
        v31 = v184;
        v30 = v188;
        v29 = v192;
      }
LABEL_28:
      v49 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v34, v29.f32[0]), v33, *(float32x2_t *)v29.f32, 1), v36, v29, 2), v35, v29, 3);
      v50 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v34, v30.f32[0]), v33, *(float32x2_t *)v30.f32, 1), v36, v30, 2), v35, v30, 3);
      v51 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v34, v31.f32[0]), v33, *(float32x2_t *)v31.f32, 1), v36, v31, 2), v35, v31, 3);
      v52 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v34, v32.f32[0]), v33, *(float32x2_t *)v32.f32, 1), v36, v32, 2), v35, v32, 3);
      v202 = v38;
      v53 = v199;
      if (v199 < v200)
      {
        *v199 = v49;
        v199[1] = v50;
        v54 = v199 + 4;
        v199[2] = v51;
        v199[3] = v52;
        goto LABEL_45;
      }
      v55 = ((char *)v199 - (char *)v198) >> 6;
      v56 = v55 + 1;
      if ((unint64_t)(v55 + 1) >> 58)
LABEL_164:
        sub_223257BE4();
      v57 = (char *)v200 - (char *)v198;
      if (((char *)v200 - (char *)v198) >> 5 > v56)
        v56 = v57 >> 5;
      if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFFC0)
        v58 = 0x3FFFFFFFFFFFFFFLL;
      else
        v58 = v56;
      if (v58)
      {
        v182 = v52;
        v185 = v51;
        v189 = v50;
        v193 = v49;
        if (v58 >> 58)
          goto LABEL_161;
        v59 = (char *)operator new(v58 << 6);
        v60 = (float32x4_t *)&v59[64 * v55];
        *v60 = v193;
        v60[1] = v189;
        v60[2] = v185;
        v60[3] = v182;
        v61 = v60;
        if (v199 == v198)
          goto LABEL_43;
      }
      else
      {
        v59 = 0;
        v60 = (float32x4_t *)(v55 << 6);
        *v60 = v49;
        v60[1] = v50;
        v60[2] = v51;
        v60[3] = v52;
        v61 = (float32x4_t *)(v55 << 6);
        if (v199 == v198)
          goto LABEL_43;
      }
      do
      {
        v62 = v53[-4];
        v63 = v53[-3];
        v64 = v53[-1];
        v61[-2] = v53[-2];
        v61[-1] = v64;
        v61[-4] = v62;
        v61[-3] = v63;
        v61 -= 4;
        v53 -= 4;
      }
      while (v53 != v198);
      v53 = v198;
LABEL_43:
      v54 = v60 + 4;
      v198 = v61;
      v200 = (float32x4_t *)&v59[64 * v58];
      if (v53)
        operator delete(v53);
LABEL_45:
      v199 = v54;
      v65 = v196;
      if (v196 >= v197)
      {
        v67 = v195;
        v68 = (v196 - v195) >> 2;
        v69 = v68 + 1;
        if ((unint64_t)(v68 + 1) >> 62)
          sub_22352449C();
        v70 = v197 - v195;
        if ((v197 - v195) >> 1 > v69)
          v69 = v70 >> 1;
        if ((unint64_t)v70 >= 0x7FFFFFFFFFFFFFFCLL)
          v71 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v71 = v69;
        if (v71)
        {
          if (v71 >> 62)
LABEL_161:
            sub_223174E94();
          v72 = operator new(4 * v71);
          v73 = &v72[4 * v68];
          *(_DWORD *)v73 = *((_DWORD *)v16 + 7);
          v66 = (uint64_t)(v73 + 4);
          v74 = v196 - v195;
          if (v196 == v195)
            goto LABEL_64;
LABEL_58:
          v75 = v74 - 4;
          if (v75 < 0x2C)
            goto LABEL_169;
          if ((unint64_t)(v195 - v72) < 0x20)
            goto LABEL_169;
          v76 = (v75 >> 2) + 1;
          v77 = 4 * (v76 & 0x7FFFFFFFFFFFFFF8);
          v78 = &v196[-v77];
          v73 -= v77;
          v79 = &v72[4 * v68 - 16];
          v80 = v196 - 16;
          v81 = v76 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v82 = *(_OWORD *)v80;
            *(v79 - 1) = *((_OWORD *)v80 - 1);
            *v79 = v82;
            v79 -= 2;
            v80 -= 32;
            v81 -= 8;
          }
          while (v81);
          v65 = v78;
          if (v76 != (v76 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_169:
            do
            {
              v83 = *((_DWORD *)v65 - 1);
              v65 -= 4;
              *((_DWORD *)v73 - 1) = v83;
              v73 -= 4;
            }
            while (v65 != v195);
          }
        }
        else
        {
          v72 = 0;
          v73 = (char *)(4 * v68);
          *(_DWORD *)(4 * v68) = *((_DWORD *)v16 + 7);
          v66 = 4 * v68 + 4;
          v74 = v196 - v195;
          if (v196 != v195)
            goto LABEL_58;
        }
LABEL_64:
        v195 = v73;
        v197 = &v72[4 * v71];
        if (v67)
          operator delete(v67);
        goto LABEL_66;
      }
      *(_DWORD *)v196 = *((_DWORD *)v16 + 7);
      v66 = (uint64_t)(v196 + 4);
LABEL_66:
      v6 = v191;
      v196 = (char *)v66;
      v84 = (_QWORD *)v16[1];
      if (v84)
      {
        do
        {
          v85 = v84;
          v84 = (_QWORD *)*v84;
        }
        while (v84);
      }
      else
      {
        do
        {
          v85 = (_QWORD *)v16[2];
          v86 = *v85 == (_QWORD)v16;
          v16 = v85;
        }
        while (!v86);
      }
      v16 = v85;
      if (v85 == v174)
      {
        v87 = v66 - (_QWORD)v195;
        v88 = v169;
        if (((v66 - (_QWORD)v195) & 0x3FFFFFFFCLL) == 0)
          break;
LABEL_76:
        v94 = 0;
        v177 = (v87 >> 2);
LABEL_78:
        LODWORD(v204[0]) = *(_DWORD *)&v195[4 * v94];
        v209[0] = 64;
        v208 = v14;
        v95 = v88[37];
        if (!v95)
          sub_223198474();
        (*(void (**)(_BYTE **__return_ptr, uint64_t, _QWORD *, _QWORD *, float32x2_t *, float32x4_t *, uint64_t, __int16 *, __int32 *))(*(_QWORD *)v95 + 48))(&v206, v95, v12 + 6, v204, v168 + 47, &v198[4 * v94], a4, v209, &v208);
        v96 = v207;
        v204[1] = 0;
        v205 = 0;
        v204[0] = 0;
        v97 = v207 - v206;
        if (v207 != v206)
        {
          if ((unint64_t)v97 >= 0x1C71C71C71C71C71)
            sub_22352449C();
          v186 = v207 - v206;
          v98 = v97 >> 3;
          v99 = (char *)operator new(72 * (v97 >> 3));
          v183 = v94;
          v100 = (__int128 *)&v201[4 * v94];
          v194 = v98;
          v101 = &v99[72 * v98];
          v204[0] = v99;
          v205 = v101;
          v102 = v99;
          v103 = v99;
          do
          {
            *(_QWORD *)v102 = 0;
            *(_OWORD *)(v102 + 8) = xmmword_22461AD28;
            *(_OWORD *)(v102 + 24) = unk_22461AD38;
            *(_OWORD *)(v102 + 40) = xmmword_22461AD48;
            *(_OWORD *)(v102 + 56) = unk_22461AD58;
            v102 += 72;
          }
          while (v102 != v101);
          v104 = 0;
          v190 = v99;
          do
          {
            v109 = **(unsigned int **)&v206[8 * v104];
            if (0x84BDA12F684BDA13 * ((uint64_t)(v12[1] - *v12) >> 4) <= v109)
            {
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 105, (uint64_t)"index < mesh_buffers_.size()", 28, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C);
              v110 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v110 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670 || byte_255795678)
              {
                v115 = qword_255795648;
                for (i = qword_255795650; v115 != i; v115 += 16)
                  (*(void (**)(_QWORD, const char *, uint64_t, void *, _QWORD))v115)(*(_QWORD *)(v115 + 8), "index < mesh_buffers_.size()", 28, &unk_22459CCCA, 0);
              }
              v111 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v111 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              v6 = v191;
              v103 = v190;
              if (!byte_255795670)
LABEL_159:
                abort();
              qword_255795660(*(_QWORD *)algn_255795668, "index < mesh_buffers_.size()", 28, &unk_22459CCCA, 0);
            }
            if (!*(_BYTE *)(v12[3] + v109))
            {
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 106, (uint64_t)"used_buffer_flags_[index] != 0", 30, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C);
              v112 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v112 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670 || byte_255795678)
              {
                v117 = qword_255795648;
                for (j = qword_255795650; v117 != j; v117 += 16)
                  (*(void (**)(_QWORD, const char *, uint64_t, void *, _QWORD))v117)(*(_QWORD *)(v117 + 8), "used_buffer_flags_[index] != 0", 30, &unk_22459CCCA, 0);
              }
              v113 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v113 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              v6 = v191;
              v103 = v190;
              if (!byte_255795670)
                goto LABEL_159;
              qword_255795660(*(_QWORD *)algn_255795668, "used_buffer_flags_[index] != 0", 30, &unk_22459CCCA, 0);
            }
            v105 = &v103[72 * v104];
            *(_QWORD *)v105 = *v12 + 432 * v109;
            v106 = *v100;
            v107 = v100[1];
            v108 = v100[2];
            *(_OWORD *)(v105 + 56) = v100[3];
            *(_OWORD *)(v105 + 40) = v108;
            *(_OWORD *)(v105 + 24) = v107;
            *(_OWORD *)(v105 + 8) = v106;
            ++v104;
          }
          while (v104 != v194);
          if (v186 >= 1)
          {
            v118 = (char *)*v6;
            v119 = (char *)v6[1];
            v120 = (uint64_t)&v119[-*v6] / 72;
            v121 = *v6 + 72 * v120;
            v122 = v6[2];
            v123 = v194;
            if ((uint64_t)(0x8E38E38E38E38E39 * ((v122 - (uint64_t)v119) >> 3)) >= v194)
            {
              v130 = v6[1];
              if ((uint64_t)(0x8E38E38E38E38E39 * ((uint64_t)&v119[-v121] >> 3)) < v194)
              {
                v131 = 0;
                v132 = &v103[8 * ((uint64_t)&v119[-v121] >> 3)];
                do
                {
                  v133 = &v132[v131];
                  v134 = &v119[v131];
                  *(_QWORD *)v134 = *(_QWORD *)&v132[v131];
                  v135 = *(_OWORD *)&v132[v131 + 8];
                  v136 = *(_OWORD *)&v132[v131 + 24];
                  v137 = *(_OWORD *)&v132[v131 + 40];
                  *(_OWORD *)(v134 + 56) = *(_OWORD *)&v132[v131 + 56];
                  *(_OWORD *)(v134 + 40) = v137;
                  *(_OWORD *)(v134 + 24) = v136;
                  *(_OWORD *)(v134 + 8) = v135;
                  v131 += 72;
                }
                while (v133 + 72 != v101);
                v130 = (uint64_t)&v119[v131];
                v6[1] = v130;
                if ((uint64_t)&v119[-v121] < 1)
                  goto LABEL_149;
                v101 = &v103[8 * ((uint64_t)&v119[-v121] >> 3)];
                v123 = v194;
              }
              v138 = v130 - 72 * v123;
              for (k = v130; v138 < (unint64_t)v119; v138 += 72)
              {
                *(_QWORD *)k = *(_QWORD *)v138;
                v140 = *(_OWORD *)(v138 + 8);
                v141 = *(_OWORD *)(v138 + 24);
                v142 = *(_OWORD *)(v138 + 40);
                *(_OWORD *)(k + 56) = *(_OWORD *)(v138 + 56);
                *(_OWORD *)(k + 40) = v142;
                *(_OWORD *)(k + 24) = v141;
                *(_OWORD *)(k + 8) = v140;
                k += 72;
              }
              v143 = v121 + 72 * v123;
              v6[1] = k;
              if (v130 != v143)
              {
                v144 = 0x8E38E38E38E38E39 * ((v130 - v143) >> 3);
                v145 = (uint64_t)&v118[72 * v120 - 72];
                v146 = 72 * v144;
                v147 = v130 - 72;
                do
                {
                  *(_QWORD *)v147 = *(_QWORD *)(v145 + v146);
                  v148 = *(_OWORD *)(v145 + v146 + 8);
                  v149 = *(_OWORD *)(v145 + v146 + 24);
                  v150 = *(_OWORD *)(v145 + v146 + 40);
                  *(_OWORD *)(v147 + 56) = *(_OWORD *)(v145 + v146 + 56);
                  *(_OWORD *)(v147 + 40) = v150;
                  *(_OWORD *)(v147 + 24) = v149;
                  *(_OWORD *)(v147 + 8) = v148;
                  v147 -= 72;
                  v146 -= 72;
                }
                while (v146);
              }
              if (v101 != v103)
              {
                v151 = v103;
                do
                {
                  *(_QWORD *)v121 = *(_QWORD *)v151;
                  v152 = *(_OWORD *)(v151 + 8);
                  v153 = *(_OWORD *)(v151 + 24);
                  v154 = *(_OWORD *)(v151 + 40);
                  *(_OWORD *)(v121 + 56) = *(_OWORD *)(v151 + 56);
                  *(_OWORD *)(v121 + 40) = v154;
                  *(_OWORD *)(v121 + 24) = v153;
                  *(_OWORD *)(v121 + 8) = v152;
                  v151 += 72;
                  v121 += 72;
                }
                while (v151 != v101);
              }
            }
            else
            {
              v124 = v120 + v194;
              if ((unint64_t)(v120 + v194) > 0x38E38E38E38E38ELL)
                sub_22352449C();
              v125 = 0x8E38E38E38E38E39 * ((v122 - (uint64_t)v118) >> 3);
              if (2 * v125 > v124)
                v124 = 2 * v125;
              if (v125 >= 0x1C71C71C71C71C7)
                v126 = 0x38E38E38E38E38ELL;
              else
                v126 = v124;
              if (v126)
              {
                v187 = (uint64_t)&v119[-*v6] / 72;
                if (v126 > 0x38E38E38E38E38ELL)
                  sub_223174E94();
                v127 = (char *)*v6;
                v128 = v126;
                v129 = (char *)operator new(72 * v126);
                v118 = v127;
                v126 = v128;
                v120 = v187;
              }
              else
              {
                v129 = 0;
              }
              v155 = &v129[72 * v120];
              v156 = (uint64_t)&v155[72 * v194];
              v157 = v155;
              v158 = v103;
              do
              {
                *(_QWORD *)v157 = *(_QWORD *)v158;
                *(_OWORD *)(v157 + 8) = *(_OWORD *)(v158 + 8);
                *(_OWORD *)(v157 + 24) = *(_OWORD *)(v158 + 24);
                *(_OWORD *)(v157 + 40) = *(_OWORD *)(v158 + 40);
                *(_OWORD *)(v157 + 56) = *(_OWORD *)(v158 + 56);
                v157 += 72;
                v158 += 72;
              }
              while (v157 != (char *)v156);
              if (v119 != v118)
              {
                v159 = 72 * v120;
                v160 = v118 - 72;
                do
                {
                  v161 = &v129[v159];
                  *((_QWORD *)v161 - 9) = *(_QWORD *)&v160[v159];
                  v162 = *(_OWORD *)&v160[v159 + 8];
                  v163 = *(_OWORD *)&v160[v159 + 24];
                  v164 = *(_OWORD *)&v160[v159 + 56];
                  *((_OWORD *)v161 - 2) = *(_OWORD *)&v160[v159 + 40];
                  *((_OWORD *)v161 - 1) = v164;
                  *((_OWORD *)v161 - 4) = v162;
                  *((_OWORD *)v161 - 3) = v163;
                  v159 -= 72;
                }
                while (v159);
                v155 = v129;
              }
              for (; (char *)v121 != v119; v121 += 72)
              {
                *(_QWORD *)v156 = *(_QWORD *)v121;
                v165 = *(_OWORD *)(v121 + 8);
                v166 = *(_OWORD *)(v121 + 24);
                v167 = *(_OWORD *)(v121 + 40);
                *(_OWORD *)(v156 + 56) = *(_OWORD *)(v121 + 56);
                *(_OWORD *)(v156 + 40) = v167;
                *(_OWORD *)(v156 + 24) = v166;
                *(_OWORD *)(v156 + 8) = v165;
                v156 += 72;
              }
              *v6 = (uint64_t)v155;
              v6[1] = v156;
              v6[2] = (uint64_t)&v129[72 * v126];
              if (v118)
                operator delete(v118);
            }
          }
LABEL_149:
          operator delete(v103);
          v96 = v206;
          v88 = v169;
          v94 = v183;
        }
        if (v96)
        {
          v207 = v96;
          operator delete(v96);
        }
        if (++v94 == v177)
          break;
        goto LABEL_78;
      }
    }
  }
  sub_22352DEF0(v6);
  if (v195)
    operator delete(v195);
  if (v198)
    operator delete(v198);
  if (v201)
    operator delete(v201);
  return kdebug_trace();
}

void sub_223526D9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v44;

  v44 = *(void **)(v39 - 232);
  if (v44)
  {
    *(_QWORD *)(v39 - 224) = v44;
    operator delete(v44);
    v40 = *(void **)(v39 - 208);
    if (v40)
    {
LABEL_9:
      *(_QWORD *)(v39 - 200) = v40;
      operator delete(v40);
      v41 = *(void **)(v39 - 184);
      if (v41)
      {
LABEL_10:
        *(_QWORD *)(v39 - 176) = v41;
        operator delete(v41);
        v42 = *(void **)v38;
        if (!*(_QWORD *)v38)
        {
LABEL_6:
          kdebug_trace();
          _Unwind_Resume(a1);
        }
LABEL_5:
        *(_QWORD *)(v38 + 8) = v42;
        operator delete(v42);
        goto LABEL_6;
      }
LABEL_4:
      v42 = *(void **)v38;
      if (!*(_QWORD *)v38)
        goto LABEL_6;
      goto LABEL_5;
    }
  }
  else
  {
    v40 = *(void **)(v39 - 208);
    if (v40)
      goto LABEL_9;
  }
  v41 = *(void **)(v39 - 184);
  if (v41)
    goto LABEL_10;
  goto LABEL_4;
}

uint64_t sub_223526ED4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d5recon3sng13MapperManager25CreateMappedStateProviderEvE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d5recon3sng13MapperManager25CreateMappedStateProviderEvE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d5recon3sng13MapperManager25CreateMappedStateProviderEvE3$_0"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d5recon3sng13MapperManager25CreateMappedStateProviderEvE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223526F40()
{
  return &unk_24EC45388;
}

uint64_t sub_223526F4C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  unint64_t v7;
  const void *v8;
  BOOL v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = result;
  v4 = *(_DWORD *)(result + 64);
  v5 = *(_DWORD *)(result + 76);
  if (v5 != *(_DWORD *)(a2 + 44) || v5 != v4)
  {
    v21 = *(unsigned int *)(result + 64);
    return sub_223527150(result, a2, &v21);
  }
  v7 = *(unsigned int *)(result + 68) * (unint64_t)v4;
  v8 = *(const void **)(result + 56);
  if (*(_BYTE *)(result + 80))
    v9 = v8 == 0;
  else
    v9 = 1;
  if (!v9)
  {
    v10 = *(_QWORD *)(result + 8);
    v11 = *(std::__shared_weak_count **)(result + 16);
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v10 + 88))(v10, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1196");
    v8 = *(const void **)(v3 + 56);
  }
  if (v7)
  {
    if (!v8)
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_224589191, 0, (void (*)(void **))sub_22457406C);
      if ((_DWORD)result)
LABEL_33:
        abort();
    }
  }
  v15 = *(void **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v15)
  {
    v16 = *(_QWORD *)(a2 + 8);
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (v17)
    {
      v18 = (unint64_t *)&v17->__shared_owners_;
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
      do
        v20 = __ldaxr(v18);
      while (__stlxr(v20 - 1, v18));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
    v15 = *(void **)(a2 + 24);
  }
  if (v7 && !v15)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_224589191, 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_33;
    }
    return (uint64_t)memmove(v15, v8, 4 * v7);
  }
  if (v7)
    return (uint64_t)memmove(v15, v8, 4 * v7);
  return result;
}

uint64_t sub_223527150(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
  {
    if (!v6)
    {
LABEL_21:
      v27 = 0;
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
        goto LABEL_22;
LABEL_18:
      if (!v15)
        goto LABEL_38;
      goto LABEL_34;
    }
    goto LABEL_16;
  }
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (v10)
  {
    if (!v6)
      goto LABEL_21;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (!v6)
      goto LABEL_21;
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_16;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_16:
    if (!*(_BYTE *)(a1 + 81))
      goto LABEL_21;
    goto LABEL_17;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 81))
    goto LABEL_21;
LABEL_17:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_18;
LABEL_22:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if (!v15)
      goto LABEL_38;
LABEL_29:
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (v20)
    {
      v21 = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
        if (!*(_BYTE *)(a2 + 49))
          goto LABEL_38;
LABEL_35:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
        if (!*(_DWORD *)(a1 + 64))
          goto LABEL_41;
        goto LABEL_39;
      }
    }
LABEL_34:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_38;
    goto LABEL_35;
  }
  if (v15)
    goto LABEL_29;
LABEL_38:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 64))
    goto LABEL_41;
LABEL_39:
  if (*(_DWORD *)(a1 + 68))
    sub_2235273F4(a3, a1, a2);
LABEL_41:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_223527390(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2235273F4(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  _OWORD v28[2];

  v4 = *(_DWORD *)(a2 + 64);
  v3 = *(_DWORD *)(a2 + 68);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v24 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 76);
    v10 = *(unsigned int *)(a3 + 44);
    v25 = *(unsigned int *)(a2 + 72) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v9 | (v10 << 32);
    v11 = *(char **)(a2 + 56);
    if (*(_BYTE *)(a2 + 80) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1196");
      v11 = *(char **)(a2 + 56);
    }
    v17 = *(char **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
      v17 = *(char **)(a3 + 24);
    }
    memset(v28, 0, sizeof(v28));
    return (uint64_t *)sub_223527578((uint64_t)&v23, (uint64_t)v28, v8, v11, v17);
  }
  return result;
}

uint64_t sub_223527578(uint64_t result, uint64_t a2, uint64_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  int v9;
  int v10;
  _DWORD *v11;
  int v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = __dst;
  v6 = __src;
  v9 = *(_DWORD *)(result + 12);
  v10 = *(_DWORD *)(result + 16);
  *(_QWORD *)a2 = __src;
  *(_DWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = __dst;
  *(_DWORD *)(a2 + 24) = v10;
  if (*(_DWORD *)(result + 20))
  {
    v11 = (_DWORD *)result;
    v12 = 0;
    do
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 16) = v5;
      v13 = *a3;
      v14 = v5;
      v15 = *a3;
      if (!v6)
      {
        v14 = v5;
        v15 = *a3;
        if (v13)
        {
          result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_224589191, 0, (void (*)(void **))sub_22457406C);
          if ((result & 1) != 0)
            goto LABEL_23;
          v15 = *a3;
          v14 = *(void **)(a2 + 16);
        }
      }
      if (!v14)
      {
        if (v15)
        {
          result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_224589191, 0, (void (*)(void **))sub_22457406C);
          if ((_DWORD)result)
            goto LABEL_23;
        }
      }
      if (v13)
        result = (uint64_t)memmove(v14, v6, 4 * v13);
      v6 += 4 * v11[6];
      v5 += 4 * v11[7];
    }
    while (++v12 < v11[5]);
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 16) = v5;
  v16 = *a3;
  v17 = *a3;
  if (!v6 && v16)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_224589191, 0, (void (*)(void **))sub_22457406C);
    if ((result & 1) != 0)
      goto LABEL_23;
    v17 = *a3;
    v5 = *(char **)(a2 + 16);
  }
  if (!v5)
  {
    if (v17)
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_224589191, 0, (void (*)(void **))sub_22457406C);
      if ((_DWORD)result)
LABEL_23:
        abort();
    }
  }
  if (v16)
    return (uint64_t)memmove(v5, v6, 4 * v16);
  return result;
}

uint64_t (***sub_223527778@<X0>(float32x2_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, int32x2_t *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, int8x8_t *a7@<X6>, uint64_t a8@<X8>, float a9@<S0>))()
{
  uint64_t v11;
  uint64_t v14;
  __int128 v15;
  int32x4_t v16;
  double v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  std::mutex *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  __int128 v27;
  __int128 *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  void *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  std::mutex *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  std::string *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  std::string::size_type v48;
  char v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  void *v55;
  std::string::size_type size;
  std::string *v57;
  std::string::size_type v58;
  std::string::size_type v59;
  int v60;
  BOOL v61;
  uint64_t v63;
  void *v64;
  void *v65;
  int v66;
  std::string::size_type v67;
  uint64_t v68;
  uint64_t v69;
  std::string::size_type v70;
  float32x4_t v71;
  int32x4_t v72;
  float32x2_t v73;
  float32x4_t v74;
  _QWORD *v75;
  uint64_t v76;
  void *v77;
  double v78;
  uint64_t v79;
  double v80;
  float32x4_t v81;
  int8x8_t v82;
  unint64_t v83;
  uint8x8_t v84;
  uint64_t v85;
  uint64_t **v86;
  uint64_t *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unsigned int v96;
  unint64_t v97;
  uint64_t v98;
  unsigned int v99;
  unint64_t v100;
  unsigned int v101;
  unint64_t v102;
  uint64_t v103;
  unsigned int v104;
  uint64_t *v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  char *v113;
  char *v114;
  char *v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  const void *v125;
  size_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  std::string *v133;
  std::string::size_type v134;
  size_t v135;
  unint64_t v136;
  size_t v137;
  unint64_t v138;
  std::string *v139;
  size_t v140;
  _BYTE *v141;
  unint64_t v142;
  uint64_t v143;
  void *v144;
  std::string::size_type v145;
  unsigned __int8 v146;
  unsigned __int8 v147;
  unsigned __int8 v148;
  uint64_t v149;
  unsigned __int8 v150;
  uint64_t v151;
  uint64_t i;
  unsigned __int8 v153;
  uint64_t v154;
  std::mutex *v155;
  uint64_t v156;
  uint64_t v157;
  unsigned __int8 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  float32x4_t v162;
  float32x4_t v163;
  float32x4_t v164;
  std::string::size_type v165;
  int v166;
  unsigned __int8 v167;
  uint64_t *v168;
  std::__shared_weak_count *v169;
  uint64_t v170;
  unint64_t *p_shared_owners;
  unint64_t v172;
  __int128 v173;
  unint64_t *v174;
  unint64_t v175;
  unint64_t *v176;
  unint64_t v177;
  std::__shared_weak_count *v178;
  unint64_t *v179;
  unint64_t v180;
  std::__shared_weak_count *v181;
  unint64_t *v182;
  unint64_t v183;
  void *v184;
  std::__shared_weak_count *v185;
  unint64_t *v186;
  unint64_t v187;
  std::__shared_weak_count *v188;
  unint64_t *v189;
  unint64_t v190;
  std::__shared_weak_count *v191;
  unint64_t *v192;
  unint64_t v193;
  std::string::size_type v194;
  std::string *v195;
  std::string::size_type v196;
  std::string::size_type v197;
  int v198;
  unsigned __int8 v201;
  uint64_t v202;
  uint64_t v203;
  float32x4_t v204;
  float32x4_t v205;
  float32x4_t v206;
  _QWORD *v207;
  uint64_t *v208;
  unint64_t v209;
  uint64_t v210;
  unint64_t *v211;
  unint64_t v212;
  float32x2_t v213;
  float32x2_t v214;
  float32x2_t v215;
  float32x2_t v216;
  int8x16_t v217;
  int8x16_t v218;
  float32x4_t v219;
  float32x2_t v220;
  float32x4_t v221;
  float32x4_t v222;
  uint64_t v223;
  int32x4_t v224;
  double v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  std::mutex *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  void *v233;
  uint64_t v234;
  __int128 v235;
  __int128 *v236;
  uint64_t v237;
  uint64_t v238;
  int v239;
  int v240;
  uint64_t v241;
  void *v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t v245;
  std::mutex *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  __int128 v250;
  std::string *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  std::string::size_type v256;
  char v257;
  _BYTE *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t *v261;
  uint64_t v262;
  void *v263;
  std::string::size_type v264;
  std::string *v265;
  std::string::size_type v266;
  std::string::size_type v267;
  int v268;
  uint64_t v271;
  void *v272;
  void *v273;
  int v274;
  std::string::size_type v275;
  uint64_t v276;
  uint64_t v277;
  std::string::size_type v278;
  float32x4_t v279;
  int v280;
  uint64_t *v281;
  uint64_t v282;
  uint64_t v283;
  std::mutex *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _BYTE *v288;
  uint64_t v289;
  __int128 v290;
  __int128 *v291;
  uint64_t v292;
  uint64_t v293;
  int v294;
  int v295;
  int v296;
  uint64_t v297;
  int v298;
  int v299;
  int v300;
  float32x4_t v301;
  int8x8_t v302;
  float32x4_t v303;
  int32x2_t v304;
  int v305;
  unint64_t v306;
  uint8x8_t v307;
  uint64_t v308;
  uint64_t **v309;
  uint64_t *v310;
  uint64_t v311;
  unint64_t v312;
  uint64_t v313;
  _DWORD *v314;
  std::string::size_type v315;
  std::string::size_type v316;
  unint64_t v317;
  unint64_t v318;
  unint64_t v319;
  char *v320;
  int32x2_t *v321;
  std::string::size_type v322;
  uint64_t v323;
  int v324;
  void *v325;
  size_t v326;
  unint64_t v327;
  uint64_t v328;
  unint64_t v329;
  unint64_t v330;
  char *v331;
  uint64_t v332;
  _BYTE *v333;
  unint64_t v334;
  size_t v335;
  _BYTE *v336;
  size_t v337;
  unint64_t v338;
  size_t v339;
  char *v340;
  unint64_t v341;
  uint64_t v342;
  char *v343;
  char *v344;
  uint64_t *v345;
  uint64_t v346;
  uint64_t v347;
  std::mutex *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  unint64_t v352;
  int8x8_t *v353;
  _BOOL4 v354;
  BOOL v355;
  int8x8_t v356;
  int v357;
  uint64_t *v358;
  std::__shared_weak_count *v359;
  uint64_t v360;
  unint64_t *v361;
  unint64_t v362;
  __int128 v363;
  unint64_t *v364;
  unint64_t v365;
  unint64_t *v366;
  unint64_t v367;
  std::__shared_weak_count *v368;
  unint64_t *v369;
  unint64_t v370;
  std::__shared_weak_count *v371;
  unint64_t *v372;
  unint64_t v373;
  std::__shared_weak_count *v374;
  unint64_t *v375;
  unint64_t v376;
  std::__shared_weak_count *v377;
  unint64_t *v378;
  unint64_t v379;
  std::__shared_weak_count *v380;
  unint64_t *v381;
  unint64_t v382;
  unint64_t v383;
  _BYTE *v384;
  uint64_t v385;
  uint64_t v386;
  int v387;
  BOOL v388;
  unsigned __int8 v390;
  unint64_t v391;
  uint64_t *v392;
  unint64_t v393;
  uint64_t v394;
  unint64_t *v395;
  unint64_t v396;
  uint64_t v397;
  _BYTE *v398;
  uint64_t *v399;
  uint64_t v400;
  uint64_t v401;
  std::mutex *v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  __int128 v406;
  std::string *v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t *v410;
  std::string::size_type v411;
  std::string *v412;
  std::string::size_type v413;
  std::string::size_type v414;
  int v415;
  __n128 *v418;
  std::string *v419;
  size_t v420;
  _QWORD *v421;
  uint64_t v422;
  __n128 v423;
  uint64_t (***result)();
  uint64_t v425;
  _QWORD *v426;
  uint64_t v427;
  uint64_t v429;
  unint64_t v430;
  void *v431;
  int v432;
  uint64_t v433;
  int8x8_t *v434;
  float32x4_t v435;
  int v436;
  uint64_t v437;
  void *v438;
  void *v439;
  float32x4_t v440;
  unint64_t v441;
  uint64_t v442;
  int v443;
  void *__srcb;
  void *__src;
  uint64_t *__srca;
  int v448;
  int v449;
  float v450;
  int v451;
  uint64_t v452;
  float32x4_t v453;
  float v454;
  float v455;
  float32x4_t __len;
  float32x4_t __lena;
  int32x2_t __lenb;
  size_t __lenc;
  void *__lend;
  __int128 v462;
  uint64_t v463;
  __int32 v464;
  void *v465;
  char *v466;
  char *v467;
  std::string v468;
  std::string v469;
  char v470;
  std::string v471;
  _BYTE v472[24];
  void *v473;
  __int128 v474;
  void *v475;
  __int128 v476;
  __int128 v477;
  std::string v478;
  uint64_t v479;
  std::__shared_weak_count *v480;
  _BYTE v481[24];
  _BYTE *v482;
  _BYTE v483[24];
  _BYTE *v484;
  uint64_t (**v485[3])();
  uint64_t (***v486)();
  _BYTE v487[60];
  int v488;
  char v489;
  _BYTE v490[32];
  _DWORD v491[4];
  _QWORD v492[2];
  __int128 v493;
  _BYTE v494[24];
  _QWORD v495[5];

  v11 = a6;
  v427 = a8;
  v495[2] = *MEMORY[0x24BDAC8D0];
  sub_223ACA32C(*(unsigned __int8 *)(a6 + 8), v485);
  v14 = (uint64_t)v486;
  if (!v486)
  {
LABEL_4:
    v484 = (_BYTE *)v14;
    if (v14)
      goto LABEL_8;
    goto LABEL_7;
  }
  if (v486 != v485)
  {
    v14 = (*v486)[2]();
    goto LABEL_4;
  }
  v484 = v483;
  (*((void (**)(uint64_t (***)(), _BYTE *))v485[0] + 3))(v485, v483);
  if (v484)
    goto LABEL_8;
LABEL_7:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 95, (uint64_t)"is_part_of_visibility_map && \"Vmap callback not setup\"", 54, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_8:
  v426 = a3;
  v473 = operator new(0x19uLL);
  v474 = xmmword_2245B9430;
  strcpy((char *)v473, "Volumetric.Privacy.AABB");
  sub_224569D7C();
  sub_224569A80();
  v437 = v11;
  if (!os_variant_has_internal_diagnostics())
    goto LABEL_83;
  v18 = sub_2241471F8();
  v19 = v18[2];
  if (!v19)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v19 = v18[2];
  }
  v20 = *(_QWORD *)(v19 + 64);
  v21 = (std::mutex *)(v20 + 32);
  std::mutex::lock((std::mutex *)(v20 + 32));
  v23 = *(_QWORD *)(v20 + 96);
  v22 = *(_QWORD *)(v20 + 104);
  std::mutex::unlock(v21);
  if (v23 == v22)
    goto LABEL_83;
  *(_QWORD *)v487 = "cv3d.recon.";
  *(_QWORD *)&v487[8] = 11;
  v24 = HIBYTE(v474);
  v25 = &v473;
  if (v474 < 0)
  {
    v25 = v473;
    v24 = v474;
  }
  *(_QWORD *)&v487[16] = v25;
  *(_QWORD *)&v487[24] = v24;
  sub_2231A9820((uint64_t)v487, (uint64_t)&v487[32], 0, 0, (std::string *)&v493);
  v26 = v494[7];
  v27 = v493;
  sub_2241471F8();
  if ((v26 & 0x80u) == 0)
    v28 = &v493;
  else
    v28 = (__int128 *)v27;
  if ((v26 & 0x80u) == 0)
    v29 = v26;
  else
    v29 = *((_QWORD *)&v27 + 1);
  v30 = (*(uint64_t (**)(uint64_t *, __int128 *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v28, v29);
  v31 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v30 + 24))(v30);
  v32 = v31;
  if ((v494[7] & 0x80000000) != 0)
  {
    operator delete((void *)v493);
    if (v32)
      goto LABEL_23;
LABEL_83:
    v436 = 0;
    goto LABEL_84;
  }
  if (!v31)
    goto LABEL_83;
LABEL_23:
  *(_QWORD *)v487 = "cv3d.recon.";
  *(_QWORD *)&v487[8] = 11;
  v33 = HIBYTE(v474);
  v34 = &v473;
  if (v474 < 0)
  {
    v34 = v473;
    v33 = v474;
  }
  *(_QWORD *)&v487[16] = v34;
  *(_QWORD *)&v487[24] = v33;
  sub_2231A9820((uint64_t)v487, (uint64_t)&v487[32], 0, 0, &v469);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v35 = sub_2241471F8();
    v36 = v35[2];
    if (!v36)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v36 = v35[2];
    }
    v37 = *(_QWORD *)(v36 + 64);
    v38 = (std::mutex *)(v37 + 32);
    std::mutex::lock((std::mutex *)(v37 + 32));
    v40 = *(_QWORD *)(v37 + 96);
    v39 = *(_QWORD *)(v37 + 104);
    std::mutex::unlock(v38);
    if (v40 != v39)
    {
      v41 = HIBYTE(v469.__r_.__value_.__r.__words[2]);
      v42 = *(_OWORD *)&v469.__r_.__value_.__l.__data_;
      sub_2241471F8();
      v43 = (v41 & 0x80u) == 0 ? &v469 : (std::string *)v42;
      v44 = (v41 & 0x80u) == 0 ? v41 : *((_QWORD *)&v42 + 1);
      v45 = (*(uint64_t (**)(uint64_t *, std::string *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v43, v44);
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v45 + 24))(v45))
      {
        v493 = 0u;
        *(_OWORD *)v494 = 0u;
        *(_DWORD *)&v494[16] = 728325608;
        kdebug_trace();
        sub_22414385C((uint64_t *)&v475);
        *(_QWORD *)v490 = "cv3d.recon.";
        *(_QWORD *)&v490[8] = 11;
        v46 = HIBYTE(v474);
        v47 = &v473;
        if (v474 < 0)
        {
          v47 = v473;
          v46 = v474;
        }
        *(_QWORD *)&v490[16] = v47;
        *(_QWORD *)&v490[24] = v46;
        sub_2231A9820((uint64_t)v490, (uint64_t)v491, 0, 0, &v478);
        v492[0] = v478.__r_.__value_.__l.__size_;
        v48 = v478.__r_.__value_.__r.__words[0];
        *(_QWORD *)((char *)v492 + 7) = *(std::string::size_type *)((char *)&v478.__r_.__value_.__r.__words[1] + 7);
        v49 = HIBYTE(v478.__r_.__value_.__r.__words[2]);
        memset(&v478, 0, sizeof(v478));
        v50 = v475;
        v51 = operator new();
        *(_BYTE *)v51 = 0;
        *(_DWORD *)(v51 + 128) = -1;
        v52 = *((unsigned int *)v50 + 32);
        if ((_DWORD)v52 != -1)
        {
          ((void (*)(_BYTE *, uint64_t, _BYTE *))off_24EC6BD10[v52])(v490, v51, v50);
          *(_DWORD *)(v51 + 128) = v52;
        }
        *(_BYTE *)(v51 + 136) = v50[136];
        *(_QWORD *)v487 = v51;
        *(_QWORD *)&v487[8] = v48;
        *(_QWORD *)&v487[16] = v492[0];
        *(_QWORD *)&v487[23] = *(_QWORD *)((char *)v492 + 7);
        v487[31] = v49;
        v492[0] = 0;
        *(_QWORD *)((char *)v492 + 7) = 0;
        v487[32] = 1;
        v487[40] = 0;
        v489 = 0;
        v11 = v437;
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v45 + 24))(v45))
        {
          *(_QWORD *)v490 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *(_QWORD *)&v490[8] = 2;
          v53 = sub_2241471F8();
          sub_2235335A0((uint64_t)v53, v45, (uint64_t)v487, (uint64_t)&unk_2245C9EFE, (__int128 *)v490);
        }
        if (v489 && SHIBYTE(v488) < 0)
          operator delete(*(void **)&v487[40]);
        if (v487[32] && (v487[31] & 0x80000000) != 0)
          operator delete(*(void **)&v487[8]);
        v54 = *(_QWORD *)v487;
        *(_QWORD *)v487 = 0;
        if (v54)
          MEMORY[0x227684CE8](v54, 0x1000C4072FAA15ELL);
        if (SHIBYTE(v478.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v478.__r_.__value_.__l.__data_);
        v55 = v475;
        v475 = 0;
        if (v55)
          MEMORY[0x227684CE8](v55, 0x1000C4072FAA15ELL);
        kdebug_trace();
      }
    }
  }
  memset(v487, 0, 32);
  *(_DWORD *)&v487[32] = 728325624;
  kdebug_trace();
  size = HIBYTE(v469.__r_.__value_.__r.__words[2]);
  if ((v469.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v469.__r_.__value_.__l.__size_;
  if (size >= 0x11)
  {
    v57 = &v469;
    if ((v469.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v57 = (std::string *)v469.__r_.__value_.__r.__words[0];
    v58 = v57->__r_.__value_.__r.__words[0];
    v59 = v57->__r_.__value_.__l.__size_;
    v60 = v57->__r_.__value_.__s.__data_[16];
    v61 = v58 == 0x6365722E64337663 && v59 == 0x73746174532E6E6FLL;
    if (v61 && v60 == 46)
    {
      sub_223187510();
      sub_22414385C((uint64_t *)&v478);
      *(_QWORD *)&v493 = "cv3d.recon.";
      *((_QWORD *)&v493 + 1) = 11;
      v63 = HIBYTE(v474);
      v64 = &v473;
      if (v474 < 0)
      {
        v64 = v473;
        v63 = v474;
      }
      *(_QWORD *)v494 = v64;
      *(_QWORD *)&v494[8] = v63;
      sub_2231A9820((uint64_t)&v493, (uint64_t)&v494[16], 0, 0, (std::string *)v490);
      v65 = *(void **)v490;
      v66 = v490[23];
      memset(v490, 0, 24);
      v67 = v478.__r_.__value_.__r.__words[0];
      v68 = operator new();
      *(_BYTE *)v68 = 0;
      *(_DWORD *)(v68 + 128) = -1;
      v69 = *(unsigned int *)(v67 + 128);
      if ((_DWORD)v69 != -1)
      {
        ((void (*)(__int128 *, uint64_t, std::string::size_type))off_24EC6BD10[v69])(&v493, v68, v67);
        *(_DWORD *)(v68 + 128) = v69;
      }
      *(_BYTE *)(v68 + 136) = *(_BYTE *)(v67 + 136);
      if (v66 < 0)
        operator delete(v65);
      MEMORY[0x227684CE8](v68, 0x1000C4072FAA15ELL);
      if ((v490[23] & 0x80000000) != 0)
        operator delete(*(void **)v490);
      v70 = v478.__r_.__value_.__r.__words[0];
      v478.__r_.__value_.__r.__words[0] = 0;
      if (v70)
        MEMORY[0x227684CE8](v70, 0x1000C4072FAA15ELL);
    }
  }
  kdebug_trace();
  if (SHIBYTE(v469.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v469.__r_.__value_.__l.__data_);
  v436 = 1;
LABEL_84:
  *(float *)&v15 = a9 * 64.0;
  v465 = 0;
  v466 = 0;
  v467 = 0;
  memset(v472, 0, sizeof(v472));
  v462 = v15;
  sub_223ACA1C0((_BOOL8)a1, v11, (int32x4_t *)v472, a9 * 64.0, v16, v17);
  v429 = *(int *)&v472[20];
  v442 = *(int *)&v472[16];
  v432 = a5;
  v434 = a7;
  if (*(_DWORD *)&v472[16] != *(_DWORD *)&v472[20] + 1)
  {
    v435 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v462, 0);
    v71.i32[3] = 0x80000000;
    while (1)
    {
      v77 = (void *)*(int *)&v472[8];
      v431 = (void *)*(int *)&v472[12];
      if (*(_DWORD *)&v472[8] != *(_DWORD *)&v472[12] + 1)
        break;
LABEL_90:
      v61 = v442++ == v429;
      if (v61)
        goto LABEL_85;
    }
    v71.i32[3] = HIDWORD(v462);
    v78 = (float)(*(float *)&v462 * (float)(int)v442);
    while (1)
    {
      v79 = *(int *)v472;
      v452 = *(int *)&v472[4];
      if (*(_DWORD *)v472 != *(_DWORD *)&v472[4] + 1)
        break;
LABEL_93:
      v61 = v77 == v431;
      v77 = (char *)v77 + 1;
      if (v61)
        goto LABEL_90;
    }
    v71.i32[3] = HIDWORD(v462);
    v450 = (float)(int)v77;
    v80 = (float)(*(float *)&v462 * (float)(int)v77);
    v433 = (19349669 * (_QWORD)v77) ^ (83492791 * v442);
    v438 = v77;
    while (1)
    {
      v71.f32[0] = (float)(int)v79;
      v454 = (float)(int)v79;
      v71.f32[1] = v450;
      v71.f32[2] = (float)(int)v442;
      v81 = vmulq_n_f32(v71, *(float *)&v462);
      *(_DWORD *)&v487[8] = v81.i32[2];
      __len = v81;
      *(_QWORD *)v487 = v81.i64[0];
      v81.i32[0] = *(_DWORD *)(v11 + 4);
      LODWORD(v493) = v462;
      *(_DWORD *)v490 = v81.i32[0];
      if (!v484)
        sub_223198474();
      if (!(*(unsigned int (**)(_BYTE *, _BYTE *, __int128 *, float32x2_t *, _BYTE *))(*(_QWORD *)v484 + 48))(v484, v487, &v493, a1, v490))goto LABEL_97;
      *(_DWORD *)v487 = v79;
      *(_DWORD *)&v487[4] = (_DWORD)v77;
      *(_DWORD *)&v487[8] = v442;
      v82 = (int8x8_t)a2[1];
      if (v82)
      {
        v83 = v433 ^ (73856093 * v79);
        v84 = (uint8x8_t)vcnt_s8(v82);
        v84.i16[0] = vaddlv_u8(v84);
        if (v84.u32[0] > 1uLL)
        {
          v85 = v433 ^ (73856093 * v79);
          if (v83 >= *(_QWORD *)&v82)
            v85 = v83 % *(_QWORD *)&v82;
        }
        else
        {
          v85 = (*(_QWORD *)&v82 - 1) & v83;
        }
        v86 = *(uint64_t ***)(*a2 + 8 * v85);
        if (v86)
        {
          v87 = *v86;
          if (v87)
          {
            if (v84.u32[0] < 2uLL)
            {
              v88 = *(_QWORD *)&v82 - 1;
              while (1)
              {
                v90 = v87[1];
                if (v90 == v83)
                {
                  if (*((_DWORD *)v87 + 4) == (_DWORD)v79
                    && *((_DWORD *)v87 + 5) == (_DWORD)v77
                    && *((_DWORD *)v87 + 6) == (_DWORD)v442)
                  {
                    goto LABEL_124;
                  }
                }
                else if ((v90 & v88) != v85)
                {
                  goto LABEL_125;
                }
                v87 = (uint64_t *)*v87;
                if (!v87)
                  goto LABEL_125;
              }
            }
            do
            {
              v89 = v87[1];
              if (v89 == v83)
              {
                if (*((_DWORD *)v87 + 4) == (_DWORD)v79
                  && *((_DWORD *)v87 + 5) == (_DWORD)v77
                  && *((_DWORD *)v87 + 6) == (_DWORD)v442)
                {
LABEL_124:
                  v91 = *(uint64_t *)((char *)v87 + 28);
                  v92 = *(uint64_t *)((char *)v87 + 36);
                  goto LABEL_138;
                }
              }
              else
              {
                if (v89 >= *(_QWORD *)&v82)
                  v89 %= *(_QWORD *)&v82;
                if (v89 != v85)
                  break;
              }
              v87 = (uint64_t *)*v87;
            }
            while (v87);
          }
        }
      }
LABEL_125:
      v93 = a2[5];
      v94 = *(_QWORD *)(v93 + 2496);
      v95 = (v94 + 1) % 0x270uLL;
      v96 = *(_DWORD *)(v93 + 4 * ((v94 + 397) % 0x270uLL)) ^ ((*(_DWORD *)(v93 + 4 * v95) & 0x7FFFFFFE | *(_DWORD *)(v93 + 4 * v94) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v93 + 4 * v95) << 31) >> 31) & 0x9908B0DF;
      *(_DWORD *)(v93 + 4 * v94) = v96;
      if (v95 == 623)
        v97 = 0;
      else
        v97 = v95 + 1;
      if (v95 >= 0xE3)
        v98 = -227;
      else
        v98 = 397;
      v99 = *(_DWORD *)(v93 + 4 * (v98 + v95)) ^ ((*(_DWORD *)(v93 + 4 * v97) & 0x7FFFFFFE | *(_DWORD *)(v93 + 4 * v95) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v93 + 4 * v97) << 31) >> 31) & 0x9908B0DF;
      *(_DWORD *)(v93 + 4 * v95) = v99;
      v100 = (v97 + 1) % 0x270;
      v101 = *(_DWORD *)(v93 + 4 * ((v97 + 397) % 0x270)) ^ ((*(_DWORD *)(v93 + 4 * v100) & 0x7FFFFFFE | *(_DWORD *)(v93 + 4 * v97) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v93 + 4 * v100) << 31) >> 31) & 0x9908B0DF;
      *(_DWORD *)(v93 + 4 * v97) = v101;
      if (v100 == 623)
        v102 = 0;
      else
        v102 = v100 + 1;
      if (v100 >= 0xE3)
        v103 = -227;
      else
        v103 = 397;
      v104 = *(_DWORD *)(v93 + 4 * (v103 + v100)) ^ ((*(_DWORD *)(v93 + 4 * v102) & 0x7FFFFFFE | *(_DWORD *)(v93 + 4 * v100) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v93 + 4 * v102) << 31) >> 31) & 0x9908B0DF;
      *(_DWORD *)(v93 + 4 * v100) = v104;
      *(_QWORD *)(v93 + 2496) = v102;
      *(_QWORD *)&v493 = v487;
      v105 = sub_223533948((uint64_t)a2, (int *)v487, (uint64_t)&unk_2245BA939, (uint64_t **)&v493);
      v106 = ((v104 ^ (v104 >> 11)) << 7) & 0x9D2C5680 ^ v104 ^ (v104 >> 11);
      v107 = (v106 << 15) & 0xEFC60000 ^ v106;
      v108 = ((v101 ^ (v101 >> 11)) << 7) & 0x9D2C5680 ^ v101 ^ (v101 >> 11);
      v109 = (v108 << 15) & 0xEFC60000 ^ v108 ^ (((v108 << 15) & 0xEFC60000 ^ v108) >> 18);
      v92 = ((unint64_t)(v107 ^ (v107 >> 18)) << 32) | ((unint64_t)((unsigned __int16)(v107 ^ (v107 >> 18)) >> 8) << 40) | v109 & 0xFFFFFF00 | ((unint64_t)HIBYTE(v107) << 56) | ((unint64_t)BYTE2(v107) << 48) | v109 & 0x3F | 0x80;
      v110 = ((v99 ^ (v99 >> 11)) << 7) & 0x9D2C5680 ^ v99 ^ (v99 >> 11);
      v111 = (v110 << 15) & 0xEFC60000 ^ v110;
      v112 = ((v96 ^ (v96 >> 11)) << 7) & 0x9D2C5680 ^ v96 ^ (v96 >> 11);
      v91 = (v112 << 15) & 0xEFC60000 ^ v112 ^ (((v112 << 15) & 0xEFC60000 ^ v112) >> 18) | ((unint64_t)(v111 ^ (v111 >> 18)) << 32) | ((unint64_t)((unsigned __int16)(v111 ^ (v111 >> 18)) >> 8) << 40) | ((unint64_t)HIBYTE(v111) << 56) | ((unint64_t)(HIWORD(v111) & 0xF | 0x40) << 48);
      *(uint64_t *)((char *)v105 + 28) = v91;
      *(uint64_t *)((char *)v105 + 36) = v92;
LABEL_138:
      v72.i32[3] = __len.i32[3];
      v71 = vaddq_f32(v435, __len);
      v113 = v466;
      v440 = v71;
      if (v466 < v467)
      {
        *((_DWORD *)v466 + 2) = __len.i32[2];
        *(_QWORD *)v113 = __len.i64[0];
        *((_DWORD *)v113 + 5) = v71.i32[2];
        *(_QWORD *)(v113 + 12) = v71.i64[0];
        v114 = v113 + 40;
        *((_QWORD *)v113 + 3) = v91;
        *((_QWORD *)v113 + 4) = v92;
        goto LABEL_152;
      }
      v115 = (char *)v465;
      v116 = 0xCCCCCCCCCCCCCCCDLL * ((v466 - (_BYTE *)v465) >> 3);
      v117 = v116 + 1;
      if (v116 + 1 > 0x666666666666666)
        sub_22329A3C4();
      if (0x999999999999999ALL * ((v467 - (_BYTE *)v465) >> 3) > v117)
        v117 = 0x999999999999999ALL * ((v467 - (_BYTE *)v465) >> 3);
      if (0xCCCCCCCCCCCCCCCDLL * ((v467 - (_BYTE *)v465) >> 3) >= 0x333333333333333)
        v118 = 0x666666666666666;
      else
        v118 = v117;
      if (v118 > 0x666666666666666)
        sub_223174E94();
      v119 = (char *)operator new(40 * v118);
      v120 = &v119[8 * ((v466 - (_BYTE *)v465) >> 3)];
      *(_QWORD *)v120 = __len.i64[0];
      *((_DWORD *)v120 + 2) = __len.i32[2];
      v71.i32[3] = v440.i32[3];
      *(_QWORD *)(v120 + 12) = v440.i64[0];
      *((_DWORD *)v120 + 5) = v440.i32[2];
      *((_QWORD *)v120 + 3) = v91;
      *((_QWORD *)v120 + 4) = v92;
      v121 = &v119[40 * v116];
      if (v113 == v115)
      {
        v11 = v437;
        v114 = v120 + 40;
        v465 = v121;
        v467 = &v119[40 * v118];
        if (v113)
          goto LABEL_151;
      }
      else
      {
        v11 = v437;
        do
        {
          v122 = *((_QWORD *)v113 - 5);
          v113 -= 40;
          v123 = *((_DWORD *)v113 + 2);
          *((_QWORD *)v121 - 5) = v122;
          v121 -= 40;
          *((_DWORD *)v121 + 2) = v123;
          v124 = *(_QWORD *)(v113 + 12);
          *((_DWORD *)v121 + 5) = *((_DWORD *)v113 + 5);
          *(_QWORD *)(v121 + 12) = v124;
          v71 = *(float32x4_t *)(v113 + 24);
          *(float32x4_t *)(v121 + 24) = v71;
        }
        while (v113 != v115);
        v113 = v115;
        v114 = v120 + 40;
        v465 = v121;
        v467 = &v119[40 * v118];
        if (v113)
LABEL_151:
          operator delete(v113);
      }
LABEL_152:
      v466 = v114;
      if (v436)
      {
        if (v474 >= 0)
          v125 = &v473;
        else
          v125 = v473;
        if (v474 >= 0)
          v126 = HIBYTE(v474);
        else
          v126 = v474;
        v127 = v126 + 11;
        memset(&v471, 0, sizeof(v471));
        if (v126 + 11 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v127 < 0x17)
        {
          *(_DWORD *)((char *)v471.__r_.__value_.__r.__words + 7) = 778989411;
          v471.__r_.__value_.__r.__words[0] = *(_QWORD *)"cv3d.recon.";
          *((_BYTE *)&v471.__r_.__value_.__s + 23) = 11;
          v133 = &v471;
          v132 = 0x6365722E64337663;
        }
        else
        {
          v128 = v127 | 7;
          v61 = (v127 | 7) == 23;
          v129 = (v127 & 0xFFFFFFFFFFFFFFF8) + 8;
          if (!v61)
            v129 = v128;
          v130 = v129 + 1;
          v131 = (char *)operator new(v129 + 1);
          v132 = (uint64_t)v131;
          *v131 = 0;
          v471.__r_.__value_.__r.__words[2] = v130 | 0x8000000000000000;
          *(_OWORD *)&v471.__r_.__value_.__l.__data_ = (unint64_t)v131;
          if ((v130 & 0x7FFFFFFFFFFFFFFFLL) - 1 >= 0xB)
          {
            *(_DWORD *)(v131 + 7) = 778989411;
            *(_QWORD *)v131 = *(_QWORD *)"cv3d.recon.";
            v471.__r_.__value_.__l.__size_ = 11;
            v133 = (std::string *)v131;
          }
          else
          {
            v133 = (std::string *)operator new(0x17uLL);
            *(_DWORD *)((char *)v133->__r_.__value_.__r.__words + 7) = 778989411;
            v133->__r_.__value_.__r.__words[0] = *(_QWORD *)"cv3d.recon.";
            operator delete((void *)v132);
            v471.__r_.__value_.__r.__words[0] = (std::string::size_type)v133;
            *(_OWORD *)&v471.__r_.__value_.__r.__words[1] = xmmword_22461D680;
            v132 = (uint64_t)v133;
          }
        }
        v133->__r_.__value_.__s.__data_[11] = 0;
        if ((v471.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v134 = 22;
        else
          v134 = (v471.__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
        if ((v471.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v135 = HIBYTE(v471.__r_.__value_.__r.__words[2]);
        else
          v135 = v471.__r_.__value_.__l.__size_;
        if (v134 - v135 >= v126)
        {
          a5 = v432;
          if (v126)
          {
            if ((v471.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v139 = &v471;
            else
              v139 = (std::string *)v132;
            memmove((char *)v139 + v135, v125, v126);
            v140 = v135 + v126;
            if (SHIBYTE(v471.__r_.__value_.__r.__words[2]) < 0)
              v471.__r_.__value_.__l.__size_ = v135 + v126;
            else
              *((_BYTE *)&v471.__r_.__value_.__s + 23) = v140 & 0x7F;
            v141 = (char *)v139 + v140;
            goto LABEL_199;
          }
        }
        else
        {
          v136 = v135 + v126;
          if (0x7FFFFFFFFFFFFFF6 - v134 < v135 + v126 - v134)
            sub_22316DBC0();
          if ((v471.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v132 = (uint64_t)&v471;
          v137 = 0x7FFFFFFFFFFFFFF7;
          if (v134 < 0x3FFFFFFFFFFFFFF3)
          {
            v138 = 2 * v134;
            if (v136 > 2 * v134)
              v138 = v135 + v126;
            if (v138 >= 0x17)
            {
              v142 = (v138 & 0xFFFFFFFFFFFFFFF8) + 8;
              v143 = v138 | 7;
              if (v143 == 23)
                v143 = v142;
              v137 = v143 + 1;
            }
            else
            {
              v137 = 23;
            }
          }
          v144 = operator new(v137);
          v145 = (std::string::size_type)v144;
          if (v135)
            memcpy(v144, (const void *)v132, v135);
          memcpy((void *)(v145 + v135), v125, v126);
          if (v134 != 22)
            operator delete((void *)v132);
          v471.__r_.__value_.__l.__size_ = v135 + v126;
          v471.__r_.__value_.__r.__words[2] = v137 | 0x8000000000000000;
          v471.__r_.__value_.__r.__words[0] = v145;
          v141 = (_BYTE *)(v145 + v136);
          a5 = v432;
LABEL_199:
          *v141 = 0;
        }
        v146 = atomic_load((unsigned __int8 *)&qword_255795630);
        a7 = v434;
        v11 = v437;
        v77 = v438;
        if ((v146 & 1) == 0 && __cxa_guard_acquire(&qword_255795630))
        {
          v207 = operator new(0x20uLL);
          v207[1] = 0;
          v207[2] = 0;
          *v207 = &off_24EC7AA58;
          v207[3] = &off_24EC7A9C0;
          qword_255795620 = (uint64_t)(v207 + 3);
          *(_QWORD *)algn_255795628 = v207;
          *(_QWORD *)&v487[8] = 0;
          *(_QWORD *)v487 = 0;
          sub_223167354((uint64_t)v487);
          __cxa_atexit((void (*)(void *))sub_224569E58, &qword_255795620, &dword_22314D000);
          __cxa_guard_release(&qword_255795630);
        }
        v147 = atomic_load((unsigned __int8 *)&qword_255795618);
        if ((v147 & 1) == 0 && __cxa_guard_acquire(&qword_255795618))
        {
          sub_224568628((uint64_t)v487);
          sub_223199C58("com.apple.cv3d", (unint64_t)v487, &qword_255795600);
          if (v487[24] && (v487[23] & 0x80000000) != 0)
            operator delete(*(void **)v487);
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_255795600, &dword_22314D000);
          __cxa_guard_release(&qword_255795618);
        }
        if (os_variant_has_internal_diagnostics())
        {
          v148 = atomic_load((unsigned __int8 *)&qword_2557952F8);
          if ((v148 & 1) == 0 && __cxa_guard_acquire(&qword_2557952F8))
          {
            v487[0] = 0;
            v487[24] = 0;
            sub_224147A1C(&qword_2557952D8, (uint64_t)v487);
            if (v487[24] && (v487[23] & 0x80000000) != 0)
              operator delete(*(void **)v487);
            __cxa_atexit((void (*)(void *))sub_224148004, &qword_2557952D8, &dword_22314D000);
            __cxa_guard_release(&qword_2557952F8);
          }
          v149 = qword_2557952E8;
          if (!qword_2557952E8)
          {
            sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C);
            v150 = atomic_load((unsigned __int8 *)&qword_255795680);
            if ((v150 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
            {
              __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
              __cxa_guard_release(&qword_255795680);
            }
            if (!byte_255795670 || byte_255795678)
            {
              v151 = qword_255795648;
              for (i = qword_255795650; v151 != i; v151 += 16)
                (*(void (**)(_QWORD, const char *, uint64_t, void *, _QWORD))v151)(*(_QWORD *)(v151 + 8), "p_", 2, &unk_2245B11CF, 0);
            }
            v153 = atomic_load((unsigned __int8 *)&qword_255795680);
            if ((v153 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
            {
              __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
              __cxa_guard_release(&qword_255795680);
            }
            if (!byte_255795670)
              abort();
            qword_255795660(*(_QWORD *)algn_255795668, "p_", 2, &unk_2245B11CF, 0);
            v149 = qword_2557952E8;
          }
          v154 = *(_QWORD *)(v149 + 64);
          v155 = (std::mutex *)(v154 + 32);
          std::mutex::lock((std::mutex *)(v154 + 32));
          v157 = *(_QWORD *)(v154 + 96);
          v156 = *(_QWORD *)(v154 + 104);
          std::mutex::unlock(v155);
          if (v157 == v156)
            goto LABEL_240;
          v158 = atomic_load((unsigned __int8 *)&qword_2557952F8);
          if ((v158 & 1) == 0 && __cxa_guard_acquire(&qword_2557952F8))
          {
            v487[0] = 0;
            v487[24] = 0;
            sub_224147A1C(&qword_2557952D8, (uint64_t)v487);
            if (v487[24] && (v487[23] & 0x80000000) != 0)
              operator delete(*(void **)v487);
            __cxa_atexit((void (*)(void *))sub_224148004, &qword_2557952D8, &dword_22314D000);
            __cxa_guard_release(&qword_2557952F8);
          }
          v159 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
          if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v159 + 24))(v159))
          {
LABEL_240:
            v77 = v438;
          }
          else
          {
            memset(v490, 0, sizeof(v490));
            v491[0] = 728325608;
            kdebug_trace();
            sub_22414CE34(0, (uint64_t)v487);
            v160 = *(_QWORD *)v487;
            v161 = *(_QWORD *)&v487[8];
            if (*(_QWORD *)v487 != *(_QWORD *)&v487[8])
            {
              v162.i64[0] = 0x3F0000003F000000;
              v162.i64[1] = 0x3F0000003F000000;
              v163 = vmulq_f32(vsubq_f32(v440, __len), v162);
              v164 = vmulq_f32(vaddq_f32(__len, v440), v162);
              do
              {
                v162.i64[0] = *(_QWORD *)v160;
                v162.i32[2] = *(_DWORD *)(v160 + 8);
                v162 = vaddq_f32(v164, vmulq_f32(v163, v162));
                *(_DWORD *)(v160 + 8) = v162.i32[2];
                *(_QWORD *)v160 = v162.i64[0];
                v160 += 12;
              }
              while (v160 != v161);
            }
            sub_22456D250("[%.2f_%.2f_%.2f]", &v468, (float)(*(float *)&v462 * v454), *(_QWORD *)&v80, *(_QWORD *)&v78);
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v159 + 24))(v159))
            {
              v495[0] = v468.__r_.__value_.__l.__size_;
              v165 = v468.__r_.__value_.__r.__words[0];
              *(_QWORD *)((char *)v495 + 7) = *(std::string::size_type *)((char *)&v468.__r_.__value_.__r.__words[1] + 7);
              v166 = SHIBYTE(v468.__r_.__value_.__r.__words[2]);
              memset(&v468, 0, sizeof(v468));
              *(_QWORD *)&v477 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
              v430 = v430 & 0xFFFFFFFFFFFFFF00 | 2;
              *((_QWORD *)&v477 + 1) = v430;
              v167 = atomic_load((unsigned __int8 *)&qword_2557952F8);
              if ((v167 & 1) == 0 && __cxa_guard_acquire(&qword_2557952F8))
              {
                LOBYTE(v493) = 0;
                v494[8] = 0;
                sub_224147A1C(&qword_2557952D8, (uint64_t)&v493);
                if (v494[8] && (v494[7] & 0x80000000) != 0)
                  operator delete((void *)v493);
                __cxa_atexit((void (*)(void *))sub_224148004, &qword_2557952D8, &dword_22314D000);
                __cxa_guard_release(&qword_2557952F8);
                a5 = v432;
                a7 = v434;
                v11 = v437;
              }
              if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v159 + 24))(v159))
              {
                v168 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v159 + 56))(v159);
                v469.__r_.__value_.__r.__words[0] = v165;
                v469.__r_.__value_.__l.__size_ = v495[0];
                *(std::string::size_type *)((char *)&v469.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v495 + 7);
                *((_BYTE *)&v469.__r_.__value_.__s + 23) = v166;
                v495[0] = 0;
                *(_QWORD *)((char *)v495 + 7) = 0;
                v470 = 1;
                sub_22329F414((uint64_t)v487, (__int128 *)&v469, &v477, &v475);
                v170 = *v168;
                v169 = (std::__shared_weak_count *)v168[1];
                v479 = *v168;
                v480 = v169;
                v77 = v438;
                if (v169)
                {
                  p_shared_owners = (unint64_t *)&v169->__shared_owners_;
                  do
                    v172 = __ldxr(p_shared_owners);
                  while (__stxr(v172 + 1, p_shared_owners));
                }
                v173 = v476;
                v478.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24EC6A3B8;
                *(_OWORD *)&v478.__r_.__value_.__r.__words[1] = v476;
                v476 = 0uLL;
                *(_QWORD *)&v493 = v170;
                *((_QWORD *)&v493 + 1) = v169;
                if (v169)
                {
                  v174 = (unint64_t *)&v169->__shared_owners_;
                  do
                    v175 = __ldxr(v174);
                  while (__stxr(v175 + 1, v174));
                }
                *(_QWORD *)v494 = &off_24EC6A3B8;
                *(_OWORD *)&v494[8] = v173;
                if (*((_QWORD *)&v173 + 1))
                {
                  v176 = (unint64_t *)(*((_QWORD *)&v173 + 1) + 8);
                  do
                    v177 = __ldxr(v176);
                  while (__stxr(v177 + 1, v176));
                }
                (*(void (**)(void))(qword_2557952D8 + 16))();
                v178 = *(std::__shared_weak_count **)&v494[16];
                if (!*(_QWORD *)&v494[16])
                  goto LABEL_235;
                v179 = (unint64_t *)(*(_QWORD *)&v494[16] + 8);
                do
                  v180 = __ldaxr(v179);
                while (__stlxr(v180 - 1, v179));
                if (!v180)
                {
                  ((void (*)(std::__shared_weak_count *))v178->__on_zero_shared)(v178);
                  std::__shared_weak_count::__release_weak(v178);
                  v181 = (std::__shared_weak_count *)*((_QWORD *)&v493 + 1);
                  if (*((_QWORD *)&v493 + 1))
                  {
LABEL_236:
                    v182 = (unint64_t *)&v181->__shared_owners_;
                    do
                      v183 = __ldaxr(v182);
                    while (__stlxr(v183 - 1, v182));
                    if (!v183)
                    {
                      ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
                      std::__shared_weak_count::__release_weak(v181);
                    }
                  }
                }
                else
                {
LABEL_235:
                  v181 = (std::__shared_weak_count *)*((_QWORD *)&v493 + 1);
                  if (*((_QWORD *)&v493 + 1))
                    goto LABEL_236;
                }
                v185 = (std::__shared_weak_count *)v478.__r_.__value_.__r.__words[2];
                if (!v478.__r_.__value_.__r.__words[2])
                  goto LABEL_250;
                v186 = (unint64_t *)(v478.__r_.__value_.__r.__words[2] + 8);
                do
                  v187 = __ldaxr(v186);
                while (__stlxr(v187 - 1, v186));
                if (!v187)
                {
                  ((void (*)(std::__shared_weak_count *))v185->__on_zero_shared)(v185);
                  std::__shared_weak_count::__release_weak(v185);
                  v188 = v480;
                  if (v480)
                  {
LABEL_251:
                    v189 = (unint64_t *)&v188->__shared_owners_;
                    do
                      v190 = __ldaxr(v189);
                    while (__stlxr(v190 - 1, v189));
                    if (!v190)
                    {
                      ((void (*)(std::__shared_weak_count *))v188->__on_zero_shared)(v188);
                      std::__shared_weak_count::__release_weak(v188);
                    }
                  }
                }
                else
                {
LABEL_250:
                  v188 = v480;
                  if (v480)
                    goto LABEL_251;
                }
                v191 = (std::__shared_weak_count *)*((_QWORD *)&v476 + 1);
                if (*((_QWORD *)&v476 + 1))
                {
                  v192 = (unint64_t *)(*((_QWORD *)&v476 + 1) + 8);
                  do
                    v193 = __ldaxr(v192);
                  while (__stlxr(v193 - 1, v192));
                  if (!v193)
                  {
                    ((void (*)(std::__shared_weak_count *))v191->__on_zero_shared)(v191);
                    std::__shared_weak_count::__release_weak(v191);
                  }
                }
                if (v470 && SHIBYTE(v469.__r_.__value_.__r.__words[2]) < 0)
                {
                  v184 = (void *)v469.__r_.__value_.__r.__words[0];
LABEL_264:
                  operator delete(v184);
                }
              }
              else
              {
                v77 = v438;
                if (v166 < 0)
                {
                  v184 = (void *)v165;
                  goto LABEL_264;
                }
              }
            }
            else
            {
              v77 = v438;
            }
            if (SHIBYTE(v468.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v468.__r_.__value_.__l.__data_);
            sub_22316F8F4((uint64_t *)v487);
            kdebug_trace();
          }
        }
        v493 = 0u;
        *(_OWORD *)v494 = 0u;
        *(_DWORD *)&v494[16] = 728325624;
        kdebug_trace();
        v194 = HIBYTE(v471.__r_.__value_.__r.__words[2]);
        if ((v471.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v194 = v471.__r_.__value_.__l.__size_;
        if (v194 >= 0x11)
        {
          v195 = &v471;
          if ((v471.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v195 = (std::string *)v471.__r_.__value_.__r.__words[0];
          v196 = v195->__r_.__value_.__r.__words[0];
          v197 = v195->__r_.__value_.__l.__size_;
          v198 = v195->__r_.__value_.__s.__data_[16];
          if (v196 == 0x6365722E64337663 && v197 == 0x73746174532E6E6FLL && v198 == 46)
          {
            v201 = atomic_load((unsigned __int8 *)&qword_255788F38);
            if ((v201 & 1) == 0 && __cxa_guard_acquire(&qword_255788F38))
            {
              v208 = sub_223FD6598();
              v209 = *v208;
              v210 = v208[1];
              *(_QWORD *)v487 = *v208;
              *(_QWORD *)&v487[8] = v210;
              if (v210)
              {
                v211 = (unint64_t *)(v210 + 8);
                do
                  v212 = __ldxr(v211);
                while (__stxr(v212 + 1, v211));
                v210 = *(_QWORD *)&v487[8];
              }
              off_255788F28.n128_u64[0] = v209;
              unk_255788F30 = v210;
              *(_QWORD *)&v487[8] = 0;
              *(_QWORD *)v487 = 0;
              sub_22319828C((uint64_t)v487);
              __cxa_atexit((void (*)(void *))sub_2231982F4, &off_255788F28, &dword_22314D000);
              __cxa_guard_release(&qword_255788F38);
              a5 = v432;
              a7 = v434;
              v11 = v437;
              v77 = v438;
            }
            sub_22414CE34(0, (uint64_t)v487);
            v202 = *(_QWORD *)v487;
            v203 = *(_QWORD *)&v487[8];
            if (*(_QWORD *)v487 != *(_QWORD *)&v487[8])
            {
              v204.i64[0] = 0x3F0000003F000000;
              v204.i64[1] = 0x3F0000003F000000;
              v205 = vmulq_f32(vsubq_f32(v440, __len), v204);
              v206 = vmulq_f32(vaddq_f32(__len, v440), v204);
              do
              {
                v204.i64[0] = *(_QWORD *)v202;
                v204.i32[2] = *(_DWORD *)(v202 + 8);
                v204 = vaddq_f32(v206, vmulq_f32(v205, v204));
                *(_DWORD *)(v202 + 8) = v204.i32[2];
                *(_QWORD *)v202 = v204.i64[0];
                v202 += 12;
              }
              while (v202 != v203);
            }
            sub_22456D250("[%.2f_%.2f_%.2f]", (std::string *)v490, (float)(*(float *)&v462 * v454), *(_QWORD *)&v80, *(_QWORD *)&v78, v426, v427);
            if ((v490[23] & 0x80000000) != 0)
              operator delete(*(void **)v490);
            sub_22316F8F4((uint64_t *)v487);
          }
        }
        kdebug_trace();
        if (SHIBYTE(v471.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v471.__r_.__value_.__l.__data_);
        goto LABEL_97;
      }
      v77 = v438;
LABEL_97:
      v61 = v79++ == v452;
      if (v61)
        goto LABEL_93;
    }
  }
LABEL_85:
  if (SHIBYTE(v474) < 0)
  {
    operator delete(v473);
    v75 = v484;
    if (v484 != v483)
      goto LABEL_87;
LABEL_322:
    v76 = 4;
    v75 = v483;
    goto LABEL_323;
  }
  v75 = v484;
  if (v484 == v483)
    goto LABEL_322;
LABEL_87:
  if (!v75)
    goto LABEL_324;
  v76 = 5;
LABEL_323:
  v71 = (float32x4_t)((__n128 (*)(void))*(_QWORD *)(*v75 + 8 * v76))();
LABEL_324:
  *(int32x2_t *)v71.f32 = *a4;
  *(int32x2_t *)v72.i8 = a4[2];
  v213 = (float32x2_t)vzip1_s32(*a4, *(int32x2_t *)v72.i8);
  v71.i32[2] = a4[1].i32[0];
  v72.i32[2] = a4[3].i32[0];
  v214 = (float32x2_t)a4[4];
  v73.i32[0] = a4[5].i32[0];
  v215 = (float32x2_t)vtrn2q_s32((int32x4_t)v71, v72).u64[0];
  v216 = (float32x2_t)vzip2q_s32((int32x4_t)v71, v72).u64[0];
  v217 = (int8x16_t)vdupq_lane_s32((int32x2_t)v215, 0);
  *(int32x2_t *)v74.f32 = a4[6];
  v74.i32[2] = a4[7].i32[0];
  v218 = (int8x16_t)vnegq_f32(v74);
  *(float32x2_t *)v219.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(v213, *(float *)v218.i32), v215, *(float32x2_t *)v74.f32, 1), v216, v74, 2);
  v220 = (float32x2_t)vextq_s8(v217, (int8x16_t)vdupq_lane_s32((int32x2_t)v215, 1), 0xCuLL).u64[0];
  *(float32x2_t *)&v219.u32[2] = vmla_f32(vmls_lane_f32(vmul_f32(v214, *(float32x2_t *)v218.i8), (float32x2_t)vdup_lane_s32((int32x2_t)v214, 1), *(float32x2_t *)v74.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v218, v218, 8uLL), v73);
  v217.i32[0] = a1[1].i32[0];
  *(float32x2_t *)v221.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(v213, COERCE_FLOAT(*a1)), v220, *a1, 1), v216, *(float *)v217.i32);
  *(float32x2_t *)&v221.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(v214, *a1), (float32x2_t)vdup_lane_s32((int32x2_t)*a1, 1), v214, 1), *(float32x2_t *)v217.i8, v73);
  v222 = vaddq_f32(v221, v219);
  v464 = v222.i32[2];
  v463 = v222.i64[0];
  v223 = (uint64_t)v486;
  if (!v486)
    goto LABEL_327;
  if (v486 != v485)
  {
    v223 = (*v486)[2]();
LABEL_327:
    v482 = (_BYTE *)v223;
    if (v223)
      goto LABEL_331;
    goto LABEL_330;
  }
  v482 = v481;
  (*((void (**)(uint64_t (***)(), _BYTE *))v485[0] + 3))(v485, v481);
  if (v482)
    goto LABEL_331;
LABEL_330:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 41, (uint64_t)"is_part_of_visibility_map && \"Vmap callback not setup\"", 54, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_331:
  v475 = operator new(0x20uLL);
  v476 = xmmword_2245C6440;
  strcpy((char *)v475, "Volumetric.Privacy.ChunkMesh");
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v226 = sub_2241471F8();
    v227 = v226[2];
    if (!v227)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v227 = v226[2];
    }
    v228 = *(_QWORD *)(v227 + 64);
    v229 = (std::mutex *)(v228 + 32);
    std::mutex::lock((std::mutex *)(v228 + 32));
    v231 = *(_QWORD *)(v228 + 96);
    v230 = *(_QWORD *)(v228 + 104);
    std::mutex::unlock(v229);
    if (v231 != v230)
    {
      *(_QWORD *)v487 = "cv3d.recon.";
      *(_QWORD *)&v487[8] = 11;
      v232 = HIBYTE(v476);
      v233 = &v475;
      if (v476 < 0)
      {
        v233 = v475;
        v232 = v476;
      }
      *(_QWORD *)&v487[16] = v233;
      *(_QWORD *)&v487[24] = v232;
      sub_2231A9820((uint64_t)v487, (uint64_t)&v487[32], 0, 0, (std::string *)&v493);
      v234 = v494[7];
      v235 = v493;
      sub_2241471F8();
      if ((v234 & 0x80u) == 0)
        v236 = &v493;
      else
        v236 = (__int128 *)v235;
      if ((v234 & 0x80u) == 0)
        v237 = v234;
      else
        v237 = *((_QWORD *)&v235 + 1);
      v238 = (*(uint64_t (**)(uint64_t *, __int128 *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v236, v237);
      v239 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v238 + 24))(v238);
      v240 = v239;
      if ((v494[7] & 0x80000000) != 0)
      {
        operator delete((void *)v493);
        if (v240)
          goto LABEL_346;
      }
      else if (v239)
      {
LABEL_346:
        *(_QWORD *)v487 = "cv3d.recon.";
        *(_QWORD *)&v487[8] = 11;
        v241 = HIBYTE(v476);
        v242 = &v475;
        if (v476 < 0)
        {
          v242 = v475;
          v241 = v476;
        }
        *(_QWORD *)&v487[16] = v242;
        *(_QWORD *)&v487[24] = v241;
        sub_2231A9820((uint64_t)v487, (uint64_t)&v487[32], 0, 0, &v469);
        sub_224569D7C();
        sub_224569A80();
        if (os_variant_has_internal_diagnostics())
        {
          v243 = sub_2241471F8();
          v244 = v243[2];
          if (!v244)
          {
            if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
            {
              abort();
            }
            v244 = v243[2];
          }
          v245 = *(_QWORD *)(v244 + 64);
          v246 = (std::mutex *)(v245 + 32);
          std::mutex::lock((std::mutex *)(v245 + 32));
          v248 = *(_QWORD *)(v245 + 96);
          v247 = *(_QWORD *)(v245 + 104);
          std::mutex::unlock(v246);
          if (v248 != v247)
          {
            v249 = HIBYTE(v469.__r_.__value_.__r.__words[2]);
            v250 = *(_OWORD *)&v469.__r_.__value_.__l.__data_;
            sub_2241471F8();
            v251 = (v249 & 0x80u) == 0 ? &v469 : (std::string *)v250;
            v252 = (v249 & 0x80u) == 0 ? v249 : *((_QWORD *)&v250 + 1);
            v253 = (*(uint64_t (**)(uint64_t *, std::string *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v251, v252);
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v253 + 24))(v253))
            {
              v493 = 0u;
              *(_OWORD *)v494 = 0u;
              *(_DWORD *)&v494[16] = 728325608;
              kdebug_trace();
              sub_224141CD8((uint64_t *)&v473, a4, flt_22469B46C);
              *(_QWORD *)v490 = "cv3d.recon.";
              *(_QWORD *)&v490[8] = 11;
              v254 = HIBYTE(v476);
              v255 = &v475;
              if (v476 < 0)
              {
                v255 = v475;
                v254 = v476;
              }
              *(_QWORD *)&v490[16] = v255;
              *(_QWORD *)&v490[24] = v254;
              sub_2231A9820((uint64_t)v490, (uint64_t)v491, 0, 0, &v478);
              v492[0] = v478.__r_.__value_.__l.__size_;
              v256 = v478.__r_.__value_.__r.__words[0];
              *(_QWORD *)((char *)v492 + 7) = *(std::string::size_type *)((char *)&v478.__r_.__value_.__r.__words[1] + 7);
              v257 = HIBYTE(v478.__r_.__value_.__r.__words[2]);
              memset(&v478, 0, sizeof(v478));
              v258 = v473;
              v259 = operator new();
              *(_BYTE *)v259 = 0;
              *(_DWORD *)(v259 + 128) = -1;
              v260 = *((unsigned int *)v258 + 32);
              if ((_DWORD)v260 != -1)
              {
                ((void (*)(_BYTE *, uint64_t, _BYTE *))off_24EC6BD10[v260])(v490, v259, v258);
                *(_DWORD *)(v259 + 128) = v260;
              }
              *(_BYTE *)(v259 + 136) = v258[136];
              *(_QWORD *)v487 = v259;
              *(_QWORD *)&v487[8] = v256;
              *(_QWORD *)&v487[16] = v492[0];
              *(_QWORD *)&v487[23] = *(_QWORD *)((char *)v492 + 7);
              v487[31] = v257;
              v492[0] = 0;
              *(_QWORD *)((char *)v492 + 7) = 0;
              v487[32] = 1;
              v487[40] = 0;
              v489 = 0;
              v11 = v437;
              if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v253 + 24))(v253))
              {
                *(_QWORD *)v490 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
                *(_QWORD *)&v490[8] = 2;
                v261 = sub_2241471F8();
                sub_2235335A0((uint64_t)v261, v253, (uint64_t)v487, (uint64_t)&unk_2245C9EFE, (__int128 *)v490);
              }
              if (v489 && SHIBYTE(v488) < 0)
                operator delete(*(void **)&v487[40]);
              if (v487[32] && (v487[31] & 0x80000000) != 0)
                operator delete(*(void **)&v487[8]);
              v262 = *(_QWORD *)v487;
              *(_QWORD *)v487 = 0;
              if (v262)
                MEMORY[0x227684CE8](v262, 0x1000C4072FAA15ELL);
              if (SHIBYTE(v478.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v478.__r_.__value_.__l.__data_);
              v263 = v473;
              v473 = 0;
              if (v263)
                MEMORY[0x227684CE8](v263, 0x1000C4072FAA15ELL);
              kdebug_trace();
            }
          }
        }
        memset(v487, 0, 32);
        *(_DWORD *)&v487[32] = 728325624;
        kdebug_trace();
        v264 = HIBYTE(v469.__r_.__value_.__r.__words[2]);
        if ((v469.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v264 = v469.__r_.__value_.__l.__size_;
        if (v264 >= 0x11)
        {
          v265 = &v469;
          if ((v469.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v265 = (std::string *)v469.__r_.__value_.__r.__words[0];
          v266 = v265->__r_.__value_.__r.__words[0];
          v267 = v265->__r_.__value_.__l.__size_;
          v268 = v265->__r_.__value_.__s.__data_[16];
          if (v266 == 0x6365722E64337663 && v267 == 0x73746174532E6E6FLL && v268 == 46)
          {
            sub_223187510();
            sub_224141CD8((uint64_t *)&v478, a4, flt_22469B46C);
            *(_QWORD *)&v493 = "cv3d.recon.";
            *((_QWORD *)&v493 + 1) = 11;
            v271 = HIBYTE(v476);
            v272 = &v475;
            if (v476 < 0)
            {
              v272 = v475;
              v271 = v476;
            }
            *(_QWORD *)v494 = v272;
            *(_QWORD *)&v494[8] = v271;
            sub_2231A9820((uint64_t)&v493, (uint64_t)&v494[16], 0, 0, (std::string *)v490);
            v273 = *(void **)v490;
            v274 = v490[23];
            memset(v490, 0, 24);
            v275 = v478.__r_.__value_.__r.__words[0];
            v276 = operator new();
            *(_BYTE *)v276 = 0;
            *(_DWORD *)(v276 + 128) = -1;
            v277 = *(unsigned int *)(v275 + 128);
            if ((_DWORD)v277 != -1)
            {
              ((void (*)(__int128 *, uint64_t, std::string::size_type))off_24EC6BD10[v277])(&v493, v276, v275);
              *(_DWORD *)(v276 + 128) = v277;
            }
            *(_BYTE *)(v276 + 136) = *(_BYTE *)(v275 + 136);
            if (v274 < 0)
              operator delete(v273);
            MEMORY[0x227684CE8](v276, 0x1000C4072FAA15ELL);
            if ((v490[23] & 0x80000000) != 0)
              operator delete(*(void **)v490);
            v278 = v478.__r_.__value_.__r.__words[0];
            v478.__r_.__value_.__r.__words[0] = 0;
            if (v278)
              MEMORY[0x227684CE8](v278, 0x1000C4072FAA15ELL);
          }
        }
        kdebug_trace();
        if (SHIBYTE(v469.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v469.__r_.__value_.__l.__data_);
        v448 = 1;
        goto LABEL_407;
      }
    }
  }
  v448 = 0;
LABEL_407:
  v473 = 0;
  v474 = 0uLL;
  sub_223ACA1C0((_BOOL8)&v463, v11, (int32x4_t *)&v473, *(float *)&v462, v224, v225);
  memset(&v468, 0, sizeof(v468));
  v280 = DWORD2(v474);
  v443 = HIDWORD(v474);
  if (DWORD2(v474) == HIDWORD(v474) + 1)
    goto LABEL_408;
  v296 = *(_DWORD *)(v11 + 4);
  v297 = 73856093 * a5;
  v453 = (float32x4_t)vdupq_n_s32(0x42800000u);
  while (2)
  {
    v298 = v474;
    v451 = DWORD1(v474);
    v449 = v280;
    if ((_DWORD)v474 == DWORD1(v474) + 1)
      goto LABEL_425;
    v455 = (float)v280;
    while (2)
    {
      v299 = HIDWORD(v473);
      v300 = (int)v473;
      if ((_DWORD)v473 == HIDWORD(v473) + 1)
        goto LABEL_428;
      while (2)
      {
        v279.f32[0] = (float)v300;
        v279.f32[1] = (float)v298;
        v279.f32[2] = v455;
        v301 = vmulq_n_f32(v279, *(float *)&v462);
        *(_DWORD *)&v487[8] = v301.i32[2];
        *(_QWORD *)v487 = v301.i64[0];
        LODWORD(v493) = v462;
        *(_DWORD *)v490 = v296;
        if (!v482)
          sub_223198474();
        __lena = v279;
        if (!(*(unsigned int (**)(_BYTE *, _BYTE *, __int128 *, uint64_t *, _BYTE *))(*(_QWORD *)v482 + 48))(v482, v487, &v493, &v463, v490))goto LABEL_432;
        v302 = a7[7];
        if (!*(_QWORD *)&v302)
          goto LABEL_432;
        v303 = vmulq_f32(__lena, v453);
        v304 = vcvt_s32_f32(*(float32x2_t *)v303.f32);
        v305 = (int)v303.f32[2];
        v306 = (19349669 * v304.i32[0]) ^ v297 ^ (83492791 * v304.i32[1]) ^ (37783632 * (int)v303.f32[2]);
        v307 = (uint8x8_t)vcnt_s8(v302);
        v307.i16[0] = vaddlv_u8(v307);
        if (v307.u32[0] > 1uLL)
        {
          v308 = (19349669 * v304.i32[0]) ^ v297 ^ (83492791 * v304.i32[1]) ^ (37783632 * v305);
          if (v306 >= *(_QWORD *)&v302)
            v308 = v306 % *(_QWORD *)&v302;
        }
        else
        {
          v308 = (*(_QWORD *)&v302 - 1) & v306;
        }
        v309 = *(uint64_t ***)(*(_QWORD *)&a7[6] + 8 * v308);
        if (!v309)
          goto LABEL_432;
        v310 = *v309;
        if (!*v309)
        {
LABEL_431:
          a7 = v434;
          goto LABEL_432;
        }
        if (v307.u32[0] < 2uLL)
        {
          v311 = *(_QWORD *)&v302 - 1;
          while (1)
          {
            v313 = v310[1];
            if (v306 == v313)
            {
              if (*((_DWORD *)v310 + 4) == a5
                && *((_DWORD *)v310 + 5) == v304.i32[0]
                && v310[3] == __PAIR64__(v305, v304.u32[1]))
              {
                goto LABEL_459;
              }
            }
            else if ((v313 & v311) != v308)
            {
              goto LABEL_431;
            }
            v310 = (uint64_t *)*v310;
            if (!v310)
              goto LABEL_431;
          }
        }
        while (1)
        {
          v312 = v310[1];
          if (v306 == v312)
            break;
          if (v312 >= *(_QWORD *)&v302)
            v312 %= *(_QWORD *)&v302;
          if (v312 != v308)
            goto LABEL_431;
LABEL_445:
          v310 = (uint64_t *)*v310;
          if (!v310)
            goto LABEL_431;
        }
        if (*((_DWORD *)v310 + 4) != a5
          || *((_DWORD *)v310 + 5) != v304.i32[0]
          || v310[3] != __PAIR64__(v305, v304.u32[1]))
        {
          goto LABEL_445;
        }
LABEL_459:
        v314 = (_DWORD *)v468.__r_.__value_.__l.__size_;
        if (v468.__r_.__value_.__l.__size_ >= v468.__r_.__value_.__r.__words[2])
        {
          v316 = v468.__r_.__value_.__r.__words[0];
          v317 = 0xAAAAAAAAAAAAAAABLL
               * ((uint64_t)(v468.__r_.__value_.__l.__size_ - v468.__r_.__value_.__r.__words[0]) >> 2);
          v318 = v317 + 1;
          if (v317 + 1 > 0x1555555555555555)
            sub_22316E078();
          if (0x5555555555555556
             * ((uint64_t)(v468.__r_.__value_.__r.__words[2] - v468.__r_.__value_.__r.__words[0]) >> 2) > v318)
            v318 = 0x5555555555555556
                 * ((uint64_t)(v468.__r_.__value_.__r.__words[2] - v468.__r_.__value_.__r.__words[0]) >> 2);
          if (0xAAAAAAAAAAAAAAABLL
             * ((uint64_t)(v468.__r_.__value_.__r.__words[2] - v468.__r_.__value_.__r.__words[0]) >> 2) >= 0xAAAAAAAAAAAAAAALL)
            v319 = 0x1555555555555555;
          else
            v319 = v318;
          if (v319)
          {
            __lenb = v304;
            if (v319 > 0x1555555555555555)
              sub_223174E94();
            __srcb = (void *)v319;
            v320 = (char *)operator new(12 * v319);
            v304 = __lenb;
            v319 = (unint64_t)__srcb;
          }
          else
          {
            v320 = 0;
          }
          v321 = (int32x2_t *)&v320[12 * v317];
          *v321 = v304;
          v321[1].i32[0] = v305;
          v322 = (std::string::size_type)v321;
          if (v314 == (_DWORD *)v316)
          {
            a5 = v432;
          }
          else
          {
            a5 = v432;
            do
            {
              v323 = *(_QWORD *)(v314 - 3);
              v314 -= 3;
              v324 = v314[2];
              *(_QWORD *)(v322 - 12) = v323;
              v322 -= 12;
              *(_DWORD *)(v322 + 8) = v324;
            }
            while (v314 != (_DWORD *)v316);
            v314 = (_DWORD *)v316;
          }
          v315 = (std::string::size_type)&v321[1] + 4;
          v468.__r_.__value_.__r.__words[0] = v322;
          v468.__r_.__value_.__r.__words[2] = (std::string::size_type)&v320[12 * v319];
          if (v314)
            operator delete(v314);
        }
        else
        {
          *(int32x2_t *)v468.__r_.__value_.__l.__size_ = v304;
          v314[2] = v305;
          v315 = (std::string::size_type)(v314 + 3);
        }
        v468.__r_.__value_.__l.__size_ = v315;
        if (!v448)
          goto LABEL_431;
        if (v476 >= 0)
          v325 = &v475;
        else
          v325 = v475;
        if (v476 >= 0)
          v326 = HIBYTE(v476);
        else
          v326 = v476;
        v327 = v326 + 11;
        memset(v472, 0, sizeof(v472));
        if (v326 + 11 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        __lenc = v326;
        __src = v325;
        if (v327 < 0x17)
        {
          qmemcpy(v472, "cv3d.recon.", 11);
          v472[23] = 11;
          v333 = v472;
          v332 = 0x6365722E64337663;
        }
        else
        {
          v328 = v327 | 7;
          v61 = (v327 | 7) == 23;
          v329 = (v327 & 0xFFFFFFFFFFFFFFF8) + 8;
          if (!v61)
            v329 = v328;
          v330 = v329 + 1;
          v331 = (char *)operator new(v329 + 1);
          v332 = (uint64_t)v331;
          *v331 = 0;
          *(_QWORD *)&v472[8] = 0;
          *(_QWORD *)&v472[16] = v330 | 0x8000000000000000;
          *(_QWORD *)v472 = v331;
          if ((v330 & 0x7FFFFFFFFFFFFFFFLL) - 1 >= 0xB)
          {
            *(_DWORD *)(v331 + 7) = 778989411;
            *(_QWORD *)v331 = *(_QWORD *)"cv3d.recon.";
            *(_QWORD *)&v472[8] = 11;
            v333 = v331;
          }
          else
          {
            v333 = operator new(0x17uLL);
            *(_DWORD *)(v333 + 7) = 778989411;
            *(_QWORD *)v333 = *(_QWORD *)"cv3d.recon.";
            operator delete((void *)v332);
            *(_QWORD *)v472 = v333;
            *(_OWORD *)&v472[8] = xmmword_22461D680;
            v332 = (uint64_t)v333;
          }
        }
        v333[11] = 0;
        if (v472[23] >= 0)
          v334 = 22;
        else
          v334 = (*(_QWORD *)&v472[16] & 0x7FFFFFFFFFFFFFFFLL) - 1;
        if (v472[23] >= 0)
          v335 = v472[23];
        else
          v335 = *(_QWORD *)&v472[8];
        if (v334 - v335 < __lenc)
        {
          v441 = v335 + __lenc;
          if (0x7FFFFFFFFFFFFFF6 - v334 < v335 + __lenc - v334)
            sub_22316DBC0();
          v336 = v472;
          if (v472[23] < 0)
            v336 = (_BYTE *)v332;
          v439 = v336;
          v337 = 0x7FFFFFFFFFFFFFF7;
          if (v334 < 0x3FFFFFFFFFFFFFF3)
          {
            v338 = 2 * v334;
            if (v441 > 2 * v334)
              v338 = v335 + __lenc;
            if (v338 >= 0x17)
            {
              v341 = (v338 & 0xFFFFFFFFFFFFFFF8) + 8;
              v342 = v338 | 7;
              if (v342 == 23)
                v342 = v341;
              v337 = v342 + 1;
            }
            else
            {
              v337 = 23;
            }
          }
          v343 = (char *)operator new(v337);
          v344 = v343;
          if (v335)
            memcpy(v343, v439, v335);
          memcpy(&v344[v335], __src, __lenc);
          if (v334 != 22)
            operator delete(v439);
          *(_QWORD *)v472 = v344;
          *(_QWORD *)&v472[8] = v335 + __lenc;
          *(_QWORD *)&v472[16] = v337 | 0x8000000000000000;
          v340 = &v344[v441];
          goto LABEL_522;
        }
        if (__lenc)
        {
          if (v472[23] >= 0)
            v332 = (uint64_t)v472;
          memmove((void *)(v332 + v335), __src, __lenc);
          v339 = v335 + __lenc;
          if ((v472[23] & 0x80000000) != 0)
            *(_QWORD *)&v472[8] = v335 + __lenc;
          else
            v472[23] = v339 & 0x7F;
          v340 = (char *)(v332 + v339);
LABEL_522:
          *v340 = 0;
        }
        sub_224569D7C();
        a5 = v432;
        sub_224569A80();
        if (!os_variant_has_internal_diagnostics())
          goto LABEL_578;
        v345 = sub_2241471F8();
        v346 = v345[2];
        if (!v346)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v346 = v345[2];
        }
        v347 = *(_QWORD *)(v346 + 64);
        v348 = (std::mutex *)(v347 + 32);
        std::mutex::lock((std::mutex *)(v347 + 32));
        v350 = *(_QWORD *)(v347 + 96);
        v349 = *(_QWORD *)(v347 + 104);
        std::mutex::unlock(v348);
        if (v350 == v349)
          goto LABEL_578;
        sub_2241471F8();
        v351 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v351 + 24))(v351))
          goto LABEL_578;
        v493 = 0u;
        *(_OWORD *)v494 = 0u;
        *(_DWORD *)&v494[16] = 728325608;
        kdebug_trace();
        v352 = *((unsigned int *)v310 + 8);
        v353 = v434;
        if (0x84BDA12F684BDA13 * ((uint64_t)(*(_QWORD *)&v434[1] - *(_QWORD *)v434) >> 4) <= v352
          && (v354 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 105, (uint64_t)"index < mesh_buffers_.size()", 28, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C), v353 = v434, v354)|| !*(_BYTE *)(*(_QWORD *)&v353[3] + v352)&& (v355 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 106, (uint64_t)"used_buffer_flags_[index] != 0", 30, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C), v353 = v434,
              v355))
        {
          abort();
        }
        v356 = *v353;
        sub_22456D250("[%d_%d_%d]", &v471, *((unsigned int *)v310 + 4), *((unsigned int *)v310 + 5), *((unsigned int *)v310 + 6));
        if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v351 + 24))(v351))
        {
          if (SHIBYTE(v471.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_576;
          goto LABEL_577;
        }
        v495[0] = v471.__r_.__value_.__l.__size_;
        __lend = (void *)v471.__r_.__value_.__r.__words[0];
        *(_QWORD *)((char *)v495 + 7) = *(std::string::size_type *)((char *)&v471.__r_.__value_.__r.__words[1] + 7);
        v357 = SHIBYTE(v471.__r_.__value_.__r.__words[2]);
        memset(&v471, 0, sizeof(v471));
        *(_QWORD *)&v477 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
        v435.i64[0] = v435.i64[0] & 0xFFFFFFFFFFFFFF00 | 2;
        *((_QWORD *)&v477 + 1) = v435.i64[0];
        __srca = sub_2241471F8();
        if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v351 + 24))(v351))
        {
          if (v357 < 0)
          {
            operator delete(__lend);
            a5 = v432;
            if ((SHIBYTE(v471.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_577;
LABEL_576:
            operator delete(v471.__r_.__value_.__l.__data_);
            goto LABEL_577;
          }
LABEL_602:
          a5 = v432;
          if ((SHIBYTE(v471.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_577;
          goto LABEL_576;
        }
        v358 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v351 + 56))(v351);
        *(_QWORD *)v490 = __lend;
        *(_QWORD *)&v490[8] = v495[0];
        *(_QWORD *)&v490[15] = *(_QWORD *)((char *)v495 + 7);
        v490[23] = v357;
        v495[0] = 0;
        *(_QWORD *)((char *)v495 + 7) = 0;
        v490[24] = 1;
        sub_2235336B4(*(_QWORD *)&v356 + 432 * v352, (__int128 *)v490, &v477, &v478);
        v360 = *v358;
        v359 = (std::__shared_weak_count *)v358[1];
        v479 = *v358;
        v480 = v359;
        if (v359)
        {
          v361 = (unint64_t *)&v359->__shared_owners_;
          do
            v362 = __ldxr(v361);
          while (__stxr(v362 + 1, v361));
        }
        v363 = *(_OWORD *)&v478.__r_.__value_.__r.__words[1];
        v469.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24EC6A3B8;
        *(_OWORD *)&v469.__r_.__value_.__r.__words[1] = *(_OWORD *)&v478.__r_.__value_.__r.__words[1];
        *(_OWORD *)&v478.__r_.__value_.__r.__words[1] = 0uLL;
        *(_QWORD *)v487 = v360;
        *(_QWORD *)&v487[8] = v359;
        if (v359)
        {
          v364 = (unint64_t *)&v359->__shared_owners_;
          do
            v365 = __ldxr(v364);
          while (__stxr(v365 + 1, v364));
        }
        *(_QWORD *)&v487[16] = &off_24EC6A3B8;
        *(_OWORD *)&v487[24] = v363;
        if (*((_QWORD *)&v363 + 1))
        {
          v366 = (unint64_t *)(*((_QWORD *)&v363 + 1) + 8);
          do
            v367 = __ldxr(v366);
          while (__stxr(v367 + 1, v366));
        }
        (*(void (**)(uint64_t *, _BYTE *))(*__srca + 16))(__srca, v487);
        v368 = *(std::__shared_weak_count **)&v487[32];
        if (*(_QWORD *)&v487[32])
        {
          v369 = (unint64_t *)(*(_QWORD *)&v487[32] + 8);
          do
            v370 = __ldaxr(v369);
          while (__stlxr(v370 - 1, v369));
          if (!v370)
          {
            ((void (*)(std::__shared_weak_count *))v368->__on_zero_shared)(v368);
            std::__shared_weak_count::__release_weak(v368);
          }
        }
        v371 = *(std::__shared_weak_count **)&v487[8];
        if (*(_QWORD *)&v487[8])
        {
          v372 = (unint64_t *)(*(_QWORD *)&v487[8] + 8);
          do
            v373 = __ldaxr(v372);
          while (__stlxr(v373 - 1, v372));
          if (!v373)
          {
            ((void (*)(std::__shared_weak_count *))v371->__on_zero_shared)(v371);
            std::__shared_weak_count::__release_weak(v371);
          }
        }
        v374 = (std::__shared_weak_count *)v469.__r_.__value_.__r.__words[2];
        if (v469.__r_.__value_.__r.__words[2])
        {
          v375 = (unint64_t *)(v469.__r_.__value_.__r.__words[2] + 8);
          do
            v376 = __ldaxr(v375);
          while (__stlxr(v376 - 1, v375));
          if (!v376)
          {
            ((void (*)(std::__shared_weak_count *))v374->__on_zero_shared)(v374);
            std::__shared_weak_count::__release_weak(v374);
          }
        }
        v377 = v480;
        if (v480)
        {
          v378 = (unint64_t *)&v480->__shared_owners_;
          do
            v379 = __ldaxr(v378);
          while (__stlxr(v379 - 1, v378));
          if (!v379)
          {
            ((void (*)(std::__shared_weak_count *))v377->__on_zero_shared)(v377);
            std::__shared_weak_count::__release_weak(v377);
          }
        }
        v380 = (std::__shared_weak_count *)v478.__r_.__value_.__r.__words[2];
        if (v478.__r_.__value_.__r.__words[2])
        {
          v381 = (unint64_t *)(v478.__r_.__value_.__r.__words[2] + 8);
          do
            v382 = __ldaxr(v381);
          while (__stlxr(v382 - 1, v381));
          if (!v382)
          {
            ((void (*)(std::__shared_weak_count *))v380->__on_zero_shared)(v380);
            std::__shared_weak_count::__release_weak(v380);
          }
        }
        if (!v490[24] || (v490[23] & 0x80000000) == 0)
          goto LABEL_602;
        operator delete(*(void **)v490);
        a5 = v432;
        if (SHIBYTE(v471.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_576;
LABEL_577:
        kdebug_trace();
LABEL_578:
        memset(v487, 0, 32);
        *(_DWORD *)&v487[32] = 728325624;
        kdebug_trace();
        v383 = v472[23];
        if (v472[23] < 0)
          v383 = *(_QWORD *)&v472[8];
        if (v383 < 0x11)
          goto LABEL_590;
        v384 = v472;
        if (v472[23] < 0)
          v384 = *(_BYTE **)v472;
        v385 = *(_QWORD *)v384;
        v386 = *((_QWORD *)v384 + 1);
        v387 = v384[16];
        v388 = v385 == 0x6365722E64337663 && v386 == 0x73746174532E6E6FLL;
        if (v388 && v387 == 46)
        {
          v390 = atomic_load((unsigned __int8 *)&qword_255788F38);
          if ((v390 & 1) == 0 && __cxa_guard_acquire(&qword_255788F38))
          {
            v392 = sub_223FD6598();
            v393 = *v392;
            v394 = v392[1];
            *(_QWORD *)&v493 = *v392;
            *((_QWORD *)&v493 + 1) = v394;
            if (v394)
            {
              v395 = (unint64_t *)(v394 + 8);
              do
                v396 = __ldxr(v395);
              while (__stxr(v396 + 1, v395));
              v394 = *((_QWORD *)&v493 + 1);
            }
            off_255788F28.n128_u64[0] = v393;
            unk_255788F30 = v394;
            v493 = 0uLL;
            sub_22319828C((uint64_t)&v493);
            __cxa_atexit((void (*)(void *))sub_2231982F4, &off_255788F28, &dword_22314D000);
            __cxa_guard_release(&qword_255788F38);
            a5 = v432;
          }
          v391 = *((unsigned int *)v310 + 8);
          if (0x84BDA12F684BDA13 * ((uint64_t)(*(_QWORD *)&v434[1] - *(_QWORD *)v434) >> 4) <= v391
            && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 105, (uint64_t)"index < mesh_buffers_.size()", 28, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C)|| !*(_BYTE *)(*(_QWORD *)&v434[3] + v391)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 106, (uint64_t)"used_buffer_flags_[index] != 0", 30, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          sub_22456D250("[%d_%d_%d]", (std::string *)&v493, *((unsigned int *)v310 + 4), *((unsigned int *)v310 + 5), *((unsigned int *)v310 + 6));
          a7 = v434;
          if ((v494[7] & 0x80000000) != 0)
            operator delete((void *)v493);
        }
        else
        {
LABEL_590:
          a7 = v434;
        }
        kdebug_trace();
        if ((v472[23] & 0x80000000) != 0)
          operator delete(*(void **)v472);
LABEL_432:
        v61 = v300++ == v299;
        if (!v61)
          continue;
        break;
      }
LABEL_428:
      v61 = v298++ == v451;
      if (!v61)
        continue;
      break;
    }
LABEL_425:
    v280 = v449 + 1;
    if (v449 != v443)
      continue;
    break;
  }
LABEL_408:
  *(_QWORD *)v490 = operator new(0x20uLL);
  *(_OWORD *)&v490[8] = xmmword_2245B9420;
  strcpy(*(char **)v490, "Stats.Volumetric.Privacy");
  sub_224569D7C();
  sub_224569A80();
  if (!os_variant_has_internal_diagnostics())
    goto LABEL_652;
  v281 = sub_2241471F8();
  v282 = v281[2];
  if (!v282)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v282 = v281[2];
  }
  v283 = *(_QWORD *)(v282 + 64);
  v284 = (std::mutex *)(v283 + 32);
  std::mutex::lock((std::mutex *)(v283 + 32));
  v286 = *(_QWORD *)(v283 + 96);
  v285 = *(_QWORD *)(v283 + 104);
  std::mutex::unlock(v284);
  if (v286 == v285)
    goto LABEL_652;
  *(_QWORD *)v487 = "cv3d.recon.";
  *(_QWORD *)&v487[8] = 11;
  v287 = v490[23];
  v288 = v490;
  if (v490[23] < 0)
  {
    v287 = *(_QWORD *)&v490[8];
    v288 = *(_BYTE **)v490;
  }
  *(_QWORD *)&v487[16] = v288;
  *(_QWORD *)&v487[24] = v287;
  sub_2231A9820((uint64_t)v487, (uint64_t)&v487[32], 0, 0, (std::string *)&v493);
  v289 = v494[7];
  v290 = v493;
  sub_2241471F8();
  v291 = (v289 & 0x80u) == 0 ? &v493 : (__int128 *)v290;
  v292 = (v289 & 0x80u) == 0 ? v289 : *((_QWORD *)&v290 + 1);
  v293 = (*(uint64_t (**)(uint64_t *, __int128 *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v291, v292);
  v294 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v293 + 24))(v293);
  v295 = v294;
  if ((v494[7] & 0x80000000) != 0)
  {
    operator delete((void *)v493);
    if (!v295)
      goto LABEL_652;
  }
  else if (!v294)
  {
    goto LABEL_652;
  }
  *(_QWORD *)v487 = "cv3d.recon.";
  *(_QWORD *)&v487[8] = 11;
  v397 = v490[23];
  v398 = v490;
  if (v490[23] < 0)
  {
    v397 = *(_QWORD *)&v490[8];
    v398 = *(_BYTE **)v490;
  }
  *(_QWORD *)&v487[16] = v398;
  *(_QWORD *)&v487[24] = v397;
  sub_2231A9820((uint64_t)v487, (uint64_t)&v487[32], 0, 0, &v469);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v399 = sub_2241471F8();
    v400 = v399[2];
    if (!v400)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v400 = v399[2];
    }
    v401 = *(_QWORD *)(v400 + 64);
    v402 = (std::mutex *)(v401 + 32);
    std::mutex::lock((std::mutex *)(v401 + 32));
    v404 = *(_QWORD *)(v401 + 96);
    v403 = *(_QWORD *)(v401 + 104);
    std::mutex::unlock(v402);
    if (v404 != v403)
    {
      v405 = HIBYTE(v469.__r_.__value_.__r.__words[2]);
      v406 = *(_OWORD *)&v469.__r_.__value_.__l.__data_;
      sub_2241471F8();
      v407 = (v405 & 0x80u) == 0 ? &v469 : (std::string *)v406;
      v408 = (v405 & 0x80u) == 0 ? v405 : *((_QWORD *)&v406 + 1);
      v409 = (*(uint64_t (**)(uint64_t *, std::string *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v407, v408);
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v409 + 24))(v409))
      {
        memset(v487, 0, 32);
        *(_DWORD *)&v487[32] = 728325608;
        kdebug_trace();
        *(_QWORD *)v472 = 0xAAAAAAAAAAAAAAABLL
                        * ((uint64_t)(v468.__r_.__value_.__l.__size_ - v468.__r_.__value_.__r.__words[0]) >> 2);
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v409 + 24))(v409))
        {
          v494[7] = 14;
          strcpy((char *)&v493, "visible chunks");
          v478.__r_.__value_.__r.__words[0] = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          v478.__r_.__value_.__l.__size_ = 2;
          v410 = sub_2241471F8();
          sub_2231AD778((uint64_t)v410, v409, (uint64_t *)v472, (uint64_t)&v493, (__int128 *)&v478);
          if ((v494[7] & 0x80000000) != 0)
            operator delete((void *)v493);
        }
        kdebug_trace();
      }
    }
  }
  memset(v487, 0, 32);
  *(_DWORD *)&v487[32] = 728325624;
  kdebug_trace();
  v411 = HIBYTE(v469.__r_.__value_.__r.__words[2]);
  if ((v469.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v411 = v469.__r_.__value_.__l.__size_;
  if (v411 >= 0x11)
  {
    v412 = &v469;
    if ((v469.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v412 = (std::string *)v469.__r_.__value_.__r.__words[0];
    v413 = v412->__r_.__value_.__r.__words[0];
    v414 = v412->__r_.__value_.__l.__size_;
    v415 = v412->__r_.__value_.__s.__data_[16];
    if (v413 == 0x6365722E64337663 && v414 == 0x73746174532E6E6FLL && v415 == 46)
    {
      v418 = sub_223187510();
      if ((v469.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v419 = &v469;
      else
        v419 = (std::string *)v469.__r_.__value_.__r.__words[0];
      if ((v469.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v420 = HIBYTE(v469.__r_.__value_.__r.__words[2]);
      else
        v420 = v469.__r_.__value_.__l.__size_;
      *(_QWORD *)&v493 = 0xAAAAAAAAAAAAAAABLL
                       * ((uint64_t)(v468.__r_.__value_.__l.__size_ - v468.__r_.__value_.__r.__words[0]) >> 2);
      sub_22318760C((uint64_t *)v418, v419, v420, (uint64_t *)&v493, (uint64_t)"visible chunks", 14);
    }
  }
  kdebug_trace();
  if (SHIBYTE(v469.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v469.__r_.__value_.__l.__data_);
    if ((v490[23] & 0x80000000) != 0)
      goto LABEL_658;
LABEL_653:
    if ((SHIBYTE(v476) & 0x80000000) == 0)
      goto LABEL_654;
LABEL_659:
    operator delete(v475);
    v421 = v482;
    if (v482 == v481)
      goto LABEL_660;
LABEL_655:
    if (v421)
    {
      v422 = 5;
      goto LABEL_661;
    }
  }
  else
  {
LABEL_652:
    if ((v490[23] & 0x80000000) == 0)
      goto LABEL_653;
LABEL_658:
    operator delete(*(void **)v490);
    if (SHIBYTE(v476) < 0)
      goto LABEL_659;
LABEL_654:
    v421 = v482;
    if (v482 != v481)
      goto LABEL_655;
LABEL_660:
    v422 = 4;
    v421 = v481;
LABEL_661:
    (*(void (**)(void))(*v421 + 8 * v422))();
  }
  memset(&v487[20], 0, 40);
  *(_OWORD *)&v487[4] = 0u;
  *(_DWORD *)v487 = 1065353216;
  *(_DWORD *)&v487[20] = 1065353216;
  *(_DWORD *)&v487[40] = 1065353216;
  v488 = 1065353216;
  v423 = sub_223ACAC14((uint64_t **)&v468, v426, a5, (uint64_t **)&v465, (uint64_t)v487, v427);
  if (v468.__r_.__value_.__r.__words[0])
  {
    v468.__r_.__value_.__l.__size_ = v468.__r_.__value_.__r.__words[0];
    operator delete(v468.__r_.__value_.__l.__data_);
  }
  if (v465)
  {
    v466 = (char *)v465;
    operator delete(v465);
  }
  result = v486;
  if (v486 == v485)
  {
    v425 = 4;
    result = v485;
    return (uint64_t (***)())((uint64_t (*)(__n128))(*result)[v425])(v423);
  }
  else if (v486)
  {
    v425 = 5;
    return (uint64_t (***)())((uint64_t (*)(__n128))(*result)[v425])(v423);
  }
  return result;
}

void sub_22352B0A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,uint64_t a61,void *a62,uint64_t a63)
{
  char a67;
  void *a72;
  void *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  void *v77;
  unint64_t *v78;
  uint64_t v79;
  unint64_t v80;

  MEMORY[0x227684CE8](v74, 0x1000C4072FAA15ELL);
  if (v73 < 0)
  {
    operator delete(v72);
    if (SLOBYTE(STACK[0x24F]) < 0)
    {
LABEL_5:
      operator delete((void *)STACK[0x238]);
      v77 = a72;
      if (!a72)
      {
LABEL_9:
        sub_2231874DC(v75 - 176);
        if (a67 < 0)
          operator delete(a62);
        if (SLOBYTE(STACK[0x227]) < 0)
          operator delete((void *)STACK[0x210]);
        v78 = (unint64_t *)STACK[0x278];
        if ((unint64_t *)STACK[0x278] == &STACK[0x260])
        {
          v79 = 4;
          v78 = &STACK[0x260];
        }
        else
        {
          if (!v78)
            goto LABEL_18;
          v79 = 5;
        }
        (*(void (**)(void))(*v78 + 8 * v79))();
LABEL_18:
        if (a56)
          operator delete(a56);
        v80 = STACK[0x2B8];
        if ((unint64_t *)STACK[0x2B8] == &STACK[0x2A0])
        {
          (*(void (**)(unint64_t *))(STACK[0x2A0] + 32))(&STACK[0x2A0]);
          _Unwind_Resume(a1);
        }
        if (!v80)
          _Unwind_Resume(a1);
        (*(void (**)(unint64_t))(*(_QWORD *)v80 + 40))(v80);
        _Unwind_Resume(a1);
      }
LABEL_8:
      MEMORY[0x227684CE8](v77, 0x1000C4072FAA15ELL);
      goto LABEL_9;
    }
  }
  else if (SLOBYTE(STACK[0x24F]) < 0)
  {
    goto LABEL_5;
  }
  v77 = a72;
  if (!a72)
    goto LABEL_9;
  goto LABEL_8;
}

void sub_22352B900(float32x2_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, int a4@<W3>, unint64_t **a5@<X8>, float a6@<S0>, int32x4_t a7@<Q2>, float32x2_t a8@<D6>, float32x4_t a9@<Q7>)
{
  float32x4_t v9;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  int v17;
  uint64_t v19;
  int32x4_t v20;
  float32x2_t v21;
  float32x2_t v22;
  int32x4_t v23;
  float32x2_t v24;
  char *v25;
  float32x2_t v26;
  float32x4_t v27;
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  uint64_t v46;
  float v47;
  signed int v48;
  signed int v49;
  signed int v50;
  signed int v51;
  signed int v52;
  BOOL v53;
  unint64_t *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int8x8_t v59;
  unint64_t v60;
  uint8x8_t v61;
  uint64_t v62;
  uint64_t **v63;
  uint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unsigned int v74;
  unint64_t v75;
  uint64_t v76;
  unsigned int v77;
  unint64_t v78;
  unsigned int v79;
  unint64_t v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t *v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  unint64_t *v97;
  unint64_t *v98;
  unint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v110;
  int v111[4];
  uint64_t v112;
  float v113;
  float v114;
  uint64_t v115;
  float v116;
  float v117;
  uint64_t v118;
  float v119;
  uint64_t v120;
  float v121;
  float v122;
  float v123;
  float v124;
  int32x4_t v125;
  float v126;
  unint64_t v127;
  int *v128;

  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  v11 = a6 * 64.0;
  if (v11 != 0.0)
  {
    v12 = 0.0 - v11;
    if (v11 >= 0.0)
      v12 = v11;
    if (v12 > 0.000001)
    {
      v13 = *(float *)a2;
      if (*(float *)a2 != 0.0)
      {
        v14 = 0.0 - v13;
        if (*(float *)a2 >= 0.0)
          v14 = *(float *)a2;
        if (v14 > 0.000001)
        {
          a7.i64[0] = *(_QWORD *)(a2 + 4);
          if (*(float *)a7.i32 != 0.0)
          {
            v15 = 0.0 - *(float *)a7.i32;
            if (*(float *)a7.i32 >= 0.0)
              LODWORD(v15) = *(_QWORD *)(a2 + 4);
            if (v15 > 0.000001 && *(float *)&a7.i32[1] != 0.0)
            {
              v16 = 0.0 - *(float *)&a7.i32[1];
              if (*(float *)&a7.i32[1] >= 0.0)
                LODWORD(v16) = HIDWORD(*(_QWORD *)(a2 + 4));
              if (v16 > 0.000001)
              {
                v17 = a4;
                v19 = 0;
                v112 = 0;
                v113 = 0.0;
                v114 = v13;
                v115 = 0;
                v116 = v13;
                v117 = *(float *)a7.i32;
                v118 = 0;
                v119 = *(float *)a7.i32;
                v120 = 0;
                v121 = 0.0;
                v122 = *(float *)&a7.i32[1];
                v123 = v13;
                v124 = 0.0;
                v20 = vuzp2q_s32(a7, vzip1q_s32(a7, a7));
                v23 = v20;
                *(float *)&v23.i32[1] = v13;
                v23.i32[3] = v20.i32[0];
                v125 = v23;
                v126 = 0.0;
                v127 = a7.i64[0];
                v21 = *a1;
                a7.i32[0] = a1[1].i32[0];
                v22 = a1[2];
                v23.i32[0] = a1[3].i32[0];
                v24 = a1[4];
                a8.i32[0] = a1[5].i32[0];
                *(float32x2_t *)a9.f32 = a1[6];
                a9.i32[2] = a1[7].i32[0];
                do
                {
                  v25 = (char *)&v112 + v19;
                  v9.i32[0] = *(_DWORD *)((char *)&v112 + v19 + 8);
                  v26 = *(float32x2_t *)((char *)&v112 + v19);
                  *(float32x2_t *)v27.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(v21, v26.f32[0]), v22, v26, 1), v24, v9.f32[0]);
                  *(float32x2_t *)&v27.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)a7.i8, v26), *(float32x2_t *)v23.i8, v26, 1), *(float32x2_t *)v9.f32, a8);
                  v9 = vaddq_f32(a9, v27);
                  *((_DWORD *)v25 + 2) = v9.i32[2];
                  *(_QWORD *)v25 = v9.i64[0];
                  v19 += 12;
                }
                while (v19 != 96);
                v28 = *((float *)&v112 + 1);
                v29 = v113;
                v30 = v114;
                if (v114 >= *(float *)&v112)
                  v31 = *(float *)&v112;
                else
                  v31 = v114;
                if (*(float *)&v115 >= *((float *)&v112 + 1))
                  v32 = *((float *)&v112 + 1);
                else
                  v32 = *(float *)&v115;
                if (*((float *)&v115 + 1) >= v113)
                  v33 = v113;
                else
                  v33 = *((float *)&v115 + 1);
                if (*(float *)&v112 >= v114)
                  v30 = *(float *)&v112;
                v34 = v116;
                if (v116 >= v31)
                  v35 = v31;
                else
                  v35 = v116;
                if (v117 < v32)
                  v32 = v117;
                if (*(float *)&v118 >= v33)
                  v36 = v33;
                else
                  v36 = *(float *)&v118;
                if (v30 >= v116)
                  v34 = v30;
                if (*((float *)&v118 + 1) < v35)
                  v35 = *((float *)&v118 + 1);
                if (v119 >= v32)
                  v37 = v32;
                else
                  v37 = v119;
                if (*(float *)&v120 < v36)
                  v36 = *(float *)&v120;
                if (v34 < *((float *)&v118 + 1))
                  v34 = *((float *)&v118 + 1);
                v38 = *((float *)&v120 + 1);
                if (*((float *)&v120 + 1) >= v35)
                  v39 = v35;
                else
                  v39 = *((float *)&v120 + 1);
                if (v121 < v37)
                  v37 = v121;
                v40 = v123;
                if (v122 >= v36)
                  v41 = v36;
                else
                  v41 = v122;
                if (v34 >= *((float *)&v120 + 1))
                  v38 = v34;
                if (v123 < v39)
                  v39 = v123;
                if (v124 < v37)
                  v37 = v124;
                if (*(float *)v125.i32 < v41)
                  v41 = *(float *)v125.i32;
                if (v38 >= v123)
                  v40 = v38;
                if (*(float *)&v125.i32[1] >= v39)
                  v42 = v39;
                else
                  v42 = *(float *)&v125.i32[1];
                if (*(float *)&v125.i32[2] >= v37)
                  v43 = v37;
                else
                  v43 = *(float *)&v125.i32[2];
                if (*(float *)&v125.i32[3] < v41)
                  v41 = *(float *)&v125.i32[3];
                if (v40 >= *(float *)&v125.i32[1])
                  v44 = v40;
                else
                  v44 = *(float *)&v125.i32[1];
                if (v126 < v42)
                  v42 = v126;
                if (*(float *)&v127 >= v43)
                  v45 = v43;
                else
                  v45 = *(float *)&v127;
                if (*((float *)&v127 + 1) < v41)
                  v41 = *((float *)&v127 + 1);
                LODWORD(v46) = vcvtms_s32_f32(v42 / v11);
                v47 = v44 >= v126 ? v44 : v126;
                v48 = vcvtms_s32_f32(v47 / v11);
                if (v48 + 1 != (_DWORD)v46)
                {
                  v49 = vcvtms_s32_f32(v45 / v11);
                  v50 = vcvtms_s32_f32(v41 / v11);
                  if (v113 < *((float *)&v115 + 1))
                    v29 = *((float *)&v115 + 1);
                  if (v29 < *(float *)&v118)
                    v29 = *(float *)&v118;
                  if (v29 < *(float *)&v120)
                    v29 = *(float *)&v120;
                  if (v29 < v122)
                    v29 = v122;
                  if (v29 < *(float *)v125.i32)
                    v29 = *(float *)v125.i32;
                  if (v29 < *(float *)&v125.i32[3])
                    v29 = *(float *)&v125.i32[3];
                  if (v29 < *((float *)&v127 + 1))
                    v29 = *((float *)&v127 + 1);
                  if (*((float *)&v112 + 1) < *(float *)&v115)
                    v28 = *(float *)&v115;
                  if (v28 < v117)
                    v28 = v117;
                  if (v28 < v119)
                    v28 = v119;
                  if (v28 < v121)
                    v28 = v121;
                  if (v28 < v124)
                    v28 = v124;
                  if (v28 < *(float *)&v125.i32[2])
                    v28 = *(float *)&v125.i32[2];
                  if (v28 < *(float *)&v127)
                    v28 = *(float *)&v127;
                  v51 = vcvtms_s32_f32(v29 / v11);
                  v52 = vcvtms_s32_f32(v28 / v11);
                  v53 = v52 + 1 == v49 || v51 + 1 == v50;
                  if (!v53)
                  {
                    v54 = 0;
                    v101 = v49;
                    v102 = 73856093 * a4;
                    v46 = (int)v46;
                    v100 = v48;
                    v104 = v52;
                    v105 = v50;
                    v108 = v51;
                    do
                    {
                      v103 = v46;
                      v55 = (_DWORD)v46 << 6;
                      v56 = v101;
                      do
                      {
                        v106 = v56;
                        v110 = (_DWORD)v56 << 6;
                        v57 = v105;
                        v107 = (19349669 * v55) ^ v102 ^ (83492791 * (int)((_DWORD)v56 << 6));
                        do
                        {
                          v58 = (_DWORD)v57 << 6;
                          v111[0] = v17;
                          v111[1] = v55;
                          v111[2] = v110;
                          v111[3] = (_DWORD)v57 << 6;
                          v59 = (int8x8_t)a3[1];
                          if (!*(_QWORD *)&v59)
                            goto LABEL_157;
                          v60 = v107 ^ (37783632 * v58);
                          v61 = (uint8x8_t)vcnt_s8(v59);
                          v61.i16[0] = vaddlv_u8(v61);
                          if (v61.u32[0] > 1uLL)
                          {
                            v62 = v107 ^ (37783632 * v58);
                            if (v60 >= *(_QWORD *)&v59)
                              v62 = v60 % *(_QWORD *)&v59;
                          }
                          else
                          {
                            v62 = (*(_QWORD *)&v59 - 1) & v60;
                          }
                          v63 = *(uint64_t ***)(*a3 + 8 * v62);
                          if (!v63 || (v64 = *v63) == 0)
                          {
LABEL_157:
                            v71 = a3[5];
                            v72 = *(_QWORD *)(v71 + 2496);
                            v73 = (v72 + 1) % 0x270uLL;
                            v74 = *(_DWORD *)(v71 + 4 * ((v72 + 397) % 0x270uLL)) ^ ((*(_DWORD *)(v71 + 4 * v73) & 0x7FFFFFFE | *(_DWORD *)(v71 + 4 * v72) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v71 + 4 * v73) << 31) >> 31) & 0x9908B0DF;
                            *(_DWORD *)(v71 + 4 * v72) = v74;
                            if (v73 == 623)
                              v75 = 0;
                            else
                              v75 = v73 + 1;
                            if (v73 >= 0xE3)
                              v76 = -227;
                            else
                              v76 = 397;
                            v77 = *(_DWORD *)(v71 + 4 * (v76 + v73)) ^ ((*(_DWORD *)(v71 + 4 * v75) & 0x7FFFFFFE | *(_DWORD *)(v71 + 4 * v73) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v71 + 4 * v75) << 31) >> 31) & 0x9908B0DF;
                            *(_DWORD *)(v71 + 4 * v73) = v77;
                            v78 = (v75 + 1) % 0x270;
                            v79 = *(_DWORD *)(v71 + 4 * ((v75 + 397) % 0x270)) ^ ((*(_DWORD *)(v71 + 4 * v78) & 0x7FFFFFFE | *(_DWORD *)(v71 + 4 * v75) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v71 + 4 * v78) << 31) >> 31) & 0x9908B0DF;
                            *(_DWORD *)(v71 + 4 * v75) = v79;
                            if (v78 == 623)
                              v80 = 0;
                            else
                              v80 = v78 + 1;
                            if (v78 >= 0xE3)
                              v81 = -227;
                            else
                              v81 = 397;
                            v82 = *(_DWORD *)(v71 + 4 * (v81 + v78)) ^ ((*(_DWORD *)(v71 + 4 * v80) & 0x7FFFFFFE | *(_DWORD *)(v71 + 4 * v78) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v71 + 4 * v80) << 31) >> 31) & 0x9908B0DF;
                            *(_DWORD *)(v71 + 4 * v78) = v82;
                            *(_QWORD *)(v71 + 2496) = v80;
                            v128 = v111;
                            v83 = sub_223533CDC((uint64_t)a3, v111, (uint64_t)&unk_2245BA939, (_OWORD **)&v128);
                            v84 = ((v82 ^ (v82 >> 11)) << 7) & 0x9D2C5680 ^ v82 ^ (v82 >> 11);
                            v85 = (v84 << 15) & 0xEFC60000 ^ v84;
                            v86 = ((v79 ^ (v79 >> 11)) << 7) & 0x9D2C5680 ^ v79 ^ (v79 >> 11);
                            v87 = (v86 << 15) & 0xEFC60000 ^ v86 ^ (((v86 << 15) & 0xEFC60000 ^ v86) >> 18);
                            v68 = ((unint64_t)(v85 ^ (v85 >> 18)) << 32) | ((unint64_t)((unsigned __int16)(v85 ^ (v85 >> 18)) >> 8) << 40) | v87 & 0xFFFFFF00 | ((unint64_t)HIBYTE(v85) << 56) | ((unint64_t)BYTE2(v85) << 48) | v87 & 0x3F | 0x80;
                            v88 = ((v77 ^ (v77 >> 11)) << 7) & 0x9D2C5680 ^ v77 ^ (v77 >> 11);
                            v89 = (v88 << 15) & 0xEFC60000 ^ v88;
                            v90 = ((v74 ^ (v74 >> 11)) << 7) & 0x9D2C5680 ^ v74 ^ (v74 >> 11);
                            v69 = (v90 << 15) & 0xEFC60000 ^ v90 ^ (((v90 << 15) & 0xEFC60000 ^ v90) >> 18) | ((unint64_t)(v89 ^ (v89 >> 18)) << 32) | ((unint64_t)((unsigned __int16)(v89 ^ (v89 >> 18)) >> 8) << 40) | ((unint64_t)HIBYTE(v89) << 56) | ((unint64_t)(HIWORD(v89) & 0xF | 0x40) << 48);
                            v83[4] = v69;
                            v83[5] = v68;
                            v70 = (unint64_t)a5[2];
                            if ((unint64_t)v54 < v70)
                              goto LABEL_127;
LABEL_170:
                            v91 = *a5;
                            v92 = ((char *)v54 - (char *)*a5) >> 4;
                            v93 = v92 + 1;
                            if ((unint64_t)(v92 + 1) >> 60)
                              sub_22316E078();
                            v94 = v70 - (_QWORD)v91;
                            if (v94 >> 3 > v93)
                              v93 = v94 >> 3;
                            if ((unint64_t)v94 >= 0x7FFFFFFFFFFFFFF0)
                              v95 = 0xFFFFFFFFFFFFFFFLL;
                            else
                              v95 = v93;
                            if (v95)
                            {
                              if (v95 >> 60)
                                sub_223174E94();
                              v96 = (char *)operator new(16 * v95);
                              v97 = (unint64_t *)&v96[16 * v92];
                              *v97 = v69;
                              v97[1] = v68;
                              if (v54 != v91)
                                goto LABEL_179;
LABEL_184:
                              v99 = v54;
                              v17 = a4;
                              v54 = v97 + 2;
                              *a5 = v97;
                              a5[1] = v97 + 2;
                              a5[2] = (unint64_t *)&v96[16 * v95];
                              if (!v99)
                                goto LABEL_128;
                            }
                            else
                            {
                              v96 = 0;
                              v97 = (unint64_t *)(16 * v92);
                              *v97 = v69;
                              v97[1] = v68;
                              if (v54 == v91)
                                goto LABEL_184;
LABEL_179:
                              v98 = v97;
                              v17 = a4;
                              do
                              {
                                *((_OWORD *)v98 - 1) = *((_OWORD *)v54 - 1);
                                v98 -= 2;
                                v54 -= 2;
                              }
                              while (v54 != v91);
                              v99 = *a5;
                              v54 = v97 + 2;
                              *a5 = v98;
                              a5[1] = v97 + 2;
                              a5[2] = (unint64_t *)&v96[16 * v95];
                              if (!v99)
                                goto LABEL_128;
                            }
                            operator delete(v99);
                            goto LABEL_128;
                          }
                          if (v61.u32[0] < 2uLL)
                          {
                            v65 = *(_QWORD *)&v59 - 1;
                            while (1)
                            {
                              v67 = v64[1];
                              if (v67 == v60)
                              {
                                if (*((_DWORD *)v64 + 4) == v17
                                  && *((_DWORD *)v64 + 5) == v55
                                  && *((_DWORD *)v64 + 6) == v110
                                  && *((_DWORD *)v64 + 7) == v58)
                                {
                                  goto LABEL_155;
                                }
                              }
                              else if ((v67 & v65) != v62)
                              {
                                goto LABEL_157;
                              }
                              v64 = (uint64_t *)*v64;
                              if (!v64)
                                goto LABEL_157;
                            }
                          }
                          while (1)
                          {
                            v66 = v64[1];
                            if (v66 == v60)
                              break;
                            if (v66 >= *(_QWORD *)&v59)
                              v66 %= *(_QWORD *)&v59;
                            if (v66 != v62)
                              goto LABEL_157;
LABEL_139:
                            v64 = (uint64_t *)*v64;
                            if (!v64)
                              goto LABEL_157;
                          }
                          if (*((_DWORD *)v64 + 4) != v17
                            || *((_DWORD *)v64 + 5) != v55
                            || *((_DWORD *)v64 + 6) != v110
                            || *((_DWORD *)v64 + 7) != v58)
                          {
                            goto LABEL_139;
                          }
LABEL_155:
                          v69 = v64[4];
                          v68 = v64[5];
                          v70 = (unint64_t)a5[2];
                          if ((unint64_t)v54 >= v70)
                            goto LABEL_170;
LABEL_127:
                          *v54 = v69;
                          v54[1] = v68;
                          v54 += 2;
                          v17 = a4;
LABEL_128:
                          a5[1] = v54;
                          v53 = v57++ == v108;
                        }
                        while (!v53);
                        v56 = v106 + 1;
                      }
                      while (v106 != v104);
                      v46 = v103 + 1;
                    }
                    while (v103 != v100);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_22352C214(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_22352C238(_QWORD *a1, int *a2)
{
  uint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v9;
  int *v10;
  int v11;
  unsigned int v12;

  v4 = sub_22351A45C(a1, a2);
  if (v4)
    return v4[4];
  v9 = a1[5];
  sub_2232D69F0((unsigned int *)&v10, &v9);
  v5 = (v10 | ((unint64_t)BYTE4(v10) << 32) | ((unint64_t)BYTE5(v10) << 40)) & 0xFFFFFFFFFFFFFFLL | ((unint64_t)HIBYTE(v10) << 56) | ((unint64_t)(HIWORD(HIDWORD(v10)) & 0xF | 0x40u) << 48);
  v6 = ((unint64_t)v12 << 32) | ((unint64_t)BYTE1(v12) << 40) | v11 & 0xFFFFFF00 | ((unint64_t)v12 << 32) & 0xFF00000000000000 | ((unint64_t)BYTE2(v12) << 48) | v11 & 0x3F | 0x80;
  v10 = a2;
  v7 = sub_223533CDC((uint64_t)a1, a2, (uint64_t)&unk_2245BA939, (_OWORD **)&v10);
  v7[4] = v5;
  v7[5] = v6;
  return v5;
}

void **sub_22352C318(unint64_t **a1, uint64_t a2, void ***a3, char **a4, _QWORD *a5, int a6, __int128 *a7, __int128 *a8)
{
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *i;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  uint64_t v31;
  void **v32;
  std::__shared_weak_count *v33;
  void *v34;

  sub_223227930((uint64_t *)&v34);
  sub_223226E78(a3, v16, v17, v18, v19, v20, &v32);
  for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
  {
    v31 = (uint64_t)(i + 2);
    if (i[4] == i[5])
      sub_223A32920(a4, v31, a6);
    else
      sub_223A32020(a4, v31, a6, (uint64_t)(i + 4), &v32);
  }
  sub_223AC9D84(a2, a5, a6, a7, a8, a1);
  v27 = v33;
  if (v33)
  {
    p_shared_owners = (unint64_t *)&v33->__shared_owners_;
    do
      v29 = __ldaxr(p_shared_owners);
    while (__stlxr(v29 - 1, p_shared_owners));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  return sub_22322797C(&v34, v22, v23, v24, v25, v26);
}

void sub_22352C428(_Unwind_Exception *a1, uint64_t a2, ...)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;
  uint64_t v10;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_22322797C((void **)va1, v3, v4, v5, v6, v7);
  _Unwind_Resume(a1);
}

void sub_22352C45C(uint64_t *a1@<X0>, _QWORD *a2@<X1>, float32x4_t *a3@<X2>, int a4@<W3>, char a5@<W4>, int a6@<W5>, _QWORD *a7@<X6>, char a8@<W7>, void **a9@<X8>, uint64_t a10)
{
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t ***v15;
  uint64_t **v16;
  uint64_t **v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t *v20;
  uint64_t **v21;
  uint64_t **v22;
  __int32 v23;
  __int32 v24;
  float32x4_t *v25;
  _QWORD *v26;
  _QWORD *v27;
  BOOL v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t *v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  uint64_t **v41;
  int v42;
  uint64_t **v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t *v47;
  uint64_t *v48;
  int *v49;
  void **v50;
  char v51;
  int *v52;
  uint64_t *v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t *v57;
  int v58;
  BOOL v59;
  uint64_t *v60;
  _BOOL4 v61;
  _QWORD *v62;
  char *v63;
  char v64;
  char v65;
  uint64_t *v66;
  uint64_t **v67;
  uint64_t *v68;
  uint64_t **v69;
  int v70;
  _DWORD *v71;
  __int128 *v72;
  __int128 v73;
  char v74;
  unint64_t v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  uint64_t v78;
  _QWORD *v79;
  unint64_t v80;
  char *v81;
  char v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  char *v88;
  unint64_t *p_shared_owners;
  unint64_t v90;
  __int128 v91;
  char *v92;
  char *v93;
  char *v94;
  unint64_t *v95;
  unint64_t v96;
  char *v97;
  char *v98;
  __int128 v99;
  char *v100;
  uint64_t v101;
  __int128 v102;
  char *v103;
  char *v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  char *v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  float32x4_t v121;
  float32x4_t v122;
  float32x4_t v123;
  float32x4_t v124;
  float32x4_t v125;
  float32x4_t v130;
  float32x4_t v131;
  uint64_t *v132;
  float32x4_t v133;
  float32x4_t v134;
  char v135;
  uint64_t v136[48];
  _QWORD *v137;
  std::__shared_weak_count *v138;
  uint64_t **v139;
  uint64_t *v140;
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  _OWORD v144[2];
  _QWORD v145[2];
  _QWORD v146[5];

  v146[2] = *MEMORY[0x24BDAC8D0];
  *a9 = 0;
  a9[1] = 0;
  a9[2] = 0;
  v140 = 0;
  v141 = 0;
  v139 = &v140;
  if (a4)
  {
    if (!a8
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 237, (uint64_t)"bundle_to_cluster.has_value()", 29, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v14 = (_QWORD *)*a7;
    v12 = a7 + 1;
    v13 = v14;
    if (v14 != v12)
    {
      v15 = (uint64_t ***)(a10 + 8);
      do
      {
        v16 = *v15;
        if (!*v15)
          goto LABEL_236;
        v17 = (uint64_t **)(a10 + 8);
        do
        {
          v18 = *((unsigned __int8 *)v16 + 32);
          v19 = *((unsigned __int8 *)v13 + 32);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 33);
          v19 = *((unsigned __int8 *)v13 + 33);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 34);
          v19 = *((unsigned __int8 *)v13 + 34);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 35);
          v19 = *((unsigned __int8 *)v13 + 35);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 36);
          v19 = *((unsigned __int8 *)v13 + 36);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 37);
          v19 = *((unsigned __int8 *)v13 + 37);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 38);
          v19 = *((unsigned __int8 *)v13 + 38);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 39);
          v19 = *((unsigned __int8 *)v13 + 39);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 40);
          v19 = *((unsigned __int8 *)v13 + 40);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 41);
          v19 = *((unsigned __int8 *)v13 + 41);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 42);
          v19 = *((unsigned __int8 *)v13 + 42);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 43);
          v19 = *((unsigned __int8 *)v13 + 43);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 44);
          v19 = *((unsigned __int8 *)v13 + 44);
          if (v18 != v19)
            goto LABEL_26;
          v18 = *((unsigned __int8 *)v16 + 45);
          v19 = *((unsigned __int8 *)v13 + 45);
          if (v18 == v19
            && (v18 = *((unsigned __int8 *)v16 + 46), v19 = *((unsigned __int8 *)v13 + 46), v18 == v19)
            && (v18 = *((unsigned __int8 *)v16 + 47), v19 = *((unsigned __int8 *)v13 + 47), v18 == v19))
          {
            v17 = v16;
          }
          else
          {
LABEL_26:
            if (v18 < v19)
              ++v16;
            else
              v17 = v16;
          }
          v16 = (uint64_t **)*v16;
        }
        while (v16);
        if (v17 == (uint64_t **)v15 || (char)sub_22319835C((unsigned __int8 *)v13 + 32, (unsigned __int8 *)v17 + 32) < 0)
        {
LABEL_236:
          v17 = (uint64_t **)(a10 + 8);
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 240, (uint64_t)"iter != coordinate_results->end()", 33, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
        }
        v122 = *a3;
        v124 = a3[1];
        v130 = a3[2];
        v133 = a3[3];
        v118 = *(float32x4_t *)((char *)v17 + 52);
        v119 = *(float32x4_t *)((char *)v17 + 68);
        v120 = *(float32x4_t *)((char *)v17 + 84);
        v121 = *(float32x4_t *)((char *)v17 + 100);
        v20 = v140;
        v21 = &v140;
        v22 = &v140;
        v23 = *((_DWORD *)v13 + 7);
        if (v140)
        {
          while (1)
          {
            while (1)
            {
              v21 = (uint64_t **)v20;
              v24 = *((_DWORD *)v20 + 7);
              if (v23 >= v24)
                break;
              v20 = *v21;
              v22 = v21;
              if (!*v21)
                goto LABEL_40;
            }
            if (v24 >= v23)
              break;
            v20 = v21[1];
            if (!v20)
            {
              v22 = v21 + 1;
              goto LABEL_40;
            }
          }
        }
        else
        {
LABEL_40:
          v25 = (float32x4_t *)operator new(0x60uLL);
          v25[1].i32[3] = v23;
          v25[2] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v122, v118.f32[0]), v124, *(float32x2_t *)v118.f32, 1), v130, v118, 2), v133, v118, 3);
          v25[3] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v122, v119.f32[0]), v124, *(float32x2_t *)v119.f32, 1), v130, v119, 2), v133, v119, 3);
          v25[4] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v122, v120.f32[0]), v124, *(float32x2_t *)v120.f32, 1), v130, v120, 2), v133, v120, 3);
          v25[5] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v122, v121.f32[0]), v124, *(float32x2_t *)v121.f32, 1), v130, v121, 2), v133, v121, 3);
          v25->i64[0] = 0;
          v25->i64[1] = 0;
          v25[1].i64[0] = (uint64_t)v21;
          *v22 = (uint64_t *)v25;
          if (*v139)
          {
            v139 = (uint64_t **)*v139;
            v25 = (float32x4_t *)*v22;
          }
          sub_2231A9A8C(v140, (uint64_t *)v25);
          ++v141;
        }
        v26 = (_QWORD *)v13[1];
        if (v26)
        {
          do
          {
            v27 = v26;
            v26 = (_QWORD *)*v26;
          }
          while (v26);
        }
        else
        {
          do
          {
            v27 = (_QWORD *)v13[2];
            v28 = *v27 == (_QWORD)v13;
            v13 = v27;
          }
          while (!v28);
        }
        v13 = v27;
      }
      while (v27 != v12);
    }
    goto LABEL_140;
  }
  if ((a5 & 1) != 0)
  {
    v29 = (char *)operator new(0x60uLL);
    v30 = 0;
    *(_QWORD *)(v29 + 28) = 0x3F80000000000000;
    *(_OWORD *)(v29 + 52) = 0u;
    *(_OWORD *)(v29 + 68) = 0u;
    *((_DWORD *)v29 + 13) = 1065353216;
    *((_DWORD *)v29 + 18) = 1065353216;
    *((_DWORD *)v29 + 23) = 1065353216;
    v29[24] = 1;
    *(_OWORD *)(v29 + 36) = 0u;
    *(_QWORD *)(v29 + 84) = 0;
    *(_QWORD *)v29 = 0;
    *((_QWORD *)v29 + 1) = 0;
    *((_QWORD *)v29 + 2) = &v140;
    v139 = (uint64_t **)v29;
    v140 = (uint64_t *)v29;
    goto LABEL_139;
  }
  v31 = *(uint64_t **)(a10 + 8);
  if (!v31)
    goto LABEL_125;
  v32 = (uint64_t *)(a10 + 8);
  do
  {
    v33 = *((unsigned __int8 *)v31 + 32);
    if (v33 == 37)
    {
      v33 = *((unsigned __int8 *)v31 + 33);
      if (v33 == 204)
      {
        v33 = *((unsigned __int8 *)v31 + 34);
        if (v33 == 123)
        {
          v33 = *((unsigned __int8 *)v31 + 35);
          if (v33 == 189)
          {
            v33 = *((unsigned __int8 *)v31 + 36);
            if (v33 == 78)
            {
              v33 = *((unsigned __int8 *)v31 + 37);
              if (v33 == 91)
              {
                v33 = *((unsigned __int8 *)v31 + 38);
                if (v33 == 143)
                {
                  v33 = *((unsigned __int8 *)v31 + 39);
                  if (v33 == 12)
                  {
                    v33 = *((unsigned __int8 *)v31 + 40);
                    if (v33 == 236)
                    {
                      v33 = *((unsigned __int8 *)v31 + 41);
                      if (v33 == 50)
                      {
                        v33 = *((unsigned __int8 *)v31 + 42);
                        if (v33 == 162)
                        {
                          v33 = *((unsigned __int8 *)v31 + 43);
                          if (v33 == 209)
                          {
                            v33 = *((unsigned __int8 *)v31 + 44);
                            if (v33 == 99)
                            {
                              v33 = *((unsigned __int8 *)v31 + 45);
                              if (v33 == 215)
                              {
                                v33 = *((unsigned __int8 *)v31 + 46);
                                if (v33 == 6)
                                {
                                  v33 = *((unsigned __int8 *)v31 + 47);
                                  if (v33 == 182)
                                  {
                                    v32 = v31;
                                    goto LABEL_89;
                                  }
                                  v34 = 182;
                                }
                                else
                                {
                                  v34 = 6;
                                }
                              }
                              else
                              {
                                v34 = 215;
                              }
                            }
                            else
                            {
                              v34 = 99;
                            }
                          }
                          else
                          {
                            v34 = 209;
                          }
                        }
                        else
                        {
                          v34 = 162;
                        }
                      }
                      else
                      {
                        v34 = 50;
                      }
                    }
                    else
                    {
                      v34 = 236;
                    }
                  }
                  else
                  {
                    v34 = 12;
                  }
                }
                else
                {
                  v34 = 143;
                }
              }
              else
              {
                v34 = 91;
              }
            }
            else
            {
              v34 = 78;
            }
          }
          else
          {
            v34 = 189;
          }
        }
        else
        {
          v34 = 123;
        }
      }
      else
      {
        v34 = 204;
      }
    }
    else
    {
      v34 = 37;
    }
    if (v33 < v34)
      ++v31;
    else
      v32 = v31;
LABEL_89:
    v31 = (uint64_t *)*v31;
  }
  while (v31);
  if (v32 != (uint64_t *)(a10 + 8))
  {
    v35 = *((unsigned __int8 *)v32 + 32);
    if (v35 == 37)
    {
      v35 = *((unsigned __int8 *)v32 + 33);
      if (v35 == 204)
      {
        v35 = *((unsigned __int8 *)v32 + 34);
        if (v35 == 123)
        {
          v35 = *((unsigned __int8 *)v32 + 35);
          if (v35 == 189)
          {
            v35 = *((unsigned __int8 *)v32 + 36);
            if (v35 == 78)
            {
              v35 = *((unsigned __int8 *)v32 + 37);
              if (v35 == 91)
              {
                v35 = *((unsigned __int8 *)v32 + 38);
                if (v35 == 143)
                {
                  v35 = *((unsigned __int8 *)v32 + 39);
                  if (v35 == 12)
                  {
                    v35 = *((unsigned __int8 *)v32 + 40);
                    if (v35 == 236)
                    {
                      v35 = *((unsigned __int8 *)v32 + 41);
                      if (v35 == 50)
                      {
                        v35 = *((unsigned __int8 *)v32 + 42);
                        if (v35 == 162)
                        {
                          v35 = *((unsigned __int8 *)v32 + 43);
                          if (v35 == 209)
                          {
                            v35 = *((unsigned __int8 *)v32 + 44);
                            if (v35 == 99)
                            {
                              v35 = *((unsigned __int8 *)v32 + 45);
                              if (v35 == 215)
                              {
                                v35 = *((unsigned __int8 *)v32 + 46);
                                if (v35 == 6)
                                {
                                  v35 = *((unsigned __int8 *)v32 + 47);
                                  if (v35 != 182)
                                  {
                                    v36 = 182;
                                    goto LABEL_124;
                                  }
LABEL_134:
                                  v44 = a3[1];
                                  v45 = a3[2];
                                  v46 = a3[3];
                                  v134 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*a3, COERCE_FLOAT(*(_OWORD *)((char *)v32 + 52))), v44, *(float32x2_t *)((char *)v32 + 52), 1), v45, *(float32x4_t *)((char *)v32 + 52), 2), v46, *(float32x4_t *)((char *)v32 + 52), 3);
                                  v131 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*a3, COERCE_FLOAT(*(_OWORD *)((char *)v32 + 68))), v44, *(float32x2_t *)((char *)v32 + 68), 1), v45, *(float32x4_t *)((char *)v32 + 68), 2), v46, *(float32x4_t *)((char *)v32 + 68), 3);
                                  v123 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*a3, COERCE_FLOAT(*(_OWORD *)((char *)v32 + 100))), v44, *(float32x2_t *)((char *)v32 + 100), 1), v45, *(float32x4_t *)((char *)v32 + 100), 2), v46, *(float32x4_t *)((char *)v32 + 100), 3);
                                  v125 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*a3, COERCE_FLOAT(*(_OWORD *)((char *)v32 + 84))), v44, *(float32x2_t *)((char *)v32 + 84), 1), v45, *(float32x4_t *)((char *)v32 + 84), 2), v46, *(float32x4_t *)((char *)v32 + 84), 3);
LABEL_135:
                                  v41 = &v140;
                                  v43 = &v140;
                                  goto LABEL_136;
                                }
                                v36 = 6;
                              }
                              else
                              {
                                v36 = 215;
                              }
                            }
                            else
                            {
                              v36 = 99;
                            }
                          }
                          else
                          {
                            v36 = 209;
                          }
                        }
                        else
                        {
                          v36 = 162;
                        }
                      }
                      else
                      {
                        v36 = 50;
                      }
                    }
                    else
                    {
                      v36 = 236;
                    }
                  }
                  else
                  {
                    v36 = 12;
                  }
                }
                else
                {
                  v36 = 143;
                }
              }
              else
              {
                v36 = 91;
              }
            }
            else
            {
              v36 = 78;
            }
          }
          else
          {
            v36 = 189;
          }
        }
        else
        {
          v36 = 123;
        }
      }
      else
      {
        v36 = 204;
      }
    }
    else
    {
      v36 = 37;
    }
LABEL_124:
    if (v36 >= v35)
      goto LABEL_134;
  }
LABEL_125:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 247, (uint64_t)"iter != coordinate_results->end()", 33, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v37 = v140;
  v38 = a3[1];
  v39 = a3[2];
  v40 = a3[3];
  v134 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*a3, COERCE_FLOAT(*(_OWORD *)(a10 + 60))), v38, *(float32x2_t *)(a10 + 60), 1), v39, *(float32x4_t *)(a10 + 60), 2), v40, *(float32x4_t *)(a10 + 60), 3);
  v131 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*a3, COERCE_FLOAT(*(_OWORD *)(a10 + 76))), v38, *(float32x2_t *)(a10 + 76), 1), v39, *(float32x4_t *)(a10 + 76), 2), v40, *(float32x4_t *)(a10 + 76), 3);
  v123 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*a3, COERCE_FLOAT(*(_OWORD *)(a10 + 108))), v38, *(float32x2_t *)(a10 + 108), 1), v39, *(float32x4_t *)(a10 + 108), 2), v40, *(float32x4_t *)(a10 + 108), 3);
  v125 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*a3, COERCE_FLOAT(*(_OWORD *)(a10 + 92))), v38, *(float32x2_t *)(a10 + 92), 1), v39, *(float32x4_t *)(a10 + 92), 2), v40, *(float32x4_t *)(a10 + 92), 3);
  if (!v140)
    goto LABEL_135;
  do
  {
    while (1)
    {
      v41 = (uint64_t **)v37;
      v42 = *((_DWORD *)v37 + 7);
      if (v42 >= 1)
        break;
      if ((v42 & 0x80000000) == 0)
        goto LABEL_140;
      v37 = v41[1];
      if (!v37)
      {
        v43 = v41 + 1;
        goto LABEL_136;
      }
    }
    v37 = *v41;
  }
  while (*v41);
  v43 = v41;
LABEL_136:
  v47 = (float32x4_t *)operator new(0x60uLL);
  v47[1].i32[3] = 0;
  v47[2] = v134;
  v47[3] = v131;
  v47[4] = v125;
  v47[5] = v123;
  v47->i64[0] = 0;
  v47->i64[1] = 0;
  v47[1].i64[0] = (uint64_t)v41;
  *v43 = (uint64_t *)v47;
  if (*v139)
  {
    v139 = (uint64_t **)*v139;
    v47 = (float32x4_t *)*v43;
  }
  sub_2231A9A8C(v140, (uint64_t *)v47);
  v30 = v141;
LABEL_139:
  v141 = v30 + 1;
LABEL_140:
  v48 = a1;
  v49 = (int *)a1[8];
  v50 = a9;
  v51 = a5;
  if (v49)
  {
    v132 = a7 + 1;
    do
    {
      v52 = v49 + 4;
      v53 = sub_22353408C(a2, v49 + 4);
      if (v53)
      {
        v54 = *((_BYTE *)v53 + 32);
        v146[0] = *(uint64_t *)((char *)v53 + 33);
        *(_QWORD *)((char *)v146 + 7) = v53[5];
        v55 = *v52;
        if (!a4)
          goto LABEL_187;
      }
      else
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 258, (uint64_t)"mesh_id.has_value()", 19, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v54 = 0;
        v55 = *v52;
        if (!a4)
        {
LABEL_187:
          v65 = 0;
          v64 = 0;
          if ((v51 & 1) != 0)
            goto LABEL_188;
          goto LABEL_157;
        }
      }
      v56 = *v132;
      if (!*v132)
        goto LABEL_155;
      v57 = a7 + 1;
      do
      {
        v58 = *(_DWORD *)(v56 + 28);
        v59 = v58 < v55;
        if (v58 >= v55)
          v60 = (uint64_t *)v56;
        else
          v60 = (uint64_t *)(v56 + 8);
        if (!v59)
          v57 = (uint64_t *)v56;
        v56 = *v60;
      }
      while (*v60);
      if (v57 != v132 && v55 >= *((_DWORD *)v57 + 7))
      {
        v63 = (char *)(v57 + 4);
        v62 = (uint64_t *)((char *)v57 + 33);
      }
      else
      {
LABEL_155:
        v61 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 266, (uint64_t)"iter_cluster != bundle_to_cluster->end()", 40, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        v62 = (_QWORD *)((char *)a7 + 41);
        v63 = (char *)(a7 + 5);
        if (v61)
          abort();
      }
      v64 = *v63;
      v145[0] = *v62;
      *(_QWORD *)((char *)v145 + 7) = *(_QWORD *)((char *)v62 + 7);
      v65 = 1;
      if ((v51 & 1) != 0)
      {
LABEL_188:
        v135 = 0;
        if (a6)
          goto LABEL_189;
        goto LABEL_171;
      }
LABEL_157:
      v66 = v140;
      if (!v140)
        goto LABEL_237;
      v67 = &v140;
      do
      {
        v68 = v66;
        v69 = v67;
        v70 = *((_DWORD *)v66 + 7);
        if (v70 >= v55)
          v67 = (uint64_t **)v66;
        else
          ++v66;
        v66 = (uint64_t *)*v66;
      }
      while (v66);
      if (v67 != &v140 && (v70 >= v55 ? (v71 = v68) : (v71 = v69), v55 >= v71[7]))
      {
        if (v70 < v55)
          v68 = (uint64_t *)v69;
        v135 = *((_BYTE *)v68 + 32);
        v72 = (__int128 *)((char *)v67 + 33);
      }
      else
      {
LABEL_237:
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 274, (uint64_t)"iter_pose != bid_meshing_to_user_map.end()", 42, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v135 = v143;
        v72 = (__int128 *)((char *)&v143 + 1);
      }
      v73 = v72[1];
      v142 = *v72;
      v143 = v73;
      v144[0] = v72[2];
      *(_OWORD *)((char *)v144 + 15) = *(__int128 *)((char *)v72 + 47);
      if (a6)
      {
LABEL_189:
        sub_2241498F4((uint64_t)v136, 0);
        v77 = (std::__shared_weak_count *)operator new(0x198uLL);
        v77->__shared_owners_ = 0;
        v77->__shared_weak_owners_ = 0;
        v79 = &v77[1].__vftable;
        v77->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F0A0;
        sub_22317FD80((uint64_t)&v77[1], (uint64_t)v136);
        v137 = &v77[1].__vftable;
        v138 = v77;
        sub_22316F8F4(v136);
        v81 = (char *)v50[1];
        v80 = (unint64_t)v50[2];
        if ((unint64_t)v81 < v80)
          goto LABEL_190;
        goto LABEL_176;
      }
LABEL_171:
      v74 = v65;
      v75 = v49[8];
      if (0x84BDA12F684BDA13 * ((v48[1] - *v48) >> 4) <= v75
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 105, (uint64_t)"index < mesh_buffers_.size()", 28, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C)|| !*(_BYTE *)(v48[3] + v75)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 106, (uint64_t)"used_buffer_flags_[index] != 0", 30, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v76 = *v48;
      v77 = (std::__shared_weak_count *)operator new(0x198uLL);
      v77->__shared_owners_ = 0;
      v77->__shared_weak_owners_ = 0;
      v78 = v76 + 432 * v75;
      v79 = &v77[1].__vftable;
      v77->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F0A0;
      sub_223180698((uint64_t)&v77[1], v78);
      v137 = &v77[1].__vftable;
      v138 = v77;
      v65 = v74;
      v81 = (char *)v50[1];
      v80 = (unint64_t)v50[2];
      if ((unint64_t)v81 < v80)
      {
LABEL_190:
        *v81 = v54;
        *(_QWORD *)(v81 + 1) = v146[0];
        *((_QWORD *)v81 + 1) = *(_QWORD *)((char *)v146 + 7);
        *((_QWORD *)v81 + 2) = v79;
        *((_QWORD *)v81 + 3) = v77;
        p_shared_owners = (unint64_t *)&v77->__shared_owners_;
        do
          v90 = __ldxr(p_shared_owners);
        while (__stxr(v90 + 1, p_shared_owners));
        v81[32] = 0;
        v81[96] = 0;
        if ((v51 & 1) == 0)
        {
          v81[32] = v135;
          v91 = v143;
          *(_OWORD *)(v81 + 33) = v142;
          *(_OWORD *)(v81 + 49) = v91;
          *(_OWORD *)(v81 + 65) = v144[0];
          *((_OWORD *)v81 + 5) = *(_OWORD *)((char *)v144 + 15);
          v81[96] = 1;
        }
        v81[100] = v64;
        *(_QWORD *)(v81 + 101) = v145[0];
        *(_QWORD *)(v81 + 108) = *(_QWORD *)((char *)v145 + 7);
        v81[116] = v65;
        v92 = v81 + 120;
        goto LABEL_216;
      }
LABEL_176:
      v82 = v65;
      v83 = (char *)*v50;
      v84 = 0xEEEEEEEEEEEEEEEFLL * ((v81 - (_BYTE *)*v50) >> 3);
      v85 = v84 + 1;
      if (v84 + 1 > 0x222222222222222)
        sub_22316E078();
      v86 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v80 - (_QWORD)v83) >> 3);
      if (2 * v86 > v85)
        v85 = 2 * v86;
      if (v86 >= 0x111111111111111)
        v87 = 0x222222222222222;
      else
        v87 = v85;
      if (v87)
      {
        if (v87 > 0x222222222222222)
          sub_223174E94();
        v88 = (char *)operator new(120 * v87);
      }
      else
      {
        v88 = 0;
      }
      v93 = &v88[120 * v84];
      *v93 = v54;
      *(_QWORD *)(v93 + 1) = v146[0];
      v94 = &v88[120 * v87];
      *((_QWORD *)v93 + 1) = *(_QWORD *)((char *)v146 + 7);
      *((_QWORD *)v93 + 2) = v79;
      *((_QWORD *)v93 + 3) = v77;
      v95 = (unint64_t *)&v77->__shared_owners_;
      do
        v96 = __ldxr(v95);
      while (__stxr(v96 + 1, v95));
      v97 = &v88[120 * v84];
      v97[32] = 0;
      v98 = v97 + 32;
      v98[64] = 0;
      v51 = a5;
      if ((a5 & 1) == 0)
      {
        *v98 = v135;
        v99 = v143;
        *(_OWORD *)(v98 + 1) = v142;
        *(_OWORD *)(v98 + 17) = v99;
        *(_OWORD *)(v98 + 33) = v144[0];
        *((_OWORD *)v98 + 3) = *(_OWORD *)((char *)v144 + 15);
        v98[64] = 1;
      }
      v100 = &v88[120 * v84];
      v100[100] = v64;
      *(_QWORD *)(v100 + 101) = v145[0];
      *(_QWORD *)(v100 + 108) = *(_QWORD *)((char *)v145 + 7);
      v100[116] = v82;
      v92 = v93 + 120;
      if (v81 == v83)
      {
        v50 = a9;
        *a9 = v93;
        a9[1] = v92;
        a9[2] = v94;
      }
      else
      {
        v101 = 0;
        v50 = a9;
        do
        {
          v103 = &v93[v101];
          v104 = &v81[v101];
          *(_OWORD *)(v103 - 120) = *(_OWORD *)&v81[v101 - 120];
          *(_OWORD *)(v103 - 104) = *(_OWORD *)&v81[v101 - 104];
          *((_QWORD *)v104 - 13) = 0;
          *((_QWORD *)v104 - 12) = 0;
          v93[v101 - 88] = 0;
          *(v103 - 24) = 0;
          if (v81[v101 - 24])
          {
            v105 = *(_OWORD *)(v104 - 88);
            v106 = *(_OWORD *)(v104 - 72);
            v107 = *(_OWORD *)(v104 - 40);
            *(_OWORD *)&v93[v101 - 56] = *(_OWORD *)(v104 - 56);
            *(_OWORD *)&v93[v101 - 40] = v107;
            *(_OWORD *)&v93[v101 - 88] = v105;
            *(_OWORD *)&v93[v101 - 72] = v106;
            *(v103 - 24) = 1;
          }
          v102 = *(_OWORD *)(v104 - 20);
          *(v103 - 4) = *(v104 - 4);
          *(_OWORD *)(v103 - 20) = v102;
          v101 -= 120;
        }
        while (&v81[v101] != v83);
        v81 = (char *)*a9;
        v108 = (char *)a9[1];
        *a9 = &v93[v101];
        a9[1] = v92;
        a9[2] = v94;
        while (v108 != v81)
        {
          v109 = (std::__shared_weak_count *)*((_QWORD *)v108 - 12);
          if (v109)
          {
            v110 = (unint64_t *)&v109->__shared_owners_;
            do
              v111 = __ldaxr(v110);
            while (__stlxr(v111 - 1, v110));
            if (!v111)
            {
              ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
              std::__shared_weak_count::__release_weak(v109);
            }
          }
          v108 -= 120;
        }
      }
      if (v81)
        operator delete(v81);
LABEL_216:
      v48 = a1;
      v50[1] = v92;
      v112 = v138;
      if (v138)
      {
        v113 = (unint64_t *)&v138->__shared_owners_;
        do
          v114 = __ldaxr(v113);
        while (__stlxr(v114 - 1, v113));
        if (!v114)
        {
          ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
          std::__shared_weak_count::__release_weak(v112);
        }
      }
      v49 = *(int **)v49;
    }
    while (v49);
  }
  sub_2233FADDC(v140);
}

void sub_22352D3EC(_Unwind_Exception *a1)
{
  void **v1;
  uint64_t v2;

  sub_2233FADDC(*(_QWORD **)(v2 - 224));
  sub_223295868(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_22352D494@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X1>, float32x4_t *a3@<X2>, int a4@<W3>, int a5@<W4>, _QWORD *a6@<X5>, char a7@<W6>, unint64_t **a8@<X8>, uint64_t a9, char a10)
{
  _QWORD *v10;
  _QWORD *i;
  unint64_t **v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  _QWORD *v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  int v28;
  _QWORD *v29;
  int v30;
  BOOL v31;
  uint64_t *v32;
  _BOOL4 v33;
  _QWORD *v34;
  char *v35;
  char v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t *v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t *v47;
  char *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  unint64_t *v54;
  unint64_t *v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  __int128 v59;
  unint64_t *v60;
  unint64_t *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  unint64_t *v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  BOOL v74;
  char *v75;
  unint64_t *v76;
  unint64_t v77;
  _QWORD *v78;
  char *v79;
  _QWORD *v80;
  unint64_t **v81;
  _QWORD *v82;
  _QWORD *v83;
  char v86;
  float32x4_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  float32x4_t v91;
  float32x4_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  float32x4_t v96;
  char v97;
  float32x4_t v98;
  float32x4_t v99;
  uint64_t v100[48];
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;

  v10 = a2;
  i = result;
  v12 = a8;
  v104 = *MEMORY[0x24BDAC8D0];
  *a8 = 0;
  a8[1] = 0;
  a8[2] = 0;
  if (a5)
  {
    v101 = 0uLL;
    *(_QWORD *)&v103 = sub_22352C238(a2, (int *)&v101);
    *((_QWORD *)&v103 + 1) = v13;
    sub_223A32CBC(i, 0, (uint64_t)v100);
    v14 = (std::__shared_weak_count *)operator new(0x198uLL);
    v14->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    v14->__shared_weak_owners_ = 0;
    v14->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F0A0;
    v16 = sub_22317FD80((uint64_t)&v14[1], (uint64_t)v100);
    *(_QWORD *)&v102 = v16;
    *((_QWORD *)&v102 + 1) = v14;
    v17 = v12[1];
    if (v17 >= v12[2])
    {
      v75 = sub_22347343C((char **)v12, &v103, &v102);
      v14 = (std::__shared_weak_count *)*((_QWORD *)&v102 + 1);
      v12[1] = (unint64_t *)v75;
      if (!v14)
        return sub_22316F8F4(v100);
    }
    else
    {
      *(_OWORD *)v17 = v103;
      v17[2] = v16;
      v17[3] = (unint64_t)v14;
      do
        v18 = __ldxr(p_shared_owners);
      while (__stxr(v18 + 1, p_shared_owners));
      *((_BYTE *)v17 + 32) = 0;
      *((_BYTE *)v17 + 96) = 0;
      *((_BYTE *)v17 + 100) = 0;
      *((_BYTE *)v17 + 116) = 0;
      v12[1] = v17 + 15;
    }
    v76 = (unint64_t *)&v14->__shared_owners_;
    do
      v77 = __ldaxr(v76);
    while (__stlxr(v77 - 1, v76));
    if (!v77)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    return sub_22316F8F4(v100);
  }
  if (!a7 || !a10)
  {
    result = (uint64_t *)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 306, (uint64_t)"bundle_to_cluster.has_value() && coordinate_results.has_value()", 63, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      abort();
  }
  v20 = a6 + 1;
  v21 = (_QWORD *)*a6;
  if ((_QWORD *)*a6 != a6 + 1)
  {
    v22 = (_QWORD *)(a9 + 8);
    v78 = (_QWORD *)((char *)a6 + 41);
    v79 = (char *)(a6 + 5);
    v82 = a6 + 1;
    v83 = v10;
    v80 = i;
    v81 = v12;
    do
    {
      v23 = (uint64_t *)*v22;
      if (!*v22)
        goto LABEL_107;
      v24 = v22;
      do
      {
        v25 = *((unsigned __int8 *)v23 + 32);
        v26 = *((unsigned __int8 *)v21 + 32);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 33);
        v26 = *((unsigned __int8 *)v21 + 33);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 34);
        v26 = *((unsigned __int8 *)v21 + 34);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 35);
        v26 = *((unsigned __int8 *)v21 + 35);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 36);
        v26 = *((unsigned __int8 *)v21 + 36);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 37);
        v26 = *((unsigned __int8 *)v21 + 37);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 38);
        v26 = *((unsigned __int8 *)v21 + 38);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 39);
        v26 = *((unsigned __int8 *)v21 + 39);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 40);
        v26 = *((unsigned __int8 *)v21 + 40);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 41);
        v26 = *((unsigned __int8 *)v21 + 41);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 42);
        v26 = *((unsigned __int8 *)v21 + 42);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 43);
        v26 = *((unsigned __int8 *)v21 + 43);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 44);
        v26 = *((unsigned __int8 *)v21 + 44);
        if (v25 != v26)
          goto LABEL_31;
        v25 = *((unsigned __int8 *)v23 + 45);
        v26 = *((unsigned __int8 *)v21 + 45);
        if (v25 == v26
          && (v25 = *((unsigned __int8 *)v23 + 46), v26 = *((unsigned __int8 *)v21 + 46), v25 == v26)
          && (v25 = *((unsigned __int8 *)v23 + 47), v26 = *((unsigned __int8 *)v21 + 47), v25 == v26))
        {
          v24 = v23;
        }
        else
        {
LABEL_31:
          if (v25 < v26)
            ++v23;
          else
            v24 = v23;
        }
        v23 = (uint64_t *)*v23;
      }
      while (v23);
      if (v24 == v22 || (char)sub_22319835C((unsigned __int8 *)v21 + 32, (unsigned __int8 *)v24 + 32) < 0)
      {
LABEL_107:
        v24 = v22;
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 309, (uint64_t)"iter != coordinate_results->end()", 33, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
      }
      v93 = *a3;
      v94 = a3[1];
      v98 = a3[3];
      v87 = *(float32x4_t *)((char *)v24 + 52);
      v89 = *(float32x4_t *)((char *)v24 + 68);
      v91 = *(float32x4_t *)((char *)v24 + 84);
      v95 = a3[2];
      v96 = *(float32x4_t *)((char *)v24 + 100);
      if (a4)
      {
        v27 = *v20;
        if (!*v20)
          goto LABEL_49;
        v28 = *((_DWORD *)v21 + 7);
        v29 = v20;
        do
        {
          v30 = *(_DWORD *)(v27 + 28);
          v31 = v30 < v28;
          if (v30 >= v28)
            v32 = (uint64_t *)v27;
          else
            v32 = (uint64_t *)(v27 + 8);
          if (!v31)
            v29 = (_QWORD *)v27;
          v27 = *v32;
        }
        while (*v32);
        if (v29 != v20 && v28 >= *((_DWORD *)v29 + 7))
        {
          v35 = (char *)(v29 + 4);
          v34 = (_QWORD *)((char *)v29 + 33);
        }
        else
        {
LABEL_49:
          v33 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 316, (uint64_t)"iter_cluster != bundle_to_cluster->end()", 40, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
          v34 = v78;
          v35 = v79;
          if (v33)
            abort();
        }
        v36 = *v35;
        *(_QWORD *)&v102 = *v34;
        *(_QWORD *)((char *)&v102 + 7) = *(_QWORD *)((char *)v34 + 7);
        v37 = 1;
      }
      else
      {
        v36 = 0;
        v37 = 0;
      }
      LODWORD(v101) = *((_DWORD *)v21 + 7);
      *(_QWORD *)((char *)&v101 + 4) = 0;
      HIDWORD(v101) = 0;
      v38 = sub_22352C238(v10, (int *)&v101);
      v40 = v39;
      sub_223A32CBC(i, *((_DWORD *)v21 + 7), (uint64_t)v100);
      v86 = v36;
      v41 = operator new(0x198uLL);
      v88 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v93, v87.f32[0]), v94, *(float32x2_t *)v87.f32, 1), v95, v87, 2), v98, v87, 3);
      v90 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v93, v89.f32[0]), v94, *(float32x2_t *)v89.f32, 1), v95, v89, 2), v98, v89, 3);
      v92 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v93, v91.f32[0]), v94, *(float32x2_t *)v91.f32, 1), v95, v91, 2), v98, v91, 3);
      v41[1] = 0;
      v42 = v41 + 1;
      v99 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v93, v96.f32[0]), v94, *(float32x2_t *)v96.f32, 1), v95, v96, 2), v98, v96, 3);
      v41[2] = 0;
      *v41 = &off_24EC1F0A0;
      v43 = v41 + 3;
      sub_22317FD80((uint64_t)(v41 + 3), (uint64_t)v100);
      *(_QWORD *)&v103 = v41 + 3;
      *((_QWORD *)&v103 + 1) = v41;
      v45 = v12[1];
      v44 = (unint64_t)v12[2];
      if ((unint64_t)v45 >= v44)
      {
        v97 = v37;
        v48 = (char *)*v12;
        v49 = 0xEEEEEEEEEEEEEEEFLL * (v45 - *v12);
        v50 = v49 + 1;
        if (v49 + 1 > 0x222222222222222)
          sub_22316E078();
        v51 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v44 - (_QWORD)v48) >> 3);
        if (2 * v51 > v50)
          v50 = 2 * v51;
        if (v51 >= 0x111111111111111)
          v52 = 0x222222222222222;
        else
          v52 = v50;
        if (v52 > 0x222222222222222)
          sub_223174E94();
        v53 = (char *)operator new(120 * v52);
        v54 = (unint64_t *)&v53[120 * v49];
        *v54 = v38;
        v54[1] = v40;
        v55 = (unint64_t *)&v53[120 * v52];
        v54[2] = (unint64_t)v43;
        v54[3] = (unint64_t)v41;
        do
          v56 = __ldxr(v42);
        while (__stxr(v56 + 1, v42));
        v57 = &v53[120 * v49];
        *((float32x4_t *)v57 + 2) = v88;
        *((float32x4_t *)v57 + 3) = v90;
        *((float32x4_t *)v57 + 4) = v92;
        *((float32x4_t *)v57 + 5) = v99;
        v57[96] = 1;
        v57[100] = v86;
        *(_QWORD *)(v57 + 101) = v102;
        *(_QWORD *)(v57 + 108) = *(_QWORD *)((char *)&v102 + 7);
        v57[116] = v97;
        v47 = v54 + 15;
        v12 = v81;
        if (v45 == (unint64_t *)v48)
        {
          *v81 = v54;
          v81[1] = v47;
          v81[2] = v55;
          i = v80;
          v22 = (_QWORD *)(a9 + 8);
        }
        else
        {
          v58 = 0;
          v22 = (_QWORD *)(a9 + 8);
          do
          {
            v60 = &v54[v58];
            v61 = &v45[v58];
            *(_OWORD *)(v60 - 15) = *(_OWORD *)&v45[v58 - 15];
            *(_OWORD *)(v60 - 13) = *(_OWORD *)&v45[v58 - 13];
            *(v61 - 13) = 0;
            *(v61 - 12) = 0;
            LOBYTE(v54[v58 - 11]) = 0;
            *((_BYTE *)v60 - 24) = 0;
            if (LOBYTE(v45[v58 - 3]))
            {
              v62 = *(_OWORD *)(v61 - 11);
              v63 = *(_OWORD *)(v61 - 9);
              v64 = *(_OWORD *)(v61 - 5);
              *(_OWORD *)&v54[v58 - 7] = *(_OWORD *)(v61 - 7);
              *(_OWORD *)&v54[v58 - 5] = v64;
              *(_OWORD *)&v54[v58 - 11] = v62;
              *(_OWORD *)&v54[v58 - 9] = v63;
              *((_BYTE *)v60 - 24) = 1;
            }
            v59 = *(_OWORD *)((char *)v61 - 20);
            *((_BYTE *)v60 - 4) = *((_BYTE *)v61 - 4);
            *(_OWORD *)((char *)v60 - 20) = v59;
            v58 -= 15;
          }
          while (&v45[v58] != (unint64_t *)v48);
          v45 = *v81;
          v65 = v81[1];
          *v81 = &v54[v58];
          v81[1] = v47;
          v81[2] = v55;
          for (i = v80; v65 != v45; v65 -= 15)
          {
            v66 = (std::__shared_weak_count *)*(v65 - 12);
            if (v66)
            {
              v67 = (unint64_t *)&v66->__shared_owners_;
              do
                v68 = __ldaxr(v67);
              while (__stlxr(v68 - 1, v67));
              if (!v68)
              {
                ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
                std::__shared_weak_count::__release_weak(v66);
              }
            }
          }
        }
        if (v45)
          operator delete(v45);
      }
      else
      {
        *v45 = v38;
        v45[1] = v40;
        v45[2] = (unint64_t)v43;
        v45[3] = (unint64_t)v41;
        do
          v46 = __ldxr(v42);
        while (__stxr(v46 + 1, v42));
        *((float32x4_t *)v45 + 2) = v88;
        *((float32x4_t *)v45 + 3) = v90;
        *((float32x4_t *)v45 + 4) = v92;
        *((float32x4_t *)v45 + 5) = v99;
        *((_BYTE *)v45 + 96) = 1;
        *((_BYTE *)v45 + 100) = v86;
        *(unint64_t *)((char *)v45 + 101) = v102;
        *(unint64_t *)((char *)v45 + 108) = *(_QWORD *)((char *)&v102 + 7);
        *((_BYTE *)v45 + 116) = v37;
        v47 = v45 + 15;
        v22 = (_QWORD *)(a9 + 8);
      }
      v12[1] = v47;
      v69 = (std::__shared_weak_count *)*((_QWORD *)&v103 + 1);
      v20 = v82;
      v10 = v83;
      if (!*((_QWORD *)&v103 + 1))
        goto LABEL_85;
      v70 = (unint64_t *)(*((_QWORD *)&v103 + 1) + 8);
      do
        v71 = __ldaxr(v70);
      while (__stlxr(v71 - 1, v70));
      if (!v71)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        result = sub_22316F8F4(v100);
        v72 = (_QWORD *)v21[1];
        if (!v72)
        {
          do
          {
LABEL_89:
            v73 = (_QWORD *)v21[2];
            v74 = *v73 == (_QWORD)v21;
            v21 = v73;
          }
          while (!v74);
          goto LABEL_11;
        }
      }
      else
      {
LABEL_85:
        result = sub_22316F8F4(v100);
        v72 = (_QWORD *)v21[1];
        if (!v72)
          goto LABEL_89;
      }
      do
      {
        v73 = v72;
        v72 = (_QWORD *)*v72;
      }
      while (v72);
LABEL_11:
      v21 = v73;
    }
    while (v73 != v82);
  }
  return result;
}

void sub_22352DCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  void **v35;
  uint64_t v36;

  sub_223167354(v36 - 128);
  sub_22316F8F4(&a35);
  sub_223295868(v35);
  _Unwind_Resume(a1);
}

void sub_22352DDF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  sub_223295868(a13);
  _Unwind_Resume(a1);
}

void sub_22352DE04(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  __int128 v9;
  void *__p[2];
  uint64_t v11;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    if (*(char *)(a4 + 23) < 0)
    {
      sub_223197FA4(__p, *(void **)a4, *(_QWORD *)(a4 + 8));
    }
    else
    {
      *(_OWORD *)__p = *(_OWORD *)a4;
      v11 = *(_QWORD *)(a4 + 16);
    }
    *(_QWORD *)&v9 = (uint64_t)(*a1 * 1000000000.0);
    *((_QWORD *)&v9 + 1) = 2;
    v8 = sub_2241471F8();
    sub_2232A6F44((uint64_t)v8, a2, a3, (uint64_t)__p, &v9);
    if (SHIBYTE(v11) < 0)
      operator delete(__p[0]);
  }
}

void sub_22352DED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22352DEF0(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  std::mutex *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)();
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  float32x4_t v15;
  float32x2_t v16;
  float32x2_t v17;
  float32x2_t v18;
  float32x2_t *v19;
  float32x2_t *v20;
  float32x4_t v21;
  float32x4_t v22;
  unint64_t v23;
  _BYTE *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  void *v30;
  const char **v31;
  const char *v32;
  std::__shared_weak_count *v33;
  unint64_t *p_shared_owners;
  unint64_t v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  std::string v56;
  void *v57;
  __int128 v58;
  __int128 v59;
  __int128 __p;
  unint64_t v61;
  char v62;
  uint64_t (**v63)();
  uint64_t v64;
  std::__shared_weak_count *v65;
  char *v66;
  char *v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  std::__shared_weak_count *v71;
  const char *v72;
  uint64_t v73;
  uint64_t (**v74)();
  uint64_t v75;
  _QWORD v76[45];

  v76[44] = *MEMORY[0x24BDAC8D0];
  v57 = operator new(0x20uLL);
  v58 = xmmword_2245B8D70;
  strcpy((char *)v57, "MeshingEngine.RenderMeshes");
  sub_224569D7C();
  sub_224569A80();
  if (!os_variant_has_internal_diagnostics())
    goto LABEL_70;
  v2 = sub_2241471F8();
  v3 = v2[2];
  if (!v3)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v3 = v2[2];
  }
  v4 = *(_QWORD *)(v3 + 64);
  v5 = (std::mutex *)(v4 + 32);
  std::mutex::lock((std::mutex *)(v4 + 32));
  v7 = *(_QWORD *)(v4 + 96);
  v6 = *(_QWORD *)(v4 + 104);
  std::mutex::unlock(v5);
  if (v7 == v6)
    goto LABEL_70;
  v72 = "cv3d.recon.";
  v73 = 11;
  v8 = HIBYTE(v58);
  v9 = (uint64_t (**)())&v57;
  if (v58 < 0)
  {
    v9 = (uint64_t (**)())v57;
    v8 = v58;
  }
  v74 = v9;
  v75 = v8;
  sub_2231A9820((uint64_t)&v72, (uint64_t)v76, 0, 0, &v56);
  sub_2241471F8();
  v10 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v10 + 24))(v10))
  {
    kdebug_trace();
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v10 + 24))(v10))
    {
      *(_QWORD *)&v59 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
      *((_QWORD *)&v59 + 1) = 2;
      v11 = sub_2241471F8();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v10 + 24))(v10))
      {
        sub_2241498F4((uint64_t)&v63, 0);
        __p = 0uLL;
        v61 = 0;
        v13 = *a1;
        v12 = a1[1];
        while (v13 != v12)
        {
          sub_223180698((uint64_t)&v72, *(_QWORD *)v13);
          v19 = (float32x2_t *)v72;
          v20 = (float32x2_t *)v73;
          if (v72 != (const char *)v73)
          {
            do
            {
              v15.i32[0] = *(_DWORD *)(v13 + 16);
              v16.i32[0] = *(_DWORD *)(v13 + 32);
              v17.i32[0] = *(_DWORD *)(v13 + 48);
              v18.i32[0] = v19[1].i32[0];
              *(float32x2_t *)v21.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)(v13 + 8), COERCE_FLOAT(*v19)), *(float32x2_t *)(v13 + 24), *v19, 1), *(float32x2_t *)(v13 + 40), v18.f32[0]);
              *(float32x2_t *)&v21.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v15.f32, *v19), v16, *v19, 1), v18, v17);
              v15.i64[0] = *(_QWORD *)(v13 + 56);
              v15.i32[2] = *(_DWORD *)(v13 + 64);
              v22 = vaddq_f32(v21, v15);
              v19[1].i32[0] = v22.i32[2];
              *v19 = *(float32x2_t *)v22.f32;
              v19 = (float32x2_t *)((char *)v19 + 12);
            }
            while (v19 != v20);
          }
          if (*((_QWORD *)&__p + 1) < v61)
            v14 = sub_22317FD80(*((uint64_t *)&__p + 1), (uint64_t)&v72) + 384;
          else
            v14 = sub_2235343FC((uint64_t *)&__p, (uint64_t)&v72);
          *((_QWORD *)&__p + 1) = v14;
          sub_22316F8F4((uint64_t *)&v72);
          v13 += 72;
        }
        sub_223674A94(&v63, (uint64_t *)&__p);
        v23 = 0xAAAAAAAAAAAAAAABLL * ((v64 - (uint64_t)v63) >> 2);
        v24 = v66;
        v25 = v67;
        v26 = 0xAAAAAAAAAAAAAAABLL * ((v67 - v66) >> 2);
        if (v23 <= v26)
        {
          if (v23 < v26)
          {
            v25 = &v66[4 * ((v64 - (uint64_t)v63) >> 2)];
            v67 = v25;
          }
        }
        else
        {
          sub_22317EF30((uint64_t)&v66, v23 - v26);
          v24 = v66;
          v25 = v67;
        }
        v27 = v25 - v24;
        if (v27 >= 1)
          memset_pattern16(v24, &unk_22461D690, 12 * (v27 / 0xCuLL - ((unint64_t)v27 > 0xB)) + 12);
        v68 = 1;
        v28 = (uint64_t *)__p;
        if ((_QWORD)__p)
        {
          v29 = (uint64_t *)*((_QWORD *)&__p + 1);
          v30 = (void *)__p;
          if (*((_QWORD *)&__p + 1) != (_QWORD)__p)
          {
            do
              v29 = sub_22316F8F4(v29 - 48);
            while (v29 != v28);
            v30 = (void *)__p;
          }
          *((_QWORD *)&__p + 1) = v28;
          operator delete(v30);
        }
        LOBYTE(__p) = 0;
        v62 = 0;
        sub_22329F414((uint64_t)&v63, &__p, &v59, &v69);
        if (v62 && SHIBYTE(v61) < 0)
          operator delete((void *)__p);
        sub_22316F8F4((uint64_t *)&v63);
        v31 = (const char **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 56))(v10);
        v32 = *v31;
        v33 = (std::__shared_weak_count *)v31[1];
        if (v33)
        {
          p_shared_owners = (unint64_t *)&v33->__shared_owners_;
          do
            v35 = __ldxr(p_shared_owners);
          while (__stxr(v35 + 1, p_shared_owners));
        }
        v36 = v70;
        v37 = v71;
        v63 = &off_24EC6A3B8;
        v64 = v70;
        v65 = v71;
        v71 = 0;
        v70 = 0;
        v72 = v32;
        v73 = (uint64_t)v33;
        if (v33)
        {
          v38 = (unint64_t *)&v33->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
        }
        v74 = &off_24EC6A3B8;
        v75 = v36;
        v76[0] = v37;
        if (v37)
        {
          v40 = (unint64_t *)&v37->__shared_owners_;
          do
            v41 = __ldxr(v40);
          while (__stxr(v41 + 1, v40));
        }
        (*(void (**)(uint64_t *, const char **))(*v11 + 16))(v11, &v72);
        v42 = (std::__shared_weak_count *)v76[0];
        if (v76[0])
        {
          v43 = (unint64_t *)(v76[0] + 8);
          do
            v44 = __ldaxr(v43);
          while (__stlxr(v44 - 1, v43));
          if (!v44)
          {
            ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
            std::__shared_weak_count::__release_weak(v42);
          }
        }
        v45 = (std::__shared_weak_count *)v73;
        if (v73)
        {
          v46 = (unint64_t *)(v73 + 8);
          do
            v47 = __ldaxr(v46);
          while (__stlxr(v47 - 1, v46));
          if (!v47)
          {
            ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
            std::__shared_weak_count::__release_weak(v45);
          }
        }
        v48 = v65;
        if (v65)
        {
          v49 = (unint64_t *)&v65->__shared_owners_;
          do
            v50 = __ldaxr(v49);
          while (__stlxr(v50 - 1, v49));
          if (!v50)
          {
            ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
            std::__shared_weak_count::__release_weak(v48);
          }
        }
        if (v33)
        {
          v51 = (unint64_t *)&v33->__shared_owners_;
          do
            v52 = __ldaxr(v51);
          while (__stlxr(v52 - 1, v51));
          if (!v52)
          {
            ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
            std::__shared_weak_count::__release_weak(v33);
          }
        }
        v53 = v71;
        if (v71)
        {
          v54 = (unint64_t *)&v71->__shared_owners_;
          do
            v55 = __ldaxr(v54);
          while (__stlxr(v55 - 1, v54));
          if (!v55)
          {
            ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
            std::__shared_weak_count::__release_weak(v53);
          }
        }
      }
    }
    kdebug_trace();
  }
  if ((SHIBYTE(v56.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_70:
    if ((SHIBYTE(v58) & 0x80000000) == 0)
      return;
    goto LABEL_71;
  }
  operator delete(v56.__r_.__value_.__l.__data_);
  if (SHIBYTE(v58) < 0)
LABEL_71:
    operator delete(v57);
}

void sub_22352E548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,__int16 a33)
{
  std::__shared_weak_count *v33;
  uint64_t v34;
  std::__shared_weak_count *v36;
  unint64_t *p_shared_owners;
  unint64_t v38;
  unint64_t *v39;
  unint64_t v40;

  sub_2241231D8(v34);
  v36 = (std::__shared_weak_count *)STACK[0x230];
  if (STACK[0x230])
  {
    p_shared_owners = (unint64_t *)&v36->__shared_owners_;
    do
      v38 = __ldaxr(p_shared_owners);
    while (__stlxr(v38 - 1, p_shared_owners));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  sub_2241231D8((uint64_t)&a33);
  if (v33)
  {
    v39 = (unint64_t *)&v33->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  sub_2241231D8((uint64_t)&STACK[0x210]);
  sub_2231874DC((uint64_t)&a9);
  if (a20 < 0)
    operator delete(__p);
  if (a26 < 0)
    operator delete(a21);
  _Unwind_Resume(a1);
}

void sub_22352E6B0(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, int a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, _QWORD *a10)
{
  _QWORD **v12;
  _DWORD *v13;
  int8x8_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  uint64_t **v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  BOOL v31;
  uint64_t *v32;
  _BOOL4 v33;
  char v34;
  char v35;
  char *v36;
  unint64_t *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char *v54;
  std::__shared_weak_count *v55;
  unint64_t *p_shared_owners;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  void *v63;
  _QWORD *v64;
  _QWORD **v65;
  BOOL v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  std::mutex *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD **v79;
  void **v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  std::__shared_weak_count *v92;
  const char *v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t *v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  std::__shared_weak_count *v104;
  unint64_t *v105;
  unint64_t v106;
  unint64_t *v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  uint64_t *v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t *v116;
  int v117;
  _OWORD *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  BOOL v122;
  uint64_t *v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t *v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  BOOL v136;
  uint64_t *v137;
  unint64_t *v138;
  unint64_t *v139;
  void *v140;
  unint64_t v141;
  unint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  std::__shared_weak_count *v147;
  char *v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  unint64_t *v152;
  unint64_t v153;
  char *v154;
  int v155;
  uint64_t *v159;
  _QWORD *v161;
  uint64_t *v164;
  std::string v165;
  void *v166[2];
  void *__p;
  int v168;
  uint64_t v169;
  _QWORD *v170[2];
  __int128 v171;
  __int128 v172;
  uint64_t v173;
  const char *v174;
  std::__shared_weak_count *v175;
  void *v176[2];
  char v177;
  void **v178;
  uint64_t v179;
  int v180;
  __int128 *p_key;
  __int128 v182;
  __int128 key;
  const char *v184;
  const char *v185;
  __int128 v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  __int128 v194;
  uint64_t v195;
  uint64_t v196;
  __int128 v197;
  uint64_t v198;
  uint64_t v199;
  __int128 v200;
  uint64_t v201;
  uint64_t v202;
  __int128 v203;
  uint64_t v204;
  uint64_t v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  int v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  int v213;
  __int128 v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  int v221;
  char v222;
  __int128 v223;
  __int128 v224;
  _BYTE v225[32];
  _BYTE v226[32];
  char v227;
  __int128 v228;
  char v229;
  void *v230[2];
  char v231;
  __int128 v232;
  std::__shared_weak_count *v233;
  int v234;
  _BYTE v235[15];
  char v236;
  uint64_t v237;

  v237 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a9 = 0;
  *(_QWORD *)(a9 + 8) = 0;
  *(_QWORD *)(a9 + 16) = 0;
  *a10 = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a5 + 24))(&v169, a5);
  v12 = (_QWORD **)v169;
  v161 = a4;
  if ((_QWORD **)v169 != v170)
  {
    v159 = (uint64_t *)(a1 + 8);
    do
    {
      sub_223A32B34(a4, (_DWORD *)v12 + 7, (uint64_t)v166);
      v13 = __p;
      if (__p)
      {
        do
        {
          v14 = (int8x8_t)a3[1];
          if (v14)
          {
            v15 = v13[4];
            v16 = v13[5];
            v17 = v13[6];
            v18 = v13[7];
            v19 = (19349669 * v16) ^ (73856093 * v15) ^ (83492791 * v17) ^ (37783632 * v18);
            v20 = (uint8x8_t)vcnt_s8(v14);
            v20.i16[0] = vaddlv_u8(v20);
            if (v20.u32[0] > 1uLL)
            {
              v21 = (19349669 * v16) ^ (73856093 * v15) ^ (83492791 * v17) ^ (37783632 * v18);
              if (v19 >= *(_QWORD *)&v14)
                v21 = v19 % *(_QWORD *)&v14;
            }
            else
            {
              v21 = v19 & (*(_QWORD *)&v14 - 1);
            }
            v22 = *(uint64_t ***)(*a3 + 8 * v21);
            if (v22)
            {
              v23 = *v22;
              if (v23)
              {
                if (v20.u32[0] < 2uLL)
                {
                  v24 = *(_QWORD *)&v14 - 1;
                  while (1)
                  {
                    v26 = v23[1];
                    if (v19 == v26)
                    {
                      if (*((_DWORD *)v23 + 4) == v15
                        && *((_DWORD *)v23 + 5) == v16
                        && *((_DWORD *)v23 + 6) == v17
                        && *((_DWORD *)v23 + 7) == v18)
                      {
                        goto LABEL_34;
                      }
                    }
                    else if ((v26 & v24) != v21)
                    {
                      goto LABEL_7;
                    }
                    v23 = (uint64_t *)*v23;
                    if (!v23)
                      goto LABEL_7;
                  }
                }
                do
                {
                  v25 = v23[1];
                  if (v19 == v25)
                  {
                    if (*((_DWORD *)v23 + 4) == v15
                      && *((_DWORD *)v23 + 5) == v16
                      && *((_DWORD *)v23 + 6) == v17
                      && *((_DWORD *)v23 + 7) == v18)
                    {
LABEL_34:
                      v27 = *((_BYTE *)v23 + 32);
                      *(_QWORD *)v235 = *(uint64_t *)((char *)v23 + 33);
                      *(_QWORD *)&v235[7] = v23[5];
                      if (a7)
                      {
                        v28 = *v159;
                        if (!*v159)
                          goto LABEL_45;
                        v29 = a1 + 8;
                        do
                        {
                          v30 = *(_DWORD *)(v28 + 28);
                          v31 = v30 < v15;
                          if (v30 >= v15)
                            v32 = (uint64_t *)v28;
                          else
                            v32 = (uint64_t *)(v28 + 8);
                          if (!v31)
                            v29 = v28;
                          v28 = *v32;
                        }
                        while (*v32);
                        if ((uint64_t *)v29 == v159 || v15 < *(_DWORD *)(v29 + 28))
                        {
LABEL_45:
                          v33 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 405, (uint64_t)"iter != map_bundle_to_cluster.end()", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
                          v29 = a1 + 8;
                          if (v33)
                            abort();
                        }
                        v34 = *(_BYTE *)(v29 + 32);
                        v230[0] = *(void **)(v29 + 33);
                        *(void **)((char *)v230 + 7) = *(void **)(v29 + 40);
                        v35 = 1;
                      }
                      else
                      {
                        v34 = 0;
                        v35 = 0;
                      }
                      sub_2241498F4((uint64_t)&key, 0);
                      v36 = (char *)operator new(0x198uLL);
                      *((_QWORD *)v36 + 1) = 0;
                      v37 = (unint64_t *)(v36 + 8);
                      *((_QWORD *)v36 + 2) = 0;
                      *(_OWORD *)(v36 + 24) = key;
                      *(_QWORD *)v36 = &off_24EC1F0A0;
                      v38 = v185;
                      *((_QWORD *)v36 + 5) = v184;
                      *((_QWORD *)v36 + 6) = v38;
                      key = 0uLL;
                      v184 = 0;
                      *(_OWORD *)(v36 + 56) = v186;
                      v39 = v188;
                      *((_QWORD *)v36 + 9) = v187;
                      *((_QWORD *)v36 + 10) = v39;
                      v187 = 0;
                      v186 = 0uLL;
                      *((_DWORD *)v36 + 22) = v189;
                      *((_OWORD *)v36 + 6) = v190;
                      v40 = v192;
                      *((_QWORD *)v36 + 14) = v191;
                      *((_QWORD *)v36 + 15) = v40;
                      v191 = 0;
                      v190 = 0uLL;
                      *((_DWORD *)v36 + 32) = v193;
                      *(_OWORD *)(v36 + 136) = v194;
                      v41 = v196;
                      *((_QWORD *)v36 + 19) = v195;
                      *((_QWORD *)v36 + 20) = v41;
                      v195 = 0;
                      v194 = 0uLL;
                      *(_OWORD *)(v36 + 168) = v197;
                      v42 = v199;
                      *((_QWORD *)v36 + 23) = v198;
                      *((_QWORD *)v36 + 24) = v42;
                      v197 = 0uLL;
                      v198 = 0;
                      *(_OWORD *)(v36 + 200) = v200;
                      v43 = v202;
                      *((_QWORD *)v36 + 27) = v201;
                      *((_QWORD *)v36 + 28) = v43;
                      v200 = 0uLL;
                      v201 = 0;
                      *(_OWORD *)(v36 + 232) = v203;
                      v44 = v205;
                      *((_QWORD *)v36 + 31) = v204;
                      *((_QWORD *)v36 + 32) = v44;
                      v203 = 0uLL;
                      v204 = 0;
                      *(_OWORD *)(v36 + 264) = v206;
                      v45 = v208;
                      *((_QWORD *)v36 + 35) = v207;
                      *((_QWORD *)v36 + 36) = v45;
                      v206 = 0uLL;
                      v207 = 0;
                      *((_DWORD *)v36 + 74) = v209;
                      *((_OWORD *)v36 + 19) = v210;
                      v46 = v212;
                      *((_QWORD *)v36 + 40) = v211;
                      *((_QWORD *)v36 + 41) = v46;
                      v210 = 0uLL;
                      v211 = 0;
                      *((_DWORD *)v36 + 84) = v213;
                      *(_OWORD *)(v36 + 344) = v214;
                      v47 = v216;
                      *((_QWORD *)v36 + 45) = v215;
                      *((_QWORD *)v36 + 46) = v47;
                      v214 = 0uLL;
                      v215 = 0;
                      *((_DWORD *)v36 + 94) = v217;
                      v36[380] = 0;
                      v36[404] = 0;
                      if (v222)
                      {
                        *(_QWORD *)(v36 + 380) = v218;
                        *((_DWORD *)v36 + 97) = v219;
                        *((_QWORD *)v36 + 49) = v220;
                        *((_DWORD *)v36 + 100) = v221;
                        v36[404] = 1;
                      }
                      *(_QWORD *)&v232 = v36 + 24;
                      *((_QWORD *)&v232 + 1) = v36;
                      *(_QWORD *)&v225[4] = 0;
                      *(_QWORD *)&v225[12] = 0;
                      *(_QWORD *)&v225[24] = 0;
                      *(_QWORD *)v226 = 0;
                      *(_QWORD *)&v226[12] = 0;
                      *(_QWORD *)&v226[20] = 0;
                      *(void **)((char *)&v228 + 1) = v230[0];
                      *((void **)&v228 + 1) = *(void **)((char *)v230 + 7);
                      LOBYTE(v223) = v27;
                      *(_QWORD *)((char *)&v223 + 1) = *(_QWORD *)v235;
                      *((_QWORD *)&v223 + 1) = *(_QWORD *)&v235[7];
                      *(_QWORD *)&v224 = v36 + 24;
                      *((_QWORD *)&v224 + 1) = v36;
                      do
                        v48 = __ldxr(v37);
                      while (__stxr(v48 + 1, v37));
                      *(_DWORD *)v225 = 1065353216;
                      *(_DWORD *)&v225[20] = 1065353216;
                      *(_DWORD *)&v226[8] = 1065353216;
                      *(_DWORD *)&v226[28] = 1065353216;
                      v227 = 1;
                      LOBYTE(v228) = v34;
                      v229 = v35;
                      v49 = *(_QWORD *)(a9 + 8);
                      if (v49 >= *(_QWORD *)(a9 + 16))
                      {
                        v54 = sub_223533394((void **)a9, (uint64_t)&v223);
                        a4 = v161;
                        v55 = (std::__shared_weak_count *)*((_QWORD *)&v224 + 1);
                        *(_QWORD *)(a9 + 8) = v54;
                        if (v55)
                        {
                          p_shared_owners = (unint64_t *)&v55->__shared_owners_;
                          do
                            v57 = __ldaxr(p_shared_owners);
                          while (__stlxr(v57 - 1, p_shared_owners));
                          if (!v57)
                          {
                            ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
                            std::__shared_weak_count::__release_weak(v55);
                          }
                        }
                      }
                      else
                      {
                        *(_OWORD *)v49 = v223;
                        *(_QWORD *)(v49 + 16) = v36 + 24;
                        *(_QWORD *)(v49 + 24) = v36;
                        v224 = 0uLL;
                        v51 = *(_OWORD *)v225;
                        v50 = *(_OWORD *)&v225[16];
                        v52 = *(_OWORD *)&v226[16];
                        *(_OWORD *)(v49 + 64) = *(_OWORD *)v226;
                        *(_OWORD *)(v49 + 80) = v52;
                        *(_OWORD *)(v49 + 32) = v51;
                        *(_OWORD *)(v49 + 48) = v50;
                        *(_BYTE *)(v49 + 96) = 1;
                        v53 = v228;
                        *(_BYTE *)(v49 + 116) = v229;
                        *(_OWORD *)(v49 + 100) = v53;
                        *(_QWORD *)(a9 + 8) = v49 + 120;
                        a4 = v161;
                      }
                      v58 = (std::__shared_weak_count *)*((_QWORD *)&v232 + 1);
                      if (*((_QWORD *)&v232 + 1))
                      {
                        v59 = (unint64_t *)(*((_QWORD *)&v232 + 1) + 8);
                        do
                          v60 = __ldaxr(v59);
                        while (__stlxr(v60 - 1, v59));
                        if (!v60)
                        {
                          ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
                          std::__shared_weak_count::__release_weak(v58);
                        }
                      }
                      sub_22316F8F4((uint64_t *)&key);
                      ++*a10;
                      break;
                    }
                  }
                  else
                  {
                    if (v25 >= *(_QWORD *)&v14)
                      v25 %= *(_QWORD *)&v14;
                    if (v25 != v21)
                      break;
                  }
                  v23 = (uint64_t *)*v23;
                }
                while (v23);
              }
            }
          }
LABEL_7:
          v13 = *(_DWORD **)v13;
        }
        while (v13);
        v61 = __p;
        if (__p)
        {
          do
          {
            v62 = (_QWORD *)*v61;
            operator delete(v61);
            v61 = v62;
          }
          while (v62);
        }
      }
      v63 = v166[0];
      v166[0] = 0;
      if (v63)
        operator delete(v63);
      v64 = v12[1];
      if (v64)
      {
        do
        {
          v65 = (_QWORD **)v64;
          v64 = (_QWORD *)*v64;
        }
        while (v64);
      }
      else
      {
        do
        {
          v65 = (_QWORD **)v12[2];
          v66 = *v65 == v12;
          v12 = v65;
        }
        while (!v66);
      }
      v12 = v65;
    }
    while (v65 != v170);
  }
  sub_224569D7C();
  sub_224569A80();
  if (!os_variant_has_internal_diagnostics())
    goto LABEL_167;
  v67 = sub_2241471F8();
  v68 = v67[2];
  if (!v68)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v68 = v67[2];
  }
  v69 = *(_QWORD *)(v68 + 64);
  v70 = (std::mutex *)(v69 + 32);
  std::mutex::lock((std::mutex *)(v69 + 32));
  v72 = *(_QWORD *)(v69 + 96);
  v71 = *(_QWORD *)(v69 + 104);
  std::mutex::unlock(v70);
  if (v72 == v71)
    goto LABEL_167;
  *(_QWORD *)&key = "cv3d.recon.";
  *((_QWORD *)&key + 1) = 11;
  v184 = "Stats.KFCluster.Recycle";
  v185 = (const char *)23;
  sub_2231A9820((uint64_t)&key, (uint64_t)&v186, 0, 0, &v165);
  sub_2241471F8();
  v73 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v73 + 24))(v73))
  {
    v223 = 0u;
    v224 = 0u;
    *(_DWORD *)v225 = 728325616;
    kdebug_trace();
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v73 + 24))(v73))
    {
      *(_QWORD *)&v171 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
      *((_QWORD *)&v171 + 1) = 2;
      v74 = sub_2241471F8();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v73 + 24))(v73))
      {
        *((_QWORD *)&key + 1) = 0;
        v184 = 0;
        *(_QWORD *)&key = (char *)&key + 8;
        sub_2245314F4(&key, v166);
        v172 = *(_OWORD *)v166;
        sub_22323DF84((uint64_t)&key, *((char **)&key + 1));
        v231 = 12;
        strcpy((char *)v230, "recycle list");
        v234 = 0;
        if ((_QWORD **)v169 == v170)
        {
          sub_2231AF0BC(&v232, "{}");
        }
        else
        {
          sub_2231ABA1C(&v232, "{");
          v75 = (_QWORD *)v169;
          v179 = *(_QWORD *)(v169 + 28);
          v180 = *(_DWORD *)(v169 + 36);
          v166[0] = (void *)0x100000003;
          LODWORD(v166[1]) = 3;
          __p = &v179;
          v168 = 0;
          sub_2245057A0((unsigned int *)v166, v235);
          *(_QWORD *)&key = &v232;
          *((_QWORD *)&key + 1) = v235;
          v184 = (const char *)&v232;
          v185 = v235;
          *(_QWORD *)&v186 = v235;
          if (v234 == -1)
            sub_22316DD70();
          p_key = &key;
          ((void (*)(__int128 **, __int128 *))off_24EC453A8[v234])(&p_key, &v232);
          if (v236 < 0)
            operator delete(*(void **)v235);
          v76 = (_QWORD *)v75[1];
          if (v76)
          {
            do
            {
              v77 = v76;
              v76 = (_QWORD *)*v76;
            }
            while (v76);
          }
          else
          {
            do
            {
              v77 = (_QWORD *)v75[2];
              v66 = *v77 == (_QWORD)v75;
              v75 = v77;
            }
            while (!v66);
          }
          if (v77 != v170)
          {
            do
            {
              *(_QWORD *)&key = &v232;
              *((_QWORD *)&key + 1) = ",";
              v184 = (const char *)&v232;
              v185 = ",";
              *(_QWORD *)&v186 = ",";
              if (v234 == -1)
                goto LABEL_241;
              v166[0] = &key;
              ((void (*)(void **, __int128 *))off_24EC453F0[v234])(v166, &v232);
              v179 = *(_QWORD *)((char *)v77 + 28);
              v180 = *((_DWORD *)v77 + 9);
              v166[0] = (void *)0x100000003;
              LODWORD(v166[1]) = 3;
              __p = &v179;
              v168 = 0;
              sub_2245057A0((unsigned int *)v166, v235);
              *(_QWORD *)&key = &v232;
              *((_QWORD *)&key + 1) = v235;
              v184 = (const char *)&v232;
              v185 = v235;
              *(_QWORD *)&v186 = v235;
              if (v234 == -1)
                sub_22316DD70();
              p_key = &key;
              ((void (*)(__int128 **, __int128 *))off_24EC453A8[v234])(&p_key, &v232);
              if (v236 < 0)
              {
                operator delete(*(void **)v235);
                v78 = (_QWORD *)v77[1];
                if (v78)
                {
                  do
                  {
LABEL_100:
                    v79 = (_QWORD **)v78;
                    v78 = (_QWORD *)*v78;
                  }
                  while (v78);
                  goto LABEL_93;
                }
              }
              else
              {
                v78 = (_QWORD *)v77[1];
                if (v78)
                  goto LABEL_100;
              }
              do
              {
                v79 = (_QWORD **)v77[2];
                v66 = *v79 == v77;
                v77 = v79;
              }
              while (!v66);
LABEL_93:
              v77 = v79;
            }
            while (v79 != v170);
          }
          *(_QWORD *)&key = &v232;
          *((_QWORD *)&key + 1) = "}";
          v184 = (const char *)&v232;
          v185 = "}";
          *(_QWORD *)&v186 = "}";
          if (v234 == -1)
LABEL_241:
            sub_22316DD70();
          v166[0] = &key;
          ((void (*)(void **, __int128 *))off_24EC453F0[v234])(v166, &v232);
          a4 = v161;
        }
        if (v234 == -1)
          sub_22316DD70();
        *(_QWORD *)&key = v166;
        ((void (*)(void **__return_ptr, __int128 *, __int128 *))off_24EC453D8[v234])(v176, &key, &v232);
        if (v234 != -1)
          ((void (*)(__int128 *, __int128 *))off_24EC453C0[v234])(&key, &v232);
        v80 = v176;
        if (v177 < 0)
          v80 = (void **)v176[0];
        v178 = v80;
        sub_224527BAC((uint64_t)v230, (CFStringRef *)&key);
        sub_223534538((uint64_t)&v172, (void *)key, (const char **)&v178);
        v81 = (std::__shared_weak_count *)*((_QWORD *)&key + 1);
        if (*((_QWORD *)&key + 1))
        {
          v82 = (unint64_t *)(*((_QWORD *)&key + 1) + 8);
          do
            v83 = __ldaxr(v82);
          while (__stlxr(v83 - 1, v82));
          if (!v83)
          {
            ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
            std::__shared_weak_count::__release_weak(v81);
          }
        }
        if (v177 < 0)
          operator delete(v176[0]);
        if (v231 < 0)
          operator delete(v230[0]);
        LOBYTE(v166[0]) = 0;
        LOBYTE(v168) = 0;
        sub_2231AD9F0((uint64_t)&v172, (__int128 *)v166, &v171, &v173);
        if ((_BYTE)v168 && SHIBYTE(__p) < 0)
          operator delete(v166[0]);
        v84 = (std::__shared_weak_count *)*((_QWORD *)&v172 + 1);
        if (*((_QWORD *)&v172 + 1))
        {
          v85 = (unint64_t *)(*((_QWORD *)&v172 + 1) + 8);
          do
            v86 = __ldaxr(v85);
          while (__stlxr(v86 - 1, v85));
          if (!v86)
          {
            ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
            std::__shared_weak_count::__release_weak(v84);
          }
        }
        v87 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v73 + 56))(v73);
        v88 = *v87;
        v89 = (std::__shared_weak_count *)v87[1];
        if (v89)
        {
          v90 = (unint64_t *)&v89->__shared_owners_;
          do
            v91 = __ldxr(v90);
          while (__stxr(v91 + 1, v90));
        }
        v93 = v174;
        v92 = v175;
        *(_QWORD *)&v232 = &off_24EC6A3B8;
        *((_QWORD *)&v232 + 1) = v174;
        v233 = v175;
        v174 = 0;
        v175 = 0;
        *(_QWORD *)&key = v88;
        *((_QWORD *)&key + 1) = v89;
        if (v89)
        {
          v94 = (unint64_t *)&v89->__shared_owners_;
          do
            v95 = __ldxr(v94);
          while (__stxr(v95 + 1, v94));
        }
        v184 = (const char *)&off_24EC6A3B8;
        v185 = v93;
        *(_QWORD *)&v186 = v92;
        if (v92)
        {
          v96 = (unint64_t *)&v92->__shared_owners_;
          do
            v97 = __ldxr(v96);
          while (__stxr(v97 + 1, v96));
        }
        (*(void (**)(uint64_t *, __int128 *))(*v74 + 16))(v74, &key);
        v98 = (std::__shared_weak_count *)v186;
        if ((_QWORD)v186)
        {
          v99 = (unint64_t *)(v186 + 8);
          do
            v100 = __ldaxr(v99);
          while (__stlxr(v100 - 1, v99));
          if (!v100)
          {
            ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
            std::__shared_weak_count::__release_weak(v98);
          }
        }
        v101 = (std::__shared_weak_count *)*((_QWORD *)&key + 1);
        if (*((_QWORD *)&key + 1))
        {
          v102 = (unint64_t *)(*((_QWORD *)&key + 1) + 8);
          do
            v103 = __ldaxr(v102);
          while (__stlxr(v103 - 1, v102));
          if (!v103)
          {
            ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
            std::__shared_weak_count::__release_weak(v101);
          }
        }
        v104 = v233;
        if (v233)
        {
          v105 = (unint64_t *)&v233->__shared_owners_;
          do
            v106 = __ldaxr(v105);
          while (__stlxr(v106 - 1, v105));
          if (!v106)
          {
            ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
            std::__shared_weak_count::__release_weak(v104);
          }
        }
        if (v89)
        {
          v107 = (unint64_t *)&v89->__shared_owners_;
          do
            v108 = __ldaxr(v107);
          while (__stlxr(v108 - 1, v107));
          if (!v108)
          {
            ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
            std::__shared_weak_count::__release_weak(v89);
          }
        }
        v109 = v175;
        if (v175)
        {
          v110 = (unint64_t *)&v175->__shared_owners_;
          do
            v111 = __ldaxr(v110);
          while (__stlxr(v111 - 1, v110));
          if (!v111)
          {
            ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
            std::__shared_weak_count::__release_weak(v109);
          }
        }
      }
    }
    kdebug_trace();
  }
  if (SHIBYTE(v165.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v165.__r_.__value_.__l.__data_);
    if ((a8 & 1) != 0)
      goto LABEL_236;
  }
  else
  {
LABEL_167:
    if ((a8 & 1) != 0)
      goto LABEL_236;
  }
  v112 = (uint64_t *)a4[8];
  if (!v112)
    goto LABEL_236;
  v113 = 0;
  v114 = 0;
  v115 = 0;
  v116 = (uint64_t *)(a1 + 8);
  v164 = (uint64_t *)(a2 + 8);
  do
  {
    v118 = v112 + 2;
    v117 = *((_DWORD *)v112 + 4);
    v119 = *v116;
    if (*v116)
    {
      v120 = a1 + 8;
      do
      {
        v121 = *(_DWORD *)(v119 + 28);
        v122 = v121 < v117;
        if (v121 >= v117)
          v123 = (uint64_t *)v119;
        else
          v123 = (uint64_t *)(v119 + 8);
        if (!v122)
          v120 = v119;
        v119 = *v123;
      }
      while (*v123);
      if ((uint64_t *)v120 != v116 && (a6 & 2) == 0 && v117 >= *(_DWORD *)(v120 + 28))
        goto LABEL_171;
    }
    if (v114 < v115)
    {
      *(_OWORD *)v114 = *v118;
      v114 += 16;
      goto LABEL_199;
    }
    v124 = (v114 - v113) >> 4;
    v125 = v124 + 1;
    if ((unint64_t)(v124 + 1) >> 60)
      sub_22316E078();
    if ((v115 - v113) >> 3 > v125)
      v125 = (v115 - v113) >> 3;
    if ((unint64_t)(v115 - v113) >= 0x7FFFFFFFFFFFFFF0)
      v126 = 0xFFFFFFFFFFFFFFFLL;
    else
      v126 = v125;
    if (v126)
    {
      if (v126 >> 60)
        sub_223174E94();
      v127 = (char *)operator new(16 * v126);
      v128 = &v127[16 * v124];
      *(_OWORD *)v128 = *v118;
      if (v114 == v113)
      {
LABEL_226:
        v130 = v128;
        v115 = &v127[16 * v126];
        v114 = v128 + 16;
        if (!v113)
          goto LABEL_198;
        goto LABEL_197;
      }
    }
    else
    {
      v127 = 0;
      v128 = (char *)(16 * v124);
      *(_OWORD *)(16 * v124) = *v118;
      if (v114 == v113)
        goto LABEL_226;
    }
    v129 = v128;
    do
    {
      v130 = v129 - 16;
      *((_OWORD *)v129 - 1) = *((_OWORD *)v114 - 1);
      v114 -= 16;
      v129 -= 16;
    }
    while (v114 != v113);
    v115 = &v127[16 * v126];
    v114 = v128 + 16;
    if (!v113)
      goto LABEL_198;
LABEL_197:
    operator delete(v113);
LABEL_198:
    v113 = v130;
LABEL_199:
    v131 = sub_22353408C(a3, (int *)v112 + 4);
    if (v131)
    {
      v132 = *((_BYTE *)v131 + 32);
      *(_QWORD *)&v232 = *(uint64_t *)((char *)v131 + 33);
      *(_QWORD *)((char *)&v232 + 7) = v131[5];
      v133 = *v164;
      if (!*v164)
        goto LABEL_210;
      v134 = a2 + 8;
      do
      {
        v135 = *(_DWORD *)(v133 + 28);
        v136 = v135 < v117;
        if (v135 >= v117)
          v137 = (uint64_t *)v133;
        else
          v137 = (uint64_t *)(v133 + 8);
        if (!v136)
          v134 = v133;
        v133 = *v137;
      }
      while (*v137);
      if ((uint64_t *)v134 == v164 || v117 < *(_DWORD *)(v134 + 28))
      {
LABEL_210:
        v134 = a2 + 8;
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 440, (uint64_t)"iter_room != map_bundle_to_cluster_history.end()", 48, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
      }
      sub_2241498F4((uint64_t)&key, 0);
      v138 = (unint64_t *)operator new(0x198uLL);
      v138[1] = 0;
      v139 = v138 + 1;
      v138[2] = 0;
      *v138 = (unint64_t)&off_24EC1F0A0;
      v140 = (void *)sub_22317FD80((uint64_t)(v138 + 3), (uint64_t)&key);
      v166[0] = v140;
      v166[1] = v138;
      v182 = *(_OWORD *)(v134 + 32);
      LOBYTE(v223) = v132;
      *(_QWORD *)((char *)&v223 + 1) = v232;
      *((_QWORD *)&v223 + 1) = *(_QWORD *)((char *)&v232 + 7);
      *(_QWORD *)&v224 = v140;
      *((_QWORD *)&v224 + 1) = v138;
      do
        v141 = __ldxr(v139);
      while (__stxr(v141 + 1, v139));
      *(_QWORD *)&v225[4] = 0;
      *(_QWORD *)&v225[12] = 0;
      *(_DWORD *)v225 = 1065353216;
      *(_DWORD *)&v225[20] = 1065353216;
      *(_QWORD *)&v225[24] = 0;
      *(_QWORD *)v226 = 0;
      *(_QWORD *)&v226[12] = 0;
      *(_QWORD *)&v226[20] = 0;
      *(_DWORD *)&v226[8] = 1065353216;
      *(_DWORD *)&v226[28] = 1065353216;
      v227 = 1;
      v228 = v182;
      v229 = 1;
      v142 = *(_QWORD *)(a9 + 8);
      if (v142 >= *(_QWORD *)(a9 + 16))
      {
        v148 = sub_223533394((void **)a9, (uint64_t)&v223);
        v149 = (std::__shared_weak_count *)*((_QWORD *)&v224 + 1);
        *(_QWORD *)(a9 + 8) = v148;
        if (!v149)
          goto LABEL_220;
        v150 = (unint64_t *)&v149->__shared_owners_;
        do
          v151 = __ldaxr(v150);
        while (__stlxr(v151 - 1, v150));
        if (!v151)
        {
          ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
          std::__shared_weak_count::__release_weak(v149);
          v147 = (std::__shared_weak_count *)v166[1];
          if (!v166[1])
            goto LABEL_170;
        }
        else
        {
LABEL_220:
          v147 = (std::__shared_weak_count *)v166[1];
          if (!v166[1])
          {
LABEL_170:
            sub_22316F8F4((uint64_t *)&key);
            goto LABEL_171;
          }
        }
      }
      else
      {
        *(_OWORD *)v142 = v223;
        *(_QWORD *)(v142 + 16) = v140;
        *(_QWORD *)(v142 + 24) = v138;
        v224 = 0uLL;
        v144 = *(_OWORD *)v225;
        v143 = *(_OWORD *)&v225[16];
        v145 = *(_OWORD *)&v226[16];
        *(_OWORD *)(v142 + 64) = *(_OWORD *)v226;
        *(_OWORD *)(v142 + 80) = v145;
        *(_OWORD *)(v142 + 32) = v144;
        *(_OWORD *)(v142 + 48) = v143;
        *(_BYTE *)(v142 + 96) = 1;
        v146 = v228;
        *(_BYTE *)(v142 + 116) = v229;
        *(_OWORD *)(v142 + 100) = v146;
        *(_QWORD *)(a9 + 8) = v142 + 120;
        v147 = (std::__shared_weak_count *)v166[1];
        if (!v166[1])
          goto LABEL_170;
      }
      v152 = (unint64_t *)&v147->__shared_owners_;
      do
        v153 = __ldaxr(v152);
      while (__stlxr(v153 - 1, v152));
      if (!v153)
      {
        ((void (*)(std::__shared_weak_count *))v147->__on_zero_shared)(v147);
        std::__shared_weak_count::__release_weak(v147);
      }
      goto LABEL_170;
    }
LABEL_171:
    v112 = (uint64_t *)*v112;
  }
  while (v112);
  if (v113 != v114)
  {
    v154 = v113;
    do
    {
      v155 = *((_DWORD *)v154 + 3);
      *(_QWORD *)&key = *(_QWORD *)(v154 + 4);
      DWORD2(key) = v155;
      sub_223A32920(v161, (uint64_t)&key, *(_DWORD *)v154);
      v154 += 16;
    }
    while (v154 != v114);
  }
  if (v113)
    operator delete(v113);
LABEL_236:
  sub_223198030((uint64_t)&v169, v170[0]);
}

void sub_22352FA44(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_22316DC48(a1);
  _Unwind_Resume(a1);
}

void sub_22352FD20(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, char **a6@<X5>, void ***a7@<X6>, float32x4_t *a8@<X7>, unint64_t **a9@<X8>, _QWORD *a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t *v21;
  _BOOL4 v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  BOOL v26;
  _QWORD *v27;
  uint64_t **v28;
  _QWORD *v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t *v34;
  unsigned int v35;
  _QWORD *v36;
  unsigned int v37;
  BOOL v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  int v43;
  _QWORD *v44;
  int v45;
  BOOL v46;
  uint64_t *v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  char *v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  unint64_t *v67;
  __int128 v68;
  unint64_t v69;
  unint64_t *v70;
  unint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  char *v75;
  char *v76;
  char *v77;
  __int128 v78;
  uint64_t v79;
  unint64_t *v80;
  unint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  unint64_t *v85;
  uint64_t v86;
  char *v87;
  unint64_t *v88;
  __int128 v89;
  char *v90;
  unint64_t *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  unint64_t *v95;
  uint64_t v96;
  char *v97;
  __int128 v98;
  unint64_t *v99;
  char *v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  unint64_t *v104;
  std::__shared_weak_count *v105;
  unint64_t *p_shared_owners;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t *v110;
  __int128 *v111;
  unint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  char *v117;
  char *v118;
  void *v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  __int128 v123;
  __int128 v124;
  std::__shared_weak_count *v125;
  unint64_t *v126;
  unint64_t v127;
  unint64_t *v128;
  __int128 *v129;
  int v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t *v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  _OWORD *v145;
  __int128 *v146;
  int v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _QWORD *v154;
  _QWORD *v155;
  void *v156;
  _QWORD *v157;
  _QWORD *v158;
  _QWORD *v159;
  float32x4_t v167;
  float32x4_t v168;
  float32x4_t v169;
  float32x4_t v170;
  float32x4_t v171;
  float32x4_t v172;
  float32x4_t v173;
  float32x4_t v174;
  __int128 v175[4];
  char v176;
  void *__p;
  char *v178;
  uint64_t v179;
  __int128 v180[4];
  char v181;
  _QWORD v182[2];
  _QWORD *v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  char v187;
  _BYTE v188[15];
  __int128 v189;
  char v190;
  uint64_t v191;

  v191 = *MEMORY[0x24BDAC8D0];
  v184 = a14;
  v185 = a15;
  if (!a3)
  {
    if (a11)
      v26 = a13 == 0;
    else
      v26 = 1;
    if (v26
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 472, (uint64_t)"active_bundle_to_cluster.has_value() && coordinate_results.has_value()", 70, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_228;
    }
    *a9 = 0;
    a9[1] = 0;
    a9[2] = 0;
    v27 = (_QWORD *)*a10;
    if ((_QWORD *)*a10 == a10 + 1)
      return;
    v28 = (uint64_t **)(a12 + 8);
    v29 = (_QWORD *)(a1 + 64);
    v159 = (_QWORD *)(a1 + 64);
LABEL_27:
    v30 = (unsigned __int8 *)*v28;
    if (!*v28)
      goto LABEL_232;
    v31 = (unsigned __int8 *)(a12 + 8);
    do
    {
      v32 = v30[32];
      v33 = *((unsigned __int8 *)v27 + 32);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[33];
      v33 = *((unsigned __int8 *)v27 + 33);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[34];
      v33 = *((unsigned __int8 *)v27 + 34);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[35];
      v33 = *((unsigned __int8 *)v27 + 35);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[36];
      v33 = *((unsigned __int8 *)v27 + 36);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[37];
      v33 = *((unsigned __int8 *)v27 + 37);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[38];
      v33 = *((unsigned __int8 *)v27 + 38);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[39];
      v33 = *((unsigned __int8 *)v27 + 39);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[40];
      v33 = *((unsigned __int8 *)v27 + 40);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[41];
      v33 = *((unsigned __int8 *)v27 + 41);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[42];
      v33 = *((unsigned __int8 *)v27 + 42);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[43];
      v33 = *((unsigned __int8 *)v27 + 43);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[44];
      v33 = *((unsigned __int8 *)v27 + 44);
      if (v32 != v33)
        goto LABEL_46;
      v32 = v30[45];
      v33 = *((unsigned __int8 *)v27 + 45);
      if (v32 == v33
        && (v32 = v30[46], v33 = *((unsigned __int8 *)v27 + 46), v32 == v33)
        && (v32 = v30[47], v33 = *((unsigned __int8 *)v27 + 47), v32 == v33))
      {
        v31 = v30;
      }
      else
      {
LABEL_46:
        if (v32 < v33)
          v30 += 8;
        else
          v31 = v30;
      }
      v30 = *(unsigned __int8 **)v30;
    }
    while (v30);
    if (v31 == (unsigned __int8 *)v28 || (char)sub_22319835C((unsigned __int8 *)v27 + 32, v31 + 32) < 0)
    {
LABEL_232:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 475, (uint64_t)"coordinate_results->contains(cid)", 33, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
    }
    v34 = *v28;
    if (!*v28)
LABEL_222:
      sub_223198218("map::at:  key not found");
    v35 = *((unsigned __int8 *)v27 + 32);
    v36 = (_QWORD *)((char *)v27 + 33);
    while (1)
    {
      v37 = *((unsigned __int8 *)v34 + 32);
      v38 = v35 >= v37;
      if (v35 != v37)
        break;
      v39 = *(unsigned __int8 *)v36;
      v37 = *((unsigned __int8 *)v34 + 33);
      v38 = v39 >= v37;
      if (v39 == v37
        && (v39 = *((unsigned __int8 *)v27 + 34), v37 = *((unsigned __int8 *)v34 + 34), v38 = v39 >= v37, v39 == v37)
        && (v39 = *((unsigned __int8 *)v27 + 35), v37 = *((unsigned __int8 *)v34 + 35), v38 = v39 >= v37, v39 == v37))
      {
        v40 = *((unsigned __int8 *)v27 + 36);
        v41 = *((unsigned __int8 *)v34 + 36);
        if (v40 != v41)
          goto LABEL_72;
        v40 = *((unsigned __int8 *)v27 + 37);
        v41 = *((unsigned __int8 *)v34 + 37);
        if (v40 != v41)
          goto LABEL_72;
        v40 = *((unsigned __int8 *)v27 + 38);
        v41 = *((unsigned __int8 *)v34 + 38);
        if (v40 != v41)
          goto LABEL_72;
        v40 = *((unsigned __int8 *)v27 + 39);
        v41 = *((unsigned __int8 *)v34 + 39);
        if (v40 != v41)
          goto LABEL_72;
        v40 = *((unsigned __int8 *)v27 + 40);
        v41 = *((unsigned __int8 *)v34 + 40);
        if (v40 != v41)
          goto LABEL_72;
        v40 = *((unsigned __int8 *)v27 + 41);
        v41 = *((unsigned __int8 *)v34 + 41);
        if (v40 != v41)
          goto LABEL_72;
        v40 = *((unsigned __int8 *)v27 + 42);
        v41 = *((unsigned __int8 *)v34 + 42);
        if (v40 != v41)
          goto LABEL_72;
        v40 = *((unsigned __int8 *)v27 + 43);
        v41 = *((unsigned __int8 *)v34 + 43);
        if (v40 != v41)
          goto LABEL_72;
        v40 = *((unsigned __int8 *)v27 + 44);
        v41 = *((unsigned __int8 *)v34 + 44);
        if (v40 != v41
          || (v40 = *((unsigned __int8 *)v27 + 45), v41 = *((unsigned __int8 *)v34 + 45), v40 != v41)
          || (v40 = *((unsigned __int8 *)v27 + 46), v41 = *((unsigned __int8 *)v34 + 46), v40 != v41)
          || (v40 = *((unsigned __int8 *)v27 + 47), v41 = *((unsigned __int8 *)v34 + 47), v40 != v41))
        {
LABEL_72:
          if (v40 < v41)
            goto LABEL_55;
        }
        v37 = *((unsigned __int8 *)v34 + 36);
        v39 = *((unsigned __int8 *)v27 + 36);
        if (v37 == v39)
        {
          v37 = *((unsigned __int8 *)v34 + 37);
          v39 = *((unsigned __int8 *)v27 + 37);
          if (v37 == v39)
          {
            v37 = *((unsigned __int8 *)v34 + 38);
            v39 = *((unsigned __int8 *)v27 + 38);
            if (v37 == v39)
            {
              v37 = *((unsigned __int8 *)v34 + 39);
              v39 = *((unsigned __int8 *)v27 + 39);
              if (v37 == v39)
              {
                v37 = *((unsigned __int8 *)v34 + 40);
                v39 = *((unsigned __int8 *)v27 + 40);
                if (v37 == v39)
                {
                  v37 = *((unsigned __int8 *)v34 + 41);
                  v39 = *((unsigned __int8 *)v27 + 41);
                  if (v37 == v39)
                  {
                    v37 = *((unsigned __int8 *)v34 + 42);
                    v39 = *((unsigned __int8 *)v27 + 42);
                    if (v37 == v39)
                    {
                      v37 = *((unsigned __int8 *)v34 + 43);
                      v39 = *((unsigned __int8 *)v27 + 43);
                      if (v37 == v39)
                      {
                        v37 = *((unsigned __int8 *)v34 + 44);
                        v39 = *((unsigned __int8 *)v27 + 44);
                        if (v37 == v39)
                        {
                          v37 = *((unsigned __int8 *)v34 + 45);
                          v39 = *((unsigned __int8 *)v27 + 45);
                          if (v37 == v39)
                          {
                            v37 = *((unsigned __int8 *)v34 + 46);
                            v39 = *((unsigned __int8 *)v27 + 46);
                            if (v37 == v39)
                            {
                              v37 = *((unsigned __int8 *)v34 + 47);
                              v39 = *((unsigned __int8 *)v27 + 47);
                              if (v37 == v39)
                              {
LABEL_92:
                                v173 = a8[2];
                                v174 = a8[1];
                                v167 = *(float32x4_t *)((char *)v34 + 52);
                                v168 = *(float32x4_t *)((char *)v34 + 68);
                                v169 = *(float32x4_t *)((char *)v34 + 84);
                                v170 = *a8;
                                v171 = *(float32x4_t *)((char *)v34 + 100);
                                v172 = a8[3];
                                v42 = *v29;
                                if (!*v29)
                                  goto LABEL_102;
                                v43 = *((_DWORD *)v27 + 7);
                                v44 = v29;
                                do
                                {
                                  v45 = *(_DWORD *)(v42 + 32);
                                  v46 = v45 < v43;
                                  if (v45 >= v43)
                                    v47 = (uint64_t *)v42;
                                  else
                                    v47 = (uint64_t *)(v42 + 8);
                                  if (!v46)
                                    v44 = (_QWORD *)v42;
                                  v42 = *v47;
                                }
                                while (*v47);
                                if (v44 == v29 || *((_DWORD *)v44 + 8) > v43)
                                {
LABEL_102:
                                  v48 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 132, (uint64_t)"iter != vol_bundle_store.end()", 30, (uint64_t)"Bundle not found.", 17, (void (*)(void **))sub_22457406C);
                                  v44 = v29;
                                  if (v48)
                                    abort();
                                }
                                v49 = v44[5];
                                if (*((_BYTE *)v34 + 2064))
                                  v50 = v34[184];
                                else
                                  v50 = 0;
                                if ((_BYTE)v185)
                                  v50 = v184;
                                v179 = v50;
                                (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t *, uint64_t))(**(_QWORD **)(v49 + 8) + 32))(v182, *(_QWORD *)(v49 + 8), &v179, a4);
                                v51 = a2;
                                if (a2)
                                {
                                  v51 = *((_BYTE *)v27 + 32);
                                  *(_QWORD *)v188 = *v36;
                                  *(_QWORD *)&v188[7] = v27[5];
                                  v52 = 1;
                                }
                                else
                                {
                                  v52 = 0;
                                }
                                v53 = *((_DWORD *)v27 + 7);
                                v175[0] = (__int128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v170, v167.f32[0]), v174, *(float32x2_t *)v167.f32, 1), v173, v167, 2), v172, v167, 3);
                                v175[1] = (__int128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v170, v168.f32[0]), v174, *(float32x2_t *)v168.f32, 1), v173, v168, 2), v172, v168, 3);
                                v175[2] = (__int128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v170, v169.f32[0]), v174, *(float32x2_t *)v169.f32, 1), v173, v169, 2), v172, v169, 3);
                                v175[3] = (__int128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v170, v171.f32[0]), v174, *(float32x2_t *)v171.f32, 1), v173, v171, 2), v172, v171, 3);
                                v176 = 1;
                                LOBYTE(v186) = v51;
                                *(_QWORD *)((char *)&v186 + 1) = *(_QWORD *)v188;
                                *((_QWORD *)&v186 + 1) = *(_QWORD *)&v188[7];
                                v187 = v52;
                                sub_22352C318((unint64_t **)&__p, (uint64_t)v182, a7, a6, a5, v53, v175, &v186);
                                v55 = (char *)__p;
                                v54 = v178;
                                if (v178 - (_BYTE *)__p >= 1)
                                {
                                  v56 = (v178 - (_BYTE *)__p) / 120;
                                  v58 = *a9;
                                  v57 = (unint64_t)a9[1];
                                  v59 = (uint64_t)(v57 - (_QWORD)*a9) / 120;
                                  v60 = (uint64_t)&(*a9)[15 * v59];
                                  v61 = a9[2];
                                  if ((uint64_t)(0xEEEEEEEEEEEEEEEFLL * ((uint64_t)((uint64_t)v61 - v57) >> 3)) < v56)
                                  {
                                    v62 = v59 + v56;
                                    if ((unint64_t)(v59 + v56) > 0x222222222222222)
                                      sub_22316E078();
                                    if (0xDDDDDDDDDDDDDDDELL * (v61 - v58) > v62)
                                      v62 = 0xDDDDDDDDDDDDDDDELL * (v61 - v58);
                                    if (0xEEEEEEEEEEEEEEEFLL * (v61 - v58) >= 0x111111111111111)
                                      v63 = 0x222222222222222;
                                    else
                                      v63 = v62;
                                    if (v63)
                                    {
                                      if (v63 > 0x222222222222222)
                                        sub_223174E94();
                                      v64 = (char *)operator new(120 * v63);
                                    }
                                    else
                                    {
                                      v64 = 0;
                                    }
                                    v75 = &v64[120 * v59];
                                    v76 = &v75[120 * v56];
                                    v77 = v75;
                                    do
                                    {
                                      *(_OWORD *)v77 = *(_OWORD *)v55;
                                      *((_QWORD *)v77 + 2) = *((_QWORD *)v55 + 2);
                                      v79 = *((_QWORD *)v55 + 3);
                                      *((_QWORD *)v77 + 3) = v79;
                                      if (v79)
                                      {
                                        v80 = (unint64_t *)(v79 + 8);
                                        do
                                          v81 = __ldxr(v80);
                                        while (__stxr(v81 + 1, v80));
                                      }
                                      v77[32] = 0;
                                      v77[96] = 0;
                                      if (v55[96])
                                      {
                                        v82 = *((_OWORD *)v55 + 2);
                                        v83 = *((_OWORD *)v55 + 3);
                                        v84 = *((_OWORD *)v55 + 5);
                                        *((_OWORD *)v77 + 4) = *((_OWORD *)v55 + 4);
                                        *((_OWORD *)v77 + 5) = v84;
                                        *((_OWORD *)v77 + 2) = v82;
                                        *((_OWORD *)v77 + 3) = v83;
                                        v77[96] = 1;
                                      }
                                      v78 = *(_OWORD *)(v55 + 100);
                                      v77[116] = v55[116];
                                      *(_OWORD *)(v77 + 100) = v78;
                                      v77 += 120;
                                      v55 += 120;
                                    }
                                    while (v77 != v76);
                                    v85 = *a9;
                                    if (*a9 != (unint64_t *)v60)
                                    {
                                      v86 = 120 * v59;
                                      v87 = v64;
                                      v88 = v58;
                                      do
                                      {
                                        v90 = &v87[v86];
                                        v91 = &v88[(unint64_t)v86 / 8];
                                        *(_OWORD *)(v90 - 120) = *(_OWORD *)&v88[(unint64_t)v86 / 8 - 15];
                                        *(_OWORD *)(v90 - 104) = *(_OWORD *)&v88[(unint64_t)v86 / 8 - 13];
                                        *(v91 - 13) = 0;
                                        *(v91 - 12) = 0;
                                        v87[v86 - 88] = 0;
                                        *(v90 - 24) = 0;
                                        if (LOBYTE(v88[(unint64_t)v86 / 8 - 3]))
                                        {
                                          v92 = *(_OWORD *)(v91 - 11);
                                          v93 = *(_OWORD *)(v91 - 9);
                                          v94 = *(_OWORD *)(v91 - 5);
                                          *(_OWORD *)&v87[v86 - 56] = *(_OWORD *)(v91 - 7);
                                          *(_OWORD *)&v87[v86 - 40] = v94;
                                          *(_OWORD *)&v87[v86 - 88] = v92;
                                          *(_OWORD *)&v87[v86 - 72] = v93;
                                          *(v90 - 24) = 1;
                                        }
                                        v89 = *(_OWORD *)((char *)v91 - 20);
                                        *(v90 - 4) = *((_BYTE *)v91 - 4);
                                        *(_OWORD *)(v90 - 20) = v89;
                                        v88 -= 15;
                                        v87 -= 120;
                                      }
                                      while (&v88[(unint64_t)v86 / 8] != v85);
                                      v75 = &v87[120 * v59];
                                    }
                                    v95 = a9[1];
                                    if (v95 != (unint64_t *)v60)
                                    {
                                      v96 = 120 * v59;
                                      v97 = &v64[120 * v56];
                                      do
                                      {
                                        v99 = &v58[(unint64_t)v96 / 8];
                                        v100 = &v97[v96];
                                        *(_OWORD *)v100 = *(_OWORD *)&v58[15 * v59];
                                        *((_OWORD *)v100 + 1) = *(_OWORD *)&v58[(unint64_t)v96 / 8 + 2];
                                        v99[2] = 0;
                                        v99[3] = 0;
                                        v97[v96 + 32] = 0;
                                        v100[96] = 0;
                                        if (LOBYTE(v58[(unint64_t)v96 / 8 + 12]))
                                        {
                                          v101 = *((_OWORD *)v99 + 2);
                                          v102 = *((_OWORD *)v99 + 3);
                                          v103 = *((_OWORD *)v99 + 5);
                                          *(_OWORD *)&v97[v96 + 64] = *((_OWORD *)v99 + 4);
                                          *(_OWORD *)&v97[v96 + 80] = v103;
                                          *(_OWORD *)&v97[v96 + 32] = v101;
                                          *(_OWORD *)&v97[v96 + 48] = v102;
                                          v100[96] = 1;
                                        }
                                        v98 = *(_OWORD *)((char *)v99 + 100);
                                        v100[116] = *((_BYTE *)v99 + 116);
                                        *(_OWORD *)(v100 + 100) = v98;
                                        v97 += 120;
                                        v58 += 15;
                                      }
                                      while (v99 + 15 != v95);
                                      v60 = (uint64_t)a9[1];
                                      v76 = &v97[120 * v59];
                                    }
                                    v104 = *a9;
                                    *a9 = (unint64_t *)v75;
                                    a9[1] = (unint64_t *)v76;
                                    a9[2] = (unint64_t *)&v64[120 * v63];
                                    while ((unint64_t *)v60 != v104)
                                    {
                                      v105 = *(std::__shared_weak_count **)(v60 - 96);
                                      if (v105)
                                      {
                                        p_shared_owners = (unint64_t *)&v105->__shared_owners_;
                                        do
                                          v107 = __ldaxr(p_shared_owners);
                                        while (__stlxr(v107 - 1, p_shared_owners));
                                        if (!v107)
                                        {
                                          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
                                          std::__shared_weak_count::__release_weak(v105);
                                        }
                                      }
                                      v60 -= 120;
                                    }
                                    if (v104)
                                      operator delete(v104);
                                    goto LABEL_171;
                                  }
                                  if ((uint64_t)(0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v57 - v60) >> 3)) >= v56)
                                  {
                                    v65 = (char *)__p + 120 * v56;
                                    v67 = a9[1];
                                    goto LABEL_164;
                                  }
                                  v65 = (char *)__p + 8 * ((uint64_t)(v57 - v60) >> 3);
                                  if (v65 == v178)
                                  {
                                    v67 = a9[1];
                                  }
                                  else
                                  {
                                    v66 = (char *)__p + 8 * ((uint64_t)(v57 - v60) >> 3);
                                    v67 = a9[1];
                                    do
                                    {
                                      *(_OWORD *)v67 = *(_OWORD *)v66;
                                      v67[2] = *((_QWORD *)v66 + 2);
                                      v69 = *((_QWORD *)v66 + 3);
                                      v67[3] = v69;
                                      if (v69)
                                      {
                                        v70 = (unint64_t *)(v69 + 8);
                                        do
                                          v71 = __ldxr(v70);
                                        while (__stxr(v71 + 1, v70));
                                      }
                                      *((_BYTE *)v67 + 32) = 0;
                                      *((_BYTE *)v67 + 96) = 0;
                                      if (v66[96])
                                      {
                                        v72 = *((_OWORD *)v66 + 2);
                                        v73 = *((_OWORD *)v66 + 3);
                                        v74 = *((_OWORD *)v66 + 5);
                                        *((_OWORD *)v67 + 4) = *((_OWORD *)v66 + 4);
                                        *((_OWORD *)v67 + 5) = v74;
                                        *((_OWORD *)v67 + 2) = v72;
                                        *((_OWORD *)v67 + 3) = v73;
                                        *((_BYTE *)v67 + 96) = 1;
                                      }
                                      v68 = *(_OWORD *)(v66 + 100);
                                      *((_BYTE *)v67 + 116) = v66[116];
                                      *(_OWORD *)((char *)v67 + 100) = v68;
                                      v66 += 120;
                                      v67 += 15;
                                    }
                                    while (v66 != v54);
                                  }
                                  a9[1] = v67;
                                  if ((uint64_t)(v57 - v60) >= 1)
                                  {
LABEL_164:
                                    v108 = v60 + 120 * v56;
                                    v109 = (unint64_t)&v67[-15 * v56];
                                    v110 = v67;
                                    if (v109 < v57)
                                    {
                                      v111 = (__int128 *)&v58[15 * v59 + 4 + (((uint64_t)v67 - v108) >> 3)];
                                      v112 = v109;
                                      v110 = v67;
                                      do
                                      {
                                        *(_OWORD *)v110 = *(v111 - 2);
                                        *((_OWORD *)v110 + 1) = *(_OWORD *)(v112 + 16);
                                        *(_QWORD *)(v112 + 16) = 0;
                                        *(_QWORD *)(v112 + 24) = 0;
                                        *((_BYTE *)v110 + 32) = 0;
                                        *((_BYTE *)v110 + 96) = 0;
                                        if (*(_BYTE *)(v112 + 96))
                                        {
                                          v114 = *v111;
                                          v115 = v111[1];
                                          v116 = v111[3];
                                          *((_OWORD *)v110 + 4) = v111[2];
                                          *((_OWORD *)v110 + 5) = v116;
                                          *((_OWORD *)v110 + 2) = v114;
                                          *((_OWORD *)v110 + 3) = v115;
                                          *((_BYTE *)v110 + 96) = 1;
                                        }
                                        v113 = *(_OWORD *)(v112 + 100);
                                        *((_BYTE *)v110 + 116) = *(_BYTE *)(v112 + 116);
                                        *(_OWORD *)((char *)v110 + 100) = v113;
                                        v112 += 120;
                                        v110 += 15;
                                        v111 = (__int128 *)((char *)v111 + 120);
                                      }
                                      while (v112 < v57);
                                    }
                                    a9[1] = v110;
                                    if (v67 == (unint64_t *)v108)
                                    {
LABEL_170:
                                      if (v65 == v55)
                                        goto LABEL_171;
                                      while (2)
                                      {
                                        *(_OWORD *)v60 = *(_OWORD *)v55;
                                        v139 = *((_QWORD *)v55 + 2);
                                        v138 = *((_QWORD *)v55 + 3);
                                        if (v138)
                                        {
                                          v140 = (unint64_t *)(v138 + 8);
                                          do
                                            v141 = __ldxr(v140);
                                          while (__stxr(v141 + 1, v140));
                                        }
                                        v142 = *(std::__shared_weak_count **)(v60 + 24);
                                        *(_QWORD *)(v60 + 16) = v139;
                                        *(_QWORD *)(v60 + 24) = v138;
                                        if (!v142)
                                          goto LABEL_203;
                                        v143 = (unint64_t *)&v142->__shared_owners_;
                                        do
                                          v144 = __ldaxr(v143);
                                        while (__stlxr(v144 - 1, v143));
                                        if (!v144)
                                        {
                                          ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
                                          std::__shared_weak_count::__release_weak(v142);
                                          v145 = (_OWORD *)(v60 + 32);
                                          v146 = (__int128 *)(v55 + 32);
                                          v147 = *(unsigned __int8 *)(v60 + 96);
                                          if (v147 == v55[96])
                                            goto LABEL_204;
                                        }
                                        else
                                        {
LABEL_203:
                                          v145 = (_OWORD *)(v60 + 32);
                                          v146 = (__int128 *)(v55 + 32);
                                          v147 = *(unsigned __int8 *)(v60 + 96);
                                          if (v147 == v55[96])
                                          {
LABEL_204:
                                            if (v147)
                                            {
                                              v148 = *v146;
                                              v149 = v146[1];
                                              v150 = v146[3];
                                              v145[2] = v146[2];
                                              v145[3] = v150;
                                              *v145 = v148;
                                              v145[1] = v149;
                                            }
LABEL_195:
                                            v137 = *(_OWORD *)(v55 + 100);
                                            *(_BYTE *)(v60 + 116) = v55[116];
                                            *(_OWORD *)(v60 + 100) = v137;
                                            v55 += 120;
                                            v60 += 120;
                                            if (v55 == v65)
                                              goto LABEL_171;
                                            continue;
                                          }
                                        }
                                        break;
                                      }
                                      if (v147)
                                      {
                                        *(_BYTE *)(v60 + 96) = 0;
                                      }
                                      else
                                      {
                                        v151 = *v146;
                                        v152 = v146[1];
                                        v153 = v146[3];
                                        v145[2] = v146[2];
                                        v145[3] = v153;
                                        *v145 = v151;
                                        v145[1] = v152;
                                        *(_BYTE *)(v60 + 96) = 1;
                                      }
                                      goto LABEL_195;
                                    }
                                    while (2)
                                    {
                                      *(_OWORD *)(v67 - 15) = *(_OWORD *)(v109 - 120);
                                      v124 = *(_OWORD *)(v109 - 104);
                                      *(_QWORD *)(v109 - 104) = 0;
                                      *(_QWORD *)(v109 - 96) = 0;
                                      v125 = (std::__shared_weak_count *)*(v67 - 12);
                                      *(_OWORD *)(v67 - 13) = v124;
                                      if (!v125)
                                        goto LABEL_187;
                                      v126 = (unint64_t *)&v125->__shared_owners_;
                                      do
                                        v127 = __ldaxr(v126);
                                      while (__stlxr(v127 - 1, v126));
                                      if (!v127)
                                      {
                                        ((void (*)(std::__shared_weak_count *))v125->__on_zero_shared)(v125);
                                        std::__shared_weak_count::__release_weak(v125);
                                        v128 = v67 - 11;
                                        v129 = (__int128 *)(v109 - 88);
                                        v130 = *((unsigned __int8 *)v67 - 24);
                                        if (v130 == *(unsigned __int8 *)(v109 - 24))
                                          goto LABEL_188;
                                      }
                                      else
                                      {
LABEL_187:
                                        v128 = v67 - 11;
                                        v129 = (__int128 *)(v109 - 88);
                                        v130 = *((unsigned __int8 *)v67 - 24);
                                        if (v130 == *(unsigned __int8 *)(v109 - 24))
                                        {
LABEL_188:
                                          if (v130)
                                          {
                                            v131 = *v129;
                                            v132 = v129[1];
                                            v133 = v129[3];
                                            *((_OWORD *)v128 + 2) = v129[2];
                                            *((_OWORD *)v128 + 3) = v133;
                                            *(_OWORD *)v128 = v131;
                                            *((_OWORD *)v128 + 1) = v132;
                                          }
LABEL_182:
                                          v123 = *(_OWORD *)(v109 - 20);
                                          *((_BYTE *)v67 - 4) = *(_BYTE *)(v109 - 4);
                                          *(_OWORD *)((char *)v67 - 20) = v123;
                                          v67 -= 15;
                                          v109 -= 120;
                                          if (v109 == v60)
                                            goto LABEL_170;
                                          continue;
                                        }
                                      }
                                      break;
                                    }
                                    if (v130)
                                    {
                                      *((_BYTE *)v67 - 24) = 0;
                                    }
                                    else
                                    {
                                      v134 = *v129;
                                      v135 = v129[1];
                                      v136 = v129[3];
                                      *((_OWORD *)v128 + 2) = v129[2];
                                      *((_OWORD *)v128 + 3) = v136;
                                      *(_OWORD *)v128 = v134;
                                      *((_OWORD *)v128 + 1) = v135;
                                      *((_BYTE *)v67 - 24) = 1;
                                    }
                                    goto LABEL_182;
                                  }
                                }
LABEL_171:
                                v117 = (char *)__p;
                                if (__p)
                                {
                                  v118 = v178;
                                  v119 = __p;
                                  if (v178 != __p)
                                  {
                                    do
                                    {
                                      v120 = (std::__shared_weak_count *)*((_QWORD *)v118 - 12);
                                      if (v120)
                                      {
                                        v121 = (unint64_t *)&v120->__shared_owners_;
                                        do
                                          v122 = __ldaxr(v121);
                                        while (__stlxr(v122 - 1, v121));
                                        if (!v122)
                                        {
                                          ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
                                          std::__shared_weak_count::__release_weak(v120);
                                        }
                                      }
                                      v118 -= 120;
                                    }
                                    while (v118 != v117);
                                    v119 = __p;
                                  }
                                  v178 = v117;
                                  operator delete(v119);
                                }
                                v154 = v183;
                                if (v183)
                                {
                                  do
                                  {
                                    v155 = (_QWORD *)*v154;
                                    sub_22316F8F4(v154 + 4);
                                    operator delete(v154);
                                    v154 = v155;
                                  }
                                  while (v155);
                                }
                                v156 = (void *)v182[0];
                                v182[0] = 0;
                                v29 = v159;
                                if (v156)
                                  operator delete(v156);
                                v157 = (_QWORD *)v27[1];
                                if (v157)
                                {
                                  do
                                  {
                                    v158 = v157;
                                    v157 = (_QWORD *)*v157;
                                  }
                                  while (v157);
                                }
                                else
                                {
                                  do
                                  {
                                    v158 = (_QWORD *)v27[2];
                                    v26 = *v158 == (_QWORD)v27;
                                    v27 = v158;
                                  }
                                  while (!v26);
                                }
                                v27 = v158;
                                if (v158 == a10 + 1)
                                  return;
                                goto LABEL_27;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
LABEL_89:
        if (v37 >= v39)
          goto LABEL_92;
        v34 = (uint64_t *)v34[1];
        if (!v34)
          goto LABEL_222;
      }
      else
      {
LABEL_87:
        if (v38)
          goto LABEL_89;
LABEL_55:
        v34 = (uint64_t *)*v34;
        if (!v34)
          goto LABEL_222;
      }
    }
    v39 = *((unsigned __int8 *)v27 + 32);
    goto LABEL_87;
  }
  if (!(_BYTE)a15)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManagerUtils.cpp", 464, (uint64_t)"timestamp.has_value()", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      sub_2235151D4(a1);
      sub_22324A974();
    }
LABEL_228:
    abort();
  }
  v17 = a1 + 64;
  v16 = *(_QWORD *)(a1 + 64);
  if (!v16)
    goto LABEL_233;
  v18 = a1 + 64;
  do
  {
    v19 = *(_DWORD *)(v16 + 32);
    v20 = v19 < 0;
    if (v19 >= 0)
      v21 = (uint64_t *)v16;
    else
      v21 = (uint64_t *)(v16 + 8);
    if (!v20)
      v18 = v16;
    v16 = *v21;
  }
  while (*v21);
  if (v18 == v17 || *(int *)(v18 + 32) >= 1)
  {
LABEL_233:
    v22 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperBundleContainer.cpp", 144, (uint64_t)"iter != vol_bundle_store.end()", 30, (uint64_t)"Bundle not found.", 17, (void (*)(void **))sub_22457406C);
    v18 = v17;
    if (v22)
      goto LABEL_228;
  }
  (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t *, uint64_t))(**(_QWORD **)(*(_QWORD *)(v18 + 40) + 8)
                                                                           + 32))(v182, *(_QWORD *)(*(_QWORD *)(v18 + 40) + 8), &v184, a4);
  LOBYTE(v180[0]) = 0;
  v181 = 0;
  LOBYTE(v189) = 0;
  v190 = 0;
  sub_22352C318(a9, (uint64_t)v182, a7, a6, a5, 0, v180, &v189);
  v23 = v183;
  if (v183)
  {
    do
    {
      v24 = (_QWORD *)*v23;
      sub_22316F8F4(v23 + 4);
      operator delete(v23);
      v23 = v24;
    }
    while (v24);
  }
  v25 = (void *)v182[0];
  v182[0] = 0;
  if (v25)
    operator delete(v25);
}

void sub_223530C40(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223530D14(v1 - 216);
  _Unwind_Resume(a1);
}

void sub_223530C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45)
{
  uint64_t v45;

  sub_223295868(&a45);
  sub_223530D14(v45 - 216);
  sub_223295868(a18);
  _Unwind_Resume(a1);
}

void sub_223530C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  sub_223295868(a18);
  _Unwind_Resume(a1);
}

void sub_223530C94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  sub_223295868(a18);
  _Unwind_Resume(a1);
}

void sub_223530CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  sub_223295868(a18);
  _Unwind_Resume(a1);
}

void sub_223530CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  sub_223295868(a18);
  _Unwind_Resume(a1);
}

void sub_223530CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  uint64_t v18;

  sub_223530D14(v18 - 216);
  sub_223295868(a18);
  _Unwind_Resume(a1);
}

void sub_223530CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  sub_223295868(a18);
  _Unwind_Resume(a1);
}

void sub_223530D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  sub_223295868(a18);
  _Unwind_Resume(a1);
}

uint64_t sub_223530D14(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      sub_22316F8F4(v2 + 4);
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

void sub_223530D70(unsigned __int8 **a1@<X0>, int64x2_t *a2@<X1>, int64x2_t *a3@<X8>)
{
  __int128 *v6;
  __int128 *v7;
  int64x2_t v8;
  unsigned __int8 *v9;
  char *v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  __int128 v14;
  char *v15;
  uint64_t *v16;
  uint64_t **v17;
  uint64_t *v18;
  uint64_t **v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  BOOL v23;
  char *v24;
  char *v25;
  unsigned __int8 *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char *v49;
  char *v50;
  __int128 v51;
  char *v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char *v61;
  std::__shared_weak_count *v62;
  unint64_t *p_shared_owners;
  unint64_t v64;
  uint64_t **v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 *v69;
  __int128 v70;
  uint64_t v71;

  v71 = *MEMORY[0x24BDAC8D0];
  v6 = (__int128 *)a2->i64[0];
  v7 = (__int128 *)a2->i64[1];
  v66 = 0;
  v67 = 0;
  v65 = &v66;
  if (v6 == v7)
  {
    v8 = vdupq_n_s64((unint64_t)v6);
  }
  else
  {
    do
    {
      v70 = *v6;
      v9 = sub_223426D4C(&v65, (uint64_t *)&v66, &v69, &v68, (unsigned __int8 *)&v70);
      if (!*(_QWORD *)v9)
      {
        v10 = (char *)operator new(0x30uLL);
        *(_OWORD *)(v10 + 25) = v70;
        v11 = v69;
        *(_QWORD *)v10 = 0;
        *((_QWORD *)v10 + 1) = 0;
        *((_QWORD *)v10 + 2) = v11;
        *(_QWORD *)v9 = v10;
        if (*v65)
        {
          v65 = (uint64_t **)*v65;
          v10 = *(char **)v9;
        }
        sub_2231A9A8C(v66, (uint64_t *)v10);
        ++v67;
      }
      v6 = (__int128 *)((char *)v6 + 120);
    }
    while (v6 != v7);
    v8 = *a2;
  }
  *a3 = v8;
  a3[1].i64[0] = a2[1].i64[0];
  a2->i64[0] = 0;
  a2->i64[1] = 0;
  a2[1].i64[0] = 0;
  v12 = *a1;
  v13 = a1[1];
  if (*a1 != v13)
  {
    while (1)
    {
      v16 = v66;
      if (v66)
      {
        v17 = &v66;
        do
        {
          v18 = v16;
          v19 = v17;
          v20 = *((unsigned __int8 *)v16 + 25);
          v21 = *v12;
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 26);
          v21 = v12[1];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 27);
          v21 = v12[2];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 28);
          v21 = v12[3];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 29);
          v21 = v12[4];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 30);
          v21 = v12[5];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 31);
          v21 = v12[6];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 32);
          v21 = v12[7];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 33);
          v21 = v12[8];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 34);
          v21 = v12[9];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 35);
          v21 = v12[10];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 36);
          v21 = v12[11];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 37);
          v21 = v12[12];
          if (v20 != v21)
            goto LABEL_33;
          v20 = *((unsigned __int8 *)v16 + 38);
          v21 = v12[13];
          if (v20 == v21
            && (v20 = *((unsigned __int8 *)v16 + 39), v21 = v12[14], v20 == v21)
            && (v20 = *((unsigned __int8 *)v16 + 40), v21 = v12[15], v20 == v21))
          {
            v22 = 0;
            v17 = (uint64_t **)v16;
          }
          else
          {
LABEL_33:
            v23 = v20 >= v21;
            if (v20 >= v21)
            {
              v22 = 0;
            }
            else
            {
              ++v16;
              v22 = 1;
            }
            if (v23)
              v17 = (uint64_t **)v18;
            else
              v17 = v19;
          }
          v16 = (uint64_t *)*v16;
        }
        while (v16);
        if (v17 != &v66)
        {
          v24 = (char *)v18 + 25;
          v25 = (char *)v19 + 25;
          v26 = (unsigned __int8 *)(v22 ? v25 : v24);
          if (((char)sub_22319835C(v12, v26) & 0x80000000) == 0)
            goto LABEL_13;
        }
      }
      v27 = a3->u64[1];
      v28 = a3[1].u64[0];
      if (v27 < v28)
      {
        *(_OWORD *)v27 = *(_OWORD *)v12;
        *(_QWORD *)(v27 + 16) = *((_QWORD *)v12 + 2);
        v29 = *((_QWORD *)v12 + 3);
        *(_QWORD *)(v27 + 24) = v29;
        if (v29)
        {
          v30 = (unint64_t *)(v29 + 8);
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
        }
        *(_BYTE *)(v27 + 32) = 0;
        *(_BYTE *)(v27 + 96) = 0;
        if (v12[96])
        {
          v32 = *((_OWORD *)v12 + 2);
          v33 = *((_OWORD *)v12 + 3);
          v34 = *((_OWORD *)v12 + 5);
          *(_OWORD *)(v27 + 64) = *((_OWORD *)v12 + 4);
          *(_OWORD *)(v27 + 80) = v34;
          *(_OWORD *)(v27 + 32) = v32;
          *(_OWORD *)(v27 + 48) = v33;
          *(_BYTE *)(v27 + 96) = 1;
        }
        v14 = *(_OWORD *)(v12 + 100);
        *(_BYTE *)(v27 + 116) = v12[116];
        *(_OWORD *)(v27 + 100) = v14;
        v15 = (char *)(v27 + 120);
        goto LABEL_12;
      }
      v35 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v27 - a3->i64[0]) >> 3);
      v36 = v35 + 1;
      if (v35 + 1 > 0x222222222222222)
        sub_22316E078();
      v37 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v28 - a3->i64[0]) >> 3);
      if (2 * v37 > v36)
        v36 = 2 * v37;
      v38 = v37 >= 0x111111111111111 ? 0x222222222222222 : v36;
      if (v38)
      {
        if (v38 > 0x222222222222222)
          sub_223174E94();
        v39 = (char *)operator new(120 * v38);
      }
      else
      {
        v39 = 0;
      }
      v40 = &v39[120 * v35];
      *(_OWORD *)v40 = *(_OWORD *)v12;
      *((_QWORD *)v40 + 2) = *((_QWORD *)v12 + 2);
      v41 = *((_QWORD *)v12 + 3);
      *((_QWORD *)v40 + 3) = v41;
      if (v41)
      {
        v42 = (unint64_t *)(v41 + 8);
        do
          v43 = __ldxr(v42);
        while (__stxr(v43 + 1, v42));
      }
      v44 = &v39[120 * v35];
      v44[32] = 0;
      v45 = v44 + 32;
      v45[64] = 0;
      if (v12[96])
      {
        v46 = *((_OWORD *)v12 + 2);
        v47 = *((_OWORD *)v12 + 3);
        v48 = *((_OWORD *)v12 + 5);
        *((_OWORD *)v45 + 2) = *((_OWORD *)v12 + 4);
        *((_OWORD *)v45 + 3) = v48;
        *(_OWORD *)v45 = v46;
        *((_OWORD *)v45 + 1) = v47;
        v45[64] = 1;
      }
      v49 = &v39[120 * v38];
      v50 = &v39[120 * v35];
      v51 = *(_OWORD *)(v12 + 100);
      v50[116] = v12[116];
      *(_OWORD *)(v50 + 100) = v51;
      v15 = v40 + 120;
      v52 = (char *)a3->i64[0];
      v53 = (char *)a3->i64[1];
      if (v53 != (char *)a3->i64[0])
        break;
      a3->i64[0] = (uint64_t)v40;
      a3->i64[1] = (uint64_t)v15;
      a3[1].i64[0] = (uint64_t)v49;
      if (v53)
        goto LABEL_82;
LABEL_12:
      a3->i64[1] = (uint64_t)v15;
LABEL_13:
      v12 += 120;
      if (v12 == v13)
        goto LABEL_83;
    }
    v54 = 0;
    do
    {
      v56 = &v40[v54];
      v57 = &v53[v54];
      *(_OWORD *)(v56 - 120) = *(_OWORD *)&v53[v54 - 120];
      *(_OWORD *)(v56 - 104) = *(_OWORD *)&v53[v54 - 104];
      *((_QWORD *)v57 - 13) = 0;
      *((_QWORD *)v57 - 12) = 0;
      v40[v54 - 88] = 0;
      *(v56 - 24) = 0;
      if (v53[v54 - 24])
      {
        v58 = *(_OWORD *)(v57 - 88);
        v59 = *(_OWORD *)(v57 - 72);
        v60 = *(_OWORD *)(v57 - 40);
        *(_OWORD *)&v40[v54 - 56] = *(_OWORD *)(v57 - 56);
        *(_OWORD *)&v40[v54 - 40] = v60;
        *(_OWORD *)&v40[v54 - 88] = v58;
        *(_OWORD *)&v40[v54 - 72] = v59;
        *(v56 - 24) = 1;
      }
      v55 = *(_OWORD *)(v57 - 20);
      *(v56 - 4) = *(v57 - 4);
      *(_OWORD *)(v56 - 20) = v55;
      v54 -= 120;
    }
    while (&v53[v54] != v52);
    v53 = (char *)a3->i64[0];
    v61 = (char *)a3->i64[1];
    a3->i64[0] = (uint64_t)&v40[v54];
    a3->i64[1] = (uint64_t)v15;
    a3[1].i64[0] = (uint64_t)v49;
    while (v61 != v53)
    {
      v62 = (std::__shared_weak_count *)*((_QWORD *)v61 - 12);
      if (v62)
      {
        p_shared_owners = (unint64_t *)&v62->__shared_owners_;
        do
          v64 = __ldaxr(p_shared_owners);
        while (__stlxr(v64 - 1, p_shared_owners));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
          std::__shared_weak_count::__release_weak(v62);
        }
      }
      v61 -= 120;
    }
    if (!v53)
      goto LABEL_12;
LABEL_82:
    operator delete(v53);
    goto LABEL_12;
  }
LABEL_83:
  sub_223198030((uint64_t)&v65, v66);
}

void sub_2235312DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, _QWORD *a11)
{
  void **v11;

  sub_223295868(v11);
  sub_223198030((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void sub_223531300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, _QWORD *a11)
{
  sub_223198030((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void sub_223531318(int *a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  std::mutex *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::string::size_type size;
  std::string *p_p;
  std::string::size_type v11;
  std::string::size_type v12;
  int v13;
  __n128 *v16;
  std::string *v17;
  size_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  std::mutex *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::string::size_type v29;
  std::string *v30;
  std::string::size_type v31;
  std::string::size_type v32;
  int v33;
  __n128 *v36;
  std::string *v37;
  size_t v38;
  uint64_t v39;
  void *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  std::mutex *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  std::string::size_type v48;
  std::string *v49;
  std::string::size_type v50;
  std::string::size_type v51;
  int v52;
  __n128 *v55;
  std::string *v56;
  size_t v57;
  void *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  std::mutex *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  std::string::size_type v67;
  std::string *v68;
  std::string::size_type v69;
  std::string::size_type v70;
  int v71;
  __n128 *v74;
  std::string *v75;
  size_t v76;
  uint64_t v77;
  void *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  std::mutex *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  std::string::size_type v87;
  std::string *v88;
  std::string::size_type v89;
  std::string::size_type v90;
  int v91;
  __n128 *v94;
  std::string *v95;
  size_t v96;
  char *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  std::mutex *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  std::string::size_type v105;
  std::string *v106;
  std::string::size_type v107;
  std::string::size_type v108;
  int v109;
  __n128 *v112;
  std::string *v113;
  size_t v114;
  std::string::size_type v115;
  std::string *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  std::mutex *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  std::string::size_type v125;
  std::string *v126;
  std::string::size_type v127;
  std::string::size_type v128;
  int v129;
  __n128 *v132;
  std::string *v133;
  size_t v134;
  std::string::size_type v135;
  std::string *v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  std::mutex *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  std::string::size_type v145;
  std::string *v146;
  std::string::size_type v147;
  std::string::size_type v148;
  int v149;
  __n128 *v152;
  std::string *v153;
  size_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  int v158;
  int v159;
  std::string v160;
  std::string v161;
  void *v162;
  __int128 v163;
  void *v164;
  __int128 v165;
  __int128 v166;
  std::string __p;
  __int128 v168;
  __int128 v169;
  int v170;
  uint64_t v171;

  v171 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v168 = "cv3d.recon.";
  *((_QWORD *)&v168 + 1) = 11;
  *(_QWORD *)&v169 = "Stats.Volumetric.Recycling";
  *((_QWORD *)&v169 + 1) = 26;
  sub_2231A9820((uint64_t)&v168, (uint64_t)&v170, 0, 0, &__p);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v2 = sub_2241471F8();
    v3 = v2[2];
    if (!v3)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v3 = v2[2];
    }
    v4 = *(_QWORD *)(v3 + 64);
    v5 = (std::mutex *)(v4 + 32);
    std::mutex::lock((std::mutex *)(v4 + 32));
    v7 = *(_QWORD *)(v4 + 96);
    v6 = *(_QWORD *)(v4 + 104);
    std::mutex::unlock(v5);
    if (v7 != v6)
    {
      sub_2241471F8();
      v8 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8))
      {
        v168 = 0u;
        v169 = 0u;
        v170 = 728325608;
        kdebug_trace();
        sub_223532D10((double *)&qword_255788F20, v8, a1, "#chunks");
        kdebug_trace();
      }
    }
  }
  v168 = 0u;
  v169 = 0u;
  v170 = 728325624;
  kdebug_trace();
  size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __p.__r_.__value_.__l.__size_;
  if (size >= 0x11)
  {
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    v11 = p_p->__r_.__value_.__r.__words[0];
    v12 = p_p->__r_.__value_.__l.__size_;
    v13 = p_p->__r_.__value_.__s.__data_[16];
    if (v11 == 0x6365722E64337663 && v12 == 0x73746174532E6E6FLL && v13 == 46)
    {
      v16 = sub_223187510();
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v17 = &__p;
      else
        v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v18 = __p.__r_.__value_.__l.__size_;
      sub_223532E4C(v16, v17, v18, (unsigned int *)a1, (uint64_t)"#chunks", 7);
    }
  }
  kdebug_trace();
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v168 = 0u;
  v169 = 0u;
  v170 = 728325632;
  kdebug_trace();
  mach_absolute_time();
  v19 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v19 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info((mach_timebase_info_t)&__p);
    LODWORD(v156) = HIDWORD(__p.__r_.__value_.__r.__words[0]);
    LODWORD(v155) = __p.__r_.__value_.__l.__data_;
    *(double *)&qword_255795558 = (double)v155 / (double)v156;
    __cxa_guard_release(&qword_255795560);
  }
  v20 = *a1;
  v21 = atomic_load((unsigned __int8 *)&qword_25578DF68);
  if ((v21 & 1) == 0)
  {
    v157 = *a1;
    v158 = __cxa_guard_acquire(&qword_25578DF68);
    v20 = v157;
    if (v158)
    {
      qword_25578BBC8 = (uint64_t)&off_24EC37778;
      sub_223476B20((uint64_t)&qword_25578BBD0);
      __cxa_atexit((void (*)(void *))sub_223FDB180, &qword_25578BBC8, &dword_22314D000);
      __cxa_guard_release(&qword_25578DF68);
      v20 = v157;
    }
  }
  sub_223534ACC((uint64_t)&qword_25578BBD0, v20);
  kdebug_trace();
  v164 = operator new(0x20uLL);
  v165 = xmmword_2245C6440;
  strcpy((char *)v164, "Stats.Volumetric.Integration");
  *(_QWORD *)&v168 = "cv3d.recon.";
  *((_QWORD *)&v168 + 1) = 11;
  *(_QWORD *)&v169 = v164;
  *((_QWORD *)&v169 + 1) = 28;
  sub_2231A9820((uint64_t)&v168, (uint64_t)&v170, 0, 0, &__p);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v22 = sub_2241471F8();
    v23 = v22[2];
    if (!v23)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v23 = v22[2];
    }
    v24 = *(_QWORD *)(v23 + 64);
    v25 = (std::mutex *)(v24 + 32);
    std::mutex::lock((std::mutex *)(v24 + 32));
    v27 = *(_QWORD *)(v24 + 96);
    v26 = *(_QWORD *)(v24 + 104);
    std::mutex::unlock(v25);
    if (v27 != v26)
    {
      sub_2241471F8();
      v28 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v28 + 24))(v28))
      {
        v168 = 0u;
        v169 = 0u;
        v170 = 728325608;
        kdebug_trace();
        sub_223532FE0((double *)&qword_255788F20, v28, a1 + 1, "valid range voxel");
        kdebug_trace();
      }
    }
  }
  v168 = 0u;
  v169 = 0u;
  v170 = 728325624;
  kdebug_trace();
  v29 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v29 = __p.__r_.__value_.__l.__size_;
  if (v29 >= 0x11)
  {
    v30 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v30 = (std::string *)__p.__r_.__value_.__r.__words[0];
    v31 = v30->__r_.__value_.__r.__words[0];
    v32 = v30->__r_.__value_.__l.__size_;
    v33 = v30->__r_.__value_.__s.__data_[16];
    if (v31 == 0x6365722E64337663 && v32 == 0x73746174532E6E6FLL && v33 == 46)
    {
      v36 = sub_223187510();
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v37 = &__p;
      else
        v37 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v38 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v38 = __p.__r_.__value_.__l.__size_;
      sub_223532E4C(v36, v37, v38, (unsigned int *)a1 + 1, (uint64_t)"valid range voxel", 17);
    }
  }
  kdebug_trace();
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_QWORD *)&v168 = "cv3d.recon.";
  *((_QWORD *)&v168 + 1) = 11;
  v39 = HIBYTE(v165);
  v40 = &v164;
  if (v165 < 0)
  {
    v40 = v164;
    v39 = v165;
  }
  *(_QWORD *)&v169 = v40;
  *((_QWORD *)&v169 + 1) = v39;
  sub_2231A9820((uint64_t)&v168, (uint64_t)&v170, 0, 0, &__p);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v41 = sub_2241471F8();
    v42 = v41[2];
    if (!v42)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v42 = v41[2];
    }
    v43 = *(_QWORD *)(v42 + 64);
    v44 = (std::mutex *)(v43 + 32);
    std::mutex::lock((std::mutex *)(v43 + 32));
    v46 = *(_QWORD *)(v43 + 96);
    v45 = *(_QWORD *)(v43 + 104);
    std::mutex::unlock(v44);
    if (v46 != v45)
    {
      sub_2241471F8();
      v47 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v47 + 24))(v47))
      {
        v168 = 0u;
        v169 = 0u;
        v170 = 728325608;
        kdebug_trace();
        sub_22353311C((double *)&qword_255788F20, v47, a1 + 2, "integratable voxel");
        kdebug_trace();
      }
    }
  }
  v168 = 0u;
  v169 = 0u;
  v170 = 728325624;
  kdebug_trace();
  v48 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v48 = __p.__r_.__value_.__l.__size_;
  if (v48 >= 0x11)
  {
    v49 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v49 = (std::string *)__p.__r_.__value_.__r.__words[0];
    v50 = v49->__r_.__value_.__r.__words[0];
    v51 = v49->__r_.__value_.__l.__size_;
    v52 = v49->__r_.__value_.__s.__data_[16];
    if (v50 == 0x6365722E64337663 && v51 == 0x73746174532E6E6FLL && v52 == 46)
    {
      v55 = sub_223187510();
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v56 = &__p;
      else
        v56 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v57 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v57 = __p.__r_.__value_.__l.__size_;
      sub_223532E4C(v55, v56, v57, (unsigned int *)a1 + 2, (uint64_t)"integratable voxel", 18);
    }
  }
  kdebug_trace();
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v58 = operator new(0x20uLL);
  v162 = v58;
  v163 = xmmword_2245C6420;
  strcpy((char *)v58, "Stats.Volumetric.Meshing(make)");
  *(_QWORD *)&v168 = "cv3d.recon.";
  *((_QWORD *)&v168 + 1) = 11;
  *(_QWORD *)&v169 = v58;
  *((_QWORD *)&v169 + 1) = 30;
  sub_2231A9820((uint64_t)&v168, (uint64_t)&v170, 0, 0, &v161);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v59 = sub_2241471F8();
    v60 = v59[2];
    if (!v60)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v60 = v59[2];
    }
    v61 = *(_QWORD *)(v60 + 64);
    v62 = (std::mutex *)(v61 + 32);
    std::mutex::lock((std::mutex *)(v61 + 32));
    v64 = *(_QWORD *)(v61 + 96);
    v63 = *(_QWORD *)(v61 + 104);
    std::mutex::unlock(v62);
    if (v64 != v63)
    {
      sub_2241471F8();
      v65 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v65 + 24))(v65))
      {
        v168 = 0u;
        v169 = 0u;
        v170 = 728325608;
        kdebug_trace();
        LODWORD(v166) = 10 * a1[3];
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v65 + 24))(v65))
        {
          *((_BYTE *)&__p.__r_.__value_.__s + 23) = 20;
          strcpy((char *)&__p, "single res block x10");
          v160.__r_.__value_.__r.__words[0] = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          v160.__r_.__value_.__l.__size_ = 2;
          v66 = sub_2241471F8();
          sub_2235352BC((uint64_t)v66, v65, (int *)&v166, (uint64_t)&__p, (__int128 *)&v160);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
        kdebug_trace();
      }
    }
  }
  v168 = 0u;
  v169 = 0u;
  v170 = 728325624;
  kdebug_trace();
  v67 = HIBYTE(v161.__r_.__value_.__r.__words[2]);
  if ((v161.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v67 = v161.__r_.__value_.__l.__size_;
  if (v67 >= 0x11)
  {
    v68 = &v161;
    if ((v161.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v68 = (std::string *)v161.__r_.__value_.__r.__words[0];
    v69 = v68->__r_.__value_.__r.__words[0];
    v70 = v68->__r_.__value_.__l.__size_;
    v71 = v68->__r_.__value_.__s.__data_[16];
    if (v69 == 0x6365722E64337663 && v70 == 0x73746174532E6E6FLL && v71 == 46)
    {
      v74 = sub_223187510();
      if ((v161.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v75 = &v161;
      else
        v75 = (std::string *)v161.__r_.__value_.__r.__words[0];
      if ((v161.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v76 = HIBYTE(v161.__r_.__value_.__r.__words[2]);
      else
        v76 = v161.__r_.__value_.__l.__size_;
      LODWORD(__p.__r_.__value_.__l.__data_) = 10 * a1[3];
      sub_223532E4C(v74, v75, v76, (unsigned int *)&__p, (uint64_t)"single res block x10", 20);
    }
  }
  kdebug_trace();
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v161.__r_.__value_.__l.__data_);
  *(_QWORD *)&v168 = "cv3d.recon.";
  *((_QWORD *)&v168 + 1) = 11;
  v77 = HIBYTE(v163);
  v78 = &v162;
  if (v163 < 0)
  {
    v78 = v162;
    v77 = v163;
  }
  *(_QWORD *)&v169 = v78;
  *((_QWORD *)&v169 + 1) = v77;
  sub_2231A9820((uint64_t)&v168, (uint64_t)&v170, 0, 0, &v161);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v79 = sub_2241471F8();
    v80 = v79[2];
    if (!v80)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v80 = v79[2];
    }
    v81 = *(_QWORD *)(v80 + 64);
    v82 = (std::mutex *)(v81 + 32);
    std::mutex::lock((std::mutex *)(v81 + 32));
    v84 = *(_QWORD *)(v81 + 96);
    v83 = *(_QWORD *)(v81 + 104);
    std::mutex::unlock(v82);
    if (v84 != v83)
    {
      sub_2241471F8();
      v85 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v85 + 24))(v85))
      {
        v168 = 0u;
        v169 = 0u;
        v170 = 728325608;
        kdebug_trace();
        LODWORD(v166) = 10 * a1[4];
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v85 + 24))(v85))
        {
          *((_BYTE *)&__p.__r_.__value_.__s + 23) = 19;
          strcpy((char *)&__p, "multi res block x10");
          v160.__r_.__value_.__r.__words[0] = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          v160.__r_.__value_.__l.__size_ = 2;
          v86 = sub_2241471F8();
          sub_2235352BC((uint64_t)v86, v85, (int *)&v166, (uint64_t)&__p, (__int128 *)&v160);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
        kdebug_trace();
      }
    }
  }
  v168 = 0u;
  v169 = 0u;
  v170 = 728325624;
  kdebug_trace();
  v87 = HIBYTE(v161.__r_.__value_.__r.__words[2]);
  if ((v161.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v87 = v161.__r_.__value_.__l.__size_;
  if (v87 >= 0x11)
  {
    v88 = &v161;
    if ((v161.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v88 = (std::string *)v161.__r_.__value_.__r.__words[0];
    v89 = v88->__r_.__value_.__r.__words[0];
    v90 = v88->__r_.__value_.__l.__size_;
    v91 = v88->__r_.__value_.__s.__data_[16];
    if (v89 == 0x6365722E64337663 && v90 == 0x73746174532E6E6FLL && v91 == 46)
    {
      v94 = sub_223187510();
      if ((v161.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v95 = &v161;
      else
        v95 = (std::string *)v161.__r_.__value_.__r.__words[0];
      if ((v161.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v96 = HIBYTE(v161.__r_.__value_.__r.__words[2]);
      else
        v96 = v161.__r_.__value_.__l.__size_;
      LODWORD(__p.__r_.__value_.__l.__data_) = 10 * a1[4];
      sub_223532E4C(v94, v95, v96, (unsigned int *)&__p, (uint64_t)"multi res block x10", 19);
    }
  }
  kdebug_trace();
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v161.__r_.__value_.__l.__data_);
  v97 = (char *)operator new(0x20uLL);
  v161.__r_.__value_.__r.__words[0] = (std::string::size_type)v97;
  *(_OWORD *)&v161.__r_.__value_.__r.__words[1] = xmmword_2245B8EA0;
  strcpy(v97, "Stats.Volumetric.Meshing(merge)");
  *(_QWORD *)&v168 = "cv3d.recon.";
  *((_QWORD *)&v168 + 1) = 11;
  *(_QWORD *)&v169 = v97;
  *((_QWORD *)&v169 + 1) = 31;
  sub_2231A9820((uint64_t)&v168, (uint64_t)&v170, 0, 0, &__p);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v98 = sub_2241471F8();
    v99 = v98[2];
    if (!v99)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v99 = v98[2];
    }
    v100 = *(_QWORD *)(v99 + 64);
    v101 = (std::mutex *)(v100 + 32);
    std::mutex::lock((std::mutex *)(v100 + 32));
    v103 = *(_QWORD *)(v100 + 96);
    v102 = *(_QWORD *)(v100 + 104);
    std::mutex::unlock(v101);
    if (v103 != v102)
    {
      sub_2241471F8();
      v104 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v104 + 24))(v104))
      {
        v168 = 0u;
        v169 = 0u;
        v170 = 728325608;
        kdebug_trace();
        sub_223533258((double *)&qword_255788F20, v104, a1 + 6, "total vertices");
        kdebug_trace();
      }
    }
  }
  v168 = 0u;
  v169 = 0u;
  v170 = 728325624;
  kdebug_trace();
  v105 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v105 = __p.__r_.__value_.__l.__size_;
  if (v105 >= 0x11)
  {
    v106 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v106 = (std::string *)__p.__r_.__value_.__r.__words[0];
    v107 = v106->__r_.__value_.__r.__words[0];
    v108 = v106->__r_.__value_.__l.__size_;
    v109 = v106->__r_.__value_.__s.__data_[16];
    if (v107 == 0x6365722E64337663 && v108 == 0x73746174532E6E6FLL && v109 == 46)
    {
      v112 = sub_223187510();
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v113 = &__p;
      else
        v113 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v114 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v114 = __p.__r_.__value_.__l.__size_;
      sub_223532E4C(v112, v113, v114, (unsigned int *)a1 + 6, (uint64_t)"total vertices", 14);
    }
  }
  kdebug_trace();
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_QWORD *)&v168 = "cv3d.recon.";
  *((_QWORD *)&v168 + 1) = 11;
  v115 = HIBYTE(v161.__r_.__value_.__r.__words[2]);
  v116 = &v161;
  if ((v161.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    v115 = v161.__r_.__value_.__l.__size_;
    v116 = (std::string *)v161.__r_.__value_.__r.__words[0];
  }
  *(_QWORD *)&v169 = v116;
  *((_QWORD *)&v169 + 1) = v115;
  sub_2231A9820((uint64_t)&v168, (uint64_t)&v170, 0, 0, &v160);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v117 = sub_2241471F8();
    v118 = v117[2];
    if (!v118)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v118 = v117[2];
    }
    v119 = *(_QWORD *)(v118 + 64);
    v120 = (std::mutex *)(v119 + 32);
    std::mutex::lock((std::mutex *)(v119 + 32));
    v122 = *(_QWORD *)(v119 + 96);
    v121 = *(_QWORD *)(v119 + 104);
    std::mutex::unlock(v120);
    if (v122 != v121)
    {
      sub_2241471F8();
      v123 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v123 + 24))(v123))
      {
        v168 = 0u;
        v169 = 0u;
        v170 = 728325608;
        kdebug_trace();
        v159 = 10 * a1[7];
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v123 + 24))(v123))
        {
          *((_BYTE *)&__p.__r_.__value_.__s + 23) = 16;
          strcpy((char *)&__p, "dup vertices x10");
          *(_QWORD *)&v166 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&v166 + 1) = 2;
          v124 = sub_2241471F8();
          sub_2235352BC((uint64_t)v124, v123, &v159, (uint64_t)&__p, &v166);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
        kdebug_trace();
      }
    }
  }
  v168 = 0u;
  v169 = 0u;
  v170 = 728325624;
  kdebug_trace();
  v125 = HIBYTE(v160.__r_.__value_.__r.__words[2]);
  if ((v160.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v125 = v160.__r_.__value_.__l.__size_;
  if (v125 >= 0x11)
  {
    v126 = &v160;
    if ((v160.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v126 = (std::string *)v160.__r_.__value_.__r.__words[0];
    v127 = v126->__r_.__value_.__r.__words[0];
    v128 = v126->__r_.__value_.__l.__size_;
    v129 = v126->__r_.__value_.__s.__data_[16];
    if (v127 == 0x6365722E64337663 && v128 == 0x73746174532E6E6FLL && v129 == 46)
    {
      v132 = sub_223187510();
      if ((v160.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v133 = &v160;
      else
        v133 = (std::string *)v160.__r_.__value_.__r.__words[0];
      if ((v160.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v134 = HIBYTE(v160.__r_.__value_.__r.__words[2]);
      else
        v134 = v160.__r_.__value_.__l.__size_;
      LODWORD(__p.__r_.__value_.__l.__data_) = 10 * a1[7];
      sub_223532E4C(v132, v133, v134, (unsigned int *)&__p, (uint64_t)"dup vertices x10", 16);
    }
  }
  kdebug_trace();
  if (SHIBYTE(v160.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v160.__r_.__value_.__l.__data_);
  *(_QWORD *)&v168 = "cv3d.recon.";
  *((_QWORD *)&v168 + 1) = 11;
  v135 = HIBYTE(v161.__r_.__value_.__r.__words[2]);
  v136 = &v161;
  if ((v161.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    v135 = v161.__r_.__value_.__l.__size_;
    v136 = (std::string *)v161.__r_.__value_.__r.__words[0];
  }
  *(_QWORD *)&v169 = v136;
  *((_QWORD *)&v169 + 1) = v135;
  sub_2231A9820((uint64_t)&v168, (uint64_t)&v170, 0, 0, &v160);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v137 = sub_2241471F8();
    v138 = v137[2];
    if (!v138)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v138 = v137[2];
    }
    v139 = *(_QWORD *)(v138 + 64);
    v140 = (std::mutex *)(v139 + 32);
    std::mutex::lock((std::mutex *)(v139 + 32));
    v142 = *(_QWORD *)(v139 + 96);
    v141 = *(_QWORD *)(v139 + 104);
    std::mutex::unlock(v140);
    if (v142 != v141)
    {
      sub_2241471F8();
      v143 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v143 + 24))(v143))
      {
        v168 = 0u;
        v169 = 0u;
        v170 = 728325608;
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v143 + 24))(v143))
        {
          *((_BYTE *)&__p.__r_.__value_.__s + 23) = 11;
          *(_QWORD *)&v166 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&v166 + 1) = 2;
          strcpy((char *)&__p, "total faces");
          v144 = sub_2241471F8();
          sub_2235347B4((uint64_t)v144, v143, a1 + 5, (uint64_t)&__p, &v166);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
        kdebug_trace();
      }
    }
  }
  v168 = 0u;
  v169 = 0u;
  v170 = 728325624;
  kdebug_trace();
  v145 = HIBYTE(v160.__r_.__value_.__r.__words[2]);
  if ((v160.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v145 = v160.__r_.__value_.__l.__size_;
  if (v145 >= 0x11)
  {
    v146 = &v160;
    if ((v160.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v146 = (std::string *)v160.__r_.__value_.__r.__words[0];
    v147 = v146->__r_.__value_.__r.__words[0];
    v148 = v146->__r_.__value_.__l.__size_;
    v149 = v146->__r_.__value_.__s.__data_[16];
    if (v147 == 0x6365722E64337663 && v148 == 0x73746174532E6E6FLL && v149 == 46)
    {
      v152 = sub_223187510();
      if ((v160.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v153 = &v160;
      else
        v153 = (std::string *)v160.__r_.__value_.__r.__words[0];
      if ((v160.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v154 = HIBYTE(v160.__r_.__value_.__r.__words[2]);
      else
        v154 = v160.__r_.__value_.__l.__size_;
      sub_223532E4C(v152, v153, v154, (unsigned int *)a1 + 5, (uint64_t)"total faces", 11);
    }
  }
  kdebug_trace();
  if (SHIBYTE(v160.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v160.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v161.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_255:
      if ((SHIBYTE(v163) & 0x80000000) == 0)
        goto LABEL_256;
      goto LABEL_260;
    }
  }
  else if ((SHIBYTE(v161.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_255;
  }
  operator delete(v161.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v163) & 0x80000000) == 0)
  {
LABEL_256:
    if ((SHIBYTE(v165) & 0x80000000) == 0)
      return;
LABEL_261:
    operator delete(v164);
    return;
  }
LABEL_260:
  operator delete(v162);
  if (SHIBYTE(v165) < 0)
    goto LABEL_261;
}

void sub_223532A50(_Unwind_Exception *a1)
{
  uint64_t v1;

  __cxa_guard_abort(&qword_25578DF68);
  sub_2231874DC(v1 - 144);
  _Unwind_Resume(a1);
}

void sub_223532A70(_Unwind_Exception *a1)
{
  uint64_t v1;

  __cxa_guard_abort(&qword_255795560);
  sub_2231874DC(v1 - 144);
  _Unwind_Resume(a1);
}

void sub_223532A90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_223532D10(double *a1, uint64_t a2, int *a3, const char *a4)
{
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v14;
  void *__dst[2];
  unint64_t v16;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v8 = strlen(a4);
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v9 = (void *)v8;
    if (v8 >= 0x17)
    {
      v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17)
        v11 = v8 | 7;
      v12 = v11 + 1;
      v10 = (void **)operator new(v11 + 1);
      __dst[1] = v9;
      v16 = v12 | 0x8000000000000000;
      __dst[0] = v10;
    }
    else
    {
      HIBYTE(v16) = v8;
      v10 = __dst;
      if (!v8)
      {
LABEL_10:
        *((_BYTE *)v9 + (_QWORD)v10) = 0;
        *(_QWORD *)&v14 = (uint64_t)(*a1 * 1000000000.0);
        *((_QWORD *)&v14 + 1) = 2;
        v13 = sub_2241471F8();
        sub_2235347B4((uint64_t)v13, a2, a3, (uint64_t)__dst, &v14);
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        return;
      }
    }
    memcpy(v10, a4, (size_t)v9);
    goto LABEL_10;
  }
}

void sub_223532E30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_223532E4C(_QWORD *a1, void *a2, size_t a3, unsigned int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  size_t v10;
  __int128 v11;
  std::string *p_p;
  size_t v13;
  uint64_t v14;
  std::mutex *v15;
  std::string __p;
  _QWORD v17[6];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if (a6)
  {
    v9 = *a1;
    v17[0] = a2;
    v17[1] = a3;
    v17[2] = ".";
    v17[3] = 1;
    v17[4] = a5;
    v17[5] = a6;
    sub_2231A9820((uint64_t)v17, (uint64_t)&v18, 0, 0, &__p);
    v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    v11 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    std::mutex::lock((std::mutex *)(v9 + 152));
    if ((v10 & 0x80u) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)v11;
    if ((v10 & 0x80u) == 0)
      v13 = v10;
    else
      v13 = *((_QWORD *)&v11 + 1);
    sub_223FD45A8(v9 + 32, p_p, v13, a4);
    std::mutex::unlock((std::mutex *)(v9 + 152));
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v14 = *a1;
    v15 = (std::mutex *)(*a1 + 152);
    std::mutex::lock(v15);
    sub_223FD45A8(v14 + 32, a2, a3, a4);
    std::mutex::unlock(v15);
  }
}

void sub_223532F94(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_223532FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::mutex *v14;

  std::mutex::unlock(v14);
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_223532FE0(double *a1, uint64_t a2, int *a3, const char *a4)
{
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v14;
  void *__dst[2];
  unint64_t v16;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v8 = strlen(a4);
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v9 = (void *)v8;
    if (v8 >= 0x17)
    {
      v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17)
        v11 = v8 | 7;
      v12 = v11 + 1;
      v10 = (void **)operator new(v11 + 1);
      __dst[1] = v9;
      v16 = v12 | 0x8000000000000000;
      __dst[0] = v10;
    }
    else
    {
      HIBYTE(v16) = v8;
      v10 = __dst;
      if (!v8)
      {
LABEL_10:
        *((_BYTE *)v9 + (_QWORD)v10) = 0;
        *(_QWORD *)&v14 = (uint64_t)(*a1 * 1000000000.0);
        *((_QWORD *)&v14 + 1) = 2;
        v13 = sub_2241471F8();
        sub_2235347B4((uint64_t)v13, a2, a3, (uint64_t)__dst, &v14);
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        return;
      }
    }
    memcpy(v10, a4, (size_t)v9);
    goto LABEL_10;
  }
}

void sub_223533100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22353311C(double *a1, uint64_t a2, int *a3, const char *a4)
{
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v14;
  void *__dst[2];
  unint64_t v16;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v8 = strlen(a4);
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v9 = (void *)v8;
    if (v8 >= 0x17)
    {
      v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17)
        v11 = v8 | 7;
      v12 = v11 + 1;
      v10 = (void **)operator new(v11 + 1);
      __dst[1] = v9;
      v16 = v12 | 0x8000000000000000;
      __dst[0] = v10;
    }
    else
    {
      HIBYTE(v16) = v8;
      v10 = __dst;
      if (!v8)
      {
LABEL_10:
        *((_BYTE *)v9 + (_QWORD)v10) = 0;
        *(_QWORD *)&v14 = (uint64_t)(*a1 * 1000000000.0);
        *((_QWORD *)&v14 + 1) = 2;
        v13 = sub_2241471F8();
        sub_2235347B4((uint64_t)v13, a2, a3, (uint64_t)__dst, &v14);
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        return;
      }
    }
    memcpy(v10, a4, (size_t)v9);
    goto LABEL_10;
  }
}

void sub_22353323C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_223533258(double *a1, uint64_t a2, int *a3, const char *a4)
{
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v14;
  void *__dst[2];
  unint64_t v16;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v8 = strlen(a4);
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v9 = (void *)v8;
    if (v8 >= 0x17)
    {
      v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17)
        v11 = v8 | 7;
      v12 = v11 + 1;
      v10 = (void **)operator new(v11 + 1);
      __dst[1] = v9;
      v16 = v12 | 0x8000000000000000;
      __dst[0] = v10;
    }
    else
    {
      HIBYTE(v16) = v8;
      v10 = __dst;
      if (!v8)
      {
LABEL_10:
        *((_BYTE *)v9 + (_QWORD)v10) = 0;
        *(_QWORD *)&v14 = (uint64_t)(*a1 * 1000000000.0);
        *((_QWORD *)&v14 + 1) = 2;
        v13 = sub_2241471F8();
        sub_2235347B4((uint64_t)v13, a2, a3, (uint64_t)__dst, &v14);
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        return;
      }
    }
    memcpy(v10, a4, (size_t)v9);
    goto LABEL_10;
  }
}

void sub_223533378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *sub_223533394(void **a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char *v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;

  v3 = 0xEEEEEEEEEEEEEEEFLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0x222222222222222)
    sub_22316E078();
  if (0xDDDDDDDDDDDDDDDELL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0xDDDDDDDDDDDDDDDELL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xEEEEEEEEEEEEEEEFLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x111111111111111)
    v6 = 0x222222222222222;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x222222222222222)
      sub_223174E94();
    v7 = (char *)operator new(120 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[120 * v3];
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a2;
  *((_OWORD *)v8 + 1) = v9;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  v8[32] = 0;
  v8[96] = 0;
  if (*(_BYTE *)(a2 + 96))
  {
    v10 = *(_OWORD *)(a2 + 48);
    *((_OWORD *)v8 + 2) = *(_OWORD *)(a2 + 32);
    *((_OWORD *)v8 + 3) = v10;
    v11 = *(_OWORD *)(a2 + 80);
    *((_OWORD *)v8 + 4) = *(_OWORD *)(a2 + 64);
    *((_OWORD *)v8 + 5) = v11;
    v8[96] = 1;
  }
  v12 = &v7[120 * v6];
  v13 = &v7[120 * v3];
  *(_OWORD *)(v13 + 100) = *(_OWORD *)(a2 + 100);
  v13[116] = *(_BYTE *)(a2 + 116);
  v14 = v8 + 120;
  v15 = (char *)*a1;
  v16 = (char *)a1[1];
  if (v16 == *a1)
  {
    *a1 = v8;
    a1[1] = v14;
    a1[2] = v12;
  }
  else
  {
    v17 = 0;
    do
    {
      v19 = &v8[v17];
      v20 = &v16[v17];
      *(_OWORD *)(v19 - 120) = *(_OWORD *)&v16[v17 - 120];
      *(_OWORD *)(v19 - 104) = *(_OWORD *)&v16[v17 - 104];
      *((_QWORD *)v20 - 13) = 0;
      *((_QWORD *)v20 - 12) = 0;
      v8[v17 - 88] = 0;
      *(v19 - 24) = 0;
      if (v16[v17 - 24])
      {
        v21 = *(_OWORD *)(v20 - 88);
        v22 = *(_OWORD *)(v20 - 72);
        v23 = *(_OWORD *)(v20 - 40);
        *(_OWORD *)&v8[v17 - 56] = *(_OWORD *)(v20 - 56);
        *(_OWORD *)&v8[v17 - 40] = v23;
        *(_OWORD *)&v8[v17 - 88] = v21;
        *(_OWORD *)&v8[v17 - 72] = v22;
        *(v19 - 24) = 1;
      }
      v18 = *(_OWORD *)(v20 - 20);
      *(v19 - 4) = *(v20 - 4);
      *(_OWORD *)(v19 - 20) = v18;
      v17 -= 120;
    }
    while (&v16[v17] != v15);
    v16 = (char *)*a1;
    v24 = (char *)a1[1];
    *a1 = &v8[v17];
    a1[1] = v14;
    a1[2] = v12;
    while (v24 != v16)
    {
      v25 = (std::__shared_weak_count *)*((_QWORD *)v24 - 12);
      if (v25)
      {
        p_shared_owners = (unint64_t *)&v25->__shared_owners_;
        do
          v27 = __ldaxr(p_shared_owners);
        while (__stlxr(v27 - 1, p_shared_owners));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      v24 -= 120;
    }
  }
  if (v16)
    operator delete(v16);
  return v14;
}

uint64_t sub_2235335A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 __p;
  char v15;
  char v16;
  _QWORD v17[2];
  std::__shared_weak_count *v18;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v9 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    LOBYTE(__p) = 0;
    v16 = 0;
    sub_2232A3848(a3, &__p, a5, v17);
    sub_2231AA5A4(a1, v9, (uint64_t)v17);
    v10 = v18;
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    if (v16 && v15 < 0)
      operator delete((void *)__p);
  }
  return a1;
}

void sub_223533680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, int a17, __int16 a18, char a19, char a20)
{
  sub_2241231D8((uint64_t)&a18);
  if (a16)
  {
    if (a15 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235336B4@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unsigned __int8 v9;
  unint64_t v11;
  unint64_t v12;
  mach_timebase_info info;
  _QWORD v14[2];
  __int128 v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  __int128 v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v8 = mach_continuous_time();
  v9 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info(&info);
    LODWORD(v11) = info.numer;
    LODWORD(v12) = info.denom;
    *(double *)&qword_255795558 = (double)v11 / (double)v12;
    __cxa_guard_release(&qword_255795560);
  }
  v14[0] = llround(*(double *)&qword_255795558 * (double)v8);
  v14[1] = 2;
  LOBYTE(v15) = 0;
  v17 = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v15 = *a2;
    v16 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v17 = 1;
  }
  v18 = 0;
  v19 = 0;
  v20 = *a3;
  v21 = 1;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  sub_22353383C(a1, (uint64_t)v14, a4);
  return sub_2231AD66C((uint64_t)v14);
}

void sub_223533810(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255795560);
  _Unwind_Resume(a1);
}

void sub_223533828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_2231AD66C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_22353383C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9[48];
  uint64_t v10;

  sub_223180698((uint64_t)v9, a1);
  sub_22329DB38((uint64_t)v9, a2, &v10);
  v5 = v10;
  v10 = 0;
  *a3 = &off_24EC6A3B8;
  a3[1] = v5;
  if (v5)
  {
    v6 = (_QWORD *)operator new();
    *v6 = &off_24EC6A4B0;
    v6[1] = 0;
    v6[2] = 0;
    v6[3] = v5;
    v7 = v10;
    a3[2] = v6;
    v10 = 0;
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  else
  {
    a3[2] = 0;
    v10 = 0;
  }
  return sub_22316F8F4(v9);
}

void sub_2235338F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  va_list va;

  va_start(va, a2);
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v5 = *(_QWORD *)(v3 - 40);
  *(_QWORD *)(v3 - 40) = 0;
  if (v5)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    sub_22316F8F4((uint64_t *)va);
    _Unwind_Resume(a1);
  }
  sub_22316F8F4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_223533948(uint64_t a1, int *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  uint64_t **v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t v19;
  float v20;
  float v21;
  uint64_t v22;
  _QWORD *v23;
  _BOOL8 v24;
  unint64_t v25;
  unint64_t v26;
  size_t prime;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = (19349669 * v8) ^ (73856093 * *a2) ^ (83492791 * v9);
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v4 = (19349669 * v8) ^ (73856093 * v7) ^ (83492791 * v9);
      if (v10 >= v11)
        v4 = v10 % v11;
    }
    else
    {
      v4 = v10 & (v11 - 1);
    }
    v13 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
    if (v13)
    {
      v14 = *v13;
      if (*v13)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == v10)
            {
              if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
                return v14;
            }
            else if ((v16 & (v11 - 1)) != v4)
            {
              goto LABEL_27;
            }
            v14 = (uint64_t *)*v14;
            if (!v14)
              goto LABEL_27;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == v10)
          {
            if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
              return v14;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v4)
              break;
          }
          v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_27:
  v18 = operator new(0x30uLL);
  *v18 = 0;
  v18[1] = v10;
  v19 = **a4;
  *((_DWORD *)v18 + 6) = *((_DWORD *)*a4 + 2);
  v18[2] = v19;
  *(_QWORD *)((char *)v18 + 36) = 0;
  *(_QWORD *)((char *)v18 + 28) = 0;
  v20 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v21 = *(float *)(a1 + 32);
  if (v11 && (float)(v21 * (float)v11) >= v20)
  {
    v22 = *(_QWORD *)a1;
    v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v23)
    {
LABEL_30:
      *v18 = *v23;
LABEL_65:
      *v23 = v18;
      goto LABEL_66;
    }
  }
  else
  {
    v24 = 1;
    if (v11 >= 3)
      v24 = (v11 & (v11 - 1)) != 0;
    v25 = v24 | (2 * v11);
    v26 = vcvtps_u32_f32(v20 / v21);
    if (v25 <= v26)
      prime = v26;
    else
      prime = v25;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v11 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v11)
      goto LABEL_41;
    if (prime < v11)
    {
      v28 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v11 < 3 || (v29 = (uint8x8_t)vcnt_s8((int8x8_t)v11), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (prime <= v28)
        prime = v28;
      if (prime < v11)
LABEL_41:
        sub_2231B0668(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    v31 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        v4 = v10 % v11;
        v22 = *(_QWORD *)a1;
        v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v10 % v11));
        if (v23)
          goto LABEL_30;
      }
      else
      {
        v4 = v10;
        v22 = *(_QWORD *)a1;
        v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v10);
        if (v23)
          goto LABEL_30;
      }
    }
    else
    {
      v4 = v31 & v10;
      v22 = *(_QWORD *)a1;
      v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v31 & v10));
      if (v23)
        goto LABEL_30;
    }
  }
  *v18 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v18;
  *(_QWORD *)(v22 + 8 * v4) = a1 + 16;
  if (*v18)
  {
    v32 = *(_QWORD *)(*v18 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v32 >= v11)
        v32 %= v11;
    }
    else
    {
      v32 &= v11 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v32);
    goto LABEL_65;
  }
LABEL_66:
  ++*(_QWORD *)(a1 + 24);
  return v18;
}

void sub_223533CC8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_223533CDC(uint64_t a1, int *a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v4;
  int v7;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  uint64_t **v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v19;
  float v20;
  float v21;
  uint64_t v22;
  _QWORD *v23;
  _BOOL8 v24;
  unint64_t v25;
  unint64_t v26;
  size_t prime;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = (19349669 * v8) ^ (73856093 * *a2) ^ (83492791 * v9) ^ (37783632 * v10);
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      v4 = (19349669 * v8) ^ (73856093 * v7) ^ (83492791 * v9) ^ (37783632 * v10);
      if (v11 >= v12)
        v4 = v11 % v12;
    }
    else
    {
      v4 = v11 & (v12 - 1);
    }
    v14 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      v15 = *v14;
      if (*v14)
      {
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            v17 = v15[1];
            if (v17 == v11)
            {
              if (*((_DWORD *)v15 + 4) == v7
                && *((_DWORD *)v15 + 5) == v8
                && *((_DWORD *)v15 + 6) == v9
                && *((_DWORD *)v15 + 7) == v10)
              {
                return v15;
              }
            }
            else if ((v17 & (v12 - 1)) != v4)
            {
              goto LABEL_29;
            }
            v15 = (uint64_t *)*v15;
            if (!v15)
              goto LABEL_29;
          }
        }
        do
        {
          v16 = v15[1];
          if (v16 == v11)
          {
            if (*((_DWORD *)v15 + 4) == v7
              && *((_DWORD *)v15 + 5) == v8
              && *((_DWORD *)v15 + 6) == v9
              && *((_DWORD *)v15 + 7) == v10)
            {
              return v15;
            }
          }
          else
          {
            if (v16 >= v12)
              v16 %= v12;
            if (v16 != v4)
              break;
          }
          v15 = (uint64_t *)*v15;
        }
        while (v15);
      }
    }
  }
LABEL_29:
  v19 = operator new(0x30uLL);
  *v19 = 0;
  v19[1] = v11;
  *((_OWORD *)v19 + 1) = **a4;
  v19[4] = 0;
  v19[5] = 0;
  v20 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v21 = *(float *)(a1 + 32);
  if (v12 && (float)(v21 * (float)v12) >= v20)
  {
    v22 = *(_QWORD *)a1;
    v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v23)
    {
LABEL_32:
      *v19 = *v23;
LABEL_67:
      *v23 = v19;
      goto LABEL_68;
    }
  }
  else
  {
    v24 = 1;
    if (v12 >= 3)
      v24 = (v12 & (v12 - 1)) != 0;
    v25 = v24 | (2 * v12);
    v26 = vcvtps_u32_f32(v20 / v21);
    if (v25 <= v26)
      prime = v26;
    else
      prime = v25;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v12 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v12)
      goto LABEL_43;
    if (prime < v12)
    {
      v28 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v12 < 3 || (v29 = (uint8x8_t)vcnt_s8((int8x8_t)v12), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (prime <= v28)
        prime = v28;
      if (prime < v12)
LABEL_43:
        sub_2231B0668(a1, prime);
    }
    v12 = *(_QWORD *)(a1 + 8);
    v31 = v12 - 1;
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
      {
        v4 = v11 % v12;
        v22 = *(_QWORD *)a1;
        v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v11 % v12));
        if (v23)
          goto LABEL_32;
      }
      else
      {
        v4 = v11;
        v22 = *(_QWORD *)a1;
        v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v11);
        if (v23)
          goto LABEL_32;
      }
    }
    else
    {
      v4 = v31 & v11;
      v22 = *(_QWORD *)a1;
      v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v31 & v11));
      if (v23)
        goto LABEL_32;
    }
  }
  *v19 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v19;
  *(_QWORD *)(v22 + 8 * v4) = a1 + 16;
  if (*v19)
  {
    v32 = *(_QWORD *)(*v19 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v32 >= v12)
        v32 %= v12;
    }
    else
    {
      v32 &= v12 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v32);
    goto LABEL_67;
  }
LABEL_68:
  ++*(_QWORD *)(a1 + 24);
  return v19;
}

void sub_223534078(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_22353408C(_QWORD *a1, int *a2)
{
  int8x8_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unint64_t v7;
  uint8x8_t v8;
  uint64_t v9;
  uint64_t **v10;
  uint64_t *result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = (19349669 * v4) ^ (73856093 * *a2) ^ (83492791 * v5) ^ (37783632 * v6);
  v8 = (uint8x8_t)vcnt_s8(v2);
  v8.i16[0] = vaddlv_u8(v8);
  if (v8.u32[0] > 1uLL)
  {
    v9 = (19349669 * v4) ^ (73856093 * v3) ^ (83492791 * v5) ^ (37783632 * v6);
    if (v7 >= *(_QWORD *)&v2)
      v9 = v7 % *(_QWORD *)&v2;
  }
  else
  {
    v9 = v7 & (*(_QWORD *)&v2 - 1);
  }
  v10 = *(uint64_t ***)(*a1 + 8 * v9);
  if (!v10)
    return 0;
  result = *v10;
  if (*v10)
  {
    if (v8.u32[0] < 2uLL)
    {
      v12 = *(_QWORD *)&v2 - 1;
      while (1)
      {
        v14 = result[1];
        if (v7 == v14)
        {
          if (*((_DWORD *)result + 4) == v3
            && *((_DWORD *)result + 5) == v4
            && *((_DWORD *)result + 6) == v5
            && *((_DWORD *)result + 7) == v6)
          {
            return result;
          }
        }
        else if ((v14 & v12) != v9)
        {
          return 0;
        }
        result = (uint64_t *)*result;
        if (!result)
          return result;
      }
    }
    do
    {
      v13 = result[1];
      if (v7 == v13)
      {
        if (*((_DWORD *)result + 4) == v3
          && *((_DWORD *)result + 5) == v4
          && *((_DWORD *)result + 6) == v5
          && *((_DWORD *)result + 7) == v6)
        {
          return result;
        }
      }
      else
      {
        if (v13 >= *(_QWORD *)&v2)
          v13 %= *(_QWORD *)&v2;
        if (v13 != v9)
          return 0;
      }
      result = (uint64_t *)*result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_2235341F4(uint64_t result, unint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD **v27;
  int v28;
  _QWORD *v29;

  v5 = result;
  v6 = *(_QWORD *)(result + 8);
  v7 = *(_QWORD *)(result + 16);
  if (0xAAAAAAAAAAAAAAABLL * ((v7 - v6) >> 2) >= a2)
  {
    if (a2)
    {
      v13 = v6 + 12 * a2;
      v14 = 12 * a2;
      do
      {
        v15 = *a3;
        *(_DWORD *)(v6 + 8) = *((_DWORD *)a3 + 2);
        *(_QWORD *)v6 = v15;
        v6 += 12;
        v14 -= 12;
      }
      while (v14);
      v6 = v13;
    }
    *(_QWORD *)(result + 8) = v6;
  }
  else
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * ((v6 - *(_QWORD *)result) >> 2);
    v9 = v8 + a2;
    if (v8 + a2 > 0x1555555555555555)
      sub_22316E078();
    v10 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *(_QWORD *)result) >> 2);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0xAAAAAAAAAAAAAAALL)
      v9 = 0x1555555555555555;
    if (v9)
    {
      LODWORD(v29) = v9;
      v11 = *(unsigned int *)(result + 28);
      if ((_DWORD)v11 == -1)
        sub_22316DD70();
      v27 = &v29;
      result = ((uint64_t (*)(_QWORD ***, uint64_t))off_24EC45408[v11])(&v27, result + 24);
    }
    else
    {
      result = 0;
      v12 = 0;
    }
    v16 = result + 12 * v8;
    v17 = 12 * a2;
    v18 = v16 + 12 * a2;
    v19 = v16;
    do
    {
      v20 = *a3;
      *(_DWORD *)(v19 + 8) = *((_DWORD *)a3 + 2);
      *(_QWORD *)v19 = v20;
      v19 += 12;
      v17 -= 12;
    }
    while (v17);
    v22 = *(_QWORD *)v5;
    v21 = *(_QWORD *)(v5 + 8);
    if (v21 != *(_QWORD *)v5)
    {
      do
      {
        v23 = *(_QWORD *)(v21 - 12);
        v21 -= 12;
        v24 = *(_DWORD *)(v21 + 8);
        *(_QWORD *)(v16 - 12) = v23;
        v16 -= 12;
        *(_DWORD *)(v16 + 8) = v24;
      }
      while (v21 != v22);
      v21 = *(_QWORD *)v5;
    }
    *(_QWORD *)v5 = v16;
    *(_QWORD *)(v5 + 8) = v18;
    v25 = *(_QWORD *)(v5 + 16);
    *(_QWORD *)(v5 + 16) = result + 12 * v12;
    if (v21)
    {
      v27 = (_QWORD **)v21;
      v28 = -1431655765 * ((unint64_t)(v25 - v21) >> 2);
      v26 = *(unsigned int *)(v5 + 28);
      if ((_DWORD)v26 == -1)
        sub_22316DD70();
      v29 = &v27;
      return ((uint64_t (*)(_QWORD **, uint64_t))off_24EC45398[v26])(&v29, v5 + 24);
    }
  }
  return result;
}

uint64_t sub_2235343FC(uint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;

  v3 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 7);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAALL)
    sub_22316E078();
  if (0x5555555555555556 * ((a1[2] - *a1) >> 7) > v4)
    v4 = 0x5555555555555556 * ((a1[2] - *a1) >> 7);
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 7) >= 0x55555555555555)
    v6 = 0xAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAALL)
      sub_223174E94();
    v7 = (char *)operator new(384 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[384 * v6];
  v9 = sub_22317FD80((uint64_t)&v7[384 * v3], a2);
  v10 = v9 + 384;
  v12 = (uint64_t *)*a1;
  v11 = (uint64_t *)a1[1];
  if (v11 == (uint64_t *)*a1)
  {
    *a1 = v9;
    a1[1] = v10;
    a1[2] = (uint64_t)v8;
    if (!v11)
      return v10;
    goto LABEL_16;
  }
  do
  {
    v11 -= 48;
    v9 = sub_22317FD80(v9 - 384, (uint64_t)v11);
  }
  while (v11 != v12);
  v11 = (uint64_t *)*a1;
  v13 = (uint64_t *)a1[1];
  *a1 = v9;
  a1[1] = v10;
  a1[2] = (uint64_t)v8;
  while (v13 != v11)
  {
    v13 -= 48;
    sub_22316F8F4(v13);
  }
  if (v11)
LABEL_16:
    operator delete(v11);
  return v10;
}

BOOL sub_223534538(uint64_t a1, void *key, const char **a3)
{
  std::__shared_weak_count *v6;
  CFDictionaryRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  _BOOL8 v11;
  std::__shared_weak_count *v13;
  void *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  void *value;
  std::__shared_weak_count *v22;

  v7 = *(CFDictionaryRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return 0;
  }
  else
  {
LABEL_6:
    if (!v7)
      return 0;
  }
  if (CFDictionaryContainsKey(*(CFDictionaryRef *)a1, key))
    return 0;
  sub_2235346B0(a3, (CFStringRef *)&value);
  v14 = value;
  v13 = v22;
  if (v22)
  {
    v15 = (unint64_t *)&v22->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
      v11 = v14 != 0;
      if (!v14)
        goto LABEL_19;
      goto LABEL_18;
    }
  }
  v11 = v14 != 0;
  if (v14)
LABEL_18:
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, key, value);
LABEL_19:
  v18 = v22;
  if (v22)
  {
    v19 = (unint64_t *)&v22->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  return v11;
}

void sub_22353469C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235346B0(const char **a1@<X0>, CFStringRef *a2@<X8>)
{
  const char *v3;
  size_t v4;
  void *v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *__dst[2];
  unint64_t v10;

  v3 = *a1;
  v4 = strlen(*a1);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v5 = (void *)v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = (void **)operator new(v7 + 1);
    __dst[1] = v5;
    v10 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v10) = v4;
  v6 = __dst;
  if (v4)
LABEL_8:
    memmove(v6, v3, (size_t)v5);
  *((_BYTE *)v5 + (_QWORD)v6) = 0;
  sub_224527BAC((uint64_t)__dst, a2);
  if (SHIBYTE(v10) < 0)
    operator delete(__dst[0]);
}

void sub_223534798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235347B4(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p[2];
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  std::__shared_weak_count *v19;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v10 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    *(_OWORD *)__p = *(_OWORD *)a4;
    v16 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    v17 = 1;
    sub_2235348EC(a3, (__int128 *)__p, a5, v18);
    sub_2231AA5A4(a1, v10, (uint64_t)v18);
    v11 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v17 && SHIBYTE(v16) < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_2235348B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17)
{
  sub_2241231D8((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235348EC@<X0>(int *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  _DWORD *v11;
  unint64_t v13;
  unint64_t v14;
  mach_timebase_info info;
  void *__p;
  void *v17;
  _DWORD *v18;
  _QWORD v19[2];
  __int128 v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v8 = mach_continuous_time();
  v9 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info(&info);
    LODWORD(v13) = info.numer;
    LODWORD(v14) = info.denom;
    *(double *)&qword_255795558 = (double)v13 / (double)v14;
    __cxa_guard_release(&qword_255795560);
  }
  v19[0] = llround(*(double *)&qword_255795558 * (double)v8);
  v19[1] = 2;
  LOBYTE(v20) = 0;
  v22 = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v20 = *a2;
    v21 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v22 = 1;
  }
  v23 = 0;
  v24 = 0;
  v25 = *a3;
  v26 = 1;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v10 = *a1;
  LOBYTE(info.numer) = 2;
  v17 = 0;
  v18 = 0;
  __p = 0;
  v11 = operator new(4uLL);
  __p = v11;
  *v11 = v10;
  v17 = v11 + 1;
  v18 = v11 + 1;
  sub_2231AA8F0((char *)&info, (uint64_t)v19, a4);
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
  return sub_2231AD66C((uint64_t)v19);
}

void sub_223534A7C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255795560);
  _Unwind_Resume(a1);
}

void sub_223534A94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (__p)
  {
    operator delete(__p);
    sub_2231AD66C((uint64_t)&a15);
    _Unwind_Resume(a1);
  }
  sub_2231AD66C((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void sub_223534ACC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  std::mutex *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  std::mutex *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  std::string::size_type size;
  std::string *p_p;
  std::string::size_type v15;
  std::string::size_type v16;
  int v17;
  __n128 *v20;
  size_t v21;
  std::string *v22;
  std::string::size_type v23;
  char v24;
  char v25;
  std::string __p;
  __int128 v27;
  __int128 v28;
  int v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v3 = a2 != 0;
  v4 = (std::mutex *)(a1 + 1216);
  std::mutex::lock((std::mutex *)(a1 + 1216));
  *(_BYTE *)(a1 + 1280) |= v3;
  std::mutex::unlock(v4);
  *(_QWORD *)&v27 = "cv3d.recon.";
  *((_QWORD *)&v27 + 1) = 11;
  *(_QWORD *)&v28 = "Stats.aggregated";
  *((_QWORD *)&v28 + 1) = 16;
  sub_2231A9820((uint64_t)&v27, (uint64_t)&v29, 0, 0, &__p);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v5 = sub_2241471F8();
    v6 = v5[2];
    if (!v6)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v6 = v5[2];
    }
    v7 = *(_QWORD *)(v6 + 64);
    v8 = (std::mutex *)(v7 + 32);
    std::mutex::lock((std::mutex *)(v7 + 32));
    v10 = *(_QWORD *)(v7 + 96);
    v9 = *(_QWORD *)(v7 + 104);
    std::mutex::unlock(v8);
    if (v10 != v9)
    {
      sub_2241471F8();
      v11 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 24))(v11))
      {
        v27 = 0u;
        v28 = 0u;
        v29 = 728325608;
        kdebug_trace();
        std::mutex::lock(v4);
        v12 = *(_BYTE *)(a1 + 1280);
        std::mutex::unlock(v4);
        v25 = v12;
        sub_223534E68((double *)&qword_255788F20, v11, &v25, "volumetric_recycling_did_occur");
        kdebug_trace();
      }
    }
  }
  v27 = 0u;
  v28 = 0u;
  v29 = 728325624;
  kdebug_trace();
  size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __p.__r_.__value_.__l.__size_;
  if (size >= 0x11)
  {
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    v15 = p_p->__r_.__value_.__r.__words[0];
    v16 = p_p->__r_.__value_.__l.__size_;
    v17 = p_p->__r_.__value_.__s.__data_[16];
    if (v15 == 0x6365722E64337663 && v16 == 0x73746174532E6E6FLL && v17 == 46)
    {
      v20 = sub_223187510();
      v21 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      v23 = __p.__r_.__value_.__l.__size_;
      v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
      std::mutex::lock(v4);
      if ((v21 & 0x80u) != 0)
        v21 = v23;
      else
        v22 = &__p;
      v24 = *(_BYTE *)(a1 + 1280);
      std::mutex::unlock(v4);
      v25 = v24;
      sub_223189538((uint64_t *)v20, v22, v21, &v25, (uint64_t)"volumetric_recycling_did_occur", 30);
    }
  }
  kdebug_trace();
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_223534E10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_223534E68(double *a1, uint64_t a2, char *a3, const char *a4)
{
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v14;
  void *__dst[2];
  unint64_t v16;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v8 = strlen(a4);
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v9 = (void *)v8;
    if (v8 >= 0x17)
    {
      v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17)
        v11 = v8 | 7;
      v12 = v11 + 1;
      v10 = (void **)operator new(v11 + 1);
      __dst[1] = v9;
      v16 = v12 | 0x8000000000000000;
      __dst[0] = v10;
    }
    else
    {
      HIBYTE(v16) = v8;
      v10 = __dst;
      if (!v8)
      {
LABEL_10:
        *((_BYTE *)v9 + (_QWORD)v10) = 0;
        *(_QWORD *)&v14 = (uint64_t)(*a1 * 1000000000.0);
        *((_QWORD *)&v14 + 1) = 2;
        v13 = sub_2241471F8();
        sub_223534FA4((uint64_t)v13, a2, a3, (uint64_t)__dst, &v14);
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        return;
      }
    }
    memcpy(v10, a4, (size_t)v9);
    goto LABEL_10;
  }
}

void sub_223534F88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_223534FA4(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p[2];
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  std::__shared_weak_count *v19;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v10 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    *(_OWORD *)__p = *(_OWORD *)a4;
    v16 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    v17 = 1;
    sub_2235350DC(a3, (__int128 *)__p, a5, v18);
    sub_2231AA5A4(a1, v10, (uint64_t)v18);
    v11 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v17 && SHIBYTE(v16) < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_2235350A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17)
{
  sub_2241231D8((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235350DC@<X0>(char *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unsigned __int8 v9;
  char v10;
  _BYTE *v11;
  unint64_t v13;
  unint64_t v14;
  mach_timebase_info info;
  void *__p;
  void *v17;
  _BYTE *v18;
  _QWORD v19[2];
  __int128 v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v8 = mach_continuous_time();
  v9 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info(&info);
    LODWORD(v13) = info.numer;
    LODWORD(v14) = info.denom;
    *(double *)&qword_255795558 = (double)v13 / (double)v14;
    __cxa_guard_release(&qword_255795560);
  }
  v19[0] = llround(*(double *)&qword_255795558 * (double)v8);
  v19[1] = 2;
  LOBYTE(v20) = 0;
  v22 = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v20 = *a2;
    v21 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v22 = 1;
  }
  v23 = 0;
  v24 = 0;
  v25 = *a3;
  v26 = 1;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v10 = *a1;
  LOBYTE(info.numer) = 0;
  v17 = 0;
  v18 = 0;
  __p = 0;
  v11 = operator new(1uLL);
  __p = v11;
  *v11 = v10;
  v17 = v11 + 1;
  v18 = v11 + 1;
  sub_2231AA8F0((char *)&info, (uint64_t)v19, a4);
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
  return sub_2231AD66C((uint64_t)v19);
}

void sub_22353526C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255795560);
  _Unwind_Resume(a1);
}

void sub_223535284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (__p)
  {
    operator delete(__p);
    sub_2231AD66C((uint64_t)&a15);
    _Unwind_Resume(a1);
  }
  sub_2231AD66C((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_2235352BC(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p[2];
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  std::__shared_weak_count *v19;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v10 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    *(_OWORD *)__p = *(_OWORD *)a4;
    v16 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    v17 = 1;
    sub_2235353F4(a3, (__int128 *)__p, a5, v18);
    sub_2231AA5A4(a1, v10, (uint64_t)v18);
    v11 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v17 && SHIBYTE(v16) < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_2235353C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17)
{
  sub_2241231D8((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235353F4@<X0>(int *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  _DWORD *v11;
  unint64_t v13;
  unint64_t v14;
  mach_timebase_info info;
  void *__p;
  void *v17;
  _DWORD *v18;
  _QWORD v19[2];
  __int128 v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v8 = mach_continuous_time();
  v9 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info(&info);
    LODWORD(v13) = info.numer;
    LODWORD(v14) = info.denom;
    *(double *)&qword_255795558 = (double)v13 / (double)v14;
    __cxa_guard_release(&qword_255795560);
  }
  v19[0] = llround(*(double *)&qword_255795558 * (double)v8);
  v19[1] = 2;
  LOBYTE(v20) = 0;
  v22 = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v20 = *a2;
    v21 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v22 = 1;
  }
  v23 = 0;
  v24 = 0;
  v25 = *a3;
  v26 = 1;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v10 = *a1;
  LOBYTE(info.numer) = 2;
  v17 = 0;
  v18 = 0;
  __p = 0;
  v11 = operator new(4uLL);
  __p = v11;
  *v11 = v10;
  v17 = v11 + 1;
  v18 = v11 + 1;
  sub_2231AA8F0((char *)&info, (uint64_t)v19, a4);
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
  return sub_2231AD66C((uint64_t)v19);
}

void sub_223535584(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255795560);
  _Unwind_Resume(a1);
}

void sub_22353559C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (__p)
  {
    operator delete(__p);
    sub_2231AD66C((uint64_t)&a15);
    _Unwind_Resume(a1);
  }
  sub_2231AD66C((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void sub_2235355D4(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  std::__shared_weak_count *v6;
  uint64_t **v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t **v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  v6 = (std::__shared_weak_count *)operator new(0x198uLL);
  v6->__shared_owners_ = 0;
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC482D8;
  v13 = sub_223559BF0((uint64_t)&v6[1]);
  v14 = v6;
  sub_224502FB8(a1, "MeshProvider", a2, &v12);
  sub_223535724((uint64_t *)&v12, &v13, a3);
  v7 = v12;
  v12 = 0;
  if (v7)
  {
    v8 = *v7;
    *v7 = 0;
    if (v8)
      sub_22450297C((uint64_t)v7, v8);
    MEMORY[0x227684CE8](v7, 0x20C4093837F09);
  }
  v9 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2235356DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t **v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, uint64_t **);
  sub_22331A3CC((uint64_t ***)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2235356F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22353570C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_223535724(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t **v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t **v19;

  v6 = operator new();
  v7 = v6;
  v8 = *a1;
  *a1 = 0;
  v9 = a2[1];
  v17 = *a2;
  v18 = (std::__shared_weak_count *)v9;
  v19 = (uint64_t **)v8;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  sub_223535858(v6, (uint64_t *)&v19, &v17);
  *a3 = v7;
  v12 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v15 = v19;
  v19 = 0;
  if (v15)
  {
    v16 = *v15;
    *v15 = 0;
    if (v16)
      sub_22450297C((uint64_t)v15, v16);
    MEMORY[0x227684CE8](v15, 0x20C4093837F09);
  }
}

void sub_223535824(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_22331A3CC((uint64_t ***)va1);
  MEMORY[0x227684CE8](v2, 0x10B3C404AE8992ELL);
  _Unwind_Resume(a1);
}

uint64_t sub_223535858(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v23;
  std::__shared_weak_count *v24;

  *(_QWORD *)a1 = &off_24EC45428;
  v6 = *a3;
  if (*(char *)(*a3 + 359) < 0)
  {
    sub_223197FA4((_BYTE *)(a1 + 8), *(void **)(v6 + 336), *(_QWORD *)(v6 + 344));
    v9 = a1 + 32;
    v10 = *a3;
    if ((*(char *)(*a3 + 383) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v7 = v6 + 336;
    v8 = *(_OWORD *)v7;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(v7 + 16);
    *(_OWORD *)(a1 + 8) = v8;
    v9 = a1 + 32;
    v10 = *a3;
    if ((*(char *)(*a3 + 383) & 0x80000000) == 0)
    {
LABEL_3:
      v11 = v10 + 360;
      v12 = *(_OWORD *)v11;
      *(_QWORD *)(v9 + 16) = *(_QWORD *)(v11 + 16);
      *(_OWORD *)v9 = v12;
      goto LABEL_6;
    }
  }
  sub_223197FA4((_BYTE *)v9, *(void **)(v10 + 360), *(_QWORD *)(v10 + 368));
LABEL_6:
  v13 = *a2;
  *(_QWORD *)(a1 + 56) = *a2;
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = *a2;
    *v14 = &off_24EC2E800;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    *(_QWORD *)(a1 + 64) = v14;
    *a2 = 0;
    v16 = (uint64_t *)(a1 + 72);
    v17 = *(std::__shared_weak_count **)(a1 + 64);
    v23 = *(_QWORD *)(a1 + 56);
    v24 = v17;
    if (!v17)
      goto LABEL_12;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = 0;
    *a2 = 0;
    v16 = (uint64_t *)(a1 + 72);
    v17 = *(std::__shared_weak_count **)(a1 + 64);
    v23 = *(_QWORD *)(a1 + 56);
    v24 = v17;
    if (!v17)
      goto LABEL_12;
  }
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldxr(p_shared_owners);
  while (__stxr(v19 + 1, p_shared_owners));
LABEL_12:
  sub_223535A44(v16, (uint64_t)&v23, a3);
  if (v17)
  {
    v20 = (unint64_t *)&v17->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return a1;
}

void sub_2235359E0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if ((*(char *)(v1 + 31) & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_223535A44(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  unint64_t *v6;
  void *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t *v12;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  void *v17;
  void *v18;
  char v19;
  unint64_t *v20;
  unint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  std::__shared_weak_count *v28;
  unint64_t v29;
  unint64_t *p_shared_weak_owners;
  unint64_t v31;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  __int128 v41;
  void *v42;
  char *v43;
  void *v44;
  unint64_t *v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t *v66;
  void *v67;
  unint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  std::__shared_weak_count *v71;
  uint64_t v72;
  unint64_t *v73;
  unint64_t v74;
  __int128 v75;
  unint64_t *v76;
  unint64_t v77;
  void *v78;
  void *v79;
  char v80;
  unint64_t *v81;
  unint64_t v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  _QWORD *v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  std::__shared_weak_count *v89;
  unint64_t v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  std::__shared_weak_count *v100;
  unint64_t *v101;
  unint64_t v102;
  __int128 v103;
  void *v104;
  void *v105;
  char *v106;
  unint64_t *v107;
  unint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t *v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t *v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t *v119;
  unint64_t v120;
  uint64_t v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  std::__shared_weak_count *v125;
  unint64_t *v126;
  unint64_t v127;
  unint64_t *v128;
  void *v129;
  unint64_t *v130;
  unint64_t v131;
  uint64_t v132;
  std::__shared_weak_count *v133;
  uint64_t v134;
  unint64_t *v135;
  unint64_t v136;
  __int128 v137;
  unint64_t *v138;
  unint64_t v139;
  void *v140;
  void *v141;
  char v142;
  unint64_t *v143;
  unint64_t v144;
  char *v145;
  __int128 v146;
  uint64_t v147;
  _QWORD *v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  std::__shared_weak_count *v151;
  unint64_t v152;
  unint64_t *v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t *v156;
  unint64_t v157;
  unint64_t v158;
  std::__shared_weak_count *v159;
  unint64_t *v160;
  unint64_t v161;
  std::__shared_weak_count *v162;
  unint64_t *v163;
  unint64_t v164;
  __int128 v165;
  void *v166;
  void *v167;
  char *v168;
  unint64_t *v169;
  unint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t *v174;
  unint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t *v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t *v181;
  unint64_t v182;
  uint64_t v183;
  std::__shared_weak_count *v184;
  unint64_t *v185;
  unint64_t v186;
  std::__shared_weak_count *v187;
  unint64_t *v188;
  unint64_t v189;
  std::__shared_weak_count *v190;
  void *v191;
  unint64_t *v192;
  unint64_t v193;
  uint64_t v194;
  std::__shared_weak_count *v195;
  uint64_t v196;
  unint64_t *v197;
  unint64_t v198;
  __int128 v199;
  unint64_t *v200;
  unint64_t v201;
  void *v202;
  void *v203;
  char v204;
  unint64_t *v205;
  unint64_t v206;
  char *v207;
  __int128 v208;
  uint64_t v209;
  _QWORD *v210;
  std::__shared_weak_count *v211;
  unint64_t *v212;
  std::__shared_weak_count *v213;
  unint64_t v214;
  unint64_t *v215;
  unint64_t v216;
  unint64_t v217;
  unint64_t *v218;
  unint64_t v219;
  unint64_t v220;
  std::__shared_weak_count *v221;
  unint64_t *v222;
  unint64_t v223;
  std::__shared_weak_count *v224;
  unint64_t *v225;
  unint64_t v226;
  __int128 v227;
  void *v228;
  void *v229;
  char *v230;
  unint64_t *v231;
  unint64_t v232;
  _QWORD *v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t *v236;
  unint64_t v237;
  uint64_t v238;
  unint64_t v239;
  unint64_t *v240;
  unint64_t v241;
  uint64_t v242;
  unint64_t *v243;
  unint64_t v244;
  uint64_t v245;
  std::__shared_weak_count *v246;
  unint64_t *v247;
  unint64_t v248;
  std::__shared_weak_count *v249;
  unint64_t *v250;
  unint64_t v251;
  std::__shared_weak_count *v252;
  void *v253;
  unint64_t *v254;
  unint64_t v255;
  std::__shared_weak_count *v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t *v259;
  unint64_t v260;
  __int128 v261;
  unint64_t *v262;
  unint64_t v263;
  void *v264;
  void *v265;
  char v266;
  unint64_t *v267;
  unint64_t v268;
  uint64_t v269;
  __int128 v270;
  uint64_t v271;
  _QWORD *v272;
  std::__shared_weak_count *v273;
  unint64_t *v274;
  std::__shared_weak_count *v275;
  unint64_t v276;
  unint64_t *v277;
  unint64_t v278;
  unint64_t v279;
  unint64_t *v280;
  unint64_t v281;
  unint64_t v282;
  std::__shared_weak_count *v283;
  unint64_t *v284;
  unint64_t v285;
  std::__shared_weak_count *v286;
  unint64_t *v287;
  unint64_t v288;
  __int128 v289;
  void *v290;
  __int128 v291;
  unint64_t *v292;
  unint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  unint64_t *v297;
  unint64_t v298;
  uint64_t v299;
  unint64_t v300;
  unint64_t *v301;
  unint64_t v302;
  uint64_t v303;
  unint64_t *v304;
  unint64_t v305;
  uint64_t v306;
  std::__shared_weak_count *v307;
  unint64_t *v308;
  unint64_t v309;
  std::__shared_weak_count *v310;
  unint64_t *v311;
  unint64_t v312;
  uint64_t v313;
  void *v314;
  unint64_t *v315;
  unint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  unint64_t *v320;
  unint64_t v321;
  __int128 v322;
  unint64_t *v323;
  unint64_t v324;
  uint64_t *v325;
  void *v326;
  void *v327;
  char v328;
  unint64_t *v329;
  unint64_t v330;
  uint64_t v331;
  __int128 v332;
  uint64_t v333;
  _QWORD *v334;
  std::__shared_weak_count *v335;
  unint64_t *v336;
  std::__shared_weak_count *v337;
  unint64_t v338;
  unint64_t *v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t *v342;
  unint64_t v343;
  unint64_t v344;
  std::__shared_weak_count *v345;
  unint64_t *v346;
  unint64_t v347;
  std::__shared_weak_count *v348;
  unint64_t *v349;
  unint64_t v350;
  __int128 v351;
  __int128 v352;
  unint64_t *v353;
  unint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  unint64_t *v358;
  unint64_t v359;
  uint64_t v360;
  unint64_t v361;
  unint64_t *v362;
  unint64_t v363;
  uint64_t v364;
  unint64_t *v365;
  unint64_t v366;
  uint64_t v367;
  std::__shared_weak_count *v368;
  unint64_t *v369;
  unint64_t v370;
  std::__shared_weak_count *v371;
  unint64_t *v372;
  unint64_t v373;
  uint64_t v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  uint64_t v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  uint64_t v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  uint64_t v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  unint64_t *v406;
  unint64_t v407;
  std::__shared_weak_count *v408;
  unint64_t *v409;
  unint64_t v410;
  std::__shared_weak_count *v411;
  unint64_t *v412;
  unint64_t v413;
  std::__shared_weak_count *v414;
  unint64_t *v415;
  unint64_t v416;
  std::__shared_weak_count *v417;
  unint64_t *v418;
  unint64_t v419;
  std::__shared_weak_count *v420;
  unint64_t *v421;
  unint64_t v422;
  std::__shared_weak_count *v423;
  unint64_t *v424;
  unint64_t v425;
  std::__shared_weak_count *v426;
  unint64_t *v427;
  unint64_t v428;
  std::__shared_weak_count *v429;
  unint64_t *v430;
  unint64_t v431;
  std::__shared_weak_count *v432;
  unint64_t *v433;
  unint64_t v434;
  std::__shared_weak_count *v435;
  unint64_t *v436;
  unint64_t v437;
  uint64_t v438;
  std::__shared_weak_count *v439;
  void *v440[3];
  void *v441;
  __int128 v442;
  void *v443;
  __int128 v444;
  __int128 v445;
  uint64_t (**v446)();
  __int128 v447;
  uint64_t v448;
  uint64_t (**v449)();
  __int128 v450;
  uint64_t (**v451)();
  __int128 v452;
  uint64_t v453;
  std::__shared_weak_count *v454;
  void *v455;
  std::__shared_weak_count *v456;
  void *v457[3];
  void *v458;
  __int128 v459;
  void *v460;
  __int128 v461;
  __int128 v462;
  uint64_t (**v463)();
  __int128 v464;
  uint64_t v465;
  uint64_t (**v466)();
  __int128 v467;
  uint64_t (**v468)();
  __int128 v469;
  uint64_t v470;
  std::__shared_weak_count *v471;
  void *v472;
  std::__shared_weak_count *v473;
  void *__dst[3];
  void *v475;
  __int128 v476;
  void *v477;
  __int128 v478;
  __int128 v479;
  uint64_t (**v480)();
  __int128 v481;
  uint64_t v482;
  uint64_t (**v483)();
  __int128 v484;
  uint64_t (**v485)();
  __int128 v486;
  uint64_t v487;
  std::__shared_weak_count *v488;
  void *v489;
  std::__shared_weak_count *v490;
  void *__p[3];
  void *v492;
  __int128 v493;
  void *v494;
  __int128 v495;
  __int128 v496;
  uint64_t (**v497)();
  __int128 v498;
  uint64_t v499;
  uint64_t (**v500)();
  __int128 v501;
  uint64_t (**v502)();
  __int128 v503;
  uint64_t v504;
  std::__shared_weak_count *v505;
  void *v506;
  std::__shared_weak_count *v507;
  void *v508[3];
  void *v509;
  __int128 v510;
  void *v511;
  __int128 v512;
  __int128 v513;
  uint64_t (**v514)();
  __int128 v515;
  uint64_t v516;
  uint64_t (**v517)();
  __int128 v518;
  uint64_t (**v519)();
  __int128 v520;
  uint64_t v521;
  std::__shared_weak_count *v522;
  void *v523;
  std::__shared_weak_count *v524;
  uint64_t (**v525)();
  __int128 v526;
  void *v527;
  __int128 v528;
  void *v529;
  __int128 v530;
  __int128 v531;
  uint64_t (**v532)();
  __int128 v533;
  uint64_t v534;
  uint64_t (**v535)();
  __int128 v536;
  uint64_t (**v537)();
  __int128 v538;
  void *v539[4];
  void *v540[4];
  void *__src[4];
  __int128 v542;
  __int128 v543;
  __int128 v544;
  void *v545;
  _QWORD v546[2];
  __int128 v547;
  _QWORD v548[2];
  __int128 v549;
  _QWORD v550[5];

  v550[2] = *MEMORY[0x24BDAC8D0];
  v7 = *(void **)a2;
  v6 = *(unint64_t **)(a2 + 8);
  v523 = *(void **)a2;
  v524 = (std::__shared_weak_count *)v6;
  if (v6)
  {
    v8 = v6 + 1;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = *a3;
  v11 = (unint64_t *)a3[1];
  v521 = *a3;
  v522 = (std::__shared_weak_count *)v11;
  if (v11)
  {
    v12 = v11 + 1;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  if (*(char *)(v10 + 31) < 0)
  {
    sub_223197FA4(__dst, *(void **)(v10 + 8), *(_QWORD *)(v10 + 16));
  }
  else
  {
    v14 = *(_OWORD *)(v10 + 8);
    __dst[2] = *(void **)(v10 + 24);
    *(_OWORD *)__dst = v14;
  }
  if (*(char *)(v10 + 55) < 0)
  {
    sub_223197FA4(v457, *(void **)(v10 + 32), *(_QWORD *)(v10 + 40));
  }
  else
  {
    *(_OWORD *)v457 = *(_OWORD *)(v10 + 32);
    v457[2] = *(void **)(v10 + 48);
  }
  v540[0] = v7;
  v540[1] = v6;
  v524 = 0;
  v523 = 0;
  v539[0] = (void *)v10;
  v539[1] = v11;
  if (v11)
  {
    v15 = v11 + 1;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
  }
  if (SHIBYTE(__dst[2]) < 0)
  {
    sub_223197FA4(v508, __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)v508 = *(_OWORD *)__dst;
    v508[2] = __dst[2];
  }
  if (SHIBYTE(v457[2]) < 0)
  {
    sub_223197FA4(__p, v457[0], (unint64_t)v457[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v457;
    __p[2] = v457[2];
  }
  *(void **)((char *)&v547 + 7) = *(void **)((char *)&__dst[1] + 7);
  v17 = __dst[0];
  v18 = __dst[1];
  BYTE7(v547) = HIBYTE(__dst[1]);
  v19 = HIBYTE(__dst[2]);
  memset(__dst, 0, sizeof(__dst));
  *(_QWORD *)&v549 = v18;
  *(_QWORD *)((char *)&v549 + 7) = *(_QWORD *)((char *)&v547 + 7);
  *(_QWORD *)((char *)&v547 + 7) = 0;
  *(_QWORD *)&v547 = 0;
  __src[0] = v7;
  __src[1] = v6;
  if (v6)
  {
    v20 = v6 + 1;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
  }
  v22 = (char *)operator new();
  *(_QWORD *)&v544 = v549;
  *(_QWORD *)((char *)&v544 + 7) = *(_QWORD *)((char *)&v549 + 7);
  *(_QWORD *)&v549 = 0;
  *(_QWORD *)((char *)&v549 + 7) = 0;
  v23 = *(_OWORD *)__src;
  __src[0] = 0;
  __src[1] = 0;
  v22[8] = 1;
  *((_QWORD *)v22 + 4) = 0;
  *((_QWORD *)v22 + 5) = 0;
  *(_QWORD *)v22 = &off_24EC456C8;
  *((_QWORD *)v22 + 2) = &unk_24EC45740;
  *((_QWORD *)v22 + 3) = &unk_24EC45780;
  v24 = v544;
  *(_QWORD *)(v22 + 63) = *(_QWORD *)((char *)&v544 + 7);
  *((_QWORD *)v22 + 6) = v17;
  *((_QWORD *)v22 + 7) = v24;
  v22[71] = v19;
  *(_QWORD *)&v544 = 0;
  *(_QWORD *)((char *)&v544 + 7) = 0;
  *(_OWORD *)(v22 + 72) = v23;
  v440[0] = 0;
  v440[1] = 0;
  v25 = (_QWORD *)operator new();
  *v25 = &off_24EC45878;
  v25[1] = v10;
  v25[2] = v11;
  v539[1] = 0;
  v539[0] = 0;
  *((_QWORD *)v22 + 18) = 0;
  *((_QWORD *)v22 + 11) = v25;
  *((_QWORD *)v22 + 12) = v22 + 96;
  *((_QWORD *)v22 + 13) = v22 + 96;
  *((_QWORD *)v22 + 14) = 0;
  *((_QWORD *)v22 + 15) = v22 + 120;
  *((_QWORD *)v22 + 16) = v22 + 120;
  *((_QWORD *)v22 + 17) = 0;
  if (!*((_QWORD *)v22 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v26 = (std::__shared_weak_count *)operator new();
  v26->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v26->__shared_owners_;
  v26->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC45D68;
  v26->__shared_weak_owners_ = 0;
  v26[1].__vftable = (std::__shared_weak_count_vtbl *)v22;
  v28 = (std::__shared_weak_count *)*((_QWORD *)v22 + 5);
  if (v28)
  {
    if (v28->__shared_owners_ != -1)
      goto LABEL_40;
    do
      v29 = __ldxr(p_shared_owners);
    while (__stxr(v29 + 1, p_shared_owners));
    p_shared_weak_owners = (unint64_t *)&v26->__shared_weak_owners_;
    do
      v31 = __ldxr(p_shared_weak_owners);
    while (__stxr(v31 + 1, p_shared_weak_owners));
    *((_QWORD *)v22 + 4) = v22;
    *((_QWORD *)v22 + 5) = v26;
    std::__shared_weak_count::__release_weak(v28);
  }
  else
  {
    do
      v32 = __ldxr(p_shared_owners);
    while (__stxr(v32 + 1, p_shared_owners));
    v33 = (unint64_t *)&v26->__shared_weak_owners_;
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 1, v33));
    *((_QWORD *)v22 + 4) = v22;
    *((_QWORD *)v22 + 5) = v26;
  }
  do
    v35 = __ldaxr(p_shared_owners);
  while (__stlxr(v35 - 1, p_shared_owners));
  if (!v35)
  {
    ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
    std::__shared_weak_count::__release_weak(v26);
  }
LABEL_40:
  if (v440[1])
  {
    v36 = (unint64_t *)((char *)v440[1] + 8);
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      (*(void (**)(void *))(*(_QWORD *)v440[1] + 16))(v440[1]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v440[1]);
    }
  }
  v440[0] = v22;
  v440[1] = v26;
  v38 = (std::__shared_weak_count *)__src[1];
  if (__src[1])
  {
    v39 = (unint64_t *)((char *)__src[1] + 8);
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
  v41 = *(_OWORD *)v540;
  v540[0] = 0;
  v540[1] = 0;
  v526 = *(_OWORD *)v508;
  v525 = &off_24EC45458;
  v527 = v508[2];
  memset(v508, 0, sizeof(v508));
  v528 = *(_OWORD *)__p;
  v42 = __p[2];
  memset(__p, 0, sizeof(__p));
  v530 = v41;
  __src[1] = 0;
  __src[0] = 0;
  v44 = v440[0];
  v43 = (char *)v440[1];
  v529 = v42;
  v531 = *(_OWORD *)v440;
  v440[0] = 0;
  v440[1] = 0;
  if (*((_QWORD *)&v531 + 1))
  {
    v45 = (unint64_t *)(v43 + 16);
    do
      v46 = __ldxr(v45);
    while (__stxr(v46 + 1, v45));
  }
  v532 = &off_24EC2B380;
  v47 = (_QWORD *)operator new();
  *v47 = &off_24EC45DB8;
  v47[1] = v44;
  v47[2] = v43;
  *(_QWORD *)&v533 = v47;
  v49 = *((_QWORD *)&v531 + 1);
  v48 = v531;
  if (!*((_QWORD *)&v531 + 1))
  {
    *((_QWORD *)&v533 + 1) = v531;
    v534 = 0;
    if ((_QWORD)v531)
      v53 = v531 + 16;
    else
      v53 = 0;
    goto LABEL_70;
  }
  v50 = (unint64_t *)(*((_QWORD *)&v531 + 1) + 16);
  do
    v51 = __ldxr(v50);
  while (__stxr(v51 + 1, v50));
  v52 = *((_QWORD *)&v531 + 1);
  *((_QWORD *)&v533 + 1) = v48;
  v534 = v49;
  if ((_QWORD)v531)
    v53 = v531 + 16;
  else
    v53 = 0;
  if (!*((_QWORD *)&v531 + 1))
  {
    v48 = v531;
LABEL_70:
    v56 = 0;
    v535 = &off_24EC45488;
    v536 = v53;
    goto LABEL_71;
  }
  v54 = (unint64_t *)(*((_QWORD *)&v531 + 1) + 16);
  do
    v55 = __ldxr(v54);
  while (__stxr(v55 + 1, v54));
  v56 = *((_QWORD *)&v531 + 1);
  v48 = v531;
  v535 = &off_24EC45488;
  *(_QWORD *)&v536 = v53;
  *((_QWORD *)&v536 + 1) = v52;
  if (*((_QWORD *)&v531 + 1))
  {
    v57 = (unint64_t *)(*((_QWORD *)&v531 + 1) + 16);
    do
      v58 = __ldxr(v57);
    while (__stxr(v58 + 1, v57));
  }
LABEL_71:
  if (v48)
    v59 = v48 + 24;
  else
    v59 = 0;
  v537 = &off_24EC2E850;
  *(_QWORD *)&v538 = v59;
  *((_QWORD *)&v538 + 1) = v56;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v508[2]) & 0x80000000) == 0)
      goto LABEL_76;
LABEL_79:
    operator delete(v508[0]);
    v60 = (std::__shared_weak_count *)v539[1];
    if (!v539[1])
      goto LABEL_84;
    goto LABEL_80;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v508[2]) < 0)
    goto LABEL_79;
LABEL_76:
  v60 = (std::__shared_weak_count *)v539[1];
  if (!v539[1])
    goto LABEL_84;
LABEL_80:
  v61 = (unint64_t *)&v60->__shared_owners_;
  do
    v62 = __ldaxr(v61);
  while (__stlxr(v62 - 1, v61));
  if (!v62)
  {
    ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
    std::__shared_weak_count::__release_weak(v60);
  }
LABEL_84:
  v63 = (std::__shared_weak_count *)v540[1];
  if (!v540[1])
    goto LABEL_88;
  v64 = (unint64_t *)((char *)v540[1] + 8);
  do
    v65 = __ldaxr(v64);
  while (__stlxr(v65 - 1, v64));
  if (!v65)
  {
    ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
    std::__shared_weak_count::__release_weak(v63);
    if ((SHIBYTE(v457[2]) & 0x80000000) == 0)
    {
LABEL_89:
      if ((SHIBYTE(__dst[2]) & 0x80000000) == 0)
        goto LABEL_90;
LABEL_94:
      operator delete(__dst[0]);
      if (v521)
        goto LABEL_96;
      goto LABEL_95;
    }
  }
  else
  {
LABEL_88:
    if ((SHIBYTE(v457[2]) & 0x80000000) == 0)
      goto LABEL_89;
  }
  operator delete(v457[0]);
  if (SHIBYTE(__dst[2]) < 0)
    goto LABEL_94;
LABEL_90:
  if (v521)
    goto LABEL_96;
LABEL_95:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_96:
  v67 = *(void **)a2;
  v66 = *(unint64_t **)(a2 + 8);
  v506 = *(void **)a2;
  v507 = (std::__shared_weak_count *)v66;
  if (v66)
  {
    v68 = v66 + 1;
    do
      v69 = __ldxr(v68);
    while (__stxr(v69 + 1, v68));
  }
  v70 = *a3;
  v71 = (std::__shared_weak_count *)a3[1];
  if (*a3)
    v72 = *a3 + 56;
  else
    v72 = 0;
  v504 = v72;
  v505 = v71;
  if (v71)
  {
    v73 = (unint64_t *)&v71->__shared_owners_;
    do
      v74 = __ldxr(v73);
    while (__stxr(v74 + 1, v73));
  }
  if (*(char *)(v72 + 31) < 0)
  {
    sub_223197FA4(v457, *(void **)(v72 + 8), *(_QWORD *)(v72 + 16));
  }
  else
  {
    v75 = *(_OWORD *)(v72 + 8);
    v457[2] = *(void **)(v72 + 24);
    *(_OWORD *)v457 = v75;
  }
  if (*(char *)(v70 + 111) < 0)
  {
    sub_223197FA4(v440, *(void **)(v70 + 88), *(_QWORD *)(v70 + 96));
  }
  else
  {
    *(_OWORD *)v440 = *(_OWORD *)(v70 + 88);
    v440[2] = *(void **)(v70 + 104);
  }
  v539[0] = v67;
  v539[1] = v66;
  v507 = 0;
  v506 = 0;
  *(_QWORD *)&v544 = v72;
  *((_QWORD *)&v544 + 1) = v71;
  if (v71)
  {
    v76 = (unint64_t *)&v71->__shared_owners_;
    do
      v77 = __ldxr(v76);
    while (__stxr(v77 + 1, v76));
  }
  if (SHIBYTE(v457[2]) < 0)
  {
    sub_223197FA4(__p, v457[0], (unint64_t)v457[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v457;
    __p[2] = v457[2];
  }
  if (SHIBYTE(v440[2]) < 0)
  {
    sub_223197FA4(__dst, v440[0], (unint64_t)v440[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v440;
    __dst[2] = v440[2];
  }
  *(void **)((char *)&v543 + 7) = *(void **)((char *)&v457[1] + 7);
  v79 = v457[0];
  v78 = v457[1];
  BYTE7(v543) = HIBYTE(v457[1]);
  v80 = HIBYTE(v457[2]);
  memset(v457, 0, sizeof(v457));
  *(_QWORD *)&v547 = v78;
  *(_QWORD *)((char *)&v547 + 7) = *(_QWORD *)((char *)&v543 + 7);
  *(_QWORD *)((char *)&v543 + 7) = 0;
  *(_QWORD *)&v543 = 0;
  v540[0] = v67;
  v540[1] = v66;
  if (v66)
  {
    v81 = v66 + 1;
    do
      v82 = __ldxr(v81);
    while (__stxr(v82 + 1, v81));
  }
  v83 = (char *)operator new();
  *(_QWORD *)&v549 = v547;
  *(_QWORD *)((char *)&v549 + 7) = *(_QWORD *)((char *)&v547 + 7);
  *(_QWORD *)&v547 = 0;
  *(_QWORD *)((char *)&v547 + 7) = 0;
  v84 = *(_OWORD *)v540;
  v540[0] = 0;
  v540[1] = 0;
  v83[8] = 1;
  *((_QWORD *)v83 + 4) = 0;
  *((_QWORD *)v83 + 5) = 0;
  *(_QWORD *)v83 = &off_24EC45E20;
  *((_QWORD *)v83 + 2) = &unk_24EC45E98;
  *((_QWORD *)v83 + 3) = &unk_24EC45ED8;
  v85 = v549;
  *(_QWORD *)(v83 + 63) = *(_QWORD *)((char *)&v549 + 7);
  *((_QWORD *)v83 + 6) = v79;
  *((_QWORD *)v83 + 7) = v85;
  v83[71] = v80;
  *(_QWORD *)&v549 = 0;
  *(_QWORD *)((char *)&v549 + 7) = 0;
  *(_OWORD *)(v83 + 72) = v84;
  __src[1] = 0;
  __src[0] = 0;
  v86 = (_QWORD *)operator new();
  *v86 = &off_24EC45FD0;
  v86[1] = v72;
  v86[2] = v71;
  v544 = 0uLL;
  *((_QWORD *)v83 + 18) = 0;
  *((_QWORD *)v83 + 11) = v86;
  *((_QWORD *)v83 + 12) = v83 + 96;
  *((_QWORD *)v83 + 13) = v83 + 96;
  *((_QWORD *)v83 + 14) = 0;
  *((_QWORD *)v83 + 15) = v83 + 120;
  *((_QWORD *)v83 + 16) = v83 + 120;
  *((_QWORD *)v83 + 17) = 0;
  if (!*((_QWORD *)v83 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v87 = (std::__shared_weak_count *)operator new();
  v87->__shared_owners_ = 0;
  v88 = (unint64_t *)&v87->__shared_owners_;
  v87->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC464C0;
  v87->__shared_weak_owners_ = 0;
  v87[1].__vftable = (std::__shared_weak_count_vtbl *)v83;
  v89 = (std::__shared_weak_count *)*((_QWORD *)v83 + 5);
  if (v89)
  {
    if (v89->__shared_owners_ != -1)
      goto LABEL_138;
    do
      v90 = __ldxr(v88);
    while (__stxr(v90 + 1, v88));
    v91 = (unint64_t *)&v87->__shared_weak_owners_;
    do
      v92 = __ldxr(v91);
    while (__stxr(v92 + 1, v91));
    *((_QWORD *)v83 + 4) = v83;
    *((_QWORD *)v83 + 5) = v87;
    std::__shared_weak_count::__release_weak(v89);
  }
  else
  {
    do
      v93 = __ldxr(v88);
    while (__stxr(v93 + 1, v88));
    v94 = (unint64_t *)&v87->__shared_weak_owners_;
    do
      v95 = __ldxr(v94);
    while (__stxr(v95 + 1, v94));
    *((_QWORD *)v83 + 4) = v83;
    *((_QWORD *)v83 + 5) = v87;
  }
  do
    v96 = __ldaxr(v88);
  while (__stlxr(v96 - 1, v88));
  if (!v96)
  {
    ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
    std::__shared_weak_count::__release_weak(v87);
  }
LABEL_138:
  v97 = (std::__shared_weak_count *)__src[1];
  if (__src[1])
  {
    v98 = (unint64_t *)((char *)__src[1] + 8);
    do
      v99 = __ldaxr(v98);
    while (__stlxr(v99 - 1, v98));
    if (!v99)
    {
      ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
      std::__shared_weak_count::__release_weak(v97);
    }
  }
  __src[0] = v83;
  __src[1] = v87;
  v100 = (std::__shared_weak_count *)v540[1];
  if (v540[1])
  {
    v101 = (unint64_t *)((char *)v540[1] + 8);
    do
      v102 = __ldaxr(v101);
    while (__stlxr(v102 - 1, v101));
    if (!v102)
    {
      ((void (*)(std::__shared_weak_count *))v100->__on_zero_shared)(v100);
      std::__shared_weak_count::__release_weak(v100);
    }
  }
  v103 = *(_OWORD *)v539;
  v539[0] = 0;
  v539[1] = 0;
  *(_OWORD *)&v508[1] = *(_OWORD *)__p;
  v508[0] = &off_24EC454C0;
  v509 = __p[2];
  memset(__p, 0, sizeof(__p));
  v510 = *(_OWORD *)__dst;
  v104 = __dst[2];
  memset(__dst, 0, sizeof(__dst));
  v512 = v103;
  v540[1] = 0;
  v540[0] = 0;
  v105 = __src[0];
  v106 = (char *)__src[1];
  v511 = v104;
  v513 = *(_OWORD *)__src;
  __src[0] = 0;
  __src[1] = 0;
  if (*((_QWORD *)&v513 + 1))
  {
    v107 = (unint64_t *)(v106 + 16);
    do
      v108 = __ldxr(v107);
    while (__stxr(v108 + 1, v107));
  }
  v514 = &off_24EC2B3B8;
  v109 = (_QWORD *)operator new();
  *v109 = &off_24EC46510;
  v109[1] = v105;
  v109[2] = v106;
  *(_QWORD *)&v515 = v109;
  v111 = *((_QWORD *)&v513 + 1);
  v110 = v513;
  if (!*((_QWORD *)&v513 + 1))
  {
    *((_QWORD *)&v515 + 1) = v513;
    v516 = 0;
    if ((_QWORD)v513)
      v115 = v513 + 16;
    else
      v115 = 0;
    goto LABEL_168;
  }
  v112 = (unint64_t *)(*((_QWORD *)&v513 + 1) + 16);
  do
    v113 = __ldxr(v112);
  while (__stxr(v113 + 1, v112));
  v114 = *((_QWORD *)&v513 + 1);
  *((_QWORD *)&v515 + 1) = v110;
  v516 = v111;
  if ((_QWORD)v513)
    v115 = v513 + 16;
  else
    v115 = 0;
  if (!*((_QWORD *)&v513 + 1))
  {
    v110 = v513;
LABEL_168:
    v118 = 0;
    v517 = &off_24EC454F0;
    v518 = v115;
    goto LABEL_169;
  }
  v116 = (unint64_t *)(*((_QWORD *)&v513 + 1) + 16);
  do
    v117 = __ldxr(v116);
  while (__stxr(v117 + 1, v116));
  v118 = *((_QWORD *)&v513 + 1);
  v110 = v513;
  v517 = &off_24EC454F0;
  *(_QWORD *)&v518 = v115;
  *((_QWORD *)&v518 + 1) = v114;
  if (*((_QWORD *)&v513 + 1))
  {
    v119 = (unint64_t *)(*((_QWORD *)&v513 + 1) + 16);
    do
      v120 = __ldxr(v119);
    while (__stxr(v120 + 1, v119));
  }
LABEL_169:
  if (v110)
    v121 = v110 + 24;
  else
    v121 = 0;
  v519 = &off_24EC2E850;
  *(_QWORD *)&v520 = v121;
  *((_QWORD *)&v520 + 1) = v118;
  if ((SHIBYTE(__dst[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0)
      goto LABEL_174;
LABEL_177:
    operator delete(__p[0]);
    v122 = (std::__shared_weak_count *)*((_QWORD *)&v544 + 1);
    if (!*((_QWORD *)&v544 + 1))
      goto LABEL_182;
    goto LABEL_178;
  }
  operator delete(__dst[0]);
  if (SHIBYTE(__p[2]) < 0)
    goto LABEL_177;
LABEL_174:
  v122 = (std::__shared_weak_count *)*((_QWORD *)&v544 + 1);
  if (!*((_QWORD *)&v544 + 1))
    goto LABEL_182;
LABEL_178:
  v123 = (unint64_t *)&v122->__shared_owners_;
  do
    v124 = __ldaxr(v123);
  while (__stlxr(v124 - 1, v123));
  if (!v124)
  {
    ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
    std::__shared_weak_count::__release_weak(v122);
  }
LABEL_182:
  v125 = (std::__shared_weak_count *)v539[1];
  if (!v539[1])
    goto LABEL_186;
  v126 = (unint64_t *)((char *)v539[1] + 8);
  do
    v127 = __ldaxr(v126);
  while (__stlxr(v127 - 1, v126));
  if (!v127)
  {
    ((void (*)(std::__shared_weak_count *))v125->__on_zero_shared)(v125);
    std::__shared_weak_count::__release_weak(v125);
    if ((SHIBYTE(v440[2]) & 0x80000000) == 0)
    {
LABEL_187:
      if ((SHIBYTE(v457[2]) & 0x80000000) == 0)
        goto LABEL_188;
LABEL_192:
      operator delete(v457[0]);
      if (v504)
        goto LABEL_194;
      goto LABEL_193;
    }
  }
  else
  {
LABEL_186:
    if ((SHIBYTE(v440[2]) & 0x80000000) == 0)
      goto LABEL_187;
  }
  operator delete(v440[0]);
  if (SHIBYTE(v457[2]) < 0)
    goto LABEL_192;
LABEL_188:
  if (v504)
    goto LABEL_194;
LABEL_193:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_194:
  v129 = *(void **)a2;
  v128 = *(unint64_t **)(a2 + 8);
  v489 = *(void **)a2;
  v490 = (std::__shared_weak_count *)v128;
  if (v128)
  {
    v130 = v128 + 1;
    do
      v131 = __ldxr(v130);
    while (__stxr(v131 + 1, v130));
  }
  v132 = *a3;
  v133 = (std::__shared_weak_count *)a3[1];
  if (*a3)
    v134 = *a3 + 112;
  else
    v134 = 0;
  v487 = v134;
  v488 = v133;
  if (v133)
  {
    v135 = (unint64_t *)&v133->__shared_owners_;
    do
      v136 = __ldxr(v135);
    while (__stxr(v136 + 1, v135));
  }
  if (*(char *)(v134 + 31) < 0)
  {
    sub_223197FA4(v440, *(void **)(v134 + 8), *(_QWORD *)(v134 + 16));
  }
  else
  {
    v137 = *(_OWORD *)(v134 + 8);
    v440[2] = *(void **)(v134 + 24);
    *(_OWORD *)v440 = v137;
  }
  if (*(char *)(v132 + 167) < 0)
  {
    sub_223197FA4(__src, *(void **)(v132 + 144), *(_QWORD *)(v132 + 152));
  }
  else
  {
    *(_OWORD *)__src = *(_OWORD *)(v132 + 144);
    __src[2] = *(void **)(v132 + 160);
  }
  *(_QWORD *)&v544 = v129;
  *((_QWORD *)&v544 + 1) = v128;
  v490 = 0;
  v489 = 0;
  *(_QWORD *)&v549 = v134;
  *((_QWORD *)&v549 + 1) = v133;
  if (v133)
  {
    v138 = (unint64_t *)&v133->__shared_owners_;
    do
      v139 = __ldxr(v138);
    while (__stxr(v139 + 1, v138));
  }
  if (SHIBYTE(v440[2]) < 0)
  {
    sub_223197FA4(__dst, v440[0], (unint64_t)v440[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v440;
    __dst[2] = v440[2];
  }
  if (SHIBYTE(__src[2]) < 0)
  {
    sub_223197FA4(v457, __src[0], (unint64_t)__src[1]);
  }
  else
  {
    *(_OWORD *)v457 = *(_OWORD *)__src;
    v457[2] = __src[2];
  }
  *(void **)((char *)&v542 + 7) = *(void **)((char *)&v440[1] + 7);
  v141 = v440[0];
  v140 = v440[1];
  BYTE7(v542) = HIBYTE(v440[1]);
  v142 = HIBYTE(v440[2]);
  memset(v440, 0, sizeof(v440));
  *(_QWORD *)&v543 = v140;
  *(_QWORD *)((char *)&v543 + 7) = *(_QWORD *)((char *)&v542 + 7);
  *(_QWORD *)((char *)&v542 + 7) = 0;
  *(_QWORD *)&v542 = 0;
  v539[0] = v129;
  v539[1] = v128;
  if (v128)
  {
    v143 = v128 + 1;
    do
      v144 = __ldxr(v143);
    while (__stxr(v144 + 1, v143));
  }
  v145 = (char *)operator new();
  *(_QWORD *)&v547 = v543;
  *(_QWORD *)((char *)&v547 + 7) = *(_QWORD *)((char *)&v543 + 7);
  *(_QWORD *)&v543 = 0;
  *(_QWORD *)((char *)&v543 + 7) = 0;
  v146 = *(_OWORD *)v539;
  v539[0] = 0;
  v539[1] = 0;
  v145[8] = 1;
  *((_QWORD *)v145 + 4) = 0;
  *((_QWORD *)v145 + 5) = 0;
  *(_QWORD *)v145 = &off_24EC46578;
  *((_QWORD *)v145 + 2) = &unk_24EC465F0;
  *((_QWORD *)v145 + 3) = &unk_24EC46630;
  v147 = v547;
  *(_QWORD *)(v145 + 63) = *(_QWORD *)((char *)&v547 + 7);
  *((_QWORD *)v145 + 6) = v141;
  *((_QWORD *)v145 + 7) = v147;
  v145[71] = v142;
  *(_QWORD *)&v547 = 0;
  *(_QWORD *)((char *)&v547 + 7) = 0;
  *(_OWORD *)(v145 + 72) = v146;
  v540[1] = 0;
  v540[0] = 0;
  v148 = (_QWORD *)operator new();
  *v148 = &off_24EC46728;
  v148[1] = v134;
  v148[2] = v133;
  v549 = 0uLL;
  *((_QWORD *)v145 + 18) = 0;
  *((_QWORD *)v145 + 11) = v148;
  *((_QWORD *)v145 + 12) = v145 + 96;
  *((_QWORD *)v145 + 13) = v145 + 96;
  *((_QWORD *)v145 + 14) = 0;
  *((_QWORD *)v145 + 15) = v145 + 120;
  *((_QWORD *)v145 + 16) = v145 + 120;
  *((_QWORD *)v145 + 17) = 0;
  if (!*((_QWORD *)v145 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v149 = (std::__shared_weak_count *)operator new();
  v149->__shared_owners_ = 0;
  v150 = (unint64_t *)&v149->__shared_owners_;
  v149->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46C18;
  v149->__shared_weak_owners_ = 0;
  v149[1].__vftable = (std::__shared_weak_count_vtbl *)v145;
  v151 = (std::__shared_weak_count *)*((_QWORD *)v145 + 5);
  if (v151)
  {
    if (v151->__shared_owners_ != -1)
      goto LABEL_236;
    do
      v152 = __ldxr(v150);
    while (__stxr(v152 + 1, v150));
    v153 = (unint64_t *)&v149->__shared_weak_owners_;
    do
      v154 = __ldxr(v153);
    while (__stxr(v154 + 1, v153));
    *((_QWORD *)v145 + 4) = v145;
    *((_QWORD *)v145 + 5) = v149;
    std::__shared_weak_count::__release_weak(v151);
  }
  else
  {
    do
      v155 = __ldxr(v150);
    while (__stxr(v155 + 1, v150));
    v156 = (unint64_t *)&v149->__shared_weak_owners_;
    do
      v157 = __ldxr(v156);
    while (__stxr(v157 + 1, v156));
    *((_QWORD *)v145 + 4) = v145;
    *((_QWORD *)v145 + 5) = v149;
  }
  do
    v158 = __ldaxr(v150);
  while (__stlxr(v158 - 1, v150));
  if (!v158)
  {
    ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
    std::__shared_weak_count::__release_weak(v149);
  }
LABEL_236:
  v159 = (std::__shared_weak_count *)v540[1];
  if (v540[1])
  {
    v160 = (unint64_t *)((char *)v540[1] + 8);
    do
      v161 = __ldaxr(v160);
    while (__stlxr(v161 - 1, v160));
    if (!v161)
    {
      ((void (*)(std::__shared_weak_count *))v159->__on_zero_shared)(v159);
      std::__shared_weak_count::__release_weak(v159);
    }
  }
  v540[0] = v145;
  v540[1] = v149;
  v162 = (std::__shared_weak_count *)v539[1];
  if (v539[1])
  {
    v163 = (unint64_t *)((char *)v539[1] + 8);
    do
      v164 = __ldaxr(v163);
    while (__stlxr(v164 - 1, v163));
    if (!v164)
    {
      ((void (*)(std::__shared_weak_count *))v162->__on_zero_shared)(v162);
      std::__shared_weak_count::__release_weak(v162);
    }
  }
  v165 = v544;
  v544 = 0uLL;
  *(_OWORD *)&__p[1] = *(_OWORD *)__dst;
  __p[0] = &off_24EC45528;
  v492 = __dst[2];
  memset(__dst, 0, sizeof(__dst));
  v493 = *(_OWORD *)v457;
  v166 = v457[2];
  memset(v457, 0, sizeof(v457));
  v495 = v165;
  v539[1] = 0;
  v539[0] = 0;
  v167 = v540[0];
  v168 = (char *)v540[1];
  v494 = v166;
  v496 = *(_OWORD *)v540;
  v540[0] = 0;
  v540[1] = 0;
  if (*((_QWORD *)&v496 + 1))
  {
    v169 = (unint64_t *)(v168 + 16);
    do
      v170 = __ldxr(v169);
    while (__stxr(v170 + 1, v169));
  }
  v497 = &off_24EC2B3F0;
  v171 = (_QWORD *)operator new();
  *v171 = &off_24EC46C68;
  v171[1] = v167;
  v171[2] = v168;
  *(_QWORD *)&v498 = v171;
  v173 = *((_QWORD *)&v496 + 1);
  v172 = v496;
  if (!*((_QWORD *)&v496 + 1))
  {
    *((_QWORD *)&v498 + 1) = v496;
    v499 = 0;
    if ((_QWORD)v496)
      v177 = v496 + 16;
    else
      v177 = 0;
    goto LABEL_266;
  }
  v174 = (unint64_t *)(*((_QWORD *)&v496 + 1) + 16);
  do
    v175 = __ldxr(v174);
  while (__stxr(v175 + 1, v174));
  v176 = *((_QWORD *)&v496 + 1);
  *((_QWORD *)&v498 + 1) = v172;
  v499 = v173;
  if ((_QWORD)v496)
    v177 = v496 + 16;
  else
    v177 = 0;
  if (!*((_QWORD *)&v496 + 1))
  {
    v172 = v496;
LABEL_266:
    v180 = 0;
    v500 = &off_24EC45558;
    v501 = v177;
    goto LABEL_267;
  }
  v178 = (unint64_t *)(*((_QWORD *)&v496 + 1) + 16);
  do
    v179 = __ldxr(v178);
  while (__stxr(v179 + 1, v178));
  v180 = *((_QWORD *)&v496 + 1);
  v172 = v496;
  v500 = &off_24EC45558;
  *(_QWORD *)&v501 = v177;
  *((_QWORD *)&v501 + 1) = v176;
  if (*((_QWORD *)&v496 + 1))
  {
    v181 = (unint64_t *)(*((_QWORD *)&v496 + 1) + 16);
    do
      v182 = __ldxr(v181);
    while (__stxr(v182 + 1, v181));
  }
LABEL_267:
  if (v172)
    v183 = v172 + 24;
  else
    v183 = 0;
  v502 = &off_24EC2E850;
  *(_QWORD *)&v503 = v183;
  *((_QWORD *)&v503 + 1) = v180;
  if ((SHIBYTE(v457[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__dst[2]) & 0x80000000) == 0)
      goto LABEL_272;
LABEL_275:
    operator delete(__dst[0]);
    v184 = (std::__shared_weak_count *)*((_QWORD *)&v549 + 1);
    if (!*((_QWORD *)&v549 + 1))
      goto LABEL_280;
    goto LABEL_276;
  }
  operator delete(v457[0]);
  if (SHIBYTE(__dst[2]) < 0)
    goto LABEL_275;
LABEL_272:
  v184 = (std::__shared_weak_count *)*((_QWORD *)&v549 + 1);
  if (!*((_QWORD *)&v549 + 1))
    goto LABEL_280;
LABEL_276:
  v185 = (unint64_t *)&v184->__shared_owners_;
  do
    v186 = __ldaxr(v185);
  while (__stlxr(v186 - 1, v185));
  if (!v186)
  {
    ((void (*)(std::__shared_weak_count *))v184->__on_zero_shared)(v184);
    std::__shared_weak_count::__release_weak(v184);
  }
LABEL_280:
  v187 = (std::__shared_weak_count *)*((_QWORD *)&v544 + 1);
  if (!*((_QWORD *)&v544 + 1))
    goto LABEL_284;
  v188 = (unint64_t *)(*((_QWORD *)&v544 + 1) + 8);
  do
    v189 = __ldaxr(v188);
  while (__stlxr(v189 - 1, v188));
  if (!v189)
  {
    ((void (*)(std::__shared_weak_count *))v187->__on_zero_shared)(v187);
    std::__shared_weak_count::__release_weak(v187);
    if ((SHIBYTE(__src[2]) & 0x80000000) == 0)
    {
LABEL_285:
      if ((SHIBYTE(v440[2]) & 0x80000000) == 0)
        goto LABEL_286;
LABEL_290:
      operator delete(v440[0]);
      if (v487)
        goto LABEL_292;
      goto LABEL_291;
    }
  }
  else
  {
LABEL_284:
    if ((SHIBYTE(__src[2]) & 0x80000000) == 0)
      goto LABEL_285;
  }
  operator delete(__src[0]);
  if (SHIBYTE(v440[2]) < 0)
    goto LABEL_290;
LABEL_286:
  if (v487)
    goto LABEL_292;
LABEL_291:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_292:
  v191 = *(void **)a2;
  v190 = *(std::__shared_weak_count **)(a2 + 8);
  v472 = *(void **)a2;
  v473 = v190;
  if (v190)
  {
    v192 = (unint64_t *)&v190->__shared_owners_;
    do
      v193 = __ldxr(v192);
    while (__stxr(v193 + 1, v192));
  }
  v194 = *a3;
  v195 = (std::__shared_weak_count *)a3[1];
  if (*a3)
    v196 = *a3 + 168;
  else
    v196 = 0;
  v470 = v196;
  v471 = v195;
  if (v195)
  {
    v197 = (unint64_t *)&v195->__shared_owners_;
    do
      v198 = __ldxr(v197);
    while (__stxr(v198 + 1, v197));
  }
  if (*(char *)(v196 + 31) < 0)
  {
    sub_223197FA4(__src, *(void **)(v196 + 8), *(_QWORD *)(v196 + 16));
  }
  else
  {
    v199 = *(_OWORD *)(v196 + 8);
    __src[2] = *(void **)(v196 + 24);
    *(_OWORD *)__src = v199;
  }
  if (*(char *)(v194 + 223) < 0)
  {
    sub_223197FA4(v540, *(void **)(v194 + 200), *(_QWORD *)(v194 + 208));
  }
  else
  {
    *(_OWORD *)v540 = *(_OWORD *)(v194 + 200);
    v540[2] = *(void **)(v194 + 216);
  }
  *(_QWORD *)&v549 = v191;
  *((_QWORD *)&v549 + 1) = v190;
  v473 = 0;
  v472 = 0;
  *(_QWORD *)&v547 = v196;
  *((_QWORD *)&v547 + 1) = v195;
  if (v195)
  {
    v200 = (unint64_t *)&v195->__shared_owners_;
    do
      v201 = __ldxr(v200);
    while (__stxr(v201 + 1, v200));
  }
  if (SHIBYTE(__src[2]) < 0)
  {
    sub_223197FA4(v457, __src[0], (unint64_t)__src[1]);
  }
  else
  {
    *(_OWORD *)v457 = *(_OWORD *)__src;
    v457[2] = __src[2];
  }
  if (SHIBYTE(v540[2]) < 0)
  {
    sub_223197FA4(v440, v540[0], (unint64_t)v540[1]);
  }
  else
  {
    *(_OWORD *)v440 = *(_OWORD *)v540;
    v440[2] = v540[2];
  }
  *(void **)((char *)v550 + 7) = *(void **)((char *)&__src[1] + 7);
  v202 = __src[0];
  v203 = __src[1];
  HIBYTE(v550[0]) = HIBYTE(__src[1]);
  v204 = HIBYTE(__src[2]);
  memset(__src, 0, 24);
  *(_QWORD *)&v542 = v203;
  *(_QWORD *)((char *)&v542 + 7) = *(_QWORD *)((char *)v550 + 7);
  *(_QWORD *)((char *)v550 + 7) = 0;
  v550[0] = 0;
  *(_QWORD *)&v544 = v191;
  *((_QWORD *)&v544 + 1) = v190;
  if (v190)
  {
    v205 = (unint64_t *)&v190->__shared_owners_;
    do
      v206 = __ldxr(v205);
    while (__stxr(v206 + 1, v205));
  }
  v207 = (char *)operator new();
  *(_QWORD *)&v543 = v542;
  *(_QWORD *)((char *)&v543 + 7) = *(_QWORD *)((char *)&v542 + 7);
  *(_QWORD *)&v542 = 0;
  *(_QWORD *)((char *)&v542 + 7) = 0;
  v208 = v544;
  v544 = 0uLL;
  v207[8] = 1;
  *((_QWORD *)v207 + 4) = 0;
  *((_QWORD *)v207 + 5) = 0;
  *(_QWORD *)v207 = &off_24EC46CD0;
  *((_QWORD *)v207 + 2) = &unk_24EC46D48;
  *((_QWORD *)v207 + 3) = &unk_24EC46D88;
  v209 = v543;
  *(_QWORD *)(v207 + 63) = *(_QWORD *)((char *)&v543 + 7);
  *((_QWORD *)v207 + 6) = v202;
  *((_QWORD *)v207 + 7) = v209;
  v207[71] = v204;
  *(_QWORD *)&v543 = 0;
  *(_QWORD *)((char *)&v543 + 7) = 0;
  *(_OWORD *)(v207 + 72) = v208;
  v539[1] = 0;
  v539[0] = 0;
  v210 = (_QWORD *)operator new();
  *v210 = &off_24EC46E80;
  v210[1] = v196;
  v210[2] = v195;
  v547 = 0uLL;
  *((_QWORD *)v207 + 18) = 0;
  *((_QWORD *)v207 + 11) = v210;
  *((_QWORD *)v207 + 12) = v207 + 96;
  *((_QWORD *)v207 + 13) = v207 + 96;
  *((_QWORD *)v207 + 14) = 0;
  *((_QWORD *)v207 + 15) = v207 + 120;
  *((_QWORD *)v207 + 16) = v207 + 120;
  *((_QWORD *)v207 + 17) = 0;
  if (!*((_QWORD *)v207 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v211 = (std::__shared_weak_count *)operator new();
  v211->__shared_owners_ = 0;
  v212 = (unint64_t *)&v211->__shared_owners_;
  v211->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47370;
  v211->__shared_weak_owners_ = 0;
  v211[1].__vftable = (std::__shared_weak_count_vtbl *)v207;
  v213 = (std::__shared_weak_count *)*((_QWORD *)v207 + 5);
  if (v213)
  {
    if (v213->__shared_owners_ != -1)
      goto LABEL_334;
    do
      v214 = __ldxr(v212);
    while (__stxr(v214 + 1, v212));
    v215 = (unint64_t *)&v211->__shared_weak_owners_;
    do
      v216 = __ldxr(v215);
    while (__stxr(v216 + 1, v215));
    *((_QWORD *)v207 + 4) = v207;
    *((_QWORD *)v207 + 5) = v211;
    std::__shared_weak_count::__release_weak(v213);
  }
  else
  {
    do
      v217 = __ldxr(v212);
    while (__stxr(v217 + 1, v212));
    v218 = (unint64_t *)&v211->__shared_weak_owners_;
    do
      v219 = __ldxr(v218);
    while (__stxr(v219 + 1, v218));
    *((_QWORD *)v207 + 4) = v207;
    *((_QWORD *)v207 + 5) = v211;
  }
  do
    v220 = __ldaxr(v212);
  while (__stlxr(v220 - 1, v212));
  if (!v220)
  {
    ((void (*)(std::__shared_weak_count *))v211->__on_zero_shared)(v211);
    std::__shared_weak_count::__release_weak(v211);
  }
LABEL_334:
  v221 = (std::__shared_weak_count *)v539[1];
  if (v539[1])
  {
    v222 = (unint64_t *)((char *)v539[1] + 8);
    do
      v223 = __ldaxr(v222);
    while (__stlxr(v223 - 1, v222));
    if (!v223)
    {
      ((void (*)(std::__shared_weak_count *))v221->__on_zero_shared)(v221);
      std::__shared_weak_count::__release_weak(v221);
    }
  }
  v539[0] = v207;
  v539[1] = v211;
  v224 = (std::__shared_weak_count *)*((_QWORD *)&v544 + 1);
  if (*((_QWORD *)&v544 + 1))
  {
    v225 = (unint64_t *)(*((_QWORD *)&v544 + 1) + 8);
    do
      v226 = __ldaxr(v225);
    while (__stlxr(v226 - 1, v225));
    if (!v226)
    {
      ((void (*)(std::__shared_weak_count *))v224->__on_zero_shared)(v224);
      std::__shared_weak_count::__release_weak(v224);
    }
  }
  v227 = v549;
  v549 = 0uLL;
  *(_OWORD *)&__dst[1] = *(_OWORD *)v457;
  __dst[0] = &off_24EC45590;
  v475 = v457[2];
  memset(v457, 0, sizeof(v457));
  v476 = *(_OWORD *)v440;
  v228 = v440[2];
  memset(v440, 0, sizeof(v440));
  v478 = v227;
  v544 = 0uLL;
  v229 = v539[0];
  v230 = (char *)v539[1];
  v477 = v228;
  v479 = *(_OWORD *)v539;
  v539[0] = 0;
  v539[1] = 0;
  if (*((_QWORD *)&v479 + 1))
  {
    v231 = (unint64_t *)(v230 + 16);
    do
      v232 = __ldxr(v231);
    while (__stxr(v232 + 1, v231));
  }
  v480 = &off_24EC2B428;
  v233 = (_QWORD *)operator new();
  *v233 = &off_24EC473C0;
  v233[1] = v229;
  v233[2] = v230;
  *(_QWORD *)&v481 = v233;
  v235 = *((_QWORD *)&v479 + 1);
  v234 = v479;
  if (!*((_QWORD *)&v479 + 1))
  {
    *((_QWORD *)&v481 + 1) = v479;
    v482 = 0;
    if ((_QWORD)v479)
      v239 = v479 + 16;
    else
      v239 = 0;
    goto LABEL_364;
  }
  v236 = (unint64_t *)(*((_QWORD *)&v479 + 1) + 16);
  do
    v237 = __ldxr(v236);
  while (__stxr(v237 + 1, v236));
  v238 = *((_QWORD *)&v479 + 1);
  *((_QWORD *)&v481 + 1) = v234;
  v482 = v235;
  if ((_QWORD)v479)
    v239 = v479 + 16;
  else
    v239 = 0;
  if (!*((_QWORD *)&v479 + 1))
  {
    v234 = v479;
LABEL_364:
    v242 = 0;
    v483 = &off_24EC455C0;
    v484 = v239;
    goto LABEL_365;
  }
  v240 = (unint64_t *)(*((_QWORD *)&v479 + 1) + 16);
  do
    v241 = __ldxr(v240);
  while (__stxr(v241 + 1, v240));
  v242 = *((_QWORD *)&v479 + 1);
  v234 = v479;
  v483 = &off_24EC455C0;
  *(_QWORD *)&v484 = v239;
  *((_QWORD *)&v484 + 1) = v238;
  if (*((_QWORD *)&v479 + 1))
  {
    v243 = (unint64_t *)(*((_QWORD *)&v479 + 1) + 16);
    do
      v244 = __ldxr(v243);
    while (__stxr(v244 + 1, v243));
  }
LABEL_365:
  if (v234)
    v245 = v234 + 24;
  else
    v245 = 0;
  v485 = &off_24EC2E850;
  *(_QWORD *)&v486 = v245;
  *((_QWORD *)&v486 + 1) = v242;
  if ((SHIBYTE(v440[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v457[2]) & 0x80000000) == 0)
      goto LABEL_370;
LABEL_373:
    operator delete(v457[0]);
    v246 = (std::__shared_weak_count *)*((_QWORD *)&v547 + 1);
    if (!*((_QWORD *)&v547 + 1))
      goto LABEL_378;
    goto LABEL_374;
  }
  operator delete(v440[0]);
  if (SHIBYTE(v457[2]) < 0)
    goto LABEL_373;
LABEL_370:
  v246 = (std::__shared_weak_count *)*((_QWORD *)&v547 + 1);
  if (!*((_QWORD *)&v547 + 1))
    goto LABEL_378;
LABEL_374:
  v247 = (unint64_t *)&v246->__shared_owners_;
  do
    v248 = __ldaxr(v247);
  while (__stlxr(v248 - 1, v247));
  if (!v248)
  {
    ((void (*)(std::__shared_weak_count *))v246->__on_zero_shared)(v246);
    std::__shared_weak_count::__release_weak(v246);
  }
LABEL_378:
  v249 = (std::__shared_weak_count *)*((_QWORD *)&v549 + 1);
  if (!*((_QWORD *)&v549 + 1))
    goto LABEL_382;
  v250 = (unint64_t *)(*((_QWORD *)&v549 + 1) + 8);
  do
    v251 = __ldaxr(v250);
  while (__stlxr(v251 - 1, v250));
  if (!v251)
  {
    ((void (*)(std::__shared_weak_count *))v249->__on_zero_shared)(v249);
    std::__shared_weak_count::__release_weak(v249);
    if ((SHIBYTE(v540[2]) & 0x80000000) == 0)
    {
LABEL_383:
      if ((SHIBYTE(__src[2]) & 0x80000000) == 0)
        goto LABEL_384;
LABEL_388:
      operator delete(__src[0]);
      if (v470)
        goto LABEL_390;
      goto LABEL_389;
    }
  }
  else
  {
LABEL_382:
    if ((SHIBYTE(v540[2]) & 0x80000000) == 0)
      goto LABEL_383;
  }
  operator delete(v540[0]);
  if (SHIBYTE(__src[2]) < 0)
    goto LABEL_388;
LABEL_384:
  if (v470)
    goto LABEL_390;
LABEL_389:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_390:
  v253 = *(void **)a2;
  v252 = *(std::__shared_weak_count **)(a2 + 8);
  v455 = *(void **)a2;
  v456 = v252;
  if (v252)
  {
    v254 = (unint64_t *)&v252->__shared_owners_;
    do
      v255 = __ldxr(v254);
    while (__stxr(v255 + 1, v254));
  }
  v257 = *a3;
  v256 = (std::__shared_weak_count *)a3[1];
  if (*a3)
    v258 = *a3 + 224;
  else
    v258 = 0;
  v453 = v258;
  v454 = v256;
  if (v256)
  {
    v259 = (unint64_t *)&v256->__shared_owners_;
    do
      v260 = __ldxr(v259);
    while (__stxr(v260 + 1, v259));
  }
  if (*(char *)(v258 + 31) < 0)
  {
    sub_223197FA4(v540, *(void **)(v258 + 8), *(_QWORD *)(v258 + 16));
  }
  else
  {
    v261 = *(_OWORD *)(v258 + 8);
    v540[2] = *(void **)(v258 + 24);
    *(_OWORD *)v540 = v261;
  }
  if (*(char *)(v257 + 279) < 0)
  {
    sub_223197FA4(v539, *(void **)(v257 + 256), *(_QWORD *)(v257 + 264));
  }
  else
  {
    *(_OWORD *)v539 = *(_OWORD *)(v257 + 256);
    v539[2] = *(void **)(v257 + 272);
  }
  *(_QWORD *)&v547 = v253;
  *((_QWORD *)&v547 + 1) = v252;
  v455 = 0;
  v456 = 0;
  *(_QWORD *)&v543 = v258;
  *((_QWORD *)&v543 + 1) = v256;
  if (v256)
  {
    v262 = (unint64_t *)&v256->__shared_owners_;
    do
      v263 = __ldxr(v262);
    while (__stxr(v263 + 1, v262));
  }
  if (SHIBYTE(v540[2]) < 0)
  {
    sub_223197FA4(v440, v540[0], (unint64_t)v540[1]);
  }
  else
  {
    *(_OWORD *)v440 = *(_OWORD *)v540;
    v440[2] = v540[2];
  }
  if (SHIBYTE(v539[2]) < 0)
  {
    sub_223197FA4(__src, v539[0], (unint64_t)v539[1]);
  }
  else
  {
    *(_OWORD *)__src = *(_OWORD *)v539;
    __src[2] = v539[2];
  }
  *(void **)((char *)v548 + 7) = *(void **)((char *)&v540[1] + 7);
  v264 = v540[0];
  v265 = v540[1];
  HIBYTE(v548[0]) = HIBYTE(v540[1]);
  v266 = HIBYTE(v540[2]);
  memset(v540, 0, 24);
  v550[0] = v265;
  *(_QWORD *)((char *)v550 + 7) = *(_QWORD *)((char *)v548 + 7);
  *(_QWORD *)((char *)v548 + 7) = 0;
  v548[0] = 0;
  *(_QWORD *)&v549 = v253;
  *((_QWORD *)&v549 + 1) = v252;
  if (v252)
  {
    v267 = (unint64_t *)&v252->__shared_owners_;
    do
      v268 = __ldxr(v267);
    while (__stxr(v268 + 1, v267));
  }
  v269 = operator new();
  *(_QWORD *)&v542 = v550[0];
  *(_QWORD *)((char *)&v542 + 7) = *(_QWORD *)((char *)v550 + 7);
  v550[0] = 0;
  *(_QWORD *)((char *)v550 + 7) = 0;
  v270 = v549;
  v549 = 0uLL;
  *(_BYTE *)(v269 + 8) = 1;
  *(_QWORD *)(v269 + 32) = 0;
  *(_QWORD *)(v269 + 40) = 0;
  *(_QWORD *)v269 = &off_24EC47428;
  *(_QWORD *)(v269 + 16) = &unk_24EC474A0;
  *(_QWORD *)(v269 + 24) = &unk_24EC474E0;
  v271 = v542;
  *(_QWORD *)(v269 + 63) = *(_QWORD *)((char *)&v542 + 7);
  *(_QWORD *)(v269 + 48) = v264;
  *(_QWORD *)(v269 + 56) = v271;
  *(_BYTE *)(v269 + 71) = v266;
  *(_QWORD *)&v542 = 0;
  *(_QWORD *)((char *)&v542 + 7) = 0;
  *(_OWORD *)(v269 + 72) = v270;
  v544 = 0uLL;
  v272 = (_QWORD *)operator new();
  *v272 = &off_24EC475D8;
  v272[1] = v258;
  v272[2] = v256;
  v543 = 0uLL;
  *(_QWORD *)(v269 + 144) = 0;
  *(_QWORD *)(v269 + 88) = v272;
  *(_QWORD *)(v269 + 96) = v269 + 96;
  *(_QWORD *)(v269 + 104) = v269 + 96;
  *(_QWORD *)(v269 + 112) = 0;
  *(_QWORD *)(v269 + 120) = v269 + 120;
  *(_QWORD *)(v269 + 128) = v269 + 120;
  *(_QWORD *)(v269 + 136) = 0;
  if (!*(_QWORD *)(v269 + 72)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v273 = (std::__shared_weak_count *)operator new();
  v273->__shared_owners_ = 0;
  v274 = (unint64_t *)&v273->__shared_owners_;
  v273->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47AC8;
  v273->__shared_weak_owners_ = 0;
  v273[1].__vftable = (std::__shared_weak_count_vtbl *)v269;
  v275 = *(std::__shared_weak_count **)(v269 + 40);
  if (v275)
  {
    if (v275->__shared_owners_ != -1)
      goto LABEL_432;
    do
      v276 = __ldxr(v274);
    while (__stxr(v276 + 1, v274));
    v277 = (unint64_t *)&v273->__shared_weak_owners_;
    do
      v278 = __ldxr(v277);
    while (__stxr(v278 + 1, v277));
    *(_QWORD *)(v269 + 32) = v269;
    *(_QWORD *)(v269 + 40) = v273;
    std::__shared_weak_count::__release_weak(v275);
  }
  else
  {
    do
      v279 = __ldxr(v274);
    while (__stxr(v279 + 1, v274));
    v280 = (unint64_t *)&v273->__shared_weak_owners_;
    do
      v281 = __ldxr(v280);
    while (__stxr(v281 + 1, v280));
    *(_QWORD *)(v269 + 32) = v269;
    *(_QWORD *)(v269 + 40) = v273;
  }
  do
    v282 = __ldaxr(v274);
  while (__stlxr(v282 - 1, v274));
  if (!v282)
  {
    ((void (*)(std::__shared_weak_count *))v273->__on_zero_shared)(v273);
    std::__shared_weak_count::__release_weak(v273);
  }
LABEL_432:
  v283 = (std::__shared_weak_count *)*((_QWORD *)&v544 + 1);
  if (*((_QWORD *)&v544 + 1))
  {
    v284 = (unint64_t *)(*((_QWORD *)&v544 + 1) + 8);
    do
      v285 = __ldaxr(v284);
    while (__stlxr(v285 - 1, v284));
    if (!v285)
    {
      ((void (*)(std::__shared_weak_count *))v283->__on_zero_shared)(v283);
      std::__shared_weak_count::__release_weak(v283);
    }
  }
  *(_QWORD *)&v544 = v269;
  *((_QWORD *)&v544 + 1) = v273;
  v286 = (std::__shared_weak_count *)*((_QWORD *)&v549 + 1);
  if (*((_QWORD *)&v549 + 1))
  {
    v287 = (unint64_t *)(*((_QWORD *)&v549 + 1) + 8);
    do
      v288 = __ldaxr(v287);
    while (__stlxr(v288 - 1, v287));
    if (!v288)
    {
      ((void (*)(std::__shared_weak_count *))v286->__on_zero_shared)(v286);
      std::__shared_weak_count::__release_weak(v286);
    }
  }
  v289 = v547;
  v547 = 0uLL;
  *(_OWORD *)&v457[1] = *(_OWORD *)v440;
  v457[0] = &off_24EC455F8;
  v458 = v440[2];
  memset(v440, 0, sizeof(v440));
  v459 = *(_OWORD *)__src;
  v290 = __src[2];
  memset(__src, 0, 24);
  v461 = v289;
  v549 = 0uLL;
  v291 = v544;
  v460 = v290;
  v462 = v544;
  v544 = 0uLL;
  if (*((_QWORD *)&v462 + 1))
  {
    v292 = (unint64_t *)(*((_QWORD *)&v291 + 1) + 16);
    do
      v293 = __ldxr(v292);
    while (__stxr(v293 + 1, v292));
  }
  v463 = &off_24EC2B460;
  v294 = operator new();
  *(_QWORD *)v294 = &off_24EC47B18;
  *(_OWORD *)(v294 + 8) = v291;
  *(_QWORD *)&v464 = v294;
  v296 = *((_QWORD *)&v462 + 1);
  v295 = v462;
  if (!*((_QWORD *)&v462 + 1))
  {
    *((_QWORD *)&v464 + 1) = v462;
    v465 = 0;
    if ((_QWORD)v462)
      v300 = v462 + 16;
    else
      v300 = 0;
    goto LABEL_462;
  }
  v297 = (unint64_t *)(*((_QWORD *)&v462 + 1) + 16);
  do
    v298 = __ldxr(v297);
  while (__stxr(v298 + 1, v297));
  v299 = *((_QWORD *)&v462 + 1);
  *((_QWORD *)&v464 + 1) = v295;
  v465 = v296;
  if ((_QWORD)v462)
    v300 = v462 + 16;
  else
    v300 = 0;
  if (!*((_QWORD *)&v462 + 1))
  {
    v295 = v462;
LABEL_462:
    v303 = 0;
    v466 = &off_24EC45628;
    v467 = v300;
    goto LABEL_463;
  }
  v301 = (unint64_t *)(*((_QWORD *)&v462 + 1) + 16);
  do
    v302 = __ldxr(v301);
  while (__stxr(v302 + 1, v301));
  v303 = *((_QWORD *)&v462 + 1);
  v295 = v462;
  v466 = &off_24EC45628;
  *(_QWORD *)&v467 = v300;
  *((_QWORD *)&v467 + 1) = v299;
  if (*((_QWORD *)&v462 + 1))
  {
    v304 = (unint64_t *)(*((_QWORD *)&v462 + 1) + 16);
    do
      v305 = __ldxr(v304);
    while (__stxr(v305 + 1, v304));
  }
LABEL_463:
  if (v295)
    v306 = v295 + 24;
  else
    v306 = 0;
  v468 = &off_24EC2E850;
  *(_QWORD *)&v469 = v306;
  *((_QWORD *)&v469 + 1) = v303;
  if ((SHIBYTE(__src[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v440[2]) & 0x80000000) == 0)
      goto LABEL_468;
LABEL_471:
    operator delete(v440[0]);
    v307 = (std::__shared_weak_count *)*((_QWORD *)&v543 + 1);
    if (!*((_QWORD *)&v543 + 1))
      goto LABEL_476;
    goto LABEL_472;
  }
  operator delete(__src[0]);
  if (SHIBYTE(v440[2]) < 0)
    goto LABEL_471;
LABEL_468:
  v307 = (std::__shared_weak_count *)*((_QWORD *)&v543 + 1);
  if (!*((_QWORD *)&v543 + 1))
    goto LABEL_476;
LABEL_472:
  v308 = (unint64_t *)&v307->__shared_owners_;
  do
    v309 = __ldaxr(v308);
  while (__stlxr(v309 - 1, v308));
  if (!v309)
  {
    ((void (*)(std::__shared_weak_count *))v307->__on_zero_shared)(v307);
    std::__shared_weak_count::__release_weak(v307);
  }
LABEL_476:
  v310 = (std::__shared_weak_count *)*((_QWORD *)&v547 + 1);
  if (!*((_QWORD *)&v547 + 1))
    goto LABEL_480;
  v311 = (unint64_t *)(*((_QWORD *)&v547 + 1) + 8);
  do
    v312 = __ldaxr(v311);
  while (__stlxr(v312 - 1, v311));
  if (!v312)
  {
    ((void (*)(std::__shared_weak_count *))v310->__on_zero_shared)(v310);
    std::__shared_weak_count::__release_weak(v310);
    if ((SHIBYTE(v539[2]) & 0x80000000) == 0)
    {
LABEL_481:
      if ((SHIBYTE(v540[2]) & 0x80000000) == 0)
        goto LABEL_482;
LABEL_486:
      operator delete(v540[0]);
      if (v453)
        goto LABEL_488;
      goto LABEL_487;
    }
  }
  else
  {
LABEL_480:
    if ((SHIBYTE(v539[2]) & 0x80000000) == 0)
      goto LABEL_481;
  }
  operator delete(v539[0]);
  if (SHIBYTE(v540[2]) < 0)
    goto LABEL_486;
LABEL_482:
  if (v453)
    goto LABEL_488;
LABEL_487:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_488:
  v314 = *(void **)a2;
  v313 = *(_QWORD *)(a2 + 8);
  if (v313)
  {
    v315 = (unint64_t *)(v313 + 8);
    do
      v316 = __ldxr(v315);
    while (__stxr(v316 + 1, v315));
  }
  v318 = *a3;
  v317 = a3[1];
  if (*a3)
    v319 = *a3 + 280;
  else
    v319 = 0;
  v438 = v319;
  v439 = (std::__shared_weak_count *)a3[1];
  if (v317)
  {
    v320 = (unint64_t *)(v317 + 8);
    do
      v321 = __ldxr(v320);
    while (__stxr(v321 + 1, v320));
  }
  if (*(char *)(v319 + 31) < 0)
  {
    sub_223197FA4(v539, *(void **)(v319 + 8), *(_QWORD *)(v319 + 16));
  }
  else
  {
    v322 = *(_OWORD *)(v319 + 8);
    v539[2] = *(void **)(v319 + 24);
    *(_OWORD *)v539 = v322;
  }
  if (*(char *)(v318 + 335) < 0)
  {
    sub_223197FA4(&v544, *(void **)(v318 + 312), *(_QWORD *)(v318 + 320));
  }
  else
  {
    v544 = *(_OWORD *)(v318 + 312);
    v545 = *(void **)(v318 + 328);
  }
  *(_QWORD *)&v543 = v314;
  *((_QWORD *)&v543 + 1) = v313;
  *(_QWORD *)&v542 = v319;
  *((_QWORD *)&v542 + 1) = v317;
  if (v317)
  {
    v323 = (unint64_t *)(v317 + 8);
    do
      v324 = __ldxr(v323);
    while (__stxr(v324 + 1, v323));
  }
  if (SHIBYTE(v539[2]) < 0)
  {
    sub_223197FA4(__src, v539[0], (unint64_t)v539[1]);
  }
  else
  {
    *(_OWORD *)__src = *(_OWORD *)v539;
    __src[2] = v539[2];
  }
  v325 = a1;
  if (SHIBYTE(v545) < 0)
  {
    sub_223197FA4(v540, (void *)v544, *((unint64_t *)&v544 + 1));
  }
  else
  {
    *(_OWORD *)v540 = v544;
    v540[2] = v545;
  }
  *(void **)((char *)v546 + 7) = *(void **)((char *)&v539[1] + 7);
  v326 = v539[0];
  v327 = v539[1];
  HIBYTE(v546[0]) = HIBYTE(v539[1]);
  v328 = HIBYTE(v539[2]);
  memset(v539, 0, 24);
  *((_QWORD *)&v547 + 1) = v313;
  v548[0] = v327;
  *(_QWORD *)((char *)v548 + 7) = *(_QWORD *)((char *)v546 + 7);
  *(_QWORD *)((char *)v546 + 7) = 0;
  v546[0] = 0;
  *(_QWORD *)&v547 = v314;
  if (v313)
  {
    v329 = (unint64_t *)(v313 + 8);
    do
      v330 = __ldxr(v329);
    while (__stxr(v330 + 1, v329));
  }
  v331 = operator new();
  v550[0] = v548[0];
  *(_QWORD *)((char *)v550 + 7) = *(_QWORD *)((char *)v548 + 7);
  v548[0] = 0;
  *(_QWORD *)((char *)v548 + 7) = 0;
  v332 = v547;
  v547 = 0uLL;
  *(_BYTE *)(v331 + 8) = 1;
  *(_QWORD *)(v331 + 32) = 0;
  *(_QWORD *)(v331 + 40) = 0;
  *(_QWORD *)v331 = &off_24EC47B80;
  *(_QWORD *)(v331 + 16) = &unk_24EC47BF8;
  *(_QWORD *)(v331 + 24) = &unk_24EC47C38;
  v333 = v550[0];
  *(_QWORD *)(v331 + 63) = *(_QWORD *)((char *)v550 + 7);
  *(_QWORD *)(v331 + 48) = v326;
  *(_QWORD *)(v331 + 56) = v333;
  *(_BYTE *)(v331 + 71) = v328;
  v550[0] = 0;
  *(_QWORD *)((char *)v550 + 7) = 0;
  *(_OWORD *)(v331 + 72) = v332;
  v549 = 0uLL;
  v334 = (_QWORD *)operator new();
  *v334 = &off_24EC47D30;
  v334[1] = v319;
  v334[2] = v317;
  v542 = 0uLL;
  *(_QWORD *)(v331 + 144) = 0;
  *(_QWORD *)(v331 + 88) = v334;
  *(_QWORD *)(v331 + 96) = v331 + 96;
  *(_QWORD *)(v331 + 104) = v331 + 96;
  *(_QWORD *)(v331 + 112) = 0;
  *(_QWORD *)(v331 + 120) = v331 + 120;
  *(_QWORD *)(v331 + 128) = v331 + 120;
  *(_QWORD *)(v331 + 136) = 0;
  if (!*(_QWORD *)(v331 + 72)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v335 = (std::__shared_weak_count *)operator new();
  v335->__shared_owners_ = 0;
  v336 = (unint64_t *)&v335->__shared_owners_;
  v335->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC48220;
  v335->__shared_weak_owners_ = 0;
  v335[1].__vftable = (std::__shared_weak_count_vtbl *)v331;
  v337 = *(std::__shared_weak_count **)(v331 + 40);
  if (v337)
  {
    if (v337->__shared_owners_ != -1)
      goto LABEL_530;
    do
      v338 = __ldxr(v336);
    while (__stxr(v338 + 1, v336));
    v339 = (unint64_t *)&v335->__shared_weak_owners_;
    do
      v340 = __ldxr(v339);
    while (__stxr(v340 + 1, v339));
    *(_QWORD *)(v331 + 32) = v331;
    *(_QWORD *)(v331 + 40) = v335;
    std::__shared_weak_count::__release_weak(v337);
  }
  else
  {
    do
      v341 = __ldxr(v336);
    while (__stxr(v341 + 1, v336));
    v342 = (unint64_t *)&v335->__shared_weak_owners_;
    do
      v343 = __ldxr(v342);
    while (__stxr(v343 + 1, v342));
    *(_QWORD *)(v331 + 32) = v331;
    *(_QWORD *)(v331 + 40) = v335;
  }
  do
    v344 = __ldaxr(v336);
  while (__stlxr(v344 - 1, v336));
  if (!v344)
  {
    ((void (*)(std::__shared_weak_count *))v335->__on_zero_shared)(v335);
    std::__shared_weak_count::__release_weak(v335);
  }
LABEL_530:
  v345 = (std::__shared_weak_count *)*((_QWORD *)&v549 + 1);
  if (*((_QWORD *)&v549 + 1))
  {
    v346 = (unint64_t *)(*((_QWORD *)&v549 + 1) + 8);
    do
      v347 = __ldaxr(v346);
    while (__stlxr(v347 - 1, v346));
    if (!v347)
    {
      ((void (*)(std::__shared_weak_count *))v345->__on_zero_shared)(v345);
      std::__shared_weak_count::__release_weak(v345);
    }
  }
  *(_QWORD *)&v549 = v331;
  *((_QWORD *)&v549 + 1) = v335;
  v348 = (std::__shared_weak_count *)*((_QWORD *)&v547 + 1);
  if (*((_QWORD *)&v547 + 1))
  {
    v349 = (unint64_t *)(*((_QWORD *)&v547 + 1) + 8);
    do
      v350 = __ldaxr(v349);
    while (__stlxr(v350 - 1, v349));
    if (!v350)
    {
      ((void (*)(std::__shared_weak_count *))v348->__on_zero_shared)(v348);
      std::__shared_weak_count::__release_weak(v348);
    }
  }
  v351 = v543;
  v543 = 0uLL;
  v440[0] = &off_24EC45660;
  *(_OWORD *)&v440[1] = *(_OWORD *)__src;
  v441 = __src[2];
  memset(__src, 0, 24);
  v442 = *(_OWORD *)v540;
  v443 = v540[2];
  memset(v540, 0, 24);
  v444 = v351;
  v547 = 0uLL;
  v352 = v549;
  v445 = v549;
  v549 = 0uLL;
  if (*((_QWORD *)&v445 + 1))
  {
    v353 = (unint64_t *)(*((_QWORD *)&v352 + 1) + 16);
    do
      v354 = __ldxr(v353);
    while (__stxr(v354 + 1, v353));
  }
  v446 = &off_24EC2B498;
  v355 = operator new();
  *(_QWORD *)v355 = &off_24EC48270;
  *(_OWORD *)(v355 + 8) = v352;
  *(_QWORD *)&v447 = v355;
  v357 = *((_QWORD *)&v445 + 1);
  v356 = v445;
  if (!*((_QWORD *)&v445 + 1))
  {
    *((_QWORD *)&v447 + 1) = v445;
    v448 = 0;
    if ((_QWORD)v445)
      v361 = v445 + 16;
    else
      v361 = 0;
    goto LABEL_560;
  }
  v358 = (unint64_t *)(*((_QWORD *)&v445 + 1) + 16);
  do
    v359 = __ldxr(v358);
  while (__stxr(v359 + 1, v358));
  v360 = *((_QWORD *)&v445 + 1);
  *((_QWORD *)&v447 + 1) = v356;
  v448 = v357;
  if ((_QWORD)v445)
    v361 = v445 + 16;
  else
    v361 = 0;
  if (!*((_QWORD *)&v445 + 1))
  {
    v356 = v445;
LABEL_560:
    v364 = 0;
    v449 = &off_24EC45690;
    v450 = v361;
    goto LABEL_561;
  }
  v362 = (unint64_t *)(*((_QWORD *)&v445 + 1) + 16);
  do
    v363 = __ldxr(v362);
  while (__stxr(v363 + 1, v362));
  v364 = *((_QWORD *)&v445 + 1);
  v356 = v445;
  v449 = &off_24EC45690;
  *(_QWORD *)&v450 = v361;
  *((_QWORD *)&v450 + 1) = v360;
  if (*((_QWORD *)&v445 + 1))
  {
    v365 = (unint64_t *)(*((_QWORD *)&v445 + 1) + 16);
    do
      v366 = __ldxr(v365);
    while (__stxr(v366 + 1, v365));
  }
LABEL_561:
  if (v356)
    v367 = v356 + 24;
  else
    v367 = 0;
  v451 = &off_24EC2E850;
  *(_QWORD *)&v452 = v367;
  *((_QWORD *)&v452 + 1) = v364;
  if ((SHIBYTE(v540[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__src[2]) & 0x80000000) == 0)
      goto LABEL_566;
LABEL_569:
    operator delete(__src[0]);
    v368 = (std::__shared_weak_count *)*((_QWORD *)&v542 + 1);
    if (!*((_QWORD *)&v542 + 1))
      goto LABEL_574;
    goto LABEL_570;
  }
  operator delete(v540[0]);
  if (SHIBYTE(__src[2]) < 0)
    goto LABEL_569;
LABEL_566:
  v368 = (std::__shared_weak_count *)*((_QWORD *)&v542 + 1);
  if (!*((_QWORD *)&v542 + 1))
    goto LABEL_574;
LABEL_570:
  v369 = (unint64_t *)&v368->__shared_owners_;
  do
    v370 = __ldaxr(v369);
  while (__stlxr(v370 - 1, v369));
  if (!v370)
  {
    ((void (*)(std::__shared_weak_count *))v368->__on_zero_shared)(v368);
    std::__shared_weak_count::__release_weak(v368);
  }
LABEL_574:
  v371 = (std::__shared_weak_count *)*((_QWORD *)&v543 + 1);
  if (!*((_QWORD *)&v543 + 1))
    goto LABEL_578;
  v372 = (unint64_t *)(*((_QWORD *)&v543 + 1) + 8);
  do
    v373 = __ldaxr(v372);
  while (__stlxr(v373 - 1, v372));
  if (!v373)
  {
    ((void (*)(std::__shared_weak_count *))v371->__on_zero_shared)(v371);
    std::__shared_weak_count::__release_weak(v371);
    if ((SHIBYTE(v545) & 0x80000000) == 0)
    {
LABEL_579:
      if ((SHIBYTE(v539[2]) & 0x80000000) == 0)
        goto LABEL_580;
      goto LABEL_584;
    }
  }
  else
  {
LABEL_578:
    if ((SHIBYTE(v545) & 0x80000000) == 0)
      goto LABEL_579;
  }
  operator delete((void *)v544);
  if ((SHIBYTE(v539[2]) & 0x80000000) == 0)
  {
LABEL_580:
    if (v438)
      goto LABEL_586;
    goto LABEL_585;
  }
LABEL_584:
  operator delete(v539[0]);
  if (v438)
    goto LABEL_586;
LABEL_585:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_586:
  v374 = operator new();
  *(_QWORD *)v374 = &off_24EC45458;
  *(_QWORD *)(v374 + 88) = &off_24EC2B380;
  *(_QWORD *)(v374 + 168) = &off_24EC454C0;
  *(_QWORD *)(v374 + 256) = &off_24EC2B3B8;
  *(_QWORD *)(v374 + 336) = &off_24EC45528;
  *(_QWORD *)(v374 + 424) = &off_24EC2B3F0;
  *(_QWORD *)(v374 + 504) = &off_24EC45590;
  *(_QWORD *)(v374 + 592) = &off_24EC2B428;
  *(_QWORD *)(v374 + 624) = &off_24EC455C0;
  *(_QWORD *)(v374 + 672) = &off_24EC455F8;
  *(_QWORD *)(v374 + 760) = &off_24EC2B460;
  *(_QWORD *)(v374 + 792) = &off_24EC45628;
  *(_QWORD *)(v374 + 840) = &off_24EC45660;
  *(_QWORD *)(v374 + 928) = &off_24EC2B498;
  *(_QWORD *)(v374 + 24) = v527;
  v375 = v526;
  v526 = 0uLL;
  v527 = 0;
  *(_QWORD *)(v374 + 48) = v529;
  v376 = v528;
  v528 = 0uLL;
  v529 = 0;
  v377 = v530;
  v530 = 0uLL;
  *(_OWORD *)(v374 + 8) = v375;
  *(_OWORD *)(v374 + 32) = v376;
  v378 = v531;
  v531 = 0uLL;
  v379 = v533;
  v380 = v534;
  *((_QWORD *)&v533 + 1) = 0;
  v534 = 0;
  *(_QWORD *)(v374 + 112) = v380;
  *(_QWORD *)(v374 + 120) = &off_24EC45488;
  *(_OWORD *)(v374 + 56) = v377;
  *(_OWORD *)(v374 + 72) = v378;
  v381 = v536;
  v382 = v538;
  v538 = 0uLL;
  *(_QWORD *)(v374 + 192) = v509;
  *(_OWORD *)(v374 + 96) = v379;
  v383 = *(_OWORD *)&v508[1];
  v508[1] = 0;
  v508[2] = 0;
  v509 = 0;
  *(_QWORD *)(v374 + 216) = v511;
  *(_OWORD *)(v374 + 128) = v381;
  v384 = v510;
  v510 = 0uLL;
  v511 = 0;
  *(_OWORD *)(v374 + 152) = v382;
  v385 = v512;
  v512 = 0uLL;
  *(_OWORD *)(v374 + 176) = v383;
  *(_OWORD *)(v374 + 200) = v384;
  v386 = v513;
  v513 = 0uLL;
  *(_OWORD *)(v374 + 344) = *(_OWORD *)&__p[1];
  v387 = v515;
  v388 = v516;
  *((_QWORD *)&v515 + 1) = 0;
  v516 = 0;
  *(_QWORD *)(v374 + 280) = v388;
  *(_QWORD *)(v374 + 288) = &off_24EC454F0;
  *(_OWORD *)(v374 + 224) = v385;
  *(_OWORD *)(v374 + 240) = v386;
  v389 = v520;
  v520 = 0uLL;
  *(_QWORD *)(v374 + 360) = v492;
  __p[1] = 0;
  __p[2] = 0;
  v492 = 0;
  *(_QWORD *)(v374 + 384) = v494;
  *(_OWORD *)(v374 + 264) = v387;
  *(_OWORD *)(v374 + 296) = v518;
  v390 = v493;
  v493 = 0uLL;
  v494 = 0;
  *(_OWORD *)(v374 + 320) = v389;
  v391 = v495;
  v495 = 0uLL;
  *(_QWORD *)&v533 = 0;
  v536 = 0uLL;
  *(_QWORD *)(v374 + 144) = &off_24EC2E850;
  *(_QWORD *)&v515 = 0;
  v518 = 0uLL;
  *(_QWORD *)(v374 + 312) = &off_24EC2E850;
  *(_OWORD *)(v374 + 368) = v390;
  v392 = v496;
  *(_OWORD *)(v374 + 392) = v391;
  *(_OWORD *)(v374 + 408) = v392;
  v496 = 0uLL;
  *(_OWORD *)(v374 + 432) = v498;
  v393 = v499;
  *((_QWORD *)&v498 + 1) = 0;
  v499 = 0;
  *(_QWORD *)(v374 + 448) = v393;
  *(_QWORD *)(v374 + 456) = &off_24EC45558;
  *(_OWORD *)(v374 + 464) = v501;
  *(_QWORD *)&v498 = 0;
  v501 = 0uLL;
  *(_QWORD *)(v374 + 480) = &off_24EC2E850;
  *(_OWORD *)(v374 + 488) = v503;
  v503 = 0uLL;
  v394 = *(_OWORD *)&__dst[1];
  *(_QWORD *)(v374 + 528) = v475;
  *(_OWORD *)(v374 + 512) = v394;
  __dst[1] = 0;
  __dst[2] = 0;
  v475 = 0;
  v395 = v476;
  *(_QWORD *)(v374 + 552) = v477;
  *(_OWORD *)(v374 + 536) = v395;
  v476 = 0uLL;
  v477 = 0;
  v396 = v478;
  v478 = 0uLL;
  v397 = v479;
  *(_OWORD *)(v374 + 560) = v396;
  *(_OWORD *)(v374 + 576) = v397;
  v479 = 0uLL;
  *(_OWORD *)(v374 + 600) = v481;
  *(_QWORD *)(v374 + 616) = v482;
  *((_QWORD *)&v481 + 1) = 0;
  v482 = 0;
  *(_OWORD *)(v374 + 632) = v484;
  *(_QWORD *)&v481 = 0;
  v484 = 0uLL;
  *(_QWORD *)(v374 + 648) = &off_24EC2E850;
  *(_OWORD *)(v374 + 656) = v486;
  v486 = 0uLL;
  v398 = *(_OWORD *)&v457[1];
  *(_QWORD *)(v374 + 696) = v458;
  *(_OWORD *)(v374 + 680) = v398;
  v457[1] = 0;
  v457[2] = 0;
  v458 = 0;
  v399 = v459;
  *(_QWORD *)(v374 + 720) = v460;
  *(_OWORD *)(v374 + 704) = v399;
  v459 = 0uLL;
  v460 = 0;
  v400 = v461;
  v461 = 0uLL;
  v401 = v462;
  *(_OWORD *)(v374 + 728) = v400;
  *(_OWORD *)(v374 + 744) = v401;
  v462 = 0uLL;
  *(_OWORD *)(v374 + 768) = v464;
  *(_QWORD *)(v374 + 784) = v465;
  *((_QWORD *)&v464 + 1) = 0;
  v465 = 0;
  *(_OWORD *)(v374 + 800) = v467;
  v467 = 0uLL;
  *(_QWORD *)&v464 = 0;
  *(_QWORD *)(v374 + 816) = &off_24EC2E850;
  *(_OWORD *)(v374 + 824) = v469;
  v469 = 0uLL;
  v402 = *(_OWORD *)&v440[1];
  *(_QWORD *)(v374 + 864) = v441;
  *(_OWORD *)(v374 + 848) = v402;
  v440[1] = 0;
  v440[2] = 0;
  v441 = 0;
  v403 = v442;
  *(_QWORD *)(v374 + 888) = v443;
  *(_OWORD *)(v374 + 872) = v403;
  v442 = 0uLL;
  v443 = 0;
  v404 = v444;
  v444 = 0uLL;
  v405 = v445;
  *(_OWORD *)(v374 + 896) = v404;
  *(_OWORD *)(v374 + 912) = v405;
  v445 = 0uLL;
  *(_OWORD *)(v374 + 936) = v447;
  *(_QWORD *)(v374 + 952) = v448;
  *((_QWORD *)&v447 + 1) = 0;
  v448 = 0;
  *(_QWORD *)(v374 + 960) = &off_24EC45690;
  *(_OWORD *)(v374 + 968) = v450;
  v450 = 0uLL;
  *(_QWORD *)&v447 = 0;
  *(_QWORD *)(v374 + 984) = &off_24EC2E850;
  *(_OWORD *)(v374 + 992) = v452;
  v452 = 0uLL;
  *v325 = v374;
  sub_223558EB8((uint64_t)v440);
  if (v439)
  {
    v406 = (unint64_t *)&v439->__shared_owners_;
    do
      v407 = __ldaxr(v406);
    while (__stlxr(v407 - 1, v406));
    if (!v407)
    {
      ((void (*)(std::__shared_weak_count *))v439->__on_zero_shared)(v439);
      std::__shared_weak_count::__release_weak(v439);
    }
  }
  sub_22355909C((uint64_t)v457);
  v408 = v454;
  if (v454)
  {
    v409 = (unint64_t *)&v454->__shared_owners_;
    do
      v410 = __ldaxr(v409);
    while (__stlxr(v410 - 1, v409));
    if (!v410)
    {
      ((void (*)(std::__shared_weak_count *))v408->__on_zero_shared)(v408);
      std::__shared_weak_count::__release_weak(v408);
    }
  }
  v411 = v456;
  if (v456)
  {
    v412 = (unint64_t *)&v456->__shared_owners_;
    do
      v413 = __ldaxr(v412);
    while (__stlxr(v413 - 1, v412));
    if (!v413)
    {
      ((void (*)(std::__shared_weak_count *))v411->__on_zero_shared)(v411);
      std::__shared_weak_count::__release_weak(v411);
    }
  }
  sub_223559280((uint64_t)__dst);
  v414 = v471;
  if (v471)
  {
    v415 = (unint64_t *)&v471->__shared_owners_;
    do
      v416 = __ldaxr(v415);
    while (__stlxr(v416 - 1, v415));
    if (!v416)
    {
      ((void (*)(std::__shared_weak_count *))v414->__on_zero_shared)(v414);
      std::__shared_weak_count::__release_weak(v414);
    }
  }
  v417 = v473;
  if (v473)
  {
    v418 = (unint64_t *)&v473->__shared_owners_;
    do
      v419 = __ldaxr(v418);
    while (__stlxr(v419 - 1, v418));
    if (!v419)
    {
      ((void (*)(std::__shared_weak_count *))v417->__on_zero_shared)(v417);
      std::__shared_weak_count::__release_weak(v417);
    }
  }
  sub_223559464((uint64_t)__p);
  v420 = v488;
  if (v488)
  {
    v421 = (unint64_t *)&v488->__shared_owners_;
    do
      v422 = __ldaxr(v421);
    while (__stlxr(v422 - 1, v421));
    if (!v422)
    {
      ((void (*)(std::__shared_weak_count *))v420->__on_zero_shared)(v420);
      std::__shared_weak_count::__release_weak(v420);
    }
  }
  v423 = v490;
  if (v490)
  {
    v424 = (unint64_t *)&v490->__shared_owners_;
    do
      v425 = __ldaxr(v424);
    while (__stlxr(v425 - 1, v424));
    if (!v425)
    {
      ((void (*)(std::__shared_weak_count *))v423->__on_zero_shared)(v423);
      std::__shared_weak_count::__release_weak(v423);
    }
  }
  sub_223559648((uint64_t)v508);
  v426 = v505;
  if (v505)
  {
    v427 = (unint64_t *)&v505->__shared_owners_;
    do
      v428 = __ldaxr(v427);
    while (__stlxr(v428 - 1, v427));
    if (!v428)
    {
      ((void (*)(std::__shared_weak_count *))v426->__on_zero_shared)(v426);
      std::__shared_weak_count::__release_weak(v426);
    }
  }
  v429 = v507;
  if (v507)
  {
    v430 = (unint64_t *)&v507->__shared_owners_;
    do
      v431 = __ldaxr(v430);
    while (__stlxr(v431 - 1, v430));
    if (!v431)
    {
      ((void (*)(std::__shared_weak_count *))v429->__on_zero_shared)(v429);
      std::__shared_weak_count::__release_weak(v429);
    }
  }
  sub_22355982C((uint64_t)&v525);
  v432 = v522;
  if (v522)
  {
    v433 = (unint64_t *)&v522->__shared_owners_;
    do
      v434 = __ldaxr(v433);
    while (__stlxr(v434 - 1, v433));
    if (!v434)
    {
      ((void (*)(std::__shared_weak_count *))v432->__on_zero_shared)(v432);
      std::__shared_weak_count::__release_weak(v432);
    }
  }
  v435 = v524;
  if (v524)
  {
    v436 = (unint64_t *)&v524->__shared_owners_;
    do
      v437 = __ldaxr(v436);
    while (__stlxr(v437 - 1, v436));
    if (!v437)
    {
      ((void (*)(std::__shared_weak_count *))v435->__on_zero_shared)(v435);
      std::__shared_weak_count::__release_weak(v435);
    }
  }
}

void sub_2235389FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,char a47,uint64_t a48,void *a49,void *a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;
  uint64_t v71;

  if (SLOBYTE(STACK[0x577]) < 0)
  {
    operator delete((void *)STACK[0x560]);
    sub_223167354(v71 - 256);
    sub_223167354(v71 - 240);
    if ((*(char *)(v71 - 201) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x537]) & 0x80000000) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else
  {
    sub_223167354(v71 - 256);
    sub_223167354(v71 - 240);
    if ((*(char *)(v71 - 201) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete(*(void **)(v71 - 224));
  if ((SLOBYTE(STACK[0x537]) & 0x80000000) == 0)
  {
LABEL_5:
    sub_223167354((uint64_t)&a19);
    sub_223167354((uint64_t)&a21);
    sub_22355909C((uint64_t)&a49);
    sub_223167354((uint64_t)&a45);
    sub_223167354((uint64_t)&a47);
    sub_223559280((uint64_t)&STACK[0x210]);
    sub_223167354((uint64_t)&a71);
    sub_223167354((uint64_t)&STACK[0x200]);
    sub_223559464((uint64_t)&STACK[0x2E0]);
    sub_223167354((uint64_t)&STACK[0x2C0]);
    sub_223167354((uint64_t)&STACK[0x2D0]);
    sub_223559648((uint64_t)&STACK[0x3B0]);
    sub_223167354((uint64_t)&STACK[0x390]);
    sub_223167354((uint64_t)&STACK[0x3A0]);
    sub_22355982C((uint64_t)&STACK[0x478]);
    sub_223167354((uint64_t)&STACK[0x458]);
    sub_223167354((uint64_t)&STACK[0x468]);
    _Unwind_Resume(a1);
  }
LABEL_4:
  operator delete((void *)STACK[0x520]);
  goto LABEL_5;
}

void sub_223539008()
{
  void *v0;
  int v1;
  uint64_t v2;

  sub_223167354(v2 - 144);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223538F14);
}

void sub_223539024()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x247]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x22F]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354(v3 - 224);
        sub_223167354((uint64_t)&STACK[0x520]);
        JUMPOUT(0x223539110);
      }
LABEL_4:
      operator delete((void *)STACK[0x218]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x247]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x230]);
  if ((SLOBYTE(STACK[0x22F]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_2235390A0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x520]);
  JUMPOUT(0x223539108);
}

void sub_223539190()
{
  void *v0;
  int v1;
  uint64_t v2;

  sub_223167354(v2 - 224);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223539110);
}

void sub_2235391AC()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0x317]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x2FF]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x520]);
        sub_223167354((uint64_t)&STACK[0x540]);
        JUMPOUT(0x223539298);
      }
LABEL_4:
      operator delete((void *)STACK[0x2E8]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0x317]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x300]);
  if ((SLOBYTE(STACK[0x2FF]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223539228()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x540]);
  JUMPOUT(0x223539290);
}

void sub_223539318()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x520]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223539298);
}

void sub_223539334()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x3E7]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x3CF]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x540]);
        sub_223167354((uint64_t)&STACK[0x560]);
        JUMPOUT(0x223539420);
      }
LABEL_4:
      operator delete((void *)STACK[0x3B8]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x3E7]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x3D0]);
  if ((SLOBYTE(STACK[0x3CF]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_2235393B0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x560]);
  JUMPOUT(0x223539418);
}

void sub_2235394A0()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x540]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223539420);
}

void sub_2235394BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  std::__shared_weak_count *v14;
  uint64_t v15;
  uint64_t v16;
  va_list va;

  va_start(va, a14);
  if (v14)
  {
    std::__shared_weak_count::__release_weak(v14);
    sub_223167354(v15);
    sub_223167354(v16);
    if ((SLOBYTE(STACK[0x4AF]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x497]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x560]);
        sub_223167354((uint64_t)va);
        JUMPOUT(0x2235395A8);
      }
LABEL_4:
      operator delete((void *)STACK[0x480]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v15);
    sub_223167354(v16);
    if ((SLOBYTE(STACK[0x4AF]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x498]);
  if ((SLOBYTE(STACK[0x497]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223539538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
  sub_223167354((uint64_t)va);
  JUMPOUT(0x2235395A0);
}

void sub_22353963C()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x560]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x2235395A8);
}

void sub_22353965C(uint64_t a1)
{
  sub_223559A10(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223539698(uint64_t a1)
{
  sub_22355982C(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235396BC(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC45488;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235396F4(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC45488;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

void sub_22353973C(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    v15 = v5;
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      v14 = v7;
      if (v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a2 + 8) = 0;
        v12 = &off_24EC2B380;
        v13 = v8;
        (*(void (**)(uint64_t, uint64_t (***)()))(*(_QWORD *)v7 + 16))(v7, &v12);
        v9 = v13;
        v12 = &off_24EC2B380;
        v13 = 0;
        if (v9)
          (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
      }
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223539810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  if (a3)
    (*(void (**)(uint64_t))(*(_QWORD *)a3 + 8))(a3);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22353983C(uint64_t a1)
{
  sub_223559648(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223539860(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC454F0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223539898(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC454F0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

void sub_2235398E0(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    v15 = v5;
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      v14 = v7;
      if (v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a2 + 8) = 0;
        v12 = &off_24EC2B3B8;
        v13 = v8;
        (*(void (**)(uint64_t, uint64_t (***)()))(*(_QWORD *)v7 + 16))(v7, &v12);
        v9 = v13;
        v12 = &off_24EC2B3B8;
        v13 = 0;
        if (v9)
          (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
      }
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_2235399B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  if (a3)
    (*(void (**)(uint64_t))(*(_QWORD *)a3 + 8))(a3);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2235399E0(uint64_t a1)
{
  sub_223559464(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223539A04(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC45558;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223539A3C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC45558;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

void sub_223539A84(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    v15 = v5;
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      v14 = v7;
      if (v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a2 + 8) = 0;
        v12 = &off_24EC2B3F0;
        v13 = v8;
        (*(void (**)(uint64_t, uint64_t (***)()))(*(_QWORD *)v7 + 16))(v7, &v12);
        v9 = v13;
        v12 = &off_24EC2B3F0;
        v13 = 0;
        if (v9)
          (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
      }
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223539B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  if (a3)
    (*(void (**)(uint64_t))(*(_QWORD *)a3 + 8))(a3);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223539B84(uint64_t a1)
{
  sub_223559280(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223539BA8(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC455C0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223539BE0(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC455C0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

void sub_223539C28(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    v15 = v5;
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      v14 = v7;
      if (v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a2 + 8) = 0;
        v12 = &off_24EC2B428;
        v13 = v8;
        (*(void (**)(uint64_t, uint64_t (***)()))(*(_QWORD *)v7 + 16))(v7, &v12);
        v9 = v13;
        v12 = &off_24EC2B428;
        v13 = 0;
        if (v9)
          (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
      }
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223539CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  if (a3)
    (*(void (**)(uint64_t))(*(_QWORD *)a3 + 8))(a3);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223539D28(uint64_t a1)
{
  sub_22355909C(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223539D4C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC45628;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223539D84(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC45628;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

void sub_223539DCC(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    v15 = v5;
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      v14 = v7;
      if (v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a2 + 8) = 0;
        v12 = &off_24EC2B460;
        v13 = v8;
        (*(void (**)(uint64_t, uint64_t (***)()))(*(_QWORD *)v7 + 16))(v7, &v12);
        v9 = v13;
        v12 = &off_24EC2B460;
        v13 = 0;
        if (v9)
          (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
      }
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223539EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  if (a3)
    (*(void (**)(uint64_t))(*(_QWORD *)a3 + 8))(a3);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223539ECC(uint64_t a1)
{
  sub_223558EB8(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223539EF0(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC45690;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223539F28(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC45690;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

void sub_223539F70(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    v15 = v5;
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      v14 = v7;
      if (v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a2 + 8) = 0;
        v12 = &off_24EC2B498;
        v13 = v8;
        (*(void (**)(uint64_t, uint64_t (***)()))(*(_QWORD *)v7 + 16))(v7, &v12);
        v9 = v13;
        v12 = &off_24EC2B498;
        v13 = 0;
        if (v9)
          (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
      }
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_22353A044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  if (a3)
    (*(void (**)(uint64_t))(*(_QWORD *)a3 + 8))(a3);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22353A074(uint64_t a1)
{
  sub_22353B9D8(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22353A098(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count **v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  std::mutex **v24;
  uint64_t **v25;
  std::__shared_weak_count *v26;
  std::__shared_weak_count *v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  unint64_t *p_shared_weak_owners;
  unint64_t v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t **v34;
  std::__shared_weak_count *v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  __int128 *v48;
  __int128 *v49;
  uint64_t v50;
  std::__shared_weak_count *v51[2];
  _QWORD v52[57];
  std::__shared_weak_count *v53;
  __int128 v54;
  uint64_t v55;
  __int128 *v56;
  _BYTE v57[24];
  _BYTE *v58;
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v25 = (uint64_t **)a1[9];
    *(_OWORD *)v51 = 0uLL;
    v26 = (std::__shared_weak_count *)a1[5];
    if (v26)
    {
      v27 = std::__shared_weak_count::lock(v26);
      if (v27)
      {
        v28 = v27;
        v29 = (std::__shared_weak_count *)a1[4];
        p_shared_weak_owners = (unint64_t *)&v27->__shared_weak_owners_;
        do
          v31 = __ldxr(p_shared_weak_owners);
        while (__stxr(v31 + 1, p_shared_weak_owners));
        v51[0] = v29;
        v51[1] = v27;
        p_shared_owners = (unint64_t *)&v27->__shared_owners_;
        do
          v33 = __ldaxr(p_shared_owners);
        while (__stlxr(v33 - 1, p_shared_owners));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      else
      {
        *(_OWORD *)v51 = 0uLL;
      }
    }
    sub_223299E34((uint64_t)v52, a2);
    v56 = 0;
    v48 = (__int128 *)operator new(0x1D0uLL);
    *(_QWORD *)v48 = &off_24EC45998;
    *(__int128 *)((char *)v48 + 8) = *(_OWORD *)v51;
    sub_22329ACE4((uint64_t)v48 + 24, (uint64_t)v52);
    v56 = v48;
    sub_2245022E4(*v25, (uint64_t)&v54);
    v49 = v56;
    if (v56 == &v54)
    {
      v50 = 4;
      v49 = &v54;
    }
    else
    {
      if (!v56)
      {
LABEL_58:
        sub_2232954B0((uint64_t)v52);
        return;
      }
      v50 = 5;
    }
    (*(void (**)(__int128 *))(*(_QWORD *)v49 + 8 * v50))(v49);
    goto LABEL_58;
  }
  v4 = (std::__shared_weak_count *)operator new(0x1D0uLL);
  v4->__shared_owners_ = 0;
  v5 = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC458C8;
  v6 = v4 + 1;
  sub_223299E34((uint64_t)&v4[1], a2);
  v52[56] = v4 + 1;
  v53 = v4;
  v7 = (unint64_t *)&v4->__shared_weak_owners_;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  v9 = (uint64_t *)a1[18];
  v10 = (_QWORD *)operator new();
  *v10 = v9 + 7;
  std::mutex::lock((std::mutex *)(v9 + 7));
  *(_QWORD *)&v54 = v10;
  *((_QWORD *)&v54 + 1) = v9;
  if (!*((_BYTE *)v9 + 48))
    sub_22324A974();
  v11 = v9[4];
  v12 = *v9;
  v13 = (std::__shared_weak_count **)(*v9 + 16 * v11);
  do
    v14 = __ldxr(v5);
  while (__stxr(v14 + 1, v5));
  *v13 = v6;
  v15 = v12 + 16 * v11;
  v16 = *(std::__shared_weak_count **)(v15 + 8);
  *(_QWORD *)(v15 + 8) = v4;
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v19 = (v9[1] - *v9) >> 4;
  v20 = v9[5];
  v21 = v9[4] + 1;
  if (v21 >= v19)
    v22 = (v9[1] - *v9) >> 4;
  else
    v22 = 0;
  v9[4] = v21 - v22;
  if (v20 != v19)
  {
    v9[5] = v20 + 1;
    v24 = (std::mutex **)v54;
    if (!(_QWORD)v54)
      goto LABEL_33;
    goto LABEL_32;
  }
  v23 = v9[3] + 1;
  if (v23 < v19)
    v19 = 0;
  v9[3] = v23 - v19;
  v24 = (std::mutex **)v54;
  if ((_QWORD)v54)
  {
LABEL_32:
    std::mutex::unlock(*v24);
    MEMORY[0x227684CE8](v24, 0x20C4093837F09);
  }
LABEL_33:
  v34 = (uint64_t **)a1[9];
  v54 = 0uLL;
  v35 = (std::__shared_weak_count *)a1[5];
  if (v35)
  {
    v36 = std::__shared_weak_count::lock(v35);
    if (v36)
    {
      v37 = v36;
      v38 = a1[4];
      v39 = (unint64_t *)&v36->__shared_weak_owners_;
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
      *(_QWORD *)&v54 = v38;
      *((_QWORD *)&v54 + 1) = v36;
      v41 = (unint64_t *)&v36->__shared_owners_;
      do
        v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    else
    {
      v54 = 0uLL;
    }
  }
  v43 = (char *)operator new(0x30uLL);
  *(_QWORD *)v43 = &off_24EC45918;
  *(_OWORD *)(v43 + 8) = v54;
  v54 = 0uLL;
  *((_QWORD *)v43 + 3) = v6;
  *((_QWORD *)v43 + 4) = v4;
  v55 = 0;
  v56 = 0;
  v58 = v43;
  sub_2245022E4(*v34, (uint64_t)v57);
  v44 = v58;
  if (v58 == v57)
  {
    v45 = 4;
    v44 = v57;
  }
  else
  {
    if (!v58)
      goto LABEL_47;
    v45 = 5;
  }
  (*(void (**)(void))(*v44 + 8 * v45))();
LABEL_47:
  if (v53)
  {
    v46 = &v53->__shared_owners_;
    do
      v47 = __ldaxr((unint64_t *)v46);
    while (__stlxr(v47 - 1, (unint64_t *)v46));
    if (!v47)
    {
      ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
      std::__shared_weak_count::__release_weak(v53);
    }
  }
}

void sub_22353A4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v12 = *(_QWORD **)(v10 - 120);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 144);
  }
  else
  {
    if (!v12)
    {
      sub_22353BBD8((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
  sub_22353BBD8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22353A544(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22353A63C(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22353A64C(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22353A658(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_22353A668(_QWORD *a1, uint64_t a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_weak_owners;
  unint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count **v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  std::mutex **v29;
  uint64_t **v30;
  std::__shared_weak_count *v31;
  std::__shared_weak_count *v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t **v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  std::__shared_weak_count *v49;
  char *v50;
  std::string *v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  _QWORD *v59;
  __int128 *v60;
  __int128 *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  __int128 *v69;
  std::string *v70;
  std::runtime_error *exception;
  std::runtime_error *v72;
  std::__shared_weak_count *v73[2];
  _BYTE v74[440];
  __int128 v75;
  std::__shared_weak_count *v76;
  std::__shared_weak_count *v77;
  std::__shared_weak_count *v78;
  std::__shared_weak_count *v79;
  std::runtime_error v80;
  std::__shared_weak_count *v81;
  std::__shared_weak_count *v82;
  __int128 v83;
  _QWORD *v84;
  __int128 *v85;
  _QWORD v86[3];
  std::string v87;
  std::string *v88;
  uint64_t v89;

  v89 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v83 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v83 + 1) = 45;
    v68 = (_QWORD *)a1[6];
    v67 = a1 + 6;
    v66 = v68;
    v69 = (__int128 *)*((unsigned __int8 *)v67 + 23);
    if ((char)v69 < 0)
      v69 = (__int128 *)v67[1];
    else
      v66 = v67;
    v84 = v66;
    v85 = v69;
    sub_2231A9820((uint64_t)&v83, (uint64_t)v86, 0, 0, &v87);
    if ((v87.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v70 = &v87;
    else
      v70 = (std::string *)v87.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v80, (const char *)v70);
    v80.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v72 = std::runtime_error::runtime_error(exception, &v80);
    v72->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v72, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v6 = (std::__shared_weak_count *)operator new(0x20uLL);
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC45A18;
    v6[1].__vftable = *a3;
    v78 = v6 + 1;
    v79 = v6;
    v76 = v6 + 1;
    v77 = v6;
    v6->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    *a3 = 0;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    if (!a1[18]
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v9 = (std::__shared_weak_count *)operator new(0x1D0uLL);
    v9->__shared_owners_ = 0;
    v10 = (unint64_t *)&v9->__shared_owners_;
    v9->__shared_weak_owners_ = 0;
    v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC458C8;
    v11 = v9 + 1;
    sub_223299E34((uint64_t)&v9[1], a2);
    v81 = v9 + 1;
    v82 = v9;
    p_shared_weak_owners = (unint64_t *)&v9->__shared_weak_owners_;
    do
      v13 = __ldxr(p_shared_weak_owners);
    while (__stxr(v13 + 1, p_shared_weak_owners));
    v14 = (uint64_t *)a1[18];
    v15 = (_QWORD *)operator new();
    *v15 = v14 + 7;
    std::mutex::lock((std::mutex *)(v14 + 7));
    *(_QWORD *)&v83 = v15;
    *((_QWORD *)&v83 + 1) = v14;
    if (!*((_BYTE *)v14 + 48))
      sub_22324A974();
    v16 = v14[4];
    v17 = *v14;
    v18 = (std::__shared_weak_count **)(*v14 + 16 * v16);
    do
      v19 = __ldxr(v10);
    while (__stxr(v19 + 1, v10));
    *v18 = v11;
    v20 = v17 + 16 * v16;
    v21 = *(std::__shared_weak_count **)(v20 + 8);
    *(_QWORD *)(v20 + 8) = v9;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldaxr(v22);
      while (__stlxr(v23 - 1, v22));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
    v24 = (v14[1] - *v14) >> 4;
    v25 = v14[5];
    v26 = v14[4] + 1;
    if (v26 >= v24)
      v27 = (v14[1] - *v14) >> 4;
    else
      v27 = 0;
    v14[4] = v26 - v27;
    if (v25 == v24)
    {
      v28 = v14[3] + 1;
      if (v28 < v24)
        v24 = 0;
      v14[3] = v28 - v24;
      v29 = (std::mutex **)v83;
      if (!(_QWORD)v83)
      {
LABEL_37:
        v39 = (uint64_t **)a1[9];
        v83 = 0uLL;
        v40 = (std::__shared_weak_count *)a1[5];
        if (v40)
        {
          v41 = std::__shared_weak_count::lock(v40);
          if (v41)
          {
            v42 = v41;
            v43 = a1[4];
            v44 = (unint64_t *)&v41->__shared_weak_owners_;
            do
              v45 = __ldxr(v44);
            while (__stxr(v45 + 1, v44));
            *(_QWORD *)&v83 = v43;
            *((_QWORD *)&v83 + 1) = v41;
            v46 = (unint64_t *)&v41->__shared_owners_;
            do
              v47 = __ldaxr(v46);
            while (__stlxr(v47 - 1, v46));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
          else
          {
            v83 = 0uLL;
          }
        }
        v48 = v76;
        v49 = v77;
        v76 = 0;
        v77 = 0;
        v50 = (char *)operator new(0x38uLL);
        *(_QWORD *)v50 = &off_24EC45A68;
        *(_OWORD *)(v50 + 8) = v83;
        v83 = 0uLL;
        *((_QWORD *)v50 + 3) = v11;
        *((_QWORD *)v50 + 4) = v9;
        v84 = 0;
        v85 = 0;
        *((_QWORD *)v50 + 5) = v48;
        *((_QWORD *)v50 + 6) = v49;
        v86[0] = 0;
        v86[1] = 0;
        v88 = (std::string *)v50;
        sub_2245022E4(*v39, (uint64_t)&v87);
        v51 = v88;
        if (v88 == &v87)
        {
          v52 = 4;
          v51 = &v87;
        }
        else
        {
          if (!v88)
            goto LABEL_51;
          v52 = 5;
        }
        (*(void (**)(void))(v51->__r_.__value_.__r.__words[0] + 8 * v52))();
LABEL_51:
        if (v82)
        {
          v53 = &v82->__shared_owners_;
          do
            v54 = __ldaxr((unint64_t *)v53);
          while (__stlxr(v54 - 1, (unint64_t *)v53));
          if (!v54)
          {
            ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
            std::__shared_weak_count::__release_weak(v82);
          }
        }
        if (v77)
        {
          v55 = &v77->__shared_owners_;
          do
            v56 = __ldaxr((unint64_t *)v55);
          while (__stlxr(v56 - 1, (unint64_t *)v55));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
            std::__shared_weak_count::__release_weak(v77);
          }
        }
        if (v79)
        {
          v57 = &v79->__shared_owners_;
          do
            v58 = __ldaxr((unint64_t *)v57);
          while (__stlxr(v58 - 1, (unint64_t *)v57));
          if (!v58)
          {
            ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
            std::__shared_weak_count::__release_weak(v79);
          }
        }
        return;
      }
    }
    else
    {
      v14[5] = v25 + 1;
      v29 = (std::mutex **)v83;
      if (!(_QWORD)v83)
        goto LABEL_37;
    }
    std::mutex::unlock(*v29);
    MEMORY[0x227684CE8](v29, 0x20C4093837F09);
    goto LABEL_37;
  }
  v30 = (uint64_t **)a1[9];
  *(_OWORD *)v73 = 0uLL;
  v31 = (std::__shared_weak_count *)a1[5];
  if (v31)
  {
    v32 = std::__shared_weak_count::lock(v31);
    if (v32)
    {
      v33 = v32;
      v34 = (std::__shared_weak_count *)a1[4];
      v35 = (unint64_t *)&v32->__shared_weak_owners_;
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 1, v35));
      v73[0] = v34;
      v73[1] = v32;
      v37 = (unint64_t *)&v32->__shared_owners_;
      do
        v38 = __ldaxr(v37);
      while (__stlxr(v38 - 1, v37));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
    else
    {
      *(_OWORD *)v73 = 0uLL;
    }
  }
  sub_223299E34((uint64_t)v74, a2);
  v59 = operator new(0x20uLL);
  v59[1] = 0;
  v59[2] = 0;
  *v59 = &off_24EC45A18;
  v59[3] = *a3;
  *a3 = 0;
  *(_QWORD *)&v75 = v59 + 3;
  *((_QWORD *)&v75 + 1) = v59;
  v85 = 0;
  v60 = (__int128 *)operator new(0x1E0uLL);
  *(_QWORD *)v60 = &off_24EC45AE8;
  *(__int128 *)((char *)v60 + 8) = *(_OWORD *)v73;
  sub_22329ACE4((uint64_t)v60 + 24, (uint64_t)v74);
  v60[29] = v75;
  v75 = 0uLL;
  v85 = v60;
  sub_2245022E4(*v30, (uint64_t)&v83);
  v61 = v85;
  if (v85 == &v83)
  {
    v62 = 4;
    v61 = &v83;
  }
  else
  {
    if (!v85)
      goto LABEL_72;
    v62 = 5;
  }
  (*(void (**)(__int128 *))(*(_QWORD *)v61 + 8 * v62))(v61);
LABEL_72:
  v63 = (std::__shared_weak_count *)*((_QWORD *)&v75 + 1);
  if (*((_QWORD *)&v75 + 1))
  {
    v64 = (unint64_t *)(*((_QWORD *)&v75 + 1) + 8);
    do
      v65 = __ldaxr(v64);
    while (__stlxr(v65 - 1, v64));
    if (!v65)
    {
      ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
      std::__shared_weak_count::__release_weak(v63);
    }
  }
  sub_2232954B0((uint64_t)v74);
}

void sub_22353ACE8(_Unwind_Exception *exception_object, int a2)
{
  std::__assoc_sub_state **v2;
  uint64_t v3;
  std::__assoc_sub_state *v4;
  std::exception_ptr v5;

  if (a2)
  {
    __cxa_begin_catch(exception_object);
    std::current_exception();
    __cxa_end_catch();
    v4 = *v2;
    if (*v2)
    {
      std::exception_ptr::exception_ptr((std::exception_ptr *)(v3 - 160), (const std::exception_ptr *)(v3 - 184));
      v5.__ptr_ = (void *)(v3 - 160);
      std::__assoc_sub_state::set_exception(v4, v5);
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v3 - 160));
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v3 - 184));
      std::runtime_error::~runtime_error((std::runtime_error *)(v3 - 200));
      if (*(char *)(v3 - 81) < 0)
        operator delete(*(void **)(v3 - 104));
      JUMPOUT(0x22353ABFCLL);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(exception_object);
}

void sub_22353AD5C(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)(v1 - 184));
  std::runtime_error::~runtime_error((std::runtime_error *)(v1 - 200));
  if (*(char *)(v1 - 81) < 0)
  {
    operator delete(*(void **)(v1 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22353ADB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v12 = *(_QWORD **)(v10 - 136);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 160);
  }
  else
  {
    if (!v12)
    {
      sub_22353C94C((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
  sub_22353C94C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22353AE04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  uint64_t v10;

  sub_2232954B0(v10);
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22353AE38(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 - 80);
  if (v4 == v1)
  {
    v5 = 4;
    v4 = (_QWORD *)(v2 - 104);
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  sub_22332429C((_QWORD *)(v2 - 160));
  sub_223167354(v2 - 176);
  sub_223167354(v2 - 232);
  sub_223167354(v2 - 216);
  _Unwind_Resume(a1);
}

void sub_22353AED8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  sub_223167354(v2 - 232);
  sub_223167354(v2 - 216);
  _Unwind_Resume(a1);
}

void sub_22353AF00(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 232);
  sub_223167354(v1 - 216);
  _Unwind_Resume(a1);
}

void sub_22353AF1C(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_22353AF90(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC45B68;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B380;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_22353B0C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22353B134(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC45BE8;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_22353B244(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_22353B2A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC45C68;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22353B4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_22353B588@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC45CE8;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22353B7A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22353B868(uint64_t a1)
{
  return sub_22353B9D8(a1 - 16);
}

void sub_22353B870(uint64_t a1)
{
  sub_22353B9D8(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22353B898(uint64_t a1, uint64_t a2)
{
  return sub_22353AF90((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22353B8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22353B2A8((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22353B8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22353B588((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_22353B8B0(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_22353B8B8(uint64_t a1)
{
  return sub_22353B9D8(a1 - 24);
}

void sub_22353B8C0(uint64_t a1)
{
  sub_22353B9D8(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22353B8E8(uint64_t a1)
{
  return sub_22353B134((_QWORD *)(a1 - 24));
}

uint64_t sub_22353B8F0(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_22353B8F8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22353B960(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22353B9C8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_22353B9D8(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC456C8;
  *(_QWORD *)(a1 + 16) = &unk_24EC45740;
  *(_QWORD *)(a1 + 24) = &unk_24EC45780;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

uint64_t sub_22353BBD8(uint64_t a1)
{
  std::__shared_weak_count *v2;

  sub_2232954B0(a1 + 16);
  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22353BC0C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC458C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_22353BC1C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC458C8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22353BC4C(uint64_t a1)
{
  return sub_2232954B0(a1 + 24);
}

_QWORD *sub_22353BC58(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC45918;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_22353BC9C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC45918;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22353BCF0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC45918;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_22353BD60(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC45918;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_22353BDB0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_22353BDEC(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_22353BE24(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_22353C148((uint64_t *)(v8 + 88), v5, &v20);
      if (v21)
        sub_22353C4D0(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_22353BFEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_22353C4D0(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22353C0D0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE2"
                     "5EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6"
                                "_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22353C13C()
{
  return &unk_24EC45978;
}

uint64_t sub_22353C148(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  BOOL v8;
  uint64_t v9;
  uint64_t i;
  unsigned __int8 v11;
  _QWORD *v12;
  _QWORD *j;
  uint64_t v14;
  uint64_t v15;
  std::exception_ptr v17;
  _QWORD v18[55];

  v6 = *a1;
  if (!v6)
  {
    sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    v7 = atomic_load((unsigned __int8 *)&qword_255795680);
    if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
    {
      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
      __cxa_guard_release(&qword_255795680);
    }
    if (byte_255795670)
      v8 = byte_255795678 == 0;
    else
      v8 = 0;
    if (!v8)
    {
      v9 = qword_255795648;
      for (i = qword_255795650; v9 != i; v9 += 16)
        (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v9)(*(_QWORD *)(v9 + 8), "callable_", 9, "", 0);
    }
    v11 = atomic_load((unsigned __int8 *)&qword_255795680);
    if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
    {
      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
      __cxa_guard_release(&qword_255795680);
    }
    if (!byte_255795670)
      abort();
    qword_255795660(*(_QWORD *)algn_255795668, "callable_", 9, "", 0);
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v18, v6, a2);
  v12 = a1 + 1;
  for (j = (_QWORD *)a1[2]; j != v12; j = (_QWORD *)j[1])
    (*(void (**)(_QWORD *, _QWORD *))(j[2] + 16))(j + 2, v18);
  if (*((_BYTE *)a3 + 8))
  {
    v14 = *a3;
    if (!v14)
      sub_2233236D4(3u);
    std::mutex::lock((std::mutex *)(v14 + 24));
    if ((*(_BYTE *)(v14 + 136) & 1) != 0
      || (v17.__ptr_ = 0, v15 = *(_QWORD *)(v14 + 16), std::exception_ptr::~exception_ptr(&v17), v15))
    {
      sub_2233236D4(2u);
    }
    sub_223299E34(v14 + 144, (uint64_t)v18);
    *(_DWORD *)(v14 + 136) |= 5u;
    std::condition_variable::notify_all((std::condition_variable *)(v14 + 88));
    std::mutex::unlock((std::mutex *)(v14 + 24));
  }
  return sub_2232954B0((uint64_t)v18);
}

void sub_22353C3C8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11, uint64_t a12, int a13, __int16 a14, char a15, unsigned __int8 a16, char a17)
{
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  sub_2232954B0((uint64_t)&a17);
  if (a2 == 1)
  {
    v19 = (uint64_t *)__cxa_begin_catch(a1);
    v20 = *v19;
    a10 = *(_QWORD *)(*(_QWORD *)(*v19 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a9 = (*(uint64_t (**)(void))(v20 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", (const char *)&a10, "\n", "message: ", (const char *)&a9, "\n");
    if ((a16 & 0x80u) == 0)
      v21 = &a11;
    else
      v21 = a11;
    if ((a16 & 0x80u) == 0)
      v22 = a16;
    else
      v22 = a12;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v21, v22, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_22353C4A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x22353C4C4);
}

uint64_t *sub_22353C4D0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  const std::error_category *v7;
  std::logic_error *exception;
  std::logic_error *v9;
  std::logic_error v10;
  std::logic_error v11;
  std::exception_ptr v12;

  v2 = *a1;
  if (!v2)
    return a1;
  if ((*(_BYTE *)(v2 + 136) & 1) == 0)
  {
    v12.__ptr_ = 0;
    v3 = *(_QWORD *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v12);
    v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v7 = std::future_category();
      MEMORY[0x2276844A8](&v10, 4, v7);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      v9 = std::logic_error::logic_error(exception, &v10);
      v9->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB810] + 16);
      v9[1] = v11;
      __cxa_throw(v9, MEMORY[0x24BEDB6E0], (void (*)(void *))MEMORY[0x24BEDAD80]);
    }
  }
  v4 = (unint64_t *)(v2 + 8);
  do
    v5 = __ldaxr(v4);
  while (__stlxr(v5 - 1, v4));
  if (v5)
    return a1;
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  return a1;
}

void sub_22353C5BC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__assoc_sub_state *a10, char a11)
{
  uint64_t v11;
  std::exception_ptr v12;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v12.__ptr_ = (void *)(v11 - 32);
  std::__assoc_sub_state::set_exception(a10, v12);
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(v11 - 32));
  MEMORY[0x2276844B4](&a11);
  JUMPOUT(0x22353C518);
}

_QWORD *sub_22353C5F8(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC45998;
  sub_2232954B0((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22353C634(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC45998;
  sub_2232954B0((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22353C680(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x1D0uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC45998;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  sub_223299E34((uint64_t)(v2 + 3), a1 + 24);
  return v3;
}

void sub_22353C6E4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_22353C704(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC45998;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return sub_223299E34((uint64_t)(a2 + 3), a1 + 24);
}

void sub_22353C75C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22353C774(uint64_t a1)
{
  std::__shared_weak_count *v2;

  sub_2232954B0(a1 + 24);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
}

void sub_22353C7AC(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  sub_2232954B0((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(a1);
}

void sub_22353C7E0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_22353C148((uint64_t *)(v5 + 88), a1 + 24, &v8);
        if (v9)
          sub_22353C4D0(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22353C888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_22353C4D0(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22353C8D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE4"
                     "SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6"
                                "_vS6_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22353C940()
{
  return &unk_24EC459F8;
}

uint64_t sub_22353C94C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 464);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2232954B0(a1 + 16);
      v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  sub_2232954B0(a1 + 16);
  v5 = *(std::__shared_weak_count **)(a1 + 8);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_22353C9CC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC45A18;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_22353C9DC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC45A18;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t *sub_22353CA0C(uint64_t a1)
{
  return sub_22353C4D0((uint64_t *)(a1 + 24));
}

_QWORD *sub_22353CA18(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC45A68;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_22353CAA0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC45A68;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_22353CB38(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC45A68;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_22353CBC8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC45A68;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_22353CC38(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_22353CCB8(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_22353CD34(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_22353C148(v13, v5, (uint64_t *)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_22353C4D0((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_22353D010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_22353D03C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x22353CE48);
    JUMPOUT(0x22353CE18);
  }
  sub_2233236D4(3u);
}

void sub_22353D098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_22353D0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_22353C4D0(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22353D1B0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE2"
                     "5EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6"
                                "_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E"
                                "_EEvSA_SE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22353D21C()
{
  return &unk_24EC45AC8;
}

_QWORD *sub_22353D228(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC45AE8;
  v2 = (std::__shared_weak_count *)a1[59];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2232954B0((uint64_t)(a1 + 3));
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  sub_2232954B0((uint64_t)(a1 + 3));
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_22353D2B4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC45AE8;
  v2 = (std::__shared_weak_count *)a1[59];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    sub_2232954B0((uint64_t)(a1 + 3));
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  else
  {
LABEL_5:
    sub_2232954B0((uint64_t)(a1 + 3));
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  std::__shared_weak_count::__release_weak(v5);
LABEL_9:
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22353D350(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = operator new(0x1E0uLL);
  v3 = v2;
  v5 = a1[1];
  v4 = a1[2];
  *v2 = &off_24EC45AE8;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  sub_223299E34((uint64_t)(v2 + 3), (uint64_t)(a1 + 3));
  v8 = a1[59];
  v3[58] = a1[58];
  v3[59] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return v3;
}

void sub_22353D3D4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_22353D3F4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC45AE8;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = sub_223299E34((uint64_t)(a2 + 3), (uint64_t)(a1 + 3));
  v9 = a1[59];
  a2[58] = a1[58];
  a2[59] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_22353D46C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22353D484(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 472);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    sub_2232954B0(a1 + 24);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  sub_2232954B0(a1 + 24);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
}

void sub_22353D504(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (std::__shared_weak_count *)a1[59];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2232954B0((uint64_t)(a1 + 3));
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  sub_2232954B0((uint64_t)(a1 + 3));
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  operator delete(a1);
}

void sub_22353D584(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[58];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_22353C148((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t *)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_22353C4D0((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_22353D694(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_22353D70C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x22353D740);
  JUMPOUT(0x22353D770);
}

uint64_t sub_22353D778(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE7"
                     "ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6"
                                "_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22353D7E4()
{
  return &unk_24EC45B48;
}

_QWORD *sub_22353D7F0(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC45B68;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_22353D848(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC45B68;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22353D8B0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC45B68;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B380;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_22353D928(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_22353D948(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC45B68;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B380;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_22353D9B0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22353D9C8(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_22353DA18(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B380;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_22353DA64(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B380;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22353DB18(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22353DB54(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE9S"
                     "ubscribeENS1_12ChannelInputIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_"
                                "vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22353DBC0()
{
  return &unk_24EC45BC8;
}

_QWORD *sub_22353DBCC(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC45BE8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22353DC04(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC45BE8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22353DC4C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC45BE8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_22353DC9C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC45BE8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_22353DCCC(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22353DCDC(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22353DD08(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22353DD9C(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22353DDD8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE15"
                     "AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_"
                                "vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22353DE44()
{
  return &unk_24EC45C48;
}

_QWORD *sub_22353DE50(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC45C68;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22353DE88(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC45C68;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22353DED0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC45C68;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22353DF28(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC45C68;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22353DF60(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22353DF70(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22353DF9C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_22353E118(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22353E188(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE1"
                     "6OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6"
                                "_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22353E1F4()
{
  return &unk_24EC45CC8;
}

_QWORD *sub_22353E200(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC45CE8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22353E238(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC45CE8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22353E280(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC45CE8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22353E2D8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC45CE8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22353E310(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22353E320(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22353E34C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22353E404(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22353E450(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE1"
                     "5ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6"
                                "_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeMeshUpdateResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22353E4BC()
{
  return &unk_24EC45D48;
}

void sub_22353E4CC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22353E4F0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_22353E508(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNodeMeshUpdateR"
                     "esultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNode"
                                "MeshUpdateResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNodeMeshUpdateResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNodeMeshUpdateResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_22353E578(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22353E5A4(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22353E5E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC45DB8;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_22353E648(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22353E6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22353E6EC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22353E77C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22353E790(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22353E854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22353E868(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22353E92C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22353E940(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_22353E9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22353E9FC(uint64_t a1)
{
  sub_2235405C8(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22353EA20(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  std::mutex **v21;
  uint64_t **v22;
  std::__shared_weak_count *v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_weak_owners;
  unint64_t v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  uint64_t **v31;
  std::__shared_weak_count *v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void *v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  std::__shared_weak_count *v62[2];
  _QWORD v63[3];
  _QWORD *v64;
  void *__p[2];
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  _BYTE v70[24];
  _BYTE *v71;
  uint64_t v72;

  v72 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v22 = (uint64_t **)a1[9];
    v62[0] = 0;
    v62[1] = 0;
    v23 = (std::__shared_weak_count *)a1[5];
    if (v23)
    {
      v24 = std::__shared_weak_count::lock(v23);
      if (v24)
      {
        v25 = v24;
        v26 = (std::__shared_weak_count *)a1[4];
        p_shared_weak_owners = (unint64_t *)&v24->__shared_weak_owners_;
        do
          v28 = __ldxr(p_shared_weak_owners);
        while (__stxr(v28 + 1, p_shared_weak_owners));
        v62[0] = v26;
        v62[1] = v24;
        p_shared_owners = (unint64_t *)&v24->__shared_owners_;
        do
          v30 = __ldaxr(p_shared_owners);
        while (__stlxr(v30 - 1, p_shared_owners));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      else
      {
        v62[0] = 0;
        v62[1] = 0;
      }
    }
    v47 = v63;
    v48 = a2[3];
    if (v48)
    {
      if ((uint64_t *)v48 == a2)
      {
        v64 = v63;
        (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v63);
LABEL_60:
        sub_22326F694(__p, a2 + 4);
        v69 = 0;
        v49 = (char *)operator new(0x50uLL);
        v50 = v49;
        *(_QWORD *)v49 = &off_24EC460F0;
        *(_OWORD *)(v49 + 8) = *(_OWORD *)v62;
        v62[0] = 0;
        v62[1] = 0;
        if (v64)
        {
          if (v64 == v63)
          {
            *((_QWORD *)v49 + 6) = v49 + 24;
            (*(void (**)(_QWORD *))(v63[0] + 24))(v63);
          }
          else
          {
            *((_QWORD *)v49 + 6) = v64;
            v64 = 0;
          }
        }
        else
        {
          *((_QWORD *)v49 + 6) = 0;
        }
        *(_OWORD *)(v50 + 56) = *(_OWORD *)__p;
        *((_QWORD *)v50 + 9) = v66;
        __p[1] = 0;
        v66 = 0;
        __p[0] = 0;
        v69 = (std::__shared_weak_count *)v50;
        sub_2245022E4(*v22, (uint64_t)&v67);
        v51 = (__int128 *)v69;
        if (v69 == (std::__shared_weak_count *)&v67)
        {
          v52 = 4;
          v51 = &v67;
        }
        else
        {
          if (!v69)
            goto LABEL_70;
          v52 = 5;
        }
        (*(void (**)(void))(*(_QWORD *)v51 + 8 * v52))();
LABEL_70:
        v53 = (char *)__p[0];
        if (__p[0])
        {
          v54 = (char *)__p[1];
          v55 = __p[0];
          if (__p[1] != __p[0])
          {
            do
            {
              v56 = (std::__shared_weak_count *)*((_QWORD *)v54 - 12);
              if (v56)
              {
                v57 = (unint64_t *)&v56->__shared_owners_;
                do
                  v58 = __ldaxr(v57);
                while (__stlxr(v58 - 1, v57));
                if (!v58)
                {
                  ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
                  std::__shared_weak_count::__release_weak(v56);
                }
              }
              v54 -= 120;
            }
            while (v54 != v53);
            v55 = __p[0];
          }
          __p[1] = v53;
          operator delete(v55);
        }
        if (v64 == v63)
        {
          v59 = 4;
        }
        else
        {
          if (!v64)
            goto LABEL_86;
          v59 = 5;
          v47 = v64;
        }
        (*(void (**)(_QWORD *))(*v47 + 8 * v59))(v47);
LABEL_86:
        v46 = v62[1];
        if (!v62[1])
          return;
        goto LABEL_87;
      }
      v48 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v48 + 16))(v48);
    }
    v64 = (_QWORD *)v48;
    goto LABEL_60;
  }
  sub_2235408A4(&v60, a2);
  v5 = v60;
  v4 = v61;
  if (v61)
  {
    v6 = (unint64_t *)&v61->__shared_weak_owners_;
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a1[18];
  v9 = (_QWORD *)operator new();
  *v9 = v8 + 56;
  std::mutex::lock((std::mutex *)(v8 + 56));
  *(_QWORD *)&v67 = v9;
  *((_QWORD *)&v67 + 1) = v8;
  if (!*(_BYTE *)(v8 + 48))
    sub_22324A974();
  v10 = (_QWORD *)(*(_QWORD *)v8 + 16 * *(_QWORD *)(v8 + 32));
  if (v4)
  {
    v11 = (unint64_t *)&v4->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = (std::__shared_weak_count *)v10[1];
  *v10 = v5;
  v10[1] = v4;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v16 = (uint64_t)(*(_QWORD *)(v8 + 8) - *(_QWORD *)v8) >> 4;
  v17 = *(_QWORD *)(v8 + 40);
  v18 = *(_QWORD *)(v8 + 32) + 1;
  if (v18 >= v16)
    v19 = (uint64_t)(*(_QWORD *)(v8 + 8) - *(_QWORD *)v8) >> 4;
  else
    v19 = 0;
  *(_QWORD *)(v8 + 32) = v18 - v19;
  if (v17 != v16)
  {
    *(_QWORD *)(v8 + 40) = v17 + 1;
    v21 = (std::mutex **)v67;
    if (!(_QWORD)v67)
      goto LABEL_35;
    goto LABEL_34;
  }
  v20 = *(_QWORD *)(v8 + 24) + 1;
  if (v20 < v16)
    v16 = 0;
  *(_QWORD *)(v8 + 24) = v20 - v16;
  v21 = (std::mutex **)v67;
  if ((_QWORD)v67)
  {
LABEL_34:
    std::mutex::unlock(*v21);
    MEMORY[0x227684CE8](v21, 0x20C4093837F09);
  }
LABEL_35:
  v31 = (uint64_t **)a1[9];
  v67 = 0uLL;
  v32 = (std::__shared_weak_count *)a1[5];
  if (v32)
  {
    v33 = std::__shared_weak_count::lock(v32);
    if (v33)
    {
      v34 = v33;
      v35 = a1[4];
      v36 = (unint64_t *)&v33->__shared_weak_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
      *(_QWORD *)&v67 = v35;
      *((_QWORD *)&v67 + 1) = v33;
      v38 = (unint64_t *)&v33->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
    else
    {
      v67 = 0uLL;
    }
  }
  v68 = v5;
  v69 = v4;
  v71 = 0;
  v40 = (char *)operator new(0x30uLL);
  *(_QWORD *)v40 = &off_24EC46070;
  *(_OWORD *)(v40 + 8) = v67;
  v67 = 0uLL;
  *((_QWORD *)v40 + 3) = v5;
  *((_QWORD *)v40 + 4) = v4;
  v68 = 0;
  v69 = 0;
  v71 = v40;
  sub_2245022E4(*v31, (uint64_t)v70);
  v41 = v71;
  if (v71 == v70)
  {
    v42 = 4;
    v41 = v70;
    goto LABEL_48;
  }
  if (v71)
  {
    v42 = 5;
LABEL_48:
    (*(void (**)(void))(*v41 + 8 * v42))();
  }
  v43 = v61;
  if (v61)
  {
    v44 = (unint64_t *)&v61->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      v46 = v43;
LABEL_87:
      std::__shared_weak_count::__release_weak(v46);
    }
  }
}

void sub_22353EF78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22353F0DC(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22353F0EC(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22353F0F8(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_22353F108(_QWORD *a1, uint64_t *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  _QWORD *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  std::mutex **v26;
  uint64_t **v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_weak_owners;
  unint64_t v33;
  unint64_t *p_shared_owners;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t **v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  char *v47;
  std::string *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  std::__shared_weak_count *v56;
  _QWORD *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  __int128 *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  char *v66;
  char *v67;
  void *v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  std::__shared_weak_count *v76;
  std::string *v77;
  std::runtime_error *exception;
  std::runtime_error *v79;
  _QWORD *v80;
  _QWORD *v81;
  std::__shared_weak_count *v82;
  std::runtime_error v83;
  _QWORD *v84;
  std::__shared_weak_count *v85;
  std::__shared_weak_count *v86[2];
  _QWORD v87[3];
  _QWORD *v88;
  void *__p[2];
  uint64_t v90;
  _QWORD *v91;
  std::__shared_weak_count *v92;
  __int128 v93;
  _QWORD *v94;
  std::__shared_weak_count *v95;
  _QWORD *v96;
  _QWORD *v97;
  std::string v98;
  std::string *v99;
  uint64_t v100;

  v100 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v93 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v93 + 1) = 45;
    v75 = (_QWORD *)a1[6];
    v74 = a1 + 6;
    v73 = v75;
    v76 = (std::__shared_weak_count *)*((unsigned __int8 *)v74 + 23);
    if ((char)v76 < 0)
      v76 = (std::__shared_weak_count *)v74[1];
    else
      v73 = v74;
    v94 = v73;
    v95 = v76;
    sub_2231A9820((uint64_t)&v93, (uint64_t)&v96, 0, 0, &v98);
    if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v77 = &v98;
    else
      v77 = (std::string *)v98.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v83, (const char *)v77);
    v83.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v79 = std::runtime_error::runtime_error(exception, &v83);
    v79->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v79, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v27 = (uint64_t **)a1[9];
    v86[0] = 0;
    v86[1] = 0;
    v28 = (std::__shared_weak_count *)a1[5];
    if (!v28)
      goto LABEL_36;
    v29 = std::__shared_weak_count::lock(v28);
    if (v29)
    {
      v30 = v29;
      v31 = (std::__shared_weak_count *)a1[4];
      p_shared_weak_owners = (unint64_t *)&v29->__shared_weak_owners_;
      do
        v33 = __ldxr(p_shared_weak_owners);
      while (__stxr(v33 + 1, p_shared_weak_owners));
      v86[0] = v31;
      v86[1] = v29;
      p_shared_owners = (unint64_t *)&v29->__shared_owners_;
      do
        v35 = __ldaxr(p_shared_owners);
      while (__stlxr(v35 - 1, p_shared_owners));
      if (v35)
      {
LABEL_36:
        v36 = v87;
        v37 = a2[3];
        if (!v37)
          goto LABEL_39;
        goto LABEL_37;
      }
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v30);
      v36 = v87;
      v37 = a2[3];
      if (!v37)
        goto LABEL_39;
    }
    else
    {
      v86[0] = 0;
      v86[1] = 0;
      v36 = v87;
      v37 = a2[3];
      if (!v37)
        goto LABEL_39;
    }
LABEL_37:
    if ((uint64_t *)v37 == a2)
    {
      v88 = v87;
      (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v87);
LABEL_69:
      sub_22326F694(__p, a2 + 4);
      v56 = (std::__shared_weak_count *)operator new(0x20uLL);
      v56->__shared_owners_ = 0;
      v56->__shared_weak_owners_ = 0;
      v56->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46170;
      v56[1].__vftable = *a3;
      v57 = &v56[1].__vftable;
      *a3 = 0;
      v91 = &v56[1].__vftable;
      v92 = v56;
      v95 = 0;
      v58 = (char *)operator new(0x60uLL);
      v59 = v58;
      *(_QWORD *)v58 = &off_24EC46240;
      *(_OWORD *)(v58 + 8) = *(_OWORD *)v86;
      v86[0] = 0;
      v86[1] = 0;
      if (v88)
      {
        if (v88 == v87)
        {
          *((_QWORD *)v58 + 6) = v58 + 24;
          (*(void (**)(_QWORD *))(v87[0] + 24))(v87);
          v57 = v91;
          v56 = v92;
        }
        else
        {
          *((_QWORD *)v58 + 6) = v88;
          v88 = 0;
        }
      }
      else
      {
        *((_QWORD *)v58 + 6) = 0;
      }
      *(_OWORD *)(v59 + 56) = *(_OWORD *)__p;
      v60 = v90;
      __p[1] = 0;
      v90 = 0;
      __p[0] = 0;
      *((_QWORD *)v59 + 9) = v60;
      *((_QWORD *)v59 + 10) = v57;
      *((_QWORD *)v59 + 11) = v56;
      v91 = 0;
      v92 = 0;
      v95 = (std::__shared_weak_count *)v59;
      sub_2245022E4(*v27, (uint64_t)&v93);
      v61 = (__int128 *)v95;
      if (v95 == (std::__shared_weak_count *)&v93)
      {
        v62 = 4;
        v61 = &v93;
      }
      else
      {
        if (!v95)
        {
LABEL_79:
          v63 = v92;
          if (v92)
          {
            v64 = (unint64_t *)&v92->__shared_owners_;
            do
              v65 = __ldaxr(v64);
            while (__stlxr(v65 - 1, v64));
            if (!v65)
            {
              ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
              std::__shared_weak_count::__release_weak(v63);
            }
          }
          v66 = (char *)__p[0];
          if (__p[0])
          {
            v67 = (char *)__p[1];
            v68 = __p[0];
            if (__p[1] != __p[0])
            {
              do
              {
                v69 = (std::__shared_weak_count *)*((_QWORD *)v67 - 12);
                if (v69)
                {
                  v70 = (unint64_t *)&v69->__shared_owners_;
                  do
                    v71 = __ldaxr(v70);
                  while (__stlxr(v71 - 1, v70));
                  if (!v71)
                  {
                    ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
                    std::__shared_weak_count::__release_weak(v69);
                  }
                }
                v67 -= 120;
              }
              while (v67 != v66);
              v68 = __p[0];
            }
            __p[1] = v66;
            operator delete(v68);
          }
          if (v88 == v87)
          {
            v72 = 4;
          }
          else
          {
            if (!v88)
              goto LABEL_100;
            v72 = 5;
            v36 = v88;
          }
          (*(void (**)(_QWORD *))(*v36 + 8 * v72))(v36);
LABEL_100:
          v55 = v86[1];
          if (!v86[1])
            return;
          goto LABEL_101;
        }
        v62 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v61 + 8 * v62))();
      goto LABEL_79;
    }
    v37 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 16))(v37);
LABEL_39:
    v88 = (_QWORD *)v37;
    goto LABEL_69;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46170;
  v6[1].__vftable = *a3;
  v82 = v6;
  v80 = &v6[1].__vftable;
  v81 = &v6->__vftable;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_2235408A4(&v84, a2);
  v10 = v84;
  v9 = v85;
  if (v85)
  {
    v11 = (unint64_t *)&v85->__shared_weak_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = a1[18];
  v14 = (_QWORD *)operator new();
  *v14 = v13 + 56;
  std::mutex::lock((std::mutex *)(v13 + 56));
  *(_QWORD *)&v93 = v14;
  *((_QWORD *)&v93 + 1) = v13;
  if (!*(_BYTE *)(v13 + 48))
    sub_22324A974();
  v15 = (_QWORD *)(*(_QWORD *)v13 + 16 * *(_QWORD *)(v13 + 32));
  if (v9)
  {
    v16 = (unint64_t *)&v9->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v18 = (std::__shared_weak_count *)v15[1];
  *v15 = v10;
  v15[1] = v9;
  if (v18)
  {
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = (uint64_t)(*(_QWORD *)(v13 + 8) - *(_QWORD *)v13) >> 4;
  v22 = *(_QWORD *)(v13 + 40);
  v23 = *(_QWORD *)(v13 + 32) + 1;
  if (v23 >= v21)
    v24 = (uint64_t)(*(_QWORD *)(v13 + 8) - *(_QWORD *)v13) >> 4;
  else
    v24 = 0;
  *(_QWORD *)(v13 + 32) = v23 - v24;
  if (v22 != v21)
  {
    *(_QWORD *)(v13 + 40) = v22 + 1;
    v26 = (std::mutex **)v93;
    if (!(_QWORD)v93)
      goto LABEL_42;
    goto LABEL_41;
  }
  v25 = *(_QWORD *)(v13 + 24) + 1;
  if (v25 < v21)
    v21 = 0;
  *(_QWORD *)(v13 + 24) = v25 - v21;
  v26 = (std::mutex **)v93;
  if ((_QWORD)v93)
  {
LABEL_41:
    std::mutex::unlock(*v26);
    MEMORY[0x227684CE8](v26, 0x20C4093837F09);
  }
LABEL_42:
  v38 = (uint64_t **)a1[9];
  v93 = 0uLL;
  v39 = (std::__shared_weak_count *)a1[5];
  if (v39)
  {
    v40 = std::__shared_weak_count::lock(v39);
    if (v40)
    {
      v41 = v40;
      v42 = a1[4];
      v43 = (unint64_t *)&v40->__shared_weak_owners_;
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 1, v43));
      *(_QWORD *)&v93 = v42;
      *((_QWORD *)&v93 + 1) = v40;
      v45 = (unint64_t *)&v40->__shared_owners_;
      do
        v46 = __ldaxr(v45);
      while (__stlxr(v46 - 1, v45));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
    else
    {
      v93 = 0uLL;
    }
  }
  v94 = v10;
  v95 = v9;
  v96 = v80;
  v97 = v81;
  v99 = 0;
  v47 = (char *)operator new(0x38uLL);
  *(_QWORD *)v47 = &off_24EC461C0;
  *(_OWORD *)(v47 + 8) = v93;
  v93 = 0uLL;
  *((_QWORD *)v47 + 3) = v10;
  *((_QWORD *)v47 + 4) = v9;
  v94 = 0;
  v95 = 0;
  *((_QWORD *)v47 + 5) = v80;
  *((_QWORD *)v47 + 6) = v81;
  v96 = 0;
  v97 = 0;
  v99 = (std::string *)v47;
  sub_2245022E4(*v38, (uint64_t)&v98);
  v48 = v99;
  if (v99 == &v98)
  {
    v49 = 4;
    v48 = &v98;
    goto LABEL_55;
  }
  if (v99)
  {
    v49 = 5;
LABEL_55:
    (*(void (**)(void))(v48->__r_.__value_.__r.__words[0] + 8 * v49))();
  }
  v50 = v85;
  if (v85)
  {
    v51 = (unint64_t *)&v85->__shared_owners_;
    do
      v52 = __ldaxr(v51);
    while (__stlxr(v52 - 1, v51));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  if (v82)
  {
    v53 = (unint64_t *)&v82->__shared_owners_;
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
      v55 = v82;
LABEL_101:
      std::__shared_weak_count::__release_weak(v55);
    }
  }
}

void sub_22353F8B8(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22353F8C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22353F8D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15)
{
  std::__assoc_sub_state **v15;
  uint64_t v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v17 = *v15;
    if (*v15)
    {
      std::exception_ptr::exception_ptr((std::exception_ptr *)(v16 - 160), &a15);
      v18.__ptr_ = (void *)(v16 - 160);
      std::__assoc_sub_state::set_exception(v17, v18);
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v16 - 160));
      std::exception_ptr::~exception_ptr(&a15);
      std::runtime_error::~runtime_error(&a14);
      if (*(char *)(v16 - 81) < 0)
        operator delete(*(void **)(v16 - 104));
      JUMPOUT(0x22353F7A0);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_22353F944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15)
{
  uint64_t v15;

  std::exception_ptr::~exception_ptr(&a15);
  std::runtime_error::~runtime_error(&a14);
  if (*(char *)(v15 - 81) < 0)
  {
    operator delete(*(void **)(v15 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22353F994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v14;
  uint64_t v15;
  va_list va;

  va_start(va, a11);
  v14 = *(_QWORD **)(v12 - 136);
  if (v14 == v11)
  {
    v15 = 4;
    v14 = (_QWORD *)(v12 - 160);
  }
  else
  {
    if (!v14)
    {
      sub_223541CB0((uint64_t *)va);
      _Unwind_Resume(a1);
    }
    v15 = 5;
  }
  (*(void (**)(void))(*v14 + 8 * v15))();
  sub_223541CB0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_22353F9E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  _QWORD *v20;

  sub_223540AB8(v20);
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x22353FA44);
}

void sub_22353F9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24)
{
  _QWORD *v24;
  uint64_t v26;

  if (a24 == v24)
  {
    v26 = 4;
  }
  else
  {
    if (!a24)
      goto LABEL_6;
    v26 = 5;
    v24 = a24;
  }
  (*(void (**)(_QWORD *))(*v24 + 8 * v26))(v24);
LABEL_6:
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x22353FA44);
}

void sub_22353FA4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  va_list va1;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v10 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  v14 = va_arg(va2, _QWORD);
  v15 = va_arg(va2, _QWORD);
  v5 = *(_QWORD **)(v3 - 80);
  if (v5 == v2)
  {
    v6 = 4;
    v5 = (_QWORD *)(v3 - 104);
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  sub_22332429C((_QWORD *)(v3 - 160));
  sub_223167354((uint64_t)va2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22353FAF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22353FB0C(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_22353FB80(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC462C0;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B3B8;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_22353FCB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22353FD24(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC46340;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_22353FE34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_22353FE98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC463C0;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235400B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_223540178@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC46440;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_223540390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223540458(uint64_t a1)
{
  return sub_2235405C8(a1 - 16);
}

void sub_223540460(uint64_t a1)
{
  sub_2235405C8(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223540488(uint64_t a1, uint64_t a2)
{
  return sub_22353FB80((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_223540490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22353FE98((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_223540498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_223540178((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_2235404A0(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_2235404A8(uint64_t a1)
{
  return sub_2235405C8(a1 - 24);
}

void sub_2235404B0(uint64_t a1)
{
  sub_2235405C8(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235404D8(uint64_t a1)
{
  return sub_22353FD24((_QWORD *)(a1 - 24));
}

uint64_t sub_2235404E0(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235404E8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_223540550(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235405B8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235405C8(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC45E20;
  *(_QWORD *)(a1 + 16) = &unk_24EC45E98;
  *(_QWORD *)(a1 + 24) = &unk_24EC45ED8;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

_QWORD *sub_2235407C8(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = a1 + 2;
  v3 = a1[6];
  if (v3)
  {
    v4 = a1[7];
    v5 = (void *)a1[6];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[6];
    }
    a1[7] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[5];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[1];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  return a1;
}

_QWORD *sub_2235408A4(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;

  v4 = operator new(0x50uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_24EC46020;
  v5 = v4 + 3;
  v6 = a2[3];
  if (v6)
  {
    if ((uint64_t *)v6 == a2)
    {
      v4[6] = v5;
      (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v5);
      goto LABEL_6;
    }
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
  }
  v4[6] = v6;
LABEL_6:
  result = sub_22326F694(v4 + 7, a2 + 4);
  *a1 = v5;
  a1[1] = v4;
  return result;
}

void sub_223540938(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_223540950(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count_vtbl *v2;
  std::__shared_weak_count_vtbl *v4;
  uint64_t v5;
  void *v6;

  v4 = v1[2].__vftable;
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = v1[2].__vftable;
  }
  (*((void (**)(std::__shared_weak_count_vtbl *))v2->~__shared_weak_count + v5))(v2);
LABEL_6:
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v6);
  _Unwind_Resume(a1);
}

void sub_223540998(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46020;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2235409A8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46020;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235409D8(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *result;
  uint64_t v10;

  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  result = (_QWORD *)a1[6];
  if (result == v2)
  {
    v10 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v10 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v10))();
}

_QWORD *sub_223540AB8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = a1[4];
  if (v2)
  {
    v3 = a1[5];
    v4 = (void *)a1[4];
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 96);
        if (v5)
        {
          p_shared_owners = (unint64_t *)&v5->__shared_owners_;
          do
            v7 = __ldaxr(p_shared_owners);
          while (__stlxr(v7 - 1, p_shared_owners));
          if (!v7)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
        v3 -= 120;
      }
      while (v3 != v2);
      v4 = (void *)a1[4];
    }
    a1[5] = v2;
    operator delete(v4);
  }
  v8 = (_QWORD *)a1[3];
  if (v8 == a1)
  {
    v9 = 4;
    v8 = a1;
    goto LABEL_16;
  }
  if (v8)
  {
    v9 = 5;
LABEL_16:
    (*(void (**)(void))(*v8 + 8 * v9))();
  }
  return a1;
}

_QWORD *sub_223540B7C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC46070;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_223540BC0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC46070;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223540C14(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC46070;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_223540C84(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC46070;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_223540CD4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223540D10(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_223540D48(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_22354106C((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_223541448(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223540F10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_223541448(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223540FF4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE2"
                     "5EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6"
                                "_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223541060()
{
  return &unk_24EC460D0;
}

_QWORD *sub_22354106C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  char *v9;
  char *v10;
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  _QWORD *result;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD *v18;
  void *__p;
  char *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v17, v6, a2);
  v7 = a1 + 1;
  for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
    (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v17);
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_223541320(*(_QWORD *)a3, (uint64_t)v17);
  }
  v9 = (char *)__p;
  if (__p)
  {
    v10 = v20;
    v11 = __p;
    if (v20 != __p)
    {
      do
      {
        v12 = (std::__shared_weak_count *)*((_QWORD *)v10 - 12);
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v14 = __ldaxr(p_shared_owners);
          while (__stlxr(v14 - 1, p_shared_owners));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        v10 -= 120;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v20 = v9;
    operator delete(v11);
  }
  result = v18;
  if (v18 == v17)
  {
    v16 = 4;
    result = v17;
  }
  else
  {
    if (!v18)
      return result;
    v16 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
}

void sub_22354121C(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  uint64_t *v5;
  uint64_t v6;
  va_list v7;
  uint64_t v8;
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;
  va_list v13;
  va_list va2;
  uint64_t v15;
  uint64_t v16;
  va_list va3;

  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v11 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v13 = va_arg(va3, va_list);
  v15 = va_arg(va3, _QWORD);
  v16 = va_arg(va3, _QWORD);
  sub_223540AB8((uint64_t *)va3);
  if (a2 == 1)
  {
    v5 = (uint64_t *)__cxa_begin_catch(a1);
    v6 = *v5;
    v11 = *(_QWORD *)(*(_QWORD *)(*v5 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    v9 = (*(uint64_t (**)(void))(v6 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", va1, "\n", "message: ", va, "\n");
    if (v16 >= 0)
      va_copy(v7, va2);
    else
      v7 = v13;
    if (v16 >= 0)
      v8 = HIBYTE(v16);
    else
      v8 = v15;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v7, v8, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_2235412E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_223541308(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x223541310);
  sub_22316DC48(a1);
}

void sub_223541320(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  uint64_t v5;
  uint64_t v6;
  std::exception_ptr v7;

  v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(_BYTE *)(a1 + 136) & 1) != 0
    || (v7.__ptr_ = 0, v5 = *(_QWORD *)(a1 + 16), std::exception_ptr::~exception_ptr(&v7), v5))
  {
    sub_2233236D4(2u);
  }
  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    if (v6 == a2)
    {
      *(_QWORD *)(a1 + 168) = a1 + 144;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1 + 144);
      goto LABEL_8;
    }
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
  }
  *(_QWORD *)(a1 + 168) = v6;
LABEL_8:
  sub_22326F694((_QWORD *)(a1 + 176), (uint64_t *)(a2 + 32));
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock(v4);
}

void sub_2235413F0(_Unwind_Exception *a1)
{
  std::mutex *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;

  v5 = *(_QWORD **)(v2 + 168);
  if (v5 == v3)
  {
    v6 = 4;
  }
  else
  {
    if (!v5)
    {
      std::mutex::unlock(v1);
      _Unwind_Resume(a1);
    }
    v6 = 5;
    v3 = *(_QWORD **)(v2 + 168);
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v6))(v3);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_223541448(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  const std::error_category *v7;
  std::logic_error *exception;
  std::logic_error *v9;
  std::logic_error v10;
  std::logic_error v11;
  std::exception_ptr v12;

  v2 = *a1;
  if (!v2)
    return a1;
  if ((*(_BYTE *)(v2 + 136) & 1) == 0)
  {
    v12.__ptr_ = 0;
    v3 = *(_QWORD *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v12);
    v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v7 = std::future_category();
      MEMORY[0x2276844A8](&v10, 4, v7);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      v9 = std::logic_error::logic_error(exception, &v10);
      v9->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB810] + 16);
      v9[1] = v11;
      __cxa_throw(v9, MEMORY[0x24BEDB6E0], (void (*)(void *))MEMORY[0x24BEDAD80]);
    }
  }
  v4 = (unint64_t *)(v2 + 8);
  do
    v5 = __ldaxr(v4);
  while (__stlxr(v5 - 1, v4));
  if (v5)
    return a1;
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  return a1;
}

void sub_223541534(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__assoc_sub_state *a10, char a11)
{
  uint64_t v11;
  std::exception_ptr v12;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v12.__ptr_ = (void *)(v11 - 32);
  std::__assoc_sub_state::set_exception(a10, v12);
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(v11 - 32));
  MEMORY[0x2276844B4](&a11);
  JUMPOUT(0x223541490);
}

_QWORD *sub_223541570(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC460F0;
  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_223541658(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC460F0;
  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223541750(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = operator new(0x50uLL);
  v3 = v2;
  v5 = a1[1];
  v4 = a1[2];
  *v2 = &off_24EC460F0;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = v2 + 3;
  v9 = a1[6];
  if (v9)
  {
    if ((_QWORD *)v9 == a1 + 3)
    {
      v3[6] = v8;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v9 + 24))(v9, v3 + 3);
      goto LABEL_9;
    }
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  }
  v3[6] = v9;
LABEL_9:
  sub_22326F694(v3 + 7, a1 + 7);
  return v3;
}

void sub_2235417FC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (!v3)
  {
    operator delete(v1);
    _Unwind_Resume(a1);
  }
  std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_223541874(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC460F0;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a1[6];
  if (v8)
  {
    if ((_QWORD *)v8 == a1 + 3)
    {
      a2[6] = a2 + 3;
      (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a1[6] + 24))(a1[6], a2 + 3);
      return sub_22326F694(a2 + 7, a1 + 7);
    }
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
  }
  a2[6] = v8;
  return sub_22326F694(a2 + 7, a1 + 7);
}

void sub_223541918(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (!v3)
    _Unwind_Resume(exception_object);
  std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223541980(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
}

void sub_223541A68(char *__p)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = __p + 24;
  v3 = *((_QWORD *)__p + 7);
  if (v3)
  {
    v4 = *((_QWORD *)__p + 8);
    v5 = (void *)*((_QWORD *)__p + 7);
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)*((_QWORD *)__p + 7);
    }
    *((_QWORD *)__p + 8) = v3;
    operator delete(v5);
  }
  v9 = (char *)*((_QWORD *)__p + 6);
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  operator delete(__p);
}

void sub_223541B44(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_22354106C((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_223541448(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223541BEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_223541448(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223541C38(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE4"
                     "SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6"
                                "_vS6_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223541CA4()
{
  return &unk_24EC46150;
}

_QWORD *sub_223541CB0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  v2 = (std::__shared_weak_count *)a1[10];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 2;
    v6 = (char *)a1[6];
    if (!v6)
      goto LABEL_16;
  }
  else
  {
LABEL_5:
    v5 = a1 + 2;
    v6 = (char *)a1[6];
    if (!v6)
      goto LABEL_16;
  }
  v7 = (char *)a1[7];
  v8 = v6;
  if (v7 != v6)
  {
    do
    {
      v9 = (std::__shared_weak_count *)*((_QWORD *)v7 - 12);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v7 -= 120;
    }
    while (v7 != v6);
    v8 = (char *)a1[6];
  }
  a1[7] = v6;
  operator delete(v8);
LABEL_16:
  v12 = (_QWORD *)a1[5];
  if (v12 == v5)
  {
    v13 = 4;
    v12 = v5;
  }
  else
  {
    if (!v12)
      goto LABEL_21;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[1];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  return a1;
}

void sub_223541DD4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46170;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223541DE4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46170;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t *sub_223541E14(uint64_t a1)
{
  return sub_223541448((uint64_t *)(a1 + 24));
}

_QWORD *sub_223541E20(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC461C0;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_223541EA8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC461C0;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_223541F40(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC461C0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_223541FD0(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC461C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_223542040(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_2235420C0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_22354213C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_22354106C(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_223541448((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223542418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223542444(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x223542250);
    JUMPOUT(0x223542220);
  }
  sub_2233236D4(3u);
}

void sub_2235424A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235424CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_223541448(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235425B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE2"
                     "5EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6"
                                "_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E"
                                "_EEvSA_SE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223542624()
{
  return &unk_24EC46220;
}

_QWORD *sub_223542630(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  *a1 = &off_24EC46240;
  v2 = (std::__shared_weak_count *)a1[11];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  v7 = (char *)a1[8];
  v8 = v6;
  if (v7 != v6)
  {
    do
    {
      v9 = (std::__shared_weak_count *)*((_QWORD *)v7 - 12);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v7 -= 120;
    }
    while (v7 != v6);
    v8 = (char *)a1[7];
  }
  a1[8] = v6;
  operator delete(v8);
LABEL_16:
  v12 = (_QWORD *)a1[6];
  if (v12 == v5)
  {
    v13 = 4;
    v12 = v5;
  }
  else
  {
    if (!v12)
      goto LABEL_21;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[2];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  return a1;
}

void sub_223542760(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  *a1 = &off_24EC46240;
  v2 = (std::__shared_weak_count *)a1[11];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  v7 = (char *)a1[8];
  v8 = v6;
  if (v7 != v6)
  {
    do
    {
      v9 = (std::__shared_weak_count *)*((_QWORD *)v7 - 12);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v7 -= 120;
    }
    while (v7 != v6);
    v8 = (char *)a1[7];
  }
  a1[8] = v6;
  operator delete(v8);
LABEL_16:
  v12 = (_QWORD *)a1[6];
  if (v12 == v5)
  {
    v13 = 4;
    v12 = v5;
  }
  else
  {
    if (!v12)
      goto LABEL_21;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[2];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235428A0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(a1 + 8);
  v2 = operator new(0x60uLL);
  *v2 = &off_24EC46240;
  sub_223542BAC(v2 + 1, v1);
  return v2;
}

void sub_2235428E0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2235428F4(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24EC46240;
  return sub_223542BAC(a2 + 1, (_QWORD *)(a1 + 8));
}

void sub_223542910(uint64_t a1)
{
  sub_223542CD0((_QWORD *)(a1 + 8));
}

void sub_223542918(_QWORD *a1)
{
  sub_223542CD0(a1 + 1);
  operator delete(a1);
}

void sub_223542940(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[10];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_22354106C((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_223541448((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_223542A50(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_223542AC8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x223542AFCLL);
  JUMPOUT(0x223542B2CLL);
}

uint64_t sub_223542B34(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE7"
                     "ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6"
                                "_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223542BA0()
{
  return &unk_24EC462A0;
}

_QWORD *sub_223542BAC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1 + 2;
  v8 = a2[5];
  if (!v8)
    goto LABEL_7;
  if ((_QWORD *)v8 != a2 + 2)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
LABEL_7:
    a1[5] = v8;
    goto LABEL_9;
  }
  a1[5] = v7;
  (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[5] + 24))(a2[5], a1 + 2);
LABEL_9:
  sub_22326F694(a1 + 6, a2 + 6);
  v9 = a2[10];
  a1[9] = a2[9];
  a1[10] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return a1;
}

void sub_223542C68(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (!v3)
    _Unwind_Resume(exception_object);
  std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223542CD0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  v2 = (std::__shared_weak_count *)a1[10];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 2;
    v6 = (char *)a1[6];
    if (!v6)
      goto LABEL_16;
  }
  else
  {
LABEL_5:
    v5 = a1 + 2;
    v6 = (char *)a1[6];
    if (!v6)
      goto LABEL_16;
  }
  v7 = (char *)a1[7];
  v8 = v6;
  if (v7 != v6)
  {
    do
    {
      v9 = (std::__shared_weak_count *)*((_QWORD *)v7 - 12);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v7 -= 120;
    }
    while (v7 != v6);
    v8 = (char *)a1[6];
  }
  a1[7] = v6;
  operator delete(v8);
LABEL_16:
  v12 = (_QWORD *)a1[5];
  if (v12 == v5)
  {
    v13 = 4;
    v12 = v5;
  }
  else
  {
    if (!v12)
      goto LABEL_21;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[1];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
}

_QWORD *sub_223542E00(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC462C0;
  v2 = a1[4];
  a1[3] = &off_24EC2B3B8;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_223542E58(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC462C0;
  v2 = a1[4];
  a1[3] = &off_24EC2B3B8;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223542EC0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC462C0;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B3B8;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_223542F38(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223542F58(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC462C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B3B8;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_223542FC0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223542FD8(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B3B8;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223543028(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B3B8;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_223543074(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B3B8;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223543128(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223543164(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE9S"
                     "ubscribeENS1_12ChannelInputIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_"
                                "vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235431D0()
{
  return &unk_24EC46320;
}

_QWORD *sub_2235431DC(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC46340;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223543214(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC46340;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354325C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC46340;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_2235432AC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC46340;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235432DC(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235432EC(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223543318(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235433AC(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235433E8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE15"
                     "AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_"
                                "vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223543454()
{
  return &unk_24EC463A0;
}

_QWORD *sub_223543460(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC463C0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223543498(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC463C0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235434E0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC463C0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_223543538(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC463C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_223543570(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223543580(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235435AC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_223543728(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223543798(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE1"
                     "6OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6"
                                "_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223543804()
{
  return &unk_24EC46420;
}

_QWORD *sub_223543810(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC46440;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223543848(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC46440;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223543890(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC46440;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235438E8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC46440;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_223543920(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223543930(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22354395C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223543A14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223543A60(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE1"
                     "5ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6"
                                "_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeGlobalMeshResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223543ACC()
{
  return &unk_24EC464A0;
}

void sub_223543ADC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223543B00(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_223543B18(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNodeGlobalMeshR"
                     "esultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNode"
                                "GlobalMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNodeGlobalMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNodeGlobalMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_223543B88(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223543BB4(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223543BF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC46510;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_223543C58(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223543CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223543CFC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223543D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223543DA0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_223543E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223543E78(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_223543F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223543F50(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223543FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22354400C(uint64_t a1)
{
  sub_223545BD8(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223544030(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  std::mutex **v21;
  uint64_t **v22;
  std::__shared_weak_count *v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_weak_owners;
  unint64_t v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  uint64_t **v31;
  std::__shared_weak_count *v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void *v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  std::__shared_weak_count *v62[2];
  _QWORD v63[3];
  _QWORD *v64;
  void *__p[2];
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  _BYTE v70[24];
  _BYTE *v71;
  uint64_t v72;

  v72 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v22 = (uint64_t **)a1[9];
    v62[0] = 0;
    v62[1] = 0;
    v23 = (std::__shared_weak_count *)a1[5];
    if (v23)
    {
      v24 = std::__shared_weak_count::lock(v23);
      if (v24)
      {
        v25 = v24;
        v26 = (std::__shared_weak_count *)a1[4];
        p_shared_weak_owners = (unint64_t *)&v24->__shared_weak_owners_;
        do
          v28 = __ldxr(p_shared_weak_owners);
        while (__stxr(v28 + 1, p_shared_weak_owners));
        v62[0] = v26;
        v62[1] = v24;
        p_shared_owners = (unint64_t *)&v24->__shared_owners_;
        do
          v30 = __ldaxr(p_shared_owners);
        while (__stlxr(v30 - 1, p_shared_owners));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      else
      {
        v62[0] = 0;
        v62[1] = 0;
      }
    }
    v47 = v63;
    v48 = a2[3];
    if (v48)
    {
      if ((uint64_t *)v48 == a2)
      {
        v64 = v63;
        (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v63);
LABEL_60:
        sub_22326F694(__p, a2 + 4);
        v69 = 0;
        v49 = (char *)operator new(0x50uLL);
        v50 = v49;
        *(_QWORD *)v49 = &off_24EC46848;
        *(_OWORD *)(v49 + 8) = *(_OWORD *)v62;
        v62[0] = 0;
        v62[1] = 0;
        if (v64)
        {
          if (v64 == v63)
          {
            *((_QWORD *)v49 + 6) = v49 + 24;
            (*(void (**)(_QWORD *))(v63[0] + 24))(v63);
          }
          else
          {
            *((_QWORD *)v49 + 6) = v64;
            v64 = 0;
          }
        }
        else
        {
          *((_QWORD *)v49 + 6) = 0;
        }
        *(_OWORD *)(v50 + 56) = *(_OWORD *)__p;
        *((_QWORD *)v50 + 9) = v66;
        __p[1] = 0;
        v66 = 0;
        __p[0] = 0;
        v69 = (std::__shared_weak_count *)v50;
        sub_2245022E4(*v22, (uint64_t)&v67);
        v51 = (__int128 *)v69;
        if (v69 == (std::__shared_weak_count *)&v67)
        {
          v52 = 4;
          v51 = &v67;
        }
        else
        {
          if (!v69)
            goto LABEL_70;
          v52 = 5;
        }
        (*(void (**)(void))(*(_QWORD *)v51 + 8 * v52))();
LABEL_70:
        v53 = (char *)__p[0];
        if (__p[0])
        {
          v54 = (char *)__p[1];
          v55 = __p[0];
          if (__p[1] != __p[0])
          {
            do
            {
              v56 = (std::__shared_weak_count *)*((_QWORD *)v54 - 12);
              if (v56)
              {
                v57 = (unint64_t *)&v56->__shared_owners_;
                do
                  v58 = __ldaxr(v57);
                while (__stlxr(v58 - 1, v57));
                if (!v58)
                {
                  ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
                  std::__shared_weak_count::__release_weak(v56);
                }
              }
              v54 -= 120;
            }
            while (v54 != v53);
            v55 = __p[0];
          }
          __p[1] = v53;
          operator delete(v55);
        }
        if (v64 == v63)
        {
          v59 = 4;
        }
        else
        {
          if (!v64)
            goto LABEL_86;
          v59 = 5;
          v47 = v64;
        }
        (*(void (**)(_QWORD *))(*v47 + 8 * v59))(v47);
LABEL_86:
        v46 = v62[1];
        if (!v62[1])
          return;
        goto LABEL_87;
      }
      v48 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v48 + 16))(v48);
    }
    v64 = (_QWORD *)v48;
    goto LABEL_60;
  }
  sub_223545DD8(&v60, a2);
  v5 = v60;
  v4 = v61;
  if (v61)
  {
    v6 = (unint64_t *)&v61->__shared_weak_owners_;
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a1[18];
  v9 = (_QWORD *)operator new();
  *v9 = v8 + 56;
  std::mutex::lock((std::mutex *)(v8 + 56));
  *(_QWORD *)&v67 = v9;
  *((_QWORD *)&v67 + 1) = v8;
  if (!*(_BYTE *)(v8 + 48))
    sub_22324A974();
  v10 = (_QWORD *)(*(_QWORD *)v8 + 16 * *(_QWORD *)(v8 + 32));
  if (v4)
  {
    v11 = (unint64_t *)&v4->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = (std::__shared_weak_count *)v10[1];
  *v10 = v5;
  v10[1] = v4;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v16 = (uint64_t)(*(_QWORD *)(v8 + 8) - *(_QWORD *)v8) >> 4;
  v17 = *(_QWORD *)(v8 + 40);
  v18 = *(_QWORD *)(v8 + 32) + 1;
  if (v18 >= v16)
    v19 = (uint64_t)(*(_QWORD *)(v8 + 8) - *(_QWORD *)v8) >> 4;
  else
    v19 = 0;
  *(_QWORD *)(v8 + 32) = v18 - v19;
  if (v17 != v16)
  {
    *(_QWORD *)(v8 + 40) = v17 + 1;
    v21 = (std::mutex **)v67;
    if (!(_QWORD)v67)
      goto LABEL_35;
    goto LABEL_34;
  }
  v20 = *(_QWORD *)(v8 + 24) + 1;
  if (v20 < v16)
    v16 = 0;
  *(_QWORD *)(v8 + 24) = v20 - v16;
  v21 = (std::mutex **)v67;
  if ((_QWORD)v67)
  {
LABEL_34:
    std::mutex::unlock(*v21);
    MEMORY[0x227684CE8](v21, 0x20C4093837F09);
  }
LABEL_35:
  v31 = (uint64_t **)a1[9];
  v67 = 0uLL;
  v32 = (std::__shared_weak_count *)a1[5];
  if (v32)
  {
    v33 = std::__shared_weak_count::lock(v32);
    if (v33)
    {
      v34 = v33;
      v35 = a1[4];
      v36 = (unint64_t *)&v33->__shared_weak_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
      *(_QWORD *)&v67 = v35;
      *((_QWORD *)&v67 + 1) = v33;
      v38 = (unint64_t *)&v33->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
    else
    {
      v67 = 0uLL;
    }
  }
  v68 = v5;
  v69 = v4;
  v71 = 0;
  v40 = (char *)operator new(0x30uLL);
  *(_QWORD *)v40 = &off_24EC467C8;
  *(_OWORD *)(v40 + 8) = v67;
  v67 = 0uLL;
  *((_QWORD *)v40 + 3) = v5;
  *((_QWORD *)v40 + 4) = v4;
  v68 = 0;
  v69 = 0;
  v71 = v40;
  sub_2245022E4(*v31, (uint64_t)v70);
  v41 = v71;
  if (v71 == v70)
  {
    v42 = 4;
    v41 = v70;
    goto LABEL_48;
  }
  if (v71)
  {
    v42 = 5;
LABEL_48:
    (*(void (**)(void))(*v41 + 8 * v42))();
  }
  v43 = v61;
  if (v61)
  {
    v44 = (unint64_t *)&v61->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      v46 = v43;
LABEL_87:
      std::__shared_weak_count::__release_weak(v46);
    }
  }
}

void sub_223544588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235446EC(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235446FC(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_223544708(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_223544718(_QWORD *a1, uint64_t *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  _QWORD *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  std::mutex **v26;
  uint64_t **v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_weak_owners;
  unint64_t v33;
  unint64_t *p_shared_owners;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t **v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  char *v47;
  std::string *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  std::__shared_weak_count *v56;
  _QWORD *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  __int128 *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  char *v66;
  char *v67;
  void *v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  std::__shared_weak_count *v76;
  std::string *v77;
  std::runtime_error *exception;
  std::runtime_error *v79;
  _QWORD *v80;
  _QWORD *v81;
  std::__shared_weak_count *v82;
  std::runtime_error v83;
  _QWORD *v84;
  std::__shared_weak_count *v85;
  std::__shared_weak_count *v86[2];
  _QWORD v87[3];
  _QWORD *v88;
  void *__p[2];
  uint64_t v90;
  _QWORD *v91;
  std::__shared_weak_count *v92;
  __int128 v93;
  _QWORD *v94;
  std::__shared_weak_count *v95;
  _QWORD *v96;
  _QWORD *v97;
  std::string v98;
  std::string *v99;
  uint64_t v100;

  v100 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v93 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v93 + 1) = 45;
    v75 = (_QWORD *)a1[6];
    v74 = a1 + 6;
    v73 = v75;
    v76 = (std::__shared_weak_count *)*((unsigned __int8 *)v74 + 23);
    if ((char)v76 < 0)
      v76 = (std::__shared_weak_count *)v74[1];
    else
      v73 = v74;
    v94 = v73;
    v95 = v76;
    sub_2231A9820((uint64_t)&v93, (uint64_t)&v96, 0, 0, &v98);
    if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v77 = &v98;
    else
      v77 = (std::string *)v98.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v83, (const char *)v77);
    v83.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v79 = std::runtime_error::runtime_error(exception, &v83);
    v79->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v79, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v27 = (uint64_t **)a1[9];
    v86[0] = 0;
    v86[1] = 0;
    v28 = (std::__shared_weak_count *)a1[5];
    if (!v28)
      goto LABEL_36;
    v29 = std::__shared_weak_count::lock(v28);
    if (v29)
    {
      v30 = v29;
      v31 = (std::__shared_weak_count *)a1[4];
      p_shared_weak_owners = (unint64_t *)&v29->__shared_weak_owners_;
      do
        v33 = __ldxr(p_shared_weak_owners);
      while (__stxr(v33 + 1, p_shared_weak_owners));
      v86[0] = v31;
      v86[1] = v29;
      p_shared_owners = (unint64_t *)&v29->__shared_owners_;
      do
        v35 = __ldaxr(p_shared_owners);
      while (__stlxr(v35 - 1, p_shared_owners));
      if (v35)
      {
LABEL_36:
        v36 = v87;
        v37 = a2[3];
        if (!v37)
          goto LABEL_39;
        goto LABEL_37;
      }
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v30);
      v36 = v87;
      v37 = a2[3];
      if (!v37)
        goto LABEL_39;
    }
    else
    {
      v86[0] = 0;
      v86[1] = 0;
      v36 = v87;
      v37 = a2[3];
      if (!v37)
        goto LABEL_39;
    }
LABEL_37:
    if ((uint64_t *)v37 == a2)
    {
      v88 = v87;
      (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v87);
LABEL_69:
      sub_22326F694(__p, a2 + 4);
      v56 = (std::__shared_weak_count *)operator new(0x20uLL);
      v56->__shared_owners_ = 0;
      v56->__shared_weak_owners_ = 0;
      v56->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC468C8;
      v56[1].__vftable = *a3;
      v57 = &v56[1].__vftable;
      *a3 = 0;
      v91 = &v56[1].__vftable;
      v92 = v56;
      v95 = 0;
      v58 = (char *)operator new(0x60uLL);
      v59 = v58;
      *(_QWORD *)v58 = &off_24EC46998;
      *(_OWORD *)(v58 + 8) = *(_OWORD *)v86;
      v86[0] = 0;
      v86[1] = 0;
      if (v88)
      {
        if (v88 == v87)
        {
          *((_QWORD *)v58 + 6) = v58 + 24;
          (*(void (**)(_QWORD *))(v87[0] + 24))(v87);
          v57 = v91;
          v56 = v92;
        }
        else
        {
          *((_QWORD *)v58 + 6) = v88;
          v88 = 0;
        }
      }
      else
      {
        *((_QWORD *)v58 + 6) = 0;
      }
      *(_OWORD *)(v59 + 56) = *(_OWORD *)__p;
      v60 = v90;
      __p[1] = 0;
      v90 = 0;
      __p[0] = 0;
      *((_QWORD *)v59 + 9) = v60;
      *((_QWORD *)v59 + 10) = v57;
      *((_QWORD *)v59 + 11) = v56;
      v91 = 0;
      v92 = 0;
      v95 = (std::__shared_weak_count *)v59;
      sub_2245022E4(*v27, (uint64_t)&v93);
      v61 = (__int128 *)v95;
      if (v95 == (std::__shared_weak_count *)&v93)
      {
        v62 = 4;
        v61 = &v93;
      }
      else
      {
        if (!v95)
        {
LABEL_79:
          v63 = v92;
          if (v92)
          {
            v64 = (unint64_t *)&v92->__shared_owners_;
            do
              v65 = __ldaxr(v64);
            while (__stlxr(v65 - 1, v64));
            if (!v65)
            {
              ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
              std::__shared_weak_count::__release_weak(v63);
            }
          }
          v66 = (char *)__p[0];
          if (__p[0])
          {
            v67 = (char *)__p[1];
            v68 = __p[0];
            if (__p[1] != __p[0])
            {
              do
              {
                v69 = (std::__shared_weak_count *)*((_QWORD *)v67 - 12);
                if (v69)
                {
                  v70 = (unint64_t *)&v69->__shared_owners_;
                  do
                    v71 = __ldaxr(v70);
                  while (__stlxr(v71 - 1, v70));
                  if (!v71)
                  {
                    ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
                    std::__shared_weak_count::__release_weak(v69);
                  }
                }
                v67 -= 120;
              }
              while (v67 != v66);
              v68 = __p[0];
            }
            __p[1] = v66;
            operator delete(v68);
          }
          if (v88 == v87)
          {
            v72 = 4;
          }
          else
          {
            if (!v88)
              goto LABEL_100;
            v72 = 5;
            v36 = v88;
          }
          (*(void (**)(_QWORD *))(*v36 + 8 * v72))(v36);
LABEL_100:
          v55 = v86[1];
          if (!v86[1])
            return;
          goto LABEL_101;
        }
        v62 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v61 + 8 * v62))();
      goto LABEL_79;
    }
    v37 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 16))(v37);
LABEL_39:
    v88 = (_QWORD *)v37;
    goto LABEL_69;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC468C8;
  v6[1].__vftable = *a3;
  v82 = v6;
  v80 = &v6[1].__vftable;
  v81 = &v6->__vftable;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_223545DD8(&v84, a2);
  v10 = v84;
  v9 = v85;
  if (v85)
  {
    v11 = (unint64_t *)&v85->__shared_weak_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = a1[18];
  v14 = (_QWORD *)operator new();
  *v14 = v13 + 56;
  std::mutex::lock((std::mutex *)(v13 + 56));
  *(_QWORD *)&v93 = v14;
  *((_QWORD *)&v93 + 1) = v13;
  if (!*(_BYTE *)(v13 + 48))
    sub_22324A974();
  v15 = (_QWORD *)(*(_QWORD *)v13 + 16 * *(_QWORD *)(v13 + 32));
  if (v9)
  {
    v16 = (unint64_t *)&v9->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v18 = (std::__shared_weak_count *)v15[1];
  *v15 = v10;
  v15[1] = v9;
  if (v18)
  {
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = (uint64_t)(*(_QWORD *)(v13 + 8) - *(_QWORD *)v13) >> 4;
  v22 = *(_QWORD *)(v13 + 40);
  v23 = *(_QWORD *)(v13 + 32) + 1;
  if (v23 >= v21)
    v24 = (uint64_t)(*(_QWORD *)(v13 + 8) - *(_QWORD *)v13) >> 4;
  else
    v24 = 0;
  *(_QWORD *)(v13 + 32) = v23 - v24;
  if (v22 != v21)
  {
    *(_QWORD *)(v13 + 40) = v22 + 1;
    v26 = (std::mutex **)v93;
    if (!(_QWORD)v93)
      goto LABEL_42;
    goto LABEL_41;
  }
  v25 = *(_QWORD *)(v13 + 24) + 1;
  if (v25 < v21)
    v21 = 0;
  *(_QWORD *)(v13 + 24) = v25 - v21;
  v26 = (std::mutex **)v93;
  if ((_QWORD)v93)
  {
LABEL_41:
    std::mutex::unlock(*v26);
    MEMORY[0x227684CE8](v26, 0x20C4093837F09);
  }
LABEL_42:
  v38 = (uint64_t **)a1[9];
  v93 = 0uLL;
  v39 = (std::__shared_weak_count *)a1[5];
  if (v39)
  {
    v40 = std::__shared_weak_count::lock(v39);
    if (v40)
    {
      v41 = v40;
      v42 = a1[4];
      v43 = (unint64_t *)&v40->__shared_weak_owners_;
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 1, v43));
      *(_QWORD *)&v93 = v42;
      *((_QWORD *)&v93 + 1) = v40;
      v45 = (unint64_t *)&v40->__shared_owners_;
      do
        v46 = __ldaxr(v45);
      while (__stlxr(v46 - 1, v45));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
    else
    {
      v93 = 0uLL;
    }
  }
  v94 = v10;
  v95 = v9;
  v96 = v80;
  v97 = v81;
  v99 = 0;
  v47 = (char *)operator new(0x38uLL);
  *(_QWORD *)v47 = &off_24EC46918;
  *(_OWORD *)(v47 + 8) = v93;
  v93 = 0uLL;
  *((_QWORD *)v47 + 3) = v10;
  *((_QWORD *)v47 + 4) = v9;
  v94 = 0;
  v95 = 0;
  *((_QWORD *)v47 + 5) = v80;
  *((_QWORD *)v47 + 6) = v81;
  v96 = 0;
  v97 = 0;
  v99 = (std::string *)v47;
  sub_2245022E4(*v38, (uint64_t)&v98);
  v48 = v99;
  if (v99 == &v98)
  {
    v49 = 4;
    v48 = &v98;
    goto LABEL_55;
  }
  if (v99)
  {
    v49 = 5;
LABEL_55:
    (*(void (**)(void))(v48->__r_.__value_.__r.__words[0] + 8 * v49))();
  }
  v50 = v85;
  if (v85)
  {
    v51 = (unint64_t *)&v85->__shared_owners_;
    do
      v52 = __ldaxr(v51);
    while (__stlxr(v52 - 1, v51));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  if (v82)
  {
    v53 = (unint64_t *)&v82->__shared_owners_;
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
      v55 = v82;
LABEL_101:
      std::__shared_weak_count::__release_weak(v55);
    }
  }
}

void sub_223544EC8(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_223544ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_223544EE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15)
{
  std::__assoc_sub_state **v15;
  uint64_t v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v17 = *v15;
    if (*v15)
    {
      std::exception_ptr::exception_ptr((std::exception_ptr *)(v16 - 160), &a15);
      v18.__ptr_ = (void *)(v16 - 160);
      std::__assoc_sub_state::set_exception(v17, v18);
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v16 - 160));
      std::exception_ptr::~exception_ptr(&a15);
      std::runtime_error::~runtime_error(&a14);
      if (*(char *)(v16 - 81) < 0)
        operator delete(*(void **)(v16 - 104));
      JUMPOUT(0x223544DB0);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_223544F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15)
{
  uint64_t v15;

  std::exception_ptr::~exception_ptr(&a15);
  std::runtime_error::~runtime_error(&a14);
  if (*(char *)(v15 - 81) < 0)
  {
    operator delete(*(void **)(v15 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_223544FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v14;
  uint64_t v15;
  va_list va;

  va_start(va, a11);
  v14 = *(_QWORD **)(v12 - 136);
  if (v14 == v11)
  {
    v15 = 4;
    v14 = (_QWORD *)(v12 - 160);
  }
  else
  {
    if (!v14)
    {
      sub_223541CB0((uint64_t *)va);
      _Unwind_Resume(a1);
    }
    v15 = 5;
  }
  (*(void (**)(void))(*v14 + 8 * v15))();
  sub_223541CB0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_223544FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  _QWORD *v20;

  sub_223540AB8(v20);
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x223545054);
}

void sub_223545008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24)
{
  _QWORD *v24;
  uint64_t v26;

  if (a24 == v24)
  {
    v26 = 4;
  }
  else
  {
    if (!a24)
      goto LABEL_6;
    v26 = 5;
    v24 = a24;
  }
  (*(void (**)(_QWORD *))(*v24 + 8 * v26))(v24);
LABEL_6:
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x223545054);
}

void sub_22354505C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  va_list va1;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v10 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  v14 = va_arg(va2, _QWORD);
  v15 = va_arg(va2, _QWORD);
  v5 = *(_QWORD **)(v3 - 80);
  if (v5 == v2)
  {
    v6 = 4;
    v5 = (_QWORD *)(v3 - 104);
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  sub_22332429C((_QWORD *)(v3 - 160));
  sub_223167354((uint64_t)va2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_223545100(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22354511C(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_223545190(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC46A18;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B3F0;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_2235452C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_223545334(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC46A98;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_223545444(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2235454A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC46B18;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235456C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_223545788@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC46B98;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235459A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223545A68(uint64_t a1)
{
  return sub_223545BD8(a1 - 16);
}

void sub_223545A70(uint64_t a1)
{
  sub_223545BD8(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223545A98(uint64_t a1, uint64_t a2)
{
  return sub_223545190((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_223545AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235454A8((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_223545AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_223545788((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_223545AB0(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_223545AB8(uint64_t a1)
{
  return sub_223545BD8(a1 - 24);
}

void sub_223545AC0(uint64_t a1)
{
  sub_223545BD8(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223545AE8(uint64_t a1)
{
  return sub_223545334((_QWORD *)(a1 - 24));
}

uint64_t sub_223545AF0(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_223545AF8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_223545B60(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223545BC8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223545BD8(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC46578;
  *(_QWORD *)(a1 + 16) = &unk_24EC465F0;
  *(_QWORD *)(a1 + 24) = &unk_24EC46630;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

_QWORD *sub_223545DD8(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;

  v4 = operator new(0x50uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_24EC46778;
  v5 = v4 + 3;
  v6 = a2[3];
  if (v6)
  {
    if ((uint64_t *)v6 == a2)
    {
      v4[6] = v5;
      (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v5);
      goto LABEL_6;
    }
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
  }
  v4[6] = v6;
LABEL_6:
  result = sub_22326F694(v4 + 7, a2 + 4);
  *a1 = v5;
  a1[1] = v4;
  return result;
}

void sub_223545E6C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_223545E84(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count_vtbl *v2;
  std::__shared_weak_count_vtbl *v4;
  uint64_t v5;
  void *v6;

  v4 = v1[2].__vftable;
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = v1[2].__vftable;
  }
  (*((void (**)(std::__shared_weak_count_vtbl *))v2->~__shared_weak_count + v5))(v2);
LABEL_6:
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v6);
  _Unwind_Resume(a1);
}

void sub_223545ECC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46778;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223545EDC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46778;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223545F0C(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *result;
  uint64_t v10;

  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  result = (_QWORD *)a1[6];
  if (result == v2)
  {
    v10 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v10 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v10))();
}

_QWORD *sub_223545FEC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC467C8;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_223546030(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC467C8;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223546084(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC467C8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_2235460F4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC467C8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_223546144(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223546180(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235461B8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_2235464DC((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_2235468B8(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223546380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_2235468B8(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223546464(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0"
                     "EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResult"
                                "ES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235464D0()
{
  return &unk_24EC46828;
}

_QWORD *sub_2235464DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  char *v9;
  char *v10;
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  _QWORD *result;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD *v18;
  void *__p;
  char *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v17, v6, a2);
  v7 = a1 + 1;
  for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
    (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v17);
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_223546790(*(_QWORD *)a3, (uint64_t)v17);
  }
  v9 = (char *)__p;
  if (__p)
  {
    v10 = v20;
    v11 = __p;
    if (v20 != __p)
    {
      do
      {
        v12 = (std::__shared_weak_count *)*((_QWORD *)v10 - 12);
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v14 = __ldaxr(p_shared_owners);
          while (__stlxr(v14 - 1, p_shared_owners));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        v10 -= 120;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v20 = v9;
    operator delete(v11);
  }
  result = v18;
  if (v18 == v17)
  {
    v16 = 4;
    result = v17;
  }
  else
  {
    if (!v18)
      return result;
    v16 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
}

void sub_22354668C(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  uint64_t *v5;
  uint64_t v6;
  va_list v7;
  uint64_t v8;
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;
  va_list v13;
  va_list va2;
  uint64_t v15;
  uint64_t v16;
  va_list va3;

  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v11 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v13 = va_arg(va3, va_list);
  v15 = va_arg(va3, _QWORD);
  v16 = va_arg(va3, _QWORD);
  sub_223540AB8((uint64_t *)va3);
  if (a2 == 1)
  {
    v5 = (uint64_t *)__cxa_begin_catch(a1);
    v6 = *v5;
    v11 = *(_QWORD *)(*(_QWORD *)(*v5 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    v9 = (*(uint64_t (**)(void))(v6 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", va1, "\n", "message: ", va, "\n");
    if (v16 >= 0)
      va_copy(v7, va2);
    else
      v7 = v13;
    if (v16 >= 0)
      v8 = HIBYTE(v16);
    else
      v8 = v15;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v7, v8, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_223546754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_223546778(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x223546780);
  sub_22316DC48(a1);
}

void sub_223546790(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  uint64_t v5;
  uint64_t v6;
  std::exception_ptr v7;

  v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(_BYTE *)(a1 + 136) & 1) != 0
    || (v7.__ptr_ = 0, v5 = *(_QWORD *)(a1 + 16), std::exception_ptr::~exception_ptr(&v7), v5))
  {
    sub_2233236D4(2u);
  }
  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    if (v6 == a2)
    {
      *(_QWORD *)(a1 + 168) = a1 + 144;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1 + 144);
      goto LABEL_8;
    }
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
  }
  *(_QWORD *)(a1 + 168) = v6;
LABEL_8:
  sub_22326F694((_QWORD *)(a1 + 176), (uint64_t *)(a2 + 32));
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock(v4);
}

void sub_223546860(_Unwind_Exception *a1)
{
  std::mutex *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;

  v5 = *(_QWORD **)(v2 + 168);
  if (v5 == v3)
  {
    v6 = 4;
  }
  else
  {
    if (!v5)
    {
      std::mutex::unlock(v1);
      _Unwind_Resume(a1);
    }
    v6 = 5;
    v3 = *(_QWORD **)(v2 + 168);
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v6))(v3);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235468B8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  const std::error_category *v7;
  std::logic_error *exception;
  std::logic_error *v9;
  std::logic_error v10;
  std::logic_error v11;
  std::exception_ptr v12;

  v2 = *a1;
  if (!v2)
    return a1;
  if ((*(_BYTE *)(v2 + 136) & 1) == 0)
  {
    v12.__ptr_ = 0;
    v3 = *(_QWORD *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v12);
    v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v7 = std::future_category();
      MEMORY[0x2276844A8](&v10, 4, v7);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      v9 = std::logic_error::logic_error(exception, &v10);
      v9->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB810] + 16);
      v9[1] = v11;
      __cxa_throw(v9, MEMORY[0x24BEDB6E0], (void (*)(void *))MEMORY[0x24BEDAD80]);
    }
  }
  v4 = (unint64_t *)(v2 + 8);
  do
    v5 = __ldaxr(v4);
  while (__stlxr(v5 - 1, v4));
  if (v5)
    return a1;
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  return a1;
}

void sub_2235469A4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__assoc_sub_state *a10, char a11)
{
  uint64_t v11;
  std::exception_ptr v12;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v12.__ptr_ = (void *)(v11 - 32);
  std::__assoc_sub_state::set_exception(a10, v12);
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(v11 - 32));
  MEMORY[0x2276844B4](&a11);
  JUMPOUT(0x223546900);
}

_QWORD *sub_2235469E0(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC46848;
  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_223546AC8(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC46848;
  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223546BC0(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = operator new(0x50uLL);
  v3 = v2;
  v5 = a1[1];
  v4 = a1[2];
  *v2 = &off_24EC46848;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = v2 + 3;
  v9 = a1[6];
  if (v9)
  {
    if ((_QWORD *)v9 == a1 + 3)
    {
      v3[6] = v8;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v9 + 24))(v9, v3 + 3);
      goto LABEL_9;
    }
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  }
  v3[6] = v9;
LABEL_9:
  sub_22326F694(v3 + 7, a1 + 7);
  return v3;
}

void sub_223546C6C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (!v3)
  {
    operator delete(v1);
    _Unwind_Resume(a1);
  }
  std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_223546CE4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC46848;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a1[6];
  if (v8)
  {
    if ((_QWORD *)v8 == a1 + 3)
    {
      a2[6] = a2 + 3;
      (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a1[6] + 24))(a1[6], a2 + 3);
      return sub_22326F694(a2 + 7, a1 + 7);
    }
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
  }
  a2[6] = v8;
  return sub_22326F694(a2 + 7, a1 + 7);
}

void sub_223546D88(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (!v3)
    _Unwind_Resume(exception_object);
  std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223546DF0(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
}

void sub_223546ED8(char *__p)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = __p + 24;
  v3 = *((_QWORD *)__p + 7);
  if (v3)
  {
    v4 = *((_QWORD *)__p + 8);
    v5 = (void *)*((_QWORD *)__p + 7);
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)*((_QWORD *)__p + 7);
    }
    *((_QWORD *)__p + 8) = v3;
    operator delete(v5);
  }
  v9 = (char *)*((_QWORD *)__p + 6);
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  operator delete(__p);
}

void sub_223546FB4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_2235464DC((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_2235468B8(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22354705C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_2235468B8(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235470A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0"
                     "EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResult"
                                "ES6_vS6_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223547114()
{
  return &unk_24EC468A8;
}

void sub_223547120(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC468C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223547130(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC468C8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t *sub_223547160(uint64_t a1)
{
  return sub_2235468B8((uint64_t *)(a1 + 24));
}

_QWORD *sub_22354716C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC46918;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2235471F4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC46918;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_22354728C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC46918;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_22354731C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC46918;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_22354738C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_22354740C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_223547488(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_2235464DC(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_2235468B8((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223547764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223547790(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x22354759CLL);
    JUMPOUT(0x22354756CLL);
  }
  sub_2233236D4(3u);
}

void sub_2235477EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223547818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_2235468B8(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_223547904(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0"
                     "EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResult"
                                "ES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T"
                                "0_E_EEvSA_SE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223547970()
{
  return &unk_24EC46978;
}

_QWORD *sub_22354797C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  *a1 = &off_24EC46998;
  v2 = (std::__shared_weak_count *)a1[11];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  v7 = (char *)a1[8];
  v8 = v6;
  if (v7 != v6)
  {
    do
    {
      v9 = (std::__shared_weak_count *)*((_QWORD *)v7 - 12);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v7 -= 120;
    }
    while (v7 != v6);
    v8 = (char *)a1[7];
  }
  a1[8] = v6;
  operator delete(v8);
LABEL_16:
  v12 = (_QWORD *)a1[6];
  if (v12 == v5)
  {
    v13 = 4;
    v12 = v5;
  }
  else
  {
    if (!v12)
      goto LABEL_21;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[2];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  return a1;
}

void sub_223547AAC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  *a1 = &off_24EC46998;
  v2 = (std::__shared_weak_count *)a1[11];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  v7 = (char *)a1[8];
  v8 = v6;
  if (v7 != v6)
  {
    do
    {
      v9 = (std::__shared_weak_count *)*((_QWORD *)v7 - 12);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v7 -= 120;
    }
    while (v7 != v6);
    v8 = (char *)a1[7];
  }
  a1[8] = v6;
  operator delete(v8);
LABEL_16:
  v12 = (_QWORD *)a1[6];
  if (v12 == v5)
  {
    v13 = 4;
    v12 = v5;
  }
  else
  {
    if (!v12)
      goto LABEL_21;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[2];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223547BEC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(a1 + 8);
  v2 = operator new(0x60uLL);
  *v2 = &off_24EC46998;
  sub_223547EF8(v2 + 1, v1);
  return v2;
}

void sub_223547C2C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_223547C40(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24EC46998;
  return sub_223547EF8(a2 + 1, (_QWORD *)(a1 + 8));
}

void sub_223547C5C(uint64_t a1)
{
  sub_223542CD0((_QWORD *)(a1 + 8));
}

void sub_223547C64(_QWORD *a1)
{
  sub_223542CD0(a1 + 1);
  operator delete(a1);
}

void sub_223547C8C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[10];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_2235464DC((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_2235468B8((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_223547D9C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_223547E14(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x223547E48);
  JUMPOUT(0x223547E78);
}

uint64_t sub_223547E80(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0"
                     "EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResult"
                                "ES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223547EEC()
{
  return &unk_24EC469F8;
}

_QWORD *sub_223547EF8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1 + 2;
  v8 = a2[5];
  if (!v8)
    goto LABEL_7;
  if ((_QWORD *)v8 != a2 + 2)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
LABEL_7:
    a1[5] = v8;
    goto LABEL_9;
  }
  a1[5] = v7;
  (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[5] + 24))(a2[5], a1 + 2);
LABEL_9:
  sub_22326F694(a1 + 6, a2 + 6);
  v9 = a2[10];
  a1[9] = a2[9];
  a1[10] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return a1;
}

void sub_223547FB4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (!v3)
    _Unwind_Resume(exception_object);
  std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22354801C(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC46A18;
  v2 = a1[4];
  a1[3] = &off_24EC2B3F0;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_223548074(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC46A18;
  v2 = a1[4];
  a1[3] = &off_24EC2B3F0;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235480DC(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC46A18;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B3F0;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_223548154(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223548174(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC46A18;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B3F0;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_2235481DC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235481F4(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B3F0;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223548244(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B3F0;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_223548290(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B3F0;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223548344(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223548380(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0E"
                     "E9SubscribeENS1_12ChannelInputIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultE"
                                "S6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235483EC()
{
  return &unk_24EC46A78;
}

_QWORD *sub_2235483F8(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC46A98;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223548430(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC46A98;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223548478(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC46A98;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_2235484C8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC46A98;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235484F8(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223548508(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223548534(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235485C8(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223548604(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0E"
                     "E15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultE"
                                "S6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223548670()
{
  return &unk_24EC46AF8;
}

_QWORD *sub_22354867C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC46B18;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235486B4(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC46B18;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235486FC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC46B18;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_223548754(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC46B18;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22354878C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22354879C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235487C8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_223548944(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235489B4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0"
                     "EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResult"
                                "ES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223548A20()
{
  return &unk_24EC46B78;
}

_QWORD *sub_223548A2C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC46B98;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223548A64(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC46B98;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223548AAC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC46B98;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_223548B04(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC46B98;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_223548B3C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223548B4C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223548B78(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223548C30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223548C7C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0"
                     "EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResult"
                                "ES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng30MeshingNodeOccupancyMeshResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223548CE8()
{
  return &unk_24EC46BF8;
}

void sub_223548CF8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223548D1C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_223548D34(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng30MeshingNodeOccupancyMe"
                     "shResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng30MeshingNode"
                                "OccupancyMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng30MeshingNodeOccupancyMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng30MeshingNodeOccupancyMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_223548DA4(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223548DD0(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223548E0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC46C68;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_223548E74(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223548F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223548F18(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223548FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223548FBC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_223549080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223549094(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_223549158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22354916C(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223549210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223549228(uint64_t a1)
{
  sub_22354ADF4(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22354924C(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  std::mutex **v21;
  uint64_t **v22;
  std::__shared_weak_count *v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_weak_owners;
  unint64_t v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  uint64_t **v31;
  std::__shared_weak_count *v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void *v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  std::__shared_weak_count *v62[2];
  _QWORD v63[3];
  _QWORD *v64;
  void *__p[2];
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  _BYTE v70[24];
  _BYTE *v71;
  uint64_t v72;

  v72 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v22 = (uint64_t **)a1[9];
    v62[0] = 0;
    v62[1] = 0;
    v23 = (std::__shared_weak_count *)a1[5];
    if (v23)
    {
      v24 = std::__shared_weak_count::lock(v23);
      if (v24)
      {
        v25 = v24;
        v26 = (std::__shared_weak_count *)a1[4];
        p_shared_weak_owners = (unint64_t *)&v24->__shared_weak_owners_;
        do
          v28 = __ldxr(p_shared_weak_owners);
        while (__stxr(v28 + 1, p_shared_weak_owners));
        v62[0] = v26;
        v62[1] = v24;
        p_shared_owners = (unint64_t *)&v24->__shared_owners_;
        do
          v30 = __ldaxr(p_shared_owners);
        while (__stlxr(v30 - 1, p_shared_owners));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      else
      {
        v62[0] = 0;
        v62[1] = 0;
      }
    }
    v47 = v63;
    v48 = a2[3];
    if (v48)
    {
      if ((uint64_t *)v48 == a2)
      {
        v64 = v63;
        (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v63);
LABEL_60:
        sub_22326F694(__p, a2 + 4);
        v69 = 0;
        v49 = (char *)operator new(0x50uLL);
        v50 = v49;
        *(_QWORD *)v49 = &off_24EC46FA0;
        *(_OWORD *)(v49 + 8) = *(_OWORD *)v62;
        v62[0] = 0;
        v62[1] = 0;
        if (v64)
        {
          if (v64 == v63)
          {
            *((_QWORD *)v49 + 6) = v49 + 24;
            (*(void (**)(_QWORD *))(v63[0] + 24))(v63);
          }
          else
          {
            *((_QWORD *)v49 + 6) = v64;
            v64 = 0;
          }
        }
        else
        {
          *((_QWORD *)v49 + 6) = 0;
        }
        *(_OWORD *)(v50 + 56) = *(_OWORD *)__p;
        *((_QWORD *)v50 + 9) = v66;
        __p[1] = 0;
        v66 = 0;
        __p[0] = 0;
        v69 = (std::__shared_weak_count *)v50;
        sub_2245022E4(*v22, (uint64_t)&v67);
        v51 = (__int128 *)v69;
        if (v69 == (std::__shared_weak_count *)&v67)
        {
          v52 = 4;
          v51 = &v67;
        }
        else
        {
          if (!v69)
            goto LABEL_70;
          v52 = 5;
        }
        (*(void (**)(void))(*(_QWORD *)v51 + 8 * v52))();
LABEL_70:
        v53 = (char *)__p[0];
        if (__p[0])
        {
          v54 = (char *)__p[1];
          v55 = __p[0];
          if (__p[1] != __p[0])
          {
            do
            {
              v56 = (std::__shared_weak_count *)*((_QWORD *)v54 - 12);
              if (v56)
              {
                v57 = (unint64_t *)&v56->__shared_owners_;
                do
                  v58 = __ldaxr(v57);
                while (__stlxr(v58 - 1, v57));
                if (!v58)
                {
                  ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
                  std::__shared_weak_count::__release_weak(v56);
                }
              }
              v54 -= 120;
            }
            while (v54 != v53);
            v55 = __p[0];
          }
          __p[1] = v53;
          operator delete(v55);
        }
        if (v64 == v63)
        {
          v59 = 4;
        }
        else
        {
          if (!v64)
            goto LABEL_86;
          v59 = 5;
          v47 = v64;
        }
        (*(void (**)(_QWORD *))(*v47 + 8 * v59))(v47);
LABEL_86:
        v46 = v62[1];
        if (!v62[1])
          return;
        goto LABEL_87;
      }
      v48 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v48 + 16))(v48);
    }
    v64 = (_QWORD *)v48;
    goto LABEL_60;
  }
  sub_22354AFF4(&v60, a2);
  v5 = v60;
  v4 = v61;
  if (v61)
  {
    v6 = (unint64_t *)&v61->__shared_weak_owners_;
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a1[18];
  v9 = (_QWORD *)operator new();
  *v9 = v8 + 56;
  std::mutex::lock((std::mutex *)(v8 + 56));
  *(_QWORD *)&v67 = v9;
  *((_QWORD *)&v67 + 1) = v8;
  if (!*(_BYTE *)(v8 + 48))
    sub_22324A974();
  v10 = (_QWORD *)(*(_QWORD *)v8 + 16 * *(_QWORD *)(v8 + 32));
  if (v4)
  {
    v11 = (unint64_t *)&v4->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = (std::__shared_weak_count *)v10[1];
  *v10 = v5;
  v10[1] = v4;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v16 = (uint64_t)(*(_QWORD *)(v8 + 8) - *(_QWORD *)v8) >> 4;
  v17 = *(_QWORD *)(v8 + 40);
  v18 = *(_QWORD *)(v8 + 32) + 1;
  if (v18 >= v16)
    v19 = (uint64_t)(*(_QWORD *)(v8 + 8) - *(_QWORD *)v8) >> 4;
  else
    v19 = 0;
  *(_QWORD *)(v8 + 32) = v18 - v19;
  if (v17 != v16)
  {
    *(_QWORD *)(v8 + 40) = v17 + 1;
    v21 = (std::mutex **)v67;
    if (!(_QWORD)v67)
      goto LABEL_35;
    goto LABEL_34;
  }
  v20 = *(_QWORD *)(v8 + 24) + 1;
  if (v20 < v16)
    v16 = 0;
  *(_QWORD *)(v8 + 24) = v20 - v16;
  v21 = (std::mutex **)v67;
  if ((_QWORD)v67)
  {
LABEL_34:
    std::mutex::unlock(*v21);
    MEMORY[0x227684CE8](v21, 0x20C4093837F09);
  }
LABEL_35:
  v31 = (uint64_t **)a1[9];
  v67 = 0uLL;
  v32 = (std::__shared_weak_count *)a1[5];
  if (v32)
  {
    v33 = std::__shared_weak_count::lock(v32);
    if (v33)
    {
      v34 = v33;
      v35 = a1[4];
      v36 = (unint64_t *)&v33->__shared_weak_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
      *(_QWORD *)&v67 = v35;
      *((_QWORD *)&v67 + 1) = v33;
      v38 = (unint64_t *)&v33->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
    else
    {
      v67 = 0uLL;
    }
  }
  v68 = v5;
  v69 = v4;
  v71 = 0;
  v40 = (char *)operator new(0x30uLL);
  *(_QWORD *)v40 = &off_24EC46F20;
  *(_OWORD *)(v40 + 8) = v67;
  v67 = 0uLL;
  *((_QWORD *)v40 + 3) = v5;
  *((_QWORD *)v40 + 4) = v4;
  v68 = 0;
  v69 = 0;
  v71 = v40;
  sub_2245022E4(*v31, (uint64_t)v70);
  v41 = v71;
  if (v71 == v70)
  {
    v42 = 4;
    v41 = v70;
    goto LABEL_48;
  }
  if (v71)
  {
    v42 = 5;
LABEL_48:
    (*(void (**)(void))(*v41 + 8 * v42))();
  }
  v43 = v61;
  if (v61)
  {
    v44 = (unint64_t *)&v61->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      v46 = v43;
LABEL_87:
      std::__shared_weak_count::__release_weak(v46);
    }
  }
}

void sub_2235497A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_223549908(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_223549918(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_223549924(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_223549934(_QWORD *a1, uint64_t *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  _QWORD *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  std::mutex **v26;
  uint64_t **v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_weak_owners;
  unint64_t v33;
  unint64_t *p_shared_owners;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t **v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  char *v47;
  std::string *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  std::__shared_weak_count *v56;
  _QWORD *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  __int128 *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  char *v66;
  char *v67;
  void *v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  std::__shared_weak_count *v76;
  std::string *v77;
  std::runtime_error *exception;
  std::runtime_error *v79;
  _QWORD *v80;
  _QWORD *v81;
  std::__shared_weak_count *v82;
  std::runtime_error v83;
  _QWORD *v84;
  std::__shared_weak_count *v85;
  std::__shared_weak_count *v86[2];
  _QWORD v87[3];
  _QWORD *v88;
  void *__p[2];
  uint64_t v90;
  _QWORD *v91;
  std::__shared_weak_count *v92;
  __int128 v93;
  _QWORD *v94;
  std::__shared_weak_count *v95;
  _QWORD *v96;
  _QWORD *v97;
  std::string v98;
  std::string *v99;
  uint64_t v100;

  v100 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v93 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v93 + 1) = 45;
    v75 = (_QWORD *)a1[6];
    v74 = a1 + 6;
    v73 = v75;
    v76 = (std::__shared_weak_count *)*((unsigned __int8 *)v74 + 23);
    if ((char)v76 < 0)
      v76 = (std::__shared_weak_count *)v74[1];
    else
      v73 = v74;
    v94 = v73;
    v95 = v76;
    sub_2231A9820((uint64_t)&v93, (uint64_t)&v96, 0, 0, &v98);
    if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v77 = &v98;
    else
      v77 = (std::string *)v98.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v83, (const char *)v77);
    v83.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v79 = std::runtime_error::runtime_error(exception, &v83);
    v79->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v79, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v27 = (uint64_t **)a1[9];
    v86[0] = 0;
    v86[1] = 0;
    v28 = (std::__shared_weak_count *)a1[5];
    if (!v28)
      goto LABEL_36;
    v29 = std::__shared_weak_count::lock(v28);
    if (v29)
    {
      v30 = v29;
      v31 = (std::__shared_weak_count *)a1[4];
      p_shared_weak_owners = (unint64_t *)&v29->__shared_weak_owners_;
      do
        v33 = __ldxr(p_shared_weak_owners);
      while (__stxr(v33 + 1, p_shared_weak_owners));
      v86[0] = v31;
      v86[1] = v29;
      p_shared_owners = (unint64_t *)&v29->__shared_owners_;
      do
        v35 = __ldaxr(p_shared_owners);
      while (__stlxr(v35 - 1, p_shared_owners));
      if (v35)
      {
LABEL_36:
        v36 = v87;
        v37 = a2[3];
        if (!v37)
          goto LABEL_39;
        goto LABEL_37;
      }
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v30);
      v36 = v87;
      v37 = a2[3];
      if (!v37)
        goto LABEL_39;
    }
    else
    {
      v86[0] = 0;
      v86[1] = 0;
      v36 = v87;
      v37 = a2[3];
      if (!v37)
        goto LABEL_39;
    }
LABEL_37:
    if ((uint64_t *)v37 == a2)
    {
      v88 = v87;
      (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v87);
LABEL_69:
      sub_22326F694(__p, a2 + 4);
      v56 = (std::__shared_weak_count *)operator new(0x20uLL);
      v56->__shared_owners_ = 0;
      v56->__shared_weak_owners_ = 0;
      v56->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47020;
      v56[1].__vftable = *a3;
      v57 = &v56[1].__vftable;
      *a3 = 0;
      v91 = &v56[1].__vftable;
      v92 = v56;
      v95 = 0;
      v58 = (char *)operator new(0x60uLL);
      v59 = v58;
      *(_QWORD *)v58 = &off_24EC470F0;
      *(_OWORD *)(v58 + 8) = *(_OWORD *)v86;
      v86[0] = 0;
      v86[1] = 0;
      if (v88)
      {
        if (v88 == v87)
        {
          *((_QWORD *)v58 + 6) = v58 + 24;
          (*(void (**)(_QWORD *))(v87[0] + 24))(v87);
          v57 = v91;
          v56 = v92;
        }
        else
        {
          *((_QWORD *)v58 + 6) = v88;
          v88 = 0;
        }
      }
      else
      {
        *((_QWORD *)v58 + 6) = 0;
      }
      *(_OWORD *)(v59 + 56) = *(_OWORD *)__p;
      v60 = v90;
      __p[1] = 0;
      v90 = 0;
      __p[0] = 0;
      *((_QWORD *)v59 + 9) = v60;
      *((_QWORD *)v59 + 10) = v57;
      *((_QWORD *)v59 + 11) = v56;
      v91 = 0;
      v92 = 0;
      v95 = (std::__shared_weak_count *)v59;
      sub_2245022E4(*v27, (uint64_t)&v93);
      v61 = (__int128 *)v95;
      if (v95 == (std::__shared_weak_count *)&v93)
      {
        v62 = 4;
        v61 = &v93;
      }
      else
      {
        if (!v95)
        {
LABEL_79:
          v63 = v92;
          if (v92)
          {
            v64 = (unint64_t *)&v92->__shared_owners_;
            do
              v65 = __ldaxr(v64);
            while (__stlxr(v65 - 1, v64));
            if (!v65)
            {
              ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
              std::__shared_weak_count::__release_weak(v63);
            }
          }
          v66 = (char *)__p[0];
          if (__p[0])
          {
            v67 = (char *)__p[1];
            v68 = __p[0];
            if (__p[1] != __p[0])
            {
              do
              {
                v69 = (std::__shared_weak_count *)*((_QWORD *)v67 - 12);
                if (v69)
                {
                  v70 = (unint64_t *)&v69->__shared_owners_;
                  do
                    v71 = __ldaxr(v70);
                  while (__stlxr(v71 - 1, v70));
                  if (!v71)
                  {
                    ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
                    std::__shared_weak_count::__release_weak(v69);
                  }
                }
                v67 -= 120;
              }
              while (v67 != v66);
              v68 = __p[0];
            }
            __p[1] = v66;
            operator delete(v68);
          }
          if (v88 == v87)
          {
            v72 = 4;
          }
          else
          {
            if (!v88)
              goto LABEL_100;
            v72 = 5;
            v36 = v88;
          }
          (*(void (**)(_QWORD *))(*v36 + 8 * v72))(v36);
LABEL_100:
          v55 = v86[1];
          if (!v86[1])
            return;
          goto LABEL_101;
        }
        v62 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v61 + 8 * v62))();
      goto LABEL_79;
    }
    v37 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 16))(v37);
LABEL_39:
    v88 = (_QWORD *)v37;
    goto LABEL_69;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47020;
  v6[1].__vftable = *a3;
  v82 = v6;
  v80 = &v6[1].__vftable;
  v81 = &v6->__vftable;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_22354AFF4(&v84, a2);
  v10 = v84;
  v9 = v85;
  if (v85)
  {
    v11 = (unint64_t *)&v85->__shared_weak_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = a1[18];
  v14 = (_QWORD *)operator new();
  *v14 = v13 + 56;
  std::mutex::lock((std::mutex *)(v13 + 56));
  *(_QWORD *)&v93 = v14;
  *((_QWORD *)&v93 + 1) = v13;
  if (!*(_BYTE *)(v13 + 48))
    sub_22324A974();
  v15 = (_QWORD *)(*(_QWORD *)v13 + 16 * *(_QWORD *)(v13 + 32));
  if (v9)
  {
    v16 = (unint64_t *)&v9->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v18 = (std::__shared_weak_count *)v15[1];
  *v15 = v10;
  v15[1] = v9;
  if (v18)
  {
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = (uint64_t)(*(_QWORD *)(v13 + 8) - *(_QWORD *)v13) >> 4;
  v22 = *(_QWORD *)(v13 + 40);
  v23 = *(_QWORD *)(v13 + 32) + 1;
  if (v23 >= v21)
    v24 = (uint64_t)(*(_QWORD *)(v13 + 8) - *(_QWORD *)v13) >> 4;
  else
    v24 = 0;
  *(_QWORD *)(v13 + 32) = v23 - v24;
  if (v22 != v21)
  {
    *(_QWORD *)(v13 + 40) = v22 + 1;
    v26 = (std::mutex **)v93;
    if (!(_QWORD)v93)
      goto LABEL_42;
    goto LABEL_41;
  }
  v25 = *(_QWORD *)(v13 + 24) + 1;
  if (v25 < v21)
    v21 = 0;
  *(_QWORD *)(v13 + 24) = v25 - v21;
  v26 = (std::mutex **)v93;
  if ((_QWORD)v93)
  {
LABEL_41:
    std::mutex::unlock(*v26);
    MEMORY[0x227684CE8](v26, 0x20C4093837F09);
  }
LABEL_42:
  v38 = (uint64_t **)a1[9];
  v93 = 0uLL;
  v39 = (std::__shared_weak_count *)a1[5];
  if (v39)
  {
    v40 = std::__shared_weak_count::lock(v39);
    if (v40)
    {
      v41 = v40;
      v42 = a1[4];
      v43 = (unint64_t *)&v40->__shared_weak_owners_;
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 1, v43));
      *(_QWORD *)&v93 = v42;
      *((_QWORD *)&v93 + 1) = v40;
      v45 = (unint64_t *)&v40->__shared_owners_;
      do
        v46 = __ldaxr(v45);
      while (__stlxr(v46 - 1, v45));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
    else
    {
      v93 = 0uLL;
    }
  }
  v94 = v10;
  v95 = v9;
  v96 = v80;
  v97 = v81;
  v99 = 0;
  v47 = (char *)operator new(0x38uLL);
  *(_QWORD *)v47 = &off_24EC47070;
  *(_OWORD *)(v47 + 8) = v93;
  v93 = 0uLL;
  *((_QWORD *)v47 + 3) = v10;
  *((_QWORD *)v47 + 4) = v9;
  v94 = 0;
  v95 = 0;
  *((_QWORD *)v47 + 5) = v80;
  *((_QWORD *)v47 + 6) = v81;
  v96 = 0;
  v97 = 0;
  v99 = (std::string *)v47;
  sub_2245022E4(*v38, (uint64_t)&v98);
  v48 = v99;
  if (v99 == &v98)
  {
    v49 = 4;
    v48 = &v98;
    goto LABEL_55;
  }
  if (v99)
  {
    v49 = 5;
LABEL_55:
    (*(void (**)(void))(v48->__r_.__value_.__r.__words[0] + 8 * v49))();
  }
  v50 = v85;
  if (v85)
  {
    v51 = (unint64_t *)&v85->__shared_owners_;
    do
      v52 = __ldaxr(v51);
    while (__stlxr(v52 - 1, v51));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  if (v82)
  {
    v53 = (unint64_t *)&v82->__shared_owners_;
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
      v55 = v82;
LABEL_101:
      std::__shared_weak_count::__release_weak(v55);
    }
  }
}

void sub_22354A0E4(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22354A0F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22354A0FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15)
{
  std::__assoc_sub_state **v15;
  uint64_t v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v17 = *v15;
    if (*v15)
    {
      std::exception_ptr::exception_ptr((std::exception_ptr *)(v16 - 160), &a15);
      v18.__ptr_ = (void *)(v16 - 160);
      std::__assoc_sub_state::set_exception(v17, v18);
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v16 - 160));
      std::exception_ptr::~exception_ptr(&a15);
      std::runtime_error::~runtime_error(&a14);
      if (*(char *)(v16 - 81) < 0)
        operator delete(*(void **)(v16 - 104));
      JUMPOUT(0x223549FCCLL);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_22354A170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15)
{
  uint64_t v15;

  std::exception_ptr::~exception_ptr(&a15);
  std::runtime_error::~runtime_error(&a14);
  if (*(char *)(v15 - 81) < 0)
  {
    operator delete(*(void **)(v15 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22354A1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v14;
  uint64_t v15;
  va_list va;

  va_start(va, a11);
  v14 = *(_QWORD **)(v12 - 136);
  if (v14 == v11)
  {
    v15 = 4;
    v14 = (_QWORD *)(v12 - 160);
  }
  else
  {
    if (!v14)
    {
      sub_223541CB0((uint64_t *)va);
      _Unwind_Resume(a1);
    }
    v15 = 5;
  }
  (*(void (**)(void))(*v14 + 8 * v15))();
  sub_223541CB0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_22354A214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  _QWORD *v20;

  sub_223540AB8(v20);
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x22354A270);
}

void sub_22354A224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24)
{
  _QWORD *v24;
  uint64_t v26;

  if (a24 == v24)
  {
    v26 = 4;
  }
  else
  {
    if (!a24)
      goto LABEL_6;
    v26 = 5;
    v24 = a24;
  }
  (*(void (**)(_QWORD *))(*v24 + 8 * v26))(v24);
LABEL_6:
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x22354A270);
}

void sub_22354A278(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  va_list va1;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v10 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  v14 = va_arg(va2, _QWORD);
  v15 = va_arg(va2, _QWORD);
  v5 = *(_QWORD **)(v3 - 80);
  if (v5 == v2)
  {
    v6 = 4;
    v5 = (_QWORD *)(v3 - 104);
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  sub_22332429C((_QWORD *)(v3 - 160));
  sub_223167354((uint64_t)va2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22354A31C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22354A338(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_22354A3AC(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC47170;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B428;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_22354A4DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22354A550(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC471F0;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_22354A660(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_22354A6C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC47270;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22354A8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_22354A9A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC472F0;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22354ABBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22354AC84(uint64_t a1)
{
  return sub_22354ADF4(a1 - 16);
}

void sub_22354AC8C(uint64_t a1)
{
  sub_22354ADF4(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354ACB4(uint64_t a1, uint64_t a2)
{
  return sub_22354A3AC((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22354ACBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22354A6C4((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22354ACC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22354A9A4((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_22354ACCC(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_22354ACD4(uint64_t a1)
{
  return sub_22354ADF4(a1 - 24);
}

void sub_22354ACDC(uint64_t a1)
{
  sub_22354ADF4(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354AD04(uint64_t a1)
{
  return sub_22354A550((_QWORD *)(a1 - 24));
}

uint64_t sub_22354AD0C(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_22354AD14(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22354AD7C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22354ADE4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_22354ADF4(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC46CD0;
  *(_QWORD *)(a1 + 16) = &unk_24EC46D48;
  *(_QWORD *)(a1 + 24) = &unk_24EC46D88;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

_QWORD *sub_22354AFF4(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;

  v4 = operator new(0x50uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_24EC46ED0;
  v5 = v4 + 3;
  v6 = a2[3];
  if (v6)
  {
    if ((uint64_t *)v6 == a2)
    {
      v4[6] = v5;
      (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v5);
      goto LABEL_6;
    }
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
  }
  v4[6] = v6;
LABEL_6:
  result = sub_22326F694(v4 + 7, a2 + 4);
  *a1 = v5;
  a1[1] = v4;
  return result;
}

void sub_22354B088(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_22354B0A0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count_vtbl *v2;
  std::__shared_weak_count_vtbl *v4;
  uint64_t v5;
  void *v6;

  v4 = v1[2].__vftable;
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = v1[2].__vftable;
  }
  (*((void (**)(std::__shared_weak_count_vtbl *))v2->~__shared_weak_count + v5))(v2);
LABEL_6:
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v6);
  _Unwind_Resume(a1);
}

void sub_22354B0E8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46ED0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_22354B0F8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46ED0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354B128(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *result;
  uint64_t v10;

  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  result = (_QWORD *)a1[6];
  if (result == v2)
  {
    v10 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v10 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v10))();
}

_QWORD *sub_22354B208(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC46F20;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_22354B24C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC46F20;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354B2A0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC46F20;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_22354B310(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC46F20;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_22354B360(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_22354B39C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_22354B3D4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_22354B6F8((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_22354BAD4(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_22354B59C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_22354BAD4(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22354B680(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_v"
                     "S6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMesh"
                                "ResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22354B6EC()
{
  return &unk_24EC46F80;
}

_QWORD *sub_22354B6F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  char *v9;
  char *v10;
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  _QWORD *result;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD *v18;
  void *__p;
  char *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v17, v6, a2);
  v7 = a1 + 1;
  for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
    (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v17);
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_22354B9AC(*(_QWORD *)a3, (uint64_t)v17);
  }
  v9 = (char *)__p;
  if (__p)
  {
    v10 = v20;
    v11 = __p;
    if (v20 != __p)
    {
      do
      {
        v12 = (std::__shared_weak_count *)*((_QWORD *)v10 - 12);
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v14 = __ldaxr(p_shared_owners);
          while (__stlxr(v14 - 1, p_shared_owners));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        v10 -= 120;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v20 = v9;
    operator delete(v11);
  }
  result = v18;
  if (v18 == v17)
  {
    v16 = 4;
    result = v17;
  }
  else
  {
    if (!v18)
      return result;
    v16 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
}

void sub_22354B8A8(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  uint64_t *v5;
  uint64_t v6;
  va_list v7;
  uint64_t v8;
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;
  va_list v13;
  va_list va2;
  uint64_t v15;
  uint64_t v16;
  va_list va3;

  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v11 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v13 = va_arg(va3, va_list);
  v15 = va_arg(va3, _QWORD);
  v16 = va_arg(va3, _QWORD);
  sub_223540AB8((uint64_t *)va3);
  if (a2 == 1)
  {
    v5 = (uint64_t *)__cxa_begin_catch(a1);
    v6 = *v5;
    v11 = *(_QWORD *)(*(_QWORD *)(*v5 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    v9 = (*(uint64_t (**)(void))(v6 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", va1, "\n", "message: ", va, "\n");
    if (v16 >= 0)
      va_copy(v7, va2);
    else
      v7 = v13;
    if (v16 >= 0)
      v8 = HIBYTE(v16);
    else
      v8 = v15;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v7, v8, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_22354B970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_22354B994(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x22354B99CLL);
  sub_22316DC48(a1);
}

void sub_22354B9AC(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  uint64_t v5;
  uint64_t v6;
  std::exception_ptr v7;

  v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(_BYTE *)(a1 + 136) & 1) != 0
    || (v7.__ptr_ = 0, v5 = *(_QWORD *)(a1 + 16), std::exception_ptr::~exception_ptr(&v7), v5))
  {
    sub_2233236D4(2u);
  }
  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    if (v6 == a2)
    {
      *(_QWORD *)(a1 + 168) = a1 + 144;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1 + 144);
      goto LABEL_8;
    }
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
  }
  *(_QWORD *)(a1 + 168) = v6;
LABEL_8:
  sub_22326F694((_QWORD *)(a1 + 176), (uint64_t *)(a2 + 32));
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock(v4);
}

void sub_22354BA7C(_Unwind_Exception *a1)
{
  std::mutex *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;

  v5 = *(_QWORD **)(v2 + 168);
  if (v5 == v3)
  {
    v6 = 4;
  }
  else
  {
    if (!v5)
    {
      std::mutex::unlock(v1);
      _Unwind_Resume(a1);
    }
    v6 = 5;
    v3 = *(_QWORD **)(v2 + 168);
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v6))(v3);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_22354BAD4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  const std::error_category *v7;
  std::logic_error *exception;
  std::logic_error *v9;
  std::logic_error v10;
  std::logic_error v11;
  std::exception_ptr v12;

  v2 = *a1;
  if (!v2)
    return a1;
  if ((*(_BYTE *)(v2 + 136) & 1) == 0)
  {
    v12.__ptr_ = 0;
    v3 = *(_QWORD *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v12);
    v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v7 = std::future_category();
      MEMORY[0x2276844A8](&v10, 4, v7);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      v9 = std::logic_error::logic_error(exception, &v10);
      v9->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB810] + 16);
      v9[1] = v11;
      __cxa_throw(v9, MEMORY[0x24BEDB6E0], (void (*)(void *))MEMORY[0x24BEDAD80]);
    }
  }
  v4 = (unint64_t *)(v2 + 8);
  do
    v5 = __ldaxr(v4);
  while (__stlxr(v5 - 1, v4));
  if (v5)
    return a1;
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  return a1;
}

void sub_22354BBC0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__assoc_sub_state *a10, char a11)
{
  uint64_t v11;
  std::exception_ptr v12;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v12.__ptr_ = (void *)(v11 - 32);
  std::__assoc_sub_state::set_exception(a10, v12);
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(v11 - 32));
  MEMORY[0x2276844B4](&a11);
  JUMPOUT(0x22354BB1CLL);
}

_QWORD *sub_22354BBFC(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC46FA0;
  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_22354BCE4(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC46FA0;
  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354BDDC(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = operator new(0x50uLL);
  v3 = v2;
  v5 = a1[1];
  v4 = a1[2];
  *v2 = &off_24EC46FA0;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = v2 + 3;
  v9 = a1[6];
  if (v9)
  {
    if ((_QWORD *)v9 == a1 + 3)
    {
      v3[6] = v8;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v9 + 24))(v9, v3 + 3);
      goto LABEL_9;
    }
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  }
  v3[6] = v9;
LABEL_9:
  sub_22326F694(v3 + 7, a1 + 7);
  return v3;
}

void sub_22354BE88(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (!v3)
  {
    operator delete(v1);
    _Unwind_Resume(a1);
  }
  std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_22354BF00(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC46FA0;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a1[6];
  if (v8)
  {
    if ((_QWORD *)v8 == a1 + 3)
    {
      a2[6] = a2 + 3;
      (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a1[6] + 24))(a1[6], a2 + 3);
      return sub_22326F694(a2 + 7, a1 + 7);
    }
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
  }
  a2[6] = v8;
  return sub_22326F694(a2 + 7, a1 + 7);
}

void sub_22354BFA4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (!v3)
    _Unwind_Resume(exception_object);
  std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22354C00C(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
}

void sub_22354C0F4(char *__p)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = __p + 24;
  v3 = *((_QWORD *)__p + 7);
  if (v3)
  {
    v4 = *((_QWORD *)__p + 8);
    v5 = (void *)*((_QWORD *)__p + 7);
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)*((_QWORD *)__p + 7);
    }
    *((_QWORD *)__p + 8) = v3;
    operator delete(v5);
  }
  v9 = (char *)*((_QWORD *)__p + 6);
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  operator delete(__p);
}

void sub_22354C1D0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_22354B6F8((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_22354BAD4(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22354C278(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_22354BAD4(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22354C2C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_v"
                     "S6_Lb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMesh"
                                "ResultES6_vS6_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22354C330()
{
  return &unk_24EC47000;
}

void sub_22354C33C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47020;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_22354C34C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47020;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t *sub_22354C37C(uint64_t a1)
{
  return sub_22354BAD4((uint64_t *)(a1 + 24));
}

_QWORD *sub_22354C388(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC47070;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_22354C410(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC47070;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_22354C4A8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC47070;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_22354C538(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC47070;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_22354C5A8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_22354C628(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_22354C6A4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_22354B6F8(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_22354BAD4((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_22354C980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_22354C9AC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x22354C7B8);
    JUMPOUT(0x22354C788);
  }
  sub_2233236D4(3u);
}

void sub_22354CA08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_22354CA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_22354BAD4(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22354CB20(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_v"
                     "S6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMesh"
                                "ResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EE"
                                "EUlT_T0_E_EEvSA_SE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22354CB8C()
{
  return &unk_24EC470D0;
}

_QWORD *sub_22354CB98(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  *a1 = &off_24EC470F0;
  v2 = (std::__shared_weak_count *)a1[11];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  v7 = (char *)a1[8];
  v8 = v6;
  if (v7 != v6)
  {
    do
    {
      v9 = (std::__shared_weak_count *)*((_QWORD *)v7 - 12);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v7 -= 120;
    }
    while (v7 != v6);
    v8 = (char *)a1[7];
  }
  a1[8] = v6;
  operator delete(v8);
LABEL_16:
  v12 = (_QWORD *)a1[6];
  if (v12 == v5)
  {
    v13 = 4;
    v12 = v5;
  }
  else
  {
    if (!v12)
      goto LABEL_21;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[2];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  return a1;
}

void sub_22354CCC8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  *a1 = &off_24EC470F0;
  v2 = (std::__shared_weak_count *)a1[11];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  v7 = (char *)a1[8];
  v8 = v6;
  if (v7 != v6)
  {
    do
    {
      v9 = (std::__shared_weak_count *)*((_QWORD *)v7 - 12);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v7 -= 120;
    }
    while (v7 != v6);
    v8 = (char *)a1[7];
  }
  a1[8] = v6;
  operator delete(v8);
LABEL_16:
  v12 = (_QWORD *)a1[6];
  if (v12 == v5)
  {
    v13 = 4;
    v12 = v5;
  }
  else
  {
    if (!v12)
      goto LABEL_21;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[2];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354CE08(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(a1 + 8);
  v2 = operator new(0x60uLL);
  *v2 = &off_24EC470F0;
  sub_22354D114(v2 + 1, v1);
  return v2;
}

void sub_22354CE48(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_22354CE5C(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24EC470F0;
  return sub_22354D114(a2 + 1, (_QWORD *)(a1 + 8));
}

void sub_22354CE78(uint64_t a1)
{
  sub_223542CD0((_QWORD *)(a1 + 8));
}

void sub_22354CE80(_QWORD *a1)
{
  sub_223542CD0(a1 + 1);
  operator delete(a1);
}

void sub_22354CEA8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[10];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_22354B6F8((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_22354BAD4((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_22354CFB8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_22354D030(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x22354D064);
  JUMPOUT(0x22354D094);
}

uint64_t sub_22354D09C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_v"
                     "S6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMesh"
                                "ResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22354D108()
{
  return &unk_24EC47150;
}

_QWORD *sub_22354D114(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1 + 2;
  v8 = a2[5];
  if (!v8)
    goto LABEL_7;
  if ((_QWORD *)v8 != a2 + 2)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
LABEL_7:
    a1[5] = v8;
    goto LABEL_9;
  }
  a1[5] = v7;
  (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[5] + 24))(a2[5], a1 + 2);
LABEL_9:
  sub_22326F694(a1 + 6, a2 + 6);
  v9 = a2[10];
  a1[9] = a2[9];
  a1[10] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return a1;
}

void sub_22354D1D0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (!v3)
    _Unwind_Resume(exception_object);
  std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22354D238(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC47170;
  v2 = a1[4];
  a1[3] = &off_24EC2B428;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_22354D290(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC47170;
  v2 = a1[4];
  a1[3] = &off_24EC2B428;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354D2F8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC47170;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B428;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_22354D370(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_22354D390(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC47170;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B428;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_22354D3F8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22354D410(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B428;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_22354D460(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B428;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_22354D4AC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B428;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22354D560(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22354D59C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS"
                     "6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshR"
                                "esultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22354D608()
{
  return &unk_24EC471D0;
}

_QWORD *sub_22354D614(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC471F0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22354D64C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC471F0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354D694(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC471F0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_22354D6E4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC471F0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_22354D714(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22354D724(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22354D750(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22354D7E4(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22354D820(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS"
                     "6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshR"
                                "esultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22354D88C()
{
  return &unk_24EC47250;
}

_QWORD *sub_22354D898(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC47270;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22354D8D0(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC47270;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354D918(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC47270;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22354D970(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC47270;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22354D9A8(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22354D9B8(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22354D9E4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_22354DB60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22354DBD0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_v"
                     "S6_Lb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMesh"
                                "ResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22354DC3C()
{
  return &unk_24EC472D0;
}

_QWORD *sub_22354DC48(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC472F0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22354DC80(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC472F0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354DCC8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC472F0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22354DD20(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC472F0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22354DD58(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22354DD68(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22354DD94(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22354DE4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22354DE98(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_v"
                     "S6_Lb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMesh"
                                "ResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22354DF04()
{
  return &unk_24EC47350;
}

void sub_22354DF14(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22354DF38(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_22354DF50(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng36MeshingNodeGlobalOccup"
                     "ancyMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng36MeshingNode"
                                "GlobalOccupancyMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng36MeshingNodeGlobalOccupancyMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_22354DFC0(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22354DFEC(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354E028@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC473C0;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_22354E090(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22354E120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22354E134(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22354E1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22354E1D8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22354E29C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22354E2B0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22354E374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22354E388(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_22354E42C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22354E444(uint64_t a1)
{
  sub_223550010(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22354E468(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  std::mutex **v21;
  uint64_t **v22;
  std::__shared_weak_count *v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_weak_owners;
  unint64_t v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  uint64_t **v31;
  std::__shared_weak_count *v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void *v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  std::__shared_weak_count *v62[2];
  _QWORD v63[3];
  _QWORD *v64;
  void *__p[2];
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  _BYTE v70[24];
  _BYTE *v71;
  uint64_t v72;

  v72 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v22 = (uint64_t **)a1[9];
    v62[0] = 0;
    v62[1] = 0;
    v23 = (std::__shared_weak_count *)a1[5];
    if (v23)
    {
      v24 = std::__shared_weak_count::lock(v23);
      if (v24)
      {
        v25 = v24;
        v26 = (std::__shared_weak_count *)a1[4];
        p_shared_weak_owners = (unint64_t *)&v24->__shared_weak_owners_;
        do
          v28 = __ldxr(p_shared_weak_owners);
        while (__stxr(v28 + 1, p_shared_weak_owners));
        v62[0] = v26;
        v62[1] = v24;
        p_shared_owners = (unint64_t *)&v24->__shared_owners_;
        do
          v30 = __ldaxr(p_shared_owners);
        while (__stlxr(v30 - 1, p_shared_owners));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      else
      {
        v62[0] = 0;
        v62[1] = 0;
      }
    }
    v47 = v63;
    v48 = a2[3];
    if (v48)
    {
      if ((uint64_t *)v48 == a2)
      {
        v64 = v63;
        (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v63);
LABEL_60:
        sub_22326F694(__p, a2 + 4);
        v69 = 0;
        v49 = (char *)operator new(0x50uLL);
        v50 = v49;
        *(_QWORD *)v49 = &off_24EC476F8;
        *(_OWORD *)(v49 + 8) = *(_OWORD *)v62;
        v62[0] = 0;
        v62[1] = 0;
        if (v64)
        {
          if (v64 == v63)
          {
            *((_QWORD *)v49 + 6) = v49 + 24;
            (*(void (**)(_QWORD *))(v63[0] + 24))(v63);
          }
          else
          {
            *((_QWORD *)v49 + 6) = v64;
            v64 = 0;
          }
        }
        else
        {
          *((_QWORD *)v49 + 6) = 0;
        }
        *(_OWORD *)(v50 + 56) = *(_OWORD *)__p;
        *((_QWORD *)v50 + 9) = v66;
        __p[1] = 0;
        v66 = 0;
        __p[0] = 0;
        v69 = (std::__shared_weak_count *)v50;
        sub_2245022E4(*v22, (uint64_t)&v67);
        v51 = (__int128 *)v69;
        if (v69 == (std::__shared_weak_count *)&v67)
        {
          v52 = 4;
          v51 = &v67;
        }
        else
        {
          if (!v69)
            goto LABEL_70;
          v52 = 5;
        }
        (*(void (**)(void))(*(_QWORD *)v51 + 8 * v52))();
LABEL_70:
        v53 = (char *)__p[0];
        if (__p[0])
        {
          v54 = (char *)__p[1];
          v55 = __p[0];
          if (__p[1] != __p[0])
          {
            do
            {
              v56 = (std::__shared_weak_count *)*((_QWORD *)v54 - 12);
              if (v56)
              {
                v57 = (unint64_t *)&v56->__shared_owners_;
                do
                  v58 = __ldaxr(v57);
                while (__stlxr(v58 - 1, v57));
                if (!v58)
                {
                  ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
                  std::__shared_weak_count::__release_weak(v56);
                }
              }
              v54 -= 120;
            }
            while (v54 != v53);
            v55 = __p[0];
          }
          __p[1] = v53;
          operator delete(v55);
        }
        if (v64 == v63)
        {
          v59 = 4;
        }
        else
        {
          if (!v64)
            goto LABEL_86;
          v59 = 5;
          v47 = v64;
        }
        (*(void (**)(_QWORD *))(*v47 + 8 * v59))(v47);
LABEL_86:
        v46 = v62[1];
        if (!v62[1])
          return;
        goto LABEL_87;
      }
      v48 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v48 + 16))(v48);
    }
    v64 = (_QWORD *)v48;
    goto LABEL_60;
  }
  sub_223550210(&v60, a2);
  v5 = v60;
  v4 = v61;
  if (v61)
  {
    v6 = (unint64_t *)&v61->__shared_weak_owners_;
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a1[18];
  v9 = (_QWORD *)operator new();
  *v9 = v8 + 56;
  std::mutex::lock((std::mutex *)(v8 + 56));
  *(_QWORD *)&v67 = v9;
  *((_QWORD *)&v67 + 1) = v8;
  if (!*(_BYTE *)(v8 + 48))
    sub_22324A974();
  v10 = (_QWORD *)(*(_QWORD *)v8 + 16 * *(_QWORD *)(v8 + 32));
  if (v4)
  {
    v11 = (unint64_t *)&v4->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = (std::__shared_weak_count *)v10[1];
  *v10 = v5;
  v10[1] = v4;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v16 = (uint64_t)(*(_QWORD *)(v8 + 8) - *(_QWORD *)v8) >> 4;
  v17 = *(_QWORD *)(v8 + 40);
  v18 = *(_QWORD *)(v8 + 32) + 1;
  if (v18 >= v16)
    v19 = (uint64_t)(*(_QWORD *)(v8 + 8) - *(_QWORD *)v8) >> 4;
  else
    v19 = 0;
  *(_QWORD *)(v8 + 32) = v18 - v19;
  if (v17 != v16)
  {
    *(_QWORD *)(v8 + 40) = v17 + 1;
    v21 = (std::mutex **)v67;
    if (!(_QWORD)v67)
      goto LABEL_35;
    goto LABEL_34;
  }
  v20 = *(_QWORD *)(v8 + 24) + 1;
  if (v20 < v16)
    v16 = 0;
  *(_QWORD *)(v8 + 24) = v20 - v16;
  v21 = (std::mutex **)v67;
  if ((_QWORD)v67)
  {
LABEL_34:
    std::mutex::unlock(*v21);
    MEMORY[0x227684CE8](v21, 0x20C4093837F09);
  }
LABEL_35:
  v31 = (uint64_t **)a1[9];
  v67 = 0uLL;
  v32 = (std::__shared_weak_count *)a1[5];
  if (v32)
  {
    v33 = std::__shared_weak_count::lock(v32);
    if (v33)
    {
      v34 = v33;
      v35 = a1[4];
      v36 = (unint64_t *)&v33->__shared_weak_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
      *(_QWORD *)&v67 = v35;
      *((_QWORD *)&v67 + 1) = v33;
      v38 = (unint64_t *)&v33->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
    else
    {
      v67 = 0uLL;
    }
  }
  v68 = v5;
  v69 = v4;
  v71 = 0;
  v40 = (char *)operator new(0x30uLL);
  *(_QWORD *)v40 = &off_24EC47678;
  *(_OWORD *)(v40 + 8) = v67;
  v67 = 0uLL;
  *((_QWORD *)v40 + 3) = v5;
  *((_QWORD *)v40 + 4) = v4;
  v68 = 0;
  v69 = 0;
  v71 = v40;
  sub_2245022E4(*v31, (uint64_t)v70);
  v41 = v71;
  if (v71 == v70)
  {
    v42 = 4;
    v41 = v70;
    goto LABEL_48;
  }
  if (v71)
  {
    v42 = 5;
LABEL_48:
    (*(void (**)(void))(*v41 + 8 * v42))();
  }
  v43 = v61;
  if (v61)
  {
    v44 = (unint64_t *)&v61->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      v46 = v43;
LABEL_87:
      std::__shared_weak_count::__release_weak(v46);
    }
  }
}

void sub_22354E9C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22354EB24(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22354EB34(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22354EB40(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_22354EB50(_QWORD *a1, uint64_t *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  _QWORD *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  std::mutex **v26;
  uint64_t **v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_weak_owners;
  unint64_t v33;
  unint64_t *p_shared_owners;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t **v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  char *v47;
  std::string *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  std::__shared_weak_count *v56;
  _QWORD *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  __int128 *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  char *v66;
  char *v67;
  void *v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  std::__shared_weak_count *v76;
  std::string *v77;
  std::runtime_error *exception;
  std::runtime_error *v79;
  _QWORD *v80;
  _QWORD *v81;
  std::__shared_weak_count *v82;
  std::runtime_error v83;
  _QWORD *v84;
  std::__shared_weak_count *v85;
  std::__shared_weak_count *v86[2];
  _QWORD v87[3];
  _QWORD *v88;
  void *__p[2];
  uint64_t v90;
  _QWORD *v91;
  std::__shared_weak_count *v92;
  __int128 v93;
  _QWORD *v94;
  std::__shared_weak_count *v95;
  _QWORD *v96;
  _QWORD *v97;
  std::string v98;
  std::string *v99;
  uint64_t v100;

  v100 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v93 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v93 + 1) = 45;
    v75 = (_QWORD *)a1[6];
    v74 = a1 + 6;
    v73 = v75;
    v76 = (std::__shared_weak_count *)*((unsigned __int8 *)v74 + 23);
    if ((char)v76 < 0)
      v76 = (std::__shared_weak_count *)v74[1];
    else
      v73 = v74;
    v94 = v73;
    v95 = v76;
    sub_2231A9820((uint64_t)&v93, (uint64_t)&v96, 0, 0, &v98);
    if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v77 = &v98;
    else
      v77 = (std::string *)v98.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v83, (const char *)v77);
    v83.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v79 = std::runtime_error::runtime_error(exception, &v83);
    v79->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v79, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v27 = (uint64_t **)a1[9];
    v86[0] = 0;
    v86[1] = 0;
    v28 = (std::__shared_weak_count *)a1[5];
    if (!v28)
      goto LABEL_36;
    v29 = std::__shared_weak_count::lock(v28);
    if (v29)
    {
      v30 = v29;
      v31 = (std::__shared_weak_count *)a1[4];
      p_shared_weak_owners = (unint64_t *)&v29->__shared_weak_owners_;
      do
        v33 = __ldxr(p_shared_weak_owners);
      while (__stxr(v33 + 1, p_shared_weak_owners));
      v86[0] = v31;
      v86[1] = v29;
      p_shared_owners = (unint64_t *)&v29->__shared_owners_;
      do
        v35 = __ldaxr(p_shared_owners);
      while (__stlxr(v35 - 1, p_shared_owners));
      if (v35)
      {
LABEL_36:
        v36 = v87;
        v37 = a2[3];
        if (!v37)
          goto LABEL_39;
        goto LABEL_37;
      }
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v30);
      v36 = v87;
      v37 = a2[3];
      if (!v37)
        goto LABEL_39;
    }
    else
    {
      v86[0] = 0;
      v86[1] = 0;
      v36 = v87;
      v37 = a2[3];
      if (!v37)
        goto LABEL_39;
    }
LABEL_37:
    if ((uint64_t *)v37 == a2)
    {
      v88 = v87;
      (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v87);
LABEL_69:
      sub_22326F694(__p, a2 + 4);
      v56 = (std::__shared_weak_count *)operator new(0x20uLL);
      v56->__shared_owners_ = 0;
      v56->__shared_weak_owners_ = 0;
      v56->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47778;
      v56[1].__vftable = *a3;
      v57 = &v56[1].__vftable;
      *a3 = 0;
      v91 = &v56[1].__vftable;
      v92 = v56;
      v95 = 0;
      v58 = (char *)operator new(0x60uLL);
      v59 = v58;
      *(_QWORD *)v58 = &off_24EC47848;
      *(_OWORD *)(v58 + 8) = *(_OWORD *)v86;
      v86[0] = 0;
      v86[1] = 0;
      if (v88)
      {
        if (v88 == v87)
        {
          *((_QWORD *)v58 + 6) = v58 + 24;
          (*(void (**)(_QWORD *))(v87[0] + 24))(v87);
          v57 = v91;
          v56 = v92;
        }
        else
        {
          *((_QWORD *)v58 + 6) = v88;
          v88 = 0;
        }
      }
      else
      {
        *((_QWORD *)v58 + 6) = 0;
      }
      *(_OWORD *)(v59 + 56) = *(_OWORD *)__p;
      v60 = v90;
      __p[1] = 0;
      v90 = 0;
      __p[0] = 0;
      *((_QWORD *)v59 + 9) = v60;
      *((_QWORD *)v59 + 10) = v57;
      *((_QWORD *)v59 + 11) = v56;
      v91 = 0;
      v92 = 0;
      v95 = (std::__shared_weak_count *)v59;
      sub_2245022E4(*v27, (uint64_t)&v93);
      v61 = (__int128 *)v95;
      if (v95 == (std::__shared_weak_count *)&v93)
      {
        v62 = 4;
        v61 = &v93;
      }
      else
      {
        if (!v95)
        {
LABEL_79:
          v63 = v92;
          if (v92)
          {
            v64 = (unint64_t *)&v92->__shared_owners_;
            do
              v65 = __ldaxr(v64);
            while (__stlxr(v65 - 1, v64));
            if (!v65)
            {
              ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
              std::__shared_weak_count::__release_weak(v63);
            }
          }
          v66 = (char *)__p[0];
          if (__p[0])
          {
            v67 = (char *)__p[1];
            v68 = __p[0];
            if (__p[1] != __p[0])
            {
              do
              {
                v69 = (std::__shared_weak_count *)*((_QWORD *)v67 - 12);
                if (v69)
                {
                  v70 = (unint64_t *)&v69->__shared_owners_;
                  do
                    v71 = __ldaxr(v70);
                  while (__stlxr(v71 - 1, v70));
                  if (!v71)
                  {
                    ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
                    std::__shared_weak_count::__release_weak(v69);
                  }
                }
                v67 -= 120;
              }
              while (v67 != v66);
              v68 = __p[0];
            }
            __p[1] = v66;
            operator delete(v68);
          }
          if (v88 == v87)
          {
            v72 = 4;
          }
          else
          {
            if (!v88)
              goto LABEL_100;
            v72 = 5;
            v36 = v88;
          }
          (*(void (**)(_QWORD *))(*v36 + 8 * v72))(v36);
LABEL_100:
          v55 = v86[1];
          if (!v86[1])
            return;
          goto LABEL_101;
        }
        v62 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v61 + 8 * v62))();
      goto LABEL_79;
    }
    v37 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 16))(v37);
LABEL_39:
    v88 = (_QWORD *)v37;
    goto LABEL_69;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47778;
  v6[1].__vftable = *a3;
  v82 = v6;
  v80 = &v6[1].__vftable;
  v81 = &v6->__vftable;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_223550210(&v84, a2);
  v10 = v84;
  v9 = v85;
  if (v85)
  {
    v11 = (unint64_t *)&v85->__shared_weak_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = a1[18];
  v14 = (_QWORD *)operator new();
  *v14 = v13 + 56;
  std::mutex::lock((std::mutex *)(v13 + 56));
  *(_QWORD *)&v93 = v14;
  *((_QWORD *)&v93 + 1) = v13;
  if (!*(_BYTE *)(v13 + 48))
    sub_22324A974();
  v15 = (_QWORD *)(*(_QWORD *)v13 + 16 * *(_QWORD *)(v13 + 32));
  if (v9)
  {
    v16 = (unint64_t *)&v9->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v18 = (std::__shared_weak_count *)v15[1];
  *v15 = v10;
  v15[1] = v9;
  if (v18)
  {
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = (uint64_t)(*(_QWORD *)(v13 + 8) - *(_QWORD *)v13) >> 4;
  v22 = *(_QWORD *)(v13 + 40);
  v23 = *(_QWORD *)(v13 + 32) + 1;
  if (v23 >= v21)
    v24 = (uint64_t)(*(_QWORD *)(v13 + 8) - *(_QWORD *)v13) >> 4;
  else
    v24 = 0;
  *(_QWORD *)(v13 + 32) = v23 - v24;
  if (v22 != v21)
  {
    *(_QWORD *)(v13 + 40) = v22 + 1;
    v26 = (std::mutex **)v93;
    if (!(_QWORD)v93)
      goto LABEL_42;
    goto LABEL_41;
  }
  v25 = *(_QWORD *)(v13 + 24) + 1;
  if (v25 < v21)
    v21 = 0;
  *(_QWORD *)(v13 + 24) = v25 - v21;
  v26 = (std::mutex **)v93;
  if ((_QWORD)v93)
  {
LABEL_41:
    std::mutex::unlock(*v26);
    MEMORY[0x227684CE8](v26, 0x20C4093837F09);
  }
LABEL_42:
  v38 = (uint64_t **)a1[9];
  v93 = 0uLL;
  v39 = (std::__shared_weak_count *)a1[5];
  if (v39)
  {
    v40 = std::__shared_weak_count::lock(v39);
    if (v40)
    {
      v41 = v40;
      v42 = a1[4];
      v43 = (unint64_t *)&v40->__shared_weak_owners_;
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 1, v43));
      *(_QWORD *)&v93 = v42;
      *((_QWORD *)&v93 + 1) = v40;
      v45 = (unint64_t *)&v40->__shared_owners_;
      do
        v46 = __ldaxr(v45);
      while (__stlxr(v46 - 1, v45));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
    else
    {
      v93 = 0uLL;
    }
  }
  v94 = v10;
  v95 = v9;
  v96 = v80;
  v97 = v81;
  v99 = 0;
  v47 = (char *)operator new(0x38uLL);
  *(_QWORD *)v47 = &off_24EC477C8;
  *(_OWORD *)(v47 + 8) = v93;
  v93 = 0uLL;
  *((_QWORD *)v47 + 3) = v10;
  *((_QWORD *)v47 + 4) = v9;
  v94 = 0;
  v95 = 0;
  *((_QWORD *)v47 + 5) = v80;
  *((_QWORD *)v47 + 6) = v81;
  v96 = 0;
  v97 = 0;
  v99 = (std::string *)v47;
  sub_2245022E4(*v38, (uint64_t)&v98);
  v48 = v99;
  if (v99 == &v98)
  {
    v49 = 4;
    v48 = &v98;
    goto LABEL_55;
  }
  if (v99)
  {
    v49 = 5;
LABEL_55:
    (*(void (**)(void))(v48->__r_.__value_.__r.__words[0] + 8 * v49))();
  }
  v50 = v85;
  if (v85)
  {
    v51 = (unint64_t *)&v85->__shared_owners_;
    do
      v52 = __ldaxr(v51);
    while (__stlxr(v52 - 1, v51));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  if (v82)
  {
    v53 = (unint64_t *)&v82->__shared_owners_;
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
      v55 = v82;
LABEL_101:
      std::__shared_weak_count::__release_weak(v55);
    }
  }
}

void sub_22354F300(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22354F310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22354F318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15)
{
  std::__assoc_sub_state **v15;
  uint64_t v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v17 = *v15;
    if (*v15)
    {
      std::exception_ptr::exception_ptr((std::exception_ptr *)(v16 - 160), &a15);
      v18.__ptr_ = (void *)(v16 - 160);
      std::__assoc_sub_state::set_exception(v17, v18);
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v16 - 160));
      std::exception_ptr::~exception_ptr(&a15);
      std::runtime_error::~runtime_error(&a14);
      if (*(char *)(v16 - 81) < 0)
        operator delete(*(void **)(v16 - 104));
      JUMPOUT(0x22354F1E8);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_22354F38C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15)
{
  uint64_t v15;

  std::exception_ptr::~exception_ptr(&a15);
  std::runtime_error::~runtime_error(&a14);
  if (*(char *)(v15 - 81) < 0)
  {
    operator delete(*(void **)(v15 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22354F3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v14;
  uint64_t v15;
  va_list va;

  va_start(va, a11);
  v14 = *(_QWORD **)(v12 - 136);
  if (v14 == v11)
  {
    v15 = 4;
    v14 = (_QWORD *)(v12 - 160);
  }
  else
  {
    if (!v14)
    {
      sub_223541CB0((uint64_t *)va);
      _Unwind_Resume(a1);
    }
    v15 = 5;
  }
  (*(void (**)(void))(*v14 + 8 * v15))();
  sub_223541CB0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_22354F430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  _QWORD *v20;

  sub_223540AB8(v20);
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x22354F48CLL);
}

void sub_22354F440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24)
{
  _QWORD *v24;
  uint64_t v26;

  if (a24 == v24)
  {
    v26 = 4;
  }
  else
  {
    if (!a24)
      goto LABEL_6;
    v26 = 5;
    v24 = a24;
  }
  (*(void (**)(_QWORD *))(*v24 + 8 * v26))(v24);
LABEL_6:
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x22354F48CLL);
}

void sub_22354F494(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  va_list va1;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v10 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  v14 = va_arg(va2, _QWORD);
  v15 = va_arg(va2, _QWORD);
  v5 = *(_QWORD **)(v3 - 80);
  if (v5 == v2)
  {
    v6 = 4;
    v5 = (_QWORD *)(v3 - 104);
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  sub_22332429C((_QWORD *)(v3 - 160));
  sub_223167354((uint64_t)va2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22354F538(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22354F554(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_22354F5C8(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC478C8;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B460;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_22354F6F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22354F76C(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC47948;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_22354F87C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_22354F8E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC479C8;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22354FAF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_22354FBC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC47A48;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22354FDD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22354FEA0(uint64_t a1)
{
  return sub_223550010(a1 - 16);
}

void sub_22354FEA8(uint64_t a1)
{
  sub_223550010(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354FED0(uint64_t a1, uint64_t a2)
{
  return sub_22354F5C8((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22354FED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22354F8E0((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22354FEE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22354FBC0((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_22354FEE8(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_22354FEF0(uint64_t a1)
{
  return sub_223550010(a1 - 24);
}

void sub_22354FEF8(uint64_t a1)
{
  sub_223550010(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22354FF20(uint64_t a1)
{
  return sub_22354F76C((_QWORD *)(a1 - 24));
}

uint64_t sub_22354FF28(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_22354FF30(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22354FF98(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223550000(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223550010(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC47428;
  *(_QWORD *)(a1 + 16) = &unk_24EC474A0;
  *(_QWORD *)(a1 + 24) = &unk_24EC474E0;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

_QWORD *sub_223550210(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;

  v4 = operator new(0x50uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_24EC47628;
  v5 = v4 + 3;
  v6 = a2[3];
  if (v6)
  {
    if ((uint64_t *)v6 == a2)
    {
      v4[6] = v5;
      (*(void (**)(uint64_t *, _QWORD *))(*a2 + 24))(a2, v5);
      goto LABEL_6;
    }
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
  }
  v4[6] = v6;
LABEL_6:
  result = sub_22326F694(v4 + 7, a2 + 4);
  *a1 = v5;
  a1[1] = v4;
  return result;
}

void sub_2235502A4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_2235502BC(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count_vtbl *v2;
  std::__shared_weak_count_vtbl *v4;
  uint64_t v5;
  void *v6;

  v4 = v1[2].__vftable;
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = v1[2].__vftable;
  }
  (*((void (**)(std::__shared_weak_count_vtbl *))v2->~__shared_weak_count + v5))(v2);
LABEL_6:
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v6);
  _Unwind_Resume(a1);
}

void sub_223550304(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47628;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223550314(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47628;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223550344(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *result;
  uint64_t v10;

  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  result = (_QWORD *)a1[6];
  if (result == v2)
  {
    v10 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v10 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v10))();
}

_QWORD *sub_223550424(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC47678;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_223550468(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC47678;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235504BC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC47678;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_22355052C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC47678;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_22355057C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235505B8(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235505F0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_223550914((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_223550CF0(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235507B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_223550CF0(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22355089C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS"
                     "6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshR"
                                "esultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223550908()
{
  return &unk_24EC476D8;
}

_QWORD *sub_223550914(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  char *v9;
  char *v10;
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  _QWORD *result;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD *v18;
  void *__p;
  char *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v17, v6, a2);
  v7 = a1 + 1;
  for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
    (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v17);
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_223550BC8(*(_QWORD *)a3, (uint64_t)v17);
  }
  v9 = (char *)__p;
  if (__p)
  {
    v10 = v20;
    v11 = __p;
    if (v20 != __p)
    {
      do
      {
        v12 = (std::__shared_weak_count *)*((_QWORD *)v10 - 12);
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v14 = __ldaxr(p_shared_owners);
          while (__stlxr(v14 - 1, p_shared_owners));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        v10 -= 120;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v20 = v9;
    operator delete(v11);
  }
  result = v18;
  if (v18 == v17)
  {
    v16 = 4;
    result = v17;
  }
  else
  {
    if (!v18)
      return result;
    v16 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
}

void sub_223550AC4(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  uint64_t *v5;
  uint64_t v6;
  va_list v7;
  uint64_t v8;
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;
  va_list v13;
  va_list va2;
  uint64_t v15;
  uint64_t v16;
  va_list va3;

  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v11 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v13 = va_arg(va3, va_list);
  v15 = va_arg(va3, _QWORD);
  v16 = va_arg(va3, _QWORD);
  sub_223540AB8((uint64_t *)va3);
  if (a2 == 1)
  {
    v5 = (uint64_t *)__cxa_begin_catch(a1);
    v6 = *v5;
    v11 = *(_QWORD *)(*(_QWORD *)(*v5 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    v9 = (*(uint64_t (**)(void))(v6 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", va1, "\n", "message: ", va, "\n");
    if (v16 >= 0)
      va_copy(v7, va2);
    else
      v7 = v13;
    if (v16 >= 0)
      v8 = HIBYTE(v16);
    else
      v8 = v15;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v7, v8, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_223550B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_223550BB0(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x223550BB8);
  sub_22316DC48(a1);
}

void sub_223550BC8(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  uint64_t v5;
  uint64_t v6;
  std::exception_ptr v7;

  v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(_BYTE *)(a1 + 136) & 1) != 0
    || (v7.__ptr_ = 0, v5 = *(_QWORD *)(a1 + 16), std::exception_ptr::~exception_ptr(&v7), v5))
  {
    sub_2233236D4(2u);
  }
  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    if (v6 == a2)
    {
      *(_QWORD *)(a1 + 168) = a1 + 144;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1 + 144);
      goto LABEL_8;
    }
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
  }
  *(_QWORD *)(a1 + 168) = v6;
LABEL_8:
  sub_22326F694((_QWORD *)(a1 + 176), (uint64_t *)(a2 + 32));
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock(v4);
}

void sub_223550C98(_Unwind_Exception *a1)
{
  std::mutex *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;

  v5 = *(_QWORD **)(v2 + 168);
  if (v5 == v3)
  {
    v6 = 4;
  }
  else
  {
    if (!v5)
    {
      std::mutex::unlock(v1);
      _Unwind_Resume(a1);
    }
    v6 = 5;
    v3 = *(_QWORD **)(v2 + 168);
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v6))(v3);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_223550CF0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  const std::error_category *v7;
  std::logic_error *exception;
  std::logic_error *v9;
  std::logic_error v10;
  std::logic_error v11;
  std::exception_ptr v12;

  v2 = *a1;
  if (!v2)
    return a1;
  if ((*(_BYTE *)(v2 + 136) & 1) == 0)
  {
    v12.__ptr_ = 0;
    v3 = *(_QWORD *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v12);
    v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v7 = std::future_category();
      MEMORY[0x2276844A8](&v10, 4, v7);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      v9 = std::logic_error::logic_error(exception, &v10);
      v9->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB810] + 16);
      v9[1] = v11;
      __cxa_throw(v9, MEMORY[0x24BEDB6E0], (void (*)(void *))MEMORY[0x24BEDAD80]);
    }
  }
  v4 = (unint64_t *)(v2 + 8);
  do
    v5 = __ldaxr(v4);
  while (__stlxr(v5 - 1, v4));
  if (v5)
    return a1;
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  return a1;
}

void sub_223550DDC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__assoc_sub_state *a10, char a11)
{
  uint64_t v11;
  std::exception_ptr v12;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v12.__ptr_ = (void *)(v11 - 32);
  std::__assoc_sub_state::set_exception(a10, v12);
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(v11 - 32));
  MEMORY[0x2276844B4](&a11);
  JUMPOUT(0x223550D38);
}

_QWORD *sub_223550E18(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC476F8;
  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_223550F00(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC476F8;
  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223550FF8(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = operator new(0x50uLL);
  v3 = v2;
  v5 = a1[1];
  v4 = a1[2];
  *v2 = &off_24EC476F8;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = v2 + 3;
  v9 = a1[6];
  if (v9)
  {
    if ((_QWORD *)v9 == a1 + 3)
    {
      v3[6] = v8;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v9 + 24))(v9, v3 + 3);
      goto LABEL_9;
    }
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  }
  v3[6] = v9;
LABEL_9:
  sub_22326F694(v3 + 7, a1 + 7);
  return v3;
}

void sub_2235510A4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (!v3)
  {
    operator delete(v1);
    _Unwind_Resume(a1);
  }
  std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_22355111C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC476F8;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a1[6];
  if (v8)
  {
    if ((_QWORD *)v8 == a1 + 3)
    {
      a2[6] = a2 + 3;
      (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a1[6] + 24))(a1[6], a2 + 3);
      return sub_22326F694(a2 + 7, a1 + 7);
    }
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
  }
  a2[6] = v8;
  return sub_22326F694(a2 + 7, a1 + 7);
}

void sub_2235511C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (!v3)
    _Unwind_Resume(exception_object);
  std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223551228(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = a1 + 3;
  v3 = a1[7];
  if (v3)
  {
    v4 = a1[8];
    v5 = (void *)a1[7];
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)a1[7];
    }
    a1[8] = v3;
    operator delete(v5);
  }
  v9 = (_QWORD *)a1[6];
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
}

void sub_223551310(char *__p)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = __p + 24;
  v3 = *((_QWORD *)__p + 7);
  if (v3)
  {
    v4 = *((_QWORD *)__p + 8);
    v5 = (void *)*((_QWORD *)__p + 7);
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = (void *)*((_QWORD *)__p + 7);
    }
    *((_QWORD *)__p + 8) = v3;
    operator delete(v5);
  }
  v9 = (char *)*((_QWORD *)__p + 6);
  if (v9 == v2)
  {
    v10 = 4;
    v9 = v2;
  }
  else
  {
    if (!v9)
      goto LABEL_17;
    v10 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v9 + 8 * v10))();
LABEL_17:
  v11 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  operator delete(__p);
}

void sub_2235513EC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_223550914((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_223550CF0(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223551494(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_223550CF0(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235514E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS"
                     "6_Lb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshR"
                                "esultES6_vS6_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22355154C()
{
  return &unk_24EC47758;
}

void sub_223551558(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47778;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223551568(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47778;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t *sub_223551598(uint64_t a1)
{
  return sub_223550CF0((uint64_t *)(a1 + 24));
}

_QWORD *sub_2235515A4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC477C8;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_22355162C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC477C8;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_2235516C4(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC477C8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_223551754(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC477C8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235517C4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_223551844(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_2235518C0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_223550914(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_223550CF0((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223551B9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223551BC8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x2235519D4);
    JUMPOUT(0x2235519A4);
  }
  sub_2233236D4(3u);
}

void sub_223551C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223551C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_223550CF0(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_223551D3C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS"
                     "6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshR"
                                "esultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEE"
                                "UlT_T0_E_EEvSA_SE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223551DA8()
{
  return &unk_24EC47828;
}

_QWORD *sub_223551DB4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  *a1 = &off_24EC47848;
  v2 = (std::__shared_weak_count *)a1[11];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  v7 = (char *)a1[8];
  v8 = v6;
  if (v7 != v6)
  {
    do
    {
      v9 = (std::__shared_weak_count *)*((_QWORD *)v7 - 12);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v7 -= 120;
    }
    while (v7 != v6);
    v8 = (char *)a1[7];
  }
  a1[8] = v6;
  operator delete(v8);
LABEL_16:
  v12 = (_QWORD *)a1[6];
  if (v12 == v5)
  {
    v13 = 4;
    v12 = v5;
  }
  else
  {
    if (!v12)
      goto LABEL_21;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[2];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  return a1;
}

void sub_223551EE4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  *a1 = &off_24EC47848;
  v2 = (std::__shared_weak_count *)a1[11];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (char *)a1[7];
    if (!v6)
      goto LABEL_16;
  }
  v7 = (char *)a1[8];
  v8 = v6;
  if (v7 != v6)
  {
    do
    {
      v9 = (std::__shared_weak_count *)*((_QWORD *)v7 - 12);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v7 -= 120;
    }
    while (v7 != v6);
    v8 = (char *)a1[7];
  }
  a1[8] = v6;
  operator delete(v8);
LABEL_16:
  v12 = (_QWORD *)a1[6];
  if (v12 == v5)
  {
    v13 = 4;
    v12 = v5;
  }
  else
  {
    if (!v12)
      goto LABEL_21;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[2];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223552024(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(a1 + 8);
  v2 = operator new(0x60uLL);
  *v2 = &off_24EC47848;
  sub_223552330(v2 + 1, v1);
  return v2;
}

void sub_223552064(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_223552078(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24EC47848;
  return sub_223552330(a2 + 1, (_QWORD *)(a1 + 8));
}

void sub_223552094(uint64_t a1)
{
  sub_223542CD0((_QWORD *)(a1 + 8));
}

void sub_22355209C(_QWORD *a1)
{
  sub_223542CD0(a1 + 1);
  operator delete(a1);
}

void sub_2235520C4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[10];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_223550914((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_223550CF0((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_2235521D4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_22355224C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x223552280);
  JUMPOUT(0x2235522B0);
}

uint64_t sub_2235522B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS"
                     "6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshR"
                                "esultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223552324()
{
  return &unk_24EC478A8;
}

_QWORD *sub_223552330(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1 + 2;
  v8 = a2[5];
  if (!v8)
    goto LABEL_7;
  if ((_QWORD *)v8 != a2 + 2)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
LABEL_7:
    a1[5] = v8;
    goto LABEL_9;
  }
  a1[5] = v7;
  (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[5] + 24))(a2[5], a1 + 2);
LABEL_9:
  sub_22326F694(a1 + 6, a2 + 6);
  v9 = a2[10];
  a1[9] = a2[9];
  a1[10] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return a1;
}

void sub_2235523EC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (!v3)
    _Unwind_Resume(exception_object);
  std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_223552454(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC478C8;
  v2 = a1[4];
  a1[3] = &off_24EC2B460;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235524AC(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC478C8;
  v2 = a1[4];
  a1[3] = &off_24EC2B460;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223552514(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC478C8;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B460;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_22355258C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235525AC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC478C8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B460;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_223552614(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22355262C(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B460;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_22355267C(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B460;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235526C8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B460;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22355277C(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235527B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6"
                     "_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshRe"
                                "sultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223552824()
{
  return &unk_24EC47928;
}

_QWORD *sub_223552830(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC47948;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223552868(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC47948;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235528B0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC47948;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_223552900(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC47948;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_223552930(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223552940(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22355296C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223552A00(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223552A3C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6"
                     "_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshRe"
                                "sultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223552AA8()
{
  return &unk_24EC479A8;
}

_QWORD *sub_223552AB4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC479C8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223552AEC(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC479C8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223552B34(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC479C8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_223552B8C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC479C8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_223552BC4(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223552BD4(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223552C00(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_223552D7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223552DEC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS"
                     "6_Lb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshR"
                                "esultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223552E58()
{
  return &unk_24EC47A28;
}

_QWORD *sub_223552E64(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC47A48;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223552E9C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC47A48;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223552EE4(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC47A48;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_223552F3C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC47A48;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_223552F74(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223552F84(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223552FB0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223553068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235530B4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS"
                     "6_Lb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshR"
                                "esultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng35MeshingNodeOccupancyBlockMeshResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223553120()
{
  return &unk_24EC47AA8;
}

void sub_223553130(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223553154(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_22355316C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng35MeshingNodeOccupancyBl"
                     "ockMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng35MeshingNode"
                                "OccupancyBlockMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng35MeshingNodeOccupancyBlockMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng35MeshingNodeOccupancyBlockMeshResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_2235531DC(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223553208(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223553244@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC47B18;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_2235532AC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22355333C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223553350(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235533E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235533F4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235534B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235534CC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_223553590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235535A4(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223553648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223553660(uint64_t a1)
{
  sub_2235553A4(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223553684(_QWORD *a1, _QWORD *a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_weak_owners;
  unint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count **v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  std::mutex **v24;
  uint64_t **v25;
  std::__shared_weak_count *v26;
  std::__shared_weak_count *v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t **v34;
  std::__shared_weak_count *v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  unint64_t v52;
  char *v53;
  __int128 *v54;
  __int128 v55;
  __int128 *v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  std::__shared_weak_count *v65[2];
  _QWORD v66[3];
  _QWORD *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 *v72;
  _BYTE v73[24];
  _BYTE *v74;
  uint64_t v75;

  v75 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v4 = (std::__shared_weak_count *)operator new(0x58uLL);
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__shared_weak_owners_ = 0;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47D80;
    v6 = v4 + 1;
    sub_2235557C0(&v4[1].__vftable, a2);
    p_shared_weak_owners = (unint64_t *)&v4->__shared_weak_owners_;
    do
      v8 = __ldxr(p_shared_weak_owners);
    while (__stxr(v8 + 1, p_shared_weak_owners));
    v9 = (uint64_t *)a1[18];
    v10 = (_QWORD *)operator new();
    *v10 = v9 + 7;
    std::mutex::lock((std::mutex *)(v9 + 7));
    *(_QWORD *)&v70 = v10;
    *((_QWORD *)&v70 + 1) = v9;
    if (!*((_BYTE *)v9 + 48))
      sub_22324A974();
    v11 = v9[4];
    v12 = *v9;
    v13 = (std::__shared_weak_count **)(*v9 + 16 * v11);
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *v13 = v6;
    v15 = v12 + 16 * v11;
    v16 = *(std::__shared_weak_count **)(v15 + 8);
    *(_QWORD *)(v15 + 8) = v4;
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v19 = (v9[1] - *v9) >> 4;
    v20 = v9[5];
    v21 = v9[4] + 1;
    if (v21 >= v19)
      v22 = (v9[1] - *v9) >> 4;
    else
      v22 = 0;
    v9[4] = v21 - v22;
    if (v20 == v19)
    {
      v23 = v9[3] + 1;
      if (v23 < v19)
        v19 = 0;
      v9[3] = v23 - v19;
      v24 = (std::mutex **)v70;
      if (!(_QWORD)v70)
      {
LABEL_33:
        v34 = (uint64_t **)a1[9];
        v70 = 0uLL;
        v35 = (std::__shared_weak_count *)a1[5];
        if (v35)
        {
          v36 = std::__shared_weak_count::lock(v35);
          if (v36)
          {
            v37 = v36;
            v38 = a1[4];
            v39 = (unint64_t *)&v36->__shared_weak_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            *(_QWORD *)&v70 = v38;
            *((_QWORD *)&v70 + 1) = v36;
            v41 = (unint64_t *)&v36->__shared_owners_;
            do
              v42 = __ldaxr(v41);
            while (__stlxr(v42 - 1, v41));
            if (!v42)
            {
              ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          else
          {
            v70 = 0uLL;
          }
        }
        v43 = (char *)operator new(0x30uLL);
        *(_QWORD *)v43 = &off_24EC47DD0;
        *(_OWORD *)(v43 + 8) = v70;
        v70 = 0uLL;
        *((_QWORD *)v43 + 3) = v6;
        *((_QWORD *)v43 + 4) = v4;
        v71 = 0;
        v72 = 0;
        v74 = v43;
        sub_2245022E4(*v34, (uint64_t)v73);
        v44 = v74;
        if (v74 == v73)
        {
          v45 = 4;
          v44 = v73;
        }
        else
        {
          if (!v74)
            goto LABEL_47;
          v45 = 5;
        }
        (*(void (**)(_QWORD *))(*v44 + 8 * v45))(v44);
LABEL_47:
        if (v4)
        {
          v46 = (unint64_t *)&v4->__shared_owners_;
          do
            v47 = __ldaxr(v46);
          while (__stlxr(v47 - 1, v46));
          if (!v47)
          {
            ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
            std::__shared_weak_count::__release_weak(v4);
          }
        }
        return;
      }
    }
    else
    {
      v9[5] = v20 + 1;
      v24 = (std::mutex **)v70;
      if (!(_QWORD)v70)
        goto LABEL_33;
    }
    std::mutex::unlock(*v24);
    MEMORY[0x227684CE8](v24, 0x20C4093837F09);
    goto LABEL_33;
  }
  v25 = (uint64_t **)a1[9];
  *(_OWORD *)v65 = 0uLL;
  v26 = (std::__shared_weak_count *)a1[5];
  if (v26)
  {
    v27 = std::__shared_weak_count::lock(v26);
    if (v27)
    {
      v28 = v27;
      v29 = (std::__shared_weak_count *)a1[4];
      v30 = (unint64_t *)&v27->__shared_weak_owners_;
      do
        v31 = __ldxr(v30);
      while (__stxr(v31 + 1, v30));
      v65[0] = v29;
      v65[1] = v27;
      v32 = (unint64_t *)&v27->__shared_owners_;
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
    else
    {
      *(_OWORD *)v65 = 0uLL;
    }
  }
  v48 = v66;
  v49 = a2[3];
  if (!v49)
    goto LABEL_56;
  if ((_QWORD *)v49 != a2)
  {
    v49 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v49 + 16))(v49);
LABEL_56:
    v67 = (_QWORD *)v49;
    goto LABEL_58;
  }
  v67 = v66;
  (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v66);
LABEL_58:
  v50 = a2[5];
  *(_QWORD *)&v68 = a2[4];
  *((_QWORD *)&v68 + 1) = v50;
  if (v50)
  {
    v51 = (unint64_t *)(v50 + 8);
    do
      v52 = __ldxr(v51);
    while (__stxr(v52 + 1, v51));
  }
  sub_2232E56F4(&v69, (uint64_t)(a2 + 6));
  v72 = 0;
  v53 = (char *)operator new(0x58uLL);
  v54 = (__int128 *)v53;
  *(_QWORD *)v53 = &off_24EC47E50;
  *(_OWORD *)(v53 + 8) = *(_OWORD *)v65;
  if (v67)
  {
    if (v67 == v66)
    {
      *((_QWORD *)v53 + 6) = v53 + 24;
      (*(void (**)(_QWORD *))(v66[0] + 24))(v66);
    }
    else
    {
      *((_QWORD *)v53 + 6) = v67;
      v67 = 0;
    }
  }
  else
  {
    *((_QWORD *)v53 + 6) = 0;
  }
  v55 = v69;
  *(__int128 *)((char *)v54 + 56) = v68;
  v68 = 0uLL;
  *(__int128 *)((char *)v54 + 72) = v55;
  v69 = 0uLL;
  v72 = v54;
  sub_2245022E4(*v25, (uint64_t)&v70);
  v56 = v72;
  if (v72 == &v70)
  {
    v57 = 4;
    v56 = &v70;
  }
  else
  {
    if (!v72)
      goto LABEL_71;
    v57 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v56 + 8 * v57))();
LABEL_71:
  v58 = (std::__shared_weak_count *)*((_QWORD *)&v69 + 1);
  if (*((_QWORD *)&v69 + 1))
  {
    v59 = (unint64_t *)(*((_QWORD *)&v69 + 1) + 8);
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
  v61 = (std::__shared_weak_count *)*((_QWORD *)&v68 + 1);
  if (*((_QWORD *)&v68 + 1))
  {
    v62 = (unint64_t *)(*((_QWORD *)&v68 + 1) + 8);
    do
      v63 = __ldaxr(v62);
    while (__stlxr(v63 - 1, v62));
    if (!v63)
    {
      ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
      std::__shared_weak_count::__release_weak(v61);
    }
  }
  if (v67 == v66)
  {
    v64 = 4;
  }
  else
  {
    if (!v67)
      return;
    v64 = 5;
    v48 = v67;
  }
  (*(void (**)(_QWORD *))(*v48 + 8 * v64))(v48);
}

void sub_223553C20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_223553DEC(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_223553DFC(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_223553E08(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_223553E18(_QWORD *a1, _QWORD *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count **v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  std::mutex **v29;
  uint64_t **v30;
  std::__shared_weak_count *v31;
  std::__shared_weak_count *v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  unint64_t *p_shared_weak_owners;
  unint64_t v36;
  unint64_t *p_shared_owners;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t **v41;
  std::__shared_weak_count *v42;
  std::__shared_weak_count *v43;
  std::__shared_weak_count *v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  char *v50;
  std::string *v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  uint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  _QWORD *v62;
  char *v63;
  char *v64;
  __int128 *v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  __int128 *v81;
  std::string *v82;
  std::runtime_error *exception;
  std::runtime_error *v84;
  _QWORD *v85;
  _QWORD *v86;
  std::__shared_weak_count *v87;
  std::runtime_error v88;
  std::__shared_weak_count *v89;
  std::__shared_weak_count *v90;
  std::__shared_weak_count *v91[2];
  _QWORD v92[3];
  _QWORD *v93;
  __int128 v94;
  __int128 v95;
  _QWORD *v96;
  std::__shared_weak_count *v97;
  __int128 v98;
  _QWORD *v99;
  __int128 *v100;
  _QWORD v101[3];
  std::string v102;
  std::string *v103;
  uint64_t v104;

  v104 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v98 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v98 + 1) = 45;
    v80 = (_QWORD *)a1[6];
    v79 = a1 + 6;
    v78 = v80;
    v81 = (__int128 *)*((unsigned __int8 *)v79 + 23);
    if ((char)v81 < 0)
      v81 = (__int128 *)v79[1];
    else
      v78 = v79;
    v99 = v78;
    v100 = v81;
    sub_2231A9820((uint64_t)&v98, (uint64_t)v101, 0, 0, &v102);
    if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v82 = &v102;
    else
      v82 = (std::string *)v102.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v88, (const char *)v82);
    v88.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v84 = std::runtime_error::runtime_error(exception, &v88);
    v84->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v84, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v30 = (uint64_t **)a1[9];
    v91[0] = 0;
    v91[1] = 0;
    v31 = (std::__shared_weak_count *)a1[5];
    if (!v31)
      goto LABEL_34;
    v32 = std::__shared_weak_count::lock(v31);
    if (v32)
    {
      v33 = v32;
      v34 = (std::__shared_weak_count *)a1[4];
      p_shared_weak_owners = (unint64_t *)&v32->__shared_weak_owners_;
      do
        v36 = __ldxr(p_shared_weak_owners);
      while (__stxr(v36 + 1, p_shared_weak_owners));
      v91[0] = v34;
      v91[1] = v32;
      p_shared_owners = (unint64_t *)&v32->__shared_owners_;
      do
        v38 = __ldaxr(p_shared_owners);
      while (__stlxr(v38 - 1, p_shared_owners));
      if (v38)
      {
LABEL_34:
        v39 = v92;
        v40 = a2[3];
        if (!v40)
          goto LABEL_37;
        goto LABEL_35;
      }
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v33);
      v39 = v92;
      v40 = a2[3];
      if (!v40)
        goto LABEL_37;
    }
    else
    {
      v91[0] = 0;
      v91[1] = 0;
      v39 = v92;
      v40 = a2[3];
      if (!v40)
        goto LABEL_37;
    }
LABEL_35:
    if ((_QWORD *)v40 == a2)
    {
      v93 = v92;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v92);
LABEL_67:
      v58 = a2[5];
      *(_QWORD *)&v94 = a2[4];
      *((_QWORD *)&v94 + 1) = v58;
      if (v58)
      {
        v59 = (unint64_t *)(v58 + 8);
        do
          v60 = __ldxr(v59);
        while (__stxr(v60 + 1, v59));
      }
      sub_2232E56F4(&v95, (uint64_t)(a2 + 6));
      v61 = (std::__shared_weak_count *)operator new(0x20uLL);
      v61->__shared_owners_ = 0;
      v61->__shared_weak_owners_ = 0;
      v61->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47ED0;
      v61[1].__vftable = *a3;
      v62 = &v61[1].__vftable;
      *a3 = 0;
      v96 = &v61[1].__vftable;
      v97 = v61;
      v100 = 0;
      v63 = (char *)operator new(0x68uLL);
      v64 = v63;
      *(_QWORD *)v63 = &off_24EC47FA0;
      *(_OWORD *)(v63 + 8) = *(_OWORD *)v91;
      v91[0] = 0;
      v91[1] = 0;
      if (v93)
      {
        if (v93 == v92)
        {
          *((_QWORD *)v63 + 6) = v63 + 24;
          (*(void (**)(_QWORD *))(v92[0] + 24))(v92);
          v62 = v96;
          v61 = v97;
        }
        else
        {
          *((_QWORD *)v63 + 6) = v93;
          v93 = 0;
        }
      }
      else
      {
        *((_QWORD *)v63 + 6) = 0;
      }
      *(_OWORD *)(v64 + 56) = v94;
      v94 = 0uLL;
      *(_OWORD *)(v64 + 72) = v95;
      v95 = 0uLL;
      *((_QWORD *)v64 + 11) = v62;
      *((_QWORD *)v64 + 12) = v61;
      v96 = 0;
      v97 = 0;
      v100 = (__int128 *)v64;
      sub_2245022E4(*v30, (uint64_t)&v98);
      v65 = v100;
      if (v100 == &v98)
      {
        v66 = 4;
        v65 = &v98;
      }
      else
      {
        if (!v100)
        {
LABEL_80:
          v67 = v97;
          if (v97)
          {
            v68 = (unint64_t *)&v97->__shared_owners_;
            do
              v69 = __ldaxr(v68);
            while (__stlxr(v69 - 1, v68));
            if (!v69)
            {
              ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
              std::__shared_weak_count::__release_weak(v67);
            }
          }
          v70 = (std::__shared_weak_count *)*((_QWORD *)&v95 + 1);
          if (!*((_QWORD *)&v95 + 1))
            goto LABEL_89;
          v71 = (unint64_t *)(*((_QWORD *)&v95 + 1) + 8);
          do
            v72 = __ldaxr(v71);
          while (__stlxr(v72 - 1, v71));
          if (!v72)
          {
            ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
            std::__shared_weak_count::__release_weak(v70);
            v73 = (std::__shared_weak_count *)*((_QWORD *)&v94 + 1);
            if (!*((_QWORD *)&v94 + 1))
              goto LABEL_93;
          }
          else
          {
LABEL_89:
            v73 = (std::__shared_weak_count *)*((_QWORD *)&v94 + 1);
            if (!*((_QWORD *)&v94 + 1))
              goto LABEL_93;
          }
          v74 = (unint64_t *)&v73->__shared_owners_;
          do
            v75 = __ldaxr(v74);
          while (__stlxr(v75 - 1, v74));
          if (!v75)
          {
            ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
            std::__shared_weak_count::__release_weak(v73);
            v76 = v93;
            if (v93 != v92)
              goto LABEL_94;
            goto LABEL_99;
          }
LABEL_93:
          v76 = v93;
          if (v93 != v92)
          {
LABEL_94:
            if (!v76)
              goto LABEL_101;
            v77 = 5;
            v39 = v76;
LABEL_100:
            (*(void (**)(_QWORD *))(*v39 + 8 * v77))(v39);
LABEL_101:
            v57 = v91[1];
            if (!v91[1])
              return;
            goto LABEL_102;
          }
LABEL_99:
          v77 = 4;
          goto LABEL_100;
        }
        v66 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v65 + 8 * v66))();
      goto LABEL_80;
    }
    v40 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v40 + 16))(v40);
LABEL_37:
    v93 = (_QWORD *)v40;
    goto LABEL_67;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47ED0;
  v6[1].__vftable = *a3;
  v87 = v6;
  v85 = &v6[1].__vftable;
  v86 = &v6->__vftable;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = (std::__shared_weak_count *)operator new(0x58uLL);
  v9->__shared_owners_ = 0;
  v10 = (unint64_t *)&v9->__shared_owners_;
  v9->__shared_weak_owners_ = 0;
  v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47D80;
  v11 = v9 + 1;
  sub_2235557C0(&v9[1].__vftable, a2);
  v89 = v9 + 1;
  v90 = v9;
  v12 = (unint64_t *)&v9->__shared_weak_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  v14 = (uint64_t *)a1[18];
  v15 = (_QWORD *)operator new();
  *v15 = v14 + 7;
  std::mutex::lock((std::mutex *)(v14 + 7));
  *(_QWORD *)&v98 = v15;
  *((_QWORD *)&v98 + 1) = v14;
  if (!*((_BYTE *)v14 + 48))
    sub_22324A974();
  v16 = v14[4];
  v17 = *v14;
  v18 = (std::__shared_weak_count **)(*v14 + 16 * v16);
  do
    v19 = __ldxr(v10);
  while (__stxr(v19 + 1, v10));
  *v18 = v11;
  v20 = v17 + 16 * v16;
  v21 = *(std::__shared_weak_count **)(v20 + 8);
  *(_QWORD *)(v20 + 8) = v9;
  if (v21)
  {
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v24 = (v14[1] - *v14) >> 4;
  v25 = v14[5];
  v26 = v14[4] + 1;
  if (v26 >= v24)
    v27 = (v14[1] - *v14) >> 4;
  else
    v27 = 0;
  v14[4] = v26 - v27;
  if (v25 != v24)
  {
    v14[5] = v25 + 1;
    v29 = (std::mutex **)v98;
    if (!(_QWORD)v98)
      goto LABEL_40;
    goto LABEL_39;
  }
  v28 = v14[3] + 1;
  if (v28 < v24)
    v24 = 0;
  v14[3] = v28 - v24;
  v29 = (std::mutex **)v98;
  if ((_QWORD)v98)
  {
LABEL_39:
    std::mutex::unlock(*v29);
    MEMORY[0x227684CE8](v29, 0x20C4093837F09);
  }
LABEL_40:
  v41 = (uint64_t **)a1[9];
  v98 = 0uLL;
  v42 = (std::__shared_weak_count *)a1[5];
  if (v42)
  {
    v43 = std::__shared_weak_count::lock(v42);
    if (v43)
    {
      v44 = v43;
      v45 = a1[4];
      v46 = (unint64_t *)&v43->__shared_weak_owners_;
      do
        v47 = __ldxr(v46);
      while (__stxr(v47 + 1, v46));
      *(_QWORD *)&v98 = v45;
      *((_QWORD *)&v98 + 1) = v43;
      v48 = (unint64_t *)&v43->__shared_owners_;
      do
        v49 = __ldaxr(v48);
      while (__stlxr(v49 - 1, v48));
      if (!v49)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v44);
      }
    }
    else
    {
      v98 = 0uLL;
    }
  }
  v50 = (char *)operator new(0x38uLL);
  *(_QWORD *)v50 = &off_24EC47F20;
  *(_OWORD *)(v50 + 8) = v98;
  v98 = 0uLL;
  *((_QWORD *)v50 + 3) = v11;
  *((_QWORD *)v50 + 4) = v9;
  v99 = 0;
  v100 = 0;
  *((_QWORD *)v50 + 5) = v85;
  *((_QWORD *)v50 + 6) = v86;
  v101[0] = 0;
  v101[1] = 0;
  v103 = (std::string *)v50;
  sub_2245022E4(*v41, (uint64_t)&v102);
  v51 = v103;
  if (v103 == &v102)
  {
    v52 = 4;
    v51 = &v102;
    goto LABEL_53;
  }
  if (v103)
  {
    v52 = 5;
LABEL_53:
    (*(void (**)(void))(v51->__r_.__value_.__r.__words[0] + 8 * v52))();
  }
  if (v90)
  {
    v53 = &v90->__shared_owners_;
    do
      v54 = __ldaxr((unint64_t *)v53);
    while (__stlxr(v54 - 1, (unint64_t *)v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
      std::__shared_weak_count::__release_weak(v90);
    }
  }
  if (v87)
  {
    v55 = (unint64_t *)&v87->__shared_owners_;
    do
      v56 = __ldaxr(v55);
    while (__stlxr(v56 - 1, v55));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
      v57 = v87;
LABEL_102:
      std::__shared_weak_count::__release_weak(v57);
    }
  }
}

void sub_223554634(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_223554644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22355464C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,std::exception_ptr a30)
{
  std::__assoc_sub_state **v30;
  uint64_t v31;
  std::__assoc_sub_state *v32;
  std::exception_ptr v33;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v32 = *v30;
    if (*v30)
    {
      std::exception_ptr::exception_ptr(&a30, &a15);
      v33.__ptr_ = &a30;
      std::__assoc_sub_state::set_exception(v32, v33);
      std::exception_ptr::~exception_ptr(&a30);
      std::exception_ptr::~exception_ptr(&a15);
      std::runtime_error::~runtime_error(&a14);
      if (*(char *)(v31 - 97) < 0)
        operator delete(*(void **)(v31 - 120));
      JUMPOUT(0x223554518);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_2235546C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,std::exception_ptr a30)
{
  uint64_t v30;

  std::exception_ptr::~exception_ptr(&a15);
  std::runtime_error::~runtime_error(&a14);
  if (*(char *)(v30 - 97) < 0)
  {
    operator delete(*(void **)(v30 - 120));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_223554710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,char *a34)
{
  char *v34;
  char *v36;
  uint64_t v37;

  v36 = a34;
  if (a34 == v34)
  {
    v37 = 4;
    v36 = &a31;
  }
  else
  {
    if (!a34)
    {
      sub_223556B0C(&a19);
      _Unwind_Resume(a1);
    }
    v37 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v36 + 8 * v37))();
  sub_223556B0C(&a19);
  _Unwind_Resume(a1);
}

void sub_223554764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  _QWORD *v20;

  sub_2235558E8(v20);
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2235547F8);
}

void sub_223554774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,std::__shared_weak_count *a26)
{
  _QWORD *v26;
  unint64_t *p_shared_owners;
  unint64_t v29;
  uint64_t v30;

  if (a26)
  {
    p_shared_owners = (unint64_t *)&a26->__shared_owners_;
    do
      v29 = __ldaxr(p_shared_owners);
    while (__stlxr(v29 - 1, p_shared_owners));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))a26->__on_zero_shared)(a26);
      std::__shared_weak_count::__release_weak(a26);
    }
  }
  if (a24 == v26)
  {
    v30 = 4;
  }
  else
  {
    if (!a24)
      goto LABEL_11;
    v30 = 5;
    v26 = a24;
  }
  (*(void (**)(_QWORD *))(*v26 + 8 * v30))(v26);
LABEL_11:
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2235547F8);
}

void sub_223554800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v34;
  uint64_t v35;

  v34 = *(_QWORD **)(v32 - 96);
  if (v34 == v31)
  {
    v35 = 4;
    v34 = (_QWORD *)(v32 - 120);
  }
  else
  {
    if (!v34)
      goto LABEL_6;
    v35 = 5;
  }
  (*(void (**)(void))(*v34 + 8 * v35))();
LABEL_6:
  sub_22332429C(&a31);
  sub_223167354((uint64_t)&a17);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235548A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  std::__shared_weak_count *v12;
  void *v14;

  std::__shared_weak_count::~__shared_weak_count(v12);
  operator delete(v14);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235548CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2235548E8(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_22355495C(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC48020;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B498;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_223554A8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_223554B00(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC480A0;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_223554C10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_223554C74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC48120;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_223554E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_223554F54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC481A0;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22355516C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223555234(uint64_t a1)
{
  return sub_2235553A4(a1 - 16);
}

void sub_22355523C(uint64_t a1)
{
  sub_2235553A4(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223555264(uint64_t a1, uint64_t a2)
{
  return sub_22355495C((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22355526C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_223554C74((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_223555274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_223554F54((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_22355527C(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_223555284(uint64_t a1)
{
  return sub_2235553A4(a1 - 24);
}

void sub_22355528C(uint64_t a1)
{
  sub_2235553A4(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235552B4(uint64_t a1)
{
  return sub_223554B00((_QWORD *)(a1 - 24));
}

uint64_t sub_2235552BC(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235552C4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22355532C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223555394(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235553A4(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC47B80;
  *(_QWORD *)(a1 + 16) = &unk_24EC47BF8;
  *(_QWORD *)(a1 + 24) = &unk_24EC47C38;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

_QWORD *sub_2235555A4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = (std::__shared_weak_count *)a1[9];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 2;
    v6 = (std::__shared_weak_count *)a1[7];
    if (!v6)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = a1 + 2;
    v6 = (std::__shared_weak_count *)a1[7];
    if (!v6)
      goto LABEL_11;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_11:
  v9 = (_QWORD *)a1[5];
  if (v9 == v5)
  {
    v10 = 4;
    v9 = v5;
  }
  else
  {
    if (!v9)
      goto LABEL_16;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_16:
  v11 = (std::__shared_weak_count *)a1[1];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_223555688(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47D80;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223555698(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47D80;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235556C8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t result;

  v2 = (std::__shared_weak_count *)a1[10];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_11:
  result = a1[6];
  if ((_QWORD *)result == v5)
    return (*(uint64_t (**)(_QWORD *))(*v5 + 32))(v5);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

_QWORD *sub_2235557C0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v4 = (_QWORD *)a2[3];
  if (v4)
  {
    if (v4 == a2)
    {
      a1[3] = a1;
      (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], a1);
      v5 = a2[5];
      a1[4] = a2[4];
      a1[5] = v5;
      if (!v5)
        goto LABEL_10;
    }
    else
    {
      a1[3] = (*(uint64_t (**)(_QWORD *))(*v4 + 16))(v4);
      v5 = a2[5];
      a1[4] = a2[4];
      a1[5] = v5;
      if (!v5)
        goto LABEL_10;
    }
  }
  else
  {
    a1[3] = 0;
    v5 = a2[5];
    a1[4] = a2[4];
    a1[5] = v5;
    if (!v5)
      goto LABEL_10;
  }
  v6 = (unint64_t *)(v5 + 8);
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
LABEL_10:
  sub_2232E56F4(a1 + 6, (uint64_t)(a2 + 6));
  return a1;
}

void sub_223555874(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = (std::__shared_weak_count *)v1[5];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v6 = (_QWORD *)v1[3];
  if (v6 == v1)
  {
    v7 = 4;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v7))(v1);
LABEL_11:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2235558E8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = (std::__shared_weak_count *)a1[7];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[5];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[5];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (_QWORD *)a1[3];
  if (v8 == a1)
  {
    v9 = 4;
    v8 = a1;
    goto LABEL_15;
  }
  if (v8)
  {
    v9 = 5;
LABEL_15:
    (*(void (**)(void))(*v8 + 8 * v9))();
  }
  return a1;
}

_QWORD *sub_2235559B0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC47DD0;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235559F4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC47DD0;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223555A48(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC47DD0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_223555AB8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC47DD0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_223555B08(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223555B44(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_223555B7C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_223555EA0((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_2235562EC(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223555D44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_2235562EC(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223555E28(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE25"
                     "EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_"
                                "vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223555E94()
{
  return &unk_24EC47E30;
}

_QWORD *sub_223555EA0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  _QWORD *result;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD *v18;
  std::__shared_weak_count *v19;
  std::__shared_weak_count *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v17, v6, a2);
  v7 = a1 + 1;
  for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
    (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v17);
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_223556164(*(_QWORD *)a3, v17);
  }
  v9 = v20;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v19;
  if (v19)
  {
    v13 = (unint64_t *)&v19->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
      result = v18;
      if (v18 != v17)
        goto LABEL_19;
LABEL_22:
      v16 = 4;
      result = v17;
      return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
    }
  }
  result = v18;
  if (v18 == v17)
    goto LABEL_22;
LABEL_19:
  if (!result)
    return result;
  v16 = 5;
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
}

void sub_223556060(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11, uint64_t a12, int a13, __int16 a14, char a15, unsigned __int8 a16, uint64_t a17)
{
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  sub_2235558E8(&a17);
  if (a2 == 1)
  {
    v19 = (uint64_t *)__cxa_begin_catch(a1);
    v20 = *v19;
    a10 = *(_QWORD *)(*(_QWORD *)(*v19 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a9 = (*(uint64_t (**)(void))(v20 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", (const char *)&a10, "\n", "message: ", (const char *)&a9, "\n");
    if ((a16 & 0x80u) == 0)
      v21 = &a11;
    else
      v21 = a11;
    if ((a16 & 0x80u) == 0)
      v22 = a16;
    else
      v22 = a12;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v21, v22, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_223556128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_22355614C(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x223556154);
  sub_22316DC48(a1);
}

void sub_223556164(uint64_t a1, _QWORD *a2)
{
  std::mutex *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::exception_ptr v10;

  v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(_BYTE *)(a1 + 136) & 1) != 0
    || (v10.__ptr_ = 0, v5 = *(_QWORD *)(a1 + 16), std::exception_ptr::~exception_ptr(&v10), v5))
  {
    sub_2233236D4(2u);
  }
  v6 = a2[3];
  if (!v6)
    goto LABEL_6;
  if ((_QWORD *)v6 != a2)
  {
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
LABEL_6:
    *(_QWORD *)(a1 + 168) = v6;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 168) = a1 + 144;
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)a2[3] + 24))(a2[3], a1 + 144);
LABEL_8:
  v7 = a2[5];
  *(_QWORD *)(a1 + 176) = a2[4];
  *(_QWORD *)(a1 + 184) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  sub_2232E56F4((_QWORD *)(a1 + 192), (uint64_t)(a2 + 6));
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock(v4);
}

void sub_22355625C(_Unwind_Exception *a1)
{
  std::mutex *v1;
  uint64_t v2;
  _QWORD *v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(std::__shared_weak_count **)(v2 + 184);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = *(_QWORD **)(v2 + 168);
  if (v8 == v3)
  {
    v9 = 4;
  }
  else
  {
    if (!v8)
    {
      std::mutex::unlock(v1);
      _Unwind_Resume(a1);
    }
    v9 = 5;
    v3 = *(_QWORD **)(v2 + 168);
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v9))(v3);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235562EC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  const std::error_category *v7;
  std::logic_error *exception;
  std::logic_error *v9;
  std::logic_error v10;
  std::logic_error v11;
  std::exception_ptr v12;

  v2 = *a1;
  if (!v2)
    return a1;
  if ((*(_BYTE *)(v2 + 136) & 1) == 0)
  {
    v12.__ptr_ = 0;
    v3 = *(_QWORD *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v12);
    v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v7 = std::future_category();
      MEMORY[0x2276844A8](&v10, 4, v7);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      v9 = std::logic_error::logic_error(exception, &v10);
      v9->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB810] + 16);
      v9[1] = v11;
      __cxa_throw(v9, MEMORY[0x24BEDB6E0], (void (*)(void *))MEMORY[0x24BEDAD80]);
    }
  }
  v4 = (unint64_t *)(v2 + 8);
  do
    v5 = __ldaxr(v4);
  while (__stlxr(v5 - 1, v4));
  if (v5)
    return a1;
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  return a1;
}

void sub_2235563D8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__assoc_sub_state *a10, char a11)
{
  uint64_t v11;
  std::exception_ptr v12;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v12.__ptr_ = (void *)(v11 - 32);
  std::__assoc_sub_state::set_exception(a10, v12);
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(v11 - 32));
  MEMORY[0x2276844B4](&a11);
  JUMPOUT(0x223556334);
}

_QWORD *sub_223556414(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC47E50;
  v2 = (std::__shared_weak_count *)a1[10];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_11:
  v9 = (_QWORD *)a1[6];
  if (v9 == v5)
  {
    v10 = 4;
    v9 = v5;
  }
  else
  {
    if (!v9)
      goto LABEL_16;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_16:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_223556504(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC47E50;
  v2 = (std::__shared_weak_count *)a1[10];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_11:
  v9 = (_QWORD *)a1[6];
  if (v9 == v5)
  {
    v10 = 4;
    v9 = v5;
  }
  else
  {
    if (!v9)
      goto LABEL_16;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_16:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223556604(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(a1 + 8);
  v2 = operator new(0x58uLL);
  *v2 = &off_24EC47E50;
  sub_2235569B0(v2 + 1, v1);
  return v2;
}

void sub_223556644(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_223556658(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24EC47E50;
  return sub_2235569B0(a2 + 1, (_QWORD *)(a1 + 8));
}

void sub_223556674(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = (std::__shared_weak_count *)a1[10];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_11:
  v9 = (_QWORD *)a1[6];
  if (v9 == v5)
  {
    v10 = 4;
    v9 = v5;
  }
  else
  {
    if (!v9)
      goto LABEL_16;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_16:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
}

void sub_223556760(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 10);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = __p + 24;
    v6 = (std::__shared_weak_count *)*((_QWORD *)__p + 8);
    if (!v6)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = __p + 24;
    v6 = (std::__shared_weak_count *)*((_QWORD *)__p + 8);
    if (!v6)
      goto LABEL_11;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_11:
  v9 = (char *)*((_QWORD *)__p + 6);
  if (v9 == v5)
  {
    v10 = 4;
    v9 = v5;
  }
  else
  {
    if (!v9)
      goto LABEL_16;
    v10 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v9 + 8 * v10))();
LABEL_16:
  v11 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  operator delete(__p);
}

void sub_223556844(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_223555EA0((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_2235562EC(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235568EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_2235562EC(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223556938(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_"
                                "vS6_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235569A4()
{
  return &unk_24EC47EB0;
}

_QWORD *sub_2235569B0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1 + 2;
  v8 = a2[5];
  if (!v8)
    goto LABEL_7;
  if ((_QWORD *)v8 != a2 + 2)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
LABEL_7:
    a1[5] = v8;
    goto LABEL_9;
  }
  a1[5] = v7;
  (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[5] + 24))(a2[5], a1 + 2);
LABEL_9:
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  sub_2232E56F4(a1 + 8, (uint64_t)(a2 + 8));
  return a1;
}

void sub_223556A6C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (!v3)
    _Unwind_Resume(exception_object);
  std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_223556B0C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  v2 = (std::__shared_weak_count *)a1[11];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[9];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[9];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = a1 + 2;
  v9 = (std::__shared_weak_count *)a1[7];
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      v12 = (_QWORD *)a1[5];
      if (v12 != v8)
        goto LABEL_16;
LABEL_19:
      v13 = 4;
      v12 = a1 + 2;
      goto LABEL_20;
    }
  }
  v12 = (_QWORD *)a1[5];
  if (v12 == v8)
    goto LABEL_19;
LABEL_16:
  if (!v12)
    goto LABEL_21;
  v13 = 5;
LABEL_20:
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[1];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  return a1;
}

void sub_223556C30(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47ED0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223556C40(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47ED0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t *sub_223556C70(uint64_t a1)
{
  return sub_2235562EC((uint64_t *)(a1 + 24));
}

_QWORD *sub_223556C7C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC47F20;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_223556D04(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC47F20;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_223556D9C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC47F20;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_223556E2C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC47F20;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_223556E9C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_223556F1C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_223556F98(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_223555EA0(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_2235562EC((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223557274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235572A0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x2235570ACLL);
    JUMPOUT(0x22355707CLL);
  }
  sub_2233236D4(3u);
}

void sub_2235572FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223557328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_2235562EC(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_223557414(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE25"
                     "EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_"
                                "vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIS6_EEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223557480()
{
  return &unk_24EC47F80;
}

_QWORD *sub_22355748C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  *a1 = &off_24EC47FA0;
  v2 = (std::__shared_weak_count *)a1[12];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[10];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[10];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = a1 + 3;
  v9 = (std::__shared_weak_count *)a1[8];
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      v12 = (_QWORD *)a1[6];
      if (v12 != v8)
        goto LABEL_16;
LABEL_19:
      v13 = 4;
      v12 = a1 + 3;
      goto LABEL_20;
    }
  }
  v12 = (_QWORD *)a1[6];
  if (v12 == v8)
    goto LABEL_19;
LABEL_16:
  if (!v12)
    goto LABEL_21;
  v13 = 5;
LABEL_20:
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[2];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
  return a1;
}

void sub_2235575BC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  *a1 = &off_24EC47FA0;
  v2 = (std::__shared_weak_count *)a1[12];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[10];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[10];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = a1 + 3;
  v9 = (std::__shared_weak_count *)a1[8];
  if (!v9)
    goto LABEL_15;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    v12 = (_QWORD *)a1[6];
    if (v12 != v8)
      goto LABEL_16;
  }
  else
  {
LABEL_15:
    v12 = (_QWORD *)a1[6];
    if (v12 != v8)
    {
LABEL_16:
      if (!v12)
        goto LABEL_21;
      v13 = 5;
LABEL_20:
      (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
      v14 = (std::__shared_weak_count *)a1[2];
      if (v14)
        std::__shared_weak_count::__release_weak(v14);
      JUMPOUT(0x227684CE8);
    }
  }
  v13 = 4;
  v12 = a1 + 3;
  goto LABEL_20;
}

_QWORD *sub_2235576FC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(a1 + 8);
  v2 = operator new(0x68uLL);
  *v2 = &off_24EC47FA0;
  sub_223557A08(v2 + 1, v1);
  return v2;
}

void sub_22355773C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_223557750(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24EC47FA0;
  return sub_223557A08(a2 + 1, (_QWORD *)(a1 + 8));
}

void sub_22355776C(uint64_t a1)
{
  sub_223557B84((_QWORD *)(a1 + 8));
}

void sub_223557774(_QWORD *a1)
{
  sub_223557B84(a1 + 1);
  operator delete(a1);
}

void sub_22355779C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[11];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_223555EA0((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_2235562EC((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_2235578AC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_223557924(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x223557958);
  JUMPOUT(0x223557988);
}

uint64_t sub_223557990(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE7P"
                     "rocessERKS6_NSt3__17promiseIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_"
                                "vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE7ProcessERKS6_NSt3__17promiseIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235579FC()
{
  return &unk_24EC48000;
}

_QWORD *sub_223557A08(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1 + 2;
  v8 = a2[5];
  if (!v8)
    goto LABEL_7;
  if ((_QWORD *)v8 != a2 + 2)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
LABEL_7:
    a1[5] = v8;
    goto LABEL_9;
  }
  a1[5] = v7;
  (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[5] + 24))(a2[5], a1 + 2);
LABEL_9:
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  sub_2232E56F4(a1 + 8, (uint64_t)(a2 + 8));
  v12 = a2[11];
  a1[10] = a2[10];
  a1[11] = v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  return a1;
}

void sub_223557AE4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (!v3)
    _Unwind_Resume(exception_object);
  std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223557B84(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  v2 = (std::__shared_weak_count *)a1[11];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[9];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[9];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = a1 + 2;
  v9 = (std::__shared_weak_count *)a1[7];
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      v12 = (_QWORD *)a1[5];
      if (v12 != v8)
        goto LABEL_16;
LABEL_19:
      v13 = 4;
      v12 = a1 + 2;
      goto LABEL_20;
    }
  }
  v12 = (_QWORD *)a1[5];
  if (v12 == v8)
    goto LABEL_19;
LABEL_16:
  if (!v12)
    goto LABEL_21;
  v13 = 5;
LABEL_20:
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_21:
  v14 = (std::__shared_weak_count *)a1[1];
  if (v14)
    std::__shared_weak_count::__release_weak(v14);
}

_QWORD *sub_223557CB0(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC48020;
  v2 = a1[4];
  a1[3] = &off_24EC2B498;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_223557D08(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC48020;
  v2 = a1[4];
  a1[3] = &off_24EC2B498;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223557D70(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC48020;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B498;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_223557DE8(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223557E08(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC48020;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B498;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_223557E70(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223557E88(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B498;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223557ED8(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B498;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_223557F24(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B498;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223557FD8(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223558014(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE9Su"
                     "bscribeENS1_12ChannelInputIS6_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_v"
                                "S6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE9SubscribeENS1_12ChannelInputIS6_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223558080()
{
  return &unk_24EC48080;
}

_QWORD *sub_22355808C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC480A0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235580C4(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC480A0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22355810C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC480A0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_22355815C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC480A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_22355818C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22355819C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235581C8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22355825C(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223558298(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE15A"
                     "ddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_v"
                                "S6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223558304()
{
  return &unk_24EC48100;
}

_QWORD *sub_223558310(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC48120;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223558348(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC48120;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223558390(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC48120;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235583E8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC48120;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_223558420(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223558430(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22355845C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_2235585D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223558648(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE16"
                     "OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_"
                                "vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235586B4()
{
  return &unk_24EC48180;
}

_QWORD *sub_2235586C0(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC481A0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235586F8(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC481A0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223558740(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC481A0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_223558798(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC481A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235587D0(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235587E0(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22355880C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235588C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223558910(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE15"
                     "ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_"
                                "vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng26MeshingNodeOccupancyResultES6_vS6_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22355897C()
{
  return &unk_24EC48200;
}

void sub_22355898C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235589B0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2235589C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng26MeshingNodeOccupancyRe"
                     "sultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng26MeshingNode"
                                "OccupancyResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng26MeshingNodeOccupancyResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng26MeshingNodeOccupancyResultES8_vS8_Lb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_223558A38(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223558A64(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223558AA0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC48270;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_223558B08(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223558B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223558BAC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223558C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223558C50(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_223558D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223558D28(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_223558DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223558E00(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223558EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223558EB8(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC45660;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45690;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC2B498;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_22355909C(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC455F8;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45628;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC2B460;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_223559280(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC45590;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC455C0;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC2B428;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_223559464(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC45528;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45558;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC2B3F0;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_223559648(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC454C0;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC454F0;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC2B3B8;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_22355982C(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC45458;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45488;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC2B380;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_223559A10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;

  *(_QWORD *)a1 = &off_24EC45428;
  v2 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = 0;
  if (v2)
  {
    sub_223558EB8(v2 + 840);
    sub_22355909C(v2 + 672);
    sub_223559280(v2 + 504);
    sub_223559464(v2 + 336);
    sub_223559648(v2 + 168);
    v3 = sub_22355982C(v2);
    MEMORY[0x227684CE8](v3, 0x10B2C40719CCD27);
  }
  v4 = *(std::__shared_weak_count **)(a1 + 64);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      v7 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 72) = 0;
      if (!v7)
        goto LABEL_9;
      goto LABEL_8;
    }
  }
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = 0;
  if (v7)
  {
LABEL_8:
    sub_223558EB8(v7 + 840);
    sub_22355909C(v7 + 672);
    sub_223559280(v7 + 504);
    sub_223559464(v7 + 336);
    sub_223559648(v7 + 168);
    v8 = sub_22355982C(v7);
    MEMORY[0x227684CE8](v8, 0x10B2C40719CCD27);
  }
LABEL_9:
  v9 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v9)
    goto LABEL_13;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
  {
LABEL_13:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_14;
LABEL_19:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_20;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_19;
LABEL_14:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_20:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_223559BA0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC482D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223559BB0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC482D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223559BE0(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_223559BF0(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  void **v9;
  char *v10;
  void **v11;
  char *v12;
  void **v13;
  char *v14;
  char *v15;
  void **v16;
  char *v17;
  char *v18;
  void **v19;
  char *v20;
  char *v21;
  void **v22;
  void **v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)(a1 + 8) = 0u;
  v2 = (void **)(a1 + 8);
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  v3 = (void **)(a1 + 64);
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  v4 = (void **)(a1 + 120);
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  v5 = a1 + 176;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  v6 = a1 + 232;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_QWORD *)a1 = &off_24EC48328;
  *(_QWORD *)(a1 + 56) = &unk_24EC48378;
  *(_QWORD *)(a1 + 112) = &unk_24EC483A0;
  *(_QWORD *)(a1 + 168) = &unk_24EC483C8;
  *(_QWORD *)(a1 + 224) = &unk_24EC483F0;
  *(_QWORD *)(a1 + 280) = &unk_24EC48418;
  *(_QWORD *)&v25 = *(_QWORD *)"vider Node";
  WORD4(v25) = 25956;
  v7 = (char *)operator new(0x30uLL);
  strcpy(v7, "Keeps latest updates from the meshing node.");
  strcpy((char *)(a1 + 336), "Mesh Provider Node");
  *(_BYTE *)(a1 + 359) = 18;
  sub_22319C3F4((_QWORD *)(a1 + 360), v7, 0x2BuLL);
  operator delete(v7);
  v8 = (char *)operator new(0x20uLL);
  strcpy(v8, "Updates the latest mesh.");
  if (*(char *)(a1 + 31) < 0)
    operator delete(*v2);
  *(_QWORD *)(a1 + 8) = 0x647055206873654DLL;
  *(_QWORD *)(a1 + 16) = 6648929;
  *(_BYTE *)(a1 + 31) = 11;
  sub_223197FA4(&v25, v8, 0x18uLL);
  v9 = (void **)(a1 + 32);
  if (*(char *)(a1 + 55) < 0)
    operator delete(*v9);
  *(_OWORD *)v9 = v25;
  *(_QWORD *)(a1 + 48) = v26;
  operator delete(v8);
  v10 = (char *)operator new(0x20uLL);
  strcpy(v10, "Updates the latest global mesh.");
  if (*(char *)(a1 + 87) < 0)
    operator delete(*v3);
  strcpy((char *)(a1 + 64), "Global Mesh Update");
  *(_BYTE *)(a1 + 87) = 18;
  sub_223197FA4(&v25, v10, 0x1FuLL);
  v11 = (void **)(a1 + 88);
  if (*(char *)(a1 + 111) < 0)
    operator delete(*v11);
  *(_OWORD *)v11 = v25;
  *(_QWORD *)(a1 + 104) = v26;
  operator delete(v10);
  v12 = (char *)operator new(0x28uLL);
  strcpy(v12, "Updates the latest occupancy mesh.");
  if (*(char *)(a1 + 143) < 0)
    operator delete(*v4);
  strcpy((char *)(a1 + 120), "Occupancy Mesh Update");
  *(_BYTE *)(a1 + 143) = 21;
  sub_223197FA4(&v25, v12, 0x22uLL);
  v13 = (void **)(a1 + 144);
  if (*(char *)(a1 + 167) < 0)
    operator delete(*v13);
  *(_OWORD *)v13 = v25;
  *(_QWORD *)(a1 + 160) = v26;
  operator delete(v12);
  v14 = (char *)operator new(0x20uLL);
  strcpy(v14, "Global Occupancy Mesh Update");
  v15 = (char *)operator new(0x30uLL);
  strcpy(v15, "Updates the latest global occupancy mesh.");
  sub_223197FA4(&v25, v14, 0x1CuLL);
  if (*(char *)(a1 + 199) < 0)
    operator delete(*(void **)v5);
  *(_OWORD *)v5 = v25;
  *(_QWORD *)(v5 + 16) = v26;
  sub_223197FA4(&v25, v15, 0x29uLL);
  v16 = (void **)(a1 + 200);
  if (*(char *)(a1 + 223) < 0)
    operator delete(*v16);
  *(_OWORD *)v16 = v25;
  *(_QWORD *)(a1 + 216) = v26;
  operator delete(v15);
  operator delete(v14);
  v17 = (char *)operator new(0x20uLL);
  strcpy(v17, "Occupancy Block Mesh Update");
  v18 = (char *)operator new(0x30uLL);
  strcpy(v18, "Updates the latest occupancy block mesh.");
  sub_223197FA4(&v25, v17, 0x1BuLL);
  if (*(char *)(a1 + 255) < 0)
    operator delete(*(void **)v6);
  *(_OWORD *)v6 = v25;
  *(_QWORD *)(v6 + 16) = v26;
  sub_223197FA4(&v25, v18, 0x28uLL);
  v19 = (void **)(a1 + 256);
  if (*(char *)(a1 + 279) < 0)
    operator delete(*v19);
  *(_OWORD *)v19 = v25;
  *(_QWORD *)(a1 + 272) = v26;
  operator delete(v18);
  operator delete(v17);
  v20 = (char *)operator new(0x19uLL);
  strcpy(v20, "Occupancy Result Update");
  v21 = (char *)operator new(0x30uLL);
  strcpy(v21, "Updates the latest occupancy query result.");
  sub_223197FA4(&v25, v20, 0x17uLL);
  v22 = (void **)(a1 + 288);
  if (*(char *)(a1 + 311) < 0)
    operator delete(*v22);
  *(_OWORD *)v22 = v25;
  *(_QWORD *)(a1 + 304) = v26;
  sub_223197FA4(&v25, v21, 0x2AuLL);
  v23 = (void **)(a1 + 312);
  if (*(char *)(a1 + 335) < 0)
    operator delete(*v23);
  *(_OWORD *)v23 = v25;
  *(_QWORD *)(a1 + 328) = v26;
  operator delete(v21);
  operator delete(v20);
  return a1;
}

void sub_22355A1B4(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;

  operator delete(v2);
  sub_22355A2A4(v1);
  _Unwind_Resume(a1);
}

void sub_22355A260(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22355A2A4(v1);
  _Unwind_Resume(a1);
}

void sub_22355A274(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v2;
  operator delete(v4);
  operator delete(v3);
  sub_22355A2A4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_22355A2A4(uint64_t a1)
{
  *(_QWORD *)a1 = off_24EC48530;
  *(_QWORD *)(a1 + 56) = &unk_24EC48558;
  *(_QWORD *)(a1 + 112) = &unk_24EC48580;
  *(_QWORD *)(a1 + 168) = &unk_24EC485A8;
  *(_QWORD *)(a1 + 224) = &unk_24EC485D0;
  *(_QWORD *)(a1 + 280) = &unk_24EC485F8;
  if (*(char *)(a1 + 383) < 0)
  {
    operator delete(*(void **)(a1 + 360));
    if ((*(char *)(a1 + 359) & 0x80000000) == 0)
    {
LABEL_3:
      *(_QWORD *)(a1 + 280) = off_24EC486E8;
      if ((*(char *)(a1 + 335) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((*(char *)(a1 + 359) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 336));
  *(_QWORD *)(a1 + 280) = off_24EC486E8;
  if ((*(char *)(a1 + 335) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(a1 + 311) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(a1 + 312));
  if ((*(char *)(a1 + 311) & 0x80000000) == 0)
  {
LABEL_5:
    *(_QWORD *)(a1 + 224) = off_24EC486C0;
    if ((*(char *)(a1 + 279) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*(void **)(a1 + 288));
  *(_QWORD *)(a1 + 224) = off_24EC486C0;
  if ((*(char *)(a1 + 279) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(a1 + 255) & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  operator delete(*(void **)(a1 + 256));
  if ((*(char *)(a1 + 255) & 0x80000000) == 0)
  {
LABEL_7:
    *(_QWORD *)(a1 + 168) = off_24EC48698;
    if ((*(char *)(a1 + 223) & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  operator delete(*(void **)(a1 + 232));
  *(_QWORD *)(a1 + 168) = off_24EC48698;
  if ((*(char *)(a1 + 223) & 0x80000000) == 0)
  {
LABEL_8:
    if ((*(char *)(a1 + 199) & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  operator delete(*(void **)(a1 + 200));
  if ((*(char *)(a1 + 199) & 0x80000000) == 0)
  {
LABEL_9:
    *(_QWORD *)(a1 + 112) = off_24EC48670;
    if ((*(char *)(a1 + 167) & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  operator delete(*(void **)(a1 + 176));
  *(_QWORD *)(a1 + 112) = off_24EC48670;
  if ((*(char *)(a1 + 167) & 0x80000000) == 0)
  {
LABEL_10:
    if ((*(char *)(a1 + 143) & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  operator delete(*(void **)(a1 + 144));
  if ((*(char *)(a1 + 143) & 0x80000000) == 0)
  {
LABEL_11:
    *(_QWORD *)(a1 + 56) = off_24EC48648;
    if ((*(char *)(a1 + 111) & 0x80000000) == 0)
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  operator delete(*(void **)(a1 + 120));
  *(_QWORD *)(a1 + 56) = off_24EC48648;
  if ((*(char *)(a1 + 111) & 0x80000000) == 0)
  {
LABEL_12:
    if ((*(char *)(a1 + 87) & 0x80000000) == 0)
      goto LABEL_13;
    goto LABEL_27;
  }
LABEL_26:
  operator delete(*(void **)(a1 + 88));
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
LABEL_13:
    *(_QWORD *)a1 = off_24EC48620;
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_14;
LABEL_28:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_29;
  }
LABEL_27:
  operator delete(*(void **)(a1 + 64));
  *(_QWORD *)a1 = off_24EC48620;
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_28;
LABEL_14:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_29:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_22355A4E0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_223299E34(a2, a1);
}

_QWORD *sub_22355A4E8@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v4;

  v4 = (uint64_t *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      *(_QWORD *)(a2 + 24) = a2;
      (*(void (**)(uint64_t *, uint64_t))(*a1 + 24))(a1, a2);
    }
    else
    {
      *(_QWORD *)(a2 + 24) = (*(uint64_t (**)(uint64_t *))(*v4 + 16))(v4);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
  }
  return sub_22326F694((_QWORD *)(a2 + 32), a1 + 4);
}

void sub_22355A558(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)v1[3];
  if (v3 == v1)
  {
    v4 = 4;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v4))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22355A594@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v4;

  v4 = (uint64_t *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      *(_QWORD *)(a2 + 24) = a2;
      (*(void (**)(uint64_t *, uint64_t))(*a1 + 24))(a1, a2);
    }
    else
    {
      *(_QWORD *)(a2 + 24) = (*(uint64_t (**)(uint64_t *))(*v4 + 16))(v4);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
  }
  return sub_22326F694((_QWORD *)(a2 + 32), a1 + 4);
}

void sub_22355A604(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)v1[3];
  if (v3 == v1)
  {
    v4 = 4;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v4))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22355A640@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v4;

  v4 = (uint64_t *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      *(_QWORD *)(a2 + 24) = a2;
      (*(void (**)(uint64_t *, uint64_t))(*a1 + 24))(a1, a2);
    }
    else
    {
      *(_QWORD *)(a2 + 24) = (*(uint64_t (**)(uint64_t *))(*v4 + 16))(v4);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
  }
  return sub_22326F694((_QWORD *)(a2 + 32), a1 + 4);
}

void sub_22355A6B0(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)v1[3];
  if (v3 == v1)
  {
    v4 = 4;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v4))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22355A6EC@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v4;

  v4 = (uint64_t *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      *(_QWORD *)(a2 + 24) = a2;
      (*(void (**)(uint64_t *, uint64_t))(*a1 + 24))(a1, a2);
    }
    else
    {
      *(_QWORD *)(a2 + 24) = (*(uint64_t (**)(uint64_t *))(*v4 + 16))(v4);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
  }
  return sub_22326F694((_QWORD *)(a2 + 32), a1 + 4);
}

void sub_22355A75C(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)v1[3];
  if (v3 == v1)
  {
    v4 = 4;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v4))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22355A798@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v4;

  v4 = (uint64_t *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      *(_QWORD *)(a2 + 24) = a2;
      (*(void (**)(uint64_t *, uint64_t))(*a1 + 24))(a1, a2);
    }
    else
    {
      *(_QWORD *)(a2 + 24) = (*(uint64_t (**)(uint64_t *))(*v4 + 16))(v4);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
  }
  return sub_22326F694((_QWORD *)(a2 + 32), a1 + 4);
}

void sub_22355A808(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)v1[3];
  if (v3 == v1)
  {
    v4 = 4;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v4))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22355A844@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v4;

  v4 = (uint64_t *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      *(_QWORD *)(a2 + 24) = a2;
      (*(void (**)(uint64_t *, uint64_t))(*a1 + 24))(a1, a2);
    }
    else
    {
      *(_QWORD *)(a2 + 24) = (*(uint64_t (**)(uint64_t *))(*v4 + 16))(v4);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
  }
  return sub_22326F694((_QWORD *)(a2 + 32), a1 + 4);
}

void sub_22355A8B4(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)v1[3];
  if (v3 == v1)
  {
    v4 = 4;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v4))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22355A8F0@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v4;

  v4 = (uint64_t *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      *(_QWORD *)(a2 + 24) = a2;
      (*(void (**)(uint64_t *, uint64_t))(*a1 + 24))(a1, a2);
    }
    else
    {
      *(_QWORD *)(a2 + 24) = (*(uint64_t (**)(uint64_t *))(*v4 + 16))(v4);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
  }
  return sub_22326F694((_QWORD *)(a2 + 32), a1 + 4);
}

void sub_22355A960(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)v1[3];
  if (v3 == v1)
  {
    v4 = 4;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v4))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22355A99C@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v4;

  v4 = (uint64_t *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      *(_QWORD *)(a2 + 24) = a2;
      (*(void (**)(uint64_t *, uint64_t))(*a1 + 24))(a1, a2);
    }
    else
    {
      *(_QWORD *)(a2 + 24) = (*(uint64_t (**)(uint64_t *))(*v4 + 16))(v4);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
  }
  return sub_22326F694((_QWORD *)(a2 + 32), a1 + 4);
}

void sub_22355AA0C(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)v1[3];
  if (v3 == v1)
  {
    v4 = 4;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v4))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22355AA48@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v4 = (_QWORD *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      a2[3] = a2;
      (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, a2);
      v5 = a1[5];
      a2[4] = a1[4];
      a2[5] = v5;
      if (!v5)
        return sub_2232E56F4(a2 + 6, (uint64_t)(a1 + 6));
    }
    else
    {
      a2[3] = (*(uint64_t (**)(_QWORD *))(*v4 + 16))(v4);
      v5 = a1[5];
      a2[4] = a1[4];
      a2[5] = v5;
      if (!v5)
        return sub_2232E56F4(a2 + 6, (uint64_t)(a1 + 6));
    }
  }
  else
  {
    a2[3] = 0;
    v5 = a1[5];
    a2[4] = a1[4];
    a2[5] = v5;
    if (!v5)
      return sub_2232E56F4(a2 + 6, (uint64_t)(a1 + 6));
  }
  v6 = (unint64_t *)(v5 + 8);
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return sub_2232E56F4(a2 + 6, (uint64_t)(a1 + 6));
}

void sub_22355AAF8(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = (std::__shared_weak_count *)v1[5];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v6 = (_QWORD *)v1[3];
  if (v6 == v1)
  {
    v7 = 4;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v7))(v1);
LABEL_11:
  _Unwind_Resume(exception_object);
}

void sub_22355AB74(uint64_t a1)
{
  sub_22355A2A4(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22355AB98(uint64_t a1)
{
  return sub_22355A2A4(a1 - 56);
}

void sub_22355ABA0(uint64_t a1)
{
  sub_22355A2A4(a1 - 56);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22355ABC8(uint64_t a1)
{
  return sub_22355A2A4(a1 - 112);
}

void sub_22355ABD0(uint64_t a1)
{
  sub_22355A2A4(a1 - 112);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22355ABF8(uint64_t a1)
{
  return sub_22355A2A4(a1 - 168);
}

void sub_22355AC00(uint64_t a1)
{
  sub_22355A2A4(a1 - 168);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22355AC28(uint64_t a1)
{
  return sub_22355A2A4(a1 - 224);
}

void sub_22355AC30(uint64_t a1)
{
  sub_22355A2A4(a1 - 224);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22355AC58(uint64_t a1)
{
  return sub_22355A2A4(a1 - 280);
}

void sub_22355AC60(uint64_t a1)
{
  sub_22355A2A4(a1 - 280);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22355ACE8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14[2];

  v4 = (std::__shared_weak_count *)a2[1];
  v14[0] = *a2;
  v14[1] = (uint64_t)v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v12 = 0;
  v13 = 0;
  sub_22355AE14(a1, v14, a3, &v13, &v12);
  v7 = v12;
  v12 = 0;
  if (v7)
    (*(void (**)(_QWORD *))(*v7 + 8))(v7);
  v8 = v13;
  v13 = 0;
  if (v8)
    (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  if (!v4)
    return a1;
  v9 = (unint64_t *)&v4->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    return a1;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_22355ADC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a3);
  if (a2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 8))(a2);
    v4 = a3;
    if (!a3)
    {
LABEL_3:
      sub_223167354((uint64_t)va);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v4 = a3;
    if (!a3)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_22355AE14(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, _QWORD **a5)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  std::__shared_weak_count *v35;

  *(_QWORD *)a1 = &off_24EC48710;
  v9 = a1 + 8;
  sub_2232E4FC0(a1 + 8, a3);
  v10 = (uint64_t *)(a1 + 1208);
  *(_OWORD *)(a1 + 1208) = 0u;
  v11 = operator new();
  *(_QWORD *)(v11 + 32) = 0;
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_DWORD *)(v11 + 32) = 1065353216;
  *(_QWORD *)(a1 + 1224) = v11;
  *(_OWORD *)(a1 + 1232) = 0u;
  *(_QWORD *)(a1 + 1246) = 0;
  v12 = *(_DWORD *)(a1 + 396);
  *(_QWORD *)(a1 + 1256) = 0;
  *(_DWORD *)(a1 + 1264) = v12;
  *(_BYTE *)(a1 + 1272) = 0;
  *(_QWORD *)(a1 + 1280) = 0;
  *(_DWORD *)(a1 + 1288) = 0;
  *(_QWORD *)(a1 + 1296) = 0;
  *(_QWORD *)(a1 + 1312) = 0;
  *(_QWORD *)(a1 + 1304) = 0;
  if (*(_BYTE *)(a1 + 336))
  {
    v13 = (uint64_t *)(a1 + 1296);
    v14 = (uint64_t *)(a1 + 1304);
    v15 = (uint64_t *)(a1 + 1312);
    v16 = *a4;
    if (*a4)
    {
LABEL_3:
      *a4 = 0;
      goto LABEL_4;
    }
  }
  else
  {
    *(_OWORD *)(a1 + 296) = xmmword_2245C7810;
    *(_WORD *)(a1 + 312) = 1;
    *(_DWORD *)(a1 + 316) = 1065353216;
    *(_QWORD *)(a1 + 320) = 0x100000000;
    *(_DWORD *)(a1 + 328) = 0x1000000;
    *(_WORD *)(a1 + 332) = 0;
    *(_BYTE *)(a1 + 336) = 1;
    v13 = (uint64_t *)(a1 + 1296);
    v14 = (uint64_t *)(a1 + 1304);
    v15 = (uint64_t *)(a1 + 1312);
    v16 = *a4;
    if (*a4)
      goto LABEL_3;
  }
  v19 = operator new();
  v16 = v19;
  v20 = (std::__shared_weak_count *)a2[1];
  v34 = *a2;
  v35 = v20;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(p_shared_owners);
    while (__stxr(v22 + 1, p_shared_owners));
  }
  sub_22351ADF0(v19, v9, (uint64_t)&v34);
  v23 = v35;
  if (v35)
  {
    v24 = (unint64_t *)&v35->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
LABEL_4:
  v17 = *v10;
  *v10 = v16;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *a5;
  if (*a5)
  {
    *a5 = 0;
  }
  else
  {
    v18 = (_QWORD *)operator new();
    sub_223A8F27C(v18, *(_BYTE *)(a1 + 421), *(float *)(a1 + 412), *(float *)(a1 + 416));
  }
  v26 = *(_QWORD *)(a1 + 1216);
  *(_QWORD *)(a1 + 1216) = v18;
  if (v26)
    (*(void (**)(uint64_t))(*(_QWORD *)v26 + 8))(v26);
  v27 = operator new();
  *(_BYTE *)v27 = 0;
  *(_QWORD *)(v27 + 16) = 0;
  *(_QWORD *)(v27 + 24) = 0;
  *(_QWORD *)(v27 + 8) = v27 + 16;
  *(_BYTE *)(v27 + 32) = 0;
  *(_BYTE *)(v27 + 56) = 0;
  v28 = *v13;
  *v13 = v27;
  if (v28)
  {
    if (*(_BYTE *)(v28 + 56) && *(char *)(v28 + 55) < 0)
      operator delete(*(void **)(v28 + 32));
    sub_223198030(v28 + 8, *(_QWORD **)(v28 + 16));
    MEMORY[0x227684CE8](v28, 0x1032C401C9F5151);
  }
  v29 = operator new();
  *(_BYTE *)v29 = 0;
  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 8) = v29 + 16;
  *(_QWORD *)(v29 + 24) = 0;
  strcpy((char *)(v29 + 32), "Occupancy.AirMesh");
  *(_WORD *)(v29 + 55) = 273;
  v30 = *v14;
  *v14 = v29;
  if (v30)
  {
    if (*(_BYTE *)(v30 + 56) && *(char *)(v30 + 55) < 0)
      operator delete(*(void **)(v30 + 32));
    sub_223198030(v30 + 8, *(_QWORD **)(v30 + 16));
    MEMORY[0x227684CE8](v30, 0x1032C401C9F5151);
  }
  v31 = operator new();
  *(_BYTE *)v31 = 0;
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  *(_QWORD *)(v31 + 8) = v31 + 16;
  *(_BYTE *)(v31 + 32) = 0;
  *(_BYTE *)(v31 + 56) = 0;
  v32 = *v15;
  *v15 = v31;
  if (v32)
  {
    if (*(_BYTE *)(v32 + 56) && *(char *)(v32 + 55) < 0)
      operator delete(*(void **)(v32 + 32));
    sub_223198030(v32 + 8, *(_QWORD **)(v32 + 16));
    MEMORY[0x227684CE8](v32, 0x1032C401C9F5151);
  }
  return a1;
}

void sub_22355B1F0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;

  MEMORY[0x227684CE8](v6, 0xA1C40BD48D6D6);
  sub_22355B2D4(v3);
  sub_22355B2D4(v5);
  sub_22355B2D4(v4);
  sub_22355B33C((uint64_t *)(v1 + 1224));
  v9 = *(_QWORD *)(v1 + 1216);
  *(_QWORD *)(v1 + 1216) = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  v10 = *v7;
  *v7 = 0;
  if (!v10)
  {
    sub_223223FC0(v2);
    _Unwind_Resume(a1);
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
  sub_223223FC0(v2);
  _Unwind_Resume(a1);
}

void sub_22355B2C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1216);
  *(_QWORD *)(v0 + 1216) = 0;
  if (!v1)
    JUMPOUT(0x22355B288);
  JUMPOUT(0x22355B27CLL);
}

uint64_t *sub_22355B2D4(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*(_BYTE *)(v2 + 56) && *(char *)(v2 + 55) < 0)
      operator delete(*(void **)(v2 + 32));
    sub_223198030(v2 + 8, *(_QWORD **)(v2 + 16));
    MEMORY[0x227684CE8](v2, 0x1032C401C9F5151);
  }
  return a1;
}

uint64_t *sub_22355B33C(uint64_t *a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = *(_QWORD **)(v2 + 16);
    if (v3)
    {
      do
      {
        v4 = (_QWORD *)*v3;
        sub_223523BA4((uint64_t)(v3 + 2));
        operator delete(v3);
        v3 = v4;
      }
      while (v4);
    }
    v5 = *(void **)v2;
    *(_QWORD *)v2 = 0;
    if (v5)
      operator delete(v5);
    MEMORY[0x227684CE8](v2, 0x10A0C408EF24B1CLL);
  }
  return a1;
}

_QWORD *sub_22355B3BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = &off_24EC48710;
  v2 = a1[164];
  a1[164] = 0;
  if (v2)
  {
    if (*(_BYTE *)(v2 + 56) && *(char *)(v2 + 55) < 0)
      operator delete(*(void **)(v2 + 32));
    sub_223198030(v2 + 8, *(_QWORD **)(v2 + 16));
    MEMORY[0x227684CE8](v2, 0x1032C401C9F5151);
  }
  v3 = a1[163];
  a1[163] = 0;
  if (v3)
  {
    if (*(_BYTE *)(v3 + 56) && *(char *)(v3 + 55) < 0)
      operator delete(*(void **)(v3 + 32));
    sub_223198030(v3 + 8, *(_QWORD **)(v3 + 16));
    MEMORY[0x227684CE8](v3, 0x1032C401C9F5151);
  }
  v4 = a1[162];
  a1[162] = 0;
  if (v4)
  {
    if (*(_BYTE *)(v4 + 56) && *(char *)(v4 + 55) < 0)
      operator delete(*(void **)(v4 + 32));
    sub_223198030(v4 + 8, *(_QWORD **)(v4 + 16));
    MEMORY[0x227684CE8](v4, 0x1032C401C9F5151);
  }
  v5 = a1[153];
  a1[153] = 0;
  if (v5)
  {
    v6 = *(_QWORD **)(v5 + 16);
    if (v6)
    {
      do
      {
        v7 = (_QWORD *)*v6;
        sub_223523BA4((uint64_t)(v6 + 2));
        operator delete(v6);
        v6 = v7;
      }
      while (v7);
    }
    v8 = *(void **)v5;
    *(_QWORD *)v5 = 0;
    if (v8)
      operator delete(v8);
    MEMORY[0x227684CE8](v5, 0x10A0C408EF24B1CLL);
  }
  v9 = a1[152];
  a1[152] = 0;
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  v10 = a1[151];
  a1[151] = 0;
  if (v10)
    (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
  sub_223223FC0((uint64_t)(a1 + 1));
  return a1;
}

void sub_22355B55C(_QWORD *a1)
{
  sub_22355B3BC(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22355B580@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  __int16 v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  __int16 v14;

  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_WORD *)(a3 + 24) = 1;
  sub_223521F34(a1[151], a2, (uint64_t)&v12);
  v6 = *(uint64_t (**)(uint64_t *))(*a1 + 160);
  v7 = v14;
  v8 = v13;
  *(_OWORD *)a3 = v12;
  *(_QWORD *)(a3 + 16) = v8;
  *(_WORD *)(a3 + 24) = v7;
  result = v6(a1);
  if ((_DWORD)result)
  {
    v10 = *(_QWORD *)(**(_QWORD **)(a1[151] + 8) + 8);
    v13 = 0;
    v12 = 0uLL;
    result = 1;
    v14 = 1;
    v11 = a2[160];
    if (v11)
    {
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 40288) + 32))(*(_QWORD *)(v10 + 40288));
      v11 = *(_DWORD *)(v10 + 312) != 0;
    }
    *(_BYTE *)(a3 + 24) = result;
    *(_BYTE *)(a3 + 25) = v11;
  }
  return result;
}

void sub_22355B64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void **v9;

  sub_2231B888C(&a9);
  sub_2231B888C(v9);
  _Unwind_Resume(a1);
}

void sub_22355B668(_Unwind_Exception *a1)
{
  void **v1;

  sub_2231B888C(v1);
  _Unwind_Resume(a1);
}

void sub_22355B67C(_Unwind_Exception *a1)
{
  void **v1;

  sub_2231B888C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_22355B690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  int v8;
  uint64_t v9;
  double v10;
  char v11;
  _QWORD *v12;
  int v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  int v21;
  char v22;
  char *v23;
  char *v24;
  char *v25;
  float32x4_t v27;
  int8x16_t v28;
  uint64_t *v29;
  int8x16_t v30;
  int32x4_t v31;
  float32x4_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  int8x16_t v40;
  float32x4_t v41;
  float32x2_t v42;
  uint64_t v43;
  float32x4_t v44;
  int8x16_t v45;
  int8x16_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  int32x4_t v51;
  float32x4_t v52;
  uint64_t v53;
  int8x16_t v54;
  uint64_t *v55;
  char *v56;
  char *v57;
  void *v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void *v65;
  int8x16_t v66;
  void *v67;
  int32x4_t v68;
  int32x4_t v69;
  int32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void *v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  void *v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  void *v93;
  _QWORD *v94;
  unint64_t v95;
  unint64_t v96;
  int8x16_t v97;
  int8x16_t v98;
  uint8x16_t v99;
  uint64_t v100;
  int8x16_t *v101;
  int8x16_t *v102;
  unint64_t v103;
  int8x16_t *v104;
  unint64_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int8x8_t *v108;
  unint64_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int8x8_t v112;
  uint16x8_t v113;
  uint32x4_t v114;
  int8x16_t v115;
  int64x2_t v116;
  int64x2_t v117;
  uint32x4_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  unint64_t v122;
  int8x16_t *v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int8x16_t v130;
  uint8x16_t v131;
  uint16x8_t v132;
  uint32x4_t v133;
  int8x16_t v134;
  int8x16_t v135;
  int64x2_t v136;
  int64x2_t v137;
  uint32x4_t v138;
  int64x2_t v139;
  uint16x8_t v140;
  uint32x4_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  uint32x4_t v145;
  int64x2_t v146;
  char v147;
  float v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  std::mutex *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  std::string::size_type size;
  std::string *v158;
  std::string::size_type v159;
  std::string::size_type v160;
  int v161;
  __n128 *v164;
  std::string *v165;
  size_t v166;
  unsigned __int8 v167;
  float v168;
  unsigned __int8 v169;
  double v170;
  unsigned __int8 *v171;
  unsigned __int8 *v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  float v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  std::mutex *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  std::string::size_type v197;
  std::string *v198;
  std::string::size_type v199;
  std::string::size_type v200;
  int v201;
  __n128 *v204;
  std::string *v205;
  size_t v206;
  unsigned __int8 v207;
  float v208;
  unsigned __int8 v209;
  double v210;
  char *v211;
  char *v212;
  void *v213;
  std::__shared_weak_count *v214;
  unint64_t *v215;
  unint64_t v216;
  const char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v223;
  unint64_t v224;
  unint64_t v225;
  unint64_t v226;
  uint64_t v227;
  void *__p[5];
  _BYTE v229[24];
  __int128 v230;
  __int128 v231;
  __int128 v232;
  uint64_t v233;
  uint64_t v234;
  std::__shared_weak_count *v235;
  uint64_t v236;
  std::__shared_weak_count *v237;
  uint64_t v238;
  char v239;
  void *v240;
  char *v241;
  void *v242;
  void *v243;
  _QWORD *v244[3];
  _QWORD *v245[3];
  char *v246;
  char *v247;
  uint64_t v248[13];
  int32x2_t v249;
  unsigned int v250;
  int32x2_t v251;
  unsigned int v252;
  float32x2_t v253;
  __int32 v254;
  float32x2_t v255;
  __int32 v256;
  unsigned __int8 v257;
  char v258;
  double v259;
  _QWORD *v260;
  _QWORD *v261;
  uint64_t v262;
  __int16 v263;
  unsigned __int8 *v264;
  unsigned __int8 *v265;
  char v266;
  char *v267;
  char v268;
  void *v269;
  int v270;
  uint64_t v271;
  int v272;
  void *v273;
  int v274;
  void *v275[2];
  uint64_t v276;
  char v277;
  _BYTE v278[96];
  void *v279[2];
  void *v280;
  __int128 v281;
  uint64_t v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  char v287;
  void *v288;
  char v289;
  void *v290;
  __int128 v291;
  __int128 v292;
  int v293;
  float v294;
  std::string v295;
  float v296;
  __int128 v297;
  char info[23];
  char v299;
  __int128 v300;
  __int128 v301;
  int v302;
  uint64_t v303;

  v303 = *MEMORY[0x24BDAC8D0];
  v292 = 0u;
  v291 = 0u;
  v293 = 728303152;
  kdebug_trace();
  if (!*(_BYTE *)(a1 + 888)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 213, (uint64_t)"params_.keyframing", 18, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_223227930((uint64_t *)&v290);
  LOBYTE(v264) = 0;
  v266 = 0;
  LOBYTE(v267) = 0;
  v268 = 0;
  LOBYTE(v269) = 0;
  v277 = 0;
  v278[0] = 0;
  v278[88] = 0;
  LOBYTE(v279[0]) = 0;
  v287 = 0;
  LOBYTE(v288) = 0;
  v289 = 0;
  v262 = 0;
  v261 = 0;
  v263 = 0;
  v8 = *(unsigned __int8 *)(a2 + 1832);
  v9 = *(_QWORD *)(a2 + 1240);
  v10 = (double)v9 / 1000000000.0;
  if (!*(_BYTE *)(a2 + 1832))
    v10 = 0.0;
  v260 = 0;
  v259 = v10;
  if (v8)
  {
    v238 = v9;
    v11 = 1;
  }
  else
  {
    v11 = 0;
    LOBYTE(v238) = 0;
  }
  v239 = v11;
  if (!sub_22356709C((uint64_t *)(a1 + 1240), &v238))
    goto LABEL_20;
  if ((sub_223565488((unsigned __int8 **)(a2 + 1872)) & 1) == 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngineUtils.cpp", 355, (uint64_t)"utils::CheckKeyframeResult(engine_result.keyframes_updated)", 59, (uint64_t)"Keyframes should have unique uuids", 34, (void (*)(void **))sub_22457406C))
  {
LABEL_299:
    abort();
  }
  v12 = (_QWORD *)(a2 + 1240);
  v13 = *(unsigned __int8 *)(a2 + 1832);
  if (!*(_BYTE *)(a2 + 1832))
    v12 = (_QWORD *)(a1 + 1240);
  *(_QWORD *)(a1 + 1240) = *v12;
  if (!v13 && *(_QWORD *)(a2 + 1872) == *(_QWORD *)(a2 + 1880))
  {
    if (!*(_BYTE *)(a2 + 1864)
      && *(_QWORD *)(a2 + 1896) == *(_QWORD *)(a2 + 1904)
      && *(_QWORD *)(a2 + 2024) == *(_QWORD *)(a2 + 2032)
      && *(_QWORD *)(a2 + 2048) == *(_QWORD *)(a2 + 2056)
      && !*(_BYTE *)(a2 + 2152)
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 235, (uint64_t)"!keyframe_engine_result.jasper_clouds.has_value() && keyframe_engine_result.pending_updates.empty() && keyframe_engine_result.overlapping_candidates.empty() && keyframe_engine_result.integration_candidates.empty() && !keyframe_engine_result.monitoring_result.has_value()", 270, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      v263 = 257;
LABEL_20:
      sub_22329ACE4(a4, (uint64_t)&v259);
      *(_BYTE *)(a4 + 440) = 1;
      goto LABEL_297;
    }
    goto LABEL_299;
  }
  v14 = *(_QWORD *)(a1 + 1208);
  v15 = (std::__shared_weak_count *)a3[1];
  v236 = *a3;
  v237 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(p_shared_owners);
    while (__stxr(v17 + 1, p_shared_owners));
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v14 + 16))(&v238, v14, a2, &v236);
  v18 = v237;
  if (v237)
  {
    v19 = (unint64_t *)&v237->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = v257;
  v22 = v238;
  *(_BYTE *)(a1 + 1250) = (v238 & 2) != 0;
  *(_BYTE *)(a1 + 1251) = (v22 & 0x10) != 0;
  *(_BYTE *)(a1 + 1252) = (v238 & 0x4000) != 0;
  v23 = v246;
  v24 = v247;
  if (v246 != v247)
  {
    v25 = v246;
    do
    {
      if (v25[240] != 8 || v25[241] != 1)
      {
        *(_BYTE *)(a1 + 1248) = 1;
        break;
      }
      v25 += 248;
    }
    while (v25 != v247);
    while (v23[240] == 8)
    {
      v23 += 248;
      if (v23 == v24)
        goto LABEL_39;
    }
    goto LABEL_40;
  }
LABEL_39:
  if (v258 != 1)
LABEL_40:
    *(_BYTE *)(a1 + 1249) = 1;
  sub_223520180(*(_QWORD *)(a1 + 1208));
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 160))(a1) && !*(_BYTE *)(a1 + 1252))
  {
    memset(__p, 0, 24);
    if (*a3)
      v29 = (uint64_t *)(*a3 + 8);
    else
      v29 = (uint64_t *)__p;
    sub_22391E654(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8), (uint64_t)&v246, v29, *(_QWORD *)(***(_QWORD ***)(*(_QWORD *)(a1 + 1208) + 8) + 112));
    if (*(_BYTE *)(a2 + 2512) && *(_BYTE *)(a2 + 2504))
    {
      v33 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8);
      v34 = *(std::__shared_weak_count **)(a2 + 2328);
      v234 = *(_QWORD *)(a2 + 2320);
      v235 = v34;
      if (v34)
      {
        v35 = (unint64_t *)&v34->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
      }
      sub_22391BD28(v33, &v234, (_QWORD *)(a2 + 2336), a2 + 2368, (uint64_t *)a2);
      v37 = v235;
      if (v235)
      {
        v38 = (unint64_t *)&v235->__shared_owners_;
        do
          v39 = __ldaxr(v38);
        while (__stlxr(v39 - 1, v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
    }
    if (v21)
    {
      v28.i32[0] = v254;
      *(float32x2_t *)v32.f32 = v255;
      v32.i32[2] = v256;
      v40 = (int8x16_t)vnegq_f32(v32);
      *(float32x2_t *)v30.i8 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(v249, v251), *(float *)v40.i32), (float32x2_t)vzip2_s32(v249, v251), v255, 1), (float32x2_t)__PAIR64__(v252, v250), v32, 2);
      v41 = (float32x4_t)vextq_s8(v40, v40, 8uLL);
      v42 = vmla_f32(vmls_lane_f32(vmul_f32(v253, *(float32x2_t *)v40.i8), (float32x2_t)vdup_lane_s32((int32x2_t)v253, 1), v255, 1), *(float32x2_t *)v41.f32, *(float32x2_t *)v28.i8);
      DWORD2(v300) = v42.i32[0];
      *(_QWORD *)&v300 = v30.i64[0];
      v43 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8);
      if (*(_BYTE *)(v43 + 200))
      {
        if (*(_BYTE *)(v43 + 2888))
        {
          if (*(_BYTE *)(v43 + 233))
          {
            v27.i64[0] = *(_QWORD *)(v43 + 40148);
            v27.i32[2] = *(_DWORD *)(v43 + 40156);
            v31.i64[0] = *(_QWORD *)(v43 + 40164);
            v31.i32[2] = *(_DWORD *)(v43 + 40172);
            v32.i32[0] = *(_DWORD *)(v43 + 40188);
            v40.i64[0] = *(_QWORD *)(v43 + 40196);
            v40.i32[2] = *(_DWORD *)(v43 + 40204);
            v44.i64[0] = vzip1q_s32((int32x4_t)v27, v31).u64[0];
            v45 = (int8x16_t)vnegq_f32((float32x4_t)v40);
            v46 = (int8x16_t)vtrn2q_s32((int32x4_t)v27, v31);
            v46.i32[2] = HIDWORD(*(_QWORD *)(v43 + 40180));
            v47 = (float32x4_t)vzip2q_s32((int32x4_t)v27, v31);
            *(float32x2_t *)v48.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v44.f32, *(float *)v45.i32), *(float32x2_t *)v46.i8, *(float32x2_t *)v40.i8, 1), *(float32x2_t *)v47.f32, (float32x4_t)v40, 2);
            v47.i32[2] = v32.i32[0];
            v48.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(v43 + 40180), *(float32x2_t *)v45.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(v43 + 40180), 1), *(float32x2_t *)v40.i8, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL), *(float32x2_t *)v32.f32).u32[0]);
            v44.i64[1] = *(_QWORD *)(v43 + 40180);
            v49.i32[3] = 0;
            v49.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v46, 0).i32[3];
            *(uint64_t *)((char *)v49.i64 + 4) = vextq_s8(v46, v30, 4uLL).u64[0];
            v47.i64[1] = vdupq_laneq_s32((int32x4_t)v47, 2).u32[0];
            v50 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)(v43 + 40212))), v49, *(float32x2_t *)(v43 + 40212), 1), v47, *(float32x4_t *)(v43 + 40212), 2), v48, *(float32x4_t *)(v43 + 40212), 3);
            v51 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)(v43 + 40228))), v49, *(float32x2_t *)(v43 + 40228), 1), v47, *(float32x4_t *)(v43 + 40228), 2), v48, *(float32x4_t *)(v43 + 40228), 3);
            v28 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)(v43 + 40244))), v49, *(float32x2_t *)(v43 + 40244), 1), v47, *(float32x4_t *)(v43 + 40244), 2), v48, *(float32x4_t *)(v43 + 40244), 3);
            v52 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)(v43 + 40260))), v49, *(float32x2_t *)(v43 + 40260), 1), v47, *(float32x4_t *)(v43 + 40260), 2), v48, *(float32x4_t *)(v43 + 40260), 3);
            v48.i64[0] = vtrn2q_s32((int32x4_t)v50, v51).u64[0];
            v44.i64[0] = vzip2q_s32((int32x4_t)v50, v51).u64[0];
            v53 = v52.i64[0];
            *(int32x2_t *)v51.i8 = vzip1_s32(*(int32x2_t *)v50.f32, *(int32x2_t *)v51.i8);
            *(float32x2_t *)v50.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v51.i8, COERCE_FLOAT(v53 ^ 0x80000000)), *(float32x2_t *)v48.f32, (float32x2_t)(v53 ^ 0x8000000080000000), 1), *(float32x2_t *)v44.f32, COERCE_FLOAT(v52.i32[2] ^ 0x80000000));
            v45.i64[0] = vextq_s8(v28, v28, 8uLL).u64[0];
            *(float32x2_t *)&v50.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v28.i8, (float32x2_t)(v53 ^ 0x8000000080000000)), (float32x2_t)vdup_lane_s32((int32x2_t)(v53 ^ 0x8000000080000000), 1), *(float32x2_t *)v28.i8, 1), (float32x2_t)(v52.i64[1] ^ 0xFFFFFFFF80000000), *(float32x2_t *)v45.i8);
            v41 = (float32x4_t)vextq_s8((int8x16_t)vdupq_lane_s32(*(int32x2_t *)v48.f32, 0), (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v48.f32, 1), 0xCuLL);
            *(float32x2_t *)v47.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v51.i8, *(float *)v30.i32), *(float32x2_t *)v41.f32, *(float32x2_t *)v30.i8, 1), *(float32x2_t *)v44.f32, v42.f32[0]);
            *(float32x2_t *)&v47.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v28.i8, *(float32x2_t *)v30.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v30.i8, 1), *(float32x2_t *)v28.i8, 1), v42, *(float32x2_t *)v45.i8);
            v30 = (int8x16_t)vaddq_f32(v47, v50);
          }
          else
          {
            v30.u64[1] = (unint64_t)v42;
          }
          if (*(_BYTE *)(v43 + 2984)
            || (double)(v248[0] - *(_QWORD *)(v43 + 3000)) / 1000000000.0 > 3.0
            || (v41.i64[0] = *(_QWORD *)(v43 + 2988),
                v41.i32[2] = *(_DWORD *)(v43 + 2996),
                v54 = (int8x16_t)vsubq_f32((float32x4_t)v30, v41),
                v27 = (float32x4_t)vextq_s8(v54, v54, 8uLL),
                vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v54.i8, *(float32x2_t *)v54.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v54.i8, 1), *(float32x2_t *)v54.i8, 1), *(float32x2_t *)v27.f32, *(float32x2_t *)v27.f32).f32[0] > (float)(*(float *)(v43 + 448) * *(float *)(v43 + 448))))
          {
            v55 = sub_22392ABC0(v43, (float32x2_t *)&v300, v248);
            sub_22355D3C0((uint64_t)v278, (uint64_t)v55);
          }
        }
      }
    }
    v56 = (char *)__p[0];
    if (__p[0])
    {
      v57 = (char *)__p[1];
      v58 = __p[0];
      if (__p[1] != __p[0])
      {
        do
        {
          v57 -= 464;
          sub_22324A5A0((uint64_t)v57);
        }
        while (v57 != v56);
        v58 = __p[0];
      }
      __p[1] = v56;
      operator delete(v58);
    }
  }
  if (*(_BYTE *)(a1 + 408))
  {
    v59 = *(_QWORD *)(a1 + 1224);
    memset(__p, 0, 24);
    sub_22365835C((char **)__p, *(_QWORD *)(v59 + 24));
    v60 = *(_QWORD **)(v59 + 16);
    if (v60)
    {
      v61 = (char *)__p[1];
      do
      {
        while (1)
        {
          v62 = (uint64_t)(v60 + 4);
          if (v61 < __p[2])
            break;
          v61 = (char *)sub_22324A768(__p, v62);
          __p[1] = v61;
          v60 = (_QWORD *)*v60;
          if (!v60)
            goto LABEL_80;
        }
        sub_223249DC0((uint64_t)v61, v62);
        v61 += 464;
        __p[1] = v61;
        v60 = (_QWORD *)*v60;
      }
      while (v60);
    }
LABEL_80:
    sub_223A9062C(*(uint64_t **)(*(_QWORD *)(a1 + 1216) + 8), (uint64_t *)__p);
    v63 = (char *)__p[0];
    if (__p[0])
    {
      v64 = (char *)__p[1];
      v65 = __p[0];
      if (__p[1] != __p[0])
      {
        do
        {
          v64 -= 464;
          sub_22324A5A0((uint64_t)v64);
        }
        while (v64 != v63);
        v65 = __p[0];
      }
      __p[1] = v63;
      operator delete(v65);
    }
  }
  if (*(unsigned __int8 *)(a1 + 1251) | *(unsigned __int8 *)(a1 + 1252)
    || *(_BYTE *)(a1 + 1248)
    && (double)(uint64_t)(*(_QWORD *)(a1 + 1240) - *(_QWORD *)(a1 + 1232)) + 50000000.0 > *(double *)(a1 + 288)
                                                                                       * 1000000000.0)
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 256))(__p, a1);
    sub_2235622F8((void **)&v260, (uint64_t)__p[1], (uint64_t)__p[2], 0xEEEEEEEEEEEEEEEFLL * (((char *)__p[2] - (char *)__p[1]) >> 3));
    sub_2235627F4(&v288, (uint64_t)&v233);
    *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a1 + 1240);
    *(_BYTE *)(a1 + 1248) = 0;
    sub_2232954B0((uint64_t)__p);
  }
  v263 = 256;
  if (v21 && *(_BYTE *)(a1 + 24))
  {
    *(float32x2_t *)v27.f32 = v255;
    v27.i32[2] = v256;
    v28.i32[0] = v254;
    v66 = (int8x16_t)vnegq_f32(v27);
    *(float32x2_t *)&v300 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(v249, v251), *(float *)v66.i32), (float32x2_t)vzip2_s32(v249, v251), v255, 1), (float32x2_t)__PAIR64__(v252, v250), v27, 2);
    DWORD2(v300) = vmla_f32(vmls_lane_f32(vmul_f32(v253, *(float32x2_t *)v66.i8), (float32x2_t)vdup_lane_s32((int32x2_t)v253, 1), v255, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL), *(float32x2_t *)v28.i8).u32[0];
    sub_223522BBC(*(_QWORD *)(a1 + 1208), (uint64_t)&v300, (uint64_t)__p);
    if (v287)
    {
      if (v279[0])
      {
        v279[1] = v279[0];
        operator delete(v279[0]);
      }
      *(_OWORD *)v279 = *(_OWORD *)__p;
      v280 = __p[2];
      memset(__p, 0, 24);
      v67 = (void *)v281;
      if ((_QWORD)v281)
      {
        *((_QWORD *)&v281 + 1) = v281;
        operator delete((void *)v281);
        v67 = __p[0];
      }
      v281 = *(_OWORD *)&__p[3];
      v282 = *(_QWORD *)v229;
      __p[4] = 0;
      *(_QWORD *)v229 = 0;
      __p[3] = 0;
      v283 = *(_OWORD *)&v229[8];
      v284 = v230;
      v285 = v231;
      v286 = v232;
      if (v67)
      {
        __p[1] = v67;
        operator delete(v67);
      }
    }
    else
    {
      *(_OWORD *)v279 = *(_OWORD *)__p;
      memset(__p, 0, sizeof(__p));
      v281 = *(_OWORD *)&__p[3];
      v280 = __p[2];
      v282 = *(_QWORD *)v229;
      *(_QWORD *)v229 = 0;
      v286 = v232;
      v285 = v231;
      v284 = v230;
      v283 = *(_OWORD *)&v229[8];
      v287 = 1;
    }
  }
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 160))(a1))
    goto LABEL_152;
  if (*(_BYTE *)(a1 + 432))
  {
    v73 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8);
    if (v257)
      v74 = v248[0];
    else
      v74 = 0;
    if (*(_BYTE *)(v73 + 297))
      sub_223932B18(v73, v257, 0, (uint64_t)__p, v69, v70, v71);
    else
      sub_22392EFC0(v73, v74, v257, (uint64_t)__p, v68, v69, *(float32x2_t *)v70.i8, v72);
    sub_2235628FC((char **)&v264, (uint64_t)__p);
    if (LOBYTE(__p[4]))
    {
      v75 = (char *)__p[0];
      if (__p[0])
      {
        v76 = (char *)__p[1];
        v77 = __p[0];
        if (__p[1] != __p[0])
        {
          do
          {
            v78 = (std::__shared_weak_count *)*((_QWORD *)v76 - 12);
            if (v78)
            {
              v79 = (unint64_t *)&v78->__shared_owners_;
              do
                v80 = __ldaxr(v79);
              while (__stlxr(v80 - 1, v79));
              if (!v80)
              {
                ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
                std::__shared_weak_count::__release_weak(v78);
              }
            }
            v76 -= 120;
          }
          while (v76 != v75);
          v77 = __p[0];
        }
        __p[1] = v75;
        operator delete(v77);
      }
    }
    if (v266)
    {
      v81 = *(_QWORD *)(a1 + 1312);
      HIBYTE(__p[2]) = 6;
      strcpy((char *)__p, "OCP:RS");
      *(_QWORD *)&v300 = (uint64_t)(v259 * 1000000000.0);
      sub_223470EF4(v81, &v264, (uint64_t)__p, (uint64_t *)&v300);
      if (SHIBYTE(__p[2]) < 0)
        operator delete(__p[0]);
    }
    if (v257)
      v82 = v248[0];
    else
      v82 = 0;
    sub_2239347B0(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8), v82, v257, __p);
    sub_2235628FC(&v267, (uint64_t)__p);
    if (LOBYTE(__p[4]))
    {
      v83 = (char *)__p[0];
      if (__p[0])
      {
        v84 = (char *)__p[1];
        v85 = __p[0];
        if (__p[1] != __p[0])
        {
          do
          {
            v86 = (std::__shared_weak_count *)*((_QWORD *)v84 - 12);
            if (v86)
            {
              v87 = (unint64_t *)&v86->__shared_owners_;
              do
                v88 = __ldaxr(v87);
              while (__stlxr(v88 - 1, v87));
              if (!v88)
              {
                ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
                std::__shared_weak_count::__release_weak(v86);
              }
            }
            v84 -= 120;
          }
          while (v84 != v83);
          v85 = __p[0];
        }
        __p[1] = v83;
        operator delete(v85);
      }
    }
  }
  if (!*(_BYTE *)(a1 + 1249))
    goto LABEL_152;
  v89 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8) + 40576);
  if (v257 && *(_BYTE *)(v89 + 56))
  {
    if (v248[0] != *(_QWORD *)(v89 + 48))
      goto LABEL_152;
LABEL_143:
    v90 = *(_QWORD *)(v89 + 8);
    __p[0] = *(void **)(v90 + 328);
    LODWORD(__p[1]) = *(_DWORD *)(v90 + 336);
    HIDWORD(__p[2]) = *(_DWORD *)(v90 + 348);
    *(void **)((char *)&__p[1] + 4) = *(void **)(v90 + 340);
    __p[3] = *(void **)(v90 + 352);
    LODWORD(__p[4]) = *(_DWORD *)(v90 + 360);
    memset(v229, 0, sizeof(v229));
    sub_22329A240((uint64_t)v229, *(_QWORD *)(v90 + 368), *(_QWORD *)(v90 + 376), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(v90 + 376) - *(_QWORD *)(v90 + 368)) >> 5));
    v269 = __p[0];
    v270 = (int)__p[1];
    v271 = *(uint64_t *)((char *)&__p[1] + 4);
    v272 = HIDWORD(__p[2]);
    v273 = __p[3];
    v274 = (int)__p[4];
    if (v277)
    {
      v91 = v275[0];
      if (v275[0])
      {
        v92 = v275[1];
        v93 = v275[0];
        if (v275[1] != v275[0])
        {
          do
            v92 = sub_2232959C0(v92 - 20);
          while (v92 != v91);
          v93 = v275[0];
        }
        v275[1] = v91;
        operator delete(v93);
      }
      *(_OWORD *)v275 = *(_OWORD *)v229;
      v276 = *(_QWORD *)&v229[16];
    }
    else
    {
      *(_OWORD *)v275 = *(_OWORD *)v229;
      v276 = *(_QWORD *)&v229[16];
      v277 = 1;
    }
    *(_BYTE *)(a1 + 1249) = 0;
    goto LABEL_152;
  }
  if ((v257 != 0) == (*(_BYTE *)(v89 + 56) != 0))
    goto LABEL_143;
LABEL_152:
  memset(__p, 0, 32);
  LODWORD(__p[4]) = 728303516;
  kdebug_trace();
  v296 = 0.0;
  v94 = v260;
  if (v260 == v261)
  {
    v148 = 0.0;
    goto LABEL_179;
  }
  v95 = 0;
  v96 = 0;
  v97 = (int8x16_t)vdupq_n_s64(1uLL);
  v98.i64[0] = 0x101010101010101;
  v98.i64[1] = 0x101010101010101;
  v99.i64[0] = 0x202020202020202;
  v99.i64[1] = 0x202020202020202;
  do
  {
    v100 = v94[2];
    if (v100)
    {
      v101 = *(int8x16_t **)(v100 + 240);
      v102 = *(int8x16_t **)(v100 + 248);
      if (v101 != v102)
      {
        v103 = (char *)v102 - (char *)v101;
        if ((unint64_t)((char *)v102 - (char *)v101) < 8)
        {
          v104 = v101;
          goto LABEL_171;
        }
        if (v103 >= 0x10)
        {
          v105 = v103 & 0xFFFFFFFFFFFFFFF0;
          v120 = 0uLL;
          v121 = (int64x2_t)v96;
          v122 = v103 & 0xFFFFFFFFFFFFFFF0;
          v123 = v101;
          v124 = 0uLL;
          v125 = 0uLL;
          v126 = 0uLL;
          v127 = 0uLL;
          v128 = 0uLL;
          v129 = 0uLL;
          do
          {
            v130 = *v123++;
            v131 = vcgtq_u8(v99, (uint8x16_t)vaddq_s8(v130, v98));
            v132 = vmovl_u8(*(uint8x8_t *)v131.i8);
            v133 = vmovl_u16(*(uint16x4_t *)v132.i8);
            v134.i64[0] = v133.u32[0];
            v134.i64[1] = v133.u32[1];
            v135 = (int8x16_t)vdupq_n_s64(1uLL);
            v136 = (int64x2_t)vandq_s8(v134, v135);
            v134.i64[0] = v133.u32[2];
            v134.i64[1] = v133.u32[3];
            v137 = (int64x2_t)vandq_s8(v134, v135);
            v138 = vmovl_high_u16(v132);
            v134.i64[0] = v138.u32[0];
            v134.i64[1] = v138.u32[1];
            v139 = (int64x2_t)vandq_s8(v134, v135);
            v140 = vmovl_high_u8(v131);
            v141 = vmovl_u16(*(uint16x4_t *)v140.i8);
            v134.i64[0] = v141.u32[0];
            v134.i64[1] = v141.u32[1];
            v142 = (int64x2_t)vandq_s8(v134, v135);
            v134.i64[0] = v138.u32[2];
            v134.i64[1] = v138.u32[3];
            v143 = (int64x2_t)vandq_s8(v134, v135);
            v134.i64[0] = v141.u32[2];
            v134.i64[1] = v141.u32[3];
            v144 = (int64x2_t)vandq_s8(v134, v135);
            v145 = vmovl_high_u16(v140);
            v134.i64[0] = v145.u32[0];
            v134.i64[1] = v145.u32[1];
            v146 = (int64x2_t)vandq_s8(v134, v135);
            v134.i64[0] = v145.u32[2];
            v134.i64[1] = v145.u32[3];
            v129 = vaddq_s64(v129, (int64x2_t)vandq_s8(v134, v135));
            v128 = vaddq_s64(v128, v146);
            v127 = vaddq_s64(v127, v144);
            v125 = vaddq_s64(v125, v143);
            v126 = vaddq_s64(v126, v142);
            v124 = vaddq_s64(v124, v139);
            v120 = vaddq_s64(v120, v137);
            v121 = vaddq_s64(v121, v136);
            v122 -= 16;
          }
          while (v122);
          v96 = vaddvq_s64(vaddq_s64(vaddq_s64(vaddq_s64(v121, v126), vaddq_s64(v124, v128)), vaddq_s64(vaddq_s64(v120, v127), vaddq_s64(v125, v129))));
          if (v103 == v105)
            goto LABEL_154;
          if ((v103 & 8) == 0)
          {
            v104 = (int8x16_t *)((char *)v101 + v105);
            goto LABEL_171;
          }
        }
        else
        {
          v105 = 0;
        }
        v104 = (int8x16_t *)((char *)v101 + (v103 & 0xFFFFFFFFFFFFFFF8));
        v106 = 0uLL;
        v107 = (int64x2_t)v96;
        v108 = (int8x8_t *)&v101->i8[v105];
        v109 = v105 - (v103 & 0xFFFFFFFFFFFFFFF8);
        v110 = 0uLL;
        v111 = 0uLL;
        do
        {
          v112 = *v108++;
          v113 = vmovl_u8(vcgt_u8((uint8x8_t)0x202020202020202, (uint8x8_t)vadd_s8(v112, (int8x8_t)0x101010101010101)));
          v114 = vmovl_u16(*(uint16x4_t *)v113.i8);
          v115.i64[0] = v114.u32[0];
          v115.i64[1] = v114.u32[1];
          v116 = (int64x2_t)vandq_s8(v115, v97);
          v115.i64[0] = v114.u32[2];
          v115.i64[1] = v114.u32[3];
          v117 = (int64x2_t)vandq_s8(v115, v97);
          v118 = vmovl_high_u16(v113);
          v115.i64[0] = v118.u32[0];
          v115.i64[1] = v118.u32[1];
          v119 = (int64x2_t)vandq_s8(v115, v97);
          v115.i64[0] = v118.u32[2];
          v115.i64[1] = v118.u32[3];
          v111 = vaddq_s64(v111, (int64x2_t)vandq_s8(v115, v97));
          v110 = vaddq_s64(v110, v119);
          v106 = vaddq_s64(v106, v117);
          v107 = vaddq_s64(v107, v116);
          v109 += 8;
        }
        while (v109);
        v96 = vaddvq_s64(vaddq_s64(vaddq_s64(v107, v110), vaddq_s64(v106, v111)));
        if (v103 == (v103 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_154:
          v95 = (unint64_t)v102->u64 + v95 - (_QWORD)v101;
          goto LABEL_155;
        }
        do
        {
LABEL_171:
          v147 = v104->i8[0];
          v104 = (int8x16_t *)((char *)v104 + 1);
          if ((v147 + 1) < 2u)
            ++v96;
        }
        while (v104 != v102);
        goto LABEL_154;
      }
    }
LABEL_155:
    v94 += 15;
  }
  while (v94 != v261);
  v148 = (float)v96 / (float)v95;
  if (!v95)
    v148 = 0.0;
LABEL_179:
  v296 = v148;
  *(_QWORD *)&v300 = "cv3d.recon.";
  *((_QWORD *)&v300 + 1) = 11;
  *(_QWORD *)&v301 = "Stats.Volumetric.result_meshlist";
  *((_QWORD *)&v301 + 1) = 32;
  sub_2231A9820((uint64_t)&v300, (uint64_t)&v302, 0, 0, &v295);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v149 = sub_2241471F8();
    v150 = v149[2];
    if (!v150)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v150 = v149[2];
    }
    v151 = *(_QWORD *)(v150 + 64);
    v152 = (std::mutex *)(v151 + 32);
    std::mutex::lock((std::mutex *)(v151 + 32));
    v154 = *(_QWORD *)(v151 + 96);
    v153 = *(_QWORD *)(v151 + 104);
    std::mutex::unlock(v152);
    if (v154 != v153)
    {
      sub_2241471F8();
      v155 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v155 + 24))(v155))
      {
        v300 = 0u;
        v301 = 0u;
        v302 = 728325608;
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v155 + 24))(v155))
        {
          strcpy(info, "ConfusedSemanticsRatio");
          v299 = 22;
          *(_QWORD *)&v297 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&v297 + 1) = 2;
          v156 = sub_2241471F8();
          sub_2231AF940((uint64_t)v156, v155, &v296, (uint64_t)info, &v297);
          if (v299 < 0)
            operator delete(*(void **)info);
        }
        kdebug_trace();
      }
    }
  }
  v300 = 0u;
  v301 = 0u;
  v302 = 728325624;
  kdebug_trace();
  size = HIBYTE(v295.__r_.__value_.__r.__words[2]);
  if ((v295.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v295.__r_.__value_.__l.__size_;
  if (size >= 0x11)
  {
    v158 = &v295;
    if ((v295.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v158 = (std::string *)v295.__r_.__value_.__r.__words[0];
    v159 = v158->__r_.__value_.__r.__words[0];
    v160 = v158->__r_.__value_.__l.__size_;
    v161 = v158->__r_.__value_.__s.__data_[16];
    if (v159 == 0x6365722E64337663 && v160 == 0x73746174532E6E6FLL && v161 == 46)
    {
      v164 = sub_223187510();
      if ((v295.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v165 = &v295;
      else
        v165 = (std::string *)v295.__r_.__value_.__r.__words[0];
      if ((v295.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v166 = HIBYTE(v295.__r_.__value_.__r.__words[2]);
      else
        v166 = v295.__r_.__value_.__l.__size_;
      sub_2231897A8((uint64_t *)v164, v165, v166, &v296, (uint64_t)"ConfusedSemanticsRatio", 22);
    }
  }
  kdebug_trace();
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v295.__r_.__value_.__l.__data_);
  v300 = 0u;
  v301 = 0u;
  v302 = 728325632;
  kdebug_trace();
  mach_absolute_time();
  v167 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v167 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info((mach_timebase_info_t)info);
    LODWORD(v223) = *(_DWORD *)info;
    LODWORD(v224) = *(_DWORD *)&info[4];
    *(double *)&qword_255795558 = (double)v223 / (double)v224;
    __cxa_guard_release(&qword_255795560);
  }
  v168 = v296;
  v169 = atomic_load((unsigned __int8 *)&qword_25578DF68);
  if ((v169 & 1) == 0 && __cxa_guard_acquire(&qword_25578DF68))
  {
    qword_25578BBC8 = (uint64_t)&off_24EC37778;
    sub_223476B20((uint64_t)&qword_25578BBD0);
    __cxa_atexit((void (*)(void *))sub_223FDB180, &qword_25578BBC8, &dword_22314D000);
    __cxa_guard_release(&qword_25578DF68);
  }
  std::mutex::lock(&stru_25578D3C8);
  v170 = v168;
  if (byte_25578D410)
    v170 = *(double *)&qword_25578D408 + v170;
  else
    byte_25578D410 = 1;
  qword_25578D408 = *(_QWORD *)&v170;
  *(double *)&qword_25578D418 = *(double *)&qword_25578D418 + 1.0;
  std::mutex::unlock(&stru_25578D3C8);
  kdebug_trace();
  if (v266)
  {
    v294 = 0.0;
    v171 = v264;
    v172 = v265;
    if (v264 == v265)
    {
      v188 = 0.0;
    }
    else
    {
      v227 = a4;
      v173 = 0;
      v174 = 0;
      do
      {
        v175 = *((_QWORD *)v171 + 2);
        if (v175)
        {
          v176 = *(_QWORD *)(v175 + 240);
          v177 = *(_QWORD *)(v175 + 248);
          if (v176 != v177)
          {
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v175 + 120) - *(_QWORD *)(v175 + 112)) >> 2) != v177 - v176
              || *(_DWORD *)(v175 + 272) != 2)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 93, (uint64_t)"mesh_ptr->faces.size() == mesh_ptr->semantics.size() && mesh_ptr->semantics_type == kit::mesh::TriMeshMetadataType::PerFace", 123, (uint64_t)"Expect per face semantics", 25, (void (*)(void **))sub_22457406C))
              {
                goto LABEL_298;
              }
              v175 = *((_QWORD *)v171 + 2);
            }
            if (*(_DWORD *)(v175 + 352) != 1)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 96, (uint64_t)"mesh_ptr->confidences_type == kit::mesh::TriMeshMetadataType::PerVertex", 71, (uint64_t)"Expect per vertex confidences", 29, (void (*)(void **))sub_22457406C))
              {
LABEL_298:
                abort();
              }
              v175 = *((_QWORD *)v171 + 2);
            }
            v179 = *(_QWORD *)(v175 + 112);
            v178 = *(_QWORD *)(v175 + 120);
            v181 = *(_QWORD *)(v175 + 240);
            v180 = *(_QWORD *)(v175 + 248);
            if (v179 != v178 || v181 != v180)
            {
              v183 = *(_QWORD *)(v175 + 320);
              v184 = v181 + 1;
              v185 = v179 + 12;
              do
              {
                v186 = v184;
                v187 = v185;
                if (*(float *)(v183 + 4 * *(unsigned int *)(v185 - 12)) > 0.0
                  && *(float *)(v183 + 4 * *(unsigned int *)(v185 - 8)) > 0.0
                  && *(float *)(v183 + 4 * *(unsigned int *)(v185 - 4)) > 0.0)
                {
                  ++v173;
                  if ((*(_BYTE *)(v184 - 1) + 1) < 2u)
                    ++v174;
                }
                ++v184;
                v185 += 12;
              }
              while (v187 != v178 || v186 != v180);
            }
          }
        }
        v171 += 120;
      }
      while (v171 != v172);
      v188 = (float)v174 / (float)v173;
      if (!v173)
        v188 = 0.0;
      a4 = v227;
    }
    v294 = v188;
    *(_QWORD *)&v300 = "cv3d.recon.";
    *((_QWORD *)&v300 + 1) = 11;
    *(_QWORD *)&v301 = "Stats.PRR.Result";
    *((_QWORD *)&v301 + 1) = 16;
    sub_2231A9820((uint64_t)&v300, (uint64_t)&v302, 0, 0, &v295);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v189 = sub_2241471F8();
      v190 = v189[2];
      if (!v190)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v190 = v189[2];
      }
      v191 = *(_QWORD *)(v190 + 64);
      v192 = (std::mutex *)(v191 + 32);
      std::mutex::lock((std::mutex *)(v191 + 32));
      v194 = *(_QWORD *)(v191 + 96);
      v193 = *(_QWORD *)(v191 + 104);
      std::mutex::unlock(v192);
      if (v194 != v193)
      {
        sub_2241471F8();
        v195 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v195 + 24))(v195))
        {
          v300 = 0u;
          v301 = 0u;
          v302 = 728325608;
          kdebug_trace();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v195 + 24))(v195))
          {
            strcpy(info, "ConfusedSemanticsRatio");
            v299 = 22;
            *(_QWORD *)&v297 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
            *((_QWORD *)&v297 + 1) = 2;
            v196 = sub_2241471F8();
            sub_2231AF940((uint64_t)v196, v195, &v294, (uint64_t)info, &v297);
            if (v299 < 0)
              operator delete(*(void **)info);
          }
          kdebug_trace();
        }
      }
    }
    v300 = 0u;
    v301 = 0u;
    v302 = 728325624;
    kdebug_trace();
    v197 = HIBYTE(v295.__r_.__value_.__r.__words[2]);
    if ((v295.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v197 = v295.__r_.__value_.__l.__size_;
    if (v197 >= 0x11)
    {
      v198 = &v295;
      if ((v295.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v198 = (std::string *)v295.__r_.__value_.__r.__words[0];
      v199 = v198->__r_.__value_.__r.__words[0];
      v200 = v198->__r_.__value_.__l.__size_;
      v201 = v198->__r_.__value_.__s.__data_[16];
      if (v199 == 0x6365722E64337663 && v200 == 0x73746174532E6E6FLL && v201 == 46)
      {
        v204 = sub_223187510();
        if ((v295.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v205 = &v295;
        else
          v205 = (std::string *)v295.__r_.__value_.__r.__words[0];
        if ((v295.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v206 = HIBYTE(v295.__r_.__value_.__r.__words[2]);
        else
          v206 = v295.__r_.__value_.__l.__size_;
        sub_2231897A8((uint64_t *)v204, v205, v206, &v294, (uint64_t)"ConfusedSemanticsRatio", 22);
      }
    }
    kdebug_trace();
    if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v295.__r_.__value_.__l.__data_);
    v300 = 0u;
    v301 = 0u;
    v302 = 728325632;
    kdebug_trace();
    mach_absolute_time();
    v207 = atomic_load((unsigned __int8 *)&qword_255795560);
    if ((v207 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
    {
      mach_timebase_info((mach_timebase_info_t)info);
      LODWORD(v225) = *(_DWORD *)info;
      LODWORD(v226) = *(_DWORD *)&info[4];
      *(double *)&qword_255795558 = (double)v225 / (double)v226;
      __cxa_guard_release(&qword_255795560);
    }
    v208 = v294;
    v209 = atomic_load((unsigned __int8 *)&qword_25578DF68);
    if ((v209 & 1) == 0 && __cxa_guard_acquire(&qword_25578DF68))
    {
      qword_25578BBC8 = (uint64_t)&off_24EC37778;
      sub_223476B20((uint64_t)&qword_25578BBD0);
      __cxa_atexit((void (*)(void *))sub_223FDB180, &qword_25578BBC8, &dword_22314D000);
      __cxa_guard_release(&qword_25578DF68);
    }
    std::mutex::lock(&stru_25578D440);
    v210 = v208;
    if (byte_25578D488)
      v210 = *(double *)&qword_25578D480 + v210;
    else
      byte_25578D488 = 1;
    qword_25578D480 = *(_QWORD *)&v210;
    *(double *)&qword_25578D490 = *(double *)&qword_25578D490 + 1.0;
    std::mutex::unlock(&stru_25578D440);
    kdebug_trace();
  }
  kdebug_trace();
  sub_22329ACE4(a4, (uint64_t)&v259);
  *(_BYTE *)(a4 + 440) = 1;
  sub_223480A2C(&v246);
  sub_223198030((uint64_t)v245, v245[1]);
  sub_223198030((uint64_t)v244, v244[1]);
  if (v242)
  {
    v243 = v242;
    operator delete(v242);
  }
  v211 = (char *)v240;
  if (v240)
  {
    v212 = v241;
    v213 = v240;
    if (v241 != v240)
    {
      do
      {
        v214 = (std::__shared_weak_count *)*((_QWORD *)v212 - 28);
        if (v214)
        {
          v215 = (unint64_t *)&v214->__shared_owners_;
          do
            v216 = __ldaxr(v215);
          while (__stlxr(v216 - 1, v215));
          if (!v216)
          {
            ((void (*)(std::__shared_weak_count *))v214->__on_zero_shared)(v214);
            std::__shared_weak_count::__release_weak(v214);
          }
        }
        v212 -= 248;
      }
      while (v212 != v211);
      v213 = v240;
    }
    v241 = v211;
    operator delete(v213);
  }
LABEL_297:
  sub_2232954B0((uint64_t)&v259);
  sub_22322797C(&v290, v217, v218, v219, v220, v221);
  return kdebug_trace();
}

void sub_22355D1D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;
  uint64_t v71;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  __cxa_guard_abort(&qword_25578DF68);
  sub_2231874DC(v71 - 160);
  sub_2231874DC((uint64_t)&__p);
  sub_22347D81C((uint64_t)&a71);
  sub_2232954B0((uint64_t)&STACK[0xB10]);
  sub_22322797C((void **)&STACK[0xCC8], v73, v74, v75, v76, v77);
  sub_2231874DC((uint64_t)&STACK[0xCD0]);
  _Unwind_Resume(a1);
}

void sub_22355D3B8()
{
  JUMPOUT(0x22355D398);
}

uint64_t sub_22355D3C0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (*(_BYTE *)(a1 + 88))
  {
    if (a1 != a2)
    {
      sub_223561F64((char **)a1, *(uint64_t **)a2, *(uint64_t **)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3));
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
      sub_2235622F8((void **)(a1 + 32), *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40), 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3));
      sub_2235621B0((_QWORD *)(a1 + 56), *(char **)(a2 + 56), *(char **)(a2 + 64), *(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56));
    }
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    return a1;
  }
  else
  {
    result = sub_22329A920(a1, (uint64_t *)a2);
    *(_BYTE *)(a1 + 88) = 1;
  }
  return result;
}

void sub_22355D474(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  std::__shared_weak_count *v5;
  _QWORD *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  std::__shared_weak_count *v19;
  _QWORD *v20;
  std::__shared_weak_count *v21;
  _BYTE v22[2544];
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(a2 + 120))
  {
    *a3 = 0;
    a3[440] = 0;
    return;
  }
  v6 = *(_QWORD **)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 8);
  v20 = *(_QWORD **)a2;
  v21 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  if (!v6)
    goto LABEL_21;
  v9 = *(_QWORD **)(a1 + 1224);
  if (!v9)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 368, (uint64_t)"plane_cache_", 12, (uint64_t)"plane cache is not allocated.", 29, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v9 = *(_QWORD **)(a1 + 1224);
  }
  sub_223763B54(v9, v6);
  if (!*(_BYTE *)(a1 + 984) || (v10 = v6[15]) == 0)
  {
LABEL_21:
    *a3 = 0;
    a3[440] = 0;
    if (!v5)
      return;
    goto LABEL_22;
  }
  sub_223523E5C((uint64_t)v22, v10);
  v18 = v6;
  v19 = v5;
  if (v5)
  {
    v11 = (unint64_t *)&v5->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  (*(void (**)(uint64_t, _BYTE *, _QWORD **))(*(_QWORD *)a1 + 24))(a1, v22, &v18);
  v13 = v19;
  if (v19)
  {
    v14 = (unint64_t *)&v19->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  sub_2235141E0((uint64_t)v22);
  v5 = v21;
  if (v21)
  {
LABEL_22:
    v16 = (unint64_t *)&v5->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_22355D638(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;
  uint64_t v8;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v6 = va_arg(va2, _QWORD);
  v8 = va_arg(va2, _QWORD);
  sub_223167354((uint64_t)va);
  sub_2235141E0((uint64_t)va2);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22355D65C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22355D670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_22355D684@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  (*(void (**)(_QWORD *__return_ptr))(*a1 + 256))((_QWORD *)a2);
  result = (double)a1[155] / 1000000000.0;
  *(double *)a2 = result;
  *(_WORD *)(a2 + 32) = 258;
  return result;
}

void sub_22355D6D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  size_t v11;
  const char *v12;
  unsigned __int8 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  __int32 v18;
  _QWORD *v19;
  _QWORD *i;
  uint64_t v21;
  int32x4_t v22;
  int32x4_t v23;
  float32x2_t v24;
  float32x4_t v25;
  uint64_t v26;
  __int128 v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  __int128 v31;
  __int128 v32;
  _OWORD *v33;
  unsigned __int8 v34;
  const char *v35;
  size_t v36;
  _BYTE *v37;
  const char *v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  size_t v47;
  std::__shared_weak_count_vtbl *v48;
  std::__shared_weak_count *v49;
  std::__shared_weak_count *v50;
  unint64_t *p_shared_owners;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  void *v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  uint64_t v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  uint64_t v90;
  void **v91;
  char *v92;
  char *v93;
  void *v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  void *v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107[2];
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  int v109;
  const char *v110;
  int v111;
  const char *v112;
  uint64_t v113;
  std::__shared_weak_count *v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  int v118;
  void *__p[4];
  _BYTE object[24];
  __int128 v121;
  void *v122[2];
  unint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD v127[3];
  _QWORD *v128;
  uint64_t v129;

  v129 = *MEMORY[0x24BDAC8D0];
  memset(__p, 0, 24);
  v116 = 0u;
  v117 = 0u;
  v118 = 728303160;
  kdebug_trace();
  v4 = *(unsigned __int8 *)(a1 + 372);
  v5 = (uint64_t *)(a1 + 1240);
  if (*(_BYTE *)(a1 + 372) && (v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 1208) + 8) + 8)) != 0)
    (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 32))(object, v6, a1 + 1240);
  else
    (*(void (**)(_BYTE *__return_ptr))(**(_QWORD **)(a1 + 1208) + 24))(object);
  v7 = *(_QWORD *)object;
  __p[0] = *(void **)object;
  *(_OWORD *)&__p[1] = *(_OWORD *)&object[8];
  if (*(_BYTE *)(a1 + 1250))
  {
    sub_22355E608(&v115);
    if (**(int **)(v115 + 56) > 3
      || (v8 = *(unsigned __int8 *)(v115 + 72), v9 = sub_22322F254(v115, "OSLogSurrogateAppender", 1, 0),
                                                v10 = v9,
                                                !v8)
      && !v9)
    {
LABEL_116:
      **(_BYTE **)(a1 + 1296) = 1;
      goto LABEL_117;
    }
    v107[0] = &v115;
    v107[1] = (void *)std::chrono::steady_clock::now().__d_.__rep_;
    rep = std::chrono::system_clock::now().__d_.__rep_;
    v109 = 3;
    v110 = "unknown file";
    v111 = 412;
    v113 = 0;
    v114 = 0;
    v112 = "unknown function";
    v106 = v115;
    if (*(char *)(v115 + 39) < 0)
    {
      v12 = *(const char **)(v115 + 16);
      v11 = *(_QWORD *)(v115 + 24);
      v105 = v115 + 16;
      v34 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v34 & 1) != 0)
        goto LABEL_35;
    }
    else
    {
      v11 = *(unsigned __int8 *)(v115 + 39);
      v12 = (const char *)(v115 + 16);
      v105 = v115 + 16;
      v13 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v13 & 1) != 0)
        goto LABEL_35;
    }
    if (__cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)object);
      sub_223199C58("com.apple.cv3d", (unint64_t)object, &xmmword_255788F40);
      if ((_BYTE)v121 && (object[23] & 0x80000000) != 0)
        operator delete(*(void **)object);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
    }
LABEL_35:
    if (byte_255788F57 >= 0)
      v35 = (const char *)&xmmword_255788F40;
    else
      v35 = (const char *)xmmword_255788F40;
    if (byte_255788F57 >= 0)
      v36 = byte_255788F57;
    else
      v36 = *((_QWORD *)&xmmword_255788F40 + 1);
    *(_QWORD *)object = os_log_create(v35, v12);
    v37 = &object[8];
    if (v36 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    if (v36 >= 0x17)
    {
      v38 = v12;
      v39 = v10;
      v40 = v8;
      v41 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v36 | 7) != 0x17)
        v41 = v36 | 7;
      v42 = v41 + 1;
      v37 = operator new(v41 + 1);
      *(_QWORD *)&object[16] = v36;
      *(_QWORD *)&v121 = v42 | 0x8000000000000000;
      *(_QWORD *)&object[8] = v37;
      v8 = v40;
      v10 = v39;
      v12 = v38;
      v5 = (uint64_t *)(a1 + 1240);
    }
    else
    {
      BYTE7(v121) = v36;
      if (!v36)
      {
LABEL_49:
        v37[v36] = 0;
        BYTE8(v121) = 1;
        v43 = v122;
        if (v11 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v11 >= 0x17)
        {
          v44 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v11 | 7) != 0x17)
            v44 = v11 | 7;
          v45 = v44 + 1;
          v43 = operator new(v44 + 1);
          v122[1] = (void *)v11;
          v123 = v45 | 0x8000000000000000;
          v122[0] = v43;
        }
        else
        {
          HIBYTE(v123) = v11;
          if (!v11)
            goto LABEL_57;
        }
        memmove(v43, v12, v11);
LABEL_57:
        *((_BYTE *)v43 + v11) = 0;
        v124 = 1;
        v46 = *(NSObject **)object;
        if (SHIBYTE(v123) < 0)
          operator delete(v122[0]);
        if (BYTE8(v121) && SBYTE7(v121) < 0)
          operator delete(*(void **)&object[8]);
        if (*(_QWORD *)object)
          os_release(*(void **)object);
        if (v10 && *(_QWORD *)(v10 + 24))
        {
          v47 = _os_log_pack_size();
          v48 = (std::__shared_weak_count_vtbl *)operator new(v47, (std::align_val_t)8uLL);
          v49 = (std::__shared_weak_count *)operator new();
          v50 = v49;
          v49->__shared_owners_ = 0;
          p_shared_owners = (unint64_t *)&v49->__shared_owners_;
          v49->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
          v49->__shared_weak_owners_ = 0;
          v49[1].__vftable = v48;
          *(_QWORD *)object = v48;
          *(_QWORD *)&object[8] = v48;
          *(_QWORD *)&object[16] = v49;
          do
            v52 = __ldxr(p_shared_owners);
          while (__stxr(v52 + 1, p_shared_owners));
          v121 = 0uLL;
          v122[0] = 0;
          do
            v53 = __ldaxr(p_shared_owners);
          while (__stlxr(v53 - 1, p_shared_owners));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
            std::__shared_weak_count::__release_weak(v50);
          }
          v54 = *(_QWORD *)object;
          *(_WORD *)_os_log_pack_fill() = 0;
          v55 = operator new();
          v56 = *(unsigned __int8 *)(v106 + 39);
          v57 = v105;
          if ((v56 & 0x80u) != 0)
          {
            v57 = *(_QWORD *)(v106 + 16);
            v56 = *(_QWORD *)(v106 + 24);
          }
          *(_QWORD *)v55 = v54;
          *(_OWORD *)(v55 + 8) = *(_OWORD *)&object[8];
          *(_QWORD *)&object[8] = 0;
          *(_QWORD *)&object[16] = 0;
          *(_OWORD *)(v55 + 24) = v121;
          v121 = 0uLL;
          *(_QWORD *)(v55 + 40) = v57;
          *(_QWORD *)(v55 + 48) = v56;
          *(_BYTE *)(v55 + 56) = 1;
          v125 = 0;
          v126 = v55;
          (*(void (**)(_QWORD, uint64_t *))(**(_QWORD **)(v10 + 24) + 40))(*(_QWORD *)(v10 + 24), &v126);
          v58 = v126;
          v126 = 0;
          if (v58)
          {
            v59 = *(std::__shared_weak_count **)(v58 + 32);
            if (v59)
            {
              v60 = (unint64_t *)&v59->__shared_owners_;
              do
                v61 = __ldaxr(v60);
              while (__stlxr(v61 - 1, v60));
              if (!v61)
              {
                ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
                std::__shared_weak_count::__release_weak(v59);
              }
            }
            v62 = *(std::__shared_weak_count **)(v58 + 16);
            if (v62)
            {
              v63 = (unint64_t *)&v62->__shared_owners_;
              do
                v64 = __ldaxr(v63);
              while (__stlxr(v64 - 1, v63));
              if (!v64)
              {
                ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
                std::__shared_weak_count::__release_weak(v62);
              }
            }
            MEMORY[0x227684CE8](v58, 0x10F0C40B62ED6C6);
            v65 = v125;
            v125 = 0;
            if (v65)
            {
              v66 = *(std::__shared_weak_count **)(v65 + 32);
              if (v66)
              {
                v67 = (unint64_t *)&v66->__shared_owners_;
                do
                  v68 = __ldaxr(v67);
                while (__stlxr(v68 - 1, v67));
                if (!v68)
                {
                  ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
                  std::__shared_weak_count::__release_weak(v66);
                }
              }
              v69 = *(std::__shared_weak_count **)(v65 + 16);
              if (v69)
              {
                v70 = (unint64_t *)&v69->__shared_owners_;
                do
                  v71 = __ldaxr(v70);
                while (__stlxr(v71 - 1, v70));
                if (!v71)
                {
                  ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
                  std::__shared_weak_count::__release_weak(v69);
                }
              }
              MEMORY[0x227684CE8](v65, 0x10F0C40B62ED6C6);
            }
          }
          v72 = (std::__shared_weak_count *)*((_QWORD *)&v121 + 1);
          if (*((_QWORD *)&v121 + 1))
          {
            v73 = (unint64_t *)(*((_QWORD *)&v121 + 1) + 8);
            do
              v74 = __ldaxr(v73);
            while (__stlxr(v74 - 1, v73));
            if (!v74)
            {
              ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
              std::__shared_weak_count::__release_weak(v72);
            }
          }
          v75 = *(std::__shared_weak_count **)&object[16];
          if (*(_QWORD *)&object[16])
          {
            v76 = (unint64_t *)(*(_QWORD *)&object[16] + 8);
            do
              v77 = __ldaxr(v76);
            while (__stlxr(v77 - 1, v76));
            if (!v77)
            {
              ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
              std::__shared_weak_count::__release_weak(v75);
            }
          }
        }
        else
        {
          os_log_type_enabled(v46, OS_LOG_TYPE_INFO);
          *(_WORD *)object = 0;
          v78 = (void *)_os_log_send_and_compose_impl();
          if (v78)
            free(v78);
        }
        if (v8)
        {
          sub_22322C138((uint64_t)v107, "[MeshingEngine] Hiding recon chunk meshes because of the meshing status");
          sub_223182C08((uint64_t)v107);
        }
        sub_223182C08((uint64_t)v107);
        v79 = v114;
        if (v114)
        {
          v80 = (unint64_t *)&v114->__shared_owners_;
          do
            v81 = __ldaxr(v80);
          while (__stlxr(v81 - 1, v80));
          if (!v81)
          {
            ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
            std::__shared_weak_count::__release_weak(v79);
          }
        }
        goto LABEL_116;
      }
    }
    memmove(v37, v35, v36);
    goto LABEL_49;
  }
  if (v4)
    goto LABEL_117;
  if (*(_DWORD *)(a1 + 320))
  {
    v14 = *(_QWORD *)&object[8];
    if (*(_QWORD *)object != *(_QWORD *)&object[8])
    {
      do
      {
        v17 = *(_QWORD **)(v7 + 16);
        if (*v17 != v17[1])
        {
          v18 = *(_DWORD *)(a1 + 320);
          v127[0] = &off_24EC48850;
          v127[1] = sub_223CE7660;
          v128 = v127;
          sub_223CE7920((uint64_t)v17, v18, (uint64_t)v127);
          v15 = v128;
          if (v128 == v127)
          {
            v15 = v127;
            v16 = 4;
          }
          else
          {
            if (!v128)
              goto LABEL_18;
            v16 = 5;
          }
          (*(void (**)(void))(*v15 + 8 * v16))();
        }
LABEL_18:
        v7 += 120;
      }
      while (v7 != v14);
    }
  }
  kdebug_trace();
  v19 = __p[0];
  for (i = __p[1]; v19 != i; v19 += 15)
  {
    v21 = v19[2];
    if (*(_DWORD *)(v21 + 104) != 1
      || *(_QWORD *)(v21 + 80) - *(_QWORD *)(v21 + 72) != *(_QWORD *)(v21 + 8) - *(_QWORD *)v21)
    {
      sub_223CD920C((const void **)v21, (uint64_t *)(v21 + 112), (char **)(v21 + 72));
      *(_DWORD *)(v19[2] + 104) = 1;
    }
  }
  kdebug_trace();
  if (*(_BYTE *)(a1 + 408))
  {
    v26 = *(_QWORD *)(a1 + 1216);
    if (!v26)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 444, (uint64_t)"plane_snapper_", 14, (uint64_t)"Plane snapper is null", 21, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v26 = *(_QWORD *)(a1 + 1216);
    }
    v22.i64[0] = *(_QWORD *)(a1 + 152);
    v22.i32[2] = *(_DWORD *)(a1 + 160);
    v23.i64[0] = *(_QWORD *)(a1 + 168);
    v23.i32[2] = *(_DWORD *)(a1 + 176);
    v24.i32[0] = *(_DWORD *)(a1 + 192);
    v25.i64[0] = *(_QWORD *)(a1 + 200);
    v25.i32[2] = *(_DWORD *)(a1 + 208);
    *(_QWORD *)&v27 = vzip1q_s32(v22, v23).u64[0];
    v28 = (int8x16_t)vnegq_f32(v25);
    v29 = (int8x16_t)vtrn2q_s32(v22, v23);
    v29.i32[2] = HIDWORD(*(_QWORD *)(a1 + 184));
    v30 = (int8x16_t)vzip2q_s32(v22, v23);
    *(float32x2_t *)&v31 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)&v27, *(float *)v28.i32), *(float32x2_t *)v29.i8, *(float32x2_t *)v25.f32, 1), *(float32x2_t *)v30.i8, v25, 2);
    v30.i32[2] = v24.i32[0];
    *((_QWORD *)&v31 + 1) = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(a1 + 184), *(float32x2_t *)v28.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(a1 + 184), 1), *(float32x2_t *)v25.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v28, v28, 8uLL), v24).u32[0]);
    *((_QWORD *)&v27 + 1) = *(_QWORD *)(a1 + 184);
    HIDWORD(v32) = 0;
    LODWORD(v32) = vdupq_lane_s32(*(int32x2_t *)&v29, 0).i32[3];
    *(_QWORD *)((char *)&v32 + 4) = vextq_s8(v29, v30, 4uLL).u64[0];
    v30.i64[1] = vdupq_laneq_s32((int32x4_t)v30, 2).u32[0];
    v33 = (_OWORD *)(*(_QWORD *)(v26 + 8) + 324);
    *v33 = v27;
    v33[1] = v32;
    v33[2] = v30;
    v33[3] = v31;
    (*(void (**)(_QWORD, void **))(**(_QWORD **)(a1 + 1216) + 16))(*(_QWORD *)(a1 + 1216), __p);
  }
LABEL_117:
  *(_BYTE *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 72) = 0;
  *(_BYTE *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  *(_BYTE *)(a2 + 120) = 0;
  *(_BYTE *)(a2 + 184) = 0;
  *(_BYTE *)(a2 + 192) = 0;
  *(_BYTE *)(a2 + 280) = 0;
  *(_BYTE *)(a2 + 288) = 0;
  *(_BYTE *)(a2 + 400) = 0;
  *(_BYTE *)(a2 + 408) = 0;
  *(_BYTE *)(a2 + 432) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_WORD *)(a2 + 32) = 0;
  v82 = *(_QWORD *)(a1 + 1296);
  object[23] = 6;
  strcpy(object, "VLM:ME");
  sub_223470EF4(v82, (unsigned __int8 **)__p, (uint64_t)object, v5);
  if ((object[23] & 0x80000000) != 0)
    operator delete(*(void **)object);
  v83 = (void **)(a2 + 8);
  v84 = *(_QWORD *)(a2 + 8);
  if (v84)
  {
    v85 = *(_QWORD *)(a2 + 16);
    v86 = *(void **)(a2 + 8);
    if (v85 != v84)
    {
      do
      {
        v87 = *(std::__shared_weak_count **)(v85 - 96);
        if (v87)
        {
          v88 = (unint64_t *)&v87->__shared_owners_;
          do
            v89 = __ldaxr(v88);
          while (__stlxr(v89 - 1, v88));
          if (!v89)
          {
            ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
            std::__shared_weak_count::__release_weak(v87);
          }
        }
        v85 -= 120;
      }
      while (v85 != v84);
      v86 = *v83;
    }
    *(_QWORD *)(a2 + 16) = v84;
    operator delete(v86);
    *v83 = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
  }
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__p;
  *(void **)(a2 + 24) = __p[2];
  memset(__p, 0, 24);
  sub_223562C00((uint64_t *)(a2 + 8), v5);
  if (*(_BYTE *)(a1 + 493))
  {
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(_QWORD *)a1 + 72))(object, a1);
    v90 = *(_QWORD *)(a1 + 1304);
    HIBYTE(rep) = 7;
    strcpy((char *)v107, "OCP:LRM");
    sub_223470EF4(v90, (unsigned __int8 **)object, (uint64_t)v107, v5);
    if (SHIBYTE(rep) < 0)
    {
      operator delete(v107[0]);
      v91 = (void **)(a2 + 408);
      if (*(_BYTE *)(a2 + 432))
        goto LABEL_133;
    }
    else
    {
      v91 = (void **)(a2 + 408);
      if (*(_BYTE *)(a2 + 432))
      {
LABEL_133:
        v92 = (char *)*v91;
        if (*v91)
        {
          v93 = *(char **)(a2 + 416);
          v94 = *v91;
          if (v93 != v92)
          {
            do
            {
              v95 = (std::__shared_weak_count *)*((_QWORD *)v93 - 12);
              if (v95)
              {
                v96 = (unint64_t *)&v95->__shared_owners_;
                do
                  v97 = __ldaxr(v96);
                while (__stlxr(v97 - 1, v96));
                if (!v97)
                {
                  ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
                  std::__shared_weak_count::__release_weak(v95);
                }
              }
              v93 -= 120;
            }
            while (v93 != v92);
            v94 = *v91;
          }
          *(_QWORD *)(a2 + 416) = v92;
          operator delete(v94);
          *v91 = 0;
          v91[1] = 0;
          v91[2] = 0;
        }
        *v91 = 0;
        v91[1] = 0;
        v91[2] = 0;
        goto LABEL_147;
      }
    }
    *v91 = 0;
    v91[1] = 0;
    v91[2] = 0;
    *(_BYTE *)(a2 + 432) = 1;
LABEL_147:
    v98 = *(_QWORD *)&object[16];
    *(_OWORD *)v91 = *(_OWORD *)object;
    *(_QWORD *)(a2 + 424) = v98;
  }
  kdebug_trace();
  v99 = (char *)__p[0];
  if (__p[0])
  {
    v100 = (char *)__p[1];
    v101 = __p[0];
    if (__p[1] != __p[0])
    {
      do
      {
        v102 = (std::__shared_weak_count *)*((_QWORD *)v100 - 12);
        if (v102)
        {
          v103 = (unint64_t *)&v102->__shared_owners_;
          do
            v104 = __ldaxr(v103);
          while (__stlxr(v104 - 1, v103));
          if (!v104)
          {
            ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
            std::__shared_weak_count::__release_weak(v102);
          }
        }
        v100 -= 120;
      }
      while (v100 != v99);
      v101 = __p[0];
    }
    __p[1] = v99;
    operator delete(v101);
  }
}

void sub_22355E464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,void *__p,void *a39,int a40,__int16 a41,char a42,char a43,char a44,int a45,__int16 a46,char a47,char a48)
{
  if (a44)
  {
    if (a43 < 0)
      operator delete(__p);
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a15);
  sub_2231874DC((uint64_t)&a28);
  sub_223295868(&a34);
  _Unwind_Resume(a1);
}

void sub_22355E608(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CAF28);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CAF28))
  {
    sub_22455F53C(&v5);
    sub_223174DE4(__p, "cv3d.recon.sng");
    sub_2232300E0(&v5, (uint64_t)__p, &qword_2540CAF20);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_2540CAF28);
  }
  *a1 = qword_2540CAF20;
}

void sub_22355E6A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CAF28);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CAF28);
  _Unwind_Resume(a1);
}

void sub_22355E6FC(float32x2_t *a1@<X0>, void **a2@<X8>)
{
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  const char *v10;
  unsigned __int8 v11;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  int32x4_t v16;
  float32x2_t v17;
  float32x4_t v18;
  char *v19;
  char *v20;
  void *v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  char *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  char *v29;
  int32x4_t v30;
  char *i;
  std::__shared_weak_count *v32;
  _QWORD *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  __int128 v38;
  int8x16_t v39;
  int8x16_t v40;
  int8x16_t v41;
  __int128 v42;
  __int128 v43;
  _OWORD *v44;
  unsigned __int8 v45;
  const char *v46;
  size_t v47;
  void *v48;
  unint64_t v49;
  const char *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  size_t v60;
  std::__shared_weak_count_vtbl *v61;
  std::__shared_weak_count *v62;
  std::__shared_weak_count *v63;
  unint64_t *p_shared_owners;
  unint64_t v65;
  unint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  uint64_t v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  void *v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  _QWORD v95[3];
  int v96;
  const char *v97;
  int v98;
  const char *v99;
  uint64_t v100;
  std::__shared_weak_count *v101;
  uint64_t v102;
  void *object;
  void *v104[2];
  __int128 v105;
  void *__p[2];
  unint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  if (a1[156].i8[2])
  {
    sub_22355E608(&v102);
    if (**(int **)(v102 + 56) > 3)
      return;
    v3 = *(unsigned __int8 *)(v102 + 72);
    v4 = sub_22322F254(v102, "OSLogSurrogateAppender", 1, 0);
    v5 = v4;
    if (!v3 && v4 == 0)
      return;
    v95[0] = &v102;
    v95[1] = std::chrono::steady_clock::now().__d_.__rep_;
    v95[2] = std::chrono::system_clock::now().__d_.__rep_;
    v96 = 3;
    v97 = "unknown file";
    v98 = 479;
    v100 = 0;
    v101 = 0;
    v99 = "unknown function";
    v7 = v102;
    v8 = v102 + 16;
    if (*(char *)(v102 + 39) < 0)
    {
      v10 = *(const char **)(v102 + 16);
      v9 = *(_QWORD *)(v102 + 24);
      v45 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v45 & 1) != 0)
        goto LABEL_50;
    }
    else
    {
      v9 = *(unsigned __int8 *)(v102 + 39);
      v10 = (const char *)(*(_QWORD *)v95[0] + 16);
      v11 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v11 & 1) != 0)
        goto LABEL_50;
    }
    if (__cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)&object);
      sub_223199C58("com.apple.cv3d", (unint64_t)&object, &xmmword_255788F40);
      if ((_BYTE)v105 && SHIBYTE(v104[1]) < 0)
        operator delete(object);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
    }
LABEL_50:
    if (byte_255788F57 >= 0)
      v46 = (const char *)&xmmword_255788F40;
    else
      v46 = (const char *)xmmword_255788F40;
    if (byte_255788F57 >= 0)
      v47 = byte_255788F57;
    else
      v47 = *((_QWORD *)&xmmword_255788F40 + 1);
    object = os_log_create(v46, v10);
    v48 = v104;
    if (v47 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    if (v47 >= 0x17)
    {
      v49 = v5;
      v50 = v10;
      v51 = v7;
      v52 = v3;
      v53 = v8;
      v54 = (v47 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v47 | 7) != 0x17)
        v54 = v47 | 7;
      v55 = v54 + 1;
      v48 = operator new(v54 + 1);
      v104[1] = (void *)v47;
      *(_QWORD *)&v105 = v55 | 0x8000000000000000;
      v104[0] = v48;
      v8 = v53;
      v3 = v52;
      v7 = v51;
      v10 = v50;
      v5 = v49;
    }
    else
    {
      BYTE7(v105) = v47;
      if (!v47)
      {
LABEL_64:
        *((_BYTE *)v48 + v47) = 0;
        BYTE8(v105) = 1;
        v56 = __p;
        if (v9 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v9 >= 0x17)
        {
          v57 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v9 | 7) != 0x17)
            v57 = v9 | 7;
          v58 = v57 + 1;
          v56 = operator new(v57 + 1);
          __p[1] = (void *)v9;
          v107 = v58 | 0x8000000000000000;
          __p[0] = v56;
        }
        else
        {
          HIBYTE(v107) = v9;
          if (!v9)
            goto LABEL_72;
        }
        memmove(v56, v10, v9);
LABEL_72:
        *((_BYTE *)v56 + v9) = 0;
        v108 = 1;
        v59 = object;
        if (SHIBYTE(v107) < 0)
          operator delete(__p[0]);
        if (BYTE8(v105) && SBYTE7(v105) < 0)
          operator delete(v104[0]);
        if (object)
          os_release(object);
        if (v5 && *(_QWORD *)(v5 + 24))
        {
          v60 = _os_log_pack_size();
          v61 = (std::__shared_weak_count_vtbl *)operator new(v60, (std::align_val_t)8uLL);
          v62 = (std::__shared_weak_count *)operator new();
          v63 = v62;
          v62->__shared_owners_ = 0;
          p_shared_owners = (unint64_t *)&v62->__shared_owners_;
          v62->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
          v62->__shared_weak_owners_ = 0;
          v62[1].__vftable = v61;
          object = v61;
          v104[0] = v61;
          v104[1] = v62;
          do
            v65 = __ldxr(p_shared_owners);
          while (__stxr(v65 + 1, p_shared_owners));
          v105 = 0uLL;
          __p[0] = 0;
          do
            v66 = __ldaxr(p_shared_owners);
          while (__stlxr(v66 - 1, p_shared_owners));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v63);
          }
          v67 = object;
          *(_WORD *)_os_log_pack_fill() = 0;
          v68 = operator new();
          v69 = *(unsigned __int8 *)(v7 + 39);
          if ((v69 & 0x80u) == 0)
            v70 = v8;
          else
            v70 = *(_QWORD *)(v7 + 16);
          if ((v69 & 0x80u) != 0)
            v69 = *(_QWORD *)(v7 + 24);
          *(_QWORD *)v68 = v67;
          *(_OWORD *)(v68 + 8) = *(_OWORD *)v104;
          v104[0] = 0;
          v104[1] = 0;
          *(_OWORD *)(v68 + 24) = v105;
          v105 = 0uLL;
          *(_QWORD *)(v68 + 40) = v70;
          *(_QWORD *)(v68 + 48) = v69;
          *(_BYTE *)(v68 + 56) = 1;
          v109 = 0;
          v110 = v68;
          (*(void (**)(_QWORD, uint64_t *))(**(_QWORD **)(v5 + 24) + 40))(*(_QWORD *)(v5 + 24), &v110);
          v71 = v110;
          v110 = 0;
          if (v71)
          {
            v72 = *(std::__shared_weak_count **)(v71 + 32);
            if (v72)
            {
              v73 = (unint64_t *)&v72->__shared_owners_;
              do
                v74 = __ldaxr(v73);
              while (__stlxr(v74 - 1, v73));
              if (!v74)
              {
                ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
                std::__shared_weak_count::__release_weak(v72);
              }
            }
            v75 = *(std::__shared_weak_count **)(v71 + 16);
            if (v75)
            {
              v76 = (unint64_t *)&v75->__shared_owners_;
              do
                v77 = __ldaxr(v76);
              while (__stlxr(v77 - 1, v76));
              if (!v77)
              {
                ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
                std::__shared_weak_count::__release_weak(v75);
              }
            }
            MEMORY[0x227684CE8](v71, 0x10F0C40B62ED6C6);
            v78 = v109;
            v109 = 0;
            if (v78)
            {
              v79 = *(std::__shared_weak_count **)(v78 + 32);
              if (v79)
              {
                v80 = (unint64_t *)&v79->__shared_owners_;
                do
                  v81 = __ldaxr(v80);
                while (__stlxr(v81 - 1, v80));
                if (!v81)
                {
                  ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
                  std::__shared_weak_count::__release_weak(v79);
                }
              }
              v82 = *(std::__shared_weak_count **)(v78 + 16);
              if (v82)
              {
                v83 = (unint64_t *)&v82->__shared_owners_;
                do
                  v84 = __ldaxr(v83);
                while (__stlxr(v84 - 1, v83));
                if (!v84)
                {
                  ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
                  std::__shared_weak_count::__release_weak(v82);
                }
              }
              MEMORY[0x227684CE8](v78, 0x10F0C40B62ED6C6);
            }
          }
          v85 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
          if (*((_QWORD *)&v105 + 1))
          {
            v86 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
            do
              v87 = __ldaxr(v86);
            while (__stlxr(v87 - 1, v86));
            if (!v87)
            {
              ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
              std::__shared_weak_count::__release_weak(v85);
            }
          }
          v88 = (std::__shared_weak_count *)v104[1];
          if (v104[1])
          {
            v89 = (unint64_t *)((char *)v104[1] + 8);
            do
              v90 = __ldaxr(v89);
            while (__stlxr(v90 - 1, v89));
            if (!v90)
            {
              ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
              std::__shared_weak_count::__release_weak(v88);
            }
          }
        }
        else
        {
          os_log_type_enabled(v59, OS_LOG_TYPE_INFO);
          LOWORD(object) = 0;
          v91 = (void *)_os_log_send_and_compose_impl();
          if (v91)
            free(v91);
        }
        if (v3)
        {
          sub_22322C138((uint64_t)v95, "[MeshingEngine] Hiding the global mesh because of the meshing status");
          sub_223182C08((uint64_t)v95);
        }
        sub_223182C08((uint64_t)v95);
        v92 = v101;
        if (v101)
        {
          v93 = (unint64_t *)&v101->__shared_owners_;
          do
            v94 = __ldaxr(v93);
          while (__stlxr(v94 - 1, v93));
          if (!v94)
          {
            ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
            std::__shared_weak_count::__release_weak(v92);
          }
        }
        return;
      }
    }
    memmove(v48, v46, v47);
    goto LABEL_64;
  }
  v13 = a1[46].u8[4];
  v14 = (_QWORD *)a1[151];
  if (v13 && (v15 = *(_QWORD *)(v14[1] + 8)) != 0)
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)v15 + 40))(&object, v15);
    v19 = (char *)*a2;
    if (*a2)
    {
      v20 = (char *)a2[1];
      v21 = *a2;
      if (v20 == v19)
        goto LABEL_31;
      do
      {
        v22 = (std::__shared_weak_count *)*((_QWORD *)v20 - 12);
        if (v22)
        {
          v23 = (unint64_t *)&v22->__shared_owners_;
          do
            v24 = __ldaxr(v23);
          while (__stlxr(v24 - 1, v23));
          if (!v24)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
        v20 -= 120;
      }
      while (v20 != v19);
LABEL_30:
      v21 = *a2;
LABEL_31:
      a2[1] = v19;
      operator delete(v21);
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0;
    }
  }
  else
  {
    (*(void (**)(void **__return_ptr))(*v14 + 32))(&object);
    v19 = (char *)*a2;
    if (*a2)
    {
      v25 = (char *)a2[1];
      v21 = *a2;
      if (v25 == v19)
        goto LABEL_31;
      do
      {
        v26 = (std::__shared_weak_count *)*((_QWORD *)v25 - 12);
        if (v26)
        {
          v27 = (unint64_t *)&v26->__shared_owners_;
          do
            v28 = __ldaxr(v27);
          while (__stlxr(v28 - 1, v27));
          if (!v28)
          {
            ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
            std::__shared_weak_count::__release_weak(v26);
          }
        }
        v25 -= 120;
      }
      while (v25 != v19);
      goto LABEL_30;
    }
  }
  v29 = (char *)object;
  *a2 = object;
  v30 = *(int32x4_t *)v104;
  *(_OWORD *)(a2 + 1) = *(_OWORD *)v104;
  for (i = (char *)v30.i64[0]; v29 != i; v29 += 120)
  {
    v33 = (_QWORD *)*((_QWORD *)v29 + 2);
    v32 = (std::__shared_weak_count *)*((_QWORD *)v29 + 3);
    object = v33;
    v104[0] = v32;
    if (v32)
    {
      v34 = (unint64_t *)&v32->__shared_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
    }
    if (!v33
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 491, (uint64_t)"mesh0 != nullptr", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    if (v33[10] - v33[9] != v33[1] - *v33)
    {
      sub_223CD920C((const void **)v33, v33 + 14, (char **)v33 + 9);
      *((_DWORD *)v33 + 26) = 1;
    }
    if (v32)
    {
      v36 = (unint64_t *)&v32->__shared_owners_;
      do
        v37 = __ldaxr(v36);
      while (__stlxr(v37 - 1, v36));
      if (!v37)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
  }
  if (a1[51].i8[0])
  {
    *(float32x2_t *)v30.i8 = a1[19];
    v30.i32[2] = a1[20].i32[0];
    *(float32x2_t *)v16.i8 = a1[21];
    v16.i32[2] = a1[22].i32[0];
    v17.i32[0] = a1[24].i32[0];
    *(float32x2_t *)v18.f32 = a1[25];
    v18.i32[2] = a1[26].i32[0];
    *(_QWORD *)&v38 = vzip1q_s32(v30, v16).u64[0];
    v39 = (int8x16_t)vnegq_f32(v18);
    v40 = (int8x16_t)vtrn2q_s32(v30, v16);
    v40.i32[2] = HIDWORD(*(_QWORD *)&a1[23]);
    v41 = (int8x16_t)vzip2q_s32(v30, v16);
    *(float32x2_t *)&v42 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)&v38, *(float *)v39.i32), *(float32x2_t *)v40.i8, *(float32x2_t *)v18.f32, 1), *(float32x2_t *)v41.i8, v18, 2);
    v41.i32[2] = v17.i32[0];
    *((_QWORD *)&v42 + 1) = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(a1[23], *(float32x2_t *)v39.i8), (float32x2_t)vdup_lane_s32((int32x2_t)a1[23], 1), *(float32x2_t *)v18.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL), v17).u32[0]);
    *((_QWORD *)&v38 + 1) = *(_QWORD *)&a1[23];
    HIDWORD(v43) = 0;
    LODWORD(v43) = vdupq_lane_s32(*(int32x2_t *)&v40, 0).i32[3];
    *(_QWORD *)((char *)&v43 + 4) = vextq_s8(v40, v41, 4uLL).u64[0];
    v41.i64[1] = vdupq_laneq_s32((int32x4_t)v41, 2).u32[0];
    v44 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)&a1[152] + 8) + 324);
    *v44 = v38;
    v44[1] = v43;
    v44[2] = v41;
    v44[3] = v42;
    (*(void (**)(_QWORD, void **))(**(_QWORD **)&a1[152] + 16))(*(_QWORD *)&a1[152], a2);
  }
}

void sub_22355F0D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29)
{
  if (a29)
  {
    if (a28 < 0)
      operator delete(__p);
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a13);
  sub_223295868(a12);
  _Unwind_Resume(a1);
}

void sub_22355F118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5, ...)
{
  uint64_t v5;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  sub_22319A054((uint64_t *)(v5 - 96));
  sub_22319A054((uint64_t *)(v5 - 104));
  sub_223199DE8((uint64_t)va1);
  sub_223182DAC((uint64_t)va);
  sub_223295868(a5);
  _Unwind_Resume(a1);
}

void sub_22355F154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  MEMORY[0x227684CE8](v5, 0x10D0C40B950D02ALL);
  sub_223182DAC((uint64_t)va);
  sub_223295868(a5);
  _Unwind_Resume(a1);
}

void sub_22355F188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223182DAC((uint64_t)va);
  sub_223295868(a5);
  _Unwind_Resume(a1);
}

void sub_22355F1A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  sub_223295868(a12);
  _Unwind_Resume(a1);
}

void sub_22355F1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223182DAC((uint64_t)va);
  sub_223295868(a5);
  _Unwind_Resume(a1);
}

void sub_22355F1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  sub_223295868(a12);
  _Unwind_Resume(a1);
}

void sub_22355F1F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  sub_223295868(a12);
  _Unwind_Resume(a1);
}

void sub_22355F204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *object,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30)
{
  if (a30 && a29 < 0)
    operator delete(__p);
  if (object)
    os_release(object);
  sub_223182DAC((uint64_t)&a13);
  sub_223295868(a12);
  _Unwind_Resume(a1);
}

void sub_22355F250(_Unwind_Exception *a1)
{
  void **v1;

  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22355F268(_Unwind_Exception *a1)
{
  void **v1;

  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22355F280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  sub_223167354((uint64_t)va);
  sub_223295868(a5);
  _Unwind_Resume(a1);
}

void **sub_22355F2A0(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  size_t v8;
  const char *v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  const char *v12;
  size_t v13;
  void *v14;
  unint64_t v15;
  const char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  std::__shared_weak_count_vtbl *v26;
  std::__shared_weak_count *v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  void *v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t *v70;
  unint64_t v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  uint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  void *v91;
  uint64_t *v92;
  std::__shared_weak_count *rep;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v94;
  int v95;
  const char *v96;
  int v97;
  const char *v98;
  uint64_t v99;
  std::__shared_weak_count *v100;
  uint64_t v101;
  void *object;
  void *v103[2];
  __int128 v104;
  void *__p[2];
  unint64_t v106;
  char v107;
  uint64_t v108;
  void *v109[2];

  sub_223227930((uint64_t *)&v91);
  v2 = atomic_load((unsigned __int8 *)&qword_2540CAF18);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CAF18))
  {
    sub_22455F53C(&v92);
    sub_223174DE4(&object, "cv3dapi.recon3d");
    sub_2232300E0(&v92, (uint64_t)&object, &qword_2540CAF10);
    if (SHIBYTE(v103[1]) < 0)
      operator delete(object);
    __cxa_guard_release(&qword_2540CAF18);
  }
  v101 = qword_2540CAF10;
  if (**(int **)(qword_2540CAF10 + 56) <= 3)
  {
    v3 = *(unsigned __int8 *)(qword_2540CAF10 + 72);
    v4 = sub_22322F254(qword_2540CAF10, "OSLogSurrogateAppender", 1, 0);
    v5 = v4;
    if (v3 || v4 != 0)
    {
      v92 = &v101;
      rep = (std::__shared_weak_count *)std::chrono::steady_clock::now().__d_.__rep_;
      v94 = std::chrono::system_clock::now().__d_.__rep_;
      v95 = 3;
      v96 = "unknown file";
      v97 = 177;
      v99 = 0;
      v100 = 0;
      v98 = "unknown function";
      v7 = *v92;
      if (*(char *)(*v92 + 39) < 0)
      {
        v9 = *(const char **)(v7 + 16);
        v8 = *(_QWORD *)(v7 + 24);
        v90 = *v92 + 16;
        v11 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v11 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        v8 = *(unsigned __int8 *)(*v92 + 39);
        v9 = (const char *)(*v92 + 16);
        v90 = (uint64_t)v9;
        v10 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v10 & 1) != 0)
          goto LABEL_11;
      }
      if (__cxa_guard_acquire(&qword_255788F58))
      {
        sub_224568628((uint64_t)&object);
        sub_223199C58("com.apple.cv3d", (unint64_t)&object, &xmmword_255788F40);
        if ((_BYTE)v104 && SHIBYTE(v103[1]) < 0)
          operator delete(object);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
        __cxa_guard_release(&qword_255788F58);
      }
LABEL_11:
      if (byte_255788F57 >= 0)
        v12 = (const char *)&xmmword_255788F40;
      else
        v12 = (const char *)xmmword_255788F40;
      if (byte_255788F57 >= 0)
        v13 = byte_255788F57;
      else
        v13 = *((_QWORD *)&xmmword_255788F40 + 1);
      object = os_log_create(v12, v9);
      v14 = v103;
      if (v13 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v13 >= 0x17)
      {
        v15 = v5;
        v16 = v9;
        v17 = v7;
        v18 = v3;
        v19 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v13 | 7) != 0x17)
          v19 = v13 | 7;
        v20 = v19 + 1;
        v14 = operator new(v19 + 1);
        v103[1] = (void *)v13;
        *(_QWORD *)&v104 = v20 | 0x8000000000000000;
        v103[0] = v14;
        v3 = v18;
        v7 = v17;
        v9 = v16;
        v5 = v15;
      }
      else
      {
        BYTE7(v104) = v13;
        if (!v13)
        {
LABEL_25:
          *((_BYTE *)v14 + v13) = 0;
          BYTE8(v104) = 1;
          v21 = __p;
          if (v8 > 0x7FFFFFFFFFFFFFF7)
            sub_22316DBC0();
          if (v8 >= 0x17)
          {
            v23 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v8 | 7) != 0x17)
              v23 = v8 | 7;
            v24 = v23 + 1;
            v21 = operator new(v23 + 1);
            __p[1] = (void *)v8;
            v106 = v24 | 0x8000000000000000;
            __p[0] = v21;
          }
          else
          {
            HIBYTE(v106) = v8;
            if (!v8)
            {
              LOBYTE(__p[0]) = 0;
              v107 = 1;
              v22 = object;
              if ((SHIBYTE(v106) & 0x80000000) == 0)
                goto LABEL_29;
              goto LABEL_35;
            }
          }
          memmove(v21, v9, v8);
          *((_BYTE *)v21 + v8) = 0;
          v107 = 1;
          v22 = object;
          if ((SHIBYTE(v106) & 0x80000000) == 0)
          {
LABEL_29:
            if (!BYTE8(v104))
              goto LABEL_38;
            goto LABEL_36;
          }
LABEL_35:
          operator delete(__p[0]);
          if (!BYTE8(v104))
          {
LABEL_38:
            if (object)
              os_release(object);
            if (v5 && *(_QWORD *)(v5 + 24))
            {
              v25 = _os_log_pack_size();
              v26 = (std::__shared_weak_count_vtbl *)operator new(v25, (std::align_val_t)8uLL);
              v27 = (std::__shared_weak_count *)operator new();
              v28 = v27;
              v27->__shared_owners_ = 0;
              p_shared_owners = (unint64_t *)&v27->__shared_owners_;
              v27->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
              v27->__shared_weak_owners_ = 0;
              v27[1].__vftable = v26;
              object = v26;
              v103[0] = v26;
              v103[1] = v27;
              do
                v30 = __ldxr(p_shared_owners);
              while (__stxr(v30 + 1, p_shared_owners));
              v104 = 0uLL;
              __p[0] = 0;
              do
                v31 = __ldaxr(p_shared_owners);
              while (__stlxr(v31 - 1, p_shared_owners));
              if (!v31)
              {
                ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
                std::__shared_weak_count::__release_weak(v28);
              }
              v32 = object;
              *(_WORD *)_os_log_pack_fill() = 0;
              v33 = (char *)operator new();
              v34 = *(unsigned __int8 *)(v7 + 39);
              v35 = v90;
              if ((v34 & 0x80u) != 0)
              {
                v35 = *(_QWORD *)(v7 + 16);
                v34 = *(_QWORD *)(v7 + 24);
              }
              *(_QWORD *)v33 = v32;
              *(_OWORD *)(v33 + 8) = *(_OWORD *)v103;
              v103[0] = 0;
              v103[1] = 0;
              *(_OWORD *)(v33 + 24) = v104;
              v104 = 0uLL;
              *((_QWORD *)v33 + 5) = v35;
              *((_QWORD *)v33 + 6) = v34;
              v33[56] = 1;
              v108 = 0;
              v109[0] = v33;
              (*(void (**)(_QWORD, void **))(**(_QWORD **)(v5 + 24) + 40))(*(_QWORD *)(v5 + 24), v109);
              v36 = v109[0];
              v109[0] = 0;
              if (v36)
              {
                v37 = (std::__shared_weak_count *)*((_QWORD *)v36 + 4);
                if (v37)
                {
                  v38 = (unint64_t *)&v37->__shared_owners_;
                  do
                    v39 = __ldaxr(v38);
                  while (__stlxr(v39 - 1, v38));
                  if (!v39)
                  {
                    ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
                    std::__shared_weak_count::__release_weak(v37);
                  }
                }
                v40 = (std::__shared_weak_count *)*((_QWORD *)v36 + 2);
                if (v40)
                {
                  v41 = (unint64_t *)&v40->__shared_owners_;
                  do
                    v42 = __ldaxr(v41);
                  while (__stlxr(v42 - 1, v41));
                  if (!v42)
                  {
                    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
                    std::__shared_weak_count::__release_weak(v40);
                  }
                }
                MEMORY[0x227684CE8](v36, 0x10F0C40B62ED6C6);
                v43 = v108;
                v108 = 0;
                if (v43)
                {
                  v44 = *(std::__shared_weak_count **)(v43 + 32);
                  if (v44)
                  {
                    v45 = (unint64_t *)&v44->__shared_owners_;
                    do
                      v46 = __ldaxr(v45);
                    while (__stlxr(v46 - 1, v45));
                    if (!v46)
                    {
                      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
                      std::__shared_weak_count::__release_weak(v44);
                    }
                  }
                  v47 = *(std::__shared_weak_count **)(v43 + 16);
                  if (v47)
                  {
                    v48 = (unint64_t *)&v47->__shared_owners_;
                    do
                      v49 = __ldaxr(v48);
                    while (__stlxr(v49 - 1, v48));
                    if (!v49)
                    {
                      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
                      std::__shared_weak_count::__release_weak(v47);
                    }
                  }
                  MEMORY[0x227684CE8](v43, 0x10F0C40B62ED6C6);
                }
              }
              v50 = (std::__shared_weak_count *)*((_QWORD *)&v104 + 1);
              if (*((_QWORD *)&v104 + 1))
              {
                v51 = (unint64_t *)(*((_QWORD *)&v104 + 1) + 8);
                do
                  v52 = __ldaxr(v51);
                while (__stlxr(v52 - 1, v51));
                if (!v52)
                {
                  ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
                  std::__shared_weak_count::__release_weak(v50);
                }
              }
              v53 = (std::__shared_weak_count *)v103[1];
              if (v103[1])
              {
                v54 = (unint64_t *)((char *)v103[1] + 8);
                do
                  v55 = __ldaxr(v54);
                while (__stlxr(v55 - 1, v54));
                if (!v55)
                {
                  ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
                  std::__shared_weak_count::__release_weak(v53);
                }
              }
            }
            else
            {
              os_log_type_enabled(v22, OS_LOG_TYPE_INFO);
              LOWORD(object) = 0;
              v56 = (void *)_os_log_send_and_compose_impl();
              if (v56)
                free(v56);
            }
            if (v3)
            {
              sub_22322C138((uint64_t)&v92, "ME:Initializing");
              sub_223182C08((uint64_t)&v92);
            }
            sub_223182C08((uint64_t)&v92);
            v57 = v100;
            if (v100)
            {
              v58 = (unint64_t *)&v100->__shared_owners_;
              do
                v59 = __ldaxr(v58);
              while (__stlxr(v59 - 1, v58));
              if (!v59)
              {
                ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
                std::__shared_weak_count::__release_weak(v57);
              }
            }
            goto LABEL_92;
          }
LABEL_36:
          if (SBYTE7(v104) < 0)
            operator delete(v103[0]);
          goto LABEL_38;
        }
      }
      memmove(v14, v12, v13);
      goto LABEL_25;
    }
  }
LABEL_92:
  v60 = (_QWORD *)operator new();
  sub_223A8F27C(v60, *(_BYTE *)(a1 + 421), *(float *)(a1 + 412), *(float *)(a1 + 416));
  v61 = *(_QWORD *)(a1 + 1216);
  *(_QWORD *)(a1 + 1216) = v60;
  if (v61)
    (*(void (**)(uint64_t))(*(_QWORD *)v61 + 8))(v61);
  v62 = operator new();
  *(_QWORD *)(v62 + 32) = 0;
  *(_OWORD *)v62 = 0u;
  *(_OWORD *)(v62 + 16) = 0u;
  *(_DWORD *)(v62 + 32) = 1065353216;
  v63 = *(_QWORD *)(a1 + 1224);
  *(_QWORD *)(a1 + 1224) = v62;
  if (v63)
  {
    v64 = *(_QWORD **)(v63 + 16);
    if (v64)
    {
      do
      {
        v65 = (_QWORD *)*v64;
        sub_223523BA4((uint64_t)(v64 + 2));
        operator delete(v64);
        v64 = v65;
      }
      while (v65);
    }
    v66 = *(void **)v63;
    *(_QWORD *)v63 = 0;
    if (v66)
      operator delete(v66);
    MEMORY[0x227684CE8](v63, 0x10A0C408EF24B1CLL);
  }
  *(_QWORD *)(a1 + 1256) = 0;
  *(_OWORD *)(a1 + 1232) = 0u;
  *(_QWORD *)(a1 + 1246) = 0;
  v67 = *(_QWORD *)(a1 + 1208);
  *(_QWORD *)(a1 + 1208) = 0;
  if (v67)
    (*(void (**)(uint64_t))(*(_QWORD *)v67 + 8))(v67);
  sub_223227930((uint64_t *)v109);
  sub_2232279C4(&v92);
  v68 = operator new();
  v69 = v68;
  object = v92;
  v103[0] = rep;
  if (rep)
  {
    v70 = (unint64_t *)&rep->__shared_owners_;
    do
      v71 = __ldxr(v70);
    while (__stxr(v71 + 1, v70));
  }
  sub_22351ADF0(v68, a1 + 8, (uint64_t)&object);
  v77 = (std::__shared_weak_count *)v103[0];
  if (v103[0])
  {
    v78 = (unint64_t *)((char *)v103[0] + 8);
    do
      v79 = __ldaxr(v78);
    while (__stlxr(v79 - 1, v78));
    if (!v79)
    {
      ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
      std::__shared_weak_count::__release_weak(v77);
    }
  }
  v80 = *(_QWORD *)(a1 + 1208);
  *(_QWORD *)(a1 + 1208) = v69;
  if (v80)
    (*(void (**)(uint64_t))(*(_QWORD *)v80 + 8))(v80);
  v81 = rep;
  if (rep)
  {
    v82 = (unint64_t *)&rep->__shared_owners_;
    do
      v83 = __ldaxr(v82);
    while (__stlxr(v83 - 1, v82));
    if (!v83)
    {
      ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
      std::__shared_weak_count::__release_weak(v81);
    }
  }
  sub_22322797C(v109, v72, v73, v74, v75, v76);
  **(_BYTE **)(a1 + 1296) = 1;
  **(_BYTE **)(a1 + 1304) = 1;
  **(_BYTE **)(a1 + 1312) = 1;
  return sub_22322797C(&v91, v84, v85, v86, v87, v88);
}

void sub_22355FC00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31)
{
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (a31)
  {
    if (a30 < 0)
      operator delete(__p);
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a13);
  sub_22322797C(&a12, v32, v33, v34, v35, v36);
  _Unwind_Resume(a1);
}

void sub_22355FC48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (a28 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_2540CAF18);
  sub_22322797C(&a12, v29, v30, v31, v32, v33);
  _Unwind_Resume(a1);
}

void sub_22355FC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  va_list va;
  uint64_t v13;
  va_list va1;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  va_list va2;

  va_start(va2, a4);
  va_start(va1, a4);
  va_start(va, a4);
  v11 = va_arg(va1, void *);
  va_copy(va2, va1);
  v13 = va_arg(va2, _QWORD);
  v15 = va_arg(va2, _QWORD);
  v16 = va_arg(va2, _QWORD);
  v17 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  v20 = va_arg(va2, _QWORD);
  v21 = va_arg(va2, _QWORD);
  v22 = va_arg(va2, _QWORD);
  v23 = va_arg(va2, _QWORD);
  sub_22319A054((uint64_t *)(v4 - 96));
  sub_22319A054((uint64_t *)(v4 - 104));
  sub_223199DE8((uint64_t)va2);
  sub_223182DAC((uint64_t)va1);
  sub_22322797C((void **)va, v6, v7, v8, v9, v10);
  _Unwind_Resume(a1);
}

void sub_22355FCC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v11 = va_arg(va1, void *);
  MEMORY[0x227684CE8](v4, 0x10D0C40B950D02ALL);
  sub_223182DAC((uint64_t)va1);
  sub_22322797C((void **)va, v6, v7, v8, v9, v10);
  _Unwind_Resume(a1);
}

void sub_22355FCF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v10 = va_arg(va1, void *);
  sub_223182DAC((uint64_t)va1);
  sub_22322797C((void **)va, v5, v6, v7, v8, v9);
  _Unwind_Resume(a1);
}

void sub_22355FD18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v10 = va_arg(va1, void *);
  sub_223182DAC((uint64_t)va1);
  sub_22322797C((void **)va, v5, v6, v7, v8, v9);
  _Unwind_Resume(a1);
}

void sub_22355FD34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *object,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  if (a32 && a31 < 0)
    operator delete(__p);
  if (object)
    os_release(object);
  sub_223182DAC((uint64_t)&a13);
  sub_22322797C(&a12, v33, v34, v35, v36, v37);
  _Unwind_Resume(a1);
}

void sub_22355FD80(_Unwind_Exception *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_22322797C((void **)va, a2, a3, a4, a5, a6);
  _Unwind_Resume(a1);
}

void sub_22355FD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v5;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  va_list va;
  uint64_t v19;
  va_list va1;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  va_list va2;

  va_start(va2, a4);
  va_start(va1, a4);
  va_start(va, a4);
  v17 = va_arg(va1, void *);
  va_copy(va2, va1);
  v19 = va_arg(va2, _QWORD);
  v21 = va_arg(va2, _QWORD);
  v22 = va_arg(va2, _QWORD);
  v23 = va_arg(va2, _QWORD);
  v24 = va_arg(va2, _QWORD);
  v25 = va_arg(va2, _QWORD);
  v26 = va_arg(va2, _QWORD);
  v27 = va_arg(va2, _QWORD);
  v28 = va_arg(va2, _QWORD);
  v29 = va_arg(va2, _QWORD);
  sub_223167354((uint64_t)va2);
  MEMORY[0x227684CE8](v4, 0x10E1C4049AE771ELL);
  sub_223167354((uint64_t)va1);
  sub_22322797C((void **)(v5 - 96), v7, v8, v9, v10, v11);
  sub_22322797C((void **)va, v12, v13, v14, v15, v16);
  _Unwind_Resume(a1);
}

void sub_22355FDE0(_Unwind_Exception *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va;

  va_start(va, a9);
  sub_22322797C((void **)(v9 - 96), a2, a3, a4, a5, a6);
  sub_22322797C((void **)va, v11, v12, v13, v14, v15);
  _Unwind_Resume(a1);
}

void sub_22355FDFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a4);
  MEMORY[0x227684CE8](v4, 0xA1C40BD48D6D6);
  sub_22322797C((void **)va, v6, v7, v8, v9, v10);
  _Unwind_Resume(a1);
}

void sub_22355FE28(_Unwind_Exception *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_22322797C((void **)va, a2, a3, a4, a5, a6);
  _Unwind_Resume(a1);
}

uint64_t sub_22355FE3C()
{
  return 1;
}

uint64_t sub_22355FE44(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD **v8;
  int v9;
  float32x2_t *v10;
  float32x2_t *i;
  uint64_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  float32x2_t v16;
  float32x2_t v17;
  float32x2_t v18;
  _QWORD *v19;
  uint64_t v20;
  float32x2_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  float32x2_t v25;
  float32x2_t v26;
  float32x2_t v27;
  float32x2_t *v28;
  uint64_t v29;
  unsigned __int32 v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  float32x2_t *v34;
  std::__shared_weak_count *v35;
  unint64_t *p_shared_owners;
  unint64_t v37;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  float32x2_t *v42;
  uint64_t v43;

  (*(void (**)(float32x2_t **__return_ptr))(*a1 + 40))(&v42);
  v7 = a1[151];
  v8 = *(_OWORD ***)(v7 + 184);
  if (!v8)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MapperManager.cpp", 596, (uint64_t)"cluster_mapping_manager_ != nullptr", 35, (uint64_t)"Cluster mapping manager not initialized", 39, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v8 = *(_OWORD ***)(v7 + 184);
  }
  sub_223C032B0(&v39, *v8, v6, v8[1]);
  v9 = sub_22356DFD4((uint64_t *)&v42, a2, (uint64_t)&v39, a3);
  sub_223198030((uint64_t)&v39, v40);
  sub_2241498F4((uint64_t)&v39, 0);
  v10 = v42;
  for (i = (float32x2_t *)v43; v10 != i; v10 += 15)
  {
    v12 = (uint64_t)v10[2];
    if (v12)
    {
      sub_22414E9E0((uint64_t)&v39, v12);
      if (v10[12].i8[0])
      {
        v19 = (_QWORD *)v10[2];
        v20 = v19[1] - *v19;
        if (v20)
        {
          v21 = (float32x2_t *)((char *)v40 - 12);
          v22 = 12 * (v20 / -12);
          do
          {
            v14.i32[0] = v21[1].i32[0];
            v16.i32[0] = v10[5].i32[0];
            v17.i32[0] = v10[7].i32[0];
            v18.i32[0] = v10[9].i32[0];
            *(float32x2_t *)v15.i8 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(v10[4], COERCE_FLOAT(*v21)), v10[6], *v21, 1), v10[8], *(float *)v14.i32);
            v16 = vmla_f32(vmla_lane_f32(vmul_f32(v16, *v21), v17, *v21, 1), *(float32x2_t *)v14.i8, v18);
            v15.u64[1] = (unint64_t)v16;
            *(float32x2_t *)v13.i8 = v10[10];
            v13.i32[2] = v10[11].i32[0];
            v13 = (int8x16_t)vaddq_f32((float32x4_t)v15, (float32x4_t)v13);
            v21[1].i32[0] = v13.i32[2];
            *v21 = *(float32x2_t *)v13.i8;
            v21 = (float32x2_t *)((char *)v21 - 12);
            v22 += 12;
          }
          while (v22);
          v19 = (_QWORD *)v10[2];
        }
        v23 = v19[10] - v19[9];
        if (v23)
        {
          *(float32x2_t *)v13.i8 = v10[4];
          v13.i32[2] = v10[5].i32[0];
          *(float32x2_t *)v14.i8 = v10[6];
          v14.i32[2] = v10[7].i32[0];
          v24 = v23 / -12;
          *(float32x2_t *)v15.i8 = v10[8];
          v15.i32[2] = v10[9].i32[0];
          v25 = (float32x2_t)vextq_s8(v13, v13, 8uLL).u64[0];
          v26 = (float32x2_t)vextq_s8(v14, v14, 8uLL).u64[0];
          v27 = (float32x2_t)vextq_s8(v15, v15, 8uLL).u64[0];
          v28 = (float32x2_t *)(v41 - 12);
          v29 = 12 * v24;
          do
          {
            v18.i32[0] = v28[1].i32[0];
            v30 = vmla_f32(vmla_lane_f32(vmul_f32(v25, *v28), v26, *v28, 1), v18, v27).u32[0];
            *v28 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v13.i8, COERCE_FLOAT(*v28)), *(float32x2_t *)v14.i8, *v28, 1), *(float32x2_t *)v15.i8, v18.f32[0]);
            v28[1].i32[0] = v30;
            v28 = (float32x2_t *)((char *)v28 - 12);
            v29 += 12;
          }
          while (v29);
        }
      }
    }
  }
  v31 = sub_22356A690((uint64_t)&v39, a2, (uint64_t)(a1 + 1), a3);
  sub_22316F8F4((uint64_t *)&v39);
  v32 = (uint64_t)v42;
  if (v42)
  {
    v33 = v43;
    v34 = v42;
    if ((float32x2_t *)v43 != v42)
    {
      do
      {
        v35 = *(std::__shared_weak_count **)(v33 - 96);
        if (v35)
        {
          p_shared_owners = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldaxr(p_shared_owners);
          while (__stlxr(v37 - 1, p_shared_owners));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
        }
        v33 -= 120;
      }
      while (v33 != v32);
      v34 = v42;
    }
    v43 = v32;
    operator delete(v34);
  }
  return v9 & v31;
}

void sub_223560114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_22316F8F4(&a9);
  sub_223295868((void **)(v9 - 96));
  _Unwind_Resume(a1);
}

uint64_t sub_223560168(uint64_t result, _QWORD *a2)
{
  *(_QWORD *)(result + 288) = *a2;
  return result;
}

uint64_t sub_223560174(uint64_t a1, double a2)
{
  float v2;

  v2 = a2;
  *(float *)(a1 + 300) = v2;
  return sub_2235222F4(*(_QWORD *)(a1 + 1208), a2);
}

uint64_t sub_223560184(uint64_t result, char a2)
{
  *(_BYTE *)(result + 408) = a2;
  return result;
}

uint64_t sub_22356018C@<X0>(uint64_t a1@<X0>, float32x2_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2235223F4(*(_QWORD **)(a1 + 1208), a2, (uint64_t)&a2[8], a3);
}

uint64_t sub_223560198(uint64_t a1, unsigned int a2)
{
  int v4;

  v4 = *(unsigned __int8 *)(a1 + 100);
  if ((a2 & 2) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 574, (uint64_t)"!recon::HasMappingAttribute(mask, MappingAttribute::Normal)", 59, (uint64_t)"Attribute not supported in per-frame meshing", 44, (void (*)(void **))sub_22457406C)|| (a2 & 8) != 0&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 576, (uint64_t)"!recon::HasMappingAttribute(mask, MappingAttribute::JasperPoint)", 64, (uint64_t)"Attribute not supported in per-frame meshing", 44, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a1 + 393) & v4 & a2;
  return sub_2235221F4(*(_QWORD *)(a1 + 1208), v4 & a2);
}

void sub_22356024C(uint64_t a1, uint64_t *a2)
{
  if (!*(_QWORD *)(a1 + 1224)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 590, (uint64_t)"plane_cache_", 12, (uint64_t)"Plane cache is not allocated.", 29, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (*a2)
    sub_223763C30(*(_QWORD **)(a1 + 1224), *a2);
}

uint64_t sub_2235602C4(_QWORD *a1)
{
  uint64_t v2;

  if (((*(uint64_t (**)(_QWORD *))(*a1 + 160))(a1) & 1) == 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 602, (uint64_t)"IsOccupancySupported()", 22, (uint64_t)"Invalid occupancy mapper", 24, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v2 = *(_QWORD *)(**(_QWORD **)(a1[151] + 8) + 8);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
}

uint64_t sub_223560348(_QWORD *a1)
{
  uint64_t v2;

  if (((*(uint64_t (**)(_QWORD *))(*a1 + 160))(a1) & 1) == 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 609, (uint64_t)"IsOccupancySupported()", 22, (uint64_t)"Invalid occupancy mapper", 24, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v2 = *(_QWORD *)(**(_QWORD **)(a1[151] + 8) + 8);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2);
}

uint64_t sub_2235603CC(_QWORD *a1)
{
  uint64_t v2;

  if (((*(uint64_t (**)(_QWORD *))(*a1 + 160))(a1) & 1) == 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 616, (uint64_t)"IsOccupancySupported()", 22, (uint64_t)"Invalid occupancy mapper", 24, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v2 = *(_QWORD *)(**(_QWORD **)(a1[151] + 8) + 8);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
}

uint64_t sub_223560450(_QWORD *a1)
{
  uint64_t v2;

  if (((*(uint64_t (**)(_QWORD *))(*a1 + 160))(a1) & 1) == 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 623, (uint64_t)"IsOccupancySupported()", 22, (uint64_t)"Invalid occupancy mapper", 24, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v2 = *(_QWORD *)(**(_QWORD **)(a1[151] + 8) + 8);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
}

double sub_2235604D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  char *v7;
  double result;
  __int128 v9;
  uint64_t v10;

  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 160))(a1) & 1) == 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 629, (uint64_t)"IsOccupancySupported()", 22, (uint64_t)"Invalid occupancy mapper", 24, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 240))(a1);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a2 + 16))(&v9, a2, v6);
  v7 = (char *)operator new(0x30uLL);
  *((_QWORD *)v7 + 1) = 0;
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &unk_24EC48900;
  result = *(double *)&v9;
  *(_OWORD *)(v7 + 24) = v9;
  *((_QWORD *)v7 + 5) = v10;
  *a3 = v7 + 24;
  a3[1] = v7;
  return result;
}

void sub_2235605AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235605C8(_QWORD *a1)
{
  uint64_t v2;

  if (((*(uint64_t (**)(_QWORD *))(*a1 + 160))(a1) & 1) == 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 634, (uint64_t)"IsOccupancySupported()", 22, (uint64_t)"Invalid occupancy mapper", 24, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v2 = *(_QWORD *)(**(_QWORD **)(a1[151] + 8) + 8);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 48))(v2);
}

uint64_t sub_223560644(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 424);
}

uint64_t sub_22356064C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 472);
}

uint64_t sub_223560654(_BYTE *a1)
{
  uint64_t result;

  result = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)a1 + 160))(a1);
  if ((_DWORD)result)
    return a1[464] != 0;
  return result;
}

uint64_t sub_22356068C(uint64_t a1, int a2, float a3, float a4, float a5)
{
  uint64_t result;
  CFTypeRef v8;

  v8 = 0;
  result = sub_223FFDD3C((float *)(a1 + 288), &v8, a3, a4, a5);
  if ((_DWORD)result)
  {
    *(_BYTE *)(a1 + 472) = a2;
    if (a2)
      *(_BYTE *)(a1 + 424) = 1;
  }
  return result;
}

uint64_t sub_2235606D8(uint64_t a1, char a2)
{
  uint64_t result;
  _BYTE *v5;

  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 160))(a1);
  if ((result & 1) == 0)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 661, (uint64_t)"IsOccupancySupported()", 22, (uint64_t)"Invalid occupancy mapper", 24, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      abort();
  }
  *(_BYTE *)(a1 + 432) = a2;
  if ((a2 & 1) != 0)
  {
    *(_BYTE *)(a1 + 464) = 1;
    *(_BYTE *)(a1 + 424) = 1;
    v5 = *(_BYTE **)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8);
    v5[160] = a2;
    v5[192] = 1;
    v5[152] = 1;
  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8) + 160) = a2;
  }
  return result;
}

uint64_t sub_223560790(uint64_t a1, int a2)
{
  *(_BYTE *)(a1 + 464) = a2;
  if (a2)
    *(_BYTE *)(a1 + 424) = 1;
  return 1;
}

void sub_2235607A8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  int32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;
  int32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  char *v11;
  char *v12;
  void *v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  char *v18;
  char v19;
  char v20;

  if (((*(uint64_t (**)(_QWORD *))(*a1 + 160))(a1) & 1) == 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 671, (uint64_t)"IsOccupancySupported()", 22, (uint64_t)"Invalid occupancy mapper", 24, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_223934534(*(_QWORD *)(**(_QWORD **)(a1[151] + 8) + 8), 0, 0, 1, (uint64_t)&__p, v4, v5, v6, v7, v8, v9, v10);
  if (!v20
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 674, (uint64_t)"result.has_value()", 18, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_22326F694((_QWORD *)a2, (uint64_t *)&__p);
  *(_BYTE *)(a2 + 24) = v19;
  if (v20)
  {
    v11 = (char *)__p;
    if (__p)
    {
      v12 = v18;
      v13 = __p;
      if (v18 != __p)
      {
        do
        {
          v14 = (std::__shared_weak_count *)*((_QWORD *)v12 - 12);
          if (v14)
          {
            p_shared_owners = (unint64_t *)&v14->__shared_owners_;
            do
              v16 = __ldaxr(p_shared_owners);
            while (__stlxr(v16 - 1, p_shared_owners));
            if (!v16)
            {
              ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
              std::__shared_weak_count::__release_weak(v14);
            }
          }
          v12 -= 120;
        }
        while (v12 != v11);
        v13 = __p;
      }
      v18 = v11;
      operator delete(v13);
    }
  }
}

void sub_223560914(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2232957C8((char **)va);
  _Unwind_Resume(a1);
}

void sub_223560928(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  char *v5;
  void *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  char *v11;
  char v12;
  char v13;

  if (((*(uint64_t (**)(_QWORD *))(*a1 + 160))(a1) & 1) == 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 679, (uint64_t)"IsOccupancySupported()", 22, (uint64_t)"Invalid occupancy mapper", 24, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_2239347B0(*(_QWORD *)(**(_QWORD **)(a1[151] + 8) + 8), 0, 0, &__p);
  if (!v13
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 681, (uint64_t)"result.has_value()", 18, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_22326F694((_QWORD *)a2, (uint64_t *)&__p);
  *(_BYTE *)(a2 + 24) = v12;
  if (v13)
  {
    v4 = (char *)__p;
    if (__p)
    {
      v5 = v11;
      v6 = __p;
      if (v11 != __p)
      {
        do
        {
          v7 = (std::__shared_weak_count *)*((_QWORD *)v5 - 12);
          if (v7)
          {
            p_shared_owners = (unint64_t *)&v7->__shared_owners_;
            do
              v9 = __ldaxr(p_shared_owners);
            while (__stlxr(v9 - 1, p_shared_owners));
            if (!v9)
            {
              ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
              std::__shared_weak_count::__release_weak(v7);
            }
          }
          v5 -= 120;
        }
        while (v5 != v4);
        v6 = __p;
      }
      v11 = v4;
      operator delete(v6);
    }
  }
}

void sub_223560A90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2232957C8((char **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_223560AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  float32x2_t v6;
  float32x4_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int *v13;
  __int16 v14;
  int v15;
  float32x2_t v16;
  int8x16_t v17;
  __int32 v18;
  float32x4_t v19;
  int32x4_t v20;
  float32x4_t v21;
  float32x2_t v22;
  uint64_t *v23;
  uint64_t v24;
  float32x4_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int8x16_t v28;
  float32x4_t v29;
  uint64_t v30;
  float32x4_t v31;
  float32x4_t v32;
  int32x4_t v33;
  int8x16_t v34;
  float32x4_t v35;
  float32x4_t v36;
  void *v37;
  int8x16_t v38;
  float32x2_t v39;
  uint64_t *v40;
  char v41;
  int v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  const char *v46;
  size_t v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  const char *v50;
  size_t v51;
  __int128 *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 *p_p;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  int v59;
  size_t v60;
  std::__shared_weak_count_vtbl *v61;
  std::__shared_weak_count *v62;
  std::__shared_weak_count *v63;
  unint64_t *p_shared_owners;
  unint64_t v65;
  unint64_t v66;
  void *v67;
  _DWORD *v68;
  uint64_t v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  void *v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  int32x4_t v96;
  int32x4_t v97;
  int32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  void *v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  void *v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  _QWORD *v118;
  _QWORD *v119;
  void *v120;
  const char *v122;
  uint64_t v123;
  uint64_t *v124;
  int v125;
  double v126;
  void *v127[3];
  __int16 v128;
  unsigned __int8 *v129[4];
  char v130;
  char *v131;
  char v132;
  void *v133;
  __int128 v134;
  uint64_t v135;
  int v136;
  void *v137[2];
  unint64_t v138;
  char v139;
  _BYTE v140[216];
  void *v141;
  char v142;
  __int128 v143;
  __int128 v144;
  int v145;
  _QWORD v146[3];
  int v147;
  const char *v148;
  int v149;
  const char *v150;
  uint64_t v151;
  std::__shared_weak_count *v152;
  uint64_t v153;
  float32x4_t v154;
  uint64_t v155;
  uint64_t v156;
  void *object;
  __int128 v158;
  __int128 v159;
  __int128 __p;
  unint64_t v161;
  char v162;
  _QWORD v163[7];

  v163[4] = *MEMORY[0x24BDAC8D0];
  v143 = 0u;
  v144 = 0u;
  v145 = 728303144;
  kdebug_trace();
  if (*(_BYTE *)(a2 + 1608))
  {
    if (*(_BYTE *)(a2 + 1408))
    {
      if (!*(_BYTE *)(a2 + 1409))
      {
        *(_BYTE *)(a1 + 1272) = 0;
        goto LABEL_11;
      }
      if (*(_DWORD *)(a2 + 1412))
      {
        v8 = *(unsigned __int8 *)(a1 + 1272);
        *(_BYTE *)(a1 + 1272) = 1;
        if (!v8)
        {
          *(_QWORD *)(a1 + 1280) = *(_QWORD *)(a2 + 1416);
          v9 = *(_DWORD *)(a2 + 1424);
          if (v9 <= *(_DWORD *)(a1 + 1288))
            goto LABEL_14;
LABEL_12:
          if (!*(_DWORD *)(a2 + 1412))
          {
            *(_DWORD *)(a1 + 1288) = v9;
            *(_BYTE *)(a1 + 1253) = 1;
            (*(void (**)(uint64_t))(*(_QWORD *)a1 + 80))(a1);
            goto LABEL_15;
          }
LABEL_14:
          *(_BYTE *)(a1 + 1253) = 0;
          goto LABEL_15;
        }
LABEL_11:
        v9 = *(_DWORD *)(a2 + 1424);
        if (v9 <= *(_DWORD *)(a1 + 1288))
          goto LABEL_14;
        goto LABEL_12;
      }
    }
    *(_BYTE *)(a1 + 1272) = 0;
    v9 = *(_DWORD *)(a2 + 1424);
    if (v9 <= *(_DWORD *)(a1 + 1288))
      goto LABEL_14;
    goto LABEL_12;
  }
LABEL_15:
  LOBYTE(v129[0]) = 0;
  v130 = 0;
  LOBYTE(v131) = 0;
  v132 = 0;
  LOBYTE(v133) = 0;
  v139 = 0;
  v140[0] = 0;
  v140[88] = 0;
  v140[96] = 0;
  v140[208] = 0;
  LOBYTE(v141) = 0;
  v142 = 0;
  memset(v127, 0, sizeof(v127));
  v128 = 0;
  v10 = *(_QWORD *)(a2 + 1232);
  v126 = (double)v10 / 1000000000.0;
  *(_QWORD *)(a1 + 1240) = v10;
  if (!*(_BYTE *)(a1 + 280) || (LOBYTE(v11) = 0, v12 = 1, *(_BYTE *)(a1 + 1272)) && *(_QWORD *)(a1 + 1280) < v10)
  {
    v13 = (int *)(a1 + 1256);
    v14 = sub_223568D0C(a1 + 288, a2, (_DWORD *)(a1 + 1256));
    if ((v14 & 1) != 0 && (*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 248))(a1, a2))
    {
      *(_WORD *)(a1 + 1248) = 257;
      v11 = 1;
      v12 = 0;
      if ((v14 & 0x100) == 0)
        goto LABEL_27;
    }
    else
    {
      v11 = 0;
      v12 = 0;
      if ((v14 & 0x100) == 0)
        goto LABEL_27;
    }
    if (v11)
      v15 = 0;
    else
      v15 = *v13 + 1;
    *v13 = v15;
  }
LABEL_27:
  if (*(unsigned __int8 *)(a1 + 1251) | *(unsigned __int8 *)(a1 + 1252)
    || *(_BYTE *)(a1 + 1248)
    && (double)(uint64_t)(*(_QWORD *)(a1 + 1240) - *(_QWORD *)(a1 + 1232)) + 50000000.0 > *(double *)(a1 + 288)
                                                                                       * 1000000000.0)
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 256))(&object, a1);
    sub_2235622F8(v127, v158, *((uint64_t *)&v158 + 1), 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(*((_QWORD *)&v158 + 1) - v158) >> 3));
    sub_2235627F4(&v141, (uint64_t)v163);
    *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a1 + 1240);
    *(_BYTE *)(a1 + 1248) = 0;
    sub_2232954B0((uint64_t)&object);
  }
  v16.i32[0] = *(_DWORD *)(a2 + 1344);
  v6.i32[0] = *(_DWORD *)(a2 + 1376);
  v7.i64[0] = *(_QWORD *)(a2 + 1384);
  v7.i32[2] = *(_DWORD *)(a2 + 1392);
  v17 = (int8x16_t)vnegq_f32(v7);
  v16.i32[1] = *(_DWORD *)(a2 + 1360);
  v18 = vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(a2 + 1368), *(float32x2_t *)v17.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(a2 + 1368), 1), *(float32x2_t *)v7.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL), v6).u32[0];
  *(float32x2_t *)v154.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*(int32x2_t *)(a2 + 1336), *(int32x2_t *)(a2 + 1352)), *(float *)v17.i32), (float32x2_t)vzip2_s32(*(int32x2_t *)(a2 + 1336), *(int32x2_t *)(a2 + 1352)), *(float32x2_t *)v7.f32, 1), v16, v7, 2);
  v154.i32[2] = v18;
  v23 = (uint64_t *)(a2 + 1232);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 160))(a1))
    goto LABEL_41;
  v24 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8);
  if (!*(_BYTE *)(v24 + 200) || !*(_BYTE *)(v24 + 2888))
    goto LABEL_41;
  if (*(_BYTE *)(v24 + 233))
  {
    v19.i64[0] = *(_QWORD *)(v24 + 40148);
    v19.i32[2] = *(_DWORD *)(v24 + 40156);
    v20.i64[0] = *(_QWORD *)(v24 + 40164);
    v20.i32[2] = *(_DWORD *)(v24 + 40172);
    v25 = (float32x4_t)vzip1q_s32((int32x4_t)v19, v20);
    v26 = (int8x16_t)v25;
    v26.i32[2] = *(_QWORD *)(v24 + 40180);
    v21.i64[0] = *(_QWORD *)(v24 + 40196);
    v21.i32[2] = *(_DWORD *)(v24 + 40204);
    v27 = (int8x16_t)vnegq_f32(v21);
    v28 = (int8x16_t)vtrn2q_s32((int32x4_t)v19, v20);
    v28.i32[2] = HIDWORD(*(_QWORD *)(v24 + 40180));
    v22.i32[0] = *(_DWORD *)(v24 + 40188);
    v29 = (float32x4_t)vzip2q_s32((int32x4_t)v19, v20);
    *(float32x2_t *)v25.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v25.f32, *(float *)v27.i32), *(float32x2_t *)v28.i8, *(float32x2_t *)v21.f32, 1), *(float32x2_t *)v29.f32, v21, 2);
    v29.i32[2] = v22.i32[0];
    v25.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(v24 + 40180), *(float32x2_t *)v27.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(v24 + 40180), 1), *(float32x2_t *)v21.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v27, v27, 8uLL), v22).u32[0]);
    v30 = vextq_s8(v28, v26, 4uLL).u64[0];
    v26.i32[3] = 0;
    v31.i32[3] = 0;
    v31.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v28, 0).i32[3];
    *(uint64_t *)((char *)v31.i64 + 4) = v30;
    v29.i64[1] = vdupq_laneq_s32((int32x4_t)v29, 2).u32[0];
    v32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v26, COERCE_FLOAT(*(_OWORD *)(v24 + 40212))), v31, *(float32x2_t *)(v24 + 40212), 1), v29, *(float32x4_t *)(v24 + 40212), 2), v25, *(float32x4_t *)(v24 + 40212), 3);
    v33 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v26, COERCE_FLOAT(*(_OWORD *)(v24 + 40228))), v31, *(float32x2_t *)(v24 + 40228), 1), v29, *(float32x4_t *)(v24 + 40228), 2), v25, *(float32x4_t *)(v24 + 40228), 3);
    v34 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v26, COERCE_FLOAT(*(_OWORD *)(v24 + 40244))), v31, *(float32x2_t *)(v24 + 40244), 1), v29, *(float32x4_t *)(v24 + 40244), 2), v25, *(float32x4_t *)(v24 + 40244), 3);
    v35 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v26, COERCE_FLOAT(*(_OWORD *)(v24 + 40260))), v31, *(float32x2_t *)(v24 + 40260), 1), v29, *(float32x4_t *)(v24 + 40260), 2), v25, *(float32x4_t *)(v24 + 40260), 3);
    v25.i64[0] = vtrn2q_s32((int32x4_t)v32, v33).u64[0];
    v31.i64[0] = vzip2q_s32((int32x4_t)v32, v33).u64[0];
    *(int32x2_t *)v33.i8 = vzip1_s32(*(int32x2_t *)v32.f32, *(int32x2_t *)v33.i8);
    *(float32x2_t *)v32.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v33.i8, COERCE_FLOAT(v35.i32[0] ^ 0x80000000)), *(float32x2_t *)v25.f32, (float32x2_t)(v35.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v31.f32, COERCE_FLOAT(v35.i32[2] ^ 0x80000000));
    v28.i64[0] = vextq_s8(v34, v34, 8uLL).u64[0];
    *(float32x2_t *)&v32.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v34.i8, (float32x2_t)(v35.i64[0] ^ 0x8000000080000000)), (float32x2_t)vdup_lane_s32((int32x2_t)(v35.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v34.i8, 1), (float32x2_t)(v35.i64[1] ^ 0xFFFFFFFF80000000), *(float32x2_t *)v28.i8);
    *(float32x2_t *)v19.f32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v33.i8, v154.f32[0]), (float32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)vdupq_lane_s32(*(int32x2_t *)v25.f32, 0), (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v25.f32, 1), 0xCuLL), *(float32x2_t *)v154.f32, 1), *(float32x2_t *)v31.f32, v154, 2);
    *(float32x2_t *)&v19.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v34.i8, *(float32x2_t *)v154.f32), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v154.f32, 1), *(float32x2_t *)v34.i8, 1), (float32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v154, (int8x16_t)v154, 8uLL), *(float32x2_t *)v28.i8);
    v36 = vaddq_f32(v19, v32);
    v37 = (void *)*v23;
    if (!*(_BYTE *)(v24 + 2984))
      goto LABEL_38;
LABEL_40:
    object = v37;
    v40 = sub_22392ABC0(v24, (float32x2_t *)&v154, (uint64_t *)&object);
    sub_22355D3C0((uint64_t)v140, (uint64_t)v40);
    goto LABEL_41;
  }
  v36 = v154;
  v37 = (void *)*v23;
  if (*(_BYTE *)(v24 + 2984))
    goto LABEL_40;
LABEL_38:
  if ((double)((unint64_t)v37 - *(_QWORD *)(v24 + 3000)) / 1000000000.0 > 3.0)
    goto LABEL_40;
  v19.i64[0] = *(_QWORD *)(v24 + 2988);
  v19.i32[2] = *(_DWORD *)(v24 + 2996);
  v38 = (int8x16_t)vsubq_f32(v36, v19);
  v39 = (float32x2_t)vextq_s8(v38, v38, 8uLL).u64[0];
  if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v38.i8, *(float32x2_t *)v38.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v38.i8, 1), *(float32x2_t *)v38.i8, 1), v39, v39).f32[0] > (float)(*(float *)(v24 + 448) * *(float *)(v24 + 448)))goto LABEL_40;
LABEL_41:
  if ((v11 & 1) == 0)
  {
    sub_22355E608(&v153);
    if (**(int **)(v153 + 56) > 3
      || (v42 = *(unsigned __int8 *)(v153 + 72),
          v43 = sub_22322F254(v153, "OSLogSurrogateAppender", 1, 0),
          v44 = v43,
          !v42)
      && !v43)
    {
LABEL_131:
      v41 = 1;
      goto LABEL_132;
    }
    v146[0] = &v153;
    v146[1] = std::chrono::steady_clock::now().__d_.__rep_;
    v146[2] = std::chrono::system_clock::now().__d_.__rep_;
    v147 = 3;
    v148 = "unknown file";
    v149 = 758;
    v152 = 0;
    v150 = "unknown function";
    v151 = 0;
    v45 = *(_QWORD *)v146[0];
    v46 = (const char *)(*(_QWORD *)v146[0] + 16);
    v122 = v46;
    v123 = *(_QWORD *)v146[0];
    if (*(char *)(*(_QWORD *)v146[0] + 39) < 0)
    {
      v46 = *(const char **)(v45 + 16);
      v47 = *(_QWORD *)(v45 + 24);
      v124 = v23;
      v125 = v12;
      v49 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v49 & 1) != 0)
        goto LABEL_50;
    }
    else
    {
      v47 = *(unsigned __int8 *)(*(_QWORD *)v146[0] + 39);
      v124 = v23;
      v125 = v12;
      v48 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v48 & 1) != 0)
        goto LABEL_50;
    }
    if (__cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)&object);
      sub_223199C58("com.apple.cv3d", (unint64_t)&object, &xmmword_255788F40);
      if ((_BYTE)v159 && SHIBYTE(v158) < 0)
        operator delete(object);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
    }
LABEL_50:
    if (byte_255788F57 >= 0)
      v50 = (const char *)&xmmword_255788F40;
    else
      v50 = (const char *)xmmword_255788F40;
    if (byte_255788F57 >= 0)
      v51 = byte_255788F57;
    else
      v51 = *((_QWORD *)&xmmword_255788F40 + 1);
    object = os_log_create(v50, v46);
    v52 = &v158;
    if (v51 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    if (v51 >= 0x17)
    {
      v53 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v51 | 7) != 0x17)
        v53 = v51 | 7;
      v54 = v53 + 1;
      v52 = (__int128 *)operator new(v53 + 1);
      *(_QWORD *)&v159 = v54 | 0x8000000000000000;
      *(_QWORD *)&v158 = v52;
      *((_QWORD *)&v158 + 1) = v51;
    }
    else
    {
      BYTE7(v159) = v51;
      if (!v51)
      {
LABEL_64:
        *((_BYTE *)v52 + v51) = 0;
        BYTE8(v159) = 1;
        p_p = &__p;
        if (v47 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v47 >= 0x17)
        {
          v56 = (v47 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v47 | 7) != 0x17)
            v56 = v47 | 7;
          v57 = v56 + 1;
          p_p = (__int128 *)operator new(v56 + 1);
          v161 = v57 | 0x8000000000000000;
          *(_QWORD *)&__p = p_p;
          *((_QWORD *)&__p + 1) = v47;
          v23 = v124;
        }
        else
        {
          HIBYTE(v161) = v47;
          v23 = v124;
          if (!v47)
            goto LABEL_72;
        }
        memmove(p_p, v46, v47);
LABEL_72:
        *((_BYTE *)p_p + v47) = 0;
        v162 = 1;
        v58 = object;
        if (SHIBYTE(v161) < 0)
          operator delete((void *)__p);
        v59 = v125;
        if (BYTE8(v159) && SBYTE7(v159) < 0)
          operator delete((void *)v158);
        if (object)
          os_release(object);
        if (v44 && *(_QWORD *)(v44 + 24))
        {
          v60 = _os_log_pack_size();
          v61 = (std::__shared_weak_count_vtbl *)operator new(v60, (std::align_val_t)8uLL);
          v62 = (std::__shared_weak_count *)operator new();
          v63 = v62;
          v62->__shared_owners_ = 0;
          p_shared_owners = (unint64_t *)&v62->__shared_owners_;
          v62->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
          v62->__shared_weak_owners_ = 0;
          v62[1].__vftable = v61;
          object = v61;
          *(_QWORD *)&v158 = v61;
          *((_QWORD *)&v158 + 1) = v62;
          do
            v65 = __ldxr(p_shared_owners);
          while (__stxr(v65 + 1, p_shared_owners));
          v159 = 0uLL;
          *(_QWORD *)&__p = 0;
          do
            v66 = __ldaxr(p_shared_owners);
          while (__stlxr(v66 - 1, p_shared_owners));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v63);
          }
          v67 = object;
          v68 = (_DWORD *)_os_log_pack_fill();
          *v68 = 67109120;
          v68[1] = v125;
          v69 = operator new();
          v70 = *(unsigned __int8 *)(v123 + 39);
          v71 = v122;
          if ((v70 & 0x80u) != 0)
          {
            v71 = *(const char **)(v123 + 16);
            v70 = *(_QWORD *)(v123 + 24);
          }
          *(_QWORD *)v69 = v67;
          *(_OWORD *)(v69 + 8) = v158;
          v158 = 0uLL;
          *(_OWORD *)(v69 + 24) = v159;
          v159 = 0uLL;
          *(_QWORD *)(v69 + 40) = v71;
          *(_QWORD *)(v69 + 48) = v70;
          *(_BYTE *)(v69 + 56) = 1;
          v155 = 0;
          v156 = v69;
          (*(void (**)(_QWORD, uint64_t *))(**(_QWORD **)(v44 + 24) + 40))(*(_QWORD *)(v44 + 24), &v156);
          v72 = v156;
          v156 = 0;
          v23 = v124;
          v59 = v125;
          if (v72)
          {
            v73 = *(std::__shared_weak_count **)(v72 + 32);
            if (v73)
            {
              v74 = (unint64_t *)&v73->__shared_owners_;
              do
                v75 = __ldaxr(v74);
              while (__stlxr(v75 - 1, v74));
              if (!v75)
              {
                ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
                std::__shared_weak_count::__release_weak(v73);
              }
            }
            v76 = *(std::__shared_weak_count **)(v72 + 16);
            if (v76)
            {
              v77 = (unint64_t *)&v76->__shared_owners_;
              do
                v78 = __ldaxr(v77);
              while (__stlxr(v78 - 1, v77));
              if (!v78)
              {
                ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
                std::__shared_weak_count::__release_weak(v76);
              }
            }
            MEMORY[0x227684CE8](v72, 0x10F0C40B62ED6C6);
            v79 = v155;
            v155 = 0;
            if (v79)
            {
              v80 = *(std::__shared_weak_count **)(v79 + 32);
              if (v80)
              {
                v81 = (unint64_t *)&v80->__shared_owners_;
                do
                  v82 = __ldaxr(v81);
                while (__stlxr(v82 - 1, v81));
                if (!v82)
                {
                  ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
                  std::__shared_weak_count::__release_weak(v80);
                }
              }
              v83 = *(std::__shared_weak_count **)(v79 + 16);
              if (v83)
              {
                v84 = (unint64_t *)&v83->__shared_owners_;
                do
                  v85 = __ldaxr(v84);
                while (__stlxr(v85 - 1, v84));
                if (!v85)
                {
                  ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
                  std::__shared_weak_count::__release_weak(v83);
                }
              }
              MEMORY[0x227684CE8](v79, 0x10F0C40B62ED6C6);
            }
          }
          v86 = (std::__shared_weak_count *)*((_QWORD *)&v159 + 1);
          if (*((_QWORD *)&v159 + 1))
          {
            v87 = (unint64_t *)(*((_QWORD *)&v159 + 1) + 8);
            do
              v88 = __ldaxr(v87);
            while (__stlxr(v88 - 1, v87));
            if (!v88)
            {
              ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
              std::__shared_weak_count::__release_weak(v86);
            }
          }
          v89 = (std::__shared_weak_count *)*((_QWORD *)&v158 + 1);
          if (*((_QWORD *)&v158 + 1))
          {
            v90 = (unint64_t *)(*((_QWORD *)&v158 + 1) + 8);
            do
              v91 = __ldaxr(v90);
            while (__stlxr(v91 - 1, v90));
            if (!v91)
            {
              ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
              std::__shared_weak_count::__release_weak(v89);
            }
          }
        }
        else
        {
          os_log_type_enabled(v58, OS_LOG_TYPE_INFO);
          LODWORD(object) = 67109120;
          HIDWORD(object) = v125;
          v92 = (void *)_os_log_send_and_compose_impl();
          if (v92)
            free(v92);
        }
        if (v42)
        {
          sub_22322C138((uint64_t)v146, "Dropping bundle (in_bad_state: %d)", v59);
          sub_223182C08((uint64_t)v146);
        }
        sub_223182C08((uint64_t)v146);
        v93 = v152;
        if (v152)
        {
          v94 = (unint64_t *)&v152->__shared_owners_;
          do
            v95 = __ldaxr(v94);
          while (__stlxr(v95 - 1, v94));
          if (!v95)
          {
            ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
            std::__shared_weak_count::__release_weak(v93);
          }
        }
        goto LABEL_131;
      }
    }
    memmove(v52, v50, v51);
    goto LABEL_64;
  }
  v41 = 0;
LABEL_132:
  LOBYTE(v128) = v41;
  HIBYTE(v128) = 1;
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 160))(a1) && *(_BYTE *)(a1 + 432))
  {
    v101 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8);
    if (*(_BYTE *)(v101 + 297))
      sub_223932B18(v101, 1, 0, (uint64_t)&object, v97, v98, v99);
    else
      sub_22392EFC0(v101, *v23, 1, (uint64_t)&object, v96, v97, *(float32x2_t *)v98.i8, v100);
    sub_2235628FC((char **)v129, (uint64_t)&object);
    if (BYTE8(v159))
    {
      v102 = (char *)object;
      if (object)
      {
        v103 = (char *)v158;
        v104 = object;
        if ((void *)v158 != object)
        {
          do
          {
            v105 = (std::__shared_weak_count *)*((_QWORD *)v103 - 12);
            if (v105)
            {
              v106 = (unint64_t *)&v105->__shared_owners_;
              do
                v107 = __ldaxr(v106);
              while (__stlxr(v107 - 1, v106));
              if (!v107)
              {
                ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
                std::__shared_weak_count::__release_weak(v105);
              }
            }
            v103 -= 120;
          }
          while (v103 != v102);
          v104 = object;
        }
        *(_QWORD *)&v158 = v102;
        operator delete(v104);
      }
    }
    if (v130)
    {
      v108 = *(_QWORD *)(a1 + 1312);
      HIBYTE(v158) = 6;
      strcpy((char *)&object, "OCP:RS");
      sub_223470EF4(v108, v129, (uint64_t)&object, v23);
      if (SHIBYTE(v158) < 0)
        operator delete(object);
    }
    sub_2239347B0(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8), *v23, 1, &object);
    sub_2235628FC(&v131, (uint64_t)&object);
    if (BYTE8(v159))
    {
      v109 = (char *)object;
      if (object)
      {
        v110 = (char *)v158;
        v111 = object;
        if ((void *)v158 != object)
        {
          do
          {
            v112 = (std::__shared_weak_count *)*((_QWORD *)v110 - 12);
            if (v112)
            {
              v113 = (unint64_t *)&v112->__shared_owners_;
              do
                v114 = __ldaxr(v113);
              while (__stlxr(v114 - 1, v113));
              if (!v114)
              {
                ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
                std::__shared_weak_count::__release_weak(v112);
              }
            }
            v110 -= 120;
          }
          while (v110 != v109);
          v111 = object;
        }
        *(_QWORD *)&v158 = v109;
        operator delete(v111);
      }
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 160))(a1))
  {
    v115 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 1208) + 8) + 8) + 40576);
    if (*(_BYTE *)(v115 + 56))
    {
      if (*(_QWORD *)(a1 + 1240) == *(_QWORD *)(v115 + 48))
      {
        v116 = *(_QWORD *)(v115 + 8);
        object = *(void **)(v116 + 328);
        v117 = *(_DWORD *)(v116 + 348);
        LODWORD(v158) = *(_DWORD *)(v116 + 336);
        HIDWORD(v158) = v117;
        *(_QWORD *)((char *)&v158 + 4) = *(_QWORD *)(v116 + 340);
        *(_QWORD *)&v159 = *(_QWORD *)(v116 + 352);
        DWORD2(v159) = *(_DWORD *)(v116 + 360);
        v161 = 0;
        __p = 0uLL;
        sub_22329A240((uint64_t)&__p, *(_QWORD *)(v116 + 368), *(_QWORD *)(v116 + 376), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(v116 + 376) - *(_QWORD *)(v116 + 368)) >> 5));
        v133 = object;
        v134 = v158;
        v135 = v159;
        v136 = DWORD2(v159);
        if (v139)
        {
          v118 = v137[0];
          if (v137[0])
          {
            v119 = v137[1];
            v120 = v137[0];
            if (v137[1] != v137[0])
            {
              do
                v119 = sub_2232959C0(v119 - 20);
              while (v119 != v118);
              v120 = v137[0];
            }
            v137[1] = v118;
            operator delete(v120);
          }
          *(_OWORD *)v137 = __p;
          v138 = v161;
        }
        else
        {
          *(_OWORD *)v137 = __p;
          v138 = v161;
          v139 = 1;
        }
      }
    }
  }
  sub_22329ACE4(a3, (uint64_t)&v126);
  *(_BYTE *)(a3 + 440) = 1;
  sub_2232954B0((uint64_t)&v126);
  return kdebug_trace();
}

void sub_223561A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;

  if (LOBYTE(STACK[0x2A8]))
  {
    if (SLOBYTE(STACK[0x2A7]) < 0)
      operator delete((void *)STACK[0x290]);
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&STACK[0x220]);
  sub_2232954B0((uint64_t)&a16);
  sub_2231874DC((uint64_t)&a71);
  _Unwind_Resume(a1);
}

uint64_t sub_223561BCC(uint64_t a1, uint64_t a2)
{
  int v3;
  _QWORD *v4;
  uint64_t v5;
  _BOOL8 v6;
  std::__shared_weak_count *v7;
  int v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *__p;
  void *v23;
  std::__shared_weak_count *v24;
  _OWORD v25[2];
  char v26;
  _BYTE v27[32];
  int v28;
  int v29;
  char v30;
  _DWORD v31[14];
  unsigned __int8 v32;
  char v33;
  _BYTE v34[8];
  void *v35;
  std::__shared_weak_count *v36;
  _OWORD v37[2];

  v3 = *(unsigned __int8 *)(a1 + 372);
  v4 = *(_QWORD **)(a1 + 1208);
  if (v3)
  {
    v5 = *(_QWORD *)(v4[1] + 8);
    if (v5)
    {
      (*(void (**)(_QWORD))(*(_QWORD *)v5 + 16))(*(_QWORD *)(v4[1] + 8));
      return 1;
    }
  }
  sub_22352302C(v4, a2, (uint64_t)v27);
  v6 = v33 != 0;
  if (!v33)
    return v6;
  sub_2235239F4(*(_QWORD *)(a1 + 1208), (uint64_t)v27);
  if (*(_BYTE *)(a1 + 408))
  {
    if (*(_QWORD *)(a1 + 1216) && v30)
    {
      if ((!v28 || !v29)
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Frame/src/FrameBundle.cpp", 1145, (uint64_t)"!depth.depth->Empty()", 21, (uint64_t)"Depth buffer not valid", 22, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      sub_223C3BF78((uint64_t)v27, (uint64_t)v34);
      v7 = v36;
      __p = &off_24EC200A8;
      v23 = v35;
      v24 = v36;
      v25[0] = v37[0];
      *(_OWORD *)((char *)v25 + 10) = *(_OWORD *)((char *)v37 + 10);
      v26 = 1;
      v8 = v32;
      if (v32)
      {
        if ((!v31[8] || !v31[9])
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Frame/src/FrameBundle.cpp", 1151, (uint64_t)"!depth.confidence->Empty()", 26, (uint64_t)"Confidence buffer not valid", 27, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        sub_223C3BF78((uint64_t)v31, (uint64_t)v34);
        v9 = v36;
        if (v36)
        {
          p_shared_owners = (unint64_t *)&v36->__shared_owners_;
          do
            v11 = __ldaxr(p_shared_owners);
          while (__stlxr(v11 - 1, p_shared_owners));
          if (!v11)
          {
            ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
            std::__shared_weak_count::__release_weak(v9);
          }
        }
        v7 = v24;
      }
      if (v7)
      {
        v12 = (unint64_t *)&v7->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
      }
      if (v8)
        goto LABEL_28;
    }
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 801, (uint64_t)"plane_snapper_ && opt_frame_bundle->Depth() && opt_frame_bundle->Confidence()", 77, (uint64_t)"Integration for planes requires validity of snapper and bundle.", 63, (void (*)(void **))sub_22457406C))
    {
LABEL_28:
      v14 = *(_QWORD *)(a1 + 1224);
      if (v14)
      {
LABEL_31:
        __p = 0;
        v23 = 0;
        v24 = 0;
        sub_22365835C((char **)&__p, *(_QWORD *)(v14 + 24));
        v15 = *(_QWORD **)(v14 + 16);
        if (v15)
        {
          v16 = (unint64_t)v23;
          do
          {
            while (1)
            {
              v17 = (uint64_t)(v15 + 4);
              if (v16 < (unint64_t)v24)
                break;
              v16 = sub_22324A768(&__p, v17);
              v23 = (void *)v16;
              v15 = (_QWORD *)*v15;
              if (!v15)
                goto LABEL_36;
            }
            sub_223249DC0(v16, v17);
            v16 += 464;
            v23 = (void *)v16;
            v15 = (_QWORD *)*v15;
          }
          while (v15);
        }
LABEL_36:
        sub_223A9062C(*(uint64_t **)(*(_QWORD *)(a1 + 1216) + 8), (uint64_t *)&__p);
        v18 = __p;
        if (__p)
        {
          v19 = (uint64_t)v23;
          v20 = __p;
          if (v23 != __p)
          {
            do
            {
              v19 -= 464;
              sub_22324A5A0(v19);
            }
            while ((void *)v19 != v18);
            v20 = __p;
          }
          v23 = v18;
          operator delete(v20);
        }
        goto LABEL_41;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngine.cpp", 802, (uint64_t)"plane_cache_", 12, (uint64_t)"Plane cache is not allocated.", 29, (void (*)(void **))sub_22457406C))
      {
        v14 = *(_QWORD *)(a1 + 1224);
        goto LABEL_31;
      }
    }
    abort();
  }
LABEL_41:
  if (v33)
    sub_2232555B8((uint64_t)v27);
  return v6;
}

void sub_223561F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  sub_2231BD90C((uint64_t)&a9);
  if (LOBYTE(STACK[0x760]))
    sub_2232555B8((uint64_t)&a17);
  _Unwind_Resume(a1);
}

char *sub_223561F64(char **a1, uint64_t *a2, uint64_t *a3, size_t __sz)
{
  uint64_t *v6;
  uint64_t v8;
  char *result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char **v16;
  char *v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = a2;
  v8 = (uint64_t)a1[2];
  result = *a1;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - (uint64_t)result) >> 3) >= __sz)
  {
    v17 = a1[1];
    v16 = a1 + 1;
    v15 = v17;
    v18 = 0xAAAAAAAAAAAAAAABLL * ((v17 - result) >> 3);
    if (v18 >= __sz)
    {
      v26 = result;
      if (a2 != a3)
      {
        v27 = result;
        do
        {
          v28 = *v6;
          *((_DWORD *)v27 + 2) = *((_DWORD *)v6 + 2);
          *(_QWORD *)v27 = v28;
          v29 = *(uint64_t *)((char *)v6 + 12);
          *((_DWORD *)v27 + 5) = *((_DWORD *)v6 + 5);
          *(_QWORD *)(v27 + 12) = v29;
          v26 += 24;
          v6 += 3;
          v27 += 24;
        }
        while (v6 != a3);
      }
      *v16 = v26;
    }
    else
    {
      v19 = &a2[3 * v18];
      if (v15 != result)
      {
        do
        {
          v20 = *v6;
          *((_DWORD *)result + 2) = *((_DWORD *)v6 + 2);
          *(_QWORD *)result = v20;
          v21 = *(uint64_t *)((char *)v6 + 12);
          *((_DWORD *)result + 5) = *((_DWORD *)v6 + 5);
          *(_QWORD *)(result + 12) = v21;
          v6 += 3;
          result += 24;
        }
        while (v6 != v19);
        result = *v16;
      }
      v22 = result;
      if (v19 != a3)
      {
        v22 = result;
        v23 = result;
        do
        {
          v24 = *v19;
          *((_DWORD *)v23 + 2) = *((_DWORD *)v19 + 2);
          *(_QWORD *)v23 = v24;
          v25 = *(uint64_t *)((char *)v19 + 12);
          *((_DWORD *)v23 + 5) = *((_DWORD *)v19 + 5);
          *(_QWORD *)(v23 + 12) = v25;
          v22 += 24;
          v19 += 3;
          v23 += 24;
        }
        while (v19 != a3);
      }
      *v16 = v22;
    }
  }
  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (__sz > 0xAAAAAAAAAAAAAAALL)
      goto LABEL_27;
    v10 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    v11 = 2 * v10;
    if (2 * v10 <= __sz)
      v11 = __sz;
    v12 = v10 >= 0x555555555555555 ? 0xAAAAAAAAAAAAAAALL : v11;
    if (v12 > 0xAAAAAAAAAAAAAAALL)
LABEL_27:
      sub_22329A3C4();
    v13 = 24 * v12;
    result = (char *)operator new(24 * v12);
    *a1 = result;
    a1[1] = result;
    a1[2] = &result[v13];
    v14 = result;
    if (v6 != a3)
    {
      v14 = result;
      do
      {
        *(_QWORD *)v14 = *v6;
        *((_DWORD *)v14 + 2) = *((_DWORD *)v6 + 2);
        *(_QWORD *)(v14 + 12) = *(uint64_t *)((char *)v6 + 12);
        *((_DWORD *)v14 + 5) = *((_DWORD *)v6 + 5);
        v14 += 24;
        v6 += 3;
      }
      while (v6 != a3);
    }
    a1[1] = v14;
  }
  return result;
}

_QWORD *sub_2235621B0(_QWORD *result, char *__src, char *a3, unint64_t a4)
{
  _QWORD *v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  _BYTE *v13;
  size_t v14;
  char *v15;

  v7 = result;
  v8 = result[2];
  v9 = (char *)*result;
  if (v8 - *result < a4)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if ((a4 & 0x8000000000000000) != 0)
      goto LABEL_22;
    v10 = 2 * v8;
    if (2 * v8 <= a4)
      v10 = a4;
    v11 = v8 >= 0x3FFFFFFFFFFFFFFFLL ? 0x7FFFFFFFFFFFFFFFLL : v10;
    if ((v11 & 0x8000000000000000) != 0)
LABEL_22:
      sub_22316E078();
    result = operator new(v11);
    v9 = (char *)result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + v11;
    v12 = a3 - __src;
    if (v12)
      result = memcpy(result, __src, v12);
LABEL_21:
    v7[1] = &v9[v12];
    return result;
  }
  v13 = (_BYTE *)result[1];
  v14 = v13 - v9;
  if (v13 - v9 >= a4)
  {
    v12 = a3 - __src;
    if (v12)
      result = memmove((void *)*result, __src, v12);
    goto LABEL_21;
  }
  v15 = &__src[v14];
  if (v13 != v9)
  {
    result = memmove((void *)*result, __src, v14);
    v9 = (char *)v7[1];
  }
  if (a3 != v15)
    result = memmove(v9, v15, a3 - v15);
  v7[1] = &v9[a3 - v15];
  return result;
}

void sub_2235622F8(void **a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  _OWORD *v28;
  __int128 *v29;
  int v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  _OWORD *v45;
  __int128 *v46;
  int v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  __int128 v59;
  __int128 v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  unint64_t *v64;
  unint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;

  v6 = a2;
  v8 = (uint64_t)a1[2];
  v9 = (char *)*a1;
  if (0xEEEEEEEEEEEEEEEFLL * ((v8 - (uint64_t)*a1) >> 3) < a4)
  {
    if (v9)
    {
      v10 = (char *)a1[1];
      v11 = *a1;
      if (v10 != v9)
      {
        do
        {
          v12 = (std::__shared_weak_count *)*((_QWORD *)v10 - 12);
          if (v12)
          {
            p_shared_owners = (unint64_t *)&v12->__shared_owners_;
            do
              v14 = __ldaxr(p_shared_owners);
            while (__stlxr(v14 - 1, p_shared_owners));
            if (!v14)
            {
              ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
              std::__shared_weak_count::__release_weak(v12);
            }
          }
          v10 -= 120;
        }
        while (v10 != v9);
        v11 = *a1;
      }
      a1[1] = v9;
      operator delete(v11);
      v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 > 0x222222222222222)
      goto LABEL_83;
    v51 = 0xEEEEEEEEEEEEEEEFLL * (v8 >> 3);
    v52 = 2 * v51;
    if (2 * v51 <= a4)
      v52 = a4;
    v53 = v51 >= 0x111111111111111 ? 0x222222222222222 : v52;
    if (v53 > 0x222222222222222)
LABEL_83:
      sub_22316E078();
    v54 = 120 * v53;
    v55 = (char *)operator new(120 * v53);
    *a1 = v55;
    a1[1] = v55;
    for (a1[2] = &v55[v54]; v6 != a3; v55 += 120)
    {
      *(_OWORD *)v55 = *(_OWORD *)v6;
      v56 = *(_QWORD *)(v6 + 24);
      *((_QWORD *)v55 + 2) = *(_QWORD *)(v6 + 16);
      *((_QWORD *)v55 + 3) = v56;
      if (v56)
      {
        v57 = (unint64_t *)(v56 + 8);
        do
          v58 = __ldxr(v57);
        while (__stxr(v58 + 1, v57));
      }
      v55[32] = 0;
      v55[96] = 0;
      if (*(_BYTE *)(v6 + 96))
      {
        v59 = *(_OWORD *)(v6 + 48);
        *((_OWORD *)v55 + 2) = *(_OWORD *)(v6 + 32);
        *((_OWORD *)v55 + 3) = v59;
        v60 = *(_OWORD *)(v6 + 80);
        *((_OWORD *)v55 + 4) = *(_OWORD *)(v6 + 64);
        *((_OWORD *)v55 + 5) = v60;
        v55[96] = 1;
      }
      *(_OWORD *)(v55 + 100) = *(_OWORD *)(v6 + 100);
      v55[116] = *(_BYTE *)(v6 + 116);
      v6 += 120;
    }
    a1[1] = v55;
    return;
  }
  v15 = (char *)a1[1];
  if (0xEEEEEEEEEEEEEEEFLL * ((v15 - v9) >> 3) >= a4)
  {
    if (a2 == a3)
    {
LABEL_76:
      while (v15 != v9)
      {
        v69 = (std::__shared_weak_count *)*((_QWORD *)v15 - 12);
        if (v69)
        {
          v70 = (unint64_t *)&v69->__shared_owners_;
          do
            v71 = __ldaxr(v70);
          while (__stlxr(v71 - 1, v70));
          if (!v71)
          {
            ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
            std::__shared_weak_count::__release_weak(v69);
          }
        }
        v15 -= 120;
      }
      a1[1] = v9;
      return;
    }
    while (1)
    {
      *(_OWORD *)v9 = *(_OWORD *)v6;
      v39 = *(_QWORD *)(v6 + 16);
      v38 = *(_QWORD *)(v6 + 24);
      if (v38)
      {
        v40 = (unint64_t *)(v38 + 8);
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
      }
      v42 = (std::__shared_weak_count *)*((_QWORD *)v9 + 3);
      *((_QWORD *)v9 + 2) = v39;
      *((_QWORD *)v9 + 3) = v38;
      if (!v42)
        goto LABEL_40;
      v43 = (unint64_t *)&v42->__shared_owners_;
      do
        v44 = __ldaxr(v43);
      while (__stlxr(v44 - 1, v43));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
        v45 = v9 + 32;
        v46 = (__int128 *)(v6 + 32);
        v47 = v9[96];
        if (v47 == *(unsigned __int8 *)(v6 + 96))
        {
LABEL_41:
          if (v47)
          {
            v48 = *v46;
            v49 = v46[1];
            v50 = v46[3];
            v45[2] = v46[2];
            v45[3] = v50;
            *v45 = v48;
            v45[1] = v49;
          }
          goto LABEL_32;
        }
      }
      else
      {
LABEL_40:
        v45 = v9 + 32;
        v46 = (__int128 *)(v6 + 32);
        v47 = v9[96];
        if (v47 == *(unsigned __int8 *)(v6 + 96))
          goto LABEL_41;
      }
      if (v47)
      {
        v9[96] = 0;
      }
      else
      {
        v34 = *v46;
        v35 = v46[1];
        v36 = v46[3];
        v45[2] = v46[2];
        v45[3] = v36;
        *v45 = v34;
        v45[1] = v35;
        v9[96] = 1;
      }
LABEL_32:
      v37 = *(_OWORD *)(v6 + 100);
      v9[116] = *(_BYTE *)(v6 + 116);
      *(_OWORD *)(v9 + 100) = v37;
      v6 += 120;
      v9 += 120;
      if (v6 == a3)
      {
        v15 = (char *)a1[1];
        goto LABEL_76;
      }
    }
  }
  v16 = a2 + 8 * ((v15 - v9) >> 3);
  if (v15 == v9)
    goto LABEL_65;
  do
  {
    *(_OWORD *)v9 = *(_OWORD *)v6;
    v22 = *(_QWORD *)(v6 + 16);
    v21 = *(_QWORD *)(v6 + 24);
    if (v21)
    {
      v23 = (unint64_t *)(v21 + 8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 1, v23));
    }
    v25 = (std::__shared_weak_count *)*((_QWORD *)v9 + 3);
    *((_QWORD *)v9 + 2) = v22;
    *((_QWORD *)v9 + 3) = v21;
    if (!v25)
      goto LABEL_23;
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
      v28 = v9 + 32;
      v29 = (__int128 *)(v6 + 32);
      v30 = v9[96];
      if (v30 != *(unsigned __int8 *)(v6 + 96))
      {
LABEL_27:
        if (v30)
        {
          v9[96] = 0;
        }
        else
        {
          v17 = *v29;
          v18 = v29[1];
          v19 = v29[3];
          v28[2] = v29[2];
          v28[3] = v19;
          *v28 = v17;
          v28[1] = v18;
          v9[96] = 1;
        }
        goto LABEL_15;
      }
    }
    else
    {
LABEL_23:
      v28 = v9 + 32;
      v29 = (__int128 *)(v6 + 32);
      v30 = v9[96];
      if (v30 != *(unsigned __int8 *)(v6 + 96))
        goto LABEL_27;
    }
    if (v30)
    {
      v31 = *v29;
      v32 = v29[1];
      v33 = v29[3];
      v28[2] = v29[2];
      v28[3] = v33;
      *v28 = v31;
      v28[1] = v32;
    }
LABEL_15:
    v20 = *(_OWORD *)(v6 + 100);
    v9[116] = *(_BYTE *)(v6 + 116);
    *(_OWORD *)(v9 + 100) = v20;
    v6 += 120;
    v9 += 120;
  }
  while (v6 != v16);
  v9 = (char *)a1[1];
LABEL_65:
  v61 = v9;
  if (v16 != a3)
  {
    v61 = v9;
    do
    {
      *(_OWORD *)v61 = *(_OWORD *)v16;
      v63 = *(_QWORD *)(v16 + 24);
      *((_QWORD *)v61 + 2) = *(_QWORD *)(v16 + 16);
      *((_QWORD *)v61 + 3) = v63;
      if (v63)
      {
        v64 = (unint64_t *)(v63 + 8);
        do
          v65 = __ldxr(v64);
        while (__stxr(v65 + 1, v64));
      }
      v61[32] = 0;
      v61[96] = 0;
      if (*(_BYTE *)(v16 + 96))
      {
        v66 = *(_OWORD *)(v16 + 32);
        v67 = *(_OWORD *)(v16 + 48);
        v68 = *(_OWORD *)(v16 + 80);
        *((_OWORD *)v61 + 4) = *(_OWORD *)(v16 + 64);
        *((_OWORD *)v61 + 5) = v68;
        *((_OWORD *)v61 + 2) = v66;
        *((_OWORD *)v61 + 3) = v67;
        v61[96] = 1;
      }
      v62 = *(_OWORD *)(v16 + 100);
      v61[116] = *(_BYTE *)(v16 + 116);
      *(_OWORD *)(v61 + 100) = v62;
      v16 += 120;
      v61 += 120;
    }
    while (v16 != a3);
  }
  a1[1] = v61;
}

void sub_2235627F4(void **a1, uint64_t a2)
{
  char *v3;
  char *v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*((unsigned __int8 *)a1 + 24) == *(unsigned __int8 *)(a2 + 24))
  {
    if (a1 != (void **)a2)
    {
      if (*((_BYTE *)a1 + 24))
        sub_2235622F8(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3));
    }
  }
  else if (*((_BYTE *)a1 + 24))
  {
    v3 = (char *)*a1;
    if (*a1)
    {
      v4 = (char *)a1[1];
      v5 = *a1;
      if (v4 != v3)
      {
        do
        {
          v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 12);
          if (v6)
          {
            p_shared_owners = (unint64_t *)&v6->__shared_owners_;
            do
              v8 = __ldaxr(p_shared_owners);
            while (__stlxr(v8 - 1, p_shared_owners));
            if (!v8)
            {
              ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
              std::__shared_weak_count::__release_weak(v6);
            }
          }
          v4 -= 120;
        }
        while (v4 != v3);
        v5 = *a1;
      }
      a1[1] = v3;
      operator delete(v5);
    }
    *((_BYTE *)a1 + 24) = 0;
  }
  else
  {
    sub_22326F694(a1, (uint64_t *)a2);
    *((_BYTE *)a1 + 24) = 1;
  }
}

void sub_2235628FC(char **a1, uint64_t a2)
{
  char *v4;
  char *v5;
  char *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;

  if (*((unsigned __int8 *)a1 + 32) == *(unsigned __int8 *)(a2 + 32))
  {
    if (*((_BYTE *)a1 + 32))
    {
      v4 = *a1;
      if (*a1)
      {
        v5 = a1[1];
        v6 = *a1;
        if (v5 != v4)
        {
          do
          {
            v7 = (std::__shared_weak_count *)*((_QWORD *)v5 - 12);
            if (v7)
            {
              p_shared_owners = (unint64_t *)&v7->__shared_owners_;
              do
                v9 = __ldaxr(p_shared_owners);
              while (__stlxr(v9 - 1, p_shared_owners));
              if (!v9)
              {
                ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
                std::__shared_weak_count::__release_weak(v7);
              }
            }
            v5 -= 120;
          }
          while (v5 != v4);
          v6 = *a1;
        }
        a1[1] = v4;
        operator delete(v6);
        *a1 = 0;
        a1[1] = 0;
        a1[2] = 0;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = *(char **)(a2 + 16);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *((_BYTE *)a1 + 24) = *(_BYTE *)(a2 + 24);
    }
  }
  else if (*((_BYTE *)a1 + 32))
  {
    v10 = *a1;
    if (*a1)
    {
      v11 = a1[1];
      v12 = *a1;
      if (v11 != v10)
      {
        do
        {
          v13 = (std::__shared_weak_count *)*((_QWORD *)v11 - 12);
          if (v13)
          {
            v14 = (unint64_t *)&v13->__shared_owners_;
            do
              v15 = __ldaxr(v14);
            while (__stlxr(v15 - 1, v14));
            if (!v15)
            {
              ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
              std::__shared_weak_count::__release_weak(v13);
            }
          }
          v11 -= 120;
        }
        while (v11 != v10);
        v12 = *a1;
      }
      a1[1] = v10;
      operator delete(v12);
    }
    *((_BYTE *)a1 + 32) = 0;
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = *(char **)(a2 + 16);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    *((_BYTE *)a1 + 24) = *(_BYTE *)(a2 + 24);
    *((_BYTE *)a1 + 32) = 1;
  }
}

void sub_223562AAC()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223562AC0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC48850;
  result[1] = v3;
  return result;
}

uint64_t sub_223562AF4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC48850;
  a2[1] = v2;
  return result;
}

uint64_t sub_223562B10(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a1 + 8))(a2, *a3);
}

uint64_t sub_223562B24(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "PFNSt3__16vectorIjNS_9allocatorIjEEEERKN4cv3d3kit4mesh11TriMeshDataEjE")
    return a1 + 8;
  if (((v3 & (unint64_t)"PFNSt3__16vectorIjNS_9allocatorIjEEEERKN4cv3d3kit4mesh11TriMeshDataEjE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "PFNSt3__16vectorIjNS_9allocatorIjEEEERKN4cv3d3kit4mesh11TriMeshDataEjE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"PFNSt3__16vectorIjNS_9allocatorIjEEEERKN4cv3d3kit4mesh11TriMeshDataEjE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223562B90()
{
  return &unk_24EC488D0;
}

void sub_223562B9C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24EC48900;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223562BB0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24EC48900;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223562BE4(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_223562C00(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  _QWORD *v7;
  const std::string::value_type *v8;
  std::string::size_type v9;
  const std::string::value_type *v10;
  std::string::size_type v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  std::mutex *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void **v19;
  void *v20;
  void **v21;
  void *v22;
  uint64_t v23;
  int v24;
  int v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  std::mutex *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void **v49;
  void *v50;
  void **v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  void **v55;
  void *v56;
  void *v57;
  int v58;
  BOOL v59;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  std::mutex *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void **v69;
  void *v70;
  void **v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  void **v75;
  void *v76;
  void *v77;
  int v78;
  __n128 *v81;
  void **v82;
  size_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  std::mutex *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void **v91;
  void *v92;
  void **v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  void **v97;
  void *v98;
  void *v99;
  int v100;
  __n128 *v103;
  void **v104;
  size_t v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  std::mutex *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  int v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  std::mutex *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  std::string::size_type size;
  std::string *v137;
  std::string::size_type v138;
  std::string::size_type v139;
  int v140;
  BOOL v141;
  uint64_t v143;
  void *v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  std::mutex *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _BYTE *v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  int v158;
  void *v159;
  uint64_t *v160;
  std::string::size_type v161;
  std::string *v162;
  std::string::size_type v163;
  std::string::size_type v164;
  int v165;
  BOOL v166;
  int v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  size_t v173;
  const char *v174;
  unsigned __int8 v175;
  unsigned __int8 v176;
  const char *v177;
  size_t v178;
  _BYTE *v179;
  unint64_t v180;
  const char *v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  void **v186;
  NSObject *v187;
  uint64_t v188;
  uint64_t v189;
  size_t v190;
  std::__shared_weak_count_vtbl *v191;
  std::__shared_weak_count *v192;
  std::__shared_weak_count *v193;
  unint64_t *p_shared_owners;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  int v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  __int128 v205;
  void *v206;
  int v207;
  std::__shared_weak_count *v208;
  unint64_t *v209;
  unint64_t v210;
  std::__shared_weak_count *v211;
  unint64_t *v212;
  unint64_t v213;
  std::string::size_type v214;
  std::__shared_weak_count *v215;
  unint64_t *v216;
  unint64_t v217;
  std::__shared_weak_count *v218;
  unint64_t *v219;
  unint64_t v220;
  std::__shared_weak_count *v221;
  unint64_t *v222;
  unint64_t v223;
  std::__shared_weak_count *v224;
  unint64_t *v225;
  unint64_t v226;
  void *v227;
  std::__shared_weak_count *v228;
  unint64_t *v229;
  unint64_t v230;
  int v231;
  uint64_t v233;
  uint64_t v234;
  void *__p[2];
  __int128 v236;
  const char *v237;
  int v238;
  const char *v239;
  uint64_t v240;
  std::__shared_weak_count *v241;
  void *v242[2];
  uint64_t v243;
  char v244;
  void *__dst[2];
  uint64_t v246;
  char v247;
  std::string v248;
  void *v249[2];
  uint64_t v250;
  void *v251;
  __int128 v252;
  uint64_t v253;
  std::string v254;
  std::string v255;
  char v256;
  __int128 v257;
  _BYTE v258[40];
  void *v259[2];
  unint64_t v260;
  char v261;
  uint64_t v262;

  v262 = *MEMORY[0x24BDAC8D0];
  memset(&v255, 0, sizeof(v255));
  memset(&v254, 0, sizeof(v254));
  v253 = 0;
  v4 = *a1;
  v3 = a1[1];
  if (*a1 == v3)
  {
    v6 = 0;
    v5 = 0;
  }
  else
  {
    v5 = 0;
    v6 = 0;
    do
    {
      while (**(_QWORD **)(v4 + 16) != *(_QWORD *)(*(_QWORD *)(v4 + 16) + 8))
      {
        sub_223564F28((uint64_t)v258, (unsigned __int8 *)v4);
        if (v258[23] >= 0)
          v8 = v258;
        else
          v8 = *(const std::string::value_type **)v258;
        if (v258[23] >= 0)
          v9 = v258[23];
        else
          v9 = *(_QWORD *)&v258[8];
        std::string::append(&v254, v8, v9);
        if ((v258[23] & 0x80000000) != 0)
          operator delete(*(void **)v258);
        LODWORD(v253) = v253 + 1;
        v7 = *(_QWORD **)(v4 + 16);
        v5 -= 1431655765 * ((v7[1] - *v7) >> 2);
        v6 -= 1431655765 * ((v7[15] - v7[14]) >> 2);
        v4 += 120;
        if (v4 == v3)
          goto LABEL_24;
      }
      sub_223564F28((uint64_t)v258, (unsigned __int8 *)v4);
      if (v258[23] >= 0)
        v10 = v258;
      else
        v10 = *(const std::string::value_type **)v258;
      if (v258[23] >= 0)
        v11 = v258[23];
      else
        v11 = *(_QWORD *)&v258[8];
      std::string::append(&v255, v10, v11);
      if ((v258[23] & 0x80000000) != 0)
        operator delete(*(void **)v258);
      ++HIDWORD(v253);
      v4 += 120;
    }
    while (v4 != v3);
  }
LABEL_24:
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v12 = sub_2241471F8();
    v13 = v12[2];
    if (!v13)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v13 = v12[2];
    }
    v14 = *(_QWORD *)(v13 + 64);
    v15 = (std::mutex *)(v14 + 32);
    std::mutex::lock((std::mutex *)(v14 + 32));
    v17 = *(_QWORD *)(v14 + 96);
    v16 = *(_QWORD *)(v14 + 104);
    std::mutex::unlock(v15);
    if (v17 != v16)
    {
      *(_QWORD *)v258 = "cv3d.recon.";
      *(_QWORD *)&v258[8] = 11;
      *(_QWORD *)&v258[16] = "Stats.MeshingEngine.Chunks";
      *(_QWORD *)&v258[24] = 26;
      sub_2231A9820((uint64_t)v258, (uint64_t)&v258[32], 0, 0, (std::string *)__p);
      v18 = (void *)BYTE7(v236);
      v19 = (void **)__p[0];
      v20 = __p[1];
      sub_2241471F8();
      if ((char)v18 >= 0)
        v21 = __p;
      else
        v21 = v19;
      if ((char)v18 >= 0)
        v22 = v18;
      else
        v22 = v20;
      v23 = (*(uint64_t (**)(uint64_t *, void **, void *))(qword_2557952E0 + 48))(&qword_2557952E0, v21, v22);
      v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 24))(v23);
      v25 = v24;
      if (SBYTE7(v236) < 0)
      {
        operator delete(__p[0]);
        if (!v25)
          goto LABEL_180;
      }
      else if (!v24)
      {
        goto LABEL_180;
      }
      *(_QWORD *)&v258[8] = 0;
      *(_QWORD *)&v258[16] = 0;
      *(_QWORD *)v258 = &v258[8];
      sub_2245314F4(v258, __p);
      *(_OWORD *)v249 = *(_OWORD *)__p;
      sub_22323DF84((uint64_t)v258, *(char **)&v258[8]);
      v258[23] = 11;
      strcpy(v258, "system time");
      sub_2240043CC(__p);
      sub_224527BAC((uint64_t)v258, (CFStringRef *)&v251);
      sub_2231AEDB8((uint64_t)v249, v251, (uint64_t)__p);
      v26 = (std::__shared_weak_count *)v252;
      if ((_QWORD)v252)
      {
        v27 = (unint64_t *)(v252 + 8);
        do
          v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      if (SBYTE7(v236) < 0)
        operator delete(__p[0]);
      if ((v258[23] & 0x80000000) != 0)
        operator delete(*(void **)v258);
      *(_QWORD *)v258 = operator new(0x19uLL);
      *(_OWORD *)&v258[8] = xmmword_2245B9430;
      strcpy(*(char **)v258, "meshlist updated chunks");
      sub_224527BAC((uint64_t)v258, (CFStringRef *)__p);
      sub_2231AEDB8((uint64_t)v249, __p[0], (uint64_t)&v254);
      v29 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v30 = (unint64_t *)((char *)__p[1] + 8);
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      if ((v258[23] & 0x80000000) != 0)
        operator delete(*(void **)v258);
      *(_QWORD *)v258 = operator new(0x19uLL);
      *(_OWORD *)&v258[8] = xmmword_2245B9430;
      strcpy(*(char **)v258, "meshlist removed chunks");
      sub_224527BAC((uint64_t)v258, (CFStringRef *)__p);
      sub_2231AEDB8((uint64_t)v249, __p[0], (uint64_t)&v255);
      v32 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v33 = (unint64_t *)((char *)__p[1] + 8);
        do
          v34 = __ldaxr(v33);
        while (__stlxr(v34 - 1, v33));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
          std::__shared_weak_count::__release_weak(v32);
        }
      }
      if ((v258[23] & 0x80000000) != 0)
        operator delete(*(void **)v258);
      v258[23] = 13;
      strcpy(v258, "count removed");
      sub_224527BAC((uint64_t)v258, (CFStringRef *)__p);
      sub_22356F430((uint64_t)v249, __p[0], (unsigned int *)&v253 + 1);
      v35 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v36 = (unint64_t *)((char *)__p[1] + 8);
        do
          v37 = __ldaxr(v36);
        while (__stlxr(v37 - 1, v36));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      if ((v258[23] & 0x80000000) != 0)
        operator delete(*(void **)v258);
      v258[23] = 13;
      strcpy(v258, "count updated");
      sub_224527BAC((uint64_t)v258, (CFStringRef *)__p);
      sub_22356F430((uint64_t)v249, __p[0], (unsigned int *)&v253);
      v38 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v39 = (unint64_t *)((char *)__p[1] + 8);
        do
          v40 = __ldaxr(v39);
        while (__stlxr(v40 - 1, v39));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      if ((v258[23] & 0x80000000) != 0)
        operator delete(*(void **)v258);
      *(_QWORD *)v258 = "cv3d.recon.";
      *(_QWORD *)&v258[8] = 11;
      *(_QWORD *)&v258[16] = "Stats.MeshingEngine.Chunks";
      *(_QWORD *)&v258[24] = 26;
      sub_2231A9820((uint64_t)v258, (uint64_t)&v258[32], 0, 0, (std::string *)__p);
      sub_224569D7C();
      sub_224569A80();
      if (os_variant_has_internal_diagnostics())
      {
        v41 = sub_2241471F8();
        v42 = v41[2];
        if (!v42)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v42 = v41[2];
        }
        v43 = *(_QWORD *)(v42 + 64);
        v44 = (std::mutex *)(v43 + 32);
        std::mutex::lock((std::mutex *)(v43 + 32));
        v45 = v5;
        v47 = *(_QWORD *)(v43 + 96);
        v46 = *(_QWORD *)(v43 + 104);
        std::mutex::unlock(v44);
        v59 = v47 == v46;
        v5 = v45;
        if (!v59)
        {
          v48 = (void *)BYTE7(v236);
          v49 = (void **)__p[0];
          v50 = __p[1];
          sub_2241471F8();
          v51 = (char)v48 >= 0 ? __p : v49;
          v52 = (char)v48 >= 0 ? v48 : v50;
          v53 = (*(uint64_t (**)(uint64_t *, void **, void *))(qword_2557952E0 + 48))(&qword_2557952E0, v51, v52);
          v5 = v45;
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v53 + 24))(v53))
          {
            memset(v258, 0, 32);
            *(_DWORD *)&v258[32] = 728325608;
            kdebug_trace();
            sub_223565048(v53, (uint64_t)v249);
            kdebug_trace();
          }
        }
      }
      memset(v258, 0, 32);
      *(_DWORD *)&v258[32] = 728325624;
      kdebug_trace();
      v54 = BYTE7(v236);
      if (SBYTE7(v236) < 0)
        v54 = (unint64_t)__p[1];
      if (v54 >= 0x11)
      {
        v55 = __p;
        if (SBYTE7(v236) < 0)
          v55 = (void **)__p[0];
        v56 = *v55;
        v57 = v55[1];
        v58 = *((unsigned __int8 *)v55 + 16);
        v59 = v56 == (void *)0x6365722E64337663 && v57 == (void *)0x73746174532E6E6FLL;
        if (v59 && v58 == 46)
          sub_223187510();
      }
      kdebug_trace();
      if (SBYTE7(v236) < 0)
        operator delete(__p[0]);
      *(_QWORD *)v258 = "cv3d.recon.";
      *(_QWORD *)&v258[8] = 11;
      *(_QWORD *)&v258[16] = "Stats.MeshingEngine.Chunks";
      *(_QWORD *)&v258[24] = 26;
      sub_2231A9820((uint64_t)v258, (uint64_t)&v258[32], 0, 0, (std::string *)__p);
      sub_224569D7C();
      sub_224569A80();
      if (os_variant_has_internal_diagnostics())
      {
        v61 = sub_2241471F8();
        v62 = v61[2];
        if (!v62)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v62 = v61[2];
        }
        v63 = *(_QWORD *)(v62 + 64);
        v64 = (std::mutex *)(v63 + 32);
        std::mutex::lock((std::mutex *)(v63 + 32));
        v65 = v5;
        v67 = *(_QWORD *)(v63 + 96);
        v66 = *(_QWORD *)(v63 + 104);
        std::mutex::unlock(v64);
        v59 = v67 == v66;
        v5 = v65;
        if (!v59)
        {
          v68 = (void *)BYTE7(v236);
          v69 = (void **)__p[0];
          v70 = __p[1];
          sub_2241471F8();
          v71 = (char)v68 >= 0 ? __p : v69;
          v72 = (char)v68 >= 0 ? v68 : v70;
          v73 = (*(uint64_t (**)(uint64_t *, void **, void *))(qword_2557952E0 + 48))(&qword_2557952E0, v71, v72);
          v5 = v65;
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v73 + 24))(v73))
          {
            memset(v258, 0, 32);
            *(_DWORD *)&v258[32] = 728325608;
            kdebug_trace();
            sub_22356511C((double *)&qword_255788F20, v73, (int *)&v253, "Updated");
            kdebug_trace();
          }
        }
      }
      memset(v258, 0, 32);
      *(_DWORD *)&v258[32] = 728325624;
      kdebug_trace();
      v74 = BYTE7(v236);
      if (SBYTE7(v236) < 0)
        v74 = (unint64_t)__p[1];
      if (v74 >= 0x11)
      {
        v75 = __p;
        if (SBYTE7(v236) < 0)
          v75 = (void **)__p[0];
        v76 = *v75;
        v77 = v75[1];
        v78 = *((unsigned __int8 *)v75 + 16);
        if (v76 == (void *)0x6365722E64337663 && v77 == (void *)0x73746174532E6E6FLL && v78 == 46)
        {
          v81 = sub_223187510();
          if ((SBYTE7(v236) & 0x80u) == 0)
            v82 = __p;
          else
            v82 = (void **)__p[0];
          if ((SBYTE7(v236) & 0x80u) == 0)
            v83 = BYTE7(v236);
          else
            v83 = (size_t)__p[1];
          sub_223532E4C(v81, v82, v83, (unsigned int *)&v253, (uint64_t)"Updated", 7);
        }
      }
      kdebug_trace();
      if (SBYTE7(v236) < 0)
        operator delete(__p[0]);
      *(_QWORD *)v258 = "cv3d.recon.";
      *(_QWORD *)&v258[8] = 11;
      *(_QWORD *)&v258[16] = "Stats.MeshingEngine.Chunks";
      *(_QWORD *)&v258[24] = 26;
      sub_2231A9820((uint64_t)v258, (uint64_t)&v258[32], 0, 0, (std::string *)__p);
      sub_224569D7C();
      sub_224569A80();
      if (os_variant_has_internal_diagnostics())
      {
        v84 = sub_2241471F8();
        v85 = v84[2];
        if (!v85)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v85 = v84[2];
        }
        v86 = *(_QWORD *)(v85 + 64);
        v87 = (std::mutex *)(v86 + 32);
        std::mutex::lock((std::mutex *)(v86 + 32));
        v89 = *(_QWORD *)(v86 + 96);
        v88 = *(_QWORD *)(v86 + 104);
        std::mutex::unlock(v87);
        if (v89 != v88)
        {
          v90 = (void *)BYTE7(v236);
          v91 = (void **)__p[0];
          v92 = __p[1];
          sub_2241471F8();
          v93 = (char)v90 >= 0 ? __p : v91;
          v94 = (char)v90 >= 0 ? v90 : v92;
          v95 = (*(uint64_t (**)(uint64_t *, void **, void *))(qword_2557952E0 + 48))(&qword_2557952E0, v93, v94);
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v95 + 24))(v95))
          {
            memset(v258, 0, 32);
            *(_DWORD *)&v258[32] = 728325608;
            kdebug_trace();
            sub_223565258((double *)&qword_255788F20, v95, (int *)&v253 + 1, "Erased");
            kdebug_trace();
          }
        }
      }
      memset(v258, 0, 32);
      *(_DWORD *)&v258[32] = 728325624;
      kdebug_trace();
      v96 = BYTE7(v236);
      if (SBYTE7(v236) < 0)
        v96 = (unint64_t)__p[1];
      if (v96 >= 0x11)
      {
        v97 = __p;
        if (SBYTE7(v236) < 0)
          v97 = (void **)__p[0];
        v98 = *v97;
        v99 = v97[1];
        v100 = *((unsigned __int8 *)v97 + 16);
        if (v98 == (void *)0x6365722E64337663 && v99 == (void *)0x73746174532E6E6FLL && v100 == 46)
        {
          v103 = sub_223187510();
          if ((SBYTE7(v236) & 0x80u) == 0)
            v104 = __p;
          else
            v104 = (void **)__p[0];
          if ((SBYTE7(v236) & 0x80u) == 0)
            v105 = BYTE7(v236);
          else
            v105 = (size_t)__p[1];
          sub_223532E4C(v103, v104, v105, (unsigned int *)&v253 + 1, (uint64_t)"Erased", 6);
        }
      }
      kdebug_trace();
      if (SBYTE7(v236) < 0)
        operator delete(__p[0]);
      v106 = (std::__shared_weak_count *)v249[1];
      if (v249[1])
      {
        v107 = (unint64_t *)((char *)v249[1] + 8);
        do
          v108 = __ldaxr(v107);
        while (__stlxr(v108 - 1, v107));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
          std::__shared_weak_count::__release_weak(v106);
        }
      }
    }
  }
LABEL_180:
  v251 = operator new(0x20uLL);
  v252 = xmmword_2245B8D50;
  strcpy((char *)v251, "MeshingEngine.Output.Chunks");
  sub_224569D7C();
  sub_224569A80();
  v231 = v5;
  if (os_variant_has_internal_diagnostics())
  {
    v109 = sub_2241471F8();
    v110 = v109[2];
    if (!v110)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v110 = v109[2];
    }
    v111 = *(_QWORD *)(v110 + 64);
    v112 = (std::mutex *)(v111 + 32);
    std::mutex::lock((std::mutex *)(v111 + 32));
    v114 = *(_QWORD *)(v111 + 96);
    v113 = *(_QWORD *)(v111 + 104);
    std::mutex::unlock(v112);
    if (v114 != v113)
    {
      *(_QWORD *)v258 = "cv3d.recon.";
      *(_QWORD *)&v258[8] = 11;
      v115 = HIBYTE(v252);
      v116 = &v251;
      if (v252 < 0)
      {
        v116 = v251;
        v115 = v252;
      }
      *(_QWORD *)&v258[16] = v116;
      *(_QWORD *)&v258[24] = v115;
      sub_2231A9820((uint64_t)v258, (uint64_t)&v258[32], 0, 0, (std::string *)__p);
      sub_2241471F8();
      v117 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      v118 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v117 + 24))(v117);
      v119 = v118;
      if (SBYTE7(v236) < 0)
      {
        operator delete(__p[0]);
        if (!v119)
          goto LABEL_290;
      }
      else if (!v118)
      {
        goto LABEL_290;
      }
      v233 = a1[1];
      if (*a1 != v233)
      {
        v120 = *a1 + 32;
        while (1)
        {
          v121 = v120 - 32;
          *(_DWORD *)&v258[24] = 0;
          sub_22319B83C((uint64_t)__p, (uint64_t)v258, (unsigned __int8 *)(v120 - 32));
          if (*(_DWORD *)&v258[24] == -1)
            sub_22316DD70();
          __p[0] = &v248;
          ((void (*)(void **__return_ptr, void **, _BYTE *))off_24EC48970[*(unsigned int *)&v258[24]])(v249, __p, v258);
          if (*(_DWORD *)&v258[24] != -1)
            ((void (*)(void **, _BYTE *))off_24EC48958[*(unsigned int *)&v258[24]])(__p, v258);
          if (*(_BYTE *)(v120 + 64))
          {
            *(_QWORD *)v258 = "cv3d.recon.";
            *(_QWORD *)&v258[8] = 11;
            v122 = HIBYTE(v252);
            v123 = &v251;
            if (v252 < 0)
            {
              v123 = v251;
              v122 = v252;
            }
            *(_QWORD *)&v258[16] = v123;
            *(_QWORD *)&v258[24] = v122;
            sub_2231A9820((uint64_t)v258, (uint64_t)&v258[32], 0, 0, &v248);
            sub_224569D7C();
            sub_224569A80();
            if (os_variant_has_internal_diagnostics())
            {
              v124 = sub_2241471F8();
              v125 = v124[2];
              if (!v125)
              {
                if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
                {
                  abort();
                }
                v125 = v124[2];
              }
              v126 = *(_QWORD *)(v125 + 64);
              v127 = (std::mutex *)(v126 + 32);
              std::mutex::lock((std::mutex *)(v126 + 32));
              v129 = *(_QWORD *)(v126 + 96);
              v128 = *(_QWORD *)(v126 + 104);
              std::mutex::unlock(v127);
              if (v129 != v128)
              {
                sub_2241471F8();
                v130 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
                if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v130 + 24))(v130))
                {
                  *(_OWORD *)__p = 0u;
                  v236 = 0u;
                  LODWORD(v237) = 728325608;
                  kdebug_trace();
                  sub_224141CD8((uint64_t *)&v257, (_QWORD *)v120, flt_22469B46C);
                  if (SHIBYTE(v250) < 0)
                  {
                    sub_223197FA4(__dst, v249[0], (unint64_t)v249[1]);
                  }
                  else
                  {
                    *(_OWORD *)__dst = *(_OWORD *)v249;
                    v246 = v250;
                  }
                  v247 = 1;
                  v131 = v257;
                  v132 = operator new();
                  *(_BYTE *)v132 = 0;
                  *(_DWORD *)(v132 + 128) = -1;
                  v133 = *(unsigned int *)(v131 + 128);
                  if ((_DWORD)v133 != -1)
                  {
                    ((void (*)(char *, uint64_t, uint64_t))off_24EC6BD10[v133])(&v256, v132, v131);
                    *(_DWORD *)(v132 + 128) = v133;
                  }
                  *(_BYTE *)(v132 + 136) = *(_BYTE *)(v131 + 136);
                  *(_QWORD *)v258 = v132;
                  v258[8] = 0;
                  v258[32] = 0;
                  if (v247)
                  {
                    *(_OWORD *)&v258[8] = *(_OWORD *)__dst;
                    *(_QWORD *)&v258[24] = v246;
                    __dst[1] = 0;
                    v246 = 0;
                    __dst[0] = 0;
                    v258[32] = 1;
                  }
                  LOBYTE(v259[0]) = 0;
                  v261 = 0;
                  sub_22352DE04((double *)&qword_255788F20, v130, (uint64_t)v258, (uint64_t)v249);
                  if (v261 && SHIBYTE(v260) < 0)
                    operator delete(v259[0]);
                  if (v258[32] && (v258[31] & 0x80000000) != 0)
                    operator delete(*(void **)&v258[8]);
                  v134 = *(_QWORD *)v258;
                  *(_QWORD *)v258 = 0;
                  if (v134)
                    MEMORY[0x227684CE8](v134, 0x1000C4072FAA15ELL);
                  if (v247 && SHIBYTE(v246) < 0)
                    operator delete(__dst[0]);
                  v135 = v257;
                  *(_QWORD *)&v257 = 0;
                  if (v135)
                    MEMORY[0x227684CE8](v135, 0x1000C4072FAA15ELL);
                  kdebug_trace();
                }
              }
            }
            memset(v258, 0, 32);
            *(_DWORD *)&v258[32] = 728325624;
            kdebug_trace();
            size = HIBYTE(v248.__r_.__value_.__r.__words[2]);
            if ((v248.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              size = v248.__r_.__value_.__l.__size_;
            if (size >= 0x11)
            {
              v137 = (v248.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                   ? &v248
                   : (std::string *)v248.__r_.__value_.__r.__words[0];
              v138 = v137->__r_.__value_.__r.__words[0];
              v139 = v137->__r_.__value_.__l.__size_;
              v140 = v137->__r_.__value_.__s.__data_[16];
              v141 = v138 == 0x6365722E64337663 && v139 == 0x73746174532E6E6FLL;
              if (v141 && v140 == 46)
              {
                sub_223187510();
                sub_224141CD8((uint64_t *)__p, (_QWORD *)v120, flt_22469B46C);
                if (SHIBYTE(v250) < 0)
                {
                  sub_223197FA4(v242, v249[0], (unint64_t)v249[1]);
                }
                else
                {
                  *(_OWORD *)v242 = *(_OWORD *)v249;
                  v243 = v250;
                }
                v244 = 1;
                v154 = __p[0];
                v155 = operator new();
                *(_BYTE *)v155 = 0;
                *(_DWORD *)(v155 + 128) = -1;
                v156 = *((unsigned int *)v154 + 32);
                if ((_DWORD)v156 != -1)
                {
                  ((void (*)(__int128 *, uint64_t, _BYTE *))off_24EC6BD10[v156])(&v257, v155, v154);
                  *(_DWORD *)(v155 + 128) = v156;
                }
                *(_BYTE *)(v155 + 136) = v154[136];
                if (v244)
                {
                  v157 = v242[0];
                  v158 = SHIBYTE(v243);
                  v242[1] = 0;
                  v243 = 0;
                  v242[0] = 0;
                  if (v158 < 0)
                    operator delete(v157);
                }
                MEMORY[0x227684CE8](v155, 0x1000C4072FAA15ELL);
                if (v244 && SHIBYTE(v243) < 0)
                  operator delete(v242[0]);
                v159 = __p[0];
                __p[0] = 0;
                if (v159)
                  MEMORY[0x227684CE8](v159, 0x1000C4072FAA15ELL);
              }
            }
            kdebug_trace();
            if (SHIBYTE(v248.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v248.__r_.__value_.__l.__data_);
          }
          *(_QWORD *)v258 = "cv3d.recon.";
          *(_QWORD *)&v258[8] = 11;
          v143 = HIBYTE(v252);
          v144 = &v251;
          if (v252 < 0)
          {
            v144 = v251;
            v143 = v252;
          }
          *(_QWORD *)&v258[16] = v144;
          *(_QWORD *)&v258[24] = v143;
          sub_2231A9820((uint64_t)v258, (uint64_t)&v258[32], 0, 0, &v248);
          sub_224569D7C();
          sub_224569A80();
          if (os_variant_has_internal_diagnostics())
          {
            v145 = sub_2241471F8();
            v146 = v145[2];
            if (!v146)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
              {
                abort();
              }
              v146 = v145[2];
            }
            v147 = *(_QWORD *)(v146 + 64);
            v148 = (std::mutex *)(v147 + 32);
            std::mutex::lock((std::mutex *)(v147 + 32));
            v150 = *(_QWORD *)(v147 + 96);
            v149 = *(_QWORD *)(v147 + 104);
            std::mutex::unlock(v148);
            if (v150 != v149)
            {
              sub_2241471F8();
              v151 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
              if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v151 + 24))(v151))
              {
                memset(v258, 0, 32);
                *(_DWORD *)&v258[32] = 728325608;
                kdebug_trace();
                v152 = *(_QWORD *)(v120 - 16);
                v153 = *a2;
                if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v151 + 24))(v151))
                {
                  if (SHIBYTE(v250) < 0)
                  {
                    sub_223197FA4(__p, v249[0], (unint64_t)v249[1]);
                  }
                  else
                  {
                    *(_OWORD *)__p = *(_OWORD *)v249;
                    *(_QWORD *)&v236 = v250;
                  }
                  *(_QWORD *)&v257 = (uint64_t)((double)v153 / 1000000000.0 * 1000000000.0);
                  *((_QWORD *)&v257 + 1) = 2;
                  v160 = sub_2241471F8();
                  sub_22329D76C((uint64_t)v160, v151, v152, (uint64_t)__p, &v257);
                  if (SBYTE7(v236) < 0)
                    operator delete(__p[0]);
                }
                kdebug_trace();
              }
            }
          }
          memset(v258, 0, 32);
          *(_DWORD *)&v258[32] = 728325624;
          kdebug_trace();
          v161 = HIBYTE(v248.__r_.__value_.__r.__words[2]);
          if ((v248.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v161 = v248.__r_.__value_.__l.__size_;
          if (v161 >= 0x11)
          {
            v162 = (v248.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                 ? &v248
                 : (std::string *)v248.__r_.__value_.__r.__words[0];
            v163 = v162->__r_.__value_.__r.__words[0];
            v164 = v162->__r_.__value_.__l.__size_;
            v165 = v162->__r_.__value_.__s.__data_[16];
            v166 = v163 == 0x6365722E64337663 && v164 == 0x73746174532E6E6FLL;
            if (v166 && v165 == 46)
              sub_223187510();
          }
          kdebug_trace();
          if (SHIBYTE(v248.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v248.__r_.__value_.__l.__data_);
            if ((SHIBYTE(v250) & 0x80000000) == 0)
              goto LABEL_194;
LABEL_289:
            operator delete(v249[0]);
            v120 += 120;
            if (v121 + 120 == v233)
              break;
          }
          else
          {
            if (SHIBYTE(v250) < 0)
              goto LABEL_289;
LABEL_194:
            v120 += 120;
            if (v121 + 120 == v233)
              break;
          }
        }
      }
    }
  }
LABEL_290:
  sub_223565394(&v257);
  if (**(int **)(v257 + 56) > 3)
    goto LABEL_378;
  v168 = *(unsigned __int8 *)(v257 + 72);
  v169 = sub_22322F254(v257, "OSLogSurrogateAppender", 1, 0);
  v170 = v169;
  if (!v168 && !v169)
    goto LABEL_378;
  __p[0] = &v257;
  __p[1] = (void *)std::chrono::steady_clock::now().__d_.__rep_;
  *(std::chrono::system_clock::time_point *)&v236 = std::chrono::system_clock::now();
  DWORD2(v236) = 3;
  v237 = "unknown file";
  v238 = 153;
  v240 = 0;
  v241 = 0;
  v239 = "unknown function";
  v171 = *(_QWORD *)__p[0];
  v172 = *(_QWORD *)__p[0] + 16;
  v234 = *(_QWORD *)__p[0];
  if (*(char *)(*(_QWORD *)__p[0] + 39) < 0)
  {
    v174 = *(const char **)(v171 + 16);
    v173 = *(_QWORD *)(v171 + 24);
    v176 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v176 & 1) != 0)
      goto LABEL_297;
  }
  else
  {
    v173 = *(unsigned __int8 *)(*(_QWORD *)__p[0] + 39);
    v174 = (const char *)(*(_QWORD *)__p[0] + 16);
    v175 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v175 & 1) != 0)
      goto LABEL_297;
  }
  if (__cxa_guard_acquire(&qword_255788F58))
  {
    sub_224568628((uint64_t)v258);
    sub_223199C58("com.apple.cv3d", (unint64_t)v258, &xmmword_255788F40);
    if (v258[24] && (v258[23] & 0x80000000) != 0)
      operator delete(*(void **)v258);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
    __cxa_guard_release(&qword_255788F58);
  }
LABEL_297:
  if (byte_255788F57 >= 0)
    v177 = (const char *)&xmmword_255788F40;
  else
    v177 = (const char *)xmmword_255788F40;
  if (byte_255788F57 >= 0)
    v178 = byte_255788F57;
  else
    v178 = *((_QWORD *)&xmmword_255788F40 + 1);
  *(_QWORD *)v258 = os_log_create(v177, v174);
  v179 = &v258[8];
  if (v178 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v178 >= 0x17)
  {
    v180 = v170;
    v181 = v174;
    v182 = v172;
    v183 = v168;
    v184 = (v178 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v178 | 7) != 0x17)
      v184 = v178 | 7;
    v185 = v184 + 1;
    v179 = operator new(v184 + 1);
    *(_QWORD *)&v258[16] = v178;
    *(_QWORD *)&v258[24] = v185 | 0x8000000000000000;
    *(_QWORD *)&v258[8] = v179;
    v168 = v183;
    v172 = v182;
    v174 = v181;
    v170 = v180;
    goto LABEL_310;
  }
  v258[31] = v178;
  if (v178)
LABEL_310:
    memmove(v179, v177, v178);
  v179[v178] = 0;
  v258[32] = 1;
  v186 = v259;
  if (v173 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v173 >= 0x17)
  {
    v188 = (v173 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v173 | 7) != 0x17)
      v188 = v173 | 7;
    v189 = v188 + 1;
    v186 = (void **)operator new(v188 + 1);
    v259[1] = (void *)v173;
    v260 = v189 | 0x8000000000000000;
    v259[0] = v186;
  }
  else
  {
    HIBYTE(v260) = v173;
    if (!v173)
    {
      LOBYTE(v259[0]) = 0;
      v261 = 1;
      v187 = *(NSObject **)v258;
      if ((SHIBYTE(v260) & 0x80000000) == 0)
        goto LABEL_315;
      goto LABEL_321;
    }
  }
  memmove(v186, v174, v173);
  *((_BYTE *)v186 + v173) = 0;
  v261 = 1;
  v187 = *(NSObject **)v258;
  if ((SHIBYTE(v260) & 0x80000000) == 0)
  {
LABEL_315:
    if (!v258[32])
      goto LABEL_324;
    goto LABEL_322;
  }
LABEL_321:
  operator delete(v259[0]);
  if (!v258[32])
    goto LABEL_324;
LABEL_322:
  if ((v258[31] & 0x80000000) != 0)
    operator delete(*(void **)&v258[8]);
LABEL_324:
  if (*(_QWORD *)v258)
    os_release(*(void **)v258);
  if (v170 && *(_QWORD *)(v170 + 24))
  {
    v190 = _os_log_pack_size();
    v191 = (std::__shared_weak_count_vtbl *)operator new(v190, (std::align_val_t)8uLL);
    v192 = (std::__shared_weak_count *)operator new();
    v193 = v192;
    v192->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v192->__shared_owners_;
    v192->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v192->__shared_weak_owners_ = 0;
    v192[1].__vftable = v191;
    *(_QWORD *)v258 = v191;
    *(_QWORD *)&v258[8] = v191;
    *(_QWORD *)&v258[16] = v192;
    do
      v195 = __ldxr(p_shared_owners);
    while (__stxr(v195 + 1, p_shared_owners));
    *(_QWORD *)&v258[24] = 0;
    *(_QWORD *)&v258[32] = 0;
    v259[0] = 0;
    do
      v196 = __ldaxr(p_shared_owners);
    while (__stlxr(v196 - 1, p_shared_owners));
    if (!v196)
    {
      ((void (*)(std::__shared_weak_count *))v192->__on_zero_shared)(v192);
      std::__shared_weak_count::__release_weak(v193);
    }
    v197 = *(_QWORD *)v258;
    v198 = _os_log_pack_fill();
    v199 = v253;
    v200 = HIDWORD(v253);
    *(_DWORD *)v198 = 67109888;
    *(_DWORD *)(v198 + 4) = v199;
    *(_WORD *)(v198 + 8) = 1024;
    *(_DWORD *)(v198 + 10) = v231;
    *(_WORD *)(v198 + 14) = 1024;
    *(_DWORD *)(v198 + 16) = v6;
    *(_WORD *)(v198 + 20) = 1024;
    *(_DWORD *)(v198 + 22) = v200;
    v201 = (char *)operator new();
    v202 = *(unsigned __int8 *)(v234 + 39);
    v203 = *(_QWORD *)(v234 + 16);
    v204 = *(_QWORD *)(v234 + 24);
    v205 = *(_OWORD *)&v258[24];
    *(_OWORD *)(v201 + 8) = *(_OWORD *)&v258[8];
    if ((v202 & 0x80u) != 0)
      v202 = v204;
    else
      v203 = v172;
    *(_QWORD *)v201 = v197;
    *(_QWORD *)&v258[8] = 0;
    *(_QWORD *)&v258[16] = 0;
    *(_OWORD *)(v201 + 24) = v205;
    *(_QWORD *)&v258[24] = 0;
    *(_QWORD *)&v258[32] = 0;
    *((_QWORD *)v201 + 5) = v203;
    *((_QWORD *)v201 + 6) = v202;
    v201[56] = 1;
    v248.__r_.__value_.__r.__words[0] = 0;
    v249[0] = v201;
    (*(void (**)(_QWORD, void **))(**(_QWORD **)(v170 + 24) + 40))(*(_QWORD *)(v170 + 24), v249);
    v206 = v249[0];
    v249[0] = 0;
    v207 = v231;
    if (v206)
    {
      v208 = (std::__shared_weak_count *)*((_QWORD *)v206 + 4);
      if (v208)
      {
        v209 = (unint64_t *)&v208->__shared_owners_;
        do
          v210 = __ldaxr(v209);
        while (__stlxr(v210 - 1, v209));
        if (!v210)
        {
          ((void (*)(std::__shared_weak_count *))v208->__on_zero_shared)(v208);
          std::__shared_weak_count::__release_weak(v208);
        }
      }
      v211 = (std::__shared_weak_count *)*((_QWORD *)v206 + 2);
      if (v211)
      {
        v212 = (unint64_t *)&v211->__shared_owners_;
        do
          v213 = __ldaxr(v212);
        while (__stlxr(v213 - 1, v212));
        if (!v213)
        {
          ((void (*)(std::__shared_weak_count *))v211->__on_zero_shared)(v211);
          std::__shared_weak_count::__release_weak(v211);
        }
      }
      MEMORY[0x227684CE8](v206, 0x10F0C40B62ED6C6);
      v214 = v248.__r_.__value_.__r.__words[0];
      v248.__r_.__value_.__r.__words[0] = 0;
      if (v214)
      {
        v215 = *(std::__shared_weak_count **)(v214 + 32);
        if (v215)
        {
          v216 = (unint64_t *)&v215->__shared_owners_;
          do
            v217 = __ldaxr(v216);
          while (__stlxr(v217 - 1, v216));
          if (!v217)
          {
            ((void (*)(std::__shared_weak_count *))v215->__on_zero_shared)(v215);
            std::__shared_weak_count::__release_weak(v215);
          }
        }
        v218 = *(std::__shared_weak_count **)(v214 + 16);
        if (v218)
        {
          v219 = (unint64_t *)&v218->__shared_owners_;
          do
            v220 = __ldaxr(v219);
          while (__stlxr(v220 - 1, v219));
          if (!v220)
          {
            ((void (*)(std::__shared_weak_count *))v218->__on_zero_shared)(v218);
            std::__shared_weak_count::__release_weak(v218);
          }
        }
        MEMORY[0x227684CE8](v214, 0x10F0C40B62ED6C6);
      }
    }
    v221 = *(std::__shared_weak_count **)&v258[32];
    if (*(_QWORD *)&v258[32])
    {
      v222 = (unint64_t *)(*(_QWORD *)&v258[32] + 8);
      do
        v223 = __ldaxr(v222);
      while (__stlxr(v223 - 1, v222));
      if (!v223)
      {
        ((void (*)(std::__shared_weak_count *))v221->__on_zero_shared)(v221);
        std::__shared_weak_count::__release_weak(v221);
      }
    }
    v224 = *(std::__shared_weak_count **)&v258[16];
    if (*(_QWORD *)&v258[16])
    {
      v225 = (unint64_t *)(*(_QWORD *)&v258[16] + 8);
      do
        v226 = __ldaxr(v225);
      while (__stlxr(v226 - 1, v225));
      if (!v226)
      {
        ((void (*)(std::__shared_weak_count *))v224->__on_zero_shared)(v224);
        std::__shared_weak_count::__release_weak(v224);
      }
    }
  }
  else
  {
    os_log_type_enabled(v187, OS_LOG_TYPE_INFO);
    *(_DWORD *)v258 = 67109888;
    *(_DWORD *)&v258[4] = v253;
    *(_WORD *)&v258[8] = 1024;
    v207 = v231;
    *(_DWORD *)&v258[10] = v231;
    *(_WORD *)&v258[14] = 1024;
    *(_DWORD *)&v258[16] = v6;
    *(_WORD *)&v258[20] = 1024;
    *(_DWORD *)&v258[22] = HIDWORD(v253);
    v227 = (void *)_os_log_send_and_compose_impl();
    if (v227)
      free(v227);
  }
  if (v168)
  {
    sub_22322C138((uint64_t)__p, "VLM:ME UPC:%d UPV:%d UPF:%d RMC:%d", v253, v207, v6, HIDWORD(v253));
    sub_223182C08((uint64_t)__p);
  }
  sub_223182C08((uint64_t)__p);
  v228 = v241;
  if (!v241)
    goto LABEL_378;
  v229 = (unint64_t *)&v241->__shared_owners_;
  do
    v230 = __ldaxr(v229);
  while (__stlxr(v230 - 1, v229));
  if (v230)
  {
LABEL_378:
    if ((SHIBYTE(v252) & 0x80000000) == 0)
      goto LABEL_379;
    goto LABEL_383;
  }
  ((void (*)(std::__shared_weak_count *))v228->__on_zero_shared)(v228);
  std::__shared_weak_count::__release_weak(v228);
  if ((SHIBYTE(v252) & 0x80000000) == 0)
  {
LABEL_379:
    if ((SHIBYTE(v254.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_380;
    goto LABEL_384;
  }
LABEL_383:
  operator delete(v251);
  if ((SHIBYTE(v254.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_380:
    if ((SHIBYTE(v255.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_385:
    operator delete(v255.__r_.__value_.__l.__data_);
    return;
  }
LABEL_384:
  operator delete(v254.__r_.__value_.__l.__data_);
  if (SHIBYTE(v255.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_385;
}

void sub_223564AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  uint64_t v56;

  if (*(_BYTE *)(v56 - 168) && *(char *)(v56 - 169) < 0)
    operator delete(*(void **)(v56 - 192));
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a19);
  if (a49 < 0)
    operator delete(__p);
  if (a56 < 0)
    operator delete(a51);
  if (*(char *)(v56 - 217) < 0)
    operator delete(*(void **)(v56 - 240));
  _Unwind_Resume(a1);
}

uint64_t sub_223564F28(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t result;
  char v3;
  _BYTE v4[24];
  int v5;
  _QWORD v6[5];
  _QWORD *v7;

  v5 = 0;
  sub_22319B83C((uint64_t)&v3, (uint64_t)v4, a2);
  v6[0] = v4;
  v6[1] = "\n";
  v6[2] = v4;
  v6[3] = "\n";
  v6[4] = "\n";
  if (v5 == -1)
    sub_22316DD70();
  v7 = v6;
  ((void (*)(_QWORD **, _BYTE *))off_24EC48988[v5])(&v7, v4);
  if (v5 == -1)
    sub_22316DD70();
  v6[0] = &v7;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC48970[v5])(v6, v4);
  if (v5 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC48958[v5])(v6, v4);
  return result;
}

void sub_22356500C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223565020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223565034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223565048(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  void *__p[2];
  char v7;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
  {
    v7 = 15;
    strcpy((char *)__p, "result_meshlist");
    *(_QWORD *)&v5 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
    *((_QWORD *)&v5 + 1) = 2;
    v4 = sub_2241471F8();
    sub_22356F5A4((uint64_t)v4, a1, a2, (uint64_t)__p, &v5);
    if (v7 < 0)
      operator delete(__p[0]);
  }
}

void sub_223565100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22356511C(double *a1, uint64_t a2, int *a3, const char *a4)
{
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v14;
  void *__dst[2];
  unint64_t v16;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v8 = strlen(a4);
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v9 = (void *)v8;
    if (v8 >= 0x17)
    {
      v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17)
        v11 = v8 | 7;
      v12 = v11 + 1;
      v10 = (void **)operator new(v11 + 1);
      __dst[1] = v9;
      v16 = v12 | 0x8000000000000000;
      __dst[0] = v10;
    }
    else
    {
      HIBYTE(v16) = v8;
      v10 = __dst;
      if (!v8)
      {
LABEL_10:
        *((_BYTE *)v9 + (_QWORD)v10) = 0;
        *(_QWORD *)&v14 = (uint64_t)(*a1 * 1000000000.0);
        *((_QWORD *)&v14 + 1) = 2;
        v13 = sub_2241471F8();
        sub_22356F6DC((uint64_t)v13, a2, a3, (uint64_t)__dst, &v14);
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        return;
      }
    }
    memcpy(v10, a4, (size_t)v9);
    goto LABEL_10;
  }
}

void sub_22356523C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_223565258(double *a1, uint64_t a2, int *a3, const char *a4)
{
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v14;
  void *__dst[2];
  unint64_t v16;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v8 = strlen(a4);
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v9 = (void *)v8;
    if (v8 >= 0x17)
    {
      v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17)
        v11 = v8 | 7;
      v12 = v11 + 1;
      v10 = (void **)operator new(v11 + 1);
      __dst[1] = v9;
      v16 = v12 | 0x8000000000000000;
      __dst[0] = v10;
    }
    else
    {
      HIBYTE(v16) = v8;
      v10 = __dst;
      if (!v8)
      {
LABEL_10:
        *((_BYTE *)v9 + (_QWORD)v10) = 0;
        *(_QWORD *)&v14 = (uint64_t)(*a1 * 1000000000.0);
        *((_QWORD *)&v14 + 1) = 2;
        v13 = sub_2241471F8();
        sub_22356F6DC((uint64_t)v13, a2, a3, (uint64_t)__dst, &v14);
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        return;
      }
    }
    memcpy(v10, a4, (size_t)v9);
    goto LABEL_10;
  }
}

void sub_223565378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_223565394(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CAF38);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CAF38))
  {
    sub_22455F53C(&v5);
    sub_223174DE4(__p, "cv3dapi.recon3d");
    sub_2232300E0(&v5, (uint64_t)__p, &qword_2540CAF30);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_2540CAF38);
  }
  *a1 = qword_2540CAF30;
}

void sub_223565430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CAF38);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CAF38);
  _Unwind_Resume(a1);
}

uint64_t sub_223565488(unsigned __int8 **a1)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  char v4;
  uint64_t *v5;
  uint64_t **v6;
  uint64_t **v7;
  unsigned int v8;
  unsigned int v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  char *v14;
  void **v15;
  std::string::size_type v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v22;
  const void *v23;
  size_t v24;
  std::string *v25;
  size_t v26;
  size_t v27;
  void **v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  std::string *v32;
  uint64_t v33;
  const char *v34;
  size_t v35;
  unint64_t v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  const char *v42;
  size_t v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  const char *v46;
  size_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  size_t v55;
  void *v56;
  _QWORD *v57;
  size_t v58;
  size_t v59;
  _BYTE *v60;
  void *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  _QWORD *v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  char *v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  unint64_t v78;
  unsigned __int8 v79;
  const char *v80;
  size_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  size_t v89;
  void *v90;
  _QWORD *v91;
  size_t v92;
  size_t v93;
  _BYTE *v94;
  void *v95;
  int v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  uint64_t v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  uint64_t v113;
  std::__shared_weak_count *v114;
  unint64_t *v115;
  unint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  std::__shared_weak_count *v123;
  unint64_t *v124;
  unint64_t v125;
  const char *v126;
  std::__shared_weak_count *v127;
  unint64_t *p_shared_owners;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  _QWORD *v135;
  uint64_t v136;
  std::__shared_weak_count *v137;
  unint64_t *v138;
  unint64_t v139;
  void *v140;
  unint64_t *v141;
  unint64_t v142;
  std::__shared_weak_count *v143;
  unint64_t *v144;
  unint64_t v145;
  unint64_t v146;
  std::__shared_weak_count *v147;
  unint64_t *v148;
  unint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  const char *v155;
  uint64_t v156;
  __int128 v157;
  void *v158;
  std::__shared_weak_count *v159;
  unint64_t *v160;
  unint64_t v161;
  std::__shared_weak_count *v162;
  unint64_t *v163;
  unint64_t v164;
  uint64_t v165;
  std::__shared_weak_count *v166;
  unint64_t *v167;
  unint64_t v168;
  std::__shared_weak_count *v169;
  unint64_t *v170;
  unint64_t v171;
  std::__shared_weak_count *v172;
  unint64_t *v173;
  unint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  std::string *v178;
  std::__shared_weak_count *v179;
  unint64_t *v180;
  unint64_t v181;
  const char *v182;
  const char *v183;
  int v184;
  int v185;
  void *__p[2];
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  char *v188;
  const char *v189;
  int v190;
  const char *v191;
  uint64_t v192;
  std::__shared_weak_count *v193;
  void *__dst[2];
  int64_t v195;
  uint64_t v196;
  uint64_t **v197;
  uint64_t *v198;
  uint64_t v199;
  std::string v200;
  _BYTE v201[24];
  char *v202;
  std::__shared_weak_count *v203;
  _BYTE object[24];
  __int128 v205;
  void *v206[2];
  unint64_t v207;
  const void *v208;
  unint64_t v209;
  void *v210;
  char v211;
  unint64_t v212;
  int v213;
  uint64_t v214;
  _BYTE v215[24];
  __int128 v216;
  char *v217;
  const char *v218;
  unint64_t v219;
  std::__shared_weak_count *v220;
  _QWORD v221[2];
  _BYTE v222[24];
  uint64_t v223;

  v223 = *MEMORY[0x24BDAC8D0];
  v200.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v200.__r_.__value_.__r.__words[1] = xmmword_2245B9430;
  strcpy(v200.__r_.__value_.__l.__data_, "Received keyframe with ");
  std::string::reserve(&v200, 0xD6B5AD6B5AD6B5AFLL * ((a1[1] - *a1) >> 3) + 23);
  v198 = 0;
  v199 = 0;
  v197 = &v198;
  v2 = *a1;
  v3 = a1[1];
  if (*a1 == v3)
  {
LABEL_68:
    sub_223566FA8(&v196);
    if (**(int **)(v196 + 56) > 3
      || (v17 = *(unsigned __int8 *)(v196 + 72),
          v18 = sub_22322F254(v196, "OSLogSurrogateAppender", 1, 0),
          v19 = v18,
          !v17)
      && !v18)
    {
      v20 = 1;
      sub_223198030((uint64_t)&v197, v198);
      if (SHIBYTE(v200.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_72;
      return v20;
    }
    sub_223195210((uint64_t)object);
    if ((v200.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v25 = &v200;
    else
      v25 = (std::string *)v200.__r_.__value_.__r.__words[0];
    v26 = strlen((const char *)v25);
    sub_2231813E8(&object[16], (uint64_t)v25, v26);
    v184 = v17;
    if ((v213 & 0x10) != 0)
    {
      v36 = v212;
      if (v212 < v209)
      {
        v212 = v209;
        v36 = v209;
      }
      v37 = v208;
      v27 = v36 - (_QWORD)v208;
      if (v36 - (unint64_t)v208 > 0x7FFFFFFFFFFFFFF7)
        goto LABEL_147;
    }
    else
    {
      if ((v213 & 8) == 0)
      {
        v27 = 0;
        HIBYTE(v195) = 0;
        v28 = __dst;
        goto LABEL_102;
      }
      v37 = v206[0];
      v27 = v207 - (unint64_t)v206[0];
      if (v207 - (unint64_t)v206[0] > 0x7FFFFFFFFFFFFFF7)
LABEL_147:
        sub_22316DBC0();
    }
    if (v27 >= 0x17)
    {
      v38 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v27 | 7) != 0x17)
        v38 = v27 | 7;
      v39 = v38 + 1;
      v28 = (void **)operator new(v38 + 1);
      __dst[1] = (void *)v27;
      v195 = v39 | 0x8000000000000000;
      __dst[0] = v28;
    }
    else
    {
      HIBYTE(v195) = v27;
      v28 = __dst;
      if (!v27)
      {
LABEL_102:
        *((_BYTE *)v28 + v27) = 0;
        __p[0] = &v196;
        __p[1] = (void *)std::chrono::steady_clock::now().__d_.__rep_;
        rep = std::chrono::system_clock::now().__d_.__rep_;
        LODWORD(v188) = 3;
        v189 = "unknown file";
        v190 = 187;
        v192 = 0;
        v193 = 0;
        v191 = "unknown function";
        if (v195 >= 0)
          v40 = (const char *)__dst;
        else
          v40 = (const char *)__dst[0];
        v41 = *(_QWORD *)__p[0];
        v42 = (const char *)(*(_QWORD *)__p[0] + 16);
        v183 = v42;
        if (*(char *)(*(_QWORD *)__p[0] + 39) < 0)
        {
          v42 = *(const char **)(v41 + 16);
          v43 = *(_QWORD *)(v41 + 24);
          v45 = atomic_load((unsigned __int8 *)&qword_255788F58);
          if ((v45 & 1) != 0)
            goto LABEL_109;
        }
        else
        {
          v43 = *(unsigned __int8 *)(*(_QWORD *)__p[0] + 39);
          v44 = atomic_load((unsigned __int8 *)&qword_255788F58);
          if ((v44 & 1) != 0)
            goto LABEL_109;
        }
        if (__cxa_guard_acquire(&qword_255788F58))
        {
          sub_224568628((uint64_t)v215);
          sub_223199C58("com.apple.cv3d", (unint64_t)v215, &xmmword_255788F40);
          if ((_BYTE)v216 && (v215[23] & 0x80000000) != 0)
            operator delete(*(void **)v215);
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
          __cxa_guard_release(&qword_255788F58);
        }
LABEL_109:
        if (byte_255788F57 >= 0)
          v46 = (const char *)&xmmword_255788F40;
        else
          v46 = (const char *)xmmword_255788F40;
        if (byte_255788F57 >= 0)
          v47 = byte_255788F57;
        else
          v47 = *((_QWORD *)&xmmword_255788F40 + 1);
        *(_QWORD *)v215 = os_log_create(v46, v42);
        v48 = &v215[8];
        if (v47 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v47 >= 0x17)
        {
          v49 = (v47 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v47 | 7) != 0x17)
            v49 = v47 | 7;
          v50 = v49 + 1;
          v48 = operator new(v49 + 1);
          *(_QWORD *)&v215[16] = v47;
          *(_QWORD *)&v216 = v50 | 0x8000000000000000;
          *(_QWORD *)&v215[8] = v48;
        }
        else
        {
          BYTE7(v216) = v47;
          if (!v47)
          {
LABEL_123:
            v48[v47] = 0;
            BYTE8(v216) = 1;
            v51 = (char *)&v217;
            if (v43 > 0x7FFFFFFFFFFFFFF7)
              sub_22316DBC0();
            if (v43 >= 0x17)
            {
              v53 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v43 | 7) != 0x17)
                v53 = v43 | 7;
              v54 = v53 + 1;
              v51 = (char *)operator new(v53 + 1);
              v218 = (const char *)v43;
              v219 = v54 | 0x8000000000000000;
              v217 = v51;
            }
            else
            {
              HIBYTE(v219) = v43;
              if (!v43)
              {
                LOBYTE(v217) = 0;
                LOBYTE(v220) = 1;
                v52 = *(NSObject **)v215;
                if ((SHIBYTE(v219) & 0x80000000) == 0)
                  goto LABEL_127;
                goto LABEL_133;
              }
            }
            memmove(v51, v42, v43);
            v51[v43] = 0;
            LOBYTE(v220) = 1;
            v52 = *(NSObject **)v215;
            if ((SHIBYTE(v219) & 0x80000000) == 0)
            {
LABEL_127:
              if (!BYTE8(v216))
                goto LABEL_136;
              goto LABEL_134;
            }
LABEL_133:
            operator delete(v217);
            if (!BYTE8(v216))
              goto LABEL_136;
LABEL_134:
            if (SBYTE7(v216) < 0)
              operator delete(*(void **)&v215[8]);
LABEL_136:
            if (*(_QWORD *)v215)
              os_release(*(void **)v215);
            if (!v19 || !*(_QWORD *)(v19 + 24))
            {
              os_log_type_enabled(v52, OS_LOG_TYPE_INFO);
              *(_DWORD *)v215 = 136315138;
              *(_QWORD *)&v215[4] = v40;
              v61 = (void *)_os_log_send_and_compose_impl();
              v62 = v184;
              if (v61)
                free(v61);
LABEL_250:
              if (v62)
              {
                v126 = (const char *)__dst;
                if (v195 < 0)
                  v126 = (const char *)__dst[0];
                sub_22322C138((uint64_t)__p, "%s", v126);
                sub_223182C08((uint64_t)__p);
              }
              sub_223182C08((uint64_t)__p);
              v127 = v193;
              if (v193)
              {
                p_shared_owners = (unint64_t *)&v193->__shared_owners_;
                do
                  v129 = __ldaxr(p_shared_owners);
                while (__stlxr(v129 - 1, p_shared_owners));
                if (!v129)
                {
                  ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
                  std::__shared_weak_count::__release_weak(v127);
                }
              }
              if (SHIBYTE(v195) < 0)
                operator delete(__dst[0]);
              *(_QWORD *)object = *MEMORY[0x24BEDB7F0];
              v130 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
              *(_QWORD *)&object[*(_QWORD *)(*(_QWORD *)object - 24)] = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
              *(_QWORD *)&object[16] = v130;
              *(_QWORD *)&v205 = MEMORY[0x24BEDB848] + 16;
              if (v211 < 0)
                operator delete(v210);
              std::streambuf::~streambuf();
              std::iostream::~basic_iostream();
              MEMORY[0x227684BE0](&v214);
              v20 = 1;
              sub_223198030((uint64_t)&v197, v198);
              if (SHIBYTE(v200.__r_.__value_.__r.__words[2]) < 0)
                goto LABEL_72;
              return v20;
            }
            v55 = _os_log_pack_size();
            v56 = operator new(v55, (std::align_val_t)8uLL);
            v57 = (_QWORD *)operator new();
            *v57 = &off_24EC1F7F0;
            v57[1] = 0;
            v57[2] = 0;
            v57[3] = v56;
            *(_QWORD *)v201 = v56;
            *(_QWORD *)&v201[8] = v56;
            v202 = 0;
            v203 = 0;
            *(_QWORD *)&v201[16] = v57;
            v58 = strlen(v40);
            if (v58 > 0x7FFFFFFFFFFFFFF7)
              sub_22316DBC0();
            v59 = v58;
            if (v58 >= 0x17)
            {
              v63 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v58 | 7) != 0x17)
                v63 = v58 | 7;
              v64 = v63 + 1;
              v60 = operator new(v63 + 1);
              *(_QWORD *)&v222[8] = v59;
              *(_QWORD *)&v222[16] = v64 | 0x8000000000000000;
              *(_QWORD *)v222 = v60;
            }
            else
            {
              v222[23] = v58;
              v60 = v222;
              if (!v58)
              {
LABEL_152:
                v60[v59] = 0;
                v65 = *(_QWORD *)v222;
                v221[0] = *(_QWORD *)&v222[8];
                *(_QWORD *)((char *)v221 + 7) = *(_QWORD *)&v222[15];
                v66 = v222[23];
                v67 = operator new(0x38uLL);
                v67[1] = 0;
                v67[2] = 0;
                v67[3] = off_24EC1FA48;
                *v67 = &off_24EC1F9F8;
                v68 = v221[0];
                v67[4] = v65;
                v67[5] = v68;
                *(_QWORD *)((char *)v67 + 47) = *(_QWORD *)((char *)v221 + 7);
                *((_BYTE *)v67 + 55) = v66;
                v221[0] = 0;
                *(_QWORD *)((char *)v221 + 7) = 0;
                v69 = v203;
                v202 = (char *)(v67 + 3);
                v203 = (std::__shared_weak_count *)v67;
                if (v69)
                {
                  v70 = (unint64_t *)&v69->__shared_owners_;
                  do
                    v71 = __ldaxr(v70);
                  while (__stlxr(v71 - 1, v70));
                  if (!v71)
                  {
                    ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
                    std::__shared_weak_count::__release_weak(v69);
                  }
                }
                *(_OWORD *)v215 = *(_OWORD *)v201;
                v72 = v202;
                *(_QWORD *)&v215[16] = *(_QWORD *)&v201[16];
                if (*(_QWORD *)&v201[16])
                {
                  v73 = (unint64_t *)(*(_QWORD *)&v201[16] + 8);
                  do
                    v74 = __ldxr(v73);
                  while (__stxr(v74 + 1, v73));
                }
                v75 = v203;
                *(_QWORD *)&v216 = v72;
                *((_QWORD *)&v216 + 1) = v203;
                if (v203)
                {
                  v76 = (unint64_t *)&v203->__shared_owners_;
                  do
                    v77 = __ldxr(v76);
                  while (__stxr(v77 + 1, v76));
                  v217 = v72;
                  do
                    v78 = __ldaxr(v76);
                  while (__stlxr(v78 - 1, v76));
                  if (!v78)
                  {
                    ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
                    std::__shared_weak_count::__release_weak(v75);
                  }
                }
                else
                {
                  v217 = v72;
                }
                v97 = *(std::__shared_weak_count **)&v201[16];
                if (*(_QWORD *)&v201[16])
                {
                  v98 = (unint64_t *)(*(_QWORD *)&v201[16] + 8);
                  do
                    v99 = __ldaxr(v98);
                  while (__stlxr(v99 - 1, v98));
                  if (!v99)
                  {
                    ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
                    std::__shared_weak_count::__release_weak(v97);
                  }
                }
                v100 = *(_QWORD *)v215;
                if (v217[31] >= 0)
                  v101 = v217 + 8;
                else
                  v101 = (char *)*((_QWORD *)v217 + 1);
                v102 = _os_log_pack_fill();
                *(_DWORD *)v102 = 136315138;
                *(_QWORD *)(v102 + 4) = v101;
                v103 = operator new();
                v104 = *(unsigned __int8 *)(v41 + 39);
                v105 = v183;
                if ((v104 & 0x80u) != 0)
                {
                  v105 = *(const char **)(v41 + 16);
                  v104 = *(_QWORD *)(v41 + 24);
                }
                *(_QWORD *)v103 = v100;
                *(_OWORD *)(v103 + 8) = *(_OWORD *)&v215[8];
                *(_QWORD *)&v215[8] = 0;
                *(_QWORD *)&v215[16] = 0;
                *(_OWORD *)(v103 + 24) = v216;
                v216 = 0uLL;
                *(_QWORD *)(v103 + 40) = v105;
                *(_QWORD *)(v103 + 48) = v104;
                *(_BYTE *)(v103 + 56) = 1;
                *(_QWORD *)v222 = 0;
                *(_QWORD *)v201 = v103;
                (*(void (**)(_QWORD, _BYTE *))(**(_QWORD **)(v19 + 24) + 40))(*(_QWORD *)(v19 + 24), v201);
                v106 = *(_QWORD *)v201;
                *(_QWORD *)v201 = 0;
                v62 = v184;
                if (v106)
                {
                  v107 = *(std::__shared_weak_count **)(v106 + 32);
                  if (v107)
                  {
                    v108 = (unint64_t *)&v107->__shared_owners_;
                    do
                      v109 = __ldaxr(v108);
                    while (__stlxr(v109 - 1, v108));
                    if (!v109)
                    {
                      ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
                      std::__shared_weak_count::__release_weak(v107);
                    }
                  }
                  v110 = *(std::__shared_weak_count **)(v106 + 16);
                  if (v110)
                  {
                    v111 = (unint64_t *)&v110->__shared_owners_;
                    do
                      v112 = __ldaxr(v111);
                    while (__stlxr(v112 - 1, v111));
                    if (!v112)
                    {
                      ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
                      std::__shared_weak_count::__release_weak(v110);
                    }
                  }
                  MEMORY[0x227684CE8](v106, 0x10F0C40B62ED6C6);
                  v113 = *(_QWORD *)v222;
                  *(_QWORD *)v222 = 0;
                  if (v113)
                  {
                    v114 = *(std::__shared_weak_count **)(v113 + 32);
                    if (v114)
                    {
                      v115 = (unint64_t *)&v114->__shared_owners_;
                      do
                        v116 = __ldaxr(v115);
                      while (__stlxr(v116 - 1, v115));
                      if (!v116)
                      {
                        ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
                        std::__shared_weak_count::__release_weak(v114);
                      }
                    }
                    v117 = *(std::__shared_weak_count **)(v113 + 16);
                    if (v117)
                    {
                      v118 = (unint64_t *)&v117->__shared_owners_;
                      do
                        v119 = __ldaxr(v118);
                      while (__stlxr(v119 - 1, v118));
                      if (!v119)
                      {
                        ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
                        std::__shared_weak_count::__release_weak(v117);
                      }
                    }
                    MEMORY[0x227684CE8](v113, 0x10F0C40B62ED6C6);
                  }
                }
                v120 = (std::__shared_weak_count *)*((_QWORD *)&v216 + 1);
                if (*((_QWORD *)&v216 + 1))
                {
                  v121 = (unint64_t *)(*((_QWORD *)&v216 + 1) + 8);
                  do
                    v122 = __ldaxr(v121);
                  while (__stlxr(v122 - 1, v121));
                  if (!v122)
                  {
                    ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
                    std::__shared_weak_count::__release_weak(v120);
                  }
                }
                v123 = *(std::__shared_weak_count **)&v215[16];
                if (*(_QWORD *)&v215[16])
                {
                  v124 = (unint64_t *)(*(_QWORD *)&v215[16] + 8);
                  do
                    v125 = __ldaxr(v124);
                  while (__stlxr(v125 - 1, v124));
                  if (!v125)
                  {
                    ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
                    std::__shared_weak_count::__release_weak(v123);
                  }
                }
                goto LABEL_250;
              }
            }
            memcpy(v60, v40, v59);
            goto LABEL_152;
          }
        }
        memmove(v48, v46, v47);
        goto LABEL_123;
      }
    }
    memmove(v28, v37, v27);
    goto LABEL_102;
  }
  v4 = 1;
  do
  {
    if ((v4 & 1) == 0)
    {
      v4 = 0;
      goto LABEL_49;
    }
    v5 = v198;
    v6 = &v198;
    v7 = &v198;
    if (v198)
    {
      v8 = *v2;
      while (1)
      {
        v6 = (uint64_t **)v5;
        v9 = *((unsigned __int8 *)v5 + 25);
        v10 = v8 >= v9;
        if (v8 != v9)
          break;
        v11 = v2[1];
        v9 = *((unsigned __int8 *)v6 + 26);
        v10 = v11 >= v9;
        if (v11 == v9
          && (v11 = v2[2], v9 = *((unsigned __int8 *)v6 + 27), v10 = v11 >= v9, v11 == v9)
          && (v11 = v2[3], v9 = *((unsigned __int8 *)v6 + 28), v10 = v11 >= v9, v11 == v9))
        {
          v12 = v2[4];
          v13 = *((unsigned __int8 *)v6 + 29);
          if (v12 != v13)
            goto LABEL_24;
          v12 = v2[5];
          v13 = *((unsigned __int8 *)v6 + 30);
          if (v12 != v13)
            goto LABEL_24;
          v12 = v2[6];
          v13 = *((unsigned __int8 *)v6 + 31);
          if (v12 != v13)
            goto LABEL_24;
          v12 = v2[7];
          v13 = *((unsigned __int8 *)v6 + 32);
          if (v12 != v13)
            goto LABEL_24;
          v12 = v2[8];
          v13 = *((unsigned __int8 *)v6 + 33);
          if (v12 != v13)
            goto LABEL_24;
          v12 = v2[9];
          v13 = *((unsigned __int8 *)v6 + 34);
          if (v12 != v13)
            goto LABEL_24;
          v12 = v2[10];
          v13 = *((unsigned __int8 *)v6 + 35);
          if (v12 != v13)
            goto LABEL_24;
          v12 = v2[11];
          v13 = *((unsigned __int8 *)v6 + 36);
          if (v12 != v13)
            goto LABEL_24;
          v12 = v2[12];
          v13 = *((unsigned __int8 *)v6 + 37);
          if (v12 != v13
            || (v12 = v2[13], v13 = *((unsigned __int8 *)v6 + 38), v12 != v13)
            || (v12 = v2[14], v13 = *((unsigned __int8 *)v6 + 39), v12 != v13)
            || (v12 = v2[15], v13 = *((unsigned __int8 *)v6 + 40), v12 != v13))
          {
LABEL_24:
            if (v12 < v13)
              goto LABEL_7;
          }
          v9 = *((unsigned __int8 *)v6 + 29);
          v11 = v2[4];
          if (v9 == v11)
          {
            v9 = *((unsigned __int8 *)v6 + 30);
            v11 = v2[5];
            if (v9 == v11)
            {
              v9 = *((unsigned __int8 *)v6 + 31);
              v11 = v2[6];
              if (v9 == v11)
              {
                v9 = *((unsigned __int8 *)v6 + 32);
                v11 = v2[7];
                if (v9 == v11)
                {
                  v9 = *((unsigned __int8 *)v6 + 33);
                  v11 = v2[8];
                  if (v9 == v11)
                  {
                    v9 = *((unsigned __int8 *)v6 + 34);
                    v11 = v2[9];
                    if (v9 == v11)
                    {
                      v9 = *((unsigned __int8 *)v6 + 35);
                      v11 = v2[10];
                      if (v9 == v11)
                      {
                        v9 = *((unsigned __int8 *)v6 + 36);
                        v11 = v2[11];
                        if (v9 == v11)
                        {
                          v9 = *((unsigned __int8 *)v6 + 37);
                          v11 = v2[12];
                          if (v9 == v11)
                          {
                            v9 = *((unsigned __int8 *)v6 + 38);
                            v11 = v2[13];
                            if (v9 == v11)
                            {
                              v9 = *((unsigned __int8 *)v6 + 39);
                              v11 = v2[14];
                              if (v9 == v11)
                              {
                                v9 = *((unsigned __int8 *)v6 + 40);
                                v11 = v2[15];
                                if (v9 == v11)
                                {
LABEL_48:
                                  v4 = 0;
                                  goto LABEL_49;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
LABEL_41:
          if (v9 >= v11)
            goto LABEL_48;
          v5 = v6[1];
          if (!v5)
          {
            v7 = v6 + 1;
            goto LABEL_44;
          }
        }
        else
        {
LABEL_39:
          if (v10)
            goto LABEL_41;
LABEL_7:
          v5 = *v6;
          v7 = v6;
          if (!*v6)
            goto LABEL_44;
        }
      }
      v11 = *v2;
      goto LABEL_39;
    }
LABEL_44:
    v14 = (char *)operator new(0x30uLL);
    *(_OWORD *)(v14 + 25) = *(_OWORD *)v2;
    *(_QWORD *)v14 = 0;
    *((_QWORD *)v14 + 1) = 0;
    *((_QWORD *)v14 + 2) = v6;
    *v7 = (uint64_t *)v14;
    if (*v197)
    {
      v197 = (uint64_t **)*v197;
      v14 = (char *)*v7;
    }
    sub_2231A9A8C(v198, (uint64_t *)v14);
    ++v199;
    v4 = 1;
LABEL_49:
    *(_QWORD *)v222 = "uuid: ";
    __dst[0] = "state: ";
    LODWORD(v216) = 0;
    sub_2231BA9F4(v215, (const char **)v222);
    sub_22319B83C((uint64_t)v221, (uint64_t)v215, v2);
    *(_QWORD *)object = v215;
    *(_QWORD *)&object[8] = ", ";
    *(_QWORD *)&object[16] = v215;
    *(_QWORD *)&v205 = ", ";
    *((_QWORD *)&v205 + 1) = ", ";
    if ((_DWORD)v216 == -1)
      sub_22316DD70();
    *(_QWORD *)v201 = object;
    ((void (*)(_BYTE *, _BYTE *))off_24EC489D0[v216])(v201, v215);
    if (__dst[0])
    {
      *(_QWORD *)object = v215;
      *(_QWORD *)&object[8] = __dst;
      *(_QWORD *)&object[16] = v215;
      *(_QWORD *)&v205 = __dst;
      *((_QWORD *)&v205 + 1) = __dst;
      if ((_DWORD)v216 == -1)
        goto LABEL_343;
      *(_QWORD *)v201 = object;
      ((void (*)(_BYTE *, _BYTE *))off_24EC489B8[v216])(v201, v215);
    }
    else
    {
      *(_QWORD *)object = v215;
      *(_QWORD *)&object[8] = "nullptr";
      *(_QWORD *)&object[16] = v215;
      *(_QWORD *)&v205 = "nullptr";
      *((_QWORD *)&v205 + 1) = "nullptr";
      if ((_DWORD)v216 == -1)
LABEL_343:
        sub_22316DD70();
      *(_QWORD *)v201 = object;
      ((void (*)(_BYTE *, _BYTE *))off_24EC489A0[v216])(v201, v215);
    }
    sub_22356F9F4((uint64_t)&v196, (uint64_t)v215, (char *)v2 + 240);
    *(_QWORD *)object = v215;
    *(_QWORD *)&object[8] = ", ";
    *(_QWORD *)&object[16] = v215;
    *(_QWORD *)&v205 = ", ";
    *((_QWORD *)&v205 + 1) = ", ";
    if ((_DWORD)v216 == -1)
      sub_22316DD70();
    *(_QWORD *)v201 = object;
    ((void (*)(_BYTE *, _BYTE *))off_24EC489D0[v216])(v201, v215);
    if ((_DWORD)v216 == -1)
      sub_22316DD70();
    *(_QWORD *)object = v201;
    ((void (*)(void **__return_ptr, _BYTE *, _BYTE *))off_24EC48970[v216])(__p, object, v215);
    if ((_DWORD)v216 != -1)
      ((void (*)(_BYTE *, _BYTE *))off_24EC48958[v216])(object, v215);
    if (rep >= 0)
      v15 = __p;
    else
      v15 = (void **)__p[0];
    if (rep >= 0)
      v16 = HIBYTE(rep);
    else
      v16 = (std::string::size_type)__p[1];
    std::string::append(&v200, (const std::string::value_type *)v15, v16);
    if (SHIBYTE(rep) < 0)
      operator delete(__p[0]);
    v2 += 248;
  }
  while (v2 != v3);
  if ((v4 & 1) != 0)
    goto LABEL_68;
  v22 = atomic_load((unsigned __int8 *)&qword_2557892F0);
  if ((v22 & 1) == 0 && __cxa_guard_acquire(&qword_2557892F0))
  {
    __cxa_atexit((void (*)(void *))sub_2231A8A28, &unk_255789280, &dword_22314D000);
    __cxa_guard_release(&qword_2557892F0);
  }
  sub_223566FA8(object);
  if (*(char *)(*(_QWORD *)object + 39) < 0)
  {
    v23 = *(const void **)(*(_QWORD *)object + 16);
    v24 = *(_QWORD *)(*(_QWORD *)object + 24);
  }
  else
  {
    v23 = (const void *)(*(_QWORD *)object + 16);
    v24 = *(unsigned __int8 *)(*(_QWORD *)object + 39);
  }
  sub_223195728((uint64_t)&unk_255789280, v23, v24, "Error in received keyframes: %s", 0x1FuLL);
  sub_223565394(__dst);
  if (**((int **)__dst[0] + 7) > 5)
    goto LABEL_338;
  v29 = *((unsigned __int8 *)__dst[0] + 72);
  v30 = sub_22322F254((uint64_t)__dst[0], "OSLogSurrogateAppender", 1, 0);
  v31 = v30;
  if (!v29 && !v30)
    goto LABEL_338;
  v185 = v29;
  *(_QWORD *)v215 = __dst;
  *(std::chrono::steady_clock::time_point *)&v215[8] = std::chrono::steady_clock::now();
  *(std::chrono::system_clock::time_point *)&v215[16] = std::chrono::system_clock::now();
  LODWORD(v216) = 5;
  *((_QWORD *)&v216 + 1) = "unknown file";
  LODWORD(v217) = 189;
  v219 = 0;
  v220 = 0;
  v218 = "unknown function";
  if ((v200.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v32 = &v200;
  else
    v32 = (std::string *)v200.__r_.__value_.__r.__words[0];
  v33 = **(_QWORD **)v215;
  v34 = (const char *)(**(_QWORD **)v215 + 16);
  v182 = v34;
  if (*(char *)(**(_QWORD **)v215 + 39) < 0)
  {
    v34 = *(const char **)(v33 + 16);
    v35 = *(_QWORD *)(v33 + 24);
  }
  else
  {
    v35 = *(unsigned __int8 *)(**(_QWORD **)v215 + 39);
  }
  v79 = atomic_load((unsigned __int8 *)&qword_255788F58);
  if ((v79 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
  {
    sub_224568628((uint64_t)object);
    sub_223199C58("com.apple.cv3d", (unint64_t)object, &xmmword_255788F40);
    if ((_BYTE)v205 && (object[23] & 0x80000000) != 0)
      operator delete(*(void **)object);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
    __cxa_guard_release(&qword_255788F58);
  }
  if (byte_255788F57 >= 0)
    v80 = (const char *)&xmmword_255788F40;
  else
    v80 = (const char *)xmmword_255788F40;
  if (byte_255788F57 >= 0)
    v81 = byte_255788F57;
  else
    v81 = *((_QWORD *)&xmmword_255788F40 + 1);
  *(_QWORD *)object = os_log_create(v80, v34);
  v82 = &object[8];
  if (v81 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v81 >= 0x17)
  {
    v83 = (v81 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v81 | 7) != 0x17)
      v83 = v81 | 7;
    v84 = v83 + 1;
    v82 = operator new(v83 + 1);
    *(_QWORD *)&object[16] = v81;
    *(_QWORD *)&v205 = v84 | 0x8000000000000000;
    *(_QWORD *)&object[8] = v82;
    goto LABEL_182;
  }
  BYTE7(v205) = v81;
  if (v81)
LABEL_182:
    memmove(v82, v80, v81);
  v82[v81] = 0;
  BYTE8(v205) = 1;
  v85 = v206;
  if (v35 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v35 >= 0x17)
  {
    v86 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v35 | 7) != 0x17)
      v86 = v35 | 7;
    v87 = v86 + 1;
    v85 = operator new(v86 + 1);
    v206[1] = (void *)v35;
    v207 = v87 | 0x8000000000000000;
    v206[0] = v85;
    goto LABEL_190;
  }
  HIBYTE(v207) = v35;
  if (v35)
LABEL_190:
    memmove(v85, v34, v35);
  *((_BYTE *)v85 + v35) = 0;
  LOBYTE(v208) = 1;
  v88 = *(NSObject **)object;
  if (SHIBYTE(v207) < 0)
    operator delete(v206[0]);
  if (BYTE8(v205) && SBYTE7(v205) < 0)
    operator delete(*(void **)&object[8]);
  if (*(_QWORD *)object)
    os_release(*(void **)object);
  if (v31 && *(_QWORD *)(v31 + 24))
  {
    v89 = _os_log_pack_size();
    v90 = operator new(v89, (std::align_val_t)8uLL);
    v91 = (_QWORD *)operator new();
    *v91 = &off_24EC1F7F0;
    v91[1] = 0;
    v91[2] = 0;
    v91[3] = v90;
    __p[0] = v90;
    __p[1] = v90;
    v188 = 0;
    v189 = 0;
    rep = (std::chrono::duration<long long, std::ratio<1, 1000000>>::rep)v91;
    v92 = strlen((const char *)v32);
    if (v92 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    v93 = v92;
    if (v92 >= 0x17)
    {
      v131 = (v92 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v92 | 7) != 0x17)
        v131 = v92 | 7;
      v132 = v131 + 1;
      v94 = operator new(v131 + 1);
      *(_QWORD *)&v201[8] = v93;
      *(_QWORD *)&v201[16] = v132 | 0x8000000000000000;
      *(_QWORD *)v201 = v94;
    }
    else
    {
      v201[23] = v92;
      v94 = v201;
      if (!v92)
        goto LABEL_269;
    }
    memcpy(v94, v32, v93);
LABEL_269:
    v94[v93] = 0;
    *(_QWORD *)v222 = *(_QWORD *)&v201[8];
    v133 = *(_QWORD *)v201;
    *(_QWORD *)&v222[7] = *(_QWORD *)&v201[15];
    v134 = v201[23];
    v135 = operator new(0x38uLL);
    v135[1] = 0;
    v135[2] = 0;
    v135[3] = off_24EC1FA48;
    *v135 = &off_24EC1F9F8;
    v136 = *(_QWORD *)v222;
    v135[4] = v133;
    v135[5] = v136;
    *(_QWORD *)((char *)v135 + 47) = *(_QWORD *)&v222[7];
    *((_BYTE *)v135 + 55) = v134;
    *(_QWORD *)v222 = 0;
    *(_QWORD *)&v222[7] = 0;
    v137 = (std::__shared_weak_count *)v189;
    v188 = (char *)(v135 + 3);
    v189 = (const char *)v135;
    if (v137)
    {
      v138 = (unint64_t *)&v137->__shared_owners_;
      do
        v139 = __ldaxr(v138);
      while (__stlxr(v139 - 1, v138));
      if (!v139)
      {
        ((void (*)(std::__shared_weak_count *))v137->__on_zero_shared)(v137);
        std::__shared_weak_count::__release_weak(v137);
      }
    }
    *(_OWORD *)object = *(_OWORD *)__p;
    v140 = v188;
    *(_QWORD *)&object[16] = rep;
    if (rep)
    {
      v141 = (unint64_t *)(rep + 8);
      do
        v142 = __ldxr(v141);
      while (__stxr(v142 + 1, v141));
    }
    v143 = (std::__shared_weak_count *)v189;
    *(_QWORD *)&v205 = v140;
    *((_QWORD *)&v205 + 1) = v189;
    if (v189)
    {
      v144 = (unint64_t *)(v189 + 8);
      do
        v145 = __ldxr(v144);
      while (__stxr(v145 + 1, v144));
      v206[0] = v140;
      do
        v146 = __ldaxr(v144);
      while (__stlxr(v146 - 1, v144));
      if (!v146)
      {
        ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
        std::__shared_weak_count::__release_weak(v143);
      }
    }
    else
    {
      v206[0] = v140;
    }
    v147 = (std::__shared_weak_count *)rep;
    if (rep)
    {
      v148 = (unint64_t *)(rep + 8);
      do
        v149 = __ldaxr(v148);
      while (__stlxr(v149 - 1, v148));
      if (!v149)
      {
        ((void (*)(std::__shared_weak_count *))v147->__on_zero_shared)(v147);
        std::__shared_weak_count::__release_weak(v147);
      }
    }
    v150 = *(_QWORD *)object;
    if (*((char *)v206[0] + 31) >= 0)
      v151 = (char *)v206[0] + 8;
    else
      v151 = (char *)*((_QWORD *)v206[0] + 1);
    v152 = _os_log_pack_fill();
    *(_DWORD *)v152 = 136315138;
    *(_QWORD *)(v152 + 4) = v151;
    v153 = (char *)operator new();
    v154 = *(unsigned __int8 *)(v33 + 39);
    v155 = *(const char **)(v33 + 16);
    v156 = *(_QWORD *)(v33 + 24);
    v157 = v205;
    *(_OWORD *)(v153 + 8) = *(_OWORD *)&object[8];
    if ((v154 & 0x80u) != 0)
      v154 = v156;
    else
      v155 = v182;
    *(_QWORD *)v153 = v150;
    *(_QWORD *)&object[8] = 0;
    *(_QWORD *)&object[16] = 0;
    *(_OWORD *)(v153 + 24) = v157;
    v205 = 0uLL;
    *((_QWORD *)v153 + 5) = v155;
    *((_QWORD *)v153 + 6) = v154;
    v153[56] = 16;
    *(_QWORD *)v201 = 0;
    __p[0] = v153;
    (*(void (**)(_QWORD, void **))(**(_QWORD **)(v31 + 24) + 40))(*(_QWORD *)(v31 + 24), __p);
    v158 = __p[0];
    __p[0] = 0;
    if (v158)
    {
      v159 = (std::__shared_weak_count *)*((_QWORD *)v158 + 4);
      if (v159)
      {
        v160 = (unint64_t *)&v159->__shared_owners_;
        do
          v161 = __ldaxr(v160);
        while (__stlxr(v161 - 1, v160));
        if (!v161)
        {
          ((void (*)(std::__shared_weak_count *))v159->__on_zero_shared)(v159);
          std::__shared_weak_count::__release_weak(v159);
        }
      }
      v162 = (std::__shared_weak_count *)*((_QWORD *)v158 + 2);
      if (v162)
      {
        v163 = (unint64_t *)&v162->__shared_owners_;
        do
          v164 = __ldaxr(v163);
        while (__stlxr(v164 - 1, v163));
        if (!v164)
        {
          ((void (*)(std::__shared_weak_count *))v162->__on_zero_shared)(v162);
          std::__shared_weak_count::__release_weak(v162);
        }
      }
      MEMORY[0x227684CE8](v158, 0x10F0C40B62ED6C6);
      v165 = *(_QWORD *)v201;
      *(_QWORD *)v201 = 0;
      if (v165)
      {
        v166 = *(std::__shared_weak_count **)(v165 + 32);
        if (v166)
        {
          v167 = (unint64_t *)&v166->__shared_owners_;
          do
            v168 = __ldaxr(v167);
          while (__stlxr(v168 - 1, v167));
          if (!v168)
          {
            ((void (*)(std::__shared_weak_count *))v166->__on_zero_shared)(v166);
            std::__shared_weak_count::__release_weak(v166);
          }
        }
        v169 = *(std::__shared_weak_count **)(v165 + 16);
        if (v169)
        {
          v170 = (unint64_t *)&v169->__shared_owners_;
          do
            v171 = __ldaxr(v170);
          while (__stlxr(v171 - 1, v170));
          if (!v171)
          {
            ((void (*)(std::__shared_weak_count *))v169->__on_zero_shared)(v169);
            std::__shared_weak_count::__release_weak(v169);
          }
        }
        MEMORY[0x227684CE8](v165, 0x10F0C40B62ED6C6);
      }
    }
    v172 = (std::__shared_weak_count *)*((_QWORD *)&v205 + 1);
    v96 = v185;
    if (*((_QWORD *)&v205 + 1))
    {
      v173 = (unint64_t *)(*((_QWORD *)&v205 + 1) + 8);
      do
        v174 = __ldaxr(v173);
      while (__stlxr(v174 - 1, v173));
      if (!v174)
      {
        ((void (*)(std::__shared_weak_count *))v172->__on_zero_shared)(v172);
        std::__shared_weak_count::__release_weak(v172);
      }
    }
    v175 = *(std::__shared_weak_count **)&object[16];
    if (*(_QWORD *)&object[16])
    {
      v176 = (unint64_t *)(*(_QWORD *)&object[16] + 8);
      do
        v177 = __ldaxr(v176);
      while (__stlxr(v177 - 1, v176));
      if (!v177)
      {
        ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
        std::__shared_weak_count::__release_weak(v175);
      }
    }
  }
  else
  {
    os_log_type_enabled(v88, OS_LOG_TYPE_ERROR);
    *(_DWORD *)object = 136315138;
    *(_QWORD *)&object[4] = v32;
    v95 = (void *)_os_log_send_and_compose_impl();
    v96 = v185;
    if (v95)
      free(v95);
  }
  if (v96)
  {
    v178 = &v200;
    if ((v200.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v178 = (std::string *)v200.__r_.__value_.__r.__words[0];
    sub_22322C138((uint64_t)v215, "Error in received keyframes: %s", (const char *)v178);
    sub_223182C08((uint64_t)v215);
  }
  sub_223182C08((uint64_t)v215);
  v179 = v220;
  if (v220)
  {
    v180 = (unint64_t *)&v220->__shared_owners_;
    do
      v181 = __ldaxr(v180);
    while (__stlxr(v181 - 1, v180));
    if (!v181)
    {
      ((void (*)(std::__shared_weak_count *))v179->__on_zero_shared)(v179);
      std::__shared_weak_count::__release_weak(v179);
    }
  }
LABEL_338:
  v20 = 0;
  sub_223198030((uint64_t)&v197, v198);
  if (SHIBYTE(v200.__r_.__value_.__r.__words[2]) < 0)
LABEL_72:
    operator delete(v200.__r_.__value_.__l.__data_);
  return v20;
}

void sub_223566CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,char a33,_QWORD *a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *__p,void *a49,int a50,__int16 a51,char a52,char a53,char a54,int a55,__int16 a56,char a57,char a58)
{
  uint64_t v58;

  if (a54 && a53 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC(v58 - 224);
  sub_223198030((uint64_t)&a33, a34);
  if (a41 < 0)
    operator delete(a36);
  _Unwind_Resume(a1);
}

void sub_223566FA8(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CAF48);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CAF48))
  {
    sub_22455F53C(&v5);
    sub_223174DE4(__p, "cv3d.recon.sng");
    sub_2232300E0(&v5, (uint64_t)__p, &qword_2540CAF40);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_2540CAF48);
  }
  *a1 = qword_2540CAF40;
}

void sub_223567044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CAF48);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CAF48);
  _Unwind_Resume(a1);
}

uint64_t sub_22356709C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  std::mutex *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void **v13;
  void *v14;
  void *v15;
  int v16;
  __n128 *v19;
  void **v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  double v26;
  double v27;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  std::mutex *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  double v37;
  float v38;
  float v39;
  uint64_t *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *p_shared_owners;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unsigned __int8 v56;
  const void *v57;
  size_t v58;
  int v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  const char *v63;
  size_t v64;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  const char *v69;
  size_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  void **v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  double v78;
  double v79;
  size_t v80;
  std::__shared_weak_count_vtbl *v81;
  std::__shared_weak_count *v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  std::__shared_weak_count *v108;
  int v109;
  unint64_t *v110;
  unint64_t v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  void *v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  const char *v122;
  int v123;
  std::string v124;
  void *__p[2];
  __int128 v126;
  const char *v127;
  int v128;
  const char *v129;
  uint64_t v130;
  std::__shared_weak_count *v131;
  __int128 v132;
  uint64_t v133[3];
  __int128 v134;
  __int16 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE v139[40];
  void *v140[2];
  unint64_t v141;
  char v142;
  uint64_t v143;

  v143 = *MEMORY[0x24BDAC8D0];
  if (!*((_BYTE *)a2 + 8))
    return 1;
  v4 = *a1;
  if (*a1)
  {
    *(_QWORD *)v139 = "cv3d.recon.";
    *(_QWORD *)&v139[8] = 11;
    *(_QWORD *)&v139[16] = "Stats.Volumetric.Time";
    *(_QWORD *)&v139[24] = 21;
    sub_2231A9820((uint64_t)v139, (uint64_t)&v139[32], 0, 0, (std::string *)__p);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v5 = sub_2241471F8();
      v6 = v5[2];
      if (!v6)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v6 = v5[2];
      }
      v7 = *(_QWORD *)(v6 + 64);
      v8 = (std::mutex *)(v7 + 32);
      std::mutex::lock((std::mutex *)(v7 + 32));
      v10 = *(_QWORD *)(v7 + 96);
      v9 = *(_QWORD *)(v7 + 104);
      std::mutex::unlock(v8);
      if (v10 != v9)
      {
        sub_2241471F8();
        v11 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 24))(v11))
        {
          memset(v139, 0, 32);
          *(_DWORD *)&v139[32] = 728325608;
          kdebug_trace();
          *(double *)&v134 = (double)(*a2 - *a1) / 1000000000.0;
          sub_223568370((double *)&qword_255788F20, v11, (double *)&v134, "scheduling period (s)");
          kdebug_trace();
        }
      }
    }
    memset(v139, 0, 32);
    *(_DWORD *)&v139[32] = 728325624;
    kdebug_trace();
    v12 = BYTE7(v126);
    if (SBYTE7(v126) < 0)
      v12 = (unint64_t)__p[1];
    if (v12 >= 0x11)
    {
      v13 = __p;
      if (SBYTE7(v126) < 0)
        v13 = (void **)__p[0];
      v14 = *v13;
      v15 = v13[1];
      v16 = *((unsigned __int8 *)v13 + 16);
      if (v14 == (void *)0x6365722E64337663 && v15 == (void *)0x73746174532E6E6FLL && v16 == 46)
      {
        v19 = sub_223187510();
        if ((SBYTE7(v126) & 0x80u) == 0)
          v20 = __p;
        else
          v20 = (void **)__p[0];
        if ((SBYTE7(v126) & 0x80u) == 0)
          v21 = BYTE7(v126);
        else
          v21 = (size_t)__p[1];
        *(double *)&v134 = (double)(*a2 - *a1) / 1000000000.0;
        sub_2231AA374((uint64_t *)v19, v20, v21, (uint64_t *)&v134, (uint64_t)"scheduling period (s)", 21);
      }
    }
    kdebug_trace();
    if (SBYTE7(v126) < 0)
      operator delete(__p[0]);
    memset(v139, 0, 32);
    *(_DWORD *)&v139[32] = 728325632;
    kdebug_trace();
    v22 = *a2;
    v23 = *a1;
    mach_absolute_time();
    v24 = atomic_load((unsigned __int8 *)&qword_255795560);
    if ((v24 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
    {
      mach_timebase_info((mach_timebase_info_t)__p);
      LODWORD(v120) = HIDWORD(__p[0]);
      LODWORD(v119) = __p[0];
      *(double *)&qword_255795558 = (double)v119 / (double)v120;
      __cxa_guard_release(&qword_255795560);
    }
    v25 = atomic_load((unsigned __int8 *)&qword_25578DF68);
    if ((v25 & 1) == 0 && __cxa_guard_acquire(&qword_25578DF68))
    {
      qword_25578BBC8 = (uint64_t)&off_24EC37778;
      sub_223476B20((uint64_t)&qword_25578BBD0);
      __cxa_atexit((void (*)(void *))sub_223FDB180, &qword_25578BBC8, &dword_22314D000);
      __cxa_guard_release(&qword_25578DF68);
    }
    std::mutex::lock(&stru_25578C9E0);
    v26 = (double)(v22 - v23) / 1000000000.0;
    v27 = *(double *)&qword_25578CA20;
    if (*(double *)&qword_25578CA20 <= v26)
      v27 = (double)(v22 - v23) / 1000000000.0;
    if (byte_25578CA28)
      v26 = v27;
    qword_25578CA20 = *(_QWORD *)&v26;
    byte_25578CA28 = 1;
    std::mutex::unlock(&stru_25578C9E0);
    kdebug_trace();
    v4 = *a1;
  }
  if (*a2 < 1 || *a2 > v4)
  {
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v29 = sub_2241471F8();
      v30 = v29[2];
      if (!v30)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v30 = v29[2];
      }
      v31 = *(_QWORD *)(v30 + 64);
      v32 = (std::mutex *)(v31 + 32);
      std::mutex::lock((std::mutex *)(v31 + 32));
      v34 = *(_QWORD *)(v31 + 96);
      v33 = *(_QWORD *)(v31 + 104);
      std::mutex::unlock(v32);
      if (v34 != v33)
      {
        *(_QWORD *)v139 = "cv3d.recon.";
        *(_QWORD *)&v139[8] = 11;
        *(_QWORD *)&v139[16] = "Stats.FrameRate";
        *(_QWORD *)&v139[24] = 15;
        sub_2231A9820((uint64_t)v139, (uint64_t)&v139[32], 0, 0, &v124);
        sub_2241471F8();
        v35 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v35 + 24))(v35))
        {
          *(_OWORD *)__p = 0u;
          v126 = 0u;
          LODWORD(v127) = 728325616;
          kdebug_trace();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v35 + 24))(v35))
          {
            *(_QWORD *)&v132 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
            *((_QWORD *)&v132 + 1) = 2;
            v36 = sub_2241471F8();
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v35 + 24))(v35))
            {
              v37 = (double)*a2 / 1000000000.0;
              v38 = v37 - *(float *)&dword_255792C68;
              *(float *)&v37 = v37;
              dword_255792C68 = LODWORD(v37);
              v39 = 1.0 / v38;
              if ((float)(1.0 / v38) > 100.0)
                v39 = 100.0;
              *(float *)v139 = v39;
              strcpy((char *)&v134, "MeshingEngine");
              v135 = 269;
              sub_2231FBCB0((float *)v139, &v134, &v132, &v136);
              if (HIBYTE(v135) && (char)v135 < 0)
                operator delete((void *)v134);
              v40 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v35 + 56))(v35);
              v41 = *v40;
              v42 = (std::__shared_weak_count *)v40[1];
              if (v42)
              {
                p_shared_owners = (unint64_t *)&v42->__shared_owners_;
                do
                  v44 = __ldxr(p_shared_owners);
                while (__stxr(v44 + 1, p_shared_owners));
              }
              v46 = v137;
              v45 = v138;
              v133[0] = (uint64_t)&off_24EC6A3B8;
              v133[1] = v137;
              v133[2] = v138;
              v137 = 0;
              v138 = 0;
              *(_QWORD *)v139 = v41;
              *(_QWORD *)&v139[8] = v42;
              if (v42)
              {
                v47 = (unint64_t *)&v42->__shared_owners_;
                do
                  v48 = __ldxr(v47);
                while (__stxr(v48 + 1, v47));
              }
              *(_QWORD *)&v139[16] = &off_24EC6A3B8;
              *(_QWORD *)&v139[24] = v46;
              *(_QWORD *)&v139[32] = v45;
              if (v45)
              {
                v49 = (unint64_t *)(v45 + 8);
                do
                  v50 = __ldxr(v49);
                while (__stxr(v50 + 1, v49));
              }
              (*(void (**)(uint64_t *, _BYTE *))(*v36 + 16))(v36, v139);
              sub_2241231D8((uint64_t)&v139[16]);
              v51 = *(std::__shared_weak_count **)&v139[8];
              if (*(_QWORD *)&v139[8])
              {
                v52 = (unint64_t *)(*(_QWORD *)&v139[8] + 8);
                do
                  v53 = __ldaxr(v52);
                while (__stlxr(v53 - 1, v52));
                if (!v53)
                {
                  ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
                  std::__shared_weak_count::__release_weak(v51);
                }
              }
              sub_2241231D8((uint64_t)v133);
              if (v42)
              {
                v54 = (unint64_t *)&v42->__shared_owners_;
                do
                  v55 = __ldaxr(v54);
                while (__stlxr(v55 - 1, v54));
                if (!v55)
                {
                  ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                  std::__shared_weak_count::__release_weak(v42);
                }
              }
              sub_2241231D8((uint64_t)&v136);
            }
          }
          kdebug_trace();
        }
        if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v124.__r_.__value_.__l.__data_);
      }
    }
    return 1;
  }
  v56 = atomic_load((unsigned __int8 *)&qword_2557892F0);
  if ((v56 & 1) == 0 && __cxa_guard_acquire(&qword_2557892F0))
  {
    __cxa_atexit((void (*)(void *))sub_2231A8A28, &unk_255789280, &dword_22314D000);
    __cxa_guard_release(&qword_2557892F0);
  }
  sub_223566FA8(v139);
  if (*(char *)(*(_QWORD *)v139 + 39) < 0)
  {
    v57 = *(const void **)(*(_QWORD *)v139 + 16);
    v58 = *(_QWORD *)(*(_QWORD *)v139 + 24);
  }
  else
  {
    v57 = (const void *)(*(_QWORD *)v139 + 16);
    v58 = *(unsigned __int8 *)(*(_QWORD *)v139 + 39);
  }
  sub_223195728((uint64_t)&unk_255789280, v57, v58, "Found out of order bundle to process at time: %lf with latest bundle processed at time: %lf", 0x5BuLL);
  sub_223565394(v133);
  if (**(int **)(v133[0] + 56) <= 5)
  {
    v59 = *(unsigned __int8 *)(v133[0] + 72);
    v60 = sub_22322F254(v133[0], "OSLogSurrogateAppender", 1, 0);
    v61 = v60;
    if (v59 || v60)
    {
      v123 = v59;
      __p[0] = v133;
      __p[1] = (void *)std::chrono::steady_clock::now().__d_.__rep_;
      *(std::chrono::system_clock::time_point *)&v126 = std::chrono::system_clock::now();
      DWORD2(v126) = 5;
      v127 = "unknown file";
      v128 = 213;
      v130 = 0;
      v131 = 0;
      v129 = "unknown function";
      v62 = *(_QWORD *)__p[0];
      v63 = (const char *)(*(_QWORD *)__p[0] + 16);
      v121 = *(_QWORD *)__p[0];
      v122 = v63;
      if (*(char *)(*(_QWORD *)__p[0] + 39) < 0)
      {
        v63 = *(const char **)(v62 + 16);
        v64 = *(_QWORD *)(v62 + 24);
      }
      else
      {
        v64 = *(unsigned __int8 *)(*(_QWORD *)__p[0] + 39);
      }
      v66 = *a2;
      v67 = *a1;
      v68 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v68 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
      {
        sub_224568628((uint64_t)v139);
        sub_223199C58("com.apple.cv3d", (unint64_t)v139, &xmmword_255788F40);
        if (v139[24] && (v139[23] & 0x80000000) != 0)
          operator delete(*(void **)v139);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
        __cxa_guard_release(&qword_255788F58);
      }
      if (byte_255788F57 >= 0)
        v69 = (const char *)&xmmword_255788F40;
      else
        v69 = (const char *)xmmword_255788F40;
      if (byte_255788F57 >= 0)
        v70 = byte_255788F57;
      else
        v70 = *((_QWORD *)&xmmword_255788F40 + 1);
      *(_QWORD *)v139 = os_log_create(v69, v63);
      v71 = &v139[8];
      if (v70 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v70 >= 0x17)
      {
        v72 = (v70 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v70 | 7) != 0x17)
          v72 = v70 | 7;
        v73 = v72 + 1;
        v71 = operator new(v72 + 1);
        *(_QWORD *)&v139[16] = v70;
        *(_QWORD *)&v139[24] = v73 | 0x8000000000000000;
        *(_QWORD *)&v139[8] = v71;
      }
      else
      {
        v139[31] = v70;
        if (!v70)
        {
LABEL_105:
          v71[v70] = 0;
          v139[32] = 1;
          v74 = v140;
          if (v64 > 0x7FFFFFFFFFFFFFF7)
            sub_22316DBC0();
          if (v64 >= 0x17)
          {
            v75 = (v64 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v64 | 7) != 0x17)
              v75 = v64 | 7;
            v76 = v75 + 1;
            v74 = (void **)operator new(v75 + 1);
            v140[1] = (void *)v64;
            v141 = v76 | 0x8000000000000000;
            v140[0] = v74;
          }
          else
          {
            HIBYTE(v141) = v64;
            if (!v64)
              goto LABEL_113;
          }
          memmove(v74, v63, v64);
LABEL_113:
          *((_BYTE *)v74 + v64) = 0;
          v142 = 1;
          v77 = *(NSObject **)v139;
          if (SHIBYTE(v141) < 0)
            operator delete(v140[0]);
          if (v139[32] && (v139[31] & 0x80000000) != 0)
            operator delete(*(void **)&v139[8]);
          if (*(_QWORD *)v139)
            os_release(*(void **)v139);
          v78 = (double)v66 / 1000000000.0;
          v79 = (double)v67 / 1000000000.0;
          if (v61 && *(_QWORD *)(v61 + 24))
          {
            v80 = _os_log_pack_size();
            v81 = (std::__shared_weak_count_vtbl *)operator new(v80, (std::align_val_t)8uLL);
            v82 = (std::__shared_weak_count *)operator new();
            v83 = v82;
            v82->__shared_owners_ = 0;
            v84 = (unint64_t *)&v82->__shared_owners_;
            v82->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
            v82->__shared_weak_owners_ = 0;
            v82[1].__vftable = v81;
            *(_QWORD *)v139 = v81;
            *(_QWORD *)&v139[8] = v81;
            *(_QWORD *)&v139[16] = v82;
            do
              v85 = __ldxr(v84);
            while (__stxr(v85 + 1, v84));
            *(_QWORD *)&v139[24] = 0;
            *(_QWORD *)&v139[32] = 0;
            v140[0] = 0;
            do
              v86 = __ldaxr(v84);
            while (__stlxr(v86 - 1, v84));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
              std::__shared_weak_count::__release_weak(v83);
            }
            v87 = *(_QWORD *)v139;
            v88 = _os_log_pack_fill();
            *(_DWORD *)v88 = 134218240;
            *(double *)(v88 + 4) = v78;
            *(_WORD *)(v88 + 12) = 2048;
            *(double *)(v88 + 14) = v79;
            v89 = operator new();
            v90 = *(unsigned __int8 *)(v121 + 39);
            v91 = *(const char **)(v121 + 16);
            v92 = *(_QWORD *)(v121 + 24);
            v93 = *(_OWORD *)&v139[24];
            *(_OWORD *)(v89 + 8) = *(_OWORD *)&v139[8];
            if ((v90 & 0x80u) != 0)
              v90 = v92;
            else
              v91 = v122;
            *(_QWORD *)v89 = v87;
            *(_QWORD *)&v139[8] = 0;
            *(_QWORD *)&v139[16] = 0;
            *(_OWORD *)(v89 + 24) = v93;
            *(_QWORD *)&v139[24] = 0;
            *(_QWORD *)&v139[32] = 0;
            *(_QWORD *)(v89 + 40) = v91;
            *(_QWORD *)(v89 + 48) = v90;
            *(_BYTE *)(v89 + 56) = 16;
            v136 = 0;
            *(_QWORD *)&v134 = v89;
            (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v61 + 24) + 40))(*(_QWORD *)(v61 + 24), &v134);
            v94 = v134;
            *(_QWORD *)&v134 = 0;
            if (v94)
            {
              v95 = *(std::__shared_weak_count **)(v94 + 32);
              if (v95)
              {
                v96 = (unint64_t *)&v95->__shared_owners_;
                do
                  v97 = __ldaxr(v96);
                while (__stlxr(v97 - 1, v96));
                if (!v97)
                {
                  ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
                  std::__shared_weak_count::__release_weak(v95);
                }
              }
              v98 = *(std::__shared_weak_count **)(v94 + 16);
              if (v98)
              {
                v99 = (unint64_t *)&v98->__shared_owners_;
                do
                  v100 = __ldaxr(v99);
                while (__stlxr(v100 - 1, v99));
                if (!v100)
                {
                  ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
                  std::__shared_weak_count::__release_weak(v98);
                }
              }
              MEMORY[0x227684CE8](v94, 0x10F0C40B62ED6C6);
              v101 = v136;
              v136 = 0;
              if (v101)
              {
                v102 = *(std::__shared_weak_count **)(v101 + 32);
                if (v102)
                {
                  v103 = (unint64_t *)&v102->__shared_owners_;
                  do
                    v104 = __ldaxr(v103);
                  while (__stlxr(v104 - 1, v103));
                  if (!v104)
                  {
                    ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
                    std::__shared_weak_count::__release_weak(v102);
                  }
                }
                v105 = *(std::__shared_weak_count **)(v101 + 16);
                if (v105)
                {
                  v106 = (unint64_t *)&v105->__shared_owners_;
                  do
                    v107 = __ldaxr(v106);
                  while (__stlxr(v107 - 1, v106));
                  if (!v107)
                  {
                    ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
                    std::__shared_weak_count::__release_weak(v105);
                  }
                }
                MEMORY[0x227684CE8](v101, 0x10F0C40B62ED6C6);
              }
            }
            v108 = *(std::__shared_weak_count **)&v139[32];
            v109 = v123;
            if (*(_QWORD *)&v139[32])
            {
              v110 = (unint64_t *)(*(_QWORD *)&v139[32] + 8);
              do
                v111 = __ldaxr(v110);
              while (__stlxr(v111 - 1, v110));
              if (!v111)
              {
                ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
                std::__shared_weak_count::__release_weak(v108);
              }
            }
            v112 = *(std::__shared_weak_count **)&v139[16];
            if (*(_QWORD *)&v139[16])
            {
              v113 = (unint64_t *)(*(_QWORD *)&v139[16] + 8);
              do
                v114 = __ldaxr(v113);
              while (__stlxr(v114 - 1, v113));
              if (!v114)
              {
                ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
                std::__shared_weak_count::__release_weak(v112);
              }
            }
          }
          else
          {
            os_log_type_enabled(v77, OS_LOG_TYPE_ERROR);
            *(_DWORD *)v139 = 134218240;
            *(double *)&v139[4] = v78;
            *(_WORD *)&v139[12] = 2048;
            *(double *)&v139[14] = v79;
            v115 = (void *)_os_log_send_and_compose_impl();
            v109 = v123;
            if (v115)
              free(v115);
          }
          if (v109)
          {
            sub_22322C138((uint64_t)__p, "Found out of order bundle to process at time: %lf with latest bundle processed at time: %lf", (double)*a2 / 1000000000.0, (double)*a1 / 1000000000.0);
            sub_223182C08((uint64_t)__p);
          }
          sub_223182C08((uint64_t)__p);
          v116 = v131;
          if (v131)
          {
            v117 = (unint64_t *)&v131->__shared_owners_;
            do
              v118 = __ldaxr(v117);
            while (__stlxr(v118 - 1, v117));
            if (!v118)
            {
              ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
              std::__shared_weak_count::__release_weak(v116);
            }
          }
          return 0;
        }
      }
      memmove(v71, v69, v70);
      goto LABEL_105;
    }
  }
  return 0;
}

void sub_22356808C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  if (*(_BYTE *)(v9 - 168))
  {
    if (*(char *)(v9 - 169) < 0)
      operator delete(*(void **)(v9 - 192));
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2235680CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  __cxa_guard_abort(&qword_25578DF68);
  sub_2231874DC(v1 - 192);
  _Unwind_Resume(a1);
}

void sub_2235680EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  __cxa_guard_abort(&qword_255795560);
  sub_2231874DC(v1 - 192);
  _Unwind_Resume(a1);
}

void sub_22356810C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,char a44,int a45,__int16 a46,char a47,char a48)
{
  std::__shared_weak_count *v48;
  uint64_t v49;
  uint64_t v50;
  std::__shared_weak_count *v52;
  unint64_t *p_shared_owners;
  unint64_t v54;
  unint64_t *v55;
  unint64_t v56;

  sub_2241231D8(v49);
  v52 = *(std::__shared_weak_count **)(v50 - 184);
  if (v52)
  {
    p_shared_owners = (unint64_t *)&v52->__shared_owners_;
    do
      v54 = __ldaxr(p_shared_owners);
    while (__stlxr(v54 - 1, p_shared_owners));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }
  sub_2241231D8((uint64_t)&a35);
  if (v48)
  {
    v55 = (unint64_t *)&v48->__shared_owners_;
    do
      v56 = __ldaxr(v55);
    while (__stlxr(v56 - 1, v55));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
  }
  sub_2241231D8((uint64_t)&a46);
  sub_2231874DC((uint64_t)&a20);
  if (a19 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_223568370(double *a1, uint64_t a2, double *a3, const char *a4)
{
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v14;
  void *__dst[2];
  unint64_t v16;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v8 = strlen(a4);
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v9 = (void *)v8;
    if (v8 >= 0x17)
    {
      v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17)
        v11 = v8 | 7;
      v12 = v11 + 1;
      v10 = (void **)operator new(v11 + 1);
      __dst[1] = v9;
      v16 = v12 | 0x8000000000000000;
      __dst[0] = v10;
    }
    else
    {
      HIBYTE(v16) = v8;
      v10 = __dst;
      if (!v8)
      {
LABEL_10:
        *((_BYTE *)v9 + (_QWORD)v10) = 0;
        *(_QWORD *)&v14 = (uint64_t)(*a1 * 1000000000.0);
        *((_QWORD *)&v14 + 1) = 2;
        v13 = sub_2241471F8();
        sub_2231AA49C((uint64_t)v13, a2, a3, (uint64_t)__dst, &v14);
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        return;
      }
    }
    memcpy(v10, a4, (size_t)v9);
    goto LABEL_10;
  }
}

void sub_223568490(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235684AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint8x8_t v21;
  void **v22;
  char *v23;
  uint64_t v25;
  unint64_t v27;
  float v28;
  float v29;
  _BOOL8 v30;
  unint64_t v31;
  unint64_t v32;
  size_t prime;
  unint64_t v34;
  uint8x8_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *p_shared_owners;
  unint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _QWORD *v53;
  unint64_t v54;
  uint64_t v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v63;
  uint64_t v64;
  int32x4_t v65;
  __int128 v66;
  unint64_t v67;

  kdebug_trace();
  sub_2234853B8(a4);
  v9 = a1 + 8;
  v10 = a4 + 24;
  if (*(unsigned __int8 *)(a4 + 1848) != *(unsigned __int8 *)(a1 + 1832))
  {
    if (*(_BYTE *)(a4 + 1848))
    {
      sub_2232555B8(v10);
      *(_BYTE *)(a4 + 1848) = 0;
      v11 = *(_QWORD *)(a1 + 1872);
      v12 = *(_QWORD *)(a1 + 1880);
      if (*(_BYTE *)(a1 + 1832))
        goto LABEL_11;
    }
    else
    {
      sub_223257000(v10, v9);
      *(_BYTE *)(a4 + 1848) = 1;
      v11 = *(_QWORD *)(a1 + 1872);
      v12 = *(_QWORD *)(a1 + 1880);
      if (*(_BYTE *)(a1 + 1832))
        goto LABEL_11;
    }
LABEL_10:
    if (v11 == v12)
      return kdebug_trace();
    goto LABEL_11;
  }
  if (*(_BYTE *)(a4 + 1848))
    sub_223481BB8(v10, v9);
  v11 = *(_QWORD *)(a1 + 1872);
  v12 = *(_QWORD *)(a1 + 1880);
  if (!*(_BYTE *)(a1 + 1832))
    goto LABEL_10;
LABEL_11:
  if (a1 + 1872 != a4)
    sub_223484290((void **)a4, v11, v12, 0xEF7BDEF7BDEF7BDFLL * ((v12 - v11) >> 3));
  sub_2234837DC(a4 + 1856, a1 + 1840);
  if (a4 + 1928 != a1 + 1896)
    sub_223484748((char **)(a4 + 1928), *(__int128 **)(a1 + 1896), *(__int128 **)(a1 + 1904), 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(*(_QWORD *)(a1 + 1904) - *(_QWORD *)(a1 + 1896)) >> 2));
  if (*(_BYTE *)(a1 + 2152))
    *(_BYTE *)(a4 + 1952) = *(_BYTE *)(a1 + 2151);
  if (*a2)
  {
    v63 = a2;
    v64 = a3;
    v13 = *(_QWORD **)(*a2 + 96);
    if (v13)
    {
      v14 = (uint64_t *)(a4 + 1888);
      v15 = (_QWORD *)(a4 + 1904);
      v65 = vdupq_n_s32(0x7FC00000u);
      while (1)
      {
        v16 = v13 + 2;
        v17 = v13[4];
        v18 = sub_22456636C((unsigned __int8 *)v13 + 16);
        v19 = v18;
        v20 = *(_QWORD *)(a4 + 1896);
        if (v20)
        {
          v21 = (uint8x8_t)vcnt_s8((int8x8_t)v20);
          v21.i16[0] = vaddlv_u8(v21);
          if (v21.u32[0] > 1uLL)
          {
            v4 = v18;
            if (v18 >= v20)
              v4 = v18 % v20;
          }
          else
          {
            v4 = (v20 - 1) & v18;
          }
          v22 = *(void ***)(*v14 + 8 * v4);
          if (v22)
          {
            v23 = (char *)*v22;
            if (*v22)
            {
              if (v21.u32[0] < 2uLL)
              {
                while (1)
                {
                  v25 = *((_QWORD *)v23 + 1);
                  if (v25 == v18)
                  {
                    if (*((_QWORD *)v23 + 2) == *v16 && *((_QWORD *)v23 + 3) == v13[3])
                      goto LABEL_87;
                  }
                  else if ((v25 & (v20 - 1)) != v4)
                  {
                    goto LABEL_47;
                  }
                  v23 = *(char **)v23;
                  if (!v23)
                    goto LABEL_47;
                }
              }
              do
              {
                v27 = *((_QWORD *)v23 + 1);
                if (v27 == v18)
                {
                  if (*((_QWORD *)v23 + 2) == *v16 && *((_QWORD *)v23 + 3) == v13[3])
                    goto LABEL_87;
                }
                else
                {
                  if (v27 >= v20)
                    v27 %= v20;
                  if (v27 != v4)
                    break;
                }
                v23 = *(char **)v23;
              }
              while (v23);
            }
          }
        }
LABEL_47:
        v23 = (char *)operator new(0xF0uLL);
        *(_QWORD *)&v66 = v23;
        *((_QWORD *)&v66 + 1) = a4 + 1904;
        *(_QWORD *)v23 = 0;
        *((_QWORD *)v23 + 1) = v19;
        *((_OWORD *)v23 + 1) = *(_OWORD *)v16;
        *((_QWORD *)v23 + 4) = &off_24EC715B8;
        *(_OWORD *)(v23 + 40) = 0u;
        *(_OWORD *)(v23 + 72) = 0u;
        *(int32x4_t *)(v23 + 88) = v65;
        *(int32x4_t *)(v23 + 104) = v65;
        *(int32x4_t *)(v23 + 120) = v65;
        *(_OWORD *)(v23 + 136) = 0u;
        *((_DWORD *)v23 + 34) = 2143289344;
        *((_QWORD *)v23 + 7) = &off_24EC207B8;
        *((_QWORD *)v23 + 8) = &off_24EC20868;
        *(_OWORD *)(v23 + 200) = unk_224624CD0;
        *(_OWORD *)(v23 + 184) = xmmword_224624CC0;
        *(_OWORD *)(v23 + 168) = unk_224624CB0;
        *(_OWORD *)(v23 + 152) = xmmword_224624CA0;
        *((_QWORD *)v23 + 29) = 0;
        *(_OWORD *)(v23 + 216) = 0u;
        LOBYTE(v67) = 1;
        v28 = (float)(unint64_t)(*(_QWORD *)(a4 + 1912) + 1);
        v29 = *(float *)(a4 + 1920);
        if (v20 && (float)(v29 * (float)v20) >= v28)
          goto LABEL_76;
        v30 = v20 < 3 || (v20 & (v20 - 1)) != 0;
        v31 = v30 | (2 * v20);
        v32 = vcvtps_u32_f32(v28 / v29);
        if (v31 <= v32)
          prime = v32;
        else
          prime = v31;
        if (prime == 1)
        {
          prime = 2;
        }
        else if ((prime & (prime - 1)) != 0)
        {
          prime = std::__next_prime(prime);
          v20 = *(_QWORD *)(a4 + 1896);
        }
        if (prime > v20)
          goto LABEL_60;
        if (prime < v20)
        {
          v34 = vcvtps_u32_f32((float)*(unint64_t *)(a4 + 1912) / *(float *)(a4 + 1920));
          if (v20 < 3 || (v35 = (uint8x8_t)vcnt_s8((int8x8_t)v20), v35.i16[0] = vaddlv_u8(v35), v35.u32[0] > 1uLL))
          {
            v34 = std::__next_prime(v34);
          }
          else
          {
            v36 = 1 << -(char)__clz(v34 - 1);
            if (v34 >= 2)
              v34 = v36;
          }
          if (prime <= v34)
            prime = v34;
          if (prime < v20)
LABEL_60:
            sub_2231B0668(a4 + 1888, prime);
        }
        v20 = *(_QWORD *)(a4 + 1896);
        v37 = v20 - 1;
        if ((v20 & (v20 - 1)) == 0)
        {
          v4 = v37 & v19;
          v38 = *v14;
          v39 = *(_QWORD **)(*v14 + 8 * (v37 & v19));
          if (v39)
            goto LABEL_77;
          goto LABEL_79;
        }
        if (v19 < v20)
          break;
        v4 = v19 % v20;
        v38 = *v14;
        v39 = *(_QWORD **)(*v14 + 8 * (v19 % v20));
        if (v39)
        {
LABEL_77:
          *(_QWORD *)v23 = *v39;
          goto LABEL_85;
        }
LABEL_79:
        *(_QWORD *)v23 = *v15;
        *v15 = v23;
        *(_QWORD *)(v38 + 8 * v4) = v15;
        if (!*(_QWORD *)v23)
          goto LABEL_86;
        v40 = *(_QWORD *)(*(_QWORD *)v23 + 8);
        if ((v20 & (v20 - 1)) != 0)
        {
          if (v40 >= v20)
            v40 %= v20;
        }
        else
        {
          v40 &= v20 - 1;
        }
        v39 = (_QWORD *)(*v14 + 8 * v40);
LABEL_85:
        *v39 = v23;
LABEL_86:
        ++*(_QWORD *)(a4 + 1912);
LABEL_87:
        v42 = *(_QWORD *)(v17 + 8);
        v41 = *(_QWORD *)(v17 + 16);
        if (v41)
        {
          v43 = (unint64_t *)(v41 + 8);
          do
            v44 = __ldxr(v43);
          while (__stxr(v44 + 1, v43));
        }
        v45 = (std::__shared_weak_count *)*((_QWORD *)v23 + 6);
        *((_QWORD *)v23 + 5) = v42;
        *((_QWORD *)v23 + 6) = v41;
        if (v45)
        {
          p_shared_owners = (unint64_t *)&v45->__shared_owners_;
          do
            v47 = __ldaxr(p_shared_owners);
          while (__stlxr(v47 - 1, p_shared_owners));
          if (!v47)
          {
            ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
            std::__shared_weak_count::__release_weak(v45);
          }
        }
        *((_QWORD *)v23 + 9) = *(_QWORD *)(v17 + 40);
        *((_QWORD *)v23 + 10) = *(_QWORD *)(v17 + 48);
        *(_OWORD *)(v23 + 88) = *(_OWORD *)(v17 + 56);
        v48 = *(_OWORD *)(v17 + 72);
        v49 = *(_OWORD *)(v17 + 88);
        *((_DWORD *)v23 + 34) = *(_DWORD *)(v17 + 104);
        *(_OWORD *)(v23 + 120) = v49;
        *(_OWORD *)(v23 + 104) = v48;
        *((_QWORD *)v23 + 18) = *(_QWORD *)(v17 + 112);
        v50 = *(_OWORD *)(v17 + 120);
        v51 = *(_OWORD *)(v17 + 136);
        v52 = *(_OWORD *)(v17 + 152);
        *(_OWORD *)(v23 + 200) = *(_OWORD *)(v17 + 168);
        *(_OWORD *)(v23 + 184) = v52;
        *(_OWORD *)(v23 + 168) = v51;
        *(_OWORD *)(v23 + 152) = v50;
        if (v23 + 32 != (char *)v17)
          sub_223483E38((char **)v23 + 27, *(uint64_t **)(v17 + 184), *(uint64_t **)(v17 + 192), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v17 + 192) - *(_QWORD *)(v17 + 184)) >> 3));
        v13 = (_QWORD *)*v13;
        if (!v13)
          goto LABEL_97;
      }
      v4 = v19;
LABEL_76:
      v38 = *v14;
      v39 = *(_QWORD **)(*v14 + 8 * v4);
      if (v39)
        goto LABEL_77;
      goto LABEL_79;
    }
LABEL_97:
    v66 = 0uLL;
    v67 = 0;
    sub_22365835C((char **)&v66, *(_QWORD *)(v64 + 24));
    v53 = *(_QWORD **)(v64 + 16);
    if (v53)
    {
      v54 = *((_QWORD *)&v66 + 1);
      do
      {
        while (1)
        {
          v55 = (uint64_t)(v53 + 4);
          if (v54 < v67)
            break;
          v54 = sub_22324A768(&v66, v55);
          *((_QWORD *)&v66 + 1) = v54;
          v53 = (_QWORD *)*v53;
          if (!v53)
            goto LABEL_102;
        }
        sub_223249DC0(v54, v55);
        v54 += 464;
        *((_QWORD *)&v66 + 1) = v54;
        v53 = (_QWORD *)*v53;
      }
      while (v53);
    }
LABEL_102:
    v56 = (void **)(a4 + 1960);
    v57 = *(_QWORD *)(a4 + 1960);
    if (v57)
    {
      v58 = *(_QWORD *)(a4 + 1968);
      v59 = *(void **)(a4 + 1960);
      if (v58 != v57)
      {
        do
        {
          v58 -= 464;
          sub_22324A5A0(v58);
        }
        while (v58 != v57);
        v59 = *v56;
      }
      *(_QWORD *)(a4 + 1968) = v57;
      operator delete(v59);
      *v56 = 0;
      *(_QWORD *)(a4 + 1968) = 0;
      *(_QWORD *)(a4 + 1976) = 0;
    }
    *(_OWORD *)v56 = v66;
    *(_QWORD *)(a4 + 1976) = v67;
    v60 = *v63;
    v61 = *v63;
    if (a4 + 1984 != *v63 + 192)
    {
      sub_22342D57C((uint64_t *)(a4 + 1984), *(_QWORD *)(v60 + 192), *(_QWORD *)(v60 + 200), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(v60 + 200) - *(_QWORD *)(v60 + 192)) >> 3));
      v61 = *v63;
    }
    *(_BYTE *)(a4 + 2008) = *(_BYTE *)(v60 + 216);
    if (*(_BYTE *)(v61 + 368))
    {
      if (*(_QWORD *)v61 != *(_QWORD *)(a4 + 1256))
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngineUtils.cpp", 257, (uint64_t)"plane_result->timestamp == keyframe_list.input_frame->timestamp", 63, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v61 = *v63;
      }
      if (a4 + 2016 != v61 + 224)
      {
        sub_223483E38((char **)(a4 + 2016), *(uint64_t **)(v61 + 224), *(uint64_t **)(v61 + 232), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v61 + 232) - *(_QWORD *)(v61 + 224)) >> 3));
        sub_223484084((char **)(a4 + 2040), *(_QWORD *)(v61 + 248), *(_QWORD *)(v61 + 256), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v61 + 256) - *(_QWORD *)(v61 + 248)) >> 3));
      }
      *(_BYTE *)(a4 + 2064) = *(_BYTE *)(v61 + 272);
      sub_22449B750((_QWORD *)(a4 + 2080), v61 + 288);
      *(_WORD *)(a4 + 2152) = *(_WORD *)(v61 + 360);
    }
  }
  return kdebug_trace();
}

