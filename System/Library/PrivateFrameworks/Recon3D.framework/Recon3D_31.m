unint64_t sub_223D8D47C(__int128 *a1, _QWORD *a2, _OWORD *a3)
{
  uint64_t v6;
  _BYTE **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  _BYTE **v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  _BYTE **v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned __int8 **v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  _BYTE **v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  unsigned int v53;
  uint64_t v54;
  _BYTE **v55;
  unint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  unsigned int v59;
  uint64_t v60;
  _BYTE **v61;
  unint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  unsigned int v65;
  uint64_t v66;
  _BYTE **v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  _BYTE *v72;
  unsigned int v73;
  _BYTE *v74;
  unsigned int v75;
  _BYTE *v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  _BYTE **v80;
  _DWORD *v81;
  __int128 v82;
  float32x4_t v83;
  unint64_t v84;
  uint64_t v85;
  unsigned __int8 **v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unint64_t v92;
  uint64_t v93;
  unsigned int v94;
  unsigned int v95;
  unint64_t v96;
  uint64_t v97;
  unsigned int v98;
  unsigned __int8 **v99;
  unsigned int v100;
  _BOOL4 v101;
  _BOOL4 v102;
  _BOOL4 v103;
  _BOOL4 v104;
  unint64_t v105;
  uint64_t v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unint64_t v111;
  uint64_t v112;
  unsigned int v113;
  unsigned int v114;
  unint64_t v115;
  uint64_t v116;
  unsigned int v117;
  unsigned int v118;
  _BOOL4 v119;
  _BOOL4 v120;
  _BOOL4 v121;
  _BOOL4 v122;
  unint64_t v123;
  uint64_t v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unint64_t v129;
  uint64_t v130;
  unsigned int v131;
  unsigned int v132;
  unint64_t v133;
  uint64_t v134;
  unsigned int v135;
  unsigned int v136;
  _BOOL4 v137;
  _BOOL4 v138;
  _BOOL4 v139;
  _BOOL4 v140;
  unint64_t v141;
  uint64_t v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unint64_t v147;
  uint64_t v148;
  unsigned int v149;
  unsigned int v150;
  unint64_t v151;
  uint64_t v152;
  unsigned int v153;
  unsigned int v154;
  _BOOL4 v155;
  _BOOL4 v156;
  _BOOL4 v157;
  _BOOL4 v158;
  unint64_t v159;
  uint64_t v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unint64_t v165;
  uint64_t v166;
  unsigned int v167;
  unsigned int v168;
  unint64_t v169;
  uint64_t v170;
  unsigned int v171;
  unsigned int v172;
  _BOOL4 v173;
  _BOOL4 v174;
  _BOOL4 v175;
  _BOOL4 v176;
  unint64_t v177;
  uint64_t v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unint64_t v183;
  uint64_t v184;
  unsigned int v185;
  unsigned int v186;
  unint64_t v187;
  uint64_t v188;
  unsigned int v189;
  unsigned int v190;
  _BOOL4 v191;
  _BOOL4 v192;
  _BOOL4 v193;
  _BOOL4 v194;
  unint64_t v195;
  uint64_t v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unint64_t v201;
  uint64_t v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unint64_t v206;
  uint64_t v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  _BOOL4 v212;
  _BOOL4 v213;
  _BOOL4 v214;
  _BOOL4 v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unsigned __int8 *v219;
  unsigned int v220;
  int v221;
  unint64_t v222;
  uint64_t v223;
  unsigned int v224;
  unint64_t v225;
  uint64_t v226;
  unsigned int v227;
  unint64_t v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unint64_t v252;
  uint64_t v253;
  unsigned int v254;
  unsigned int v255;
  _BOOL4 v256;
  _BOOL4 v257;
  _BOOL4 v258;
  _BOOL4 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  __int128 *v275;
  _QWORD *v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  _OWORD *v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  _OWORD v314[5];
  __int128 v315;
  uint64_t v316;
  __int128 v317;
  uint64_t v318;
  __int128 v319;
  float32x4_t v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  float32x4_t v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  float32x4_t v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  float32x4_t v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  float32x4_t v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  float32x4_t v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  float32x4_t v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  float32x4_t v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  float32x4_t v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  float32x4_t v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;
  float32x4_t v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  float32x4_t v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  float32x4_t v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  float32x4_t v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  float32x4_t v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  float32x4_t v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  float32x4_t v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  float32x4_t v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  float32x4_t v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  float32x4_t v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  float32x4_t v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  float32x4_t v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;
  __int128 v429;
  float32x4_t v430;
  __int128 v431;
  __int128 v432;
  __int128 v433;
  uint64_t v434;
  _OWORD v435[2];
  _QWORD v436[3];

  v436[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v7 = (_BYTE **)a2[2];
  v8 = *(unsigned int *)(a2[1] + 48);
  if ((v8 & 0x80000000) != 0)
  {
    v10 = v6 + 280;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 2328);
    if (v8 >= (*(_QWORD *)(v6 + 2336) - v9) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v9 = *(_QWORD *)(v6 + 2328);
    }
    v10 = v9 + (v8 << 11);
  }
  v11 = *(_DWORD *)(v10 + 1792);
  v12 = v11 & 0xCFFFFFFF;
  if ((v11 & 0x10000000) != 0)
    v13 = 0x40000000;
  else
    v13 = 0x80000000;
  if ((v11 & 0x20000000) != 0)
    v12 = v13;
  if (**v7)
    v14 = v11;
  else
    v14 = v12;
  v15 = **((_DWORD **)a1 + 2);
  v16 = v15 & 0xCFFFFFFF;
  if ((v15 & 0x10000000) != 0)
    v17 = 0x40000000;
  else
    v17 = 0x80000000;
  if ((v15 & 0x20000000) != 0)
    v16 = v17;
  if (***(_BYTE ***)a1)
    v18 = **((_DWORD **)a1 + 2);
  else
    v18 = v16;
  v19 = *a2;
  v20 = (_BYTE **)a2[2];
  v21 = *(unsigned int *)(a2[1] + 48);
  if ((v21 & 0x80000000) != 0)
  {
    v23 = v19 + 280;
  }
  else
  {
    v22 = *(_QWORD *)(v19 + 2328);
    if (v21 >= (*(_QWORD *)(v19 + 2336) - v22) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v22 = *(_QWORD *)(v19 + 2328);
    }
    v23 = v22 + (v21 << 11);
  }
  v24 = *(_DWORD *)(v23 + 1824);
  v25 = v24 & 0xCFFFFFFF;
  if ((v24 & 0x10000000) != 0)
    v26 = 0x40000000;
  else
    v26 = 0x80000000;
  if ((v24 & 0x20000000) != 0)
    v25 = v26;
  if (**v20)
    v27 = v24;
  else
    v27 = v25;
  v28 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 32);
  v29 = v28 & 0xCFFFFFFF;
  if ((v28 & 0x10000000) != 0)
    v30 = 0x40000000;
  else
    v30 = 0x80000000;
  if ((v28 & 0x20000000) != 0)
    v29 = v30;
  if (***(_BYTE ***)a1)
    v31 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 32);
  else
    v31 = v29;
  v311 = v31;
  v32 = *a2;
  v33 = (_BYTE **)a2[2];
  v34 = *(unsigned int *)(a2[1] + 48);
  v301 = v27;
  v305 = v14;
  if ((v34 & 0x80000000) != 0)
  {
    v36 = v32 + 280;
  }
  else
  {
    v35 = *(_QWORD *)(v32 + 2328);
    if (v34 >= (*(_QWORD *)(v32 + 2336) - v35) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v35 = *(_QWORD *)(v32 + 2328);
    }
    v36 = v35 + (v34 << 11);
  }
  v37 = *(_DWORD *)(v36 + 1856);
  v38 = v37 & 0xCFFFFFFF;
  if ((v37 & 0x10000000) != 0)
    v39 = 0x40000000;
  else
    v39 = 0x80000000;
  if ((v37 & 0x20000000) != 0)
    v38 = v39;
  if (**v33)
    v40 = v37;
  else
    v40 = v38;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (unsigned __int8 **)a2[2];
  v285 = a3;
  v298 = v40;
  if ((v311 & 0x40000000) == 0)
  {
    v270 = 0;
    v44 = 0;
    v280 = 0;
    v292 = 0;
    v266 = 0;
    goto LABEL_127;
  }
  v45 = v42[3];
  if ((v45 & 0x80000000) != 0)
  {
    v47 = *(_DWORD *)(v41 + 2100);
    if (**v43)
      goto LABEL_66;
  }
  else
  {
    v46 = *(_QWORD *)(v41 + 2328);
    if (v45 >= (*(_QWORD *)(v41 + 2336) - v46) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v46 = *(_QWORD *)(v41 + 2328);
    }
    v47 = *(_DWORD *)(v46 + (v45 << 11) + 1820);
    if (**v43)
    {
LABEL_66:
      v48 = *a2;
      v49 = (_BYTE **)a2[2];
      v50 = *(unsigned int *)(a2[1] + 16);
      if ((v50 & 0x80000000) == 0)
        goto LABEL_67;
LABEL_94:
      v72 = *v49;
      v53 = *(_DWORD *)(v48 + 308);
      if (*v72)
        goto LABEL_71;
      goto LABEL_95;
    }
  }
  if ((v47 & 0x10000000) != 0)
    v71 = 0x40000000;
  else
    v71 = 0x80000000;
  if ((v47 & 0x20000000) != 0)
    v47 = v71;
  else
    v47 &= 0xCFFFFFFF;
  v48 = *a2;
  v49 = (_BYTE **)a2[2];
  v50 = *(unsigned int *)(a2[1] + 16);
  if ((v50 & 0x80000000) != 0)
    goto LABEL_94;
LABEL_67:
  v51 = *(_QWORD *)(v48 + 2328);
  if (v50 >= (*(_QWORD *)(v48 + 2336) - v51) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v51 = *(_QWORD *)(v48 + 2328);
  }
  v52 = *v49;
  v53 = *(_DWORD *)(v51 + (v50 << 11) + 28);
  if (*v52)
  {
LABEL_71:
    v54 = *a2;
    v55 = (_BYTE **)a2[2];
    v56 = *(unsigned int *)(a2[1] + 12);
    if ((v56 & 0x80000000) == 0)
      goto LABEL_72;
LABEL_102:
    v74 = *v55;
    v59 = *(_DWORD *)(v54 + 2132);
    if (*v74)
      goto LABEL_76;
    goto LABEL_103;
  }
LABEL_95:
  if ((v53 & 0x10000000) != 0)
    v73 = 0x40000000;
  else
    v73 = 0x80000000;
  if ((v53 & 0x20000000) != 0)
    v53 = v73;
  else
    v53 &= 0xCFFFFFFF;
  v54 = *a2;
  v55 = (_BYTE **)a2[2];
  v56 = *(unsigned int *)(a2[1] + 12);
  if ((v56 & 0x80000000) != 0)
    goto LABEL_102;
LABEL_72:
  v57 = *(_QWORD *)(v54 + 2328);
  if (v56 >= (*(_QWORD *)(v54 + 2336) - v57) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v57 = *(_QWORD *)(v54 + 2328);
  }
  v58 = *v55;
  v59 = *(_DWORD *)(v57 + (v56 << 11) + 1852);
  if (*v58)
  {
LABEL_76:
    v60 = *a2;
    v61 = (_BYTE **)a2[2];
    v62 = *(unsigned int *)(a2[1] + 16);
    if ((v62 & 0x80000000) == 0)
      goto LABEL_77;
LABEL_110:
    v76 = *v61;
    v65 = *(_DWORD *)(v60 + 340);
    if (*v76)
      goto LABEL_81;
LABEL_111:
    if ((v65 & 0x10000000) != 0)
      v77 = 0x40000000;
    else
      v77 = 0x80000000;
    if ((v65 & 0x20000000) != 0)
      v65 = v77;
    else
      v65 &= 0xCFFFFFFF;
    v66 = *a2;
    v67 = (_BYTE **)a2[2];
    v68 = *(unsigned int *)(a2[1] + 12);
    if ((v68 & 0x80000000) == 0)
      goto LABEL_82;
    goto LABEL_118;
  }
LABEL_103:
  if ((v59 & 0x10000000) != 0)
    v75 = 0x40000000;
  else
    v75 = 0x80000000;
  if ((v59 & 0x20000000) != 0)
    v59 = v75;
  else
    v59 &= 0xCFFFFFFF;
  v60 = *a2;
  v61 = (_BYTE **)a2[2];
  v62 = *(unsigned int *)(a2[1] + 16);
  if ((v62 & 0x80000000) != 0)
    goto LABEL_110;
LABEL_77:
  v63 = *(_QWORD *)(v60 + 2328);
  if (v62 >= (*(_QWORD *)(v60 + 2336) - v63) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v63 = *(_QWORD *)(v60 + 2328);
  }
  v64 = *v61;
  v65 = *(_DWORD *)(v63 + (v62 << 11) + 60);
  if (!*v64)
    goto LABEL_111;
LABEL_81:
  v66 = *a2;
  v67 = (_BYTE **)a2[2];
  v68 = *(unsigned int *)(a2[1] + 12);
  if ((v68 & 0x80000000) == 0)
  {
LABEL_82:
    v69 = *(_QWORD *)(v66 + 2328);
    if (v68 >= (*(_QWORD *)(v66 + 2336) - v69) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v69 = *(_QWORD *)(v66 + 2328);
    }
    v70 = v69 + (v68 << 11);
    goto LABEL_119;
  }
LABEL_118:
  v70 = v66 + 280;
LABEL_119:
  v266 = (v47 >> 30) & 1;
  v292 = (v53 >> 30) & 1;
  v280 = (v59 >> 30) & 1;
  v44 = (v65 >> 30) & 1;
  v78 = *(_DWORD *)(v70 + 1884);
  a3 = v285;
  if (!**v67)
  {
    if ((v78 & 0x10000000) != 0)
      v79 = 0x40000000;
    else
      v79 = 0x80000000;
    if ((v78 & 0x20000000) != 0)
      v78 = v79;
    else
      v78 &= 0xCFFFFFFF;
  }
  v270 = (v78 >> 30) & 1;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (unsigned __int8 **)a2[2];
LABEL_127:
  v80 = *(_BYTE ***)a1;
  v275 = a1;
  v276 = a2;
  v81 = (_DWORD *)*((_QWORD *)a1 + 2);
  v82 = a3[3];
  v321 = a3[2];
  v322 = v82;
  v323 = a3[4];
  v83 = *((float32x4_t *)a3 + 1);
  v319 = *a3;
  v320 = v83;
  v84 = v42[12];
  v295 = v44;
  if ((v84 & 0x80000000) != 0)
  {
    v86 = v43;
    v87 = v18;
    v88 = *(_DWORD *)(v41 + 2076);
    v89 = **v43;
    if (**v43)
      goto LABEL_138;
    goto LABEL_132;
  }
  v85 = *(_QWORD *)(v41 + 2328);
  v86 = v43;
  if (v84 >= (*(_QWORD *)(v41 + 2336) - v85) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v85 = *(_QWORD *)(v41 + 2328);
  }
  v87 = v18;
  v88 = *(_DWORD *)(v85 + (v84 << 11) + 1796);
  v89 = **v43;
  if (!**v43)
  {
LABEL_132:
    if ((v88 & 0x10000000) != 0)
      v90 = 0x40000000;
    else
      v90 = 0x80000000;
    if ((v88 & 0x20000000) != 0)
      v88 = v90;
    else
      v88 &= 0xCFFFFFFF;
  }
LABEL_138:
  v91 = v81[1];
  if (**v80)
  {
    v92 = v42[12];
    if ((v92 & 0x80000000) == 0)
      goto LABEL_140;
LABEL_594:
    v94 = *(_DWORD *)(v41 + 2108);
    if (v89)
      goto LABEL_150;
    goto LABEL_144;
  }
  if ((v91 & 0x10000000) != 0)
    v229 = 0x40000000;
  else
    v229 = 0x80000000;
  if ((v91 & 0x20000000) != 0)
    v91 = v229;
  else
    v91 &= 0xCFFFFFFF;
  v92 = v42[12];
  if ((v92 & 0x80000000) != 0)
    goto LABEL_594;
LABEL_140:
  v93 = *(_QWORD *)(v41 + 2328);
  if (v92 >= (*(_QWORD *)(v41 + 2336) - v93) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v93 = *(_QWORD *)(v41 + 2328);
    v89 = **v86;
  }
  v94 = *(_DWORD *)(v93 + (v92 << 11) + 1828);
  if (!v89)
  {
LABEL_144:
    if ((v94 & 0x10000000) != 0)
      v95 = 0x40000000;
    else
      v95 = 0x80000000;
    if ((v94 & 0x20000000) != 0)
      v94 = v95;
    else
      v94 &= 0xCFFFFFFF;
  }
LABEL_150:
  v308 = v81[9];
  if (**v80)
  {
    v96 = v42[12];
    if ((v96 & 0x80000000) == 0)
      goto LABEL_152;
LABEL_602:
    v267 = v305 >> 30;
    v98 = *(_DWORD *)(v41 + 2140);
    v99 = v43;
    if (v89)
      goto LABEL_162;
    goto LABEL_156;
  }
  v230 = v308 & 0xCFFFFFFF;
  if ((v308 & 0x10000000) != 0)
    v231 = 0x40000000;
  else
    v231 = 0x80000000;
  if ((v308 & 0x20000000) != 0)
    v230 = v231;
  v308 = v230;
  v96 = v42[12];
  if ((v96 & 0x80000000) != 0)
    goto LABEL_602;
LABEL_152:
  v97 = *(_QWORD *)(v41 + 2328);
  if (v96 < (*(_QWORD *)(v41 + 2336) - v97) >> 11)
    goto LABEL_155;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
LABEL_788:
    abort();
  }
  v97 = *(_QWORD *)(v41 + 2328);
  v89 = **v43;
LABEL_155:
  v267 = v305 >> 30;
  v98 = *(_DWORD *)(v97 + (v96 << 11) + 1860);
  v99 = v43;
  if (v89)
    goto LABEL_162;
LABEL_156:
  if ((v98 & 0x10000000) != 0)
    v100 = 0x40000000;
  else
    v100 = 0x80000000;
  if ((v98 & 0x20000000) != 0)
    v98 = v100;
  else
    v98 &= 0xCFFFFFFF;
LABEL_162:
  v273 = v88 >> 30;
  v286 = v301 >> 30;
  v289 = v87 >> 30;
  v277 = v298 >> 30;
  v299 = v94 >> 30;
  v302 = v91 >> 30;
  v283 = v98 >> 30;
  v331 = v321;
  v332 = v322;
  v333 = v323;
  v329 = v319;
  v330 = v320;
  if ((v311 & 0x40000000) != 0)
  {
    v381 = v321;
    v382 = v322;
    v383 = v323;
    v380 = v320;
    v379 = v319;
    *(_QWORD *)&v429 = 0xD0D0D0D0D0D0D0DLL;
    v374 = xmmword_224670440;
    v375 = xmmword_224670450;
    *(_QWORD *)&v424 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v379, 0, 1, 0, (uint64_t)&v429, (uint64_t)&v374, (uint64_t)&v424, COERCE_DOUBLE(0x4800000008), xmmword_224670450);
    if (!v295)
    {
      v376 = v321;
      v377 = v322;
      v378 = v323;
      *(_QWORD *)&v424 = 0x4040D0D04040D0DLL;
      v375 = v320;
      v374 = v319;
      v429 = xmmword_224670460;
      v430 = xmmword_224670470;
      *(_QWORD *)&v419 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v374, 0, 1, 0, (uint64_t)&v424, (uint64_t)&v429, (uint64_t)&v419, COERCE_DOUBLE(0x4800000008), xmmword_224670470);
      if (!(v292 | ((v87 & 0x40000000) != 0)))
      {
        v431 = v321;
        v432 = v322;
        v433 = v323;
        v429 = v319;
        v430 = v320;
        *(_QWORD *)&v419 = 0x40404040D0D0D0DLL;
        v424 = xmmword_224670480;
        v425 = xmmword_224670490;
        *(_QWORD *)&v414 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v429, 0, 1, 0, (uint64_t)&v419, (uint64_t)&v424, (uint64_t)&v414, COERCE_DOUBLE(0x4800000008), xmmword_224670490);
        v101 = (v267 & 1) == 0 && (v280 | v286 & 1) == 0;
        if (!v266 && v101)
        {
          v426 = v321;
          v427 = v322;
          v428 = v323;
          v425 = v320;
          v424 = v319;
          *(_QWORD *)&v414 = 0x3040C0D03040C0DLL;
          v419 = xmmword_2246704A0;
          v420 = xmmword_2246704B0;
          *(_QWORD *)&v409 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v424, 0, 1, 0, (uint64_t)&v414, (uint64_t)&v419, (uint64_t)&v409, COERCE_DOUBLE(0x1C800000008), xmmword_2246704B0);
        }
      }
      if (v270)
        v102 = 0;
      else
        v102 = (v280 | v286 & 1) == 0;
      if (v102 && (v277 & 1) == 0)
      {
        v421 = v331;
        v422 = v332;
        v423 = v333;
        v420 = v330;
        v419 = v329;
        *(_QWORD *)&v409 = 0x30403040C0D0C0DLL;
        v414 = xmmword_2246704C0;
        v415 = xmmword_2246704D0;
        *(_QWORD *)&v404 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v419, 0, 1, 0, (uint64_t)&v409, (uint64_t)&v414, (uint64_t)&v404, COERCE_DOUBLE(0x1C800000008), xmmword_2246704D0);
      }
    }
    if (((v289 | v302) & 1) == 0)
    {
      v416 = v331;
      v417 = v332;
      v418 = v333;
      v415 = v330;
      v414 = v329;
      *(_QWORD *)&v404 = 0xD0D0D0D0D0D0D0DLL;
      v409 = xmmword_2246704E0;
      v410 = xmmword_2246704F0;
      *(_QWORD *)&v399 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v414, 0, 1, 0, (uint64_t)&v404, (uint64_t)&v409, (uint64_t)&v399, COERCE_DOUBLE(0x4800000008), xmmword_2246704F0);
      v103 = (v88 & 0x40000000) == 0 && ((v286 | v299) & 1) == 0;
      if ((v267 & 1) == 0 && v103)
      {
        v411 = v331;
        v412 = v332;
        v413 = v333;
        v410 = v330;
        v409 = v329;
        *(_QWORD *)&v399 = 0xC0D0C0D0C0D0C0DLL;
        v404 = xmmword_224670500;
        v405 = xmmword_224670510;
        *(_QWORD *)&v394 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v409, 0, 1, 0, (uint64_t)&v399, (uint64_t)&v404, (uint64_t)&v394, COERCE_DOUBLE(0x1C800000008), xmmword_224670510);
      }
    }
    v104 = (v277 & 1) == 0 && ((v286 | v299) & 1) == 0;
    if (v104 && (v283 & 1) == 0)
    {
      v406 = v331;
      v407 = v332;
      v408 = v333;
      v405 = v330;
      v404 = v329;
      *(_QWORD *)&v394 = 0xC0D0C0D0C0D0C0DLL;
      v399 = xmmword_224670520;
      v400 = xmmword_224670530;
      *(_QWORD *)&v389 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v404, 0, 1, 0, (uint64_t)&v394, (uint64_t)&v399, (uint64_t)&v389, COERCE_DOUBLE(0x1C800000008), xmmword_224670530);
    }
  }
  v326 = v321;
  v327 = v322;
  v328 = v323;
  v324 = v319;
  v325 = v320;
  v105 = v42[12];
  if ((v105 & 0x80000000) != 0)
  {
    v107 = *(_DWORD *)(v41 + 2080);
    v108 = **v99;
    if (**v99)
      goto LABEL_201;
    goto LABEL_195;
  }
  v106 = *(_QWORD *)(v41 + 2328);
  if (v105 >= (*(_QWORD *)(v41 + 2336) - v106) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v106 = *(_QWORD *)(v41 + 2328);
  }
  v107 = *(_DWORD *)(v106 + (v105 << 11) + 1800);
  v108 = **v99;
  if (!**v99)
  {
LABEL_195:
    if ((v107 & 0x10000000) != 0)
      v109 = 0x40000000;
    else
      v109 = 0x80000000;
    if ((v107 & 0x20000000) != 0)
      v107 = v109;
    else
      v107 &= 0xCFFFFFFF;
  }
LABEL_201:
  v110 = v81[2];
  if (**v80)
  {
    v111 = v42[12];
    if ((v111 & 0x80000000) == 0)
      goto LABEL_203;
LABEL_613:
    v113 = *(_DWORD *)(v41 + 2112);
    if (v108)
      goto LABEL_213;
    goto LABEL_207;
  }
  if ((v110 & 0x10000000) != 0)
    v232 = 0x40000000;
  else
    v232 = 0x80000000;
  if ((v110 & 0x20000000) != 0)
    v110 = v232;
  else
    v110 &= 0xCFFFFFFF;
  v111 = v42[12];
  if ((v111 & 0x80000000) != 0)
    goto LABEL_613;
LABEL_203:
  v112 = *(_QWORD *)(v41 + 2328);
  if (v111 >= (*(_QWORD *)(v41 + 2336) - v112) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v112 = *(_QWORD *)(v41 + 2328);
    v108 = **v99;
  }
  v113 = *(_DWORD *)(v112 + (v111 << 11) + 1832);
  if (!v108)
  {
LABEL_207:
    if ((v113 & 0x10000000) != 0)
      v114 = 0x40000000;
    else
      v114 = 0x80000000;
    if ((v113 & 0x20000000) != 0)
      v113 = v114;
    else
      v113 &= 0xCFFFFFFF;
  }
LABEL_213:
  v306 = v81[10];
  if (**v80)
  {
    v115 = v42[12];
    if ((v115 & 0x80000000) == 0)
      goto LABEL_215;
LABEL_621:
    v117 = *(_DWORD *)(v41 + 2144);
    if (v108)
      goto LABEL_225;
    goto LABEL_219;
  }
  v233 = v306 & 0xCFFFFFFF;
  if ((v306 & 0x10000000) != 0)
    v234 = 0x40000000;
  else
    v234 = 0x80000000;
  if ((v306 & 0x20000000) != 0)
    v233 = v234;
  v306 = v233;
  v115 = v42[12];
  if ((v115 & 0x80000000) != 0)
    goto LABEL_621;
LABEL_215:
  v116 = *(_QWORD *)(v41 + 2328);
  if (v115 >= (*(_QWORD *)(v41 + 2336) - v116) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v116 = *(_QWORD *)(v41 + 2328);
    v108 = **v99;
  }
  v117 = *(_DWORD *)(v116 + (v115 << 11) + 1864);
  if (!v108)
  {
LABEL_219:
    if ((v117 & 0x10000000) != 0)
      v118 = 0x40000000;
    else
      v118 = 0x80000000;
    if ((v117 & 0x20000000) != 0)
      v117 = v118;
    else
      v117 &= 0xCFFFFFFF;
  }
LABEL_225:
  v271 = v107 >> 30;
  v293 = v113 >> 30;
  v296 = v110 >> 30;
  v281 = v117 >> 30;
  v341 = v321;
  v342 = v322;
  v343 = v323;
  v339 = v319;
  v340 = v320;
  if ((v308 & 0x40000000) != 0)
  {
    v381 = v321;
    v382 = v322;
    v383 = v323;
    v380 = v320;
    v379 = v319;
    *(_QWORD *)&v429 = 0xD0D0D0D0D0D0D0DLL;
    v374 = xmmword_224670540;
    v375 = xmmword_224670550;
    *(_QWORD *)&v424 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v379, 1, 1, 0, (uint64_t)&v429, (uint64_t)&v374, (uint64_t)&v424, COERCE_DOUBLE(0x4900000009), xmmword_224670550);
    if ((v311 & 0x40000000) == 0)
    {
      v376 = v321;
      v377 = v322;
      v378 = v323;
      v375 = v320;
      v374 = v319;
      *(_QWORD *)&v424 = 0xD0D0D0D0D0D0D0DLL;
      v429 = xmmword_224670560;
      v430 = xmmword_224670570;
      *(_QWORD *)&v419 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v374, 1, 1, 0, (uint64_t)&v424, (uint64_t)&v429, (uint64_t)&v419, COERCE_DOUBLE(0x4900000009), xmmword_224670570);
      if (((v289 | v302) & 1) == 0)
      {
        v431 = v321;
        v432 = v322;
        v433 = v323;
        v429 = v319;
        v430 = v320;
        *(_QWORD *)&v419 = 0xD0D0D0D0D0D0D0DLL;
        v424 = xmmword_224670580;
        v425 = xmmword_224670590;
        *(_QWORD *)&v414 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v429, 1, 1, 0, (uint64_t)&v419, (uint64_t)&v424, (uint64_t)&v414, COERCE_DOUBLE(0x4900000009), xmmword_224670590);
        v119 = (v273 & 1) == 0 && ((v286 | v299) & 1) == 0;
        if ((v267 & 1) == 0 && v119)
        {
          v426 = v321;
          v427 = v322;
          v428 = v323;
          v425 = v320;
          v424 = v319;
          *(_QWORD *)&v414 = 0xC0D0C0D0C0D0C0DLL;
          v419 = xmmword_2246705A0;
          v420 = xmmword_2246705B0;
          *(_QWORD *)&v409 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v424, 1, 1, 0, (uint64_t)&v414, (uint64_t)&v419, (uint64_t)&v409, COERCE_DOUBLE(0x1C900000009), xmmword_2246705B0);
        }
      }
      v120 = (v277 & 1) == 0 && ((v286 | v299) & 1) == 0;
      if (v120 && (v283 & 1) == 0)
      {
        v421 = v341;
        v422 = v342;
        v423 = v343;
        v420 = v340;
        v419 = v339;
        *(_QWORD *)&v409 = 0xC0D0C0D0C0D0C0DLL;
        v414 = xmmword_2246705C0;
        v415 = xmmword_2246705D0;
        *(_QWORD *)&v404 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v419, 1, 1, 0, (uint64_t)&v409, (uint64_t)&v414, (uint64_t)&v404, COERCE_DOUBLE(0x1C900000009), xmmword_2246705D0);
      }
    }
    if (((v302 | v296) & 1) == 0)
    {
      v416 = v341;
      v417 = v342;
      v418 = v343;
      v415 = v340;
      v414 = v339;
      *(_QWORD *)&v404 = 0xD0D0D0D0D0D0D0DLL;
      v409 = xmmword_2246705E0;
      v410 = xmmword_2246705F0;
      *(_QWORD *)&v399 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v414, 1, 1, 0, (uint64_t)&v404, (uint64_t)&v409, (uint64_t)&v399, COERCE_DOUBLE(0x4900000009), xmmword_2246705F0);
      v121 = (v107 & 0x40000000) == 0 && ((v299 | v293) & 1) == 0;
      if ((v273 & 1) == 0 && v121)
      {
        v411 = v341;
        v412 = v342;
        v413 = v343;
        v410 = v340;
        v409 = v339;
        *(_QWORD *)&v399 = 0xC0D0C0D0C0D0C0DLL;
        v404 = xmmword_224670600;
        v405 = xmmword_224670610;
        *(_QWORD *)&v394 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v409, 1, 1, 0, (uint64_t)&v399, (uint64_t)&v404, (uint64_t)&v394, COERCE_DOUBLE(0x1C900000009), xmmword_224670610);
      }
    }
    v122 = (v283 & 1) == 0 && ((v299 | v293) & 1) == 0;
    if (v122 && (v281 & 1) == 0)
    {
      v406 = v341;
      v407 = v342;
      v408 = v343;
      v405 = v340;
      v404 = v339;
      *(_QWORD *)&v394 = 0xC0D0C0D0C0D0C0DLL;
      v399 = xmmword_224670620;
      v400 = xmmword_224670630;
      *(_QWORD *)&v389 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v404, 1, 1, 0, (uint64_t)&v394, (uint64_t)&v399, (uint64_t)&v389, COERCE_DOUBLE(0x1C900000009), xmmword_224670630);
    }
  }
  v336 = v326;
  v337 = v327;
  v338 = v328;
  v334 = v324;
  v335 = v325;
  v123 = v42[12];
  if ((v123 & 0x80000000) != 0)
  {
    v125 = *(_DWORD *)(v41 + 2084);
    v126 = **v99;
    if (**v99)
      goto LABEL_264;
    goto LABEL_258;
  }
  v124 = *(_QWORD *)(v41 + 2328);
  if (v123 >= (*(_QWORD *)(v41 + 2336) - v124) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v124 = *(_QWORD *)(v41 + 2328);
  }
  v125 = *(_DWORD *)(v124 + (v123 << 11) + 1804);
  v126 = **v99;
  if (!**v99)
  {
LABEL_258:
    if ((v125 & 0x10000000) != 0)
      v127 = 0x40000000;
    else
      v127 = 0x80000000;
    if ((v125 & 0x20000000) != 0)
      v125 = v127;
    else
      v125 &= 0xCFFFFFFF;
  }
LABEL_264:
  v128 = v81[3];
  if (**v80)
  {
    v129 = v42[12];
    if ((v129 & 0x80000000) == 0)
      goto LABEL_266;
LABEL_632:
    v131 = *(_DWORD *)(v41 + 2116);
    if (v126)
      goto LABEL_276;
    goto LABEL_270;
  }
  if ((v128 & 0x10000000) != 0)
    v235 = 0x40000000;
  else
    v235 = 0x80000000;
  if ((v128 & 0x20000000) != 0)
    v128 = v235;
  else
    v128 &= 0xCFFFFFFF;
  v129 = v42[12];
  if ((v129 & 0x80000000) != 0)
    goto LABEL_632;
LABEL_266:
  v130 = *(_QWORD *)(v41 + 2328);
  if (v129 >= (*(_QWORD *)(v41 + 2336) - v130) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v130 = *(_QWORD *)(v41 + 2328);
    v126 = **v99;
  }
  v131 = *(_DWORD *)(v130 + (v129 << 11) + 1836);
  if (!v126)
  {
LABEL_270:
    if ((v131 & 0x10000000) != 0)
      v132 = 0x40000000;
    else
      v132 = 0x80000000;
    if ((v131 & 0x20000000) != 0)
      v131 = v132;
    else
      v131 &= 0xCFFFFFFF;
  }
LABEL_276:
  v312 = v81[11];
  if (**v80)
  {
    v133 = v42[12];
    if ((v133 & 0x80000000) == 0)
      goto LABEL_278;
LABEL_640:
    v135 = *(_DWORD *)(v41 + 2148);
    if (v126)
      goto LABEL_288;
    goto LABEL_282;
  }
  v236 = v312 & 0xCFFFFFFF;
  if ((v312 & 0x10000000) != 0)
    v237 = 0x40000000;
  else
    v237 = 0x80000000;
  if ((v312 & 0x20000000) != 0)
    v236 = v237;
  v312 = v236;
  v133 = v42[12];
  if ((v133 & 0x80000000) != 0)
    goto LABEL_640;
LABEL_278:
  v134 = *(_QWORD *)(v41 + 2328);
  if (v133 >= (*(_QWORD *)(v41 + 2336) - v134) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v134 = *(_QWORD *)(v41 + 2328);
    v126 = **v99;
  }
  v135 = *(_DWORD *)(v134 + (v133 << 11) + 1868);
  if (!v126)
  {
LABEL_282:
    if ((v135 & 0x10000000) != 0)
      v136 = 0x40000000;
    else
      v136 = 0x80000000;
    if ((v135 & 0x20000000) != 0)
      v135 = v136;
    else
      v135 &= 0xCFFFFFFF;
  }
LABEL_288:
  v268 = v125 >> 30;
  v287 = v131 >> 30;
  v290 = v128 >> 30;
  v278 = v135 >> 30;
  v351 = v326;
  v352 = v327;
  v353 = v328;
  v349 = v324;
  v350 = v325;
  if ((v306 & 0x40000000) != 0)
  {
    v381 = v326;
    v382 = v327;
    v383 = v328;
    v380 = v325;
    v379 = v324;
    *(_QWORD *)&v429 = 0xD0D0D0D0D0D0D0DLL;
    v374 = xmmword_224670640;
    v375 = xmmword_224670650;
    *(_QWORD *)&v424 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v379, 2, 1, 0, (uint64_t)&v429, (uint64_t)&v374, (uint64_t)&v424, COERCE_DOUBLE(0x4A0000000ALL), xmmword_224670650);
    if ((v308 & 0x40000000) == 0)
    {
      v376 = v326;
      v377 = v327;
      v378 = v328;
      v375 = v325;
      v374 = v324;
      *(_QWORD *)&v424 = 0xD0D0D0D0D0D0D0DLL;
      v429 = xmmword_224670660;
      v430 = xmmword_224670670;
      *(_QWORD *)&v419 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v374, 2, 1, 0, (uint64_t)&v424, (uint64_t)&v429, (uint64_t)&v419, COERCE_DOUBLE(0x4A0000000ALL), xmmword_224670670);
      if (((v302 | v296) & 1) == 0)
      {
        v431 = v326;
        v432 = v327;
        v433 = v328;
        v429 = v324;
        v430 = v325;
        *(_QWORD *)&v419 = 0xD0D0D0D0D0D0D0DLL;
        v424 = xmmword_224670680;
        v425 = xmmword_224670690;
        *(_QWORD *)&v414 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v429, 2, 1, 0, (uint64_t)&v419, (uint64_t)&v424, (uint64_t)&v414, COERCE_DOUBLE(0x4A0000000ALL), xmmword_224670690);
        v137 = (v271 & 1) == 0 && ((v299 | v293) & 1) == 0;
        if ((v273 & 1) == 0 && v137)
        {
          v426 = v326;
          v427 = v327;
          v428 = v328;
          v425 = v325;
          v424 = v324;
          *(_QWORD *)&v414 = 0xC0D0C0D0C0D0C0DLL;
          v419 = xmmword_2246706A0;
          v420 = xmmword_2246706B0;
          *(_QWORD *)&v409 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v424, 2, 1, 0, (uint64_t)&v414, (uint64_t)&v419, (uint64_t)&v409, COERCE_DOUBLE(0x1CA0000000ALL), xmmword_2246706B0);
        }
      }
      v138 = (v283 & 1) == 0 && ((v299 | v293) & 1) == 0;
      if (v138 && (v281 & 1) == 0)
      {
        v421 = v351;
        v422 = v352;
        v423 = v353;
        v420 = v350;
        v419 = v349;
        *(_QWORD *)&v409 = 0xC0D0C0D0C0D0C0DLL;
        v414 = xmmword_2246706C0;
        v415 = xmmword_2246706D0;
        *(_QWORD *)&v404 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v419, 2, 1, 0, (uint64_t)&v409, (uint64_t)&v414, (uint64_t)&v404, COERCE_DOUBLE(0x1CA0000000ALL), xmmword_2246706D0);
      }
    }
    if (((v296 | v290) & 1) == 0)
    {
      v416 = v351;
      v417 = v352;
      v418 = v353;
      v415 = v350;
      v414 = v349;
      *(_QWORD *)&v404 = 0xD0D0D0D0D0D0D0DLL;
      v409 = xmmword_2246706E0;
      v410 = xmmword_2246706F0;
      *(_QWORD *)&v399 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v414, 2, 1, 0, (uint64_t)&v404, (uint64_t)&v409, (uint64_t)&v399, COERCE_DOUBLE(0x4A0000000ALL), xmmword_2246706F0);
      v139 = (v125 & 0x40000000) == 0 && ((v293 | v287) & 1) == 0;
      if ((v271 & 1) == 0 && v139)
      {
        v411 = v351;
        v412 = v352;
        v413 = v353;
        v410 = v350;
        v409 = v349;
        *(_QWORD *)&v399 = 0xC0D0C0D0C0D0C0DLL;
        v404 = xmmword_224670700;
        v405 = xmmword_224670710;
        *(_QWORD *)&v394 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v409, 2, 1, 0, (uint64_t)&v399, (uint64_t)&v404, (uint64_t)&v394, COERCE_DOUBLE(0x1CA0000000ALL), xmmword_224670710);
      }
    }
    v140 = (v281 & 1) == 0 && ((v293 | v287) & 1) == 0;
    if (v140 && (v278 & 1) == 0)
    {
      v406 = v351;
      v407 = v352;
      v408 = v353;
      v405 = v350;
      v404 = v349;
      *(_QWORD *)&v394 = 0xC0D0C0D0C0D0C0DLL;
      v399 = xmmword_224670720;
      v400 = xmmword_224670730;
      *(_QWORD *)&v389 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v404, 2, 1, 0, (uint64_t)&v394, (uint64_t)&v399, (uint64_t)&v389, COERCE_DOUBLE(0x1CA0000000ALL), xmmword_224670730);
    }
  }
  v346 = v336;
  v347 = v337;
  v348 = v338;
  v344 = v334;
  v345 = v335;
  v141 = v42[12];
  if ((v141 & 0x80000000) != 0)
  {
    v143 = *(_DWORD *)(v41 + 2088);
    v144 = **v99;
    if (**v99)
      goto LABEL_327;
    goto LABEL_321;
  }
  v142 = *(_QWORD *)(v41 + 2328);
  if (v141 >= (*(_QWORD *)(v41 + 2336) - v142) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v142 = *(_QWORD *)(v41 + 2328);
  }
  v143 = *(_DWORD *)(v142 + (v141 << 11) + 1808);
  v144 = **v99;
  if (!**v99)
  {
LABEL_321:
    if ((v143 & 0x10000000) != 0)
      v145 = 0x40000000;
    else
      v145 = 0x80000000;
    if ((v143 & 0x20000000) != 0)
      v143 = v145;
    else
      v143 &= 0xCFFFFFFF;
  }
LABEL_327:
  v146 = v81[4];
  if (**v80)
  {
    v147 = v42[12];
    if ((v147 & 0x80000000) == 0)
      goto LABEL_329;
LABEL_651:
    v149 = *(_DWORD *)(v41 + 2120);
    if (v144)
      goto LABEL_339;
    goto LABEL_333;
  }
  if ((v146 & 0x10000000) != 0)
    v238 = 0x40000000;
  else
    v238 = 0x80000000;
  if ((v146 & 0x20000000) != 0)
    v146 = v238;
  else
    v146 &= 0xCFFFFFFF;
  v147 = v42[12];
  if ((v147 & 0x80000000) != 0)
    goto LABEL_651;
LABEL_329:
  v148 = *(_QWORD *)(v41 + 2328);
  if (v147 >= (*(_QWORD *)(v41 + 2336) - v148) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v148 = *(_QWORD *)(v41 + 2328);
    v144 = **v99;
  }
  v149 = *(_DWORD *)(v148 + (v147 << 11) + 1840);
  if (!v144)
  {
LABEL_333:
    if ((v149 & 0x10000000) != 0)
      v150 = 0x40000000;
    else
      v150 = 0x80000000;
    if ((v149 & 0x20000000) != 0)
      v149 = v150;
    else
      v149 &= 0xCFFFFFFF;
  }
LABEL_339:
  v309 = v81[12];
  if (**v80)
  {
    v151 = v42[12];
    if ((v151 & 0x80000000) == 0)
      goto LABEL_341;
LABEL_659:
    v153 = *(_DWORD *)(v41 + 2152);
    if (v144)
      goto LABEL_351;
    goto LABEL_345;
  }
  v239 = v309 & 0xCFFFFFFF;
  if ((v309 & 0x10000000) != 0)
    v240 = 0x40000000;
  else
    v240 = 0x80000000;
  if ((v309 & 0x20000000) != 0)
    v239 = v240;
  v309 = v239;
  v151 = v42[12];
  if ((v151 & 0x80000000) != 0)
    goto LABEL_659;
LABEL_341:
  v152 = *(_QWORD *)(v41 + 2328);
  if (v151 >= (*(_QWORD *)(v41 + 2336) - v152) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v152 = *(_QWORD *)(v41 + 2328);
    v144 = **v99;
  }
  v153 = *(_DWORD *)(v152 + (v151 << 11) + 1872);
  if (!v144)
  {
LABEL_345:
    if ((v153 & 0x10000000) != 0)
      v154 = 0x40000000;
    else
      v154 = 0x80000000;
    if ((v153 & 0x20000000) != 0)
      v153 = v154;
    else
      v153 &= 0xCFFFFFFF;
  }
LABEL_351:
  v274 = v143 >> 30;
  v300 = v149 >> 30;
  v303 = v146 >> 30;
  v284 = v153 >> 30;
  v361 = v336;
  v362 = v337;
  v363 = v338;
  v359 = v334;
  v360 = v335;
  if ((v312 & 0x40000000) != 0)
  {
    v381 = v336;
    v382 = v337;
    v383 = v338;
    v380 = v335;
    v379 = v334;
    *(_QWORD *)&v429 = 0xD0D0D0D0D0D0D0DLL;
    v374 = xmmword_224670740;
    v375 = xmmword_224670750;
    *(_QWORD *)&v424 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v379, 3, 1, 0, (uint64_t)&v429, (uint64_t)&v374, (uint64_t)&v424, COERCE_DOUBLE(0x4B0000000BLL), xmmword_224670750);
    if ((v306 & 0x40000000) == 0)
    {
      v376 = v336;
      v377 = v337;
      v378 = v338;
      v375 = v335;
      v374 = v334;
      *(_QWORD *)&v424 = 0xD0D0D0D0D0D0D0DLL;
      v429 = xmmword_224670760;
      v430 = xmmword_224670770;
      *(_QWORD *)&v419 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v374, 3, 1, 0, (uint64_t)&v424, (uint64_t)&v429, (uint64_t)&v419, COERCE_DOUBLE(0x4B0000000BLL), xmmword_224670770);
      if (((v296 | v290) & 1) == 0)
      {
        v431 = v336;
        v432 = v337;
        v433 = v338;
        v429 = v334;
        v430 = v335;
        *(_QWORD *)&v419 = 0xD0D0D0D0D0D0D0DLL;
        v424 = xmmword_224670780;
        v425 = xmmword_224670790;
        *(_QWORD *)&v414 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v429, 3, 1, 0, (uint64_t)&v419, (uint64_t)&v424, (uint64_t)&v414, COERCE_DOUBLE(0x4B0000000BLL), xmmword_224670790);
        v155 = (v268 & 1) == 0 && ((v293 | v287) & 1) == 0;
        if ((v271 & 1) == 0 && v155)
        {
          v426 = v336;
          v427 = v337;
          v428 = v338;
          v425 = v335;
          v424 = v334;
          *(_QWORD *)&v414 = 0xC0D0C0D0C0D0C0DLL;
          v419 = xmmword_2246707A0;
          v420 = xmmword_2246707B0;
          *(_QWORD *)&v409 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v424, 3, 1, 0, (uint64_t)&v414, (uint64_t)&v419, (uint64_t)&v409, COERCE_DOUBLE(0x1CB0000000BLL), xmmword_2246707B0);
        }
      }
      v156 = (v281 & 1) == 0 && ((v293 | v287) & 1) == 0;
      if (v156 && (v278 & 1) == 0)
      {
        v421 = v361;
        v422 = v362;
        v423 = v363;
        v420 = v360;
        v419 = v359;
        *(_QWORD *)&v409 = 0xC0D0C0D0C0D0C0DLL;
        v414 = xmmword_2246707C0;
        v415 = xmmword_2246707D0;
        *(_QWORD *)&v404 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v419, 3, 1, 0, (uint64_t)&v409, (uint64_t)&v414, (uint64_t)&v404, COERCE_DOUBLE(0x1CB0000000BLL), xmmword_2246707D0);
      }
    }
    if (((v290 | v303) & 1) == 0)
    {
      v416 = v361;
      v417 = v362;
      v418 = v363;
      v415 = v360;
      v414 = v359;
      *(_QWORD *)&v404 = 0xD0D0D0D0D0D0D0DLL;
      v409 = xmmword_2246707E0;
      v410 = xmmword_2246707F0;
      *(_QWORD *)&v399 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v414, 3, 1, 0, (uint64_t)&v404, (uint64_t)&v409, (uint64_t)&v399, COERCE_DOUBLE(0x4B0000000BLL), xmmword_2246707F0);
      v157 = (v143 & 0x40000000) == 0 && ((v287 | v300) & 1) == 0;
      if ((v268 & 1) == 0 && v157)
      {
        v411 = v361;
        v412 = v362;
        v413 = v363;
        v410 = v360;
        v409 = v359;
        *(_QWORD *)&v399 = 0xC0D0C0D0C0D0C0DLL;
        v404 = xmmword_224670800;
        v405 = xmmword_224670810;
        *(_QWORD *)&v394 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v409, 3, 1, 0, (uint64_t)&v399, (uint64_t)&v404, (uint64_t)&v394, COERCE_DOUBLE(0x1CB0000000BLL), xmmword_224670810);
      }
    }
    v158 = (v278 & 1) == 0 && ((v287 | v300) & 1) == 0;
    if (v158 && (v284 & 1) == 0)
    {
      v406 = v361;
      v407 = v362;
      v408 = v363;
      v405 = v360;
      v404 = v359;
      *(_QWORD *)&v394 = 0xC0D0C0D0C0D0C0DLL;
      v399 = xmmword_224670820;
      v400 = xmmword_224670830;
      *(_QWORD *)&v389 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v404, 3, 1, 0, (uint64_t)&v394, (uint64_t)&v399, (uint64_t)&v389, COERCE_DOUBLE(0x1CB0000000BLL), xmmword_224670830);
    }
  }
  v356 = v346;
  v357 = v347;
  v358 = v348;
  v354 = v344;
  v355 = v345;
  v159 = v42[12];
  if ((v159 & 0x80000000) != 0)
  {
    v161 = *(_DWORD *)(v41 + 2092);
    v162 = **v99;
    if (**v99)
      goto LABEL_390;
    goto LABEL_384;
  }
  v160 = *(_QWORD *)(v41 + 2328);
  if (v159 >= (*(_QWORD *)(v41 + 2336) - v160) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v160 = *(_QWORD *)(v41 + 2328);
  }
  v161 = *(_DWORD *)(v160 + (v159 << 11) + 1812);
  v162 = **v99;
  if (!**v99)
  {
LABEL_384:
    if ((v161 & 0x10000000) != 0)
      v163 = 0x40000000;
    else
      v163 = 0x80000000;
    if ((v161 & 0x20000000) != 0)
      v161 = v163;
    else
      v161 &= 0xCFFFFFFF;
  }
LABEL_390:
  v164 = v81[5];
  if (**v80)
  {
    v165 = v42[12];
    if ((v165 & 0x80000000) == 0)
      goto LABEL_392;
LABEL_670:
    v167 = *(_DWORD *)(v41 + 2124);
    if (v162)
      goto LABEL_402;
    goto LABEL_396;
  }
  if ((v164 & 0x10000000) != 0)
    v241 = 0x40000000;
  else
    v241 = 0x80000000;
  if ((v164 & 0x20000000) != 0)
    v164 = v241;
  else
    v164 &= 0xCFFFFFFF;
  v165 = v42[12];
  if ((v165 & 0x80000000) != 0)
    goto LABEL_670;
LABEL_392:
  v166 = *(_QWORD *)(v41 + 2328);
  if (v165 >= (*(_QWORD *)(v41 + 2336) - v166) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v166 = *(_QWORD *)(v41 + 2328);
    v162 = **v99;
  }
  v167 = *(_DWORD *)(v166 + (v165 << 11) + 1844);
  if (!v162)
  {
LABEL_396:
    if ((v167 & 0x10000000) != 0)
      v168 = 0x40000000;
    else
      v168 = 0x80000000;
    if ((v167 & 0x20000000) != 0)
      v167 = v168;
    else
      v167 &= 0xCFFFFFFF;
  }
LABEL_402:
  v307 = v81[13];
  if (**v80)
  {
    v169 = v42[12];
    if ((v169 & 0x80000000) == 0)
      goto LABEL_404;
LABEL_678:
    v171 = *(_DWORD *)(v41 + 2156);
    if (v162)
      goto LABEL_414;
    goto LABEL_408;
  }
  v242 = v307 & 0xCFFFFFFF;
  if ((v307 & 0x10000000) != 0)
    v243 = 0x40000000;
  else
    v243 = 0x80000000;
  if ((v307 & 0x20000000) != 0)
    v242 = v243;
  v307 = v242;
  v169 = v42[12];
  if ((v169 & 0x80000000) != 0)
    goto LABEL_678;
LABEL_404:
  v170 = *(_QWORD *)(v41 + 2328);
  if (v169 >= (*(_QWORD *)(v41 + 2336) - v170) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v170 = *(_QWORD *)(v41 + 2328);
    v162 = **v99;
  }
  v171 = *(_DWORD *)(v170 + (v169 << 11) + 1876);
  if (!v162)
  {
LABEL_408:
    if ((v171 & 0x10000000) != 0)
      v172 = 0x40000000;
    else
      v172 = 0x80000000;
    if ((v171 & 0x20000000) != 0)
      v171 = v172;
    else
      v171 &= 0xCFFFFFFF;
  }
LABEL_414:
  v272 = v161 >> 30;
  v294 = v167 >> 30;
  v297 = v164 >> 30;
  v282 = v171 >> 30;
  v371 = v346;
  v372 = v347;
  v373 = v348;
  v370 = v345;
  v369 = v344;
  if ((v309 & 0x40000000) != 0)
  {
    v381 = v346;
    v382 = v347;
    v383 = v348;
    v380 = v345;
    v379 = v344;
    *(_QWORD *)&v429 = 0xD0D0D0D0D0D0D0DLL;
    v374 = xmmword_224670840;
    v375 = xmmword_224670850;
    *(_QWORD *)&v424 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v379, 4, 1, 0, (uint64_t)&v429, (uint64_t)&v374, (uint64_t)&v424, COERCE_DOUBLE(0x4C0000000CLL), xmmword_224670850);
    if ((v312 & 0x40000000) == 0)
    {
      v376 = v346;
      v377 = v347;
      v378 = v348;
      v375 = v345;
      v374 = v344;
      *(_QWORD *)&v424 = 0xD0D0D0D0D0D0D0DLL;
      v429 = xmmword_224670860;
      v430 = xmmword_224670870;
      *(_QWORD *)&v419 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v374, 4, 1, 0, (uint64_t)&v424, (uint64_t)&v429, (uint64_t)&v419, COERCE_DOUBLE(0x4C0000000CLL), xmmword_224670870);
      if (((v290 | v303) & 1) == 0)
      {
        v431 = v346;
        v432 = v347;
        v433 = v348;
        v429 = v344;
        v430 = v345;
        *(_QWORD *)&v419 = 0xD0D0D0D0D0D0D0DLL;
        v424 = xmmword_224670880;
        v425 = xmmword_224670890;
        *(_QWORD *)&v414 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v429, 4, 1, 0, (uint64_t)&v419, (uint64_t)&v424, (uint64_t)&v414, COERCE_DOUBLE(0x4C0000000CLL), xmmword_224670890);
        v173 = (v274 & 1) == 0 && ((v287 | v300) & 1) == 0;
        if ((v268 & 1) == 0 && v173)
        {
          v426 = v346;
          v427 = v347;
          v428 = v348;
          v425 = v345;
          v424 = v344;
          *(_QWORD *)&v414 = 0xC0D0C0D0C0D0C0DLL;
          v419 = xmmword_2246708A0;
          v420 = xmmword_2246708B0;
          *(_QWORD *)&v409 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v424, 4, 1, 0, (uint64_t)&v414, (uint64_t)&v419, (uint64_t)&v409, COERCE_DOUBLE(0x1CC0000000CLL), xmmword_2246708B0);
        }
      }
      v174 = (v278 & 1) == 0 && ((v287 | v300) & 1) == 0;
      if (v174 && (v284 & 1) == 0)
      {
        v421 = v371;
        v422 = v372;
        v423 = v373;
        v420 = v370;
        v419 = v369;
        *(_QWORD *)&v409 = 0xC0D0C0D0C0D0C0DLL;
        v414 = xmmword_2246708C0;
        v415 = xmmword_2246708D0;
        *(_QWORD *)&v404 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v419, 4, 1, 0, (uint64_t)&v409, (uint64_t)&v414, (uint64_t)&v404, COERCE_DOUBLE(0x1CC0000000CLL), xmmword_2246708D0);
      }
    }
    if (((v303 | v297) & 1) == 0)
    {
      v416 = v371;
      v417 = v372;
      v418 = v373;
      v415 = v370;
      v414 = v369;
      *(_QWORD *)&v404 = 0xD0D0D0D0D0D0D0DLL;
      v409 = xmmword_2246708E0;
      v410 = xmmword_2246708F0;
      *(_QWORD *)&v399 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v414, 4, 1, 0, (uint64_t)&v404, (uint64_t)&v409, (uint64_t)&v399, COERCE_DOUBLE(0x4C0000000CLL), xmmword_2246708F0);
      v175 = (v161 & 0x40000000) == 0 && ((v300 | v294) & 1) == 0;
      if ((v274 & 1) == 0 && v175)
      {
        v411 = v371;
        v412 = v372;
        v413 = v373;
        v410 = v370;
        v409 = v369;
        *(_QWORD *)&v399 = 0xC0D0C0D0C0D0C0DLL;
        v404 = xmmword_224670900;
        v405 = xmmword_224670910;
        *(_QWORD *)&v394 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v409, 4, 1, 0, (uint64_t)&v399, (uint64_t)&v404, (uint64_t)&v394, COERCE_DOUBLE(0x1CC0000000CLL), xmmword_224670910);
      }
    }
    v176 = (v284 & 1) == 0 && ((v300 | v294) & 1) == 0;
    if (v176 && (v282 & 1) == 0)
    {
      v406 = v371;
      v407 = v372;
      v408 = v373;
      v405 = v370;
      v404 = v369;
      *(_QWORD *)&v394 = 0xC0D0C0D0C0D0C0DLL;
      v399 = xmmword_224670920;
      v400 = xmmword_224670930;
      *(_QWORD *)&v389 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v404, 4, 1, 0, (uint64_t)&v394, (uint64_t)&v399, (uint64_t)&v389, COERCE_DOUBLE(0x1CC0000000CLL), xmmword_224670930);
    }
  }
  v366 = v356;
  v367 = v357;
  v368 = v358;
  v364 = v354;
  v365 = v355;
  v177 = v42[12];
  if ((v177 & 0x80000000) != 0)
  {
    v179 = *(_DWORD *)(v41 + 2096);
    v180 = **v99;
    if (**v99)
      goto LABEL_453;
    goto LABEL_447;
  }
  v178 = *(_QWORD *)(v41 + 2328);
  if (v177 >= (*(_QWORD *)(v41 + 2336) - v178) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v178 = *(_QWORD *)(v41 + 2328);
  }
  v179 = *(_DWORD *)(v178 + (v177 << 11) + 1816);
  v180 = **v99;
  if (!**v99)
  {
LABEL_447:
    if ((v179 & 0x10000000) != 0)
      v181 = 0x40000000;
    else
      v181 = 0x80000000;
    if ((v179 & 0x20000000) != 0)
      v179 = v181;
    else
      v179 &= 0xCFFFFFFF;
  }
LABEL_453:
  v182 = v81[6];
  if (**v80)
  {
    v183 = v42[12];
    if ((v183 & 0x80000000) == 0)
      goto LABEL_455;
LABEL_689:
    v185 = *(_DWORD *)(v41 + 2128);
    if (v180)
      goto LABEL_465;
    goto LABEL_459;
  }
  if ((v182 & 0x10000000) != 0)
    v244 = 0x40000000;
  else
    v244 = 0x80000000;
  if ((v182 & 0x20000000) != 0)
    v182 = v244;
  else
    v182 &= 0xCFFFFFFF;
  v183 = v42[12];
  if ((v183 & 0x80000000) != 0)
    goto LABEL_689;
LABEL_455:
  v184 = *(_QWORD *)(v41 + 2328);
  if (v183 >= (*(_QWORD *)(v41 + 2336) - v184) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v184 = *(_QWORD *)(v41 + 2328);
    v180 = **v99;
  }
  v185 = *(_DWORD *)(v184 + (v183 << 11) + 1848);
  if (!v180)
  {
LABEL_459:
    if ((v185 & 0x10000000) != 0)
      v186 = 0x40000000;
    else
      v186 = 0x80000000;
    if ((v185 & 0x20000000) != 0)
      v185 = v186;
    else
      v185 &= 0xCFFFFFFF;
  }
LABEL_465:
  v313 = v81[14];
  if (**v80)
  {
    v187 = v42[12];
    if ((v187 & 0x80000000) == 0)
      goto LABEL_467;
LABEL_697:
    v189 = *(_DWORD *)(v41 + 2160);
    if (v180)
      goto LABEL_477;
    goto LABEL_471;
  }
  v245 = v313 & 0xCFFFFFFF;
  if ((v313 & 0x10000000) != 0)
    v246 = 0x40000000;
  else
    v246 = 0x80000000;
  if ((v313 & 0x20000000) != 0)
    v245 = v246;
  v313 = v245;
  v187 = v42[12];
  if ((v187 & 0x80000000) != 0)
    goto LABEL_697;
LABEL_467:
  v188 = *(_QWORD *)(v41 + 2328);
  if (v187 >= (*(_QWORD *)(v41 + 2336) - v188) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v188 = *(_QWORD *)(v41 + 2328);
    v180 = **v99;
  }
  v189 = *(_DWORD *)(v188 + (v187 << 11) + 1880);
  if (!v180)
  {
LABEL_471:
    if ((v189 & 0x10000000) != 0)
      v190 = 0x40000000;
    else
      v190 = 0x80000000;
    if ((v189 & 0x20000000) != 0)
      v189 = v190;
    else
      v189 &= 0xCFFFFFFF;
  }
LABEL_477:
  v269 = v179 >> 30;
  v288 = v185 >> 30;
  v291 = v182 >> 30;
  v279 = v189 >> 30;
  v391 = v356;
  v392 = v357;
  v393 = v358;
  v390 = v355;
  v389 = v354;
  if ((v307 & 0x40000000) != 0)
  {
    v381 = v356;
    v382 = v357;
    v383 = v358;
    v380 = v355;
    v379 = v354;
    *(_QWORD *)&v429 = 0xD0D0D0D0D0D0D0DLL;
    v374 = xmmword_224670940;
    v375 = xmmword_224670950;
    *(_QWORD *)&v424 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v379, 5, 1, 0, (uint64_t)&v429, (uint64_t)&v374, (uint64_t)&v424, COERCE_DOUBLE(0x4D0000000DLL), xmmword_224670950);
    if ((v309 & 0x40000000) == 0)
    {
      v376 = v356;
      v377 = v357;
      v378 = v358;
      v375 = v355;
      v374 = v354;
      *(_QWORD *)&v424 = 0xD0D0D0D0D0D0D0DLL;
      v429 = xmmword_224670960;
      v430 = xmmword_224670970;
      *(_QWORD *)&v419 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v374, 5, 1, 0, (uint64_t)&v424, (uint64_t)&v429, (uint64_t)&v419, COERCE_DOUBLE(0x4D0000000DLL), xmmword_224670970);
      if (((v303 | v297) & 1) == 0)
      {
        v431 = v356;
        v432 = v357;
        v433 = v358;
        v429 = v354;
        v430 = v355;
        *(_QWORD *)&v419 = 0xD0D0D0D0D0D0D0DLL;
        v424 = xmmword_224670980;
        v425 = xmmword_224670990;
        *(_QWORD *)&v414 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v429, 5, 1, 0, (uint64_t)&v419, (uint64_t)&v424, (uint64_t)&v414, COERCE_DOUBLE(0x4D0000000DLL), xmmword_224670990);
        v191 = (v272 & 1) == 0 && ((v300 | v294) & 1) == 0;
        if ((v274 & 1) == 0 && v191)
        {
          v426 = v356;
          v427 = v357;
          v428 = v358;
          v425 = v355;
          v424 = v354;
          *(_QWORD *)&v414 = 0xC0D0C0D0C0D0C0DLL;
          v419 = xmmword_2246709A0;
          v420 = xmmword_2246709B0;
          *(_QWORD *)&v409 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v424, 5, 1, 0, (uint64_t)&v414, (uint64_t)&v419, (uint64_t)&v409, COERCE_DOUBLE(0x1CD0000000DLL), xmmword_2246709B0);
        }
      }
      v192 = (v284 & 1) == 0 && ((v300 | v294) & 1) == 0;
      if (v192 && (v282 & 1) == 0)
      {
        v421 = v391;
        v422 = v392;
        v423 = v393;
        v420 = v390;
        v419 = v389;
        *(_QWORD *)&v409 = 0xC0D0C0D0C0D0C0DLL;
        v414 = xmmword_2246709C0;
        v415 = xmmword_2246709D0;
        *(_QWORD *)&v404 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v419, 5, 1, 0, (uint64_t)&v409, (uint64_t)&v414, (uint64_t)&v404, COERCE_DOUBLE(0x1CD0000000DLL), xmmword_2246709D0);
      }
    }
    if (((v297 | v291) & 1) == 0)
    {
      v416 = v391;
      v417 = v392;
      v418 = v393;
      v415 = v390;
      v414 = v389;
      *(_QWORD *)&v404 = 0xD0D0D0D0D0D0D0DLL;
      v409 = xmmword_2246709E0;
      v410 = xmmword_2246709F0;
      *(_QWORD *)&v399 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v414, 5, 1, 0, (uint64_t)&v404, (uint64_t)&v409, (uint64_t)&v399, COERCE_DOUBLE(0x4D0000000DLL), xmmword_2246709F0);
      v193 = (v179 & 0x40000000) == 0 && ((v294 | v288) & 1) == 0;
      if ((v272 & 1) == 0 && v193)
      {
        v411 = v391;
        v412 = v392;
        v413 = v393;
        v410 = v390;
        v409 = v389;
        *(_QWORD *)&v399 = 0xC0D0C0D0C0D0C0DLL;
        v404 = xmmword_224670A00;
        v405 = xmmword_224670A10;
        *(_QWORD *)&v394 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v409, 5, 1, 0, (uint64_t)&v399, (uint64_t)&v404, (uint64_t)&v394, COERCE_DOUBLE(0x1CD0000000DLL), xmmword_224670A10);
      }
    }
    v194 = (v282 & 1) == 0 && ((v294 | v288) & 1) == 0;
    if (v194 && (v279 & 1) == 0)
    {
      v406 = v391;
      v407 = v392;
      v408 = v393;
      v405 = v390;
      v404 = v389;
      *(_QWORD *)&v394 = 0xC0D0C0D0C0D0C0DLL;
      v399 = xmmword_224670A20;
      v400 = xmmword_224670A30;
      *(_QWORD *)&v384 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v404, 5, 1, 0, (uint64_t)&v394, (uint64_t)&v399, (uint64_t)&v384, COERCE_DOUBLE(0x1CD0000000DLL), xmmword_224670A30);
    }
  }
  v386 = v366;
  v387 = v367;
  v388 = v368;
  v385 = v365;
  v384 = v364;
  v195 = v42[12];
  if ((v195 & 0x80000000) != 0)
  {
    v197 = *(_DWORD *)(v41 + 2100);
    v198 = **v99;
    if (**v99)
      goto LABEL_516;
    goto LABEL_510;
  }
  v196 = *(_QWORD *)(v41 + 2328);
  if (v195 >= (*(_QWORD *)(v41 + 2336) - v196) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v196 = *(_QWORD *)(v41 + 2328);
  }
  v197 = *(_DWORD *)(v196 + (v195 << 11) + 1820);
  v198 = **v99;
  if (!**v99)
  {
LABEL_510:
    if ((v197 & 0x10000000) != 0)
      v199 = 0x40000000;
    else
      v199 = 0x80000000;
    if ((v197 & 0x20000000) != 0)
      v197 = v199;
    else
      v197 &= 0xCFFFFFFF;
  }
LABEL_516:
  v200 = v81[7];
  if (**v80)
  {
    v201 = v42[12];
    if ((v201 & 0x80000000) == 0)
      goto LABEL_518;
LABEL_708:
    v203 = *(_DWORD *)(v41 + 2132);
    if (v198)
      goto LABEL_528;
    goto LABEL_522;
  }
  if ((v200 & 0x10000000) != 0)
    v247 = 0x40000000;
  else
    v247 = 0x80000000;
  if ((v200 & 0x20000000) != 0)
    v200 = v247;
  else
    v200 &= 0xCFFFFFFF;
  v201 = v42[12];
  if ((v201 & 0x80000000) != 0)
    goto LABEL_708;
LABEL_518:
  v202 = *(_QWORD *)(v41 + 2328);
  if (v201 >= (*(_QWORD *)(v41 + 2336) - v202) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v202 = *(_QWORD *)(v41 + 2328);
    v198 = **v99;
  }
  v203 = *(_DWORD *)(v202 + (v201 << 11) + 1852);
  if (!v198)
  {
LABEL_522:
    if ((v203 & 0x10000000) != 0)
      v204 = 0x40000000;
    else
      v204 = 0x80000000;
    if ((v203 & 0x20000000) != 0)
      v203 = v204;
    else
      v203 &= 0xCFFFFFFF;
  }
LABEL_528:
  v205 = v81[15];
  if (**v80)
  {
    v206 = v42[12];
    if ((v206 & 0x80000000) == 0)
      goto LABEL_530;
LABEL_717:
    v208 = *(_DWORD *)(v41 + 2164);
    if (v198)
      goto LABEL_540;
    goto LABEL_534;
  }
  if ((v205 & 0x10000000) != 0)
    v248 = 0x40000000;
  else
    v248 = 0x80000000;
  if ((v205 & 0x20000000) != 0)
    v205 = v248;
  else
    v205 &= 0xCFFFFFFF;
  v206 = v42[12];
  if ((v206 & 0x80000000) != 0)
    goto LABEL_717;
LABEL_530:
  v207 = *(_QWORD *)(v41 + 2328);
  if (v206 >= (*(_QWORD *)(v41 + 2336) - v207) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v207 = *(_QWORD *)(v41 + 2328);
    v198 = **v99;
  }
  v208 = *(_DWORD *)(v207 + (v206 << 11) + 1884);
  if (!v198)
  {
LABEL_534:
    if ((v208 & 0x10000000) != 0)
      v209 = 0x40000000;
    else
      v209 = 0x80000000;
    if ((v208 & 0x20000000) != 0)
      v208 = v209;
    else
      v208 &= 0xCFFFFFFF;
  }
LABEL_540:
  v304 = v197 >> 30;
  v310 = v200 >> 30;
  v210 = v203 >> 30;
  v211 = v208 >> 30;
  v396 = v366;
  v397 = v367;
  v398 = v368;
  v395 = v365;
  v394 = v364;
  if ((v313 & 0x40000000) != 0)
  {
    v381 = v366;
    v382 = v367;
    v383 = v368;
    v380 = v365;
    v379 = v364;
    *(_QWORD *)&v429 = 0xD0D0D0D0D0D0D0DLL;
    v374 = xmmword_224670A40;
    v375 = xmmword_224670A50;
    *(_QWORD *)&v424 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v379, 6, 1, 0, (uint64_t)&v429, (uint64_t)&v374, (uint64_t)&v424, COERCE_DOUBLE(0x4E0000000ELL), xmmword_224670A50);
    if ((v307 & 0x40000000) == 0)
    {
      v376 = v366;
      v377 = v367;
      v378 = v368;
      v375 = v365;
      v374 = v364;
      *(_QWORD *)&v424 = 0xD0D0D0D0D0D0D0DLL;
      v429 = xmmword_224670A60;
      v430 = xmmword_224670A70;
      *(_QWORD *)&v419 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v374, 6, 1, 0, (uint64_t)&v424, (uint64_t)&v429, (uint64_t)&v419, COERCE_DOUBLE(0x4E0000000ELL), xmmword_224670A70);
      if (((v297 | v291) & 1) == 0)
      {
        v431 = v366;
        v432 = v367;
        v433 = v368;
        v429 = v364;
        v430 = v365;
        *(_QWORD *)&v419 = 0xD0D0D0D0D0D0D0DLL;
        v424 = xmmword_224670A80;
        v425 = xmmword_224670A90;
        *(_QWORD *)&v414 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v429, 6, 1, 0, (uint64_t)&v419, (uint64_t)&v424, (uint64_t)&v414, COERCE_DOUBLE(0x4E0000000ELL), xmmword_224670A90);
        v212 = (v269 & 1) == 0 && ((v294 | v288) & 1) == 0;
        if ((v272 & 1) == 0 && v212)
        {
          v426 = v366;
          v427 = v367;
          v428 = v368;
          v425 = v365;
          v424 = v364;
          *(_QWORD *)&v414 = 0xC0D0C0D0C0D0C0DLL;
          v419 = xmmword_224670AA0;
          v420 = xmmword_224670AB0;
          *(_QWORD *)&v409 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v424, 6, 1, 0, (uint64_t)&v414, (uint64_t)&v419, (uint64_t)&v409, COERCE_DOUBLE(0x1CE0000000ELL), xmmword_224670AB0);
        }
      }
      v213 = (v282 & 1) == 0 && ((v294 | v288) & 1) == 0;
      if (v213 && (v279 & 1) == 0)
      {
        v421 = v396;
        v422 = v397;
        v423 = v398;
        v420 = v395;
        v419 = v394;
        *(_QWORD *)&v409 = 0xC0D0C0D0C0D0C0DLL;
        v414 = xmmword_224670AC0;
        v415 = xmmword_224670AD0;
        *(_QWORD *)&v404 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v419, 6, 1, 0, (uint64_t)&v409, (uint64_t)&v414, (uint64_t)&v404, COERCE_DOUBLE(0x1CE0000000ELL), xmmword_224670AD0);
      }
    }
    if (((v291 | v310) & 1) == 0)
    {
      v416 = v396;
      v417 = v397;
      v418 = v398;
      v415 = v395;
      v414 = v394;
      *(_QWORD *)&v404 = 0xD0D0D0D0D0D0D0DLL;
      v409 = xmmword_224670AE0;
      v410 = xmmword_224670AF0;
      *(_QWORD *)&v399 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v414, 6, 1, 0, (uint64_t)&v404, (uint64_t)&v409, (uint64_t)&v399, COERCE_DOUBLE(0x4E0000000ELL), xmmword_224670AF0);
      v214 = (v304 & 1) == 0 && ((v288 | v210) & 1) == 0;
      if ((v269 & 1) == 0 && v214)
      {
        v411 = v396;
        v412 = v397;
        v413 = v398;
        v410 = v395;
        v409 = v394;
        *(_QWORD *)&v399 = 0xC0D0C0D0C0D0C0DLL;
        v404 = xmmword_224670B00;
        v405 = xmmword_224670B10;
        *(_QWORD *)&v435[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v409, 6, 1, 0, (uint64_t)&v399, (uint64_t)&v404, (uint64_t)v435, COERCE_DOUBLE(0x1CE0000000ELL), xmmword_224670B10);
      }
    }
    v215 = (v279 & 1) == 0 && ((v288 | v210) & 1) == 0;
    if (v215 && (v211 & 1) == 0)
    {
      v406 = v396;
      v407 = v397;
      v408 = v398;
      v405 = v395;
      v404 = v394;
      *(_QWORD *)&v435[0] = 0xC0D0C0D0C0D0C0DLL;
      v399 = xmmword_224670B20;
      v400 = xmmword_224670B30;
      v436[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v404, 6, 1, 0, (uint64_t)v435, (uint64_t)&v399, (uint64_t)v436, COERCE_DOUBLE(0x1CE0000000ELL), xmmword_224670B30);
    }
  }
  v216 = v42[21];
  if ((v216 & 0x80000000) != 0)
  {
    v219 = *v99;
    v220 = *(_DWORD *)(v41 + 2072);
    v221 = **v99;
    if (**v99)
      goto LABEL_573;
  }
  else
  {
    v217 = *(_QWORD *)(v41 + 2328);
    if (v216 >= (*(_QWORD *)(v41 + 2336) - v217) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v217 = *(_QWORD *)(v41 + 2328);
    }
    v218 = v217 + (v216 << 11);
    v219 = *v99;
    v220 = *(_DWORD *)(v218 + 1792);
    v221 = **v99;
    if (**v99)
    {
LABEL_573:
      v222 = v42[22];
      if ((v222 & 0x80000000) == 0)
        goto LABEL_574;
LABEL_727:
      v224 = *(_DWORD *)(v41 + 280);
      if (v221)
        goto LABEL_578;
      goto LABEL_728;
    }
  }
  if ((v220 & 0x10000000) != 0)
    v249 = 0x40000000;
  else
    v249 = 0x80000000;
  if ((v220 & 0x20000000) != 0)
    v220 = v249;
  else
    v220 &= 0xCFFFFFFF;
  v222 = v42[22];
  if ((v222 & 0x80000000) != 0)
    goto LABEL_727;
LABEL_574:
  v223 = *(_QWORD *)(v41 + 2328);
  if (v222 >= (*(_QWORD *)(v41 + 2336) - v223) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v223 = *(_QWORD *)(v41 + 2328);
    v219 = *v99;
    v221 = **v99;
  }
  v224 = *(_DWORD *)(v223 + (v222 << 11));
  if (v221)
  {
LABEL_578:
    v225 = v42[21];
    if ((v225 & 0x80000000) == 0)
      goto LABEL_579;
LABEL_735:
    v227 = *(_DWORD *)(v41 + 2104);
    if (v221)
      goto LABEL_583;
LABEL_736:
    if ((v227 & 0x10000000) != 0)
      v251 = 0x40000000;
    else
      v251 = 0x80000000;
    if ((v227 & 0x20000000) != 0)
      v227 = v251;
    else
      v227 &= 0xCFFFFFFF;
    v228 = v42[22];
    if ((v228 & 0x80000000) != 0)
      goto LABEL_746;
    goto LABEL_743;
  }
LABEL_728:
  if ((v224 & 0x10000000) != 0)
    v250 = 0x40000000;
  else
    v250 = 0x80000000;
  if ((v224 & 0x20000000) != 0)
    v224 = v250;
  else
    v224 &= 0xCFFFFFFF;
  v225 = v42[21];
  if ((v225 & 0x80000000) != 0)
    goto LABEL_735;
LABEL_579:
  v226 = *(_QWORD *)(v41 + 2328);
  if (v225 >= (*(_QWORD *)(v41 + 2336) - v226) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v226 = *(_QWORD *)(v41 + 2328);
    v219 = *v99;
    v221 = **v99;
  }
  v227 = *(_DWORD *)(v226 + (v225 << 11) + 1824);
  if (!v221)
    goto LABEL_736;
LABEL_583:
  v228 = v42[22];
  if ((v228 & 0x80000000) != 0)
    goto LABEL_746;
LABEL_743:
  if (v228 >= (uint64_t)(*(_QWORD *)(v41 + 2336) - *(_QWORD *)(v41 + 2328)) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v219 = *v99;
  }
LABEL_746:
  v252 = v42[21];
  if ((v252 & 0x80000000) != 0)
  {
    v254 = *(_DWORD *)(v41 + 2136);
    if (*v219)
      goto LABEL_757;
    goto LABEL_751;
  }
  v253 = *(_QWORD *)(v41 + 2328);
  if (v252 >= (*(_QWORD *)(v41 + 2336) - v253) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v253 = *(_QWORD *)(v41 + 2328);
    v219 = *v99;
  }
  v254 = *(_DWORD *)(v253 + (v252 << 11) + 1856);
  if (!*v219)
  {
LABEL_751:
    if ((v254 & 0x10000000) != 0)
      v255 = 0x40000000;
    else
      v255 = 0x80000000;
    if ((v254 & 0x20000000) != 0)
      v254 = v255;
    else
      v254 &= 0xCFFFFFFF;
  }
LABEL_757:
  v401 = v386;
  v402 = v387;
  v403 = v388;
  v400 = v385;
  v399 = v384;
  if ((v205 & 0x40000000) != 0)
  {
    v381 = v386;
    v382 = v387;
    v383 = v388;
    *(_QWORD *)&v429 = 0x161616160D0D0D0DLL;
    v380 = v385;
    v379 = v384;
    v374 = xmmword_224670B40;
    v375 = xmmword_224670B50;
    *(_QWORD *)&v424 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v379, 7, 1, 0, (uint64_t)&v429, (uint64_t)&v374, (uint64_t)&v424, COERCE_DOUBLE(0x4F0000000FLL), xmmword_224670B50);
    if ((v313 & 0x40000000) == 0)
    {
      v376 = v386;
      v377 = v387;
      v378 = v388;
      v375 = v385;
      v374 = v384;
      *(_QWORD *)&v424 = 0xD0D0D0D0D0D0D0DLL;
      v429 = xmmword_224670B60;
      v430 = xmmword_224670B70;
      *(_QWORD *)&v419 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v374, 7, 1, 0, (uint64_t)&v424, (uint64_t)&v429, (uint64_t)&v419, COERCE_DOUBLE(0x4F0000000FLL), xmmword_224670B70);
      if (((v291 | v310) & 1) == 0)
      {
        v431 = v386;
        v432 = v387;
        v433 = v388;
        v429 = v384;
        v430 = v385;
        *(_QWORD *)&v419 = 0xD0D0D0D0D0D0D0DLL;
        v424 = xmmword_224670B80;
        v425 = xmmword_224670B90;
        *(_QWORD *)&v414 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v429, 7, 1, 0, (uint64_t)&v419, (uint64_t)&v424, (uint64_t)&v414, COERCE_DOUBLE(0x4F0000000FLL), xmmword_224670B90);
        v256 = (v304 & 1) == 0 && ((v288 | v210) & 1) == 0;
        if ((v269 & 1) == 0 && v256)
        {
          v426 = v386;
          v427 = v387;
          v428 = v388;
          v425 = v385;
          v424 = v384;
          *(_QWORD *)&v414 = 0xC0D0C0D0C0D0C0DLL;
          v419 = xmmword_224670BA0;
          v420 = xmmword_224670BB0;
          *(_QWORD *)&v409 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v424, 7, 1, 0, (uint64_t)&v414, (uint64_t)&v419, (uint64_t)&v409, COERCE_DOUBLE(0x1CF0000000FLL), xmmword_224670BB0);
        }
      }
      v257 = (v279 & 1) == 0 && ((v288 | v210) & 1) == 0;
      if (v257 && (v211 & 1) == 0)
      {
        v421 = v401;
        v422 = v402;
        v423 = v403;
        v420 = v400;
        v419 = v399;
        *(_QWORD *)&v409 = 0xC0D0C0D0C0D0C0DLL;
        v414 = xmmword_224670BC0;
        v415 = xmmword_224670BD0;
        *(_QWORD *)&v404 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v419, 7, 1, 0, (uint64_t)&v409, (uint64_t)&v414, (uint64_t)&v404, COERCE_DOUBLE(0x1CF0000000FLL), xmmword_224670BD0);
      }
    }
    if (!(v224 & 0x40000000 | v310 & 1))
    {
      v416 = v401;
      v417 = v402;
      v418 = v403;
      *(_QWORD *)&v404 = 0x16160D0D16160D0DLL;
      v415 = v400;
      v414 = v399;
      v409 = xmmword_224670BE0;
      v410 = xmmword_224670BF0;
      *(_QWORD *)&v435[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v414, 7, 1, 0, (uint64_t)&v404, (uint64_t)&v409, (uint64_t)v435, COERCE_DOUBLE(0x4F0000000FLL), xmmword_224670BF0);
      v258 = (v220 & 0x40000000) == 0 && (v227 & 0x40000000 | v210 & 1) == 0;
      if ((v304 & 1) == 0 && v258)
      {
        v411 = v401;
        v412 = v402;
        v413 = v403;
        v410 = v400;
        v409 = v399;
        *(_QWORD *)&v435[0] = 0x151615160C0D0C0DLL;
        v404 = xmmword_224670C00;
        v405 = xmmword_224670C10;
        v436[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v409, 7, 1, 0, (uint64_t)v435, (uint64_t)&v404, (uint64_t)v436, COERCE_DOUBLE(0x1CF0000000FLL), xmmword_224670C10);
      }
    }
    v259 = (v211 & 1) == 0 && (v227 & 0x40000000 | v210 & 1) == 0;
    if (v259 && (v254 & 0x40000000) == 0)
    {
      v406 = v401;
      v407 = v402;
      v408 = v403;
      v436[0] = 0x15160C0D15160C0DLL;
      v405 = v400;
      v404 = v399;
      v435[0] = xmmword_224670C20;
      v435[1] = xmmword_224670C30;
      v434 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v404, 7, 1, 0, (uint64_t)v436, (uint64_t)v435, (uint64_t)&v434, COERCE_DOUBLE(0x1CF0000000FLL), xmmword_224670C30);
    }
  }
  v260 = *v275;
  v318 = *((_QWORD *)v275 + 2);
  v317 = v260;
  v261 = *(_OWORD *)v276;
  v316 = v276[2];
  v262 = *v285;
  v263 = v285[1];
  v314[4] = v285[4];
  v315 = v261;
  v264 = v285[3];
  v314[2] = v285[2];
  v314[3] = v264;
  v314[0] = v262;
  v314[1] = v263;
  return sub_223D93C60((uint64_t)&v317, (uint64_t *)&v315, v314);
}

unint64_t sub_223D91438(unint64_t result, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, float32x4_t a9)
{
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  char *v13;
  int v14;
  float32x4_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int32 *v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  float32x4_t v40;
  uint64_t v41;
  _DWORD *v42;
  unsigned __int8 **v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 *v61;
  unint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  int v67;
  float32x4_t v68;
  int v69;
  float32x4_t v70;
  unsigned __int8 *v71;
  unsigned __int8 *v72;
  uint64_t v73;
  unsigned int v74;
  int v75;
  int v76;
  _DWORD *v77;
  uint64_t v78;
  _DWORD *v79;
  uint64_t v80;
  _DWORD *v81;
  uint64_t v82;
  _DWORD *v83;
  int v84;
  unsigned __int8 *v85;
  unsigned int v86;
  unsigned __int8 *v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned __int8 *v91;
  unsigned int v92;
  unsigned __int8 *v93;
  unsigned int v94;
  BOOL v95;
  int v96;
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  unsigned int v100;
  uint64_t v101;
  unsigned int v102;
  uint64_t v103;
  unsigned int v104;
  uint64_t v105;
  unsigned int v106;
  uint64_t v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 *v115;
  uint64_t v116;
  _DWORD *v117;
  uint64_t v118;
  _DWORD *v119;
  int v120;
  int v121;
  uint64_t v122;
  _DWORD *v123;
  int v124;
  int v125;
  uint64_t v126;
  _DWORD *v127;
  int v128;
  uint64_t v129;
  _DWORD *v130;
  int v131;
  int v132;
  uint64_t v133;
  _DWORD *v134;
  int v135;
  int v136;
  uint64_t v137;
  _DWORD *v138;
  uint64_t v139;
  int v140;
  int v141;
  uint64_t v142;
  _DWORD *v143;
  uint64_t v144;
  int v145;
  int v146;
  unsigned int v147;
  int v148;
  unsigned __int8 *v149;
  unsigned __int8 *v150;
  uint64_t v151;
  unsigned int v152;
  int v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  int v161;
  unsigned __int8 *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unsigned __int8 *v166;
  uint64_t v167;
  unsigned __int8 *v168;
  unsigned int v169;
  BOOL v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 *v187;
  uint64_t v188;
  _DWORD *v189;
  int v191;
  float32x4_t v192;
  float32x4_t v193;
  float32x4_t v194;
  _DWORD v195[3];
  uint64_t v196;
  __int32 v197;
  unint64_t v198;
  unsigned __int32 v199;
  unint64_t v200;
  unsigned __int32 v201;
  unint64_t v202;
  unsigned __int32 v203;
  unint64_t v204;
  unsigned __int32 v205;
  unint64_t v206;
  unsigned __int32 v207;
  unint64_t v208;
  unsigned __int32 v209;
  uint64_t v210;
  float32x4_t v211;
  uint64_t v212;
  int32x2_t *v213;
  uint64_t v214;
  uint64_t v215;
  int32x2_t v216;
  int v217;
  uint64_t v218;
  __int32 v219;
  uint64_t v220;
  __int32 v221;
  uint64_t v222;
  __int32 v223;
  uint64_t v224;
  __int32 v225;
  uint64_t v226;
  __int32 v227;
  uint64_t v228;
  __int32 v229;
  uint64_t v230;
  __int32 v231;
  uint64_t v232;
  __int32 v233;
  float32x4_t v234[3];
  uint64_t v235;
  __int32 v236;
  _BYTE v237[18];
  char v238;
  char v239;
  char v240;
  char v241;
  char v242;
  char v243;
  _BYTE v244[8];
  _BYTE v245[8];
  uint64_t v246;

  v9 = result;
  v246 = *MEMORY[0x24BDAC8D0];
  v10 = *(_QWORD *)(result + 8);
  v11 = **(_DWORD **)result + a2;
  v12 = *(_DWORD *)(*(_QWORD *)result + 4) + a3;
  v13 = byte_22466FA9C;
  v14 = *(_DWORD *)(*(_QWORD *)result + 8) + a4;
  v15 = *(float32x4_t *)(result + 16);
  v211 = v15;
  v16 = v15.i64[0];
  v188 = v15.i64[0] + 280;
  v216 = (int32x2_t)__PAIR64__(v12, v11);
  v217 = v14;
  v210 = v10;
  v212 = a5;
  v213 = &v216;
  v214 = a7;
  v215 = a6;
  do
  {
    v19 = *v13;
    v20 = v188;
    v21 = *(unsigned int *)(*(_QWORD *)(v9 + 24) + 4 * *(unsigned __int8 *)(a5 + v19));
    if ((v21 & 0x80000000) == 0)
    {
      v22 = *(_QWORD *)(v16 + 2328);
      if (v21 >= (*(_QWORD *)(v16 + 2336) - v22) >> 11)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C);
        if ((result & 1) != 0)
          abort();
        v22 = *(_QWORD *)(v16 + 2328);
      }
      v20 = v22 + (v21 << 11);
    }
    v23 = *(unsigned int *)(a6 + 4 * v19);
    if (v23 >= 0x200)
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.h", 499, (uint64_t)"index < voxel_block.size()", 26, (uint64_t)"Invalid grid index", 18, (void (*)(void **))sub_22457406C);
      if ((_DWORD)result)
        abort();
    }
    v24 = (char *)&unk_22466FAC0 + 12 * *(unsigned __int8 *)(a7 + v19);
    v25 = *((_DWORD *)v24 + 2);
    v15.i64[0] = *(_QWORD *)v24;
    a9.i32[1] = v216.i32[1];
    v26 = *(_QWORD *)(v9 + 32);
    v28 = *(_BYTE **)v26;
    v27 = *(_QWORD *)(v26 + 8);
    v29 = *(_DWORD *)(v20 + 4 * v23);
    if (*v28)
    {
      if (v29 >> 30)
        goto LABEL_22;
    }
    else if ((v29 & 0x20000000) != 0 || (v29 &= 0xCFFFFFFF, v29 >> 30))
    {
LABEL_22:
      *(float32x2_t *)v15.f32 = vcvt_f32_s32(vadd_s32(v216, *(int32x2_t *)v15.f32));
      v15.f32[2] = (float)(v217 + v25);
      v40.i64[0] = 0x3F0000003F000000;
      v40.i64[1] = 0x3F0000003F000000;
      v15 = vmulq_n_f32(vaddq_f32(v15, v40), *(float *)(v27 + 144));
      goto LABEL_24;
    }
    v30 = v29 & 0xCFFFFFFF;
    v31 = *(_QWORD *)(v27 + 2448);
    v32 = v31 + 520 * (v29 & 0xCFFFFFFF);
    if (!*(_DWORD *)(v32 + 4))
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/src/PointCloudBlock.cpp", 124, (uint64_t)"points_.Count() > 0", 19, (uint64_t)"No points in block to compute mean", 34, (void (*)(void **))sub_22457406C);
      if ((_DWORD)result)
        abort();
    }
    v33 = v31 + 520 * v30;
    if (*(_BYTE *)(v33 + 320))
    {
      *(_BYTE *)(v33 + 320) = 0;
      v34 = v31 + 520 * v30;
      v35 = v34 + 324;
      *(_QWORD *)(v34 + 328) = 0;
      *(_DWORD *)(v34 + 324) = 0;
      v36 = (__int32 *)(v34 + 332);
      v37 = *(_DWORD *)(v32 + 4);
      v15.i64[0] = *(_QWORD *)v35;
      v15.i32[2] = *v36;
      if (v37)
      {
        v38 = v32 + 12;
        v39 = *(unsigned int *)(v32 + 4);
        do
        {
          a9.i64[0] = *(_QWORD *)v38;
          a9.i32[2] = *(_DWORD *)(v38 + 8);
          v15 = vaddq_f32(v15, a9);
          *(_DWORD *)(v35 + 8) = v15.i32[2];
          *(_QWORD *)v35 = v15.i64[0];
          v38 += 28;
          --v39;
        }
        while (v39);
      }
      a9.f32[0] = (float)v37;
      a9 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a9.f32, 0);
      v15 = vdivq_f32(v15, a9);
      *(_DWORD *)(v35 + 8) = v15.i32[2];
      *(_QWORD *)v35 = v15.i64[0];
    }
    else
    {
      v41 = v31 + 520 * v30;
      v15.i64[0] = *(_QWORD *)(v41 + 324);
      v15.i32[2] = *(_DWORD *)(v41 + 332);
    }
LABEL_24:
    v42 = &v195[3 * v19];
    *(_QWORD *)v42 = v15.i64[0];
    v42[2] = v15.i32[2];
    v43 = *(unsigned __int8 ***)(v9 + 48);
    v44 = *(_DWORD *)(v20 + 4 * v23);
    v45 = v44 & 0xCFFFFFFF;
    if ((v44 & 0x10000000) != 0)
      v46 = 0x40000000;
    else
      v46 = 0x80000000;
    if ((v44 & 0x20000000) != 0)
      v45 = v46;
    if (***(_BYTE ***)(v9 + 40))
      v47 = *(_DWORD *)(v20 + 4 * v23);
    else
      v47 = v45;
    v48 = (v47 >> 30) & 1;
    v237[v19 + 16] = (v47 & 0x40000000) != 0;
    v49 = *(_DWORD *)(v20 + 4 * v23);
    v50 = **v43;
    v51 = v49 & 0xCFFFFFFF;
    if ((v49 & 0x10000000) != 0)
      v52 = 0x40000000;
    else
      v52 = 0x80000000;
    if ((v49 & 0x20000000) != 0)
      v51 = v52;
    if (!v50)
      v49 = v51;
    v237[v19 + 8] = v49 < 0;
    if (v48)
    {
      v18 = 0;
      goto LABEL_3;
    }
    if (v49 < 0)
    {
LABEL_53:
      v18 = 1;
      goto LABEL_3;
    }
    v53 = *(_QWORD *)(v9 + 56);
    v55 = *(_BYTE **)v53;
    v54 = *(_QWORD *)(v53 + 8);
    v56 = *(_DWORD *)(v20 + 4 * v23);
    if (*v55)
    {
      if (v56 >> 30)
        goto LABEL_53;
    }
    else
    {
      if ((v56 & 0x20000000) != 0)
        goto LABEL_53;
      v56 &= 0xCFFFFFFF;
      if (v56 >> 30)
        goto LABEL_53;
    }
    v57 = v56 & 0xCFFFFFFF;
    v58 = *(_QWORD *)(v54 + 2448);
    v59 = v58 + 520 * (v56 & 0xCFFFFFFF);
    if (*(_BYTE *)(v59 + 336))
    {
      *(_BYTE *)(v59 + 336) = 0;
      v60 = *(unsigned int *)(v59 + 4);
      if ((_DWORD)v60)
      {
        result = 0;
        v61 = (unsigned __int8 *)(v58 + 520 * v57 + 36);
        do
        {
          result = sub_223A4EC9C(result, ((unint64_t)*v61 << 8) | 1, 0xFFu);
          v61 += 28;
          --v60;
        }
        while (v60);
        v62 = result >> 8;
        if (!(_BYTE)result)
          LOBYTE(v62) = -1;
        *(_BYTE *)(v58 + 520 * v57 + 338) = v62;
        if (v62 <= 0x29u)
        {
LABEL_55:
          v63 = byte_224693ECF[v62] != 0;
          goto LABEL_56;
        }
      }
      else
      {
        *(_BYTE *)(v58 + 520 * v57 + 338) = -1;
      }
    }
    else
    {
      LOBYTE(v62) = *(_BYTE *)(v58 + 520 * v57 + 338);
      if (v62 <= 0x29u)
        goto LABEL_55;
    }
    v63 = 0;
LABEL_56:
    v18 = !v63;
LABEL_3:
    v237[v19] = v18;
    ++v13;
  }
  while (v13 != &byte_22466FAA4);
  v189 = *(_DWORD **)(v9 + 8);
  v64 = *(_QWORD *)(v9 + 64);
  v65 = *(_QWORD *)(v9 + 72);
  v192.i64[0] = (uint64_t)&v210;
  v192.i64[1] = v64;
  v193.i64[0] = *(_QWORD *)(v9 + 48);
  v193.i64[1] = (uint64_t)v195;
  v194.i64[0] = v65;
  v194.i64[1] = (uint64_t)&v216;
  if (v237[17])
  {
    v66 = 0;
    v67 = 0;
    v68 = 0uLL;
    if (v238)
      goto LABEL_60;
LABEL_71:
    v69 = v66 | 2;
    a9.i64[0] = v198;
    a9.i32[2] = v199;
    v68 = vaddq_f32(v68, a9);
    ++v66;
    v67 += v237[10];
    if (!v239)
      goto LABEL_72;
LABEL_61:
    if (v240)
      goto LABEL_62;
LABEL_73:
    v69 |= 8u;
    a9.i64[0] = v202;
    a9.i32[2] = v203;
    v68 = vaddq_f32(v68, a9);
    ++v66;
    v67 += v237[12];
    if (!v241)
      goto LABEL_74;
LABEL_63:
    if (v242)
      goto LABEL_64;
LABEL_75:
    v69 |= 0x20u;
    a9.i64[0] = v206;
    a9.i32[2] = v207;
    v68 = vaddq_f32(v68, a9);
    ++v66;
    v67 += v237[14];
    if (!v243)
      goto LABEL_76;
  }
  else
  {
    v15.i64[0] = v196;
    v15.i32[2] = v197;
    a9.i8[12] = 0;
    a9.i8[13] = 0;
    a9.i8[14] = 0;
    a9.i8[15] = 0;
    v68 = vaddq_f32(v15, (float32x4_t)0);
    v67 = v237[9];
    v66 = 1;
    if (!v238)
      goto LABEL_71;
LABEL_60:
    v69 = v66;
    if (v239)
      goto LABEL_61;
LABEL_72:
    v69 |= 4u;
    a9.i64[0] = v200;
    a9.i32[2] = v201;
    v68 = vaddq_f32(v68, a9);
    ++v66;
    v67 += v237[11];
    if (!v240)
      goto LABEL_73;
LABEL_62:
    if (v241)
      goto LABEL_63;
LABEL_74:
    v69 |= 0x10u;
    a9.i64[0] = v204;
    a9.i32[2] = v205;
    v68 = vaddq_f32(v68, a9);
    ++v66;
    v67 += v237[13];
    if (!v242)
      goto LABEL_75;
LABEL_64:
    if (!v243)
    {
LABEL_76:
      v69 |= 0x40u;
      a9.i64[0] = v208;
      a9.i32[2] = v209;
      v68 = vaddq_f32(v68, a9);
      ++v66;
      v67 += v237[15];
    }
  }
  ++*v189;
  v234[0] = v192;
  v234[1] = v193;
  v70 = v194;
  v234[2] = v194;
  v71 = &byte_22466142C[48 * v69];
  v74 = v71[31];
  v72 = v71 + 31;
  v73 = v74;
  if (v74 == 8)
  {
    v75 = v67;
    LOBYTE(v76) = v69;
    goto LABEL_86;
  }
  if (v237[v73])
  {
    v76 = v69 + (-1 << (v73 - 1));
    v77 = &v195[3 * v73];
    v70.i64[0] = *(_QWORD *)v77;
    v70.i32[2] = v77[2];
    v68 = vsubq_f32(v68, v70);
    --v66;
    v75 = v67 - (char)v237[v73 + 8];
    v78 = v72[1];
    if ((_DWORD)v78 == 8)
      goto LABEL_86;
  }
  else
  {
    v75 = v67;
    v76 = v69;
    v78 = v72[1];
    if ((_DWORD)v78 == 8)
      goto LABEL_86;
  }
  if (v237[v78])
  {
    v76 += -1 << (v78 - 1);
    v79 = &v195[3 * v78];
    v70.i64[0] = *(_QWORD *)v79;
    v70.i32[2] = v79[2];
    v68 = vsubq_f32(v68, v70);
    --v66;
    v75 -= (char)v237[v78 + 8];
  }
  v80 = v72[2];
  if ((_DWORD)v80 != 8)
  {
    if (v237[v80])
    {
      v76 += -1 << (v80 - 1);
      v81 = &v195[3 * v72[2]];
      v70.i64[0] = *(_QWORD *)v81;
      v70.i32[2] = v81[2];
      v68 = vsubq_f32(v68, v70);
      --v66;
      v75 -= (char)v237[v80 + 8];
    }
    v82 = v72[3];
    if ((_DWORD)v82 != 8 && v237[v82])
    {
      v76 += -1 << (v82 - 1);
      v83 = &v195[3 * v82];
      v70.i64[0] = *(_QWORD *)v83;
      v70.i32[2] = v83[2];
      v68 = vsubq_f32(v68, v70);
      --v66;
      v75 -= (char)v237[v82 + 8];
    }
  }
LABEL_86:
  if (v66)
  {
    v70.f32[0] = (float)v66;
    v70 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v70.f32, 0);
    v68 = vdivq_f32(v68, v70);
  }
  v219 = v68.i32[2];
  v218 = v68.i64[0];
  v84 = v76;
  v85 = &byte_22466142C[48 * v76];
  v88 = v85[1];
  v87 = v85 + 1;
  v86 = v88;
  if (v88 != 8)
  {
    result = sub_223D92860((uint64_t)v234, 1, v86, v87[1], v87[2], v87[3], (int *)&v218, v75 != 0, v68, v70);
    v89 = v87[4];
    if (v89 != 8)
    {
      result = sub_223D92860((uint64_t)v234, 1, v89, v87[5], v87[6], v87[7], (int *)&v218, v75 != 0, v68, v70);
      v90 = v87[8];
      if (v90 != 8)
        result = sub_223D92860((uint64_t)v234, 1, v90, v87[9], v87[10], v87[11], (int *)&v218, v75 != 0, v68, v70);
    }
  }
  v91 = &byte_22466142C[48 * v84];
  v94 = v91[13];
  v93 = v91 + 13;
  v92 = v94;
  v95 = v94 == 8;
  v96 = v67;
  if (byte_22466142C[48 * v84])
  {
    if (!v95)
    {
      v97 = v93[1];
      if (v237[v97])
      {
        result = sub_223D92860((uint64_t)v234, 0, v92, v97, v93[2], 8u, (int *)&v218, v75 != 0, v68, v70);
        v96 = v67;
      }
      v98 = v93[3];
      if (v98 != 8)
      {
        v99 = v93[4];
        if (v237[v99])
        {
          result = sub_223D92860((uint64_t)v234, 0, v98, v99, v93[5], 8u, (int *)&v218, v75 != 0, v68, v70);
          v96 = v67;
        }
        v100 = v93[6];
        if (v100 != 8)
        {
          v101 = v93[7];
          if (v237[v101])
          {
            result = sub_223D92860((uint64_t)v234, 0, v100, v101, v93[8], 8u, (int *)&v218, v75 != 0, v68, v70);
            v96 = v67;
          }
          v102 = v93[9];
          if (v102 != 8)
          {
            v103 = v93[10];
            if (v237[v103])
            {
              result = sub_223D92860((uint64_t)v234, 0, v102, v103, v93[11], 8u, (int *)&v218, v75 != 0, v68, v70);
              v96 = v67;
            }
            v104 = v93[12];
            if (v104 != 8)
            {
              v105 = v93[13];
              if (v237[v105])
              {
                result = sub_223D92860((uint64_t)v234, 0, v104, v105, v93[14], 8u, (int *)&v218, v75 != 0, v68, v70);
                v96 = v67;
              }
              v106 = v93[15];
              if (v106 != 8)
              {
                v107 = v93[16];
                if (v237[v107])
                {
                  result = sub_223D92860((uint64_t)v234, 0, v106, v107, v93[17], 8u, (int *)&v218, v75 != 0, v68, v70);
                  goto LABEL_118;
                }
              }
            }
          }
        }
      }
    }
  }
  else if (!v95)
  {
    result = sub_223D92860((uint64_t)v234, 0, v92, v93[1], v93[2], 8u, (int *)&v218, v75 != 0, v68, v70);
    v108 = v93[3];
    v96 = v67;
    if (v108 != 8)
    {
      result = sub_223D92860((uint64_t)v234, 0, v108, v93[4], v93[5], 8u, (int *)&v218, v75 != 0, v68, v70);
      v109 = v93[6];
      v96 = v67;
      if (v109 != 8)
      {
        result = sub_223D92860((uint64_t)v234, 0, v109, v93[7], v93[8], 8u, (int *)&v218, v75 != 0, v68, v70);
        v110 = v93[9];
        v96 = v67;
        if (v110 != 8)
        {
          result = sub_223D92860((uint64_t)v234, 0, v110, v93[10], v93[11], 8u, (int *)&v218, v75 != 0, v68, v70);
          v111 = v93[12];
          v96 = v67;
          if (v111 != 8)
          {
            result = sub_223D92860((uint64_t)v234, 0, v111, v93[13], v93[14], 8u, (int *)&v218, v75 != 0, v68, v70);
            v112 = v93[15];
            v96 = v67;
            if (v112 != 8)
            {
              result = sub_223D92860((uint64_t)v234, 0, v112, v93[16], v93[17], 8u, (int *)&v218, v75 != 0, v68, v70);
LABEL_118:
              v96 = v67;
            }
          }
        }
      }
    }
  }
  v113 = 0;
  v187 = &byte_22466142C[48 * v69 + 35];
  while (2)
  {
    v114 = v187[v113];
    if (v114 != 8)
    {
      v115 = (unsigned __int8 *)&unk_2246613E4 + 9 * v114;
      v116 = *v115;
      v117 = &v195[3 * v116];
      v218 = *(_QWORD *)v117;
      v219 = v117[2];
      v245[0] = v237[v116 + 8];
      v244[0] = v237[v116];
      v118 = v115[1];
      v119 = &v195[3 * v118];
      v220 = *(_QWORD *)v119;
      v221 = v119[2];
      v120 = v237[v118 + 16];
      v121 = v237[v118 + 8];
      v245[1] = v237[v118 + 8];
      v244[1] = v237[v118];
      v122 = v115[2];
      v123 = &v195[3 * v122];
      v222 = *(_QWORD *)v123;
      v223 = v123[2];
      v124 = v237[v122 + 16];
      v125 = v237[v122 + 8];
      LOBYTE(v122) = v237[v122];
      v245[2] = v125;
      v244[2] = v122;
      v126 = v115[3];
      v127 = &v195[3 * v126];
      v224 = *(_QWORD *)v127;
      v225 = v127[2];
      v128 = v237[v126 + 16];
      result = v237[v126 + 8];
      v245[3] = v237[v126 + 8];
      v244[3] = v237[v126];
      v129 = v115[4];
      v130 = &v195[3 * v129];
      v227 = v130[2];
      v226 = *(_QWORD *)v130;
      v131 = v237[v129 + 16];
      v132 = v237[v129 + 8];
      v245[4] = v237[v129 + 8];
      v244[4] = v237[v129];
      v133 = v115[5];
      v134 = &v195[3 * v133];
      v229 = v134[2];
      v228 = *(_QWORD *)v134;
      v135 = v237[v133 + 16];
      v136 = v237[v133 + 8];
      LOBYTE(v133) = v237[v133];
      v245[5] = v136;
      v244[5] = v133;
      v137 = v115[6];
      v138 = &v195[3 * v137];
      v139 = *(_QWORD *)v138;
      v231 = v138[2];
      v230 = v139;
      v140 = v237[v137 + 16];
      v141 = v237[v137 + 8];
      v245[6] = v237[v137 + 8];
      v244[6] = v237[v137];
      v142 = v115[7];
      v143 = &v195[3 * v142];
      v144 = *(_QWORD *)v143;
      v233 = v143[2];
      v232 = v144;
      v145 = v237[v142 + 16];
      v146 = v237[v142 + 8];
      v245[7] = v237[v142 + 8];
      v244[7] = v237[v142];
      if (v120)
      {
        v147 = 0;
        v68 = 0uLL;
        if (v124)
          goto LABEL_125;
LABEL_136:
        v148 = v147 | 2;
        v70.i64[0] = v222;
        v70.i32[2] = v223;
        v68 = vaddq_f32(v68, v70);
        ++v147;
        v96 += v125;
        if (!v128)
          goto LABEL_137;
LABEL_126:
        if (v131)
          goto LABEL_127;
LABEL_138:
        v148 |= 8u;
        v70.i64[0] = v226;
        v70.i32[2] = v227;
        v68 = vaddq_f32(v68, v70);
        ++v147;
        v96 += v132;
        if (!v135)
          goto LABEL_139;
LABEL_128:
        if (v140)
          goto LABEL_129;
LABEL_140:
        v148 |= 0x20u;
        v70.i64[0] = v230;
        v70.i32[2] = v231;
        v68 = vaddq_f32(v68, v70);
        ++v147;
        v96 += v141;
        if (!v145)
          goto LABEL_141;
      }
      else
      {
        v68.i64[0] = v220;
        v68.i32[2] = v221;
        v70 = 0uLL;
        v68 = vaddq_f32(v68, (float32x4_t)0);
        v96 += v121;
        v147 = 1;
        if (!v124)
          goto LABEL_136;
LABEL_125:
        v148 = v147;
        if (v128)
          goto LABEL_126;
LABEL_137:
        v148 |= 4u;
        v70.i64[0] = v224;
        v70.i32[2] = v225;
        v68 = vaddq_f32(v68, v70);
        ++v147;
        v96 += result;
        if (!v131)
          goto LABEL_138;
LABEL_127:
        if (v135)
          goto LABEL_128;
LABEL_139:
        v148 |= 0x10u;
        v70.i64[0] = v228;
        v70.i32[2] = v229;
        v68 = vaddq_f32(v68, v70);
        ++v147;
        v96 += v136;
        if (!v140)
          goto LABEL_140;
LABEL_129:
        if (!v145)
        {
LABEL_141:
          v148 |= 0x40u;
          v70.i64[0] = v232;
          v70.i32[2] = v233;
          v68 = vaddq_f32(v68, v70);
          ++v147;
          v96 += v146;
        }
      }
      ++*v189;
      v149 = &byte_22466142C[48 * v148];
      v152 = v149[31];
      v150 = v149 + 31;
      v151 = v152;
      if (v152 == 8)
      {
        v153 = v96;
        goto LABEL_151;
      }
      if (v244[v151])
      {
        v154 = (char *)&v218 + 12 * v151;
        v70.i64[0] = *(_QWORD *)v154;
        v70.i32[2] = *((_DWORD *)v154 + 2);
        v148 += -1 << (v151 - 1);
        v68 = vsubq_f32(v68, v70);
        --v147;
        v153 = v96 - (char)v245[v151];
        v155 = v150[1];
        if ((_DWORD)v155 == 8)
          goto LABEL_151;
      }
      else
      {
        v153 = v96;
        v155 = v150[1];
        if ((_DWORD)v155 == 8)
          goto LABEL_151;
      }
      if (v244[v155])
      {
        v156 = (char *)&v218 + 12 * v155;
        v70.i64[0] = *(_QWORD *)v156;
        v70.i32[2] = *((_DWORD *)v156 + 2);
        v148 += -1 << (v155 - 1);
        v68 = vsubq_f32(v68, v70);
        --v147;
        v153 -= (char)v245[v155];
      }
      v157 = v150[2];
      if ((_DWORD)v157 != 8)
      {
        if (v244[v157])
        {
          v158 = (char *)&v218 + 12 * v150[2];
          v70.i64[0] = *(_QWORD *)v158;
          v70.i32[2] = *((_DWORD *)v158 + 2);
          v148 += -1 << (v157 - 1);
          v68 = vsubq_f32(v68, v70);
          --v147;
          v153 -= (char)v245[v157];
        }
        v159 = v150[3];
        if ((_DWORD)v159 != 8 && v244[v159])
        {
          v160 = (char *)&v218 + 12 * v159;
          v70.i64[0] = *(_QWORD *)v160;
          v70.i32[2] = *((_DWORD *)v160 + 2);
          v148 += -1 << (v159 - 1);
          v68 = vsubq_f32(v68, v70);
          --v147;
          v153 -= (char)v245[v159];
        }
      }
LABEL_151:
      v191 = v96;
      if (v147)
      {
        v70.f32[0] = (float)v147;
        v70 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v70.f32, 0);
        v68 = vdivq_f32(v68, v70);
      }
      v236 = v68.i32[2];
      v235 = v68.i64[0];
      v161 = v148;
      v162 = &byte_22466142C[48 * v148];
      v163 = v162[1];
      if (v163 != 8)
      {
        result = sub_223D92860((uint64_t)&v192, 1, v115[v163], v115[v162[2]], v115[v162[3]], v115[v162[4]], (int *)&v235, v153 != 0, v68, v70);
        v164 = v162[5];
        if (v164 != 8)
        {
          result = sub_223D92860((uint64_t)&v192, 1, v115[v164], v115[v162[6]], v115[v162[7]], v115[v162[8]], (int *)&v235, v153 != 0, v68, v70);
          v165 = v162[9];
          if (v165 != 8)
            result = sub_223D92860((uint64_t)&v192, 1, v115[v165], v115[v162[10]], v115[v162[11]], v115[v162[12]], (int *)&v235, v153 != 0, v68, v70);
        }
      }
      v166 = &byte_22466142C[48 * v161];
      v169 = v166[13];
      v168 = v166 + 13;
      v167 = v169;
      v170 = v169 == 8;
      if (*v162)
      {
        if (v170)
          goto LABEL_121;
        v171 = v168[1];
        if (v244[v171])
          result = sub_223D92860((uint64_t)&v192, 0, v115[v167], v115[v171], v115[v168[2]], 8u, (int *)&v235, v153 != 0, v68, v70);
        v172 = v168[3];
        if (v172 == 8)
          goto LABEL_121;
        v173 = v168[4];
        if (v244[v173])
          result = sub_223D92860((uint64_t)&v192, 0, v115[v172], v115[v173], v115[v168[5]], 8u, (int *)&v235, v153 != 0, v68, v70);
        v174 = v168[6];
        if (v174 == 8)
          goto LABEL_121;
        v175 = v168[7];
        if (v244[v175])
          result = sub_223D92860((uint64_t)&v192, 0, v115[v174], v115[v175], v115[v168[8]], 8u, (int *)&v235, v153 != 0, v68, v70);
        v176 = v168[9];
        if (v176 == 8)
          goto LABEL_121;
        v177 = v168[10];
        if (v244[v177])
          result = sub_223D92860((uint64_t)&v192, 0, v115[v176], v115[v177], v115[v168[11]], 8u, (int *)&v235, v153 != 0, v68, v70);
        v178 = v168[12];
        if (v178 == 8)
          goto LABEL_121;
        v179 = v168[13];
        if (v244[v179])
          result = sub_223D92860((uint64_t)&v192, 0, v115[v178], v115[v179], v115[v168[14]], 8u, (int *)&v235, v153 != 0, v68, v70);
        v180 = v168[15];
        if (v180 == 8 || (v181 = v168[16], !v244[v181]))
        {
LABEL_121:
          ++v113;
          v96 = v191;
          if (v113 == 3)
            return result;
          continue;
        }
      }
      else
      {
        if (v170)
          goto LABEL_121;
        result = sub_223D92860((uint64_t)&v192, 0, v115[v167], v115[v168[1]], v115[v168[2]], 8u, (int *)&v235, v153 != 0, v68, v70);
        v182 = v168[3];
        if (v182 == 8)
          goto LABEL_121;
        result = sub_223D92860((uint64_t)&v192, 0, v115[v182], v115[v168[4]], v115[v168[5]], 8u, (int *)&v235, v153 != 0, v68, v70);
        v183 = v168[6];
        if (v183 == 8)
          goto LABEL_121;
        result = sub_223D92860((uint64_t)&v192, 0, v115[v183], v115[v168[7]], v115[v168[8]], 8u, (int *)&v235, v153 != 0, v68, v70);
        v184 = v168[9];
        if (v184 == 8)
          goto LABEL_121;
        result = sub_223D92860((uint64_t)&v192, 0, v115[v184], v115[v168[10]], v115[v168[11]], 8u, (int *)&v235, v153 != 0, v68, v70);
        v185 = v168[12];
        if (v185 == 8)
          goto LABEL_121;
        result = sub_223D92860((uint64_t)&v192, 0, v115[v185], v115[v168[13]], v115[v168[14]], 8u, (int *)&v235, v153 != 0, v68, v70);
        v180 = v168[15];
        if (v180 == 8)
          goto LABEL_121;
        v181 = v168[16];
      }
      result = sub_223D92860((uint64_t)&v192, 0, v115[v180], v115[v181], v115[v168[17]], 8u, (int *)&v235, v153 != 0, v68, v70);
      goto LABEL_121;
    }
    return result;
  }
}

uint64_t sub_223D92860(uint64_t result, int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, int *a7, int a8, float32x4_t a9, float32x4_t a10)
{
  uint64_t v15;
  unint64_t **v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int32x2_t *v26;
  int32x2_t *v27;
  __int32 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int32x2_t *v34;
  int32x2_t *v35;
  __int32 v36;
  uint64_t v37;
  unint64_t v38;
  unsigned int *v39;
  unint64_t *v40;
  unsigned int v41;
  int *v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  int32x2_t *v47;
  int32x2_t *v48;
  __int32 v49;
  uint64_t v50;
  unint64_t v51;
  _DWORD *v52;
  int32x2_t *v53;
  int32x2_t *v54;
  __int32 v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  float32x4_t v63;
  uint64_t v64;
  float32x4_t v65;
  uint64_t v66;
  float32x4_t v67;
  uint64_t v68;
  BOOL v69;
  unsigned int v70;
  uint64_t v71;
  float v72;
  float *v73;
  __int128 *v74;
  uint64_t v75;
  int32x2_t *v76;
  unsigned int *v77;
  float32x4_t *v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int *v85;
  int *v86;
  unsigned int v88;
  float32x4_t v89;
  uint64_t v90;
  char v91[4];
  unint64_t v92;
  __int32 v93;
  int *v94;
  char v95;
  unint64_t v96;
  __int32 v97;
  int *v98;
  char v99;
  unint64_t v100;
  __int32 v101;
  unsigned int *v102;
  char v103;
  unint64_t v104;
  __int32 v105;
  _DWORD *v106;
  uint64_t v107;
  __int32 v108;
  uint64_t v109;
  __int32 v110;
  uint64_t v111;
  __int32 v112;

  v88 = a4;
  v15 = result;
  v16 = *(unint64_t ***)result;
  v17 = *(_QWORD *)(*(_QWORD *)result + 8);
  if (a3 == 8)
  {
    v91[0] = 1;
    v21 = **v16;
    v93 = *((_DWORD *)*v16 + 2);
    v92 = v21;
    v86 = (int *)(v17 + 272);
    v94 = (int *)(v17 + 272);
    if (a4 == 8)
      goto LABEL_17;
LABEL_8:
    v22 = a4;
    v23 = *((unsigned int *)v16[2] + *((unsigned __int8 *)v16[3] + a4));
    if ((v23 & 0x80000000) != 0)
    {
      v25 = v17 + 280;
    }
    else
    {
      v24 = *(_QWORD *)(v17 + 2328);
      if (v23 >= (*(_QWORD *)(v17 + 2336) - v24) >> 11)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C);
        if ((result & 1) != 0)
          goto LABEL_106;
        v24 = *(_QWORD *)(v17 + 2328);
        a4 = v88;
      }
      v25 = v24 + (v23 << 11);
    }
    v95 = 0;
    v34 = (int32x2_t *)v16[4];
    v35 = (int32x2_t *)((char *)&unk_22466FAC0 + 12 * *((unsigned __int8 *)v16[5] + v22));
    v36 = v35[1].i32[0];
    *(int32x2_t *)a10.f32 = *v34;
    *(int32x2_t *)a9.f32 = vadd_s32(*v34, *v35);
    v96 = a9.i64[0];
    v97 = v34[1].i32[0] + v36;
    v37 = *((unsigned int *)v16[6] + v22);
    if (v37 >= 0x200)
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.h", 499, (uint64_t)"index < voxel_block.size()", 26, (uint64_t)"Invalid grid index", 18, (void (*)(void **))sub_22457406C);
      a4 = v88;
      if ((_DWORD)result)
        goto LABEL_106;
    }
    v85 = (int *)(v25 + 4 * v37);
    v98 = v85;
    v16 = *(unint64_t ***)v15;
    v17 = *(_QWORD *)(*(_QWORD *)v15 + 8);
    if (a5 != 8)
      goto LABEL_18;
LABEL_27:
    v99 = 1;
    v38 = **v16;
    v101 = *((_DWORD *)*v16 + 2);
    v100 = v38;
    v39 = (unsigned int *)(v17 + 272);
    v102 = v39;
    v40 = v16[1];
    if (a6 == 8)
      goto LABEL_37;
    goto LABEL_28;
  }
  v18 = *((unsigned int *)v16[2] + *((unsigned __int8 *)v16[3] + a3));
  if ((v18 & 0x80000000) != 0)
  {
    v20 = v17 + 280;
  }
  else
  {
    v19 = *(_QWORD *)(v17 + 2328);
    if (v18 >= (*(_QWORD *)(v17 + 2336) - v19) >> 11)
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C);
      if ((result & 1) != 0)
        goto LABEL_106;
      v19 = *(_QWORD *)(v17 + 2328);
      a4 = v88;
    }
    v20 = v19 + (v18 << 11);
  }
  v91[0] = 0;
  v26 = (int32x2_t *)v16[4];
  v27 = (int32x2_t *)((char *)&unk_22466FAC0 + 12 * *((unsigned __int8 *)v16[5] + a3));
  v28 = v27[1].i32[0];
  *(int32x2_t *)a10.f32 = *v26;
  *(int32x2_t *)a9.f32 = vadd_s32(*v26, *v27);
  v92 = a9.i64[0];
  v93 = v26[1].i32[0] + v28;
  v29 = *((unsigned int *)v16[6] + a3);
  if (v29 >= 0x200)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.h", 499, (uint64_t)"index < voxel_block.size()", 26, (uint64_t)"Invalid grid index", 18, (void (*)(void **))sub_22457406C);
    a4 = v88;
    if ((_DWORD)result)
      goto LABEL_106;
  }
  v86 = (int *)(v20 + 4 * v29);
  v94 = v86;
  v16 = *(unint64_t ***)v15;
  v17 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (a4 != 8)
    goto LABEL_8;
LABEL_17:
  v95 = 1;
  v30 = **v16;
  v97 = *((_DWORD *)*v16 + 2);
  v96 = v30;
  v85 = (int *)(v17 + 272);
  v98 = (int *)(v17 + 272);
  if (a5 == 8)
    goto LABEL_27;
LABEL_18:
  v31 = *((unsigned int *)v16[2] + *((unsigned __int8 *)v16[3] + a5));
  if ((v31 & 0x80000000) != 0)
  {
    v33 = v17 + 280;
  }
  else
  {
    v32 = *(_QWORD *)(v17 + 2328);
    if (v31 >= (*(_QWORD *)(v17 + 2336) - v32) >> 11)
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C);
      if ((result & 1) != 0)
        goto LABEL_106;
      v32 = *(_QWORD *)(v17 + 2328);
      a4 = v88;
    }
    v33 = v32 + (v31 << 11);
  }
  v99 = 0;
  v47 = (int32x2_t *)v16[4];
  v48 = (int32x2_t *)((char *)&unk_22466FAC0 + 12 * *((unsigned __int8 *)v16[5] + a5));
  v49 = v48[1].i32[0];
  *(int32x2_t *)a10.f32 = *v47;
  *(int32x2_t *)a9.f32 = vadd_s32(*v47, *v48);
  v100 = a9.i64[0];
  v101 = v47[1].i32[0] + v49;
  v50 = *((unsigned int *)v16[6] + a5);
  if (v50 >= 0x200)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.h", 499, (uint64_t)"index < voxel_block.size()", 26, (uint64_t)"Invalid grid index", 18, (void (*)(void **))sub_22457406C);
    a4 = v88;
    if ((_DWORD)result)
      goto LABEL_106;
  }
  v39 = (unsigned int *)(v33 + 4 * v50);
  v102 = v39;
  v16 = *(unint64_t ***)v15;
  v40 = *(unint64_t **)(*(_QWORD *)v15 + 8);
  if (a6 == 8)
  {
LABEL_37:
    v103 = 1;
    v51 = **v16;
    v105 = *((_DWORD *)*v16 + 2);
    v104 = v51;
    v52 = v40 + 34;
    v106 = v40 + 34;
    if (**(_BYTE **)(v15 + 8))
      goto LABEL_43;
    goto LABEL_48;
  }
LABEL_28:
  v41 = a5;
  v42 = a7;
  v43 = a8;
  v44 = *((unsigned int *)v16[2] + *((unsigned __int8 *)v16[3] + a6));
  if ((v44 & 0x80000000) != 0)
  {
    v46 = v40 + 35;
  }
  else
  {
    v45 = v40[291];
    if (v44 >= (uint64_t)(v40[292] - v45) >> 11)
    {
      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C);
      if ((result & 1) != 0)
        goto LABEL_106;
      v45 = v40[291];
      a4 = v88;
    }
    v46 = (_QWORD *)(v45 + (v44 << 11));
  }
  v103 = 0;
  v53 = (int32x2_t *)v16[4];
  v54 = (int32x2_t *)((char *)&unk_22466FAC0 + 12 * *((unsigned __int8 *)v16[5] + a6));
  v55 = v54[1].i32[0];
  *(int32x2_t *)a10.f32 = *v53;
  *(int32x2_t *)a9.f32 = vadd_s32(*v53, *v54);
  v104 = a9.i64[0];
  v105 = v53[1].i32[0] + v55;
  v56 = *((unsigned int *)v16[6] + a6);
  if (v56 >= 0x200)
  {
    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.h", 499, (uint64_t)"index < voxel_block.size()", 26, (uint64_t)"Invalid grid index", 18, (void (*)(void **))sub_22457406C);
    a4 = v88;
    if ((_DWORD)result)
LABEL_106:
      abort();
  }
  v52 = (_DWORD *)v46 + v56;
  v106 = v52;
  a8 = v43;
  a7 = v42;
  a5 = v41;
  if (**(_BYTE **)(v15 + 8))
    goto LABEL_43;
LABEL_48:
  v59 = *v86;
  if (***(_BYTE ***)(v15 + 16))
  {
    if (a3 != 8 && v59 < 0 || a4 != 8 && *v85 < 0)
      return result;
    v60 = *v39;
    if (a5 == 8)
      goto LABEL_86;
LABEL_85:
    if ((v60 & 0x80000000) != 0)
      return result;
    goto LABEL_86;
  }
  if ((v59 & 0x20000000) != 0)
    v59 = ~(8 * v59);
  if (a3 != 8 && v59 < 0)
    return result;
  v80 = *v85;
  if ((*v85 & 0x20000000) != 0)
    v80 = ~(8 * *v85);
  if (a4 != 8 && v80 < 0)
    return result;
  if ((*v39 & 0x10000000) != 0)
    v81 = 0x40000000;
  else
    v81 = 0x80000000;
  if ((*v39 & 0x20000000) != 0)
    v60 = v81;
  else
    v60 = *v39 & 0xCFFFFFFF;
  if (a5 != 8)
    goto LABEL_85;
LABEL_86:
  if (a2)
  {
    v82 = *v52;
    v83 = v82 & 0xCFFFFFFF;
    if ((v82 & 0x10000000) != 0)
      v84 = 0x40000000;
    else
      v84 = 0x80000000;
    if ((v82 & 0x20000000) != 0)
      v83 = v84;
    if (!***(_BYTE ***)(v15 + 16))
      v82 = v83;
    if (a6 != 8 && (v82 & 0x80000000) != 0)
      return result;
  }
  if (!a8)
  {
LABEL_43:
    if (a2)
    {
LABEL_44:
      v57 = *(_QWORD *)(v15 + 24);
      if ((_DWORD)v92 == (_DWORD)v96 && (_DWORD)v92 == (_DWORD)v100 && (_DWORD)v92 == (_DWORD)v104)
      {
        v58 = 0;
      }
      else
      {
        v58 = 2;
        if (HIDWORD(v92) == HIDWORD(v96) && HIDWORD(v92) == HIDWORD(v100))
        {
          if (HIDWORD(v92) == HIDWORD(v104))
            v58 = 1;
          else
            v58 = 2;
        }
      }
      v61 = v57 + 12 * a4;
      a9.i64[0] = *(_QWORD *)v61;
      a9.i32[2] = *(_DWORD *)(v61 + 8);
      v62 = v57 + 12 * a3;
      a10.i64[0] = *(_QWORD *)v62;
      a10.i32[2] = *(_DWORD *)(v62 + 8);
      v63 = vsubq_f32(a9, a10);
      v112 = v63.i32[2];
      v111 = v63.i64[0];
      v64 = v57 + 12 * a5;
      v63.i64[0] = *(_QWORD *)v64;
      v63.i32[2] = *(_DWORD *)(v64 + 8);
      v65 = vsubq_f32(v63, a10);
      v110 = v65.i32[2];
      v109 = v65.i64[0];
      v66 = v57 + 12 * a6;
      v65.i64[0] = *(_QWORD *)v66;
      v65.i32[2] = *(_DWORD *)(v66 + 8);
      v67 = vsubq_f32(v65, a10);
      v108 = v67.i32[2];
      v107 = v67.i64[0];
      v68 = 2 * (v58 == 0);
      v69 = v58 > 1;
      if (v58 <= 1)
        v70 = v58 + 1;
      else
        v70 = 0;
      if (v69)
        v68 = 1;
      v71 = 4 * v70;
      v72 = *(float *)((char *)&v109 + v71);
      v73 = (float *)((unint64_t)&v109 & 0xFFFFFFFFFFFFFFF3 | (4 * (v68 & 3)));
      a10.f32[0] = (float)(v72 * *(float *)((unint64_t)&v111 | (4 * v68)))
                 - (float)(*v73 * *(float *)((char *)&v111 + v71));
      if ((float)(a10.f32[0]
                 * (float)((float)(*v73 * *(float *)((char *)&v107 + v71))
                         - (float)(v72 * *(float *)((unint64_t)&v107 & 0xFFFFFFFFFFFFFFF3 | (4 * (v68 & 3)))))) >= 0.0)
      {
        v90 = 0x200000003;
        v74 = &xmmword_22466FC10;
      }
      else
      {
        v90 = 0x300000000;
        v74 = &xmmword_22466FC28;
      }
      a9 = (float32x4_t)*v74;
      v89 = (float32x4_t)*v74;
      v75 = *(_QWORD *)(v15 + 32);
      v76 = *(int32x2_t **)(v15 + 40);
      v77 = (unsigned int *)((unint64_t)&v89 | 0xC);
      v78 = &v89;
      v79 = 1;
      return sub_223D930C4(v75, v79, v76, (uint64_t)v91, (unsigned int *)v78, v77, a7, a8, a9, a10);
    }
LABEL_103:
    v75 = *(_QWORD *)(v15 + 32);
    v76 = *(int32x2_t **)(v15 + 40);
    v78 = (float32x4_t *)&unk_22466FC04;
    v79 = 0;
    v77 = (unsigned int *)&unk_22466FC04;
    return sub_223D930C4(v75, v79, v76, (uint64_t)v91, (unsigned int *)v78, v77, a7, a8, a9, a10);
  }
  if (a3 != 8 && a4 != 8 && a5 != 8)
  {
    if (a2)
    {
      if (a6 == 8)
        return result;
      goto LABEL_44;
    }
    goto LABEL_103;
  }
  return result;
}

uint64_t sub_223D930C4(uint64_t a1, int a2, int32x2_t *a3, uint64_t a4, unsigned int *a5, unsigned int *a6, int *a7, int a8, float32x4_t a9, float32x4_t a10)
{
  int *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  float v15;
  unsigned __int8 *v16;
  int32x2_t *v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  float v21;
  uint64_t *v22;
  unint64_t **v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int32 *v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  float32x4_t v38;
  uint64_t v39;
  uint64_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x2_t v45;
  uint64_t v46;
  float32x4_t v47;
  float32x4_t v48;
  uint64_t v49;
  unsigned int **v50;
  unsigned int *v51;
  unsigned __int8 **v52;
  unsigned int v53;
  unsigned __int8 *v54;
  unsigned __int8 *v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  uint64_t v59;
  float32x2_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unsigned __int8 *v65;
  unsigned int v66;
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  unsigned int v71;
  int v72;
  int v73;
  char v74;
  uint64_t v75;
  _BYTE *v76;
  char v77;
  int v78;
  char v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t result;
  char v85;
  int v86;
  char *v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v99;
  char v100;
  uint64_t v101;
  _QWORD v102[2];
  uint64_t v103;
  __int32 v104;

  v10 = a7;
  v12 = a1;
  v13 = 0;
  v95 = *(_QWORD *)(a1 + 24);
  v102[0] = 0;
  v102[1] = 0;
  if (a2)
    v14 = 4;
  else
    v14 = 3;
  if (a8)
    v15 = 0.0;
  else
    v15 = 1.0;
  do
  {
    while (1)
    {
      v16 = (unsigned __int8 *)(a4 + 24 * v13);
      v18 = *v16;
      v17 = (int32x2_t *)(v16 + 4);
      if (!v18)
        break;
      *((_DWORD *)v102 + v13++) = sub_223D939E8(**(unint64_t ****)v12, *(uint64_t **)(*(_QWORD *)v12 + 8), (int *)v17, v10, v15);
      if ((_DWORD)v14 == (_DWORD)v13)
        goto LABEL_27;
    }
    v19 = *(_QWORD *)(v12 + 8);
    v20 = **(_DWORD **)(a4 + 24 * v13 + 16);
    if (v20 >> 29)
      v21 = 0.0;
    else
      v21 = 1.0;
    v23 = *(unint64_t ***)v19;
    v22 = *(uint64_t **)(v19 + 8);
    v24 = *(_QWORD *)(v19 + 16);
    v26 = *(_BYTE **)v24;
    v25 = *(_QWORD *)(v24 + 8);
    if (*v26)
    {
      if (v20 >> 30)
        goto LABEL_25;
    }
    else if ((v20 & 0x20000000) != 0 || (v20 &= 0xCFFFFFFF, v20 >> 30))
    {
LABEL_25:
      *(float32x2_t *)a10.f32 = vcvt_f32_s32(*v17);
      a10.f32[2] = (float)v17[1].i32[0];
      v41.i64[0] = 0x3F0000003F000000;
      v41.i64[1] = 0x3F0000003F000000;
      v42 = vmulq_n_f32(vaddq_f32(a10, v41), *(float *)(v25 + 144));
      v104 = v42.i32[2];
      v103 = v42.i64[0];
      goto LABEL_26;
    }
    v27 = v20 & 0xCFFFFFFF;
    v28 = *(_QWORD *)(v25 + 2448);
    v29 = v28 + 520 * (v20 & 0xCFFFFFFF);
    if (!*(_DWORD *)(v29 + 4))
    {
      v96 = v22;
      v30 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/src/PointCloudBlock.cpp", 124, (uint64_t)"points_.Count() > 0", 19, (uint64_t)"No points in block to compute mean", 34, (void (*)(void **))sub_22457406C);
      v22 = v96;
      if (v30)
        abort();
    }
    v31 = v28 + 520 * v27;
    if (*(_BYTE *)(v31 + 320))
    {
      *(_BYTE *)(v31 + 320) = 0;
      v32 = v28 + 520 * v27;
      v33 = v32 + 324;
      *(_QWORD *)(v32 + 328) = 0;
      *(_DWORD *)(v32 + 324) = 0;
      v34 = (unsigned __int32 *)(v32 + 332);
      v35 = *(_DWORD *)(v29 + 4);
      a9.i64[0] = *(_QWORD *)v33;
      a9.i32[2] = *v34;
      if (v35)
      {
        v36 = v29 + 12;
        v37 = *(unsigned int *)(v29 + 4);
        do
        {
          a10.i64[0] = *(_QWORD *)v36;
          a10.i32[2] = *(_DWORD *)(v36 + 8);
          a9 = vaddq_f32(a9, a10);
          *(_DWORD *)(v33 + 8) = a9.i32[2];
          *(_QWORD *)v33 = a9.i64[0];
          v36 += 28;
          --v37;
        }
        while (v37);
      }
      a10.f32[0] = (float)v35;
      v38 = vdivq_f32(a9, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a10.f32, 0));
      *(_DWORD *)(v33 + 8) = v38.i32[2];
      *(_QWORD *)v33 = v38.i64[0];
    }
    v39 = v28 + 520 * v27;
    v40 = *(_QWORD *)(v39 + 324);
    v104 = *(_DWORD *)(v39 + 332);
    v103 = v40;
    v10 = a7;
LABEL_26:
    *((_DWORD *)v102 + v13++) = sub_223D939E8(v23, v22, (int *)v17, (int *)&v103, v21);
  }
  while ((_DWORD)v14 != (_DWORD)v13);
LABEL_27:
  sub_223D93768(*(uint64_t **)(v12 + 16), (uint64_t)v102, a4, a5);
  if ((a2 & 1) != 0)
    sub_223D93768(*(uint64_t **)(v12 + 16), (uint64_t)v102, a4, a6);
  v46 = 0;
  *(float32x2_t *)v43.f32 = vcvt_f32_s32(*a3);
  v43.f32[2] = (float)a3[1].i32[0];
  v44.i32[0] = *(_DWORD *)(v95 + 144);
  v47.i64[0] = 0x3F0000003F000000;
  v47.i64[1] = 0x3F0000003F000000;
  v48 = vmulq_n_f32(vaddq_f32(v43, v47), v44.f32[0]);
  v104 = v48.i32[2];
  v103 = v48.i64[0];
  v101 = 0;
  v99 = a4;
  while (2)
  {
    while (1)
    {
      v49 = a4 + 24 * v46;
      v51 = *(unsigned int **)(v49 + 16);
      v50 = (unsigned int **)(v49 + 16);
      v52 = *(unsigned __int8 ***)(v12 + 32);
      v53 = *v51;
      v55 = *v52;
      v54 = v52[1];
      v56 = *v55;
      v57 = *v51;
      if (!v56)
        break;
      if (!(v57 >> 30))
        goto LABEL_35;
LABEL_45:
      *((_BYTE *)&v101 + v46 + 4) = -1;
      v68 = *(_QWORD *)(v12 + 40);
      v70 = *(_BYTE **)v68;
      v69 = *(_QWORD *)(v68 + 8);
      if (!*v70)
        goto LABEL_60;
LABEL_46:
      if (!(v53 >> 30))
        goto LABEL_32;
LABEL_30:
      *((_BYTE *)&v102[-1] + v46++) = -1;
      if ((_DWORD)v14 == (_DWORD)v46)
        goto LABEL_63;
    }
    if ((v53 & 0x20000000) != 0)
      goto LABEL_45;
    v57 = v53 & 0xCFFFFFFF;
    if ((v53 & 0xCFFFFFFF) >> 30)
      goto LABEL_45;
LABEL_35:
    v58 = v57 & 0xCFFFFFFF;
    v59 = *((_QWORD *)v54 + 306);
    v60 = (float32x2_t *)(v59 + 520 * (v57 & 0xCFFFFFFF));
    if (v60[42].i8[0])
    {
      v60[42].i8[0] = 0;
      v61 = v60->u32[1];
      if ((_DWORD)v61)
      {
        v62 = v12;
        v63 = v14;
        v64 = 0;
        v65 = (unsigned __int8 *)(v59 + 520 * v58 + 36);
        do
        {
          v66 = *v65;
          v65 += 28;
          v64 = sub_223A4EC9C(v64, ((unint64_t)v66 << 8) | 1, 0xFFu);
          --v61;
        }
        while (v61);
        if ((_BYTE)v64)
          v67 = BYTE1(v64);
        else
          v67 = -1;
        v14 = v63;
        v12 = v62;
        a4 = v99;
      }
      else
      {
        v67 = -1;
      }
      *(_BYTE *)(v59 + 520 * v58 + 338) = v67;
    }
    else
    {
      v67 = *(_BYTE *)(v59 + 520 * v58 + 338);
    }
    v71 = sub_223CF6EA4(v60, (uint64_t)&v103, v48, v44, *(double *)v47.i64, v45);
    if (v67 <= 0x29u)
    {
      v72 = byte_224693ECF[v67] != 0;
      if (v71 > 0x29)
        goto LABEL_55;
LABEL_53:
      v73 = byte_224693ECF[v71] != 0;
    }
    else
    {
      v72 = 0;
      if (v71 <= 0x29)
        goto LABEL_53;
LABEL_55:
      v73 = 0;
    }
    if (v72 != v73)
      v74 = v67;
    else
      v74 = v71;
    v53 = **v50;
    *((_BYTE *)&v101 + v46 + 4) = v74;
    v75 = *(_QWORD *)(v12 + 40);
    v76 = *(_BYTE **)v75;
    v69 = *(_QWORD *)(v75 + 8);
    if (*v76)
      goto LABEL_46;
LABEL_60:
    if ((v53 & 0x20000000) != 0)
      goto LABEL_30;
    v53 &= 0xCFFFFFFF;
    if (v53 >> 30)
      goto LABEL_30;
LABEL_32:
    *((_BYTE *)&v102[-1] + v46++) = sub_223CF6FF0((float32x2_t *)(*(_QWORD *)(v69 + 2448) + 520 * (v53 & 0xCFFFFFFF)), (uint64_t)&v103, v48, v44, *(double *)v47.i64, v45);
    if ((_DWORD)v14 != (_DWORD)v46)
      continue;
    break;
  }
LABEL_63:
  v77 = BYTE4(v101);
  if (BYTE4(v101) == BYTE5(v101))
  {
    v78 = BYTE1(v101);
    if (v101 == BYTE1(v101))
    {
      v79 = BYTE1(v101);
      v80 = *(_QWORD *)(v12 + 48);
      v100 = BYTE4(v101);
      v81 = *(_BYTE **)(v80 + 248);
      if ((unint64_t)v81 >= *(_QWORD *)(v80 + 256))
        goto LABEL_66;
LABEL_85:
      *v81 = v77;
      *(_QWORD *)(v80 + 248) = v81 + 1;
      v82 = *(_QWORD *)(v12 + 48);
      v100 = v79;
      v83 = *(_BYTE **)(v82 + 288);
      if ((unint64_t)v83 < *(_QWORD *)(v82 + 296))
        goto LABEL_86;
LABEL_67:
      result = sub_223984B3C(v82 + 280, &v100);
      *(_QWORD *)(v82 + 288) = result;
      if (!a2)
        return result;
LABEL_87:
      v88 = *(_QWORD *)(v12 + 48);
      v100 = v77;
      v89 = *(_BYTE **)(v88 + 248);
      if ((unint64_t)v89 >= *(_QWORD *)(v88 + 256))
      {
        *(_QWORD *)(v88 + 248) = sub_223984B3C(v88 + 240, &v100);
        v90 = *(_QWORD *)(v12 + 48);
        v100 = v79;
        v91 = *(_BYTE **)(v90 + 288);
        if ((unint64_t)v91 < *(_QWORD *)(v90 + 296))
          goto LABEL_91;
LABEL_89:
        result = sub_223984B3C(v90 + 280, &v100);
      }
      else
      {
        *v89 = v77;
        *(_QWORD *)(v88 + 248) = v89 + 1;
        v90 = *(_QWORD *)(v12 + 48);
        v100 = v79;
        v91 = *(_BYTE **)(v90 + 288);
        if ((unint64_t)v91 >= *(_QWORD *)(v90 + 296))
          goto LABEL_89;
LABEL_91:
        *v91 = v79;
        result = (uint64_t)(v91 + 1);
      }
      *(_QWORD *)(v90 + 288) = result;
      return result;
    }
    if (a2)
    {
      v85 = BYTE4(v101);
      v86 = BYTE2(v101);
      if (v101 != BYTE2(v101))
      {
LABEL_78:
        if (v78 != v86)
        {
          v87 = (char *)&v101 + 3;
          goto LABEL_84;
        }
      }
    }
    else
    {
      v85 = BYTE4(v101);
    }
LABEL_83:
    v87 = (char *)&v101 + 2;
  }
  else
  {
    v85 = BYTE6(v101);
    if (a2)
    {
      if (BYTE4(v101) != BYTE6(v101) && BYTE5(v101) != BYTE6(v101))
        v85 = HIBYTE(v101);
      v78 = BYTE1(v101);
      if (v101 != BYTE1(v101))
      {
        v86 = BYTE2(v101);
        if (v101 != BYTE2(v101))
          goto LABEL_78;
        goto LABEL_83;
      }
    }
    else if (v101 != BYTE1(v101))
    {
      goto LABEL_83;
    }
    v87 = (char *)&v101 + 1;
  }
LABEL_84:
  v77 = v85;
  v79 = *v87;
  v80 = *(_QWORD *)(v12 + 48);
  v100 = v85;
  v81 = *(_BYTE **)(v80 + 248);
  if ((unint64_t)v81 < *(_QWORD *)(v80 + 256))
    goto LABEL_85;
LABEL_66:
  *(_QWORD *)(v80 + 248) = sub_223984B3C(v80 + 240, &v100);
  v82 = *(_QWORD *)(v12 + 48);
  v100 = v79;
  v83 = *(_BYTE **)(v82 + 288);
  if ((unint64_t)v83 >= *(_QWORD *)(v82 + 296))
    goto LABEL_67;
LABEL_86:
  *v83 = v79;
  result = (uint64_t)(v83 + 1);
  *(_QWORD *)(v82 + 288) = result;
  if (a2)
    goto LABEL_87;
  return result;
}

unint64_t sub_223D93768(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t result;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _DWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;

  v7 = *a1;
  v10 = *(_QWORD *)(*a1 + 112);
  v8 = (unint64_t *)(*a1 + 112);
  v9 = v10;
  v11 = a1[2];
  v12 = *(_DWORD *)(a2 + 4 * a4[1]);
  v13 = *(_DWORD *)(a2 + 4 * a4[2]);
  LODWORD(v45) = *(_DWORD *)(a2 + 4 * *a4);
  HIDWORD(v45) = v12;
  v46 = v13;
  v14 = *(_QWORD *)(v7 + 120);
  if (v14 >= *(_QWORD *)(v7 + 128))
  {
    result = sub_2233B29C0(v8, &v45);
    *(_QWORD *)(v7 + 120) = result;
    if (*(_BYTE *)a1[1])
      return result;
  }
  else
  {
    v15 = v45;
    *(_DWORD *)(v14 + 8) = v46;
    *(_QWORD *)v14 = v15;
    result = v14 + 12;
    *(_QWORD *)(v7 + 120) = v14 + 12;
    if (*(_BYTE *)a1[1])
      return result;
  }
  v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v14 - v9) >> 2);
  v18 = **(unsigned int **)(a3 + 24 * *a4 + 16);
  if (!(v18 >> 30))
  {
    v19 = v18 & 0xCFFFFFFF;
    v20 = *(_QWORD *)(v11 + 2448);
    v21 = v20 + 520 * (v18 & 0xFFFFFFFFCFFFFFFFLL);
    v22 = *(unsigned int *)(v21 + 508);
    if (v22 >= 0xC)
    {
      *(_BYTE *)(v20 + 520 * v19 + 516) = 0;
    }
    else
    {
      v23 = (uint64_t *)a1[3];
      v24 = (_DWORD *)(v21 + 508);
      v25 = v20 + 520 * v19;
      *(_WORD *)(v25 + 2 * v22 + 340) = v17;
      v26 = v25 + 12 * v22 + 364;
      if ((uint64_t *)v26 != v23)
      {
        v22 = *v23;
        *(_DWORD *)(v26 + 8) = *((_DWORD *)v23 + 2);
        *(_QWORD *)v26 = v22;
        LODWORD(v22) = *v24;
      }
      *v24 = v22 + 1;
    }
  }
  v27 = **(unsigned int **)(a3 + 24 * a4[1] + 16);
  if (!(v27 >> 30))
  {
    v28 = v27 & 0xCFFFFFFF;
    v29 = *(_QWORD *)(v11 + 2448);
    v30 = v29 + 520 * (v27 & 0xFFFFFFFFCFFFFFFFLL);
    v31 = *(unsigned int *)(v30 + 508);
    if (v31 >= 0xC)
    {
      *(_BYTE *)(v29 + 520 * v28 + 516) = 0;
    }
    else
    {
      v32 = (uint64_t *)a1[3];
      v33 = (_DWORD *)(v30 + 508);
      v34 = v29 + 520 * v28;
      *(_WORD *)(v34 + 2 * v31 + 340) = v17;
      v35 = v34 + 12 * v31 + 364;
      if ((uint64_t *)v35 != v32)
      {
        v31 = *v32;
        *(_DWORD *)(v35 + 8) = *((_DWORD *)v32 + 2);
        *(_QWORD *)v35 = v31;
        LODWORD(v31) = *v33;
      }
      *v33 = v31 + 1;
    }
  }
  v36 = **(unsigned int **)(a3 + 24 * a4[2] + 16);
  if (!(v36 >> 30))
  {
    v37 = v36 & 0xCFFFFFFF;
    v38 = *(_QWORD *)(v11 + 2448);
    v39 = v38 + 520 * (v36 & 0xFFFFFFFFCFFFFFFFLL);
    v40 = *(unsigned int *)(v39 + 508);
    if (v40 >= 0xC)
    {
      *(_BYTE *)(v38 + 520 * v37 + 516) = 0;
    }
    else
    {
      v41 = (uint64_t *)a1[3];
      v42 = (_DWORD *)(v39 + 508);
      v43 = v38 + 520 * v37;
      *(_WORD *)(v43 + 2 * v40 + 340) = v17;
      v44 = v43 + 12 * v40 + 364;
      if ((uint64_t *)v44 != v41)
      {
        v40 = *v41;
        *(_DWORD *)(v44 + 8) = *((_DWORD *)v41 + 2);
        *(_QWORD *)v44 = v40;
        LODWORD(v40) = *v42;
      }
      *v42 = v40 + 1;
    }
  }
  return result;
}

uint64_t sub_223D939E8(unint64_t **a1, uint64_t *a2, int *a3, int *a4, float a5)
{
  uint64_t v10;
  int v17;
  int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _DWORD *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  unsigned int v33;
  unint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  float *v38;
  _DWORD *v39;
  unint64_t *v40;
  float v41;
  float v42;
  int v43;
  float v44;
  float v45;
  float v46;
  float v47;
  float v48;
  float v49;
  float v51;

  v10 = 0;
  v51 = a5;
  _X9 = *a2;
  __asm { PRFM            #4, [X9] }
  v17 = *a3;
  v18 = a3[1];
  v19 = a3[2];
  v20 = (19349669 * v18) ^ (73856093 * *a3) ^ (83492791 * v19);
  v21 = a2[3];
  v22 = (v20 >> 7) ^ 0x13701D;
  v23 = 0x101010101010101 * (v20 & 0x7F);
  v24 = a2[1];
  while (1)
  {
    v25 = v22 & v21;
    v26 = *(_QWORD *)(_X9 + v25);
    v27 = ((v26 ^ v23) - 0x101010101010101) & ~(v26 ^ v23) & 0x8080808080808080;
    if (v27)
      break;
LABEL_7:
    if ((v26 & (~v26 << 6) & 0x8080808080808080) != 0)
      goto LABEL_11;
    v10 += 8;
    v22 = v10 + v25;
  }
  while (1)
  {
    v28 = (_DWORD *)(v24 + 16 * ((v25 + (__clz(__rbit64(v27)) >> 3)) & v21));
    if (*v28 == v17 && v28[1] == v18 && v28[2] == v19)
      break;
    v27 &= v27 - 1;
    if (!v27)
      goto LABEL_7;
  }
  if (_X9)
    return v28[3];
LABEL_11:
  v29 = -1431655765 * (((*a1)[1] - **a1) >> 2);
  v30 = sub_223B299D8(a2, a3);
  if (v31)
  {
    v32 = (_QWORD *)(a2[1] + 16 * v30);
    v33 = a3[2];
    *v32 = *(_QWORD *)a3;
    v32[1] = v33;
  }
  *(_DWORD *)(a2[1] + 16 * v30 + 12) = v29;
  v34 = *a1;
  v35 = (*a1)[1];
  if (v35 >= (*a1)[2])
  {
    v34[1] = sub_2233B2B48(*a1, (uint64_t *)a4);
    v37 = *a1;
    v38 = (float *)(*a1)[41];
    if ((unint64_t)v38 >= (*a1)[42])
      goto LABEL_15;
LABEL_17:
    *v38 = a5;
    v39 = v38 + 1;
    goto LABEL_18;
  }
  v36 = *(_QWORD *)a4;
  *(_DWORD *)(v35 + 8) = a4[2];
  *(_QWORD *)v35 = v36;
  v34[1] = v35 + 12;
  v37 = *a1;
  v38 = (float *)(*a1)[41];
  if ((unint64_t)v38 < (*a1)[42])
    goto LABEL_17;
LABEL_15:
  v39 = sub_223A72B1C((uint64_t)(v37 + 40), &v51);
LABEL_18:
  v37[41] = (unint64_t)v39;
  v40 = a1[1];
  v41 = *(float *)a4;
  v42 = *((float *)v40 + 1);
  if (*(float *)a4 >= *(float *)v40)
    v41 = *(float *)v40;
  *(float *)v40 = v41;
  v43 = *a4;
  v44 = *((float *)v40 + 2);
  if (*((float *)v40 + 3) >= *(float *)a4)
    v43 = *((_DWORD *)v40 + 3);
  *((_DWORD *)v40 + 3) = v43;
  v45 = *((float *)a4 + 1);
  if (v45 >= v42)
    v45 = v42;
  *((float *)v40 + 1) = v45;
  v46 = *((float *)a4 + 1);
  v47 = *((float *)v40 + 5);
  if (*((float *)v40 + 4) >= v46)
    v46 = *((float *)v40 + 4);
  *((float *)v40 + 4) = v46;
  v48 = *((float *)a4 + 2);
  if (v48 >= v44)
    v48 = v44;
  *((float *)v40 + 2) = v48;
  v49 = *((float *)a4 + 2);
  if (v47 >= v49)
    v49 = v47;
  *((float *)v40 + 5) = v49;
  return v29;
}

unint64_t sub_223D93C60(uint64_t a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v6;
  _BYTE **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  _BYTE **v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  _BYTE **v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  _BYTE **v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  _BYTE **v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  _BYTE **v54;
  unint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  unsigned int v58;
  uint64_t v59;
  _BYTE **v60;
  unint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  unsigned int v64;
  uint64_t v65;
  _BYTE **v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  _BYTE *v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  _DWORD *v77;
  __int128 v78;
  float32x4_t v79;
  unint64_t v80;
  uint64_t v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unint64_t v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int v89;
  unint64_t v90;
  uint64_t v91;
  unsigned int v92;
  _BYTE **v93;
  unsigned int v94;
  _BOOL4 v95;
  _BOOL4 v96;
  _BOOL4 v97;
  _BOOL4 v98;
  unint64_t v99;
  uint64_t v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unint64_t v105;
  uint64_t v106;
  unsigned int v107;
  unsigned int v108;
  unint64_t v109;
  uint64_t v110;
  unsigned int v111;
  unsigned int v112;
  _BOOL4 v113;
  _BOOL4 v114;
  _BOOL4 v115;
  _BOOL4 v116;
  unint64_t v117;
  uint64_t v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unint64_t v123;
  uint64_t v124;
  unsigned int v125;
  unsigned int v126;
  unint64_t v127;
  uint64_t v128;
  unsigned int v129;
  unsigned int v130;
  _BOOL4 v131;
  _BOOL4 v132;
  _BOOL4 v133;
  _BOOL4 v134;
  unint64_t v135;
  uint64_t v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unint64_t v141;
  uint64_t v142;
  unsigned int v143;
  unsigned int v144;
  unint64_t v145;
  uint64_t v146;
  unsigned int v147;
  unsigned int v148;
  _BOOL4 v149;
  _BOOL4 v150;
  _BOOL4 v151;
  _BOOL4 v152;
  unint64_t v153;
  uint64_t v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unint64_t v159;
  uint64_t v160;
  unsigned int v161;
  unsigned int v162;
  unint64_t v163;
  uint64_t v164;
  unsigned int v165;
  unsigned int v166;
  _BOOL4 v167;
  _BOOL4 v168;
  _BOOL4 v169;
  _BOOL4 v170;
  unint64_t v171;
  uint64_t v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unint64_t v177;
  uint64_t v178;
  unsigned int v179;
  unsigned int v180;
  unint64_t v181;
  uint64_t v182;
  unsigned int v183;
  unsigned int v184;
  _BOOL4 v185;
  _BOOL4 v186;
  _BOOL4 v187;
  _BOOL4 v188;
  unint64_t v189;
  uint64_t v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unint64_t v195;
  uint64_t v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unint64_t v200;
  uint64_t v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  _BOOL4 v206;
  _BOOL4 v207;
  _BOOL4 v208;
  _BOOL4 v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _BYTE *v213;
  unsigned int v214;
  int v215;
  unint64_t v216;
  uint64_t v217;
  unsigned int v218;
  unint64_t v219;
  uint64_t v220;
  unsigned int v221;
  unint64_t v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unsigned int v249;
  _BOOL4 v250;
  _BOOL4 v251;
  _BOOL4 v252;
  _BOOL4 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  __int128 *v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  uint64_t v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  _BYTE **v306;
  unsigned int v307;
  _OWORD v308[5];
  __int128 v309;
  uint64_t v310;
  __int128 v311;
  uint64_t v312;
  __int128 v313;
  float32x4_t v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  float32x4_t v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  float32x4_t v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  float32x4_t v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  float32x4_t v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  float32x4_t v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  float32x4_t v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  float32x4_t v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  float32x4_t v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  float32x4_t v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  float32x4_t v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  float32x4_t v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  float32x4_t v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  float32x4_t v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  float32x4_t v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  float32x4_t v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  float32x4_t v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  float32x4_t v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  float32x4_t v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  float32x4_t v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  float32x4_t v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  float32x4_t v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  float32x4_t v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  uint64_t v428;
  _OWORD v429[2];
  _QWORD v430[3];

  v430[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v7 = (_BYTE **)a2[2];
  v8 = *(unsigned int *)(a2[1] + 48);
  if ((v8 & 0x80000000) != 0)
  {
    v10 = v6 + 280;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 2328);
    if (v8 >= (*(_QWORD *)(v6 + 2336) - v9) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v9 = *(_QWORD *)(v6 + 2328);
    }
    v10 = v9 + (v8 << 11);
  }
  v11 = *(_DWORD *)(v10 + 1824);
  v12 = v11 & 0xCFFFFFFF;
  if ((v11 & 0x10000000) != 0)
    v13 = 0x40000000;
  else
    v13 = 0x80000000;
  if ((v11 & 0x20000000) != 0)
    v12 = v13;
  if (**v7)
    v14 = v11;
  else
    v14 = v12;
  v15 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 32);
  v16 = v15 & 0xCFFFFFFF;
  if ((v15 & 0x10000000) != 0)
    v17 = 0x40000000;
  else
    v17 = 0x80000000;
  if ((v15 & 0x20000000) != 0)
    v16 = v17;
  if (***(_BYTE ***)a1)
    v18 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 32);
  else
    v18 = v16;
  v19 = *a2;
  v20 = (_BYTE **)a2[2];
  v21 = *(unsigned int *)(a2[1] + 48);
  if ((v21 & 0x80000000) != 0)
  {
    v23 = v19 + 280;
  }
  else
  {
    v22 = *(_QWORD *)(v19 + 2328);
    if (v21 >= (*(_QWORD *)(v19 + 2336) - v22) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v22 = *(_QWORD *)(v19 + 2328);
    }
    v23 = v22 + (v21 << 11);
  }
  v24 = *(_DWORD *)(v23 + 1856);
  v25 = v24 & 0xCFFFFFFF;
  if ((v24 & 0x10000000) != 0)
    v26 = 0x40000000;
  else
    v26 = 0x80000000;
  if ((v24 & 0x20000000) != 0)
    v25 = v26;
  if (**v20)
    v27 = v24;
  else
    v27 = v25;
  v28 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 64);
  v29 = v28 & 0xCFFFFFFF;
  if ((v28 & 0x10000000) != 0)
    v30 = 0x40000000;
  else
    v30 = 0x80000000;
  if ((v28 & 0x20000000) != 0)
    v29 = v30;
  if (***(_BYTE ***)a1)
    v31 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 64);
  else
    v31 = v29;
  v32 = *a2;
  v33 = (_BYTE **)a2[2];
  v34 = *(unsigned int *)(a2[1] + 48);
  v300 = v18;
  v291 = v27;
  v294 = v14;
  if ((v34 & 0x80000000) != 0)
  {
    v36 = v32 + 280;
  }
  else
  {
    v35 = *(_QWORD *)(v32 + 2328);
    if (v34 >= (*(_QWORD *)(v32 + 2336) - v35) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v35 = *(_QWORD *)(v32 + 2328);
    }
    v36 = v35 + (v34 << 11);
  }
  v37 = *(_DWORD *)(v36 + 1888);
  v38 = v37 & 0xCFFFFFFF;
  if ((v37 & 0x10000000) != 0)
    v39 = 0x40000000;
  else
    v39 = 0x80000000;
  if ((v37 & 0x20000000) != 0)
    v38 = v39;
  if (**v33)
    v40 = v37;
  else
    v40 = v38;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (_BYTE **)a2[2];
  v278 = a1;
  v297 = v31;
  v288 = v40;
  if ((v31 & 0x40000000) == 0)
  {
    v264 = 0;
    v44 = 0;
    v273 = 0;
    v285 = 0;
    v260 = 0;
    goto LABEL_127;
  }
  v45 = v42[3];
  if ((v45 & 0x80000000) != 0)
  {
    v47 = *(_DWORD *)(v41 + 2132);
    if (**v43)
      goto LABEL_66;
  }
  else
  {
    v46 = *(_QWORD *)(v41 + 2328);
    if (v45 >= (*(_QWORD *)(v41 + 2336) - v46) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v46 = *(_QWORD *)(v41 + 2328);
    }
    v47 = *(_DWORD *)(v46 + (v45 << 11) + 1852);
    if (**v43)
    {
LABEL_66:
      v48 = *a2;
      v49 = (_BYTE **)a2[2];
      v50 = *(unsigned int *)(a2[1] + 16);
      if ((v50 & 0x80000000) == 0)
        goto LABEL_67;
LABEL_94:
      v52 = *(_DWORD *)(v48 + 340);
      if (**v49)
        goto LABEL_71;
      goto LABEL_95;
    }
  }
  if ((v47 & 0x10000000) != 0)
    v70 = 0x40000000;
  else
    v70 = 0x80000000;
  if ((v47 & 0x20000000) != 0)
    v47 = v70;
  else
    v47 &= 0xCFFFFFFF;
  v48 = *a2;
  v49 = (_BYTE **)a2[2];
  v50 = *(unsigned int *)(a2[1] + 16);
  if ((v50 & 0x80000000) != 0)
    goto LABEL_94;
LABEL_67:
  v51 = *(_QWORD *)(v48 + 2328);
  if (v50 >= (*(_QWORD *)(v48 + 2336) - v51) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v51 = *(_QWORD *)(v48 + 2328);
  }
  v52 = *(_DWORD *)(v51 + (v50 << 11) + 60);
  if (**v49)
  {
LABEL_71:
    v53 = *a2;
    v54 = (_BYTE **)a2[2];
    v55 = *(unsigned int *)(a2[1] + 12);
    if ((v55 & 0x80000000) == 0)
      goto LABEL_72;
LABEL_102:
    v57 = a3;
    v58 = *(_DWORD *)(v53 + 2164);
    if (**v54)
      goto LABEL_76;
    goto LABEL_103;
  }
LABEL_95:
  if ((v52 & 0x10000000) != 0)
    v71 = 0x40000000;
  else
    v71 = 0x80000000;
  if ((v52 & 0x20000000) != 0)
    v52 = v71;
  else
    v52 &= 0xCFFFFFFF;
  v53 = *a2;
  v54 = (_BYTE **)a2[2];
  v55 = *(unsigned int *)(a2[1] + 12);
  if ((v55 & 0x80000000) != 0)
    goto LABEL_102;
LABEL_72:
  v56 = *(_QWORD *)(v53 + 2328);
  if (v55 >= (*(_QWORD *)(v53 + 2336) - v56) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v56 = *(_QWORD *)(v53 + 2328);
  }
  v57 = a3;
  v58 = *(_DWORD *)(v56 + (v55 << 11) + 1884);
  if (**v54)
  {
LABEL_76:
    v59 = *a2;
    v60 = (_BYTE **)a2[2];
    v61 = *(unsigned int *)(a2[1] + 16);
    if ((v61 & 0x80000000) == 0)
      goto LABEL_77;
LABEL_110:
    v73 = *v60;
    v64 = *(_DWORD *)(v59 + 372);
    if (*v73)
      goto LABEL_81;
LABEL_111:
    if ((v64 & 0x10000000) != 0)
      v74 = 0x40000000;
    else
      v74 = 0x80000000;
    if ((v64 & 0x20000000) != 0)
      v64 = v74;
    else
      v64 &= 0xCFFFFFFF;
    v65 = *a2;
    v66 = (_BYTE **)a2[2];
    v67 = *(unsigned int *)(a2[1] + 12);
    if ((v67 & 0x80000000) == 0)
      goto LABEL_82;
    goto LABEL_118;
  }
LABEL_103:
  if ((v58 & 0x10000000) != 0)
    v72 = 0x40000000;
  else
    v72 = 0x80000000;
  if ((v58 & 0x20000000) != 0)
    v58 = v72;
  else
    v58 &= 0xCFFFFFFF;
  v59 = *a2;
  v60 = (_BYTE **)a2[2];
  v61 = *(unsigned int *)(a2[1] + 16);
  if ((v61 & 0x80000000) != 0)
    goto LABEL_110;
LABEL_77:
  v62 = *(_QWORD *)(v59 + 2328);
  if (v61 >= (*(_QWORD *)(v59 + 2336) - v62) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v62 = *(_QWORD *)(v59 + 2328);
  }
  v63 = *v60;
  v64 = *(_DWORD *)(v62 + (v61 << 11) + 92);
  if (!*v63)
    goto LABEL_111;
LABEL_81:
  v65 = *a2;
  v66 = (_BYTE **)a2[2];
  v67 = *(unsigned int *)(a2[1] + 12);
  if ((v67 & 0x80000000) == 0)
  {
LABEL_82:
    v68 = *(_QWORD *)(v65 + 2328);
    if (v67 >= (*(_QWORD *)(v65 + 2336) - v68) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v68 = *(_QWORD *)(v65 + 2328);
    }
    v69 = v68 + (v67 << 11);
    goto LABEL_119;
  }
LABEL_118:
  v69 = v65 + 280;
LABEL_119:
  v260 = (v47 >> 30) & 1;
  v285 = (v52 >> 30) & 1;
  v273 = (v58 >> 30) & 1;
  v44 = (v64 >> 30) & 1;
  v75 = *(_DWORD *)(v69 + 1916);
  a3 = v57;
  if (!**v66)
  {
    if ((v75 & 0x10000000) != 0)
      v76 = 0x40000000;
    else
      v76 = 0x80000000;
    if ((v75 & 0x20000000) != 0)
      v75 = v76;
    else
      v75 &= 0xCFFFFFFF;
  }
  v264 = (v75 >> 30) & 1;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (_BYTE **)a2[2];
  a1 = v278;
LABEL_127:
  v306 = *(_BYTE ***)a1;
  v77 = *(_DWORD **)(a1 + 16);
  v78 = a3[3];
  v315 = a3[2];
  v316 = v78;
  v317 = a3[4];
  v79 = *((float32x4_t *)a3 + 1);
  v313 = *a3;
  v314 = v79;
  v80 = v42[12];
  if ((v80 & 0x80000000) != 0)
  {
    v269 = a3;
    v82 = *(_DWORD *)(v41 + 2108);
    v83 = **v43;
    if (**v43)
      goto LABEL_138;
    goto LABEL_132;
  }
  v81 = *(_QWORD *)(v41 + 2328);
  if (v80 >= (*(_QWORD *)(v41 + 2336) - v81) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v81 = *(_QWORD *)(v41 + 2328);
  }
  v269 = a3;
  v82 = *(_DWORD *)(v81 + (v80 << 11) + 1828);
  v83 = **v43;
  if (!**v43)
  {
LABEL_132:
    if ((v82 & 0x10000000) != 0)
      v84 = 0x40000000;
    else
      v84 = 0x80000000;
    if ((v82 & 0x20000000) != 0)
      v82 = v84;
    else
      v82 &= 0xCFFFFFFF;
  }
LABEL_138:
  v85 = v77[9];
  if (**v306)
  {
    v86 = v42[12];
    if ((v86 & 0x80000000) == 0)
      goto LABEL_140;
LABEL_594:
    v88 = *(_DWORD *)(v41 + 2140);
    if (v83)
      goto LABEL_150;
    goto LABEL_144;
  }
  if ((v85 & 0x10000000) != 0)
    v223 = 0x40000000;
  else
    v223 = 0x80000000;
  if ((v85 & 0x20000000) != 0)
    v85 = v223;
  else
    v85 &= 0xCFFFFFFF;
  v86 = v42[12];
  if ((v86 & 0x80000000) != 0)
    goto LABEL_594;
LABEL_140:
  v87 = *(_QWORD *)(v41 + 2328);
  if (v86 >= (*(_QWORD *)(v41 + 2336) - v87) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v87 = *(_QWORD *)(v41 + 2328);
    v83 = **v43;
  }
  v88 = *(_DWORD *)(v87 + (v86 << 11) + 1860);
  if (!v83)
  {
LABEL_144:
    if ((v88 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v88 & 0x20000000) != 0)
      v88 = v89;
    else
      v88 &= 0xCFFFFFFF;
  }
LABEL_150:
  v303 = v77[17];
  if (**v306)
  {
    v90 = v42[12];
    if ((v90 & 0x80000000) == 0)
      goto LABEL_152;
LABEL_602:
    v261 = v294 >> 30;
    v92 = *(_DWORD *)(v41 + 2172);
    v93 = v43;
    if (v83)
      goto LABEL_162;
    goto LABEL_156;
  }
  v224 = v303 & 0xCFFFFFFF;
  if ((v303 & 0x10000000) != 0)
    v225 = 0x40000000;
  else
    v225 = 0x80000000;
  if ((v303 & 0x20000000) != 0)
    v224 = v225;
  v303 = v224;
  v90 = v42[12];
  if ((v90 & 0x80000000) != 0)
    goto LABEL_602;
LABEL_152:
  v91 = *(_QWORD *)(v41 + 2328);
  if (v90 < (*(_QWORD *)(v41 + 2336) - v91) >> 11)
    goto LABEL_155;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
LABEL_788:
    abort();
  }
  v91 = *(_QWORD *)(v41 + 2328);
  v83 = **v43;
LABEL_155:
  v261 = v294 >> 30;
  v92 = *(_DWORD *)(v91 + (v90 << 11) + 1892);
  v93 = v43;
  if (v83)
    goto LABEL_162;
LABEL_156:
  if ((v92 & 0x10000000) != 0)
    v94 = 0x40000000;
  else
    v94 = 0x80000000;
  if ((v92 & 0x20000000) != 0)
    v92 = v94;
  else
    v92 &= 0xCFFFFFFF;
LABEL_162:
  v267 = v82 >> 30;
  v279 = v291 >> 30;
  v282 = v300 >> 30;
  v270 = v288 >> 30;
  v292 = v88 >> 30;
  v295 = v85 >> 30;
  v276 = v92 >> 30;
  v325 = v315;
  v326 = v316;
  v327 = v317;
  v323 = v313;
  v324 = v314;
  if ((v297 & 0x40000000) != 0)
  {
    v375 = v315;
    v376 = v316;
    v377 = v317;
    v374 = v314;
    v373 = v313;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224670C40;
    v369 = xmmword_224670C50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 0, 2, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5000000010), xmmword_224670C50);
    if (!v44)
    {
      v370 = v315;
      v371 = v316;
      v372 = v317;
      *(_QWORD *)&v418 = 0x4040D0D04040D0DLL;
      v369 = v314;
      v368 = v313;
      v423 = xmmword_224670C60;
      v424 = xmmword_224670C70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 0, 2, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5000000010), xmmword_224670C70);
      if (!(v285 | ((v300 & 0x40000000) != 0)))
      {
        v425 = v315;
        v426 = v316;
        v427 = v317;
        v423 = v313;
        v424 = v314;
        *(_QWORD *)&v413 = 0x40404040D0D0D0DLL;
        v418 = xmmword_224670C80;
        v419 = xmmword_224670C90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 0, 2, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5000000010), xmmword_224670C90);
        v95 = (v261 & 1) == 0 && (v273 | v279 & 1) == 0;
        if (!v260 && v95)
        {
          v420 = v315;
          v421 = v316;
          v422 = v317;
          v419 = v314;
          v418 = v313;
          *(_QWORD *)&v408 = 0x3040C0D03040C0DLL;
          v413 = xmmword_224670CA0;
          v414 = xmmword_224670CB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 0, 2, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1D000000010), xmmword_224670CB0);
        }
      }
      if (v264)
        v96 = 0;
      else
        v96 = (v273 | v279 & 1) == 0;
      if (v96 && (v288 & 0x40000000) == 0)
      {
        v415 = v325;
        v416 = v326;
        v417 = v327;
        v414 = v324;
        v413 = v323;
        *(_QWORD *)&v403 = 0x30403040C0D0C0DLL;
        v408 = xmmword_224670CC0;
        v409 = xmmword_224670CD0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 0, 2, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1D000000010), xmmword_224670CD0);
      }
    }
    if (((v282 | v295) & 1) == 0)
    {
      v410 = v325;
      v411 = v326;
      v412 = v327;
      v409 = v324;
      v408 = v323;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_224670CE0;
      v404 = xmmword_224670CF0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 0, 2, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5000000010), xmmword_224670CF0);
      v97 = (v82 & 0x40000000) == 0 && ((v279 | v292) & 1) == 0;
      if ((v261 & 1) == 0 && v97)
      {
        v405 = v325;
        v406 = v326;
        v407 = v327;
        v404 = v324;
        v403 = v323;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224670D00;
        v399 = xmmword_224670D10;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 0, 2, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1D000000010), xmmword_224670D10);
      }
    }
    v98 = (v288 & 0x40000000) == 0 && ((v279 | v292) & 1) == 0;
    if (v98 && (v276 & 1) == 0)
    {
      v400 = v325;
      v401 = v326;
      v402 = v327;
      v399 = v324;
      v398 = v323;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224670D20;
      v394 = xmmword_224670D30;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 0, 2, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1D000000010), xmmword_224670D30);
    }
  }
  v320 = v315;
  v321 = v316;
  v322 = v317;
  v318 = v313;
  v319 = v314;
  v99 = v42[12];
  if ((v99 & 0x80000000) != 0)
  {
    v101 = *(_DWORD *)(v41 + 2112);
    v102 = **v93;
    if (**v93)
      goto LABEL_201;
    goto LABEL_195;
  }
  v100 = *(_QWORD *)(v41 + 2328);
  if (v99 >= (*(_QWORD *)(v41 + 2336) - v100) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v100 = *(_QWORD *)(v41 + 2328);
  }
  v101 = *(_DWORD *)(v100 + (v99 << 11) + 1832);
  v102 = **v93;
  if (!**v93)
  {
LABEL_195:
    if ((v101 & 0x10000000) != 0)
      v103 = 0x40000000;
    else
      v103 = 0x80000000;
    if ((v101 & 0x20000000) != 0)
      v101 = v103;
    else
      v101 &= 0xCFFFFFFF;
  }
LABEL_201:
  v104 = v77[10];
  if (**v306)
  {
    v105 = v42[12];
    if ((v105 & 0x80000000) == 0)
      goto LABEL_203;
LABEL_613:
    v107 = *(_DWORD *)(v41 + 2144);
    if (v102)
      goto LABEL_213;
    goto LABEL_207;
  }
  if ((v104 & 0x10000000) != 0)
    v226 = 0x40000000;
  else
    v226 = 0x80000000;
  if ((v104 & 0x20000000) != 0)
    v104 = v226;
  else
    v104 &= 0xCFFFFFFF;
  v105 = v42[12];
  if ((v105 & 0x80000000) != 0)
    goto LABEL_613;
LABEL_203:
  v106 = *(_QWORD *)(v41 + 2328);
  if (v105 >= (*(_QWORD *)(v41 + 2336) - v106) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v106 = *(_QWORD *)(v41 + 2328);
    v102 = **v93;
  }
  v107 = *(_DWORD *)(v106 + (v105 << 11) + 1864);
  if (!v102)
  {
LABEL_207:
    if ((v107 & 0x10000000) != 0)
      v108 = 0x40000000;
    else
      v108 = 0x80000000;
    if ((v107 & 0x20000000) != 0)
      v107 = v108;
    else
      v107 &= 0xCFFFFFFF;
  }
LABEL_213:
  v301 = v77[18];
  if (**v306)
  {
    v109 = v42[12];
    if ((v109 & 0x80000000) == 0)
      goto LABEL_215;
LABEL_621:
    v111 = *(_DWORD *)(v41 + 2176);
    if (v102)
      goto LABEL_225;
    goto LABEL_219;
  }
  v227 = v301 & 0xCFFFFFFF;
  if ((v301 & 0x10000000) != 0)
    v228 = 0x40000000;
  else
    v228 = 0x80000000;
  if ((v301 & 0x20000000) != 0)
    v227 = v228;
  v301 = v227;
  v109 = v42[12];
  if ((v109 & 0x80000000) != 0)
    goto LABEL_621;
LABEL_215:
  v110 = *(_QWORD *)(v41 + 2328);
  if (v109 >= (*(_QWORD *)(v41 + 2336) - v110) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v110 = *(_QWORD *)(v41 + 2328);
    v102 = **v93;
  }
  v111 = *(_DWORD *)(v110 + (v109 << 11) + 1896);
  if (!v102)
  {
LABEL_219:
    if ((v111 & 0x10000000) != 0)
      v112 = 0x40000000;
    else
      v112 = 0x80000000;
    if ((v111 & 0x20000000) != 0)
      v111 = v112;
    else
      v111 &= 0xCFFFFFFF;
  }
LABEL_225:
  v265 = v101 >> 30;
  v286 = v107 >> 30;
  v289 = v104 >> 30;
  v274 = v111 >> 30;
  v335 = v315;
  v336 = v316;
  v337 = v317;
  v333 = v313;
  v334 = v314;
  if ((v303 & 0x40000000) != 0)
  {
    v375 = v315;
    v376 = v316;
    v377 = v317;
    v374 = v314;
    v373 = v313;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224670D40;
    v369 = xmmword_224670D50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 1, 2, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5100000011), xmmword_224670D50);
    if ((v297 & 0x40000000) == 0)
    {
      v370 = v315;
      v371 = v316;
      v372 = v317;
      v369 = v314;
      v368 = v313;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224670D60;
      v424 = xmmword_224670D70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 1, 2, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5100000011), xmmword_224670D70);
      if (((v282 | v295) & 1) == 0)
      {
        v425 = v315;
        v426 = v316;
        v427 = v317;
        v423 = v313;
        v424 = v314;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224670D80;
        v419 = xmmword_224670D90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 1, 2, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5100000011), xmmword_224670D90);
        v113 = (v267 & 1) == 0 && ((v279 | v292) & 1) == 0;
        if ((v261 & 1) == 0 && v113)
        {
          v420 = v315;
          v421 = v316;
          v422 = v317;
          v419 = v314;
          v418 = v313;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_224670DA0;
          v414 = xmmword_224670DB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 1, 2, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1D100000011), xmmword_224670DB0);
        }
      }
      v114 = (v270 & 1) == 0 && ((v279 | v292) & 1) == 0;
      if (v114 && (v276 & 1) == 0)
      {
        v415 = v335;
        v416 = v336;
        v417 = v337;
        v414 = v334;
        v413 = v333;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_224670DC0;
        v409 = xmmword_224670DD0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 1, 2, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1D100000011), xmmword_224670DD0);
      }
    }
    if (((v295 | v289) & 1) == 0)
    {
      v410 = v335;
      v411 = v336;
      v412 = v337;
      v409 = v334;
      v408 = v333;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_224670DE0;
      v404 = xmmword_224670DF0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 1, 2, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5100000011), xmmword_224670DF0);
      v115 = (v101 & 0x40000000) == 0 && ((v292 | v286) & 1) == 0;
      if ((v267 & 1) == 0 && v115)
      {
        v405 = v335;
        v406 = v336;
        v407 = v337;
        v404 = v334;
        v403 = v333;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224670E00;
        v399 = xmmword_224670E10;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 1, 2, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1D100000011), xmmword_224670E10);
      }
    }
    v116 = (v276 & 1) == 0 && ((v292 | v286) & 1) == 0;
    if (v116 && (v274 & 1) == 0)
    {
      v400 = v335;
      v401 = v336;
      v402 = v337;
      v399 = v334;
      v398 = v333;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224670E20;
      v394 = xmmword_224670E30;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 1, 2, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1D100000011), xmmword_224670E30);
    }
  }
  v330 = v320;
  v331 = v321;
  v332 = v322;
  v328 = v318;
  v329 = v319;
  v117 = v42[12];
  if ((v117 & 0x80000000) != 0)
  {
    v119 = *(_DWORD *)(v41 + 2116);
    v120 = **v93;
    if (**v93)
      goto LABEL_264;
    goto LABEL_258;
  }
  v118 = *(_QWORD *)(v41 + 2328);
  if (v117 >= (*(_QWORD *)(v41 + 2336) - v118) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v118 = *(_QWORD *)(v41 + 2328);
  }
  v119 = *(_DWORD *)(v118 + (v117 << 11) + 1836);
  v120 = **v93;
  if (!**v93)
  {
LABEL_258:
    if ((v119 & 0x10000000) != 0)
      v121 = 0x40000000;
    else
      v121 = 0x80000000;
    if ((v119 & 0x20000000) != 0)
      v119 = v121;
    else
      v119 &= 0xCFFFFFFF;
  }
LABEL_264:
  v122 = v77[11];
  if (**v306)
  {
    v123 = v42[12];
    if ((v123 & 0x80000000) == 0)
      goto LABEL_266;
LABEL_632:
    v125 = *(_DWORD *)(v41 + 2148);
    if (v120)
      goto LABEL_276;
    goto LABEL_270;
  }
  if ((v122 & 0x10000000) != 0)
    v229 = 0x40000000;
  else
    v229 = 0x80000000;
  if ((v122 & 0x20000000) != 0)
    v122 = v229;
  else
    v122 &= 0xCFFFFFFF;
  v123 = v42[12];
  if ((v123 & 0x80000000) != 0)
    goto LABEL_632;
LABEL_266:
  v124 = *(_QWORD *)(v41 + 2328);
  if (v123 >= (*(_QWORD *)(v41 + 2336) - v124) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v124 = *(_QWORD *)(v41 + 2328);
    v120 = **v93;
  }
  v125 = *(_DWORD *)(v124 + (v123 << 11) + 1868);
  if (!v120)
  {
LABEL_270:
    if ((v125 & 0x10000000) != 0)
      v126 = 0x40000000;
    else
      v126 = 0x80000000;
    if ((v125 & 0x20000000) != 0)
      v125 = v126;
    else
      v125 &= 0xCFFFFFFF;
  }
LABEL_276:
  v298 = v77[19];
  if (**v306)
  {
    v127 = v42[12];
    if ((v127 & 0x80000000) == 0)
      goto LABEL_278;
LABEL_640:
    v129 = *(_DWORD *)(v41 + 2180);
    if (v120)
      goto LABEL_288;
    goto LABEL_282;
  }
  v230 = v298 & 0xCFFFFFFF;
  if ((v298 & 0x10000000) != 0)
    v231 = 0x40000000;
  else
    v231 = 0x80000000;
  if ((v298 & 0x20000000) != 0)
    v230 = v231;
  v298 = v230;
  v127 = v42[12];
  if ((v127 & 0x80000000) != 0)
    goto LABEL_640;
LABEL_278:
  v128 = *(_QWORD *)(v41 + 2328);
  if (v127 >= (*(_QWORD *)(v41 + 2336) - v128) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v128 = *(_QWORD *)(v41 + 2328);
    v120 = **v93;
  }
  v129 = *(_DWORD *)(v128 + (v127 << 11) + 1900);
  if (!v120)
  {
LABEL_282:
    if ((v129 & 0x10000000) != 0)
      v130 = 0x40000000;
    else
      v130 = 0x80000000;
    if ((v129 & 0x20000000) != 0)
      v129 = v130;
    else
      v129 &= 0xCFFFFFFF;
  }
LABEL_288:
  v262 = v119 >> 30;
  v280 = v125 >> 30;
  v283 = v122 >> 30;
  v271 = v129 >> 30;
  v345 = v320;
  v346 = v321;
  v347 = v322;
  v343 = v318;
  v344 = v319;
  if ((v301 & 0x40000000) != 0)
  {
    v375 = v320;
    v376 = v321;
    v377 = v322;
    v374 = v319;
    v373 = v318;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224670E40;
    v369 = xmmword_224670E50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 2, 2, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5200000012), xmmword_224670E50);
    if ((v303 & 0x40000000) == 0)
    {
      v370 = v320;
      v371 = v321;
      v372 = v322;
      v369 = v319;
      v368 = v318;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224670E60;
      v424 = xmmword_224670E70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 2, 2, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5200000012), xmmword_224670E70);
      if (((v295 | v289) & 1) == 0)
      {
        v425 = v320;
        v426 = v321;
        v427 = v322;
        v423 = v318;
        v424 = v319;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224670E80;
        v419 = xmmword_224670E90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 2, 2, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5200000012), xmmword_224670E90);
        v131 = (v265 & 1) == 0 && ((v292 | v286) & 1) == 0;
        if ((v267 & 1) == 0 && v131)
        {
          v420 = v320;
          v421 = v321;
          v422 = v322;
          v419 = v319;
          v418 = v318;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_224670EA0;
          v414 = xmmword_224670EB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 2, 2, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1D200000012), xmmword_224670EB0);
        }
      }
      v132 = (v276 & 1) == 0 && ((v292 | v286) & 1) == 0;
      if (v132 && (v274 & 1) == 0)
      {
        v415 = v345;
        v416 = v346;
        v417 = v347;
        v414 = v344;
        v413 = v343;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_224670EC0;
        v409 = xmmword_224670ED0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 2, 2, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1D200000012), xmmword_224670ED0);
      }
    }
    if (((v289 | v283) & 1) == 0)
    {
      v410 = v345;
      v411 = v346;
      v412 = v347;
      v409 = v344;
      v408 = v343;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_224670EE0;
      v404 = xmmword_224670EF0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 2, 2, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5200000012), xmmword_224670EF0);
      v133 = (v119 & 0x40000000) == 0 && ((v286 | v280) & 1) == 0;
      if ((v265 & 1) == 0 && v133)
      {
        v405 = v345;
        v406 = v346;
        v407 = v347;
        v404 = v344;
        v403 = v343;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224670F00;
        v399 = xmmword_224670F10;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 2, 2, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1D200000012), xmmword_224670F10);
      }
    }
    v134 = (v274 & 1) == 0 && ((v286 | v280) & 1) == 0;
    if (v134 && (v271 & 1) == 0)
    {
      v400 = v345;
      v401 = v346;
      v402 = v347;
      v399 = v344;
      v398 = v343;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224670F20;
      v394 = xmmword_224670F30;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 2, 2, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1D200000012), xmmword_224670F30);
    }
  }
  v340 = v330;
  v341 = v331;
  v342 = v332;
  v338 = v328;
  v339 = v329;
  v135 = v42[12];
  if ((v135 & 0x80000000) != 0)
  {
    v137 = *(_DWORD *)(v41 + 2120);
    v138 = **v93;
    if (**v93)
      goto LABEL_327;
    goto LABEL_321;
  }
  v136 = *(_QWORD *)(v41 + 2328);
  if (v135 >= (*(_QWORD *)(v41 + 2336) - v136) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v136 = *(_QWORD *)(v41 + 2328);
  }
  v137 = *(_DWORD *)(v136 + (v135 << 11) + 1840);
  v138 = **v93;
  if (!**v93)
  {
LABEL_321:
    if ((v137 & 0x10000000) != 0)
      v139 = 0x40000000;
    else
      v139 = 0x80000000;
    if ((v137 & 0x20000000) != 0)
      v137 = v139;
    else
      v137 &= 0xCFFFFFFF;
  }
LABEL_327:
  v140 = v77[12];
  if (**v306)
  {
    v141 = v42[12];
    if ((v141 & 0x80000000) == 0)
      goto LABEL_329;
LABEL_651:
    v143 = *(_DWORD *)(v41 + 2152);
    if (v138)
      goto LABEL_339;
    goto LABEL_333;
  }
  if ((v140 & 0x10000000) != 0)
    v232 = 0x40000000;
  else
    v232 = 0x80000000;
  if ((v140 & 0x20000000) != 0)
    v140 = v232;
  else
    v140 &= 0xCFFFFFFF;
  v141 = v42[12];
  if ((v141 & 0x80000000) != 0)
    goto LABEL_651;
LABEL_329:
  v142 = *(_QWORD *)(v41 + 2328);
  if (v141 >= (*(_QWORD *)(v41 + 2336) - v142) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v142 = *(_QWORD *)(v41 + 2328);
    v138 = **v93;
  }
  v143 = *(_DWORD *)(v142 + (v141 << 11) + 1872);
  if (!v138)
  {
LABEL_333:
    if ((v143 & 0x10000000) != 0)
      v144 = 0x40000000;
    else
      v144 = 0x80000000;
    if ((v143 & 0x20000000) != 0)
      v143 = v144;
    else
      v143 &= 0xCFFFFFFF;
  }
LABEL_339:
  v304 = v77[20];
  if (**v306)
  {
    v145 = v42[12];
    if ((v145 & 0x80000000) == 0)
      goto LABEL_341;
LABEL_659:
    v147 = *(_DWORD *)(v41 + 2184);
    if (v138)
      goto LABEL_351;
    goto LABEL_345;
  }
  v233 = v304 & 0xCFFFFFFF;
  if ((v304 & 0x10000000) != 0)
    v234 = 0x40000000;
  else
    v234 = 0x80000000;
  if ((v304 & 0x20000000) != 0)
    v233 = v234;
  v304 = v233;
  v145 = v42[12];
  if ((v145 & 0x80000000) != 0)
    goto LABEL_659;
LABEL_341:
  v146 = *(_QWORD *)(v41 + 2328);
  if (v145 >= (*(_QWORD *)(v41 + 2336) - v146) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v146 = *(_QWORD *)(v41 + 2328);
    v138 = **v93;
  }
  v147 = *(_DWORD *)(v146 + (v145 << 11) + 1904);
  if (!v138)
  {
LABEL_345:
    if ((v147 & 0x10000000) != 0)
      v148 = 0x40000000;
    else
      v148 = 0x80000000;
    if ((v147 & 0x20000000) != 0)
      v147 = v148;
    else
      v147 &= 0xCFFFFFFF;
  }
LABEL_351:
  v268 = v137 >> 30;
  v293 = v143 >> 30;
  v296 = v140 >> 30;
  v277 = v147 >> 30;
  v355 = v330;
  v356 = v331;
  v357 = v332;
  v353 = v328;
  v354 = v329;
  if ((v298 & 0x40000000) != 0)
  {
    v375 = v330;
    v376 = v331;
    v377 = v332;
    v374 = v329;
    v373 = v328;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224670F40;
    v369 = xmmword_224670F50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 3, 2, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5300000013), xmmword_224670F50);
    if ((v301 & 0x40000000) == 0)
    {
      v370 = v330;
      v371 = v331;
      v372 = v332;
      v369 = v329;
      v368 = v328;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224670F60;
      v424 = xmmword_224670F70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 3, 2, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5300000013), xmmword_224670F70);
      if (((v289 | v283) & 1) == 0)
      {
        v425 = v330;
        v426 = v331;
        v427 = v332;
        v423 = v328;
        v424 = v329;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224670F80;
        v419 = xmmword_224670F90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 3, 2, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5300000013), xmmword_224670F90);
        v149 = (v262 & 1) == 0 && ((v286 | v280) & 1) == 0;
        if ((v265 & 1) == 0 && v149)
        {
          v420 = v330;
          v421 = v331;
          v422 = v332;
          v419 = v329;
          v418 = v328;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_224670FA0;
          v414 = xmmword_224670FB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 3, 2, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1D300000013), xmmword_224670FB0);
        }
      }
      v150 = (v274 & 1) == 0 && ((v286 | v280) & 1) == 0;
      if (v150 && (v271 & 1) == 0)
      {
        v415 = v355;
        v416 = v356;
        v417 = v357;
        v414 = v354;
        v413 = v353;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_224670FC0;
        v409 = xmmword_224670FD0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 3, 2, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1D300000013), xmmword_224670FD0);
      }
    }
    if (((v283 | v296) & 1) == 0)
    {
      v410 = v355;
      v411 = v356;
      v412 = v357;
      v409 = v354;
      v408 = v353;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_224670FE0;
      v404 = xmmword_224670FF0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 3, 2, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5300000013), xmmword_224670FF0);
      v151 = (v137 & 0x40000000) == 0 && ((v280 | v293) & 1) == 0;
      if ((v262 & 1) == 0 && v151)
      {
        v405 = v355;
        v406 = v356;
        v407 = v357;
        v404 = v354;
        v403 = v353;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224671000;
        v399 = xmmword_224671010;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 3, 2, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1D300000013), xmmword_224671010);
      }
    }
    v152 = (v271 & 1) == 0 && ((v280 | v293) & 1) == 0;
    if (v152 && (v277 & 1) == 0)
    {
      v400 = v355;
      v401 = v356;
      v402 = v357;
      v399 = v354;
      v398 = v353;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224671020;
      v394 = xmmword_224671030;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 3, 2, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1D300000013), xmmword_224671030);
    }
  }
  v350 = v340;
  v351 = v341;
  v352 = v342;
  v348 = v338;
  v349 = v339;
  v153 = v42[12];
  if ((v153 & 0x80000000) != 0)
  {
    v155 = *(_DWORD *)(v41 + 2124);
    v156 = **v93;
    if (**v93)
      goto LABEL_390;
    goto LABEL_384;
  }
  v154 = *(_QWORD *)(v41 + 2328);
  if (v153 >= (*(_QWORD *)(v41 + 2336) - v154) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v154 = *(_QWORD *)(v41 + 2328);
  }
  v155 = *(_DWORD *)(v154 + (v153 << 11) + 1844);
  v156 = **v93;
  if (!**v93)
  {
LABEL_384:
    if ((v155 & 0x10000000) != 0)
      v157 = 0x40000000;
    else
      v157 = 0x80000000;
    if ((v155 & 0x20000000) != 0)
      v155 = v157;
    else
      v155 &= 0xCFFFFFFF;
  }
LABEL_390:
  v158 = v77[13];
  if (**v306)
  {
    v159 = v42[12];
    if ((v159 & 0x80000000) == 0)
      goto LABEL_392;
LABEL_670:
    v161 = *(_DWORD *)(v41 + 2156);
    if (v156)
      goto LABEL_402;
    goto LABEL_396;
  }
  if ((v158 & 0x10000000) != 0)
    v235 = 0x40000000;
  else
    v235 = 0x80000000;
  if ((v158 & 0x20000000) != 0)
    v158 = v235;
  else
    v158 &= 0xCFFFFFFF;
  v159 = v42[12];
  if ((v159 & 0x80000000) != 0)
    goto LABEL_670;
LABEL_392:
  v160 = *(_QWORD *)(v41 + 2328);
  if (v159 >= (*(_QWORD *)(v41 + 2336) - v160) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v160 = *(_QWORD *)(v41 + 2328);
    v156 = **v93;
  }
  v161 = *(_DWORD *)(v160 + (v159 << 11) + 1876);
  if (!v156)
  {
LABEL_396:
    if ((v161 & 0x10000000) != 0)
      v162 = 0x40000000;
    else
      v162 = 0x80000000;
    if ((v161 & 0x20000000) != 0)
      v161 = v162;
    else
      v161 &= 0xCFFFFFFF;
  }
LABEL_402:
  v302 = v77[21];
  if (**v306)
  {
    v163 = v42[12];
    if ((v163 & 0x80000000) == 0)
      goto LABEL_404;
LABEL_678:
    v165 = *(_DWORD *)(v41 + 2188);
    if (v156)
      goto LABEL_414;
    goto LABEL_408;
  }
  v236 = v302 & 0xCFFFFFFF;
  if ((v302 & 0x10000000) != 0)
    v237 = 0x40000000;
  else
    v237 = 0x80000000;
  if ((v302 & 0x20000000) != 0)
    v236 = v237;
  v302 = v236;
  v163 = v42[12];
  if ((v163 & 0x80000000) != 0)
    goto LABEL_678;
LABEL_404:
  v164 = *(_QWORD *)(v41 + 2328);
  if (v163 >= (*(_QWORD *)(v41 + 2336) - v164) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v164 = *(_QWORD *)(v41 + 2328);
    v156 = **v93;
  }
  v165 = *(_DWORD *)(v164 + (v163 << 11) + 1908);
  if (!v156)
  {
LABEL_408:
    if ((v165 & 0x10000000) != 0)
      v166 = 0x40000000;
    else
      v166 = 0x80000000;
    if ((v165 & 0x20000000) != 0)
      v165 = v166;
    else
      v165 &= 0xCFFFFFFF;
  }
LABEL_414:
  v266 = v155 >> 30;
  v287 = v161 >> 30;
  v290 = v158 >> 30;
  v275 = v165 >> 30;
  v365 = v340;
  v366 = v341;
  v367 = v342;
  v364 = v339;
  v363 = v338;
  if ((v304 & 0x40000000) != 0)
  {
    v375 = v340;
    v376 = v341;
    v377 = v342;
    v374 = v339;
    v373 = v338;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224671040;
    v369 = xmmword_224671050;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 4, 2, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5400000014), xmmword_224671050);
    if ((v298 & 0x40000000) == 0)
    {
      v370 = v340;
      v371 = v341;
      v372 = v342;
      v369 = v339;
      v368 = v338;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224671060;
      v424 = xmmword_224671070;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 4, 2, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5400000014), xmmword_224671070);
      if (((v283 | v296) & 1) == 0)
      {
        v425 = v340;
        v426 = v341;
        v427 = v342;
        v423 = v338;
        v424 = v339;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224671080;
        v419 = xmmword_224671090;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 4, 2, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5400000014), xmmword_224671090);
        v167 = (v268 & 1) == 0 && ((v280 | v293) & 1) == 0;
        if ((v262 & 1) == 0 && v167)
        {
          v420 = v340;
          v421 = v341;
          v422 = v342;
          v419 = v339;
          v418 = v338;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246710A0;
          v414 = xmmword_2246710B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 4, 2, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1D400000014), xmmword_2246710B0);
        }
      }
      v168 = (v271 & 1) == 0 && ((v280 | v293) & 1) == 0;
      if (v168 && (v277 & 1) == 0)
      {
        v415 = v365;
        v416 = v366;
        v417 = v367;
        v414 = v364;
        v413 = v363;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246710C0;
        v409 = xmmword_2246710D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 4, 2, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1D400000014), xmmword_2246710D0);
      }
    }
    if (((v296 | v290) & 1) == 0)
    {
      v410 = v365;
      v411 = v366;
      v412 = v367;
      v409 = v364;
      v408 = v363;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246710E0;
      v404 = xmmword_2246710F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 4, 2, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5400000014), xmmword_2246710F0);
      v169 = (v155 & 0x40000000) == 0 && ((v293 | v287) & 1) == 0;
      if ((v268 & 1) == 0 && v169)
      {
        v405 = v365;
        v406 = v366;
        v407 = v367;
        v404 = v364;
        v403 = v363;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224671100;
        v399 = xmmword_224671110;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 4, 2, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1D400000014), xmmword_224671110);
      }
    }
    v170 = (v277 & 1) == 0 && ((v293 | v287) & 1) == 0;
    if (v170 && (v275 & 1) == 0)
    {
      v400 = v365;
      v401 = v366;
      v402 = v367;
      v399 = v364;
      v398 = v363;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224671120;
      v394 = xmmword_224671130;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 4, 2, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1D400000014), xmmword_224671130);
    }
  }
  v360 = v350;
  v361 = v351;
  v362 = v352;
  v358 = v348;
  v359 = v349;
  v171 = v42[12];
  if ((v171 & 0x80000000) != 0)
  {
    v173 = *(_DWORD *)(v41 + 2128);
    v174 = **v93;
    if (**v93)
      goto LABEL_453;
    goto LABEL_447;
  }
  v172 = *(_QWORD *)(v41 + 2328);
  if (v171 >= (*(_QWORD *)(v41 + 2336) - v172) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v172 = *(_QWORD *)(v41 + 2328);
  }
  v173 = *(_DWORD *)(v172 + (v171 << 11) + 1848);
  v174 = **v93;
  if (!**v93)
  {
LABEL_447:
    if ((v173 & 0x10000000) != 0)
      v175 = 0x40000000;
    else
      v175 = 0x80000000;
    if ((v173 & 0x20000000) != 0)
      v173 = v175;
    else
      v173 &= 0xCFFFFFFF;
  }
LABEL_453:
  v176 = v77[14];
  if (**v306)
  {
    v177 = v42[12];
    if ((v177 & 0x80000000) == 0)
      goto LABEL_455;
LABEL_689:
    v179 = *(_DWORD *)(v41 + 2160);
    if (v174)
      goto LABEL_465;
    goto LABEL_459;
  }
  if ((v176 & 0x10000000) != 0)
    v238 = 0x40000000;
  else
    v238 = 0x80000000;
  if ((v176 & 0x20000000) != 0)
    v176 = v238;
  else
    v176 &= 0xCFFFFFFF;
  v177 = v42[12];
  if ((v177 & 0x80000000) != 0)
    goto LABEL_689;
LABEL_455:
  v178 = *(_QWORD *)(v41 + 2328);
  if (v177 >= (*(_QWORD *)(v41 + 2336) - v178) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v178 = *(_QWORD *)(v41 + 2328);
    v174 = **v93;
  }
  v179 = *(_DWORD *)(v178 + (v177 << 11) + 1880);
  if (!v174)
  {
LABEL_459:
    if ((v179 & 0x10000000) != 0)
      v180 = 0x40000000;
    else
      v180 = 0x80000000;
    if ((v179 & 0x20000000) != 0)
      v179 = v180;
    else
      v179 &= 0xCFFFFFFF;
  }
LABEL_465:
  v299 = v77[22];
  if (**v306)
  {
    v181 = v42[12];
    if ((v181 & 0x80000000) == 0)
      goto LABEL_467;
LABEL_697:
    v183 = *(_DWORD *)(v41 + 2192);
    if (v174)
      goto LABEL_477;
    goto LABEL_471;
  }
  v239 = v299 & 0xCFFFFFFF;
  if ((v299 & 0x10000000) != 0)
    v240 = 0x40000000;
  else
    v240 = 0x80000000;
  if ((v299 & 0x20000000) != 0)
    v239 = v240;
  v299 = v239;
  v181 = v42[12];
  if ((v181 & 0x80000000) != 0)
    goto LABEL_697;
LABEL_467:
  v182 = *(_QWORD *)(v41 + 2328);
  if (v181 >= (*(_QWORD *)(v41 + 2336) - v182) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v182 = *(_QWORD *)(v41 + 2328);
    v174 = **v93;
  }
  v183 = *(_DWORD *)(v182 + (v181 << 11) + 1912);
  if (!v174)
  {
LABEL_471:
    if ((v183 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v183 & 0x20000000) != 0)
      v183 = v184;
    else
      v183 &= 0xCFFFFFFF;
  }
LABEL_477:
  v263 = v173 >> 30;
  v281 = v179 >> 30;
  v284 = v176 >> 30;
  v272 = v183 >> 30;
  v385 = v350;
  v386 = v351;
  v387 = v352;
  v384 = v349;
  v383 = v348;
  if ((v302 & 0x40000000) != 0)
  {
    v375 = v350;
    v376 = v351;
    v377 = v352;
    v374 = v349;
    v373 = v348;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224671140;
    v369 = xmmword_224671150;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 5, 2, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5500000015), xmmword_224671150);
    if ((v304 & 0x40000000) == 0)
    {
      v370 = v350;
      v371 = v351;
      v372 = v352;
      v369 = v349;
      v368 = v348;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224671160;
      v424 = xmmword_224671170;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 5, 2, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5500000015), xmmword_224671170);
      if (((v296 | v290) & 1) == 0)
      {
        v425 = v350;
        v426 = v351;
        v427 = v352;
        v423 = v348;
        v424 = v349;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224671180;
        v419 = xmmword_224671190;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 5, 2, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5500000015), xmmword_224671190);
        v185 = (v266 & 1) == 0 && ((v293 | v287) & 1) == 0;
        if ((v268 & 1) == 0 && v185)
        {
          v420 = v350;
          v421 = v351;
          v422 = v352;
          v419 = v349;
          v418 = v348;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246711A0;
          v414 = xmmword_2246711B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 5, 2, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1D500000015), xmmword_2246711B0);
        }
      }
      v186 = (v277 & 1) == 0 && ((v293 | v287) & 1) == 0;
      if (v186 && (v275 & 1) == 0)
      {
        v415 = v385;
        v416 = v386;
        v417 = v387;
        v414 = v384;
        v413 = v383;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246711C0;
        v409 = xmmword_2246711D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 5, 2, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1D500000015), xmmword_2246711D0);
      }
    }
    if (((v290 | v284) & 1) == 0)
    {
      v410 = v385;
      v411 = v386;
      v412 = v387;
      v409 = v384;
      v408 = v383;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246711E0;
      v404 = xmmword_2246711F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 5, 2, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5500000015), xmmword_2246711F0);
      v187 = (v173 & 0x40000000) == 0 && ((v287 | v281) & 1) == 0;
      if ((v266 & 1) == 0 && v187)
      {
        v405 = v385;
        v406 = v386;
        v407 = v387;
        v404 = v384;
        v403 = v383;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224671200;
        v399 = xmmword_224671210;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 5, 2, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1D500000015), xmmword_224671210);
      }
    }
    v188 = (v275 & 1) == 0 && ((v287 | v281) & 1) == 0;
    if (v188 && (v272 & 1) == 0)
    {
      v400 = v385;
      v401 = v386;
      v402 = v387;
      v399 = v384;
      v398 = v383;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224671220;
      v394 = xmmword_224671230;
      *(_QWORD *)&v378 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 5, 2, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v378, COERCE_DOUBLE(0x1D500000015), xmmword_224671230);
    }
  }
  v380 = v360;
  v381 = v361;
  v382 = v362;
  v379 = v359;
  v378 = v358;
  v189 = v42[12];
  if ((v189 & 0x80000000) != 0)
  {
    v191 = *(_DWORD *)(v41 + 2132);
    v192 = **v93;
    if (**v93)
      goto LABEL_516;
    goto LABEL_510;
  }
  v190 = *(_QWORD *)(v41 + 2328);
  if (v189 >= (*(_QWORD *)(v41 + 2336) - v190) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v190 = *(_QWORD *)(v41 + 2328);
  }
  v191 = *(_DWORD *)(v190 + (v189 << 11) + 1852);
  v192 = **v93;
  if (!**v93)
  {
LABEL_510:
    if ((v191 & 0x10000000) != 0)
      v193 = 0x40000000;
    else
      v193 = 0x80000000;
    if ((v191 & 0x20000000) != 0)
      v191 = v193;
    else
      v191 &= 0xCFFFFFFF;
  }
LABEL_516:
  v194 = v77[15];
  if (**v306)
  {
    v195 = v42[12];
    if ((v195 & 0x80000000) == 0)
      goto LABEL_518;
LABEL_708:
    v197 = *(_DWORD *)(v41 + 2164);
    if (v192)
      goto LABEL_528;
    goto LABEL_522;
  }
  if ((v194 & 0x10000000) != 0)
    v241 = 0x40000000;
  else
    v241 = 0x80000000;
  if ((v194 & 0x20000000) != 0)
    v194 = v241;
  else
    v194 &= 0xCFFFFFFF;
  v195 = v42[12];
  if ((v195 & 0x80000000) != 0)
    goto LABEL_708;
LABEL_518:
  v196 = *(_QWORD *)(v41 + 2328);
  if (v195 >= (*(_QWORD *)(v41 + 2336) - v196) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v196 = *(_QWORD *)(v41 + 2328);
    v192 = **v93;
  }
  v197 = *(_DWORD *)(v196 + (v195 << 11) + 1884);
  if (!v192)
  {
LABEL_522:
    if ((v197 & 0x10000000) != 0)
      v198 = 0x40000000;
    else
      v198 = 0x80000000;
    if ((v197 & 0x20000000) != 0)
      v197 = v198;
    else
      v197 &= 0xCFFFFFFF;
  }
LABEL_528:
  v199 = v77[23];
  if (**v306)
  {
    v200 = v42[12];
    if ((v200 & 0x80000000) == 0)
      goto LABEL_530;
LABEL_717:
    v202 = *(_DWORD *)(v41 + 2196);
    if (v192)
      goto LABEL_540;
    goto LABEL_534;
  }
  if ((v199 & 0x10000000) != 0)
    v242 = 0x40000000;
  else
    v242 = 0x80000000;
  if ((v199 & 0x20000000) != 0)
    v199 = v242;
  else
    v199 &= 0xCFFFFFFF;
  v200 = v42[12];
  if ((v200 & 0x80000000) != 0)
    goto LABEL_717;
LABEL_530:
  v201 = *(_QWORD *)(v41 + 2328);
  if (v200 >= (*(_QWORD *)(v41 + 2336) - v201) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v201 = *(_QWORD *)(v41 + 2328);
    v192 = **v93;
  }
  v202 = *(_DWORD *)(v201 + (v200 << 11) + 1916);
  if (!v192)
  {
LABEL_534:
    if ((v202 & 0x10000000) != 0)
      v203 = 0x40000000;
    else
      v203 = 0x80000000;
    if ((v202 & 0x20000000) != 0)
      v202 = v203;
    else
      v202 &= 0xCFFFFFFF;
  }
LABEL_540:
  v305 = v191 >> 30;
  v307 = v194 >> 30;
  v204 = v197 >> 30;
  v205 = v202 >> 30;
  v390 = v360;
  v391 = v361;
  v392 = v362;
  v389 = v359;
  v388 = v358;
  if ((v299 & 0x40000000) != 0)
  {
    v375 = v360;
    v376 = v361;
    v377 = v362;
    v374 = v359;
    v373 = v358;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224671240;
    v369 = xmmword_224671250;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 6, 2, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5600000016), xmmword_224671250);
    if ((v302 & 0x40000000) == 0)
    {
      v370 = v360;
      v371 = v361;
      v372 = v362;
      v369 = v359;
      v368 = v358;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224671260;
      v424 = xmmword_224671270;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 6, 2, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5600000016), xmmword_224671270);
      if (((v290 | v284) & 1) == 0)
      {
        v425 = v360;
        v426 = v361;
        v427 = v362;
        v423 = v358;
        v424 = v359;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224671280;
        v419 = xmmword_224671290;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 6, 2, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5600000016), xmmword_224671290);
        v206 = (v263 & 1) == 0 && ((v287 | v281) & 1) == 0;
        if ((v266 & 1) == 0 && v206)
        {
          v420 = v360;
          v421 = v361;
          v422 = v362;
          v419 = v359;
          v418 = v358;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246712A0;
          v414 = xmmword_2246712B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 6, 2, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1D600000016), xmmword_2246712B0);
        }
      }
      v207 = (v275 & 1) == 0 && ((v287 | v281) & 1) == 0;
      if (v207 && (v272 & 1) == 0)
      {
        v415 = v390;
        v416 = v391;
        v417 = v392;
        v414 = v389;
        v413 = v388;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246712C0;
        v409 = xmmword_2246712D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 6, 2, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1D600000016), xmmword_2246712D0);
      }
    }
    if (((v284 | v307) & 1) == 0)
    {
      v410 = v390;
      v411 = v391;
      v412 = v392;
      v409 = v389;
      v408 = v388;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246712E0;
      v404 = xmmword_2246712F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 6, 2, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5600000016), xmmword_2246712F0);
      v208 = (v305 & 1) == 0 && ((v281 | v204) & 1) == 0;
      if ((v263 & 1) == 0 && v208)
      {
        v405 = v390;
        v406 = v391;
        v407 = v392;
        v404 = v389;
        v403 = v388;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224671300;
        v399 = xmmword_224671310;
        *(_QWORD *)&v429[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 6, 2, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)v429, COERCE_DOUBLE(0x1D600000016), xmmword_224671310);
      }
    }
    v209 = (v272 & 1) == 0 && ((v281 | v204) & 1) == 0;
    if (v209 && (v205 & 1) == 0)
    {
      v400 = v390;
      v401 = v391;
      v402 = v392;
      v399 = v389;
      v398 = v388;
      *(_QWORD *)&v429[0] = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224671320;
      v394 = xmmword_224671330;
      v430[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 6, 2, 0, (uint64_t)v429, (uint64_t)&v393, (uint64_t)v430, COERCE_DOUBLE(0x1D600000016), xmmword_224671330);
    }
  }
  v210 = v42[21];
  if ((v210 & 0x80000000) != 0)
  {
    v213 = *v93;
    v214 = *(_DWORD *)(v41 + 2104);
    v215 = **v93;
    if (**v93)
      goto LABEL_573;
  }
  else
  {
    v211 = *(_QWORD *)(v41 + 2328);
    if (v210 >= (*(_QWORD *)(v41 + 2336) - v211) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v211 = *(_QWORD *)(v41 + 2328);
    }
    v212 = v211 + (v210 << 11);
    v213 = *v93;
    v214 = *(_DWORD *)(v212 + 1824);
    v215 = **v93;
    if (**v93)
    {
LABEL_573:
      v216 = v42[22];
      if ((v216 & 0x80000000) == 0)
        goto LABEL_574;
LABEL_727:
      v218 = *(_DWORD *)(v41 + 312);
      if (v215)
        goto LABEL_578;
      goto LABEL_728;
    }
  }
  if ((v214 & 0x10000000) != 0)
    v243 = 0x40000000;
  else
    v243 = 0x80000000;
  if ((v214 & 0x20000000) != 0)
    v214 = v243;
  else
    v214 &= 0xCFFFFFFF;
  v216 = v42[22];
  if ((v216 & 0x80000000) != 0)
    goto LABEL_727;
LABEL_574:
  v217 = *(_QWORD *)(v41 + 2328);
  if (v216 >= (*(_QWORD *)(v41 + 2336) - v217) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v217 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
    v215 = **v93;
  }
  v218 = *(_DWORD *)(v217 + (v216 << 11) + 32);
  if (v215)
  {
LABEL_578:
    v219 = v42[21];
    if ((v219 & 0x80000000) == 0)
      goto LABEL_579;
LABEL_735:
    v221 = *(_DWORD *)(v41 + 2136);
    if (v215)
      goto LABEL_583;
LABEL_736:
    if ((v221 & 0x10000000) != 0)
      v245 = 0x40000000;
    else
      v245 = 0x80000000;
    if ((v221 & 0x20000000) != 0)
      v221 = v245;
    else
      v221 &= 0xCFFFFFFF;
    v222 = v42[22];
    if ((v222 & 0x80000000) != 0)
      goto LABEL_746;
    goto LABEL_743;
  }
LABEL_728:
  if ((v218 & 0x10000000) != 0)
    v244 = 0x40000000;
  else
    v244 = 0x80000000;
  if ((v218 & 0x20000000) != 0)
    v218 = v244;
  else
    v218 &= 0xCFFFFFFF;
  v219 = v42[21];
  if ((v219 & 0x80000000) != 0)
    goto LABEL_735;
LABEL_579:
  v220 = *(_QWORD *)(v41 + 2328);
  if (v219 >= (*(_QWORD *)(v41 + 2336) - v220) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v220 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
    v215 = **v93;
  }
  v221 = *(_DWORD *)(v220 + (v219 << 11) + 1856);
  if (!v215)
    goto LABEL_736;
LABEL_583:
  v222 = v42[22];
  if ((v222 & 0x80000000) != 0)
    goto LABEL_746;
LABEL_743:
  if (v222 >= (uint64_t)(*(_QWORD *)(v41 + 2336) - *(_QWORD *)(v41 + 2328)) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v213 = *v93;
  }
LABEL_746:
  v246 = v42[21];
  if ((v246 & 0x80000000) != 0)
  {
    v248 = *(_DWORD *)(v41 + 2168);
    if (*v213)
      goto LABEL_757;
    goto LABEL_751;
  }
  v247 = *(_QWORD *)(v41 + 2328);
  if (v246 >= (*(_QWORD *)(v41 + 2336) - v247) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v247 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
  }
  v248 = *(_DWORD *)(v247 + (v246 << 11) + 1888);
  if (!*v213)
  {
LABEL_751:
    if ((v248 & 0x10000000) != 0)
      v249 = 0x40000000;
    else
      v249 = 0x80000000;
    if ((v248 & 0x20000000) != 0)
      v248 = v249;
    else
      v248 &= 0xCFFFFFFF;
  }
LABEL_757:
  v395 = v380;
  v396 = v381;
  v397 = v382;
  v394 = v379;
  v393 = v378;
  if ((v199 & 0x40000000) != 0)
  {
    v375 = v380;
    v376 = v381;
    v377 = v382;
    *(_QWORD *)&v423 = 0x161616160D0D0D0DLL;
    v374 = v379;
    v373 = v378;
    v368 = xmmword_224671340;
    v369 = xmmword_224671350;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 7, 2, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5700000017), xmmword_224671350);
    if ((v299 & 0x40000000) == 0)
    {
      v370 = v380;
      v371 = v381;
      v372 = v382;
      v369 = v379;
      v368 = v378;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224671360;
      v424 = xmmword_224671370;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 7, 2, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5700000017), xmmword_224671370);
      if (((v284 | v307) & 1) == 0)
      {
        v425 = v380;
        v426 = v381;
        v427 = v382;
        v423 = v378;
        v424 = v379;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224671380;
        v419 = xmmword_224671390;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 7, 2, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5700000017), xmmword_224671390);
        v250 = (v305 & 1) == 0 && ((v281 | v204) & 1) == 0;
        if ((v263 & 1) == 0 && v250)
        {
          v420 = v380;
          v421 = v381;
          v422 = v382;
          v419 = v379;
          v418 = v378;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246713A0;
          v414 = xmmword_2246713B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 7, 2, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1D700000017), xmmword_2246713B0);
        }
      }
      v251 = (v272 & 1) == 0 && ((v281 | v204) & 1) == 0;
      if (v251 && (v205 & 1) == 0)
      {
        v415 = v395;
        v416 = v396;
        v417 = v397;
        v414 = v394;
        v413 = v393;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246713C0;
        v409 = xmmword_2246713D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 7, 2, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1D700000017), xmmword_2246713D0);
      }
    }
    if (!(v218 & 0x40000000 | v307 & 1))
    {
      v410 = v395;
      v411 = v396;
      v412 = v397;
      *(_QWORD *)&v398 = 0x16160D0D16160D0DLL;
      v409 = v394;
      v408 = v393;
      v403 = xmmword_2246713E0;
      v404 = xmmword_2246713F0;
      *(_QWORD *)&v429[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 7, 2, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)v429, COERCE_DOUBLE(0x5700000017), xmmword_2246713F0);
      v252 = (v214 & 0x40000000) == 0 && (v221 & 0x40000000 | v204 & 1) == 0;
      if ((v305 & 1) == 0 && v252)
      {
        v405 = v395;
        v406 = v396;
        v407 = v397;
        v404 = v394;
        v403 = v393;
        *(_QWORD *)&v429[0] = 0x151615160C0D0C0DLL;
        v398 = xmmword_224671400;
        v399 = xmmword_224671410;
        v430[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 7, 2, 0, (uint64_t)v429, (uint64_t)&v398, (uint64_t)v430, COERCE_DOUBLE(0x1D700000017), xmmword_224671410);
      }
    }
    v253 = (v205 & 1) == 0 && (v221 & 0x40000000 | v204 & 1) == 0;
    if (v253 && (v248 & 0x40000000) == 0)
    {
      v400 = v395;
      v401 = v396;
      v402 = v397;
      v430[0] = 0x15160C0D15160C0DLL;
      v399 = v394;
      v398 = v393;
      v429[0] = xmmword_224671420;
      v429[1] = xmmword_224671430;
      v428 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 7, 2, 0, (uint64_t)v430, (uint64_t)v429, (uint64_t)&v428, COERCE_DOUBLE(0x1D700000017), xmmword_224671430);
    }
  }
  v254 = *(_OWORD *)v278;
  v312 = *(_QWORD *)(v278 + 16);
  v311 = v254;
  v255 = *(_OWORD *)a2;
  v310 = a2[2];
  v256 = *v269;
  v257 = v269[1];
  v308[4] = v269[4];
  v309 = v255;
  v258 = v269[3];
  v308[2] = v269[2];
  v308[3] = v258;
  v308[0] = v256;
  v308[1] = v257;
  return sub_223D97C4C(&v311, (uint64_t *)&v309, v308);
}

unint64_t sub_223D97C4C(__int128 *a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v6;
  _BYTE **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  _BYTE **v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  _BYTE **v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  _BYTE **v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  _BYTE **v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  _BYTE **v54;
  unint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  unsigned int v58;
  uint64_t v59;
  _BYTE **v60;
  unint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  unsigned int v64;
  uint64_t v65;
  _BYTE **v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  _BYTE *v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  _DWORD *v77;
  __int128 v78;
  float32x4_t v79;
  unint64_t v80;
  uint64_t v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unint64_t v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int v89;
  unint64_t v90;
  uint64_t v91;
  unsigned int v92;
  _BYTE **v93;
  unsigned int v94;
  _BOOL4 v95;
  _BOOL4 v96;
  _BOOL4 v97;
  _BOOL4 v98;
  unint64_t v99;
  uint64_t v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unint64_t v105;
  uint64_t v106;
  unsigned int v107;
  unsigned int v108;
  unint64_t v109;
  uint64_t v110;
  unsigned int v111;
  unsigned int v112;
  _BOOL4 v113;
  _BOOL4 v114;
  _BOOL4 v115;
  _BOOL4 v116;
  unint64_t v117;
  uint64_t v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unint64_t v123;
  uint64_t v124;
  unsigned int v125;
  unsigned int v126;
  unint64_t v127;
  uint64_t v128;
  unsigned int v129;
  unsigned int v130;
  _BOOL4 v131;
  _BOOL4 v132;
  _BOOL4 v133;
  _BOOL4 v134;
  unint64_t v135;
  uint64_t v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unint64_t v141;
  uint64_t v142;
  unsigned int v143;
  unsigned int v144;
  unint64_t v145;
  uint64_t v146;
  unsigned int v147;
  unsigned int v148;
  _BOOL4 v149;
  _BOOL4 v150;
  _BOOL4 v151;
  _BOOL4 v152;
  unint64_t v153;
  uint64_t v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unint64_t v159;
  uint64_t v160;
  unsigned int v161;
  unsigned int v162;
  unint64_t v163;
  uint64_t v164;
  unsigned int v165;
  unsigned int v166;
  _BOOL4 v167;
  _BOOL4 v168;
  _BOOL4 v169;
  _BOOL4 v170;
  unint64_t v171;
  uint64_t v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unint64_t v177;
  uint64_t v178;
  unsigned int v179;
  unsigned int v180;
  unint64_t v181;
  uint64_t v182;
  unsigned int v183;
  unsigned int v184;
  _BOOL4 v185;
  _BOOL4 v186;
  _BOOL4 v187;
  _BOOL4 v188;
  unint64_t v189;
  uint64_t v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unint64_t v195;
  uint64_t v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unint64_t v200;
  uint64_t v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  _BOOL4 v206;
  _BOOL4 v207;
  _BOOL4 v208;
  _BOOL4 v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _BYTE *v213;
  unsigned int v214;
  int v215;
  unint64_t v216;
  uint64_t v217;
  unsigned int v218;
  unint64_t v219;
  uint64_t v220;
  unsigned int v221;
  unint64_t v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unsigned int v249;
  _BOOL4 v250;
  _BOOL4 v251;
  _BOOL4 v252;
  _BOOL4 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  __int128 *v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  __int128 *v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  _BYTE **v306;
  unsigned int v307;
  _OWORD v308[5];
  __int128 v309;
  uint64_t v310;
  __int128 v311;
  uint64_t v312;
  __int128 v313;
  float32x4_t v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  float32x4_t v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  float32x4_t v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  float32x4_t v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  float32x4_t v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  float32x4_t v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  float32x4_t v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  float32x4_t v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  float32x4_t v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  float32x4_t v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  float32x4_t v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  float32x4_t v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  float32x4_t v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  float32x4_t v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  float32x4_t v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  float32x4_t v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  float32x4_t v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  float32x4_t v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  float32x4_t v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  float32x4_t v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  float32x4_t v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  float32x4_t v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  float32x4_t v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  uint64_t v428;
  _OWORD v429[2];
  _QWORD v430[3];

  v430[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v7 = (_BYTE **)a2[2];
  v8 = *(unsigned int *)(a2[1] + 48);
  if ((v8 & 0x80000000) != 0)
  {
    v10 = v6 + 280;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 2328);
    if (v8 >= (*(_QWORD *)(v6 + 2336) - v9) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v9 = *(_QWORD *)(v6 + 2328);
    }
    v10 = v9 + (v8 << 11);
  }
  v11 = *(_DWORD *)(v10 + 1856);
  v12 = v11 & 0xCFFFFFFF;
  if ((v11 & 0x10000000) != 0)
    v13 = 0x40000000;
  else
    v13 = 0x80000000;
  if ((v11 & 0x20000000) != 0)
    v12 = v13;
  if (**v7)
    v14 = v11;
  else
    v14 = v12;
  v15 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 64);
  v16 = v15 & 0xCFFFFFFF;
  if ((v15 & 0x10000000) != 0)
    v17 = 0x40000000;
  else
    v17 = 0x80000000;
  if ((v15 & 0x20000000) != 0)
    v16 = v17;
  if (***(_BYTE ***)a1)
    v18 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 64);
  else
    v18 = v16;
  v19 = *a2;
  v20 = (_BYTE **)a2[2];
  v21 = *(unsigned int *)(a2[1] + 48);
  if ((v21 & 0x80000000) != 0)
  {
    v23 = v19 + 280;
  }
  else
  {
    v22 = *(_QWORD *)(v19 + 2328);
    if (v21 >= (*(_QWORD *)(v19 + 2336) - v22) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v22 = *(_QWORD *)(v19 + 2328);
    }
    v23 = v22 + (v21 << 11);
  }
  v24 = *(_DWORD *)(v23 + 1888);
  v25 = v24 & 0xCFFFFFFF;
  if ((v24 & 0x10000000) != 0)
    v26 = 0x40000000;
  else
    v26 = 0x80000000;
  if ((v24 & 0x20000000) != 0)
    v25 = v26;
  if (**v20)
    v27 = v24;
  else
    v27 = v25;
  v28 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 96);
  v29 = v28 & 0xCFFFFFFF;
  if ((v28 & 0x10000000) != 0)
    v30 = 0x40000000;
  else
    v30 = 0x80000000;
  if ((v28 & 0x20000000) != 0)
    v29 = v30;
  if (***(_BYTE ***)a1)
    v31 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 96);
  else
    v31 = v29;
  v32 = *a2;
  v33 = (_BYTE **)a2[2];
  v34 = *(unsigned int *)(a2[1] + 48);
  v300 = v18;
  v291 = v27;
  v294 = v14;
  if ((v34 & 0x80000000) != 0)
  {
    v36 = v32 + 280;
  }
  else
  {
    v35 = *(_QWORD *)(v32 + 2328);
    if (v34 >= (*(_QWORD *)(v32 + 2336) - v35) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v35 = *(_QWORD *)(v32 + 2328);
    }
    v36 = v35 + (v34 << 11);
  }
  v37 = *(_DWORD *)(v36 + 1920);
  v38 = v37 & 0xCFFFFFFF;
  if ((v37 & 0x10000000) != 0)
    v39 = 0x40000000;
  else
    v39 = 0x80000000;
  if ((v37 & 0x20000000) != 0)
    v38 = v39;
  if (**v33)
    v40 = v37;
  else
    v40 = v38;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (_BYTE **)a2[2];
  v278 = a1;
  v297 = v31;
  v288 = v40;
  if ((v31 & 0x40000000) == 0)
  {
    v264 = 0;
    v44 = 0;
    v273 = 0;
    v285 = 0;
    v260 = 0;
    goto LABEL_127;
  }
  v45 = v42[3];
  if ((v45 & 0x80000000) != 0)
  {
    v47 = *(_DWORD *)(v41 + 2164);
    if (**v43)
      goto LABEL_66;
  }
  else
  {
    v46 = *(_QWORD *)(v41 + 2328);
    if (v45 >= (*(_QWORD *)(v41 + 2336) - v46) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v46 = *(_QWORD *)(v41 + 2328);
    }
    v47 = *(_DWORD *)(v46 + (v45 << 11) + 1884);
    if (**v43)
    {
LABEL_66:
      v48 = *a2;
      v49 = (_BYTE **)a2[2];
      v50 = *(unsigned int *)(a2[1] + 16);
      if ((v50 & 0x80000000) == 0)
        goto LABEL_67;
LABEL_94:
      v52 = *(_DWORD *)(v48 + 372);
      if (**v49)
        goto LABEL_71;
      goto LABEL_95;
    }
  }
  if ((v47 & 0x10000000) != 0)
    v70 = 0x40000000;
  else
    v70 = 0x80000000;
  if ((v47 & 0x20000000) != 0)
    v47 = v70;
  else
    v47 &= 0xCFFFFFFF;
  v48 = *a2;
  v49 = (_BYTE **)a2[2];
  v50 = *(unsigned int *)(a2[1] + 16);
  if ((v50 & 0x80000000) != 0)
    goto LABEL_94;
LABEL_67:
  v51 = *(_QWORD *)(v48 + 2328);
  if (v50 >= (*(_QWORD *)(v48 + 2336) - v51) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v51 = *(_QWORD *)(v48 + 2328);
  }
  v52 = *(_DWORD *)(v51 + (v50 << 11) + 92);
  if (**v49)
  {
LABEL_71:
    v53 = *a2;
    v54 = (_BYTE **)a2[2];
    v55 = *(unsigned int *)(a2[1] + 12);
    if ((v55 & 0x80000000) == 0)
      goto LABEL_72;
LABEL_102:
    v57 = a3;
    v58 = *(_DWORD *)(v53 + 2196);
    if (**v54)
      goto LABEL_76;
    goto LABEL_103;
  }
LABEL_95:
  if ((v52 & 0x10000000) != 0)
    v71 = 0x40000000;
  else
    v71 = 0x80000000;
  if ((v52 & 0x20000000) != 0)
    v52 = v71;
  else
    v52 &= 0xCFFFFFFF;
  v53 = *a2;
  v54 = (_BYTE **)a2[2];
  v55 = *(unsigned int *)(a2[1] + 12);
  if ((v55 & 0x80000000) != 0)
    goto LABEL_102;
LABEL_72:
  v56 = *(_QWORD *)(v53 + 2328);
  if (v55 >= (*(_QWORD *)(v53 + 2336) - v56) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v56 = *(_QWORD *)(v53 + 2328);
  }
  v57 = a3;
  v58 = *(_DWORD *)(v56 + (v55 << 11) + 1916);
  if (**v54)
  {
LABEL_76:
    v59 = *a2;
    v60 = (_BYTE **)a2[2];
    v61 = *(unsigned int *)(a2[1] + 16);
    if ((v61 & 0x80000000) == 0)
      goto LABEL_77;
LABEL_110:
    v73 = *v60;
    v64 = *(_DWORD *)(v59 + 404);
    if (*v73)
      goto LABEL_81;
LABEL_111:
    if ((v64 & 0x10000000) != 0)
      v74 = 0x40000000;
    else
      v74 = 0x80000000;
    if ((v64 & 0x20000000) != 0)
      v64 = v74;
    else
      v64 &= 0xCFFFFFFF;
    v65 = *a2;
    v66 = (_BYTE **)a2[2];
    v67 = *(unsigned int *)(a2[1] + 12);
    if ((v67 & 0x80000000) == 0)
      goto LABEL_82;
    goto LABEL_118;
  }
LABEL_103:
  if ((v58 & 0x10000000) != 0)
    v72 = 0x40000000;
  else
    v72 = 0x80000000;
  if ((v58 & 0x20000000) != 0)
    v58 = v72;
  else
    v58 &= 0xCFFFFFFF;
  v59 = *a2;
  v60 = (_BYTE **)a2[2];
  v61 = *(unsigned int *)(a2[1] + 16);
  if ((v61 & 0x80000000) != 0)
    goto LABEL_110;
LABEL_77:
  v62 = *(_QWORD *)(v59 + 2328);
  if (v61 >= (*(_QWORD *)(v59 + 2336) - v62) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v62 = *(_QWORD *)(v59 + 2328);
  }
  v63 = *v60;
  v64 = *(_DWORD *)(v62 + (v61 << 11) + 124);
  if (!*v63)
    goto LABEL_111;
LABEL_81:
  v65 = *a2;
  v66 = (_BYTE **)a2[2];
  v67 = *(unsigned int *)(a2[1] + 12);
  if ((v67 & 0x80000000) == 0)
  {
LABEL_82:
    v68 = *(_QWORD *)(v65 + 2328);
    if (v67 >= (*(_QWORD *)(v65 + 2336) - v68) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v68 = *(_QWORD *)(v65 + 2328);
    }
    v69 = v68 + (v67 << 11);
    goto LABEL_119;
  }
LABEL_118:
  v69 = v65 + 280;
LABEL_119:
  v260 = (v47 >> 30) & 1;
  v285 = (v52 >> 30) & 1;
  v273 = (v58 >> 30) & 1;
  v44 = (v64 >> 30) & 1;
  v75 = *(_DWORD *)(v69 + 1948);
  a3 = v57;
  if (!**v66)
  {
    if ((v75 & 0x10000000) != 0)
      v76 = 0x40000000;
    else
      v76 = 0x80000000;
    if ((v75 & 0x20000000) != 0)
      v75 = v76;
    else
      v75 &= 0xCFFFFFFF;
  }
  v264 = (v75 >> 30) & 1;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (_BYTE **)a2[2];
  a1 = v278;
LABEL_127:
  v306 = *(_BYTE ***)a1;
  v77 = (_DWORD *)*((_QWORD *)a1 + 2);
  v78 = a3[3];
  v315 = a3[2];
  v316 = v78;
  v317 = a3[4];
  v79 = *((float32x4_t *)a3 + 1);
  v313 = *a3;
  v314 = v79;
  v80 = v42[12];
  if ((v80 & 0x80000000) != 0)
  {
    v269 = a3;
    v82 = *(_DWORD *)(v41 + 2140);
    v83 = **v43;
    if (**v43)
      goto LABEL_138;
    goto LABEL_132;
  }
  v81 = *(_QWORD *)(v41 + 2328);
  if (v80 >= (*(_QWORD *)(v41 + 2336) - v81) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v81 = *(_QWORD *)(v41 + 2328);
  }
  v269 = a3;
  v82 = *(_DWORD *)(v81 + (v80 << 11) + 1860);
  v83 = **v43;
  if (!**v43)
  {
LABEL_132:
    if ((v82 & 0x10000000) != 0)
      v84 = 0x40000000;
    else
      v84 = 0x80000000;
    if ((v82 & 0x20000000) != 0)
      v82 = v84;
    else
      v82 &= 0xCFFFFFFF;
  }
LABEL_138:
  v85 = v77[17];
  if (**v306)
  {
    v86 = v42[12];
    if ((v86 & 0x80000000) == 0)
      goto LABEL_140;
LABEL_594:
    v88 = *(_DWORD *)(v41 + 2172);
    if (v83)
      goto LABEL_150;
    goto LABEL_144;
  }
  if ((v85 & 0x10000000) != 0)
    v223 = 0x40000000;
  else
    v223 = 0x80000000;
  if ((v85 & 0x20000000) != 0)
    v85 = v223;
  else
    v85 &= 0xCFFFFFFF;
  v86 = v42[12];
  if ((v86 & 0x80000000) != 0)
    goto LABEL_594;
LABEL_140:
  v87 = *(_QWORD *)(v41 + 2328);
  if (v86 >= (*(_QWORD *)(v41 + 2336) - v87) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v87 = *(_QWORD *)(v41 + 2328);
    v83 = **v43;
  }
  v88 = *(_DWORD *)(v87 + (v86 << 11) + 1892);
  if (!v83)
  {
LABEL_144:
    if ((v88 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v88 & 0x20000000) != 0)
      v88 = v89;
    else
      v88 &= 0xCFFFFFFF;
  }
LABEL_150:
  v303 = v77[25];
  if (**v306)
  {
    v90 = v42[12];
    if ((v90 & 0x80000000) == 0)
      goto LABEL_152;
LABEL_602:
    v261 = v294 >> 30;
    v92 = *(_DWORD *)(v41 + 2204);
    v93 = v43;
    if (v83)
      goto LABEL_162;
    goto LABEL_156;
  }
  v224 = v303 & 0xCFFFFFFF;
  if ((v303 & 0x10000000) != 0)
    v225 = 0x40000000;
  else
    v225 = 0x80000000;
  if ((v303 & 0x20000000) != 0)
    v224 = v225;
  v303 = v224;
  v90 = v42[12];
  if ((v90 & 0x80000000) != 0)
    goto LABEL_602;
LABEL_152:
  v91 = *(_QWORD *)(v41 + 2328);
  if (v90 < (*(_QWORD *)(v41 + 2336) - v91) >> 11)
    goto LABEL_155;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
LABEL_788:
    abort();
  }
  v91 = *(_QWORD *)(v41 + 2328);
  v83 = **v43;
LABEL_155:
  v261 = v294 >> 30;
  v92 = *(_DWORD *)(v91 + (v90 << 11) + 1924);
  v93 = v43;
  if (v83)
    goto LABEL_162;
LABEL_156:
  if ((v92 & 0x10000000) != 0)
    v94 = 0x40000000;
  else
    v94 = 0x80000000;
  if ((v92 & 0x20000000) != 0)
    v92 = v94;
  else
    v92 &= 0xCFFFFFFF;
LABEL_162:
  v267 = v82 >> 30;
  v279 = v291 >> 30;
  v282 = v300 >> 30;
  v270 = v288 >> 30;
  v292 = v88 >> 30;
  v295 = v85 >> 30;
  v276 = v92 >> 30;
  v325 = v315;
  v326 = v316;
  v327 = v317;
  v323 = v313;
  v324 = v314;
  if ((v297 & 0x40000000) != 0)
  {
    v375 = v315;
    v376 = v316;
    v377 = v317;
    v374 = v314;
    v373 = v313;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224671440;
    v369 = xmmword_224671450;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 0, 3, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5800000018), xmmword_224671450);
    if (!v44)
    {
      v370 = v315;
      v371 = v316;
      v372 = v317;
      *(_QWORD *)&v418 = 0x4040D0D04040D0DLL;
      v369 = v314;
      v368 = v313;
      v423 = xmmword_224671460;
      v424 = xmmword_224671470;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 0, 3, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5800000018), xmmword_224671470);
      if (!(v285 | ((v300 & 0x40000000) != 0)))
      {
        v425 = v315;
        v426 = v316;
        v427 = v317;
        v423 = v313;
        v424 = v314;
        *(_QWORD *)&v413 = 0x40404040D0D0D0DLL;
        v418 = xmmword_224671480;
        v419 = xmmword_224671490;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 0, 3, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5800000018), xmmword_224671490);
        v95 = (v261 & 1) == 0 && (v273 | v279 & 1) == 0;
        if (!v260 && v95)
        {
          v420 = v315;
          v421 = v316;
          v422 = v317;
          v419 = v314;
          v418 = v313;
          *(_QWORD *)&v408 = 0x3040C0D03040C0DLL;
          v413 = xmmword_2246714A0;
          v414 = xmmword_2246714B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 0, 3, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1D800000018), xmmword_2246714B0);
        }
      }
      if (v264)
        v96 = 0;
      else
        v96 = (v273 | v279 & 1) == 0;
      if (v96 && (v288 & 0x40000000) == 0)
      {
        v415 = v325;
        v416 = v326;
        v417 = v327;
        v414 = v324;
        v413 = v323;
        *(_QWORD *)&v403 = 0x30403040C0D0C0DLL;
        v408 = xmmword_2246714C0;
        v409 = xmmword_2246714D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 0, 3, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1D800000018), xmmword_2246714D0);
      }
    }
    if (((v282 | v295) & 1) == 0)
    {
      v410 = v325;
      v411 = v326;
      v412 = v327;
      v409 = v324;
      v408 = v323;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246714E0;
      v404 = xmmword_2246714F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 0, 3, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5800000018), xmmword_2246714F0);
      v97 = (v82 & 0x40000000) == 0 && ((v279 | v292) & 1) == 0;
      if ((v261 & 1) == 0 && v97)
      {
        v405 = v325;
        v406 = v326;
        v407 = v327;
        v404 = v324;
        v403 = v323;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224671500;
        v399 = xmmword_224671510;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 0, 3, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1D800000018), xmmword_224671510);
      }
    }
    v98 = (v288 & 0x40000000) == 0 && ((v279 | v292) & 1) == 0;
    if (v98 && (v276 & 1) == 0)
    {
      v400 = v325;
      v401 = v326;
      v402 = v327;
      v399 = v324;
      v398 = v323;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224671520;
      v394 = xmmword_224671530;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 0, 3, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1D800000018), xmmword_224671530);
    }
  }
  v320 = v315;
  v321 = v316;
  v322 = v317;
  v318 = v313;
  v319 = v314;
  v99 = v42[12];
  if ((v99 & 0x80000000) != 0)
  {
    v101 = *(_DWORD *)(v41 + 2144);
    v102 = **v93;
    if (**v93)
      goto LABEL_201;
    goto LABEL_195;
  }
  v100 = *(_QWORD *)(v41 + 2328);
  if (v99 >= (*(_QWORD *)(v41 + 2336) - v100) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v100 = *(_QWORD *)(v41 + 2328);
  }
  v101 = *(_DWORD *)(v100 + (v99 << 11) + 1864);
  v102 = **v93;
  if (!**v93)
  {
LABEL_195:
    if ((v101 & 0x10000000) != 0)
      v103 = 0x40000000;
    else
      v103 = 0x80000000;
    if ((v101 & 0x20000000) != 0)
      v101 = v103;
    else
      v101 &= 0xCFFFFFFF;
  }
LABEL_201:
  v104 = v77[18];
  if (**v306)
  {
    v105 = v42[12];
    if ((v105 & 0x80000000) == 0)
      goto LABEL_203;
LABEL_613:
    v107 = *(_DWORD *)(v41 + 2176);
    if (v102)
      goto LABEL_213;
    goto LABEL_207;
  }
  if ((v104 & 0x10000000) != 0)
    v226 = 0x40000000;
  else
    v226 = 0x80000000;
  if ((v104 & 0x20000000) != 0)
    v104 = v226;
  else
    v104 &= 0xCFFFFFFF;
  v105 = v42[12];
  if ((v105 & 0x80000000) != 0)
    goto LABEL_613;
LABEL_203:
  v106 = *(_QWORD *)(v41 + 2328);
  if (v105 >= (*(_QWORD *)(v41 + 2336) - v106) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v106 = *(_QWORD *)(v41 + 2328);
    v102 = **v93;
  }
  v107 = *(_DWORD *)(v106 + (v105 << 11) + 1896);
  if (!v102)
  {
LABEL_207:
    if ((v107 & 0x10000000) != 0)
      v108 = 0x40000000;
    else
      v108 = 0x80000000;
    if ((v107 & 0x20000000) != 0)
      v107 = v108;
    else
      v107 &= 0xCFFFFFFF;
  }
LABEL_213:
  v301 = v77[26];
  if (**v306)
  {
    v109 = v42[12];
    if ((v109 & 0x80000000) == 0)
      goto LABEL_215;
LABEL_621:
    v111 = *(_DWORD *)(v41 + 2208);
    if (v102)
      goto LABEL_225;
    goto LABEL_219;
  }
  v227 = v301 & 0xCFFFFFFF;
  if ((v301 & 0x10000000) != 0)
    v228 = 0x40000000;
  else
    v228 = 0x80000000;
  if ((v301 & 0x20000000) != 0)
    v227 = v228;
  v301 = v227;
  v109 = v42[12];
  if ((v109 & 0x80000000) != 0)
    goto LABEL_621;
LABEL_215:
  v110 = *(_QWORD *)(v41 + 2328);
  if (v109 >= (*(_QWORD *)(v41 + 2336) - v110) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v110 = *(_QWORD *)(v41 + 2328);
    v102 = **v93;
  }
  v111 = *(_DWORD *)(v110 + (v109 << 11) + 1928);
  if (!v102)
  {
LABEL_219:
    if ((v111 & 0x10000000) != 0)
      v112 = 0x40000000;
    else
      v112 = 0x80000000;
    if ((v111 & 0x20000000) != 0)
      v111 = v112;
    else
      v111 &= 0xCFFFFFFF;
  }
LABEL_225:
  v265 = v101 >> 30;
  v286 = v107 >> 30;
  v289 = v104 >> 30;
  v274 = v111 >> 30;
  v335 = v315;
  v336 = v316;
  v337 = v317;
  v333 = v313;
  v334 = v314;
  if ((v303 & 0x40000000) != 0)
  {
    v375 = v315;
    v376 = v316;
    v377 = v317;
    v374 = v314;
    v373 = v313;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224671540;
    v369 = xmmword_224671550;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 1, 3, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5900000019), xmmword_224671550);
    if ((v297 & 0x40000000) == 0)
    {
      v370 = v315;
      v371 = v316;
      v372 = v317;
      v369 = v314;
      v368 = v313;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224671560;
      v424 = xmmword_224671570;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 1, 3, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5900000019), xmmword_224671570);
      if (((v282 | v295) & 1) == 0)
      {
        v425 = v315;
        v426 = v316;
        v427 = v317;
        v423 = v313;
        v424 = v314;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224671580;
        v419 = xmmword_224671590;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 1, 3, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5900000019), xmmword_224671590);
        v113 = (v267 & 1) == 0 && ((v279 | v292) & 1) == 0;
        if ((v261 & 1) == 0 && v113)
        {
          v420 = v315;
          v421 = v316;
          v422 = v317;
          v419 = v314;
          v418 = v313;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246715A0;
          v414 = xmmword_2246715B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 1, 3, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1D900000019), xmmword_2246715B0);
        }
      }
      v114 = (v270 & 1) == 0 && ((v279 | v292) & 1) == 0;
      if (v114 && (v276 & 1) == 0)
      {
        v415 = v335;
        v416 = v336;
        v417 = v337;
        v414 = v334;
        v413 = v333;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246715C0;
        v409 = xmmword_2246715D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 1, 3, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1D900000019), xmmword_2246715D0);
      }
    }
    if (((v295 | v289) & 1) == 0)
    {
      v410 = v335;
      v411 = v336;
      v412 = v337;
      v409 = v334;
      v408 = v333;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246715E0;
      v404 = xmmword_2246715F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 1, 3, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5900000019), xmmword_2246715F0);
      v115 = (v101 & 0x40000000) == 0 && ((v292 | v286) & 1) == 0;
      if ((v267 & 1) == 0 && v115)
      {
        v405 = v335;
        v406 = v336;
        v407 = v337;
        v404 = v334;
        v403 = v333;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224671600;
        v399 = xmmword_224671610;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 1, 3, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1D900000019), xmmword_224671610);
      }
    }
    v116 = (v276 & 1) == 0 && ((v292 | v286) & 1) == 0;
    if (v116 && (v274 & 1) == 0)
    {
      v400 = v335;
      v401 = v336;
      v402 = v337;
      v399 = v334;
      v398 = v333;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224671620;
      v394 = xmmword_224671630;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 1, 3, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1D900000019), xmmword_224671630);
    }
  }
  v330 = v320;
  v331 = v321;
  v332 = v322;
  v328 = v318;
  v329 = v319;
  v117 = v42[12];
  if ((v117 & 0x80000000) != 0)
  {
    v119 = *(_DWORD *)(v41 + 2148);
    v120 = **v93;
    if (**v93)
      goto LABEL_264;
    goto LABEL_258;
  }
  v118 = *(_QWORD *)(v41 + 2328);
  if (v117 >= (*(_QWORD *)(v41 + 2336) - v118) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v118 = *(_QWORD *)(v41 + 2328);
  }
  v119 = *(_DWORD *)(v118 + (v117 << 11) + 1868);
  v120 = **v93;
  if (!**v93)
  {
LABEL_258:
    if ((v119 & 0x10000000) != 0)
      v121 = 0x40000000;
    else
      v121 = 0x80000000;
    if ((v119 & 0x20000000) != 0)
      v119 = v121;
    else
      v119 &= 0xCFFFFFFF;
  }
LABEL_264:
  v122 = v77[19];
  if (**v306)
  {
    v123 = v42[12];
    if ((v123 & 0x80000000) == 0)
      goto LABEL_266;
LABEL_632:
    v125 = *(_DWORD *)(v41 + 2180);
    if (v120)
      goto LABEL_276;
    goto LABEL_270;
  }
  if ((v122 & 0x10000000) != 0)
    v229 = 0x40000000;
  else
    v229 = 0x80000000;
  if ((v122 & 0x20000000) != 0)
    v122 = v229;
  else
    v122 &= 0xCFFFFFFF;
  v123 = v42[12];
  if ((v123 & 0x80000000) != 0)
    goto LABEL_632;
LABEL_266:
  v124 = *(_QWORD *)(v41 + 2328);
  if (v123 >= (*(_QWORD *)(v41 + 2336) - v124) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v124 = *(_QWORD *)(v41 + 2328);
    v120 = **v93;
  }
  v125 = *(_DWORD *)(v124 + (v123 << 11) + 1900);
  if (!v120)
  {
LABEL_270:
    if ((v125 & 0x10000000) != 0)
      v126 = 0x40000000;
    else
      v126 = 0x80000000;
    if ((v125 & 0x20000000) != 0)
      v125 = v126;
    else
      v125 &= 0xCFFFFFFF;
  }
LABEL_276:
  v298 = v77[27];
  if (**v306)
  {
    v127 = v42[12];
    if ((v127 & 0x80000000) == 0)
      goto LABEL_278;
LABEL_640:
    v129 = *(_DWORD *)(v41 + 2212);
    if (v120)
      goto LABEL_288;
    goto LABEL_282;
  }
  v230 = v298 & 0xCFFFFFFF;
  if ((v298 & 0x10000000) != 0)
    v231 = 0x40000000;
  else
    v231 = 0x80000000;
  if ((v298 & 0x20000000) != 0)
    v230 = v231;
  v298 = v230;
  v127 = v42[12];
  if ((v127 & 0x80000000) != 0)
    goto LABEL_640;
LABEL_278:
  v128 = *(_QWORD *)(v41 + 2328);
  if (v127 >= (*(_QWORD *)(v41 + 2336) - v128) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v128 = *(_QWORD *)(v41 + 2328);
    v120 = **v93;
  }
  v129 = *(_DWORD *)(v128 + (v127 << 11) + 1932);
  if (!v120)
  {
LABEL_282:
    if ((v129 & 0x10000000) != 0)
      v130 = 0x40000000;
    else
      v130 = 0x80000000;
    if ((v129 & 0x20000000) != 0)
      v129 = v130;
    else
      v129 &= 0xCFFFFFFF;
  }
LABEL_288:
  v262 = v119 >> 30;
  v280 = v125 >> 30;
  v283 = v122 >> 30;
  v271 = v129 >> 30;
  v345 = v320;
  v346 = v321;
  v347 = v322;
  v343 = v318;
  v344 = v319;
  if ((v301 & 0x40000000) != 0)
  {
    v375 = v320;
    v376 = v321;
    v377 = v322;
    v374 = v319;
    v373 = v318;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224671640;
    v369 = xmmword_224671650;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 2, 3, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5A0000001ALL), xmmword_224671650);
    if ((v303 & 0x40000000) == 0)
    {
      v370 = v320;
      v371 = v321;
      v372 = v322;
      v369 = v319;
      v368 = v318;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224671660;
      v424 = xmmword_224671670;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 2, 3, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5A0000001ALL), xmmword_224671670);
      if (((v295 | v289) & 1) == 0)
      {
        v425 = v320;
        v426 = v321;
        v427 = v322;
        v423 = v318;
        v424 = v319;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224671680;
        v419 = xmmword_224671690;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 2, 3, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5A0000001ALL), xmmword_224671690);
        v131 = (v265 & 1) == 0 && ((v292 | v286) & 1) == 0;
        if ((v267 & 1) == 0 && v131)
        {
          v420 = v320;
          v421 = v321;
          v422 = v322;
          v419 = v319;
          v418 = v318;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246716A0;
          v414 = xmmword_2246716B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 2, 3, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1DA0000001ALL), xmmword_2246716B0);
        }
      }
      v132 = (v276 & 1) == 0 && ((v292 | v286) & 1) == 0;
      if (v132 && (v274 & 1) == 0)
      {
        v415 = v345;
        v416 = v346;
        v417 = v347;
        v414 = v344;
        v413 = v343;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246716C0;
        v409 = xmmword_2246716D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 2, 3, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1DA0000001ALL), xmmword_2246716D0);
      }
    }
    if (((v289 | v283) & 1) == 0)
    {
      v410 = v345;
      v411 = v346;
      v412 = v347;
      v409 = v344;
      v408 = v343;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246716E0;
      v404 = xmmword_2246716F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 2, 3, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5A0000001ALL), xmmword_2246716F0);
      v133 = (v119 & 0x40000000) == 0 && ((v286 | v280) & 1) == 0;
      if ((v265 & 1) == 0 && v133)
      {
        v405 = v345;
        v406 = v346;
        v407 = v347;
        v404 = v344;
        v403 = v343;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224671700;
        v399 = xmmword_224671710;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 2, 3, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1DA0000001ALL), xmmword_224671710);
      }
    }
    v134 = (v274 & 1) == 0 && ((v286 | v280) & 1) == 0;
    if (v134 && (v271 & 1) == 0)
    {
      v400 = v345;
      v401 = v346;
      v402 = v347;
      v399 = v344;
      v398 = v343;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224671720;
      v394 = xmmword_224671730;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 2, 3, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1DA0000001ALL), xmmword_224671730);
    }
  }
  v340 = v330;
  v341 = v331;
  v342 = v332;
  v338 = v328;
  v339 = v329;
  v135 = v42[12];
  if ((v135 & 0x80000000) != 0)
  {
    v137 = *(_DWORD *)(v41 + 2152);
    v138 = **v93;
    if (**v93)
      goto LABEL_327;
    goto LABEL_321;
  }
  v136 = *(_QWORD *)(v41 + 2328);
  if (v135 >= (*(_QWORD *)(v41 + 2336) - v136) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v136 = *(_QWORD *)(v41 + 2328);
  }
  v137 = *(_DWORD *)(v136 + (v135 << 11) + 1872);
  v138 = **v93;
  if (!**v93)
  {
LABEL_321:
    if ((v137 & 0x10000000) != 0)
      v139 = 0x40000000;
    else
      v139 = 0x80000000;
    if ((v137 & 0x20000000) != 0)
      v137 = v139;
    else
      v137 &= 0xCFFFFFFF;
  }
LABEL_327:
  v140 = v77[20];
  if (**v306)
  {
    v141 = v42[12];
    if ((v141 & 0x80000000) == 0)
      goto LABEL_329;
LABEL_651:
    v143 = *(_DWORD *)(v41 + 2184);
    if (v138)
      goto LABEL_339;
    goto LABEL_333;
  }
  if ((v140 & 0x10000000) != 0)
    v232 = 0x40000000;
  else
    v232 = 0x80000000;
  if ((v140 & 0x20000000) != 0)
    v140 = v232;
  else
    v140 &= 0xCFFFFFFF;
  v141 = v42[12];
  if ((v141 & 0x80000000) != 0)
    goto LABEL_651;
LABEL_329:
  v142 = *(_QWORD *)(v41 + 2328);
  if (v141 >= (*(_QWORD *)(v41 + 2336) - v142) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v142 = *(_QWORD *)(v41 + 2328);
    v138 = **v93;
  }
  v143 = *(_DWORD *)(v142 + (v141 << 11) + 1904);
  if (!v138)
  {
LABEL_333:
    if ((v143 & 0x10000000) != 0)
      v144 = 0x40000000;
    else
      v144 = 0x80000000;
    if ((v143 & 0x20000000) != 0)
      v143 = v144;
    else
      v143 &= 0xCFFFFFFF;
  }
LABEL_339:
  v304 = v77[28];
  if (**v306)
  {
    v145 = v42[12];
    if ((v145 & 0x80000000) == 0)
      goto LABEL_341;
LABEL_659:
    v147 = *(_DWORD *)(v41 + 2216);
    if (v138)
      goto LABEL_351;
    goto LABEL_345;
  }
  v233 = v304 & 0xCFFFFFFF;
  if ((v304 & 0x10000000) != 0)
    v234 = 0x40000000;
  else
    v234 = 0x80000000;
  if ((v304 & 0x20000000) != 0)
    v233 = v234;
  v304 = v233;
  v145 = v42[12];
  if ((v145 & 0x80000000) != 0)
    goto LABEL_659;
LABEL_341:
  v146 = *(_QWORD *)(v41 + 2328);
  if (v145 >= (*(_QWORD *)(v41 + 2336) - v146) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v146 = *(_QWORD *)(v41 + 2328);
    v138 = **v93;
  }
  v147 = *(_DWORD *)(v146 + (v145 << 11) + 1936);
  if (!v138)
  {
LABEL_345:
    if ((v147 & 0x10000000) != 0)
      v148 = 0x40000000;
    else
      v148 = 0x80000000;
    if ((v147 & 0x20000000) != 0)
      v147 = v148;
    else
      v147 &= 0xCFFFFFFF;
  }
LABEL_351:
  v268 = v137 >> 30;
  v293 = v143 >> 30;
  v296 = v140 >> 30;
  v277 = v147 >> 30;
  v355 = v330;
  v356 = v331;
  v357 = v332;
  v353 = v328;
  v354 = v329;
  if ((v298 & 0x40000000) != 0)
  {
    v375 = v330;
    v376 = v331;
    v377 = v332;
    v374 = v329;
    v373 = v328;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224671740;
    v369 = xmmword_224671750;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 3, 3, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5B0000001BLL), xmmword_224671750);
    if ((v301 & 0x40000000) == 0)
    {
      v370 = v330;
      v371 = v331;
      v372 = v332;
      v369 = v329;
      v368 = v328;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224671760;
      v424 = xmmword_224671770;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 3, 3, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5B0000001BLL), xmmword_224671770);
      if (((v289 | v283) & 1) == 0)
      {
        v425 = v330;
        v426 = v331;
        v427 = v332;
        v423 = v328;
        v424 = v329;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224671780;
        v419 = xmmword_224671790;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 3, 3, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5B0000001BLL), xmmword_224671790);
        v149 = (v262 & 1) == 0 && ((v286 | v280) & 1) == 0;
        if ((v265 & 1) == 0 && v149)
        {
          v420 = v330;
          v421 = v331;
          v422 = v332;
          v419 = v329;
          v418 = v328;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246717A0;
          v414 = xmmword_2246717B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 3, 3, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1DB0000001BLL), xmmword_2246717B0);
        }
      }
      v150 = (v274 & 1) == 0 && ((v286 | v280) & 1) == 0;
      if (v150 && (v271 & 1) == 0)
      {
        v415 = v355;
        v416 = v356;
        v417 = v357;
        v414 = v354;
        v413 = v353;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246717C0;
        v409 = xmmword_2246717D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 3, 3, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1DB0000001BLL), xmmword_2246717D0);
      }
    }
    if (((v283 | v296) & 1) == 0)
    {
      v410 = v355;
      v411 = v356;
      v412 = v357;
      v409 = v354;
      v408 = v353;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246717E0;
      v404 = xmmword_2246717F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 3, 3, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5B0000001BLL), xmmword_2246717F0);
      v151 = (v137 & 0x40000000) == 0 && ((v280 | v293) & 1) == 0;
      if ((v262 & 1) == 0 && v151)
      {
        v405 = v355;
        v406 = v356;
        v407 = v357;
        v404 = v354;
        v403 = v353;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224671800;
        v399 = xmmword_224671810;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 3, 3, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1DB0000001BLL), xmmword_224671810);
      }
    }
    v152 = (v271 & 1) == 0 && ((v280 | v293) & 1) == 0;
    if (v152 && (v277 & 1) == 0)
    {
      v400 = v355;
      v401 = v356;
      v402 = v357;
      v399 = v354;
      v398 = v353;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224671820;
      v394 = xmmword_224671830;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 3, 3, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1DB0000001BLL), xmmword_224671830);
    }
  }
  v350 = v340;
  v351 = v341;
  v352 = v342;
  v348 = v338;
  v349 = v339;
  v153 = v42[12];
  if ((v153 & 0x80000000) != 0)
  {
    v155 = *(_DWORD *)(v41 + 2156);
    v156 = **v93;
    if (**v93)
      goto LABEL_390;
    goto LABEL_384;
  }
  v154 = *(_QWORD *)(v41 + 2328);
  if (v153 >= (*(_QWORD *)(v41 + 2336) - v154) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v154 = *(_QWORD *)(v41 + 2328);
  }
  v155 = *(_DWORD *)(v154 + (v153 << 11) + 1876);
  v156 = **v93;
  if (!**v93)
  {
LABEL_384:
    if ((v155 & 0x10000000) != 0)
      v157 = 0x40000000;
    else
      v157 = 0x80000000;
    if ((v155 & 0x20000000) != 0)
      v155 = v157;
    else
      v155 &= 0xCFFFFFFF;
  }
LABEL_390:
  v158 = v77[21];
  if (**v306)
  {
    v159 = v42[12];
    if ((v159 & 0x80000000) == 0)
      goto LABEL_392;
LABEL_670:
    v161 = *(_DWORD *)(v41 + 2188);
    if (v156)
      goto LABEL_402;
    goto LABEL_396;
  }
  if ((v158 & 0x10000000) != 0)
    v235 = 0x40000000;
  else
    v235 = 0x80000000;
  if ((v158 & 0x20000000) != 0)
    v158 = v235;
  else
    v158 &= 0xCFFFFFFF;
  v159 = v42[12];
  if ((v159 & 0x80000000) != 0)
    goto LABEL_670;
LABEL_392:
  v160 = *(_QWORD *)(v41 + 2328);
  if (v159 >= (*(_QWORD *)(v41 + 2336) - v160) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v160 = *(_QWORD *)(v41 + 2328);
    v156 = **v93;
  }
  v161 = *(_DWORD *)(v160 + (v159 << 11) + 1908);
  if (!v156)
  {
LABEL_396:
    if ((v161 & 0x10000000) != 0)
      v162 = 0x40000000;
    else
      v162 = 0x80000000;
    if ((v161 & 0x20000000) != 0)
      v161 = v162;
    else
      v161 &= 0xCFFFFFFF;
  }
LABEL_402:
  v302 = v77[29];
  if (**v306)
  {
    v163 = v42[12];
    if ((v163 & 0x80000000) == 0)
      goto LABEL_404;
LABEL_678:
    v165 = *(_DWORD *)(v41 + 2220);
    if (v156)
      goto LABEL_414;
    goto LABEL_408;
  }
  v236 = v302 & 0xCFFFFFFF;
  if ((v302 & 0x10000000) != 0)
    v237 = 0x40000000;
  else
    v237 = 0x80000000;
  if ((v302 & 0x20000000) != 0)
    v236 = v237;
  v302 = v236;
  v163 = v42[12];
  if ((v163 & 0x80000000) != 0)
    goto LABEL_678;
LABEL_404:
  v164 = *(_QWORD *)(v41 + 2328);
  if (v163 >= (*(_QWORD *)(v41 + 2336) - v164) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v164 = *(_QWORD *)(v41 + 2328);
    v156 = **v93;
  }
  v165 = *(_DWORD *)(v164 + (v163 << 11) + 1940);
  if (!v156)
  {
LABEL_408:
    if ((v165 & 0x10000000) != 0)
      v166 = 0x40000000;
    else
      v166 = 0x80000000;
    if ((v165 & 0x20000000) != 0)
      v165 = v166;
    else
      v165 &= 0xCFFFFFFF;
  }
LABEL_414:
  v266 = v155 >> 30;
  v287 = v161 >> 30;
  v290 = v158 >> 30;
  v275 = v165 >> 30;
  v365 = v340;
  v366 = v341;
  v367 = v342;
  v364 = v339;
  v363 = v338;
  if ((v304 & 0x40000000) != 0)
  {
    v375 = v340;
    v376 = v341;
    v377 = v342;
    v374 = v339;
    v373 = v338;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224671840;
    v369 = xmmword_224671850;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 4, 3, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5C0000001CLL), xmmword_224671850);
    if ((v298 & 0x40000000) == 0)
    {
      v370 = v340;
      v371 = v341;
      v372 = v342;
      v369 = v339;
      v368 = v338;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224671860;
      v424 = xmmword_224671870;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 4, 3, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5C0000001CLL), xmmword_224671870);
      if (((v283 | v296) & 1) == 0)
      {
        v425 = v340;
        v426 = v341;
        v427 = v342;
        v423 = v338;
        v424 = v339;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224671880;
        v419 = xmmword_224671890;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 4, 3, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5C0000001CLL), xmmword_224671890);
        v167 = (v268 & 1) == 0 && ((v280 | v293) & 1) == 0;
        if ((v262 & 1) == 0 && v167)
        {
          v420 = v340;
          v421 = v341;
          v422 = v342;
          v419 = v339;
          v418 = v338;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246718A0;
          v414 = xmmword_2246718B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 4, 3, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1DC0000001CLL), xmmword_2246718B0);
        }
      }
      v168 = (v271 & 1) == 0 && ((v280 | v293) & 1) == 0;
      if (v168 && (v277 & 1) == 0)
      {
        v415 = v365;
        v416 = v366;
        v417 = v367;
        v414 = v364;
        v413 = v363;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246718C0;
        v409 = xmmword_2246718D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 4, 3, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1DC0000001CLL), xmmword_2246718D0);
      }
    }
    if (((v296 | v290) & 1) == 0)
    {
      v410 = v365;
      v411 = v366;
      v412 = v367;
      v409 = v364;
      v408 = v363;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246718E0;
      v404 = xmmword_2246718F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 4, 3, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5C0000001CLL), xmmword_2246718F0);
      v169 = (v155 & 0x40000000) == 0 && ((v293 | v287) & 1) == 0;
      if ((v268 & 1) == 0 && v169)
      {
        v405 = v365;
        v406 = v366;
        v407 = v367;
        v404 = v364;
        v403 = v363;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224671900;
        v399 = xmmword_224671910;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 4, 3, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1DC0000001CLL), xmmword_224671910);
      }
    }
    v170 = (v277 & 1) == 0 && ((v293 | v287) & 1) == 0;
    if (v170 && (v275 & 1) == 0)
    {
      v400 = v365;
      v401 = v366;
      v402 = v367;
      v399 = v364;
      v398 = v363;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224671920;
      v394 = xmmword_224671930;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 4, 3, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1DC0000001CLL), xmmword_224671930);
    }
  }
  v360 = v350;
  v361 = v351;
  v362 = v352;
  v358 = v348;
  v359 = v349;
  v171 = v42[12];
  if ((v171 & 0x80000000) != 0)
  {
    v173 = *(_DWORD *)(v41 + 2160);
    v174 = **v93;
    if (**v93)
      goto LABEL_453;
    goto LABEL_447;
  }
  v172 = *(_QWORD *)(v41 + 2328);
  if (v171 >= (*(_QWORD *)(v41 + 2336) - v172) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v172 = *(_QWORD *)(v41 + 2328);
  }
  v173 = *(_DWORD *)(v172 + (v171 << 11) + 1880);
  v174 = **v93;
  if (!**v93)
  {
LABEL_447:
    if ((v173 & 0x10000000) != 0)
      v175 = 0x40000000;
    else
      v175 = 0x80000000;
    if ((v173 & 0x20000000) != 0)
      v173 = v175;
    else
      v173 &= 0xCFFFFFFF;
  }
LABEL_453:
  v176 = v77[22];
  if (**v306)
  {
    v177 = v42[12];
    if ((v177 & 0x80000000) == 0)
      goto LABEL_455;
LABEL_689:
    v179 = *(_DWORD *)(v41 + 2192);
    if (v174)
      goto LABEL_465;
    goto LABEL_459;
  }
  if ((v176 & 0x10000000) != 0)
    v238 = 0x40000000;
  else
    v238 = 0x80000000;
  if ((v176 & 0x20000000) != 0)
    v176 = v238;
  else
    v176 &= 0xCFFFFFFF;
  v177 = v42[12];
  if ((v177 & 0x80000000) != 0)
    goto LABEL_689;
LABEL_455:
  v178 = *(_QWORD *)(v41 + 2328);
  if (v177 >= (*(_QWORD *)(v41 + 2336) - v178) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v178 = *(_QWORD *)(v41 + 2328);
    v174 = **v93;
  }
  v179 = *(_DWORD *)(v178 + (v177 << 11) + 1912);
  if (!v174)
  {
LABEL_459:
    if ((v179 & 0x10000000) != 0)
      v180 = 0x40000000;
    else
      v180 = 0x80000000;
    if ((v179 & 0x20000000) != 0)
      v179 = v180;
    else
      v179 &= 0xCFFFFFFF;
  }
LABEL_465:
  v299 = v77[30];
  if (**v306)
  {
    v181 = v42[12];
    if ((v181 & 0x80000000) == 0)
      goto LABEL_467;
LABEL_697:
    v183 = *(_DWORD *)(v41 + 2224);
    if (v174)
      goto LABEL_477;
    goto LABEL_471;
  }
  v239 = v299 & 0xCFFFFFFF;
  if ((v299 & 0x10000000) != 0)
    v240 = 0x40000000;
  else
    v240 = 0x80000000;
  if ((v299 & 0x20000000) != 0)
    v239 = v240;
  v299 = v239;
  v181 = v42[12];
  if ((v181 & 0x80000000) != 0)
    goto LABEL_697;
LABEL_467:
  v182 = *(_QWORD *)(v41 + 2328);
  if (v181 >= (*(_QWORD *)(v41 + 2336) - v182) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v182 = *(_QWORD *)(v41 + 2328);
    v174 = **v93;
  }
  v183 = *(_DWORD *)(v182 + (v181 << 11) + 1944);
  if (!v174)
  {
LABEL_471:
    if ((v183 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v183 & 0x20000000) != 0)
      v183 = v184;
    else
      v183 &= 0xCFFFFFFF;
  }
LABEL_477:
  v263 = v173 >> 30;
  v281 = v179 >> 30;
  v284 = v176 >> 30;
  v272 = v183 >> 30;
  v385 = v350;
  v386 = v351;
  v387 = v352;
  v384 = v349;
  v383 = v348;
  if ((v302 & 0x40000000) != 0)
  {
    v375 = v350;
    v376 = v351;
    v377 = v352;
    v374 = v349;
    v373 = v348;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224671940;
    v369 = xmmword_224671950;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 5, 3, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5D0000001DLL), xmmword_224671950);
    if ((v304 & 0x40000000) == 0)
    {
      v370 = v350;
      v371 = v351;
      v372 = v352;
      v369 = v349;
      v368 = v348;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224671960;
      v424 = xmmword_224671970;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 5, 3, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5D0000001DLL), xmmword_224671970);
      if (((v296 | v290) & 1) == 0)
      {
        v425 = v350;
        v426 = v351;
        v427 = v352;
        v423 = v348;
        v424 = v349;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224671980;
        v419 = xmmword_224671990;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 5, 3, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5D0000001DLL), xmmword_224671990);
        v185 = (v266 & 1) == 0 && ((v293 | v287) & 1) == 0;
        if ((v268 & 1) == 0 && v185)
        {
          v420 = v350;
          v421 = v351;
          v422 = v352;
          v419 = v349;
          v418 = v348;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246719A0;
          v414 = xmmword_2246719B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 5, 3, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1DD0000001DLL), xmmword_2246719B0);
        }
      }
      v186 = (v277 & 1) == 0 && ((v293 | v287) & 1) == 0;
      if (v186 && (v275 & 1) == 0)
      {
        v415 = v385;
        v416 = v386;
        v417 = v387;
        v414 = v384;
        v413 = v383;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246719C0;
        v409 = xmmword_2246719D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 5, 3, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1DD0000001DLL), xmmword_2246719D0);
      }
    }
    if (((v290 | v284) & 1) == 0)
    {
      v410 = v385;
      v411 = v386;
      v412 = v387;
      v409 = v384;
      v408 = v383;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246719E0;
      v404 = xmmword_2246719F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 5, 3, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5D0000001DLL), xmmword_2246719F0);
      v187 = (v173 & 0x40000000) == 0 && ((v287 | v281) & 1) == 0;
      if ((v266 & 1) == 0 && v187)
      {
        v405 = v385;
        v406 = v386;
        v407 = v387;
        v404 = v384;
        v403 = v383;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224671A00;
        v399 = xmmword_224671A10;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 5, 3, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1DD0000001DLL), xmmword_224671A10);
      }
    }
    v188 = (v275 & 1) == 0 && ((v287 | v281) & 1) == 0;
    if (v188 && (v272 & 1) == 0)
    {
      v400 = v385;
      v401 = v386;
      v402 = v387;
      v399 = v384;
      v398 = v383;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224671A20;
      v394 = xmmword_224671A30;
      *(_QWORD *)&v378 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 5, 3, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v378, COERCE_DOUBLE(0x1DD0000001DLL), xmmword_224671A30);
    }
  }
  v380 = v360;
  v381 = v361;
  v382 = v362;
  v379 = v359;
  v378 = v358;
  v189 = v42[12];
  if ((v189 & 0x80000000) != 0)
  {
    v191 = *(_DWORD *)(v41 + 2164);
    v192 = **v93;
    if (**v93)
      goto LABEL_516;
    goto LABEL_510;
  }
  v190 = *(_QWORD *)(v41 + 2328);
  if (v189 >= (*(_QWORD *)(v41 + 2336) - v190) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v190 = *(_QWORD *)(v41 + 2328);
  }
  v191 = *(_DWORD *)(v190 + (v189 << 11) + 1884);
  v192 = **v93;
  if (!**v93)
  {
LABEL_510:
    if ((v191 & 0x10000000) != 0)
      v193 = 0x40000000;
    else
      v193 = 0x80000000;
    if ((v191 & 0x20000000) != 0)
      v191 = v193;
    else
      v191 &= 0xCFFFFFFF;
  }
LABEL_516:
  v194 = v77[23];
  if (**v306)
  {
    v195 = v42[12];
    if ((v195 & 0x80000000) == 0)
      goto LABEL_518;
LABEL_708:
    v197 = *(_DWORD *)(v41 + 2196);
    if (v192)
      goto LABEL_528;
    goto LABEL_522;
  }
  if ((v194 & 0x10000000) != 0)
    v241 = 0x40000000;
  else
    v241 = 0x80000000;
  if ((v194 & 0x20000000) != 0)
    v194 = v241;
  else
    v194 &= 0xCFFFFFFF;
  v195 = v42[12];
  if ((v195 & 0x80000000) != 0)
    goto LABEL_708;
LABEL_518:
  v196 = *(_QWORD *)(v41 + 2328);
  if (v195 >= (*(_QWORD *)(v41 + 2336) - v196) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v196 = *(_QWORD *)(v41 + 2328);
    v192 = **v93;
  }
  v197 = *(_DWORD *)(v196 + (v195 << 11) + 1916);
  if (!v192)
  {
LABEL_522:
    if ((v197 & 0x10000000) != 0)
      v198 = 0x40000000;
    else
      v198 = 0x80000000;
    if ((v197 & 0x20000000) != 0)
      v197 = v198;
    else
      v197 &= 0xCFFFFFFF;
  }
LABEL_528:
  v199 = v77[31];
  if (**v306)
  {
    v200 = v42[12];
    if ((v200 & 0x80000000) == 0)
      goto LABEL_530;
LABEL_717:
    v202 = *(_DWORD *)(v41 + 2228);
    if (v192)
      goto LABEL_540;
    goto LABEL_534;
  }
  if ((v199 & 0x10000000) != 0)
    v242 = 0x40000000;
  else
    v242 = 0x80000000;
  if ((v199 & 0x20000000) != 0)
    v199 = v242;
  else
    v199 &= 0xCFFFFFFF;
  v200 = v42[12];
  if ((v200 & 0x80000000) != 0)
    goto LABEL_717;
LABEL_530:
  v201 = *(_QWORD *)(v41 + 2328);
  if (v200 >= (*(_QWORD *)(v41 + 2336) - v201) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v201 = *(_QWORD *)(v41 + 2328);
    v192 = **v93;
  }
  v202 = *(_DWORD *)(v201 + (v200 << 11) + 1948);
  if (!v192)
  {
LABEL_534:
    if ((v202 & 0x10000000) != 0)
      v203 = 0x40000000;
    else
      v203 = 0x80000000;
    if ((v202 & 0x20000000) != 0)
      v202 = v203;
    else
      v202 &= 0xCFFFFFFF;
  }
LABEL_540:
  v305 = v191 >> 30;
  v307 = v194 >> 30;
  v204 = v197 >> 30;
  v205 = v202 >> 30;
  v390 = v360;
  v391 = v361;
  v392 = v362;
  v389 = v359;
  v388 = v358;
  if ((v299 & 0x40000000) != 0)
  {
    v375 = v360;
    v376 = v361;
    v377 = v362;
    v374 = v359;
    v373 = v358;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224671A40;
    v369 = xmmword_224671A50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 6, 3, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5E0000001ELL), xmmword_224671A50);
    if ((v302 & 0x40000000) == 0)
    {
      v370 = v360;
      v371 = v361;
      v372 = v362;
      v369 = v359;
      v368 = v358;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224671A60;
      v424 = xmmword_224671A70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 6, 3, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5E0000001ELL), xmmword_224671A70);
      if (((v290 | v284) & 1) == 0)
      {
        v425 = v360;
        v426 = v361;
        v427 = v362;
        v423 = v358;
        v424 = v359;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224671A80;
        v419 = xmmword_224671A90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 6, 3, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5E0000001ELL), xmmword_224671A90);
        v206 = (v263 & 1) == 0 && ((v287 | v281) & 1) == 0;
        if ((v266 & 1) == 0 && v206)
        {
          v420 = v360;
          v421 = v361;
          v422 = v362;
          v419 = v359;
          v418 = v358;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_224671AA0;
          v414 = xmmword_224671AB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 6, 3, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1DE0000001ELL), xmmword_224671AB0);
        }
      }
      v207 = (v275 & 1) == 0 && ((v287 | v281) & 1) == 0;
      if (v207 && (v272 & 1) == 0)
      {
        v415 = v390;
        v416 = v391;
        v417 = v392;
        v414 = v389;
        v413 = v388;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_224671AC0;
        v409 = xmmword_224671AD0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 6, 3, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1DE0000001ELL), xmmword_224671AD0);
      }
    }
    if (((v284 | v307) & 1) == 0)
    {
      v410 = v390;
      v411 = v391;
      v412 = v392;
      v409 = v389;
      v408 = v388;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_224671AE0;
      v404 = xmmword_224671AF0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 6, 3, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x5E0000001ELL), xmmword_224671AF0);
      v208 = (v191 & 0x40000000) == 0 && ((v281 | v204) & 1) == 0;
      if ((v263 & 1) == 0 && v208)
      {
        v405 = v390;
        v406 = v391;
        v407 = v392;
        v404 = v389;
        v403 = v388;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224671B00;
        v399 = xmmword_224671B10;
        *(_QWORD *)&v429[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 6, 3, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)v429, COERCE_DOUBLE(0x1DE0000001ELL), xmmword_224671B10);
      }
    }
    v209 = (v272 & 1) == 0 && ((v281 | v204) & 1) == 0;
    if (v209 && (v205 & 1) == 0)
    {
      v400 = v390;
      v401 = v391;
      v402 = v392;
      v399 = v389;
      v398 = v388;
      *(_QWORD *)&v429[0] = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224671B20;
      v394 = xmmword_224671B30;
      v430[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 6, 3, 0, (uint64_t)v429, (uint64_t)&v393, (uint64_t)v430, COERCE_DOUBLE(0x1DE0000001ELL), xmmword_224671B30);
    }
  }
  v210 = v42[21];
  if ((v210 & 0x80000000) != 0)
  {
    v213 = *v93;
    v214 = *(_DWORD *)(v41 + 2136);
    v215 = **v93;
    if (**v93)
      goto LABEL_573;
  }
  else
  {
    v211 = *(_QWORD *)(v41 + 2328);
    if (v210 >= (*(_QWORD *)(v41 + 2336) - v211) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v211 = *(_QWORD *)(v41 + 2328);
    }
    v212 = v211 + (v210 << 11);
    v213 = *v93;
    v214 = *(_DWORD *)(v212 + 1856);
    v215 = **v93;
    if (**v93)
    {
LABEL_573:
      v216 = v42[22];
      if ((v216 & 0x80000000) == 0)
        goto LABEL_574;
LABEL_727:
      v218 = *(_DWORD *)(v41 + 344);
      if (v215)
        goto LABEL_578;
      goto LABEL_728;
    }
  }
  if ((v214 & 0x10000000) != 0)
    v243 = 0x40000000;
  else
    v243 = 0x80000000;
  if ((v214 & 0x20000000) != 0)
    v214 = v243;
  else
    v214 &= 0xCFFFFFFF;
  v216 = v42[22];
  if ((v216 & 0x80000000) != 0)
    goto LABEL_727;
LABEL_574:
  v217 = *(_QWORD *)(v41 + 2328);
  if (v216 >= (*(_QWORD *)(v41 + 2336) - v217) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v217 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
    v215 = **v93;
  }
  v218 = *(_DWORD *)(v217 + (v216 << 11) + 64);
  if (v215)
  {
LABEL_578:
    v219 = v42[21];
    if ((v219 & 0x80000000) == 0)
      goto LABEL_579;
LABEL_735:
    v221 = *(_DWORD *)(v41 + 2168);
    if (v215)
      goto LABEL_583;
LABEL_736:
    if ((v221 & 0x10000000) != 0)
      v245 = 0x40000000;
    else
      v245 = 0x80000000;
    if ((v221 & 0x20000000) != 0)
      v221 = v245;
    else
      v221 &= 0xCFFFFFFF;
    v222 = v42[22];
    if ((v222 & 0x80000000) != 0)
      goto LABEL_746;
    goto LABEL_743;
  }
LABEL_728:
  if ((v218 & 0x10000000) != 0)
    v244 = 0x40000000;
  else
    v244 = 0x80000000;
  if ((v218 & 0x20000000) != 0)
    v218 = v244;
  else
    v218 &= 0xCFFFFFFF;
  v219 = v42[21];
  if ((v219 & 0x80000000) != 0)
    goto LABEL_735;
LABEL_579:
  v220 = *(_QWORD *)(v41 + 2328);
  if (v219 >= (*(_QWORD *)(v41 + 2336) - v220) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v220 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
    v215 = **v93;
  }
  v221 = *(_DWORD *)(v220 + (v219 << 11) + 1888);
  if (!v215)
    goto LABEL_736;
LABEL_583:
  v222 = v42[22];
  if ((v222 & 0x80000000) != 0)
    goto LABEL_746;
LABEL_743:
  if (v222 >= (uint64_t)(*(_QWORD *)(v41 + 2336) - *(_QWORD *)(v41 + 2328)) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v213 = *v93;
  }
LABEL_746:
  v246 = v42[21];
  if ((v246 & 0x80000000) != 0)
  {
    v248 = *(_DWORD *)(v41 + 2200);
    if (*v213)
      goto LABEL_757;
    goto LABEL_751;
  }
  v247 = *(_QWORD *)(v41 + 2328);
  if (v246 >= (*(_QWORD *)(v41 + 2336) - v247) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v247 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
  }
  v248 = *(_DWORD *)(v247 + (v246 << 11) + 1920);
  if (!*v213)
  {
LABEL_751:
    if ((v248 & 0x10000000) != 0)
      v249 = 0x40000000;
    else
      v249 = 0x80000000;
    if ((v248 & 0x20000000) != 0)
      v248 = v249;
    else
      v248 &= 0xCFFFFFFF;
  }
LABEL_757:
  v395 = v380;
  v396 = v381;
  v397 = v382;
  v394 = v379;
  v393 = v378;
  if ((v199 & 0x40000000) != 0)
  {
    v375 = v380;
    v376 = v381;
    v377 = v382;
    *(_QWORD *)&v423 = 0x161616160D0D0D0DLL;
    v374 = v379;
    v373 = v378;
    v368 = xmmword_224671B40;
    v369 = xmmword_224671B50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 7, 3, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x5F0000001FLL), xmmword_224671B50);
    if ((v299 & 0x40000000) == 0)
    {
      v370 = v380;
      v371 = v381;
      v372 = v382;
      v369 = v379;
      v368 = v378;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224671B60;
      v424 = xmmword_224671B70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 7, 3, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x5F0000001FLL), xmmword_224671B70);
      if (((v284 | v307) & 1) == 0)
      {
        v425 = v380;
        v426 = v381;
        v427 = v382;
        v423 = v378;
        v424 = v379;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224671B80;
        v419 = xmmword_224671B90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 7, 3, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x5F0000001FLL), xmmword_224671B90);
        v250 = (v305 & 1) == 0 && ((v281 | v204) & 1) == 0;
        if ((v263 & 1) == 0 && v250)
        {
          v420 = v380;
          v421 = v381;
          v422 = v382;
          v419 = v379;
          v418 = v378;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_224671BA0;
          v414 = xmmword_224671BB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 7, 3, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1DF0000001FLL), xmmword_224671BB0);
        }
      }
      v251 = (v272 & 1) == 0 && ((v281 | v204) & 1) == 0;
      if (v251 && (v205 & 1) == 0)
      {
        v415 = v395;
        v416 = v396;
        v417 = v397;
        v414 = v394;
        v413 = v393;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_224671BC0;
        v409 = xmmword_224671BD0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 7, 3, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1DF0000001FLL), xmmword_224671BD0);
      }
    }
    if (!(v218 & 0x40000000 | v307 & 1))
    {
      v410 = v395;
      v411 = v396;
      v412 = v397;
      *(_QWORD *)&v398 = 0x16160D0D16160D0DLL;
      v409 = v394;
      v408 = v393;
      v403 = xmmword_224671BE0;
      v404 = xmmword_224671BF0;
      *(_QWORD *)&v429[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 7, 3, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)v429, COERCE_DOUBLE(0x5F0000001FLL), xmmword_224671BF0);
      v252 = (v214 & 0x40000000) == 0 && (v221 & 0x40000000 | v204 & 1) == 0;
      if ((v305 & 1) == 0 && v252)
      {
        v405 = v395;
        v406 = v396;
        v407 = v397;
        v404 = v394;
        v403 = v393;
        *(_QWORD *)&v429[0] = 0x151615160C0D0C0DLL;
        v398 = xmmword_224671C00;
        v399 = xmmword_224671C10;
        v430[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 7, 3, 0, (uint64_t)v429, (uint64_t)&v398, (uint64_t)v430, COERCE_DOUBLE(0x1DF0000001FLL), xmmword_224671C10);
      }
    }
    v253 = (v205 & 1) == 0 && (v221 & 0x40000000 | v204 & 1) == 0;
    if (v253 && (v248 & 0x40000000) == 0)
    {
      v400 = v395;
      v401 = v396;
      v402 = v397;
      v430[0] = 0x15160C0D15160C0DLL;
      v399 = v394;
      v398 = v393;
      v429[0] = xmmword_224671C20;
      v429[1] = xmmword_224671C30;
      v428 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 7, 3, 0, (uint64_t)v430, (uint64_t)v429, (uint64_t)&v428, COERCE_DOUBLE(0x1DF0000001FLL), xmmword_224671C30);
    }
  }
  v254 = *v278;
  v312 = *((_QWORD *)v278 + 2);
  v311 = v254;
  v255 = *(_OWORD *)a2;
  v310 = a2[2];
  v256 = *v269;
  v257 = v269[1];
  v308[4] = v269[4];
  v309 = v255;
  v258 = v269[3];
  v308[2] = v269[2];
  v308[3] = v258;
  v308[0] = v256;
  v308[1] = v257;
  return sub_223D9BC38((uint64_t)&v311, (uint64_t *)&v309, v308);
}

unint64_t sub_223D9BC38(uint64_t a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v6;
  _BYTE **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  _BYTE **v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  _BYTE **v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  _BYTE **v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  _BYTE **v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  unsigned int v53;
  uint64_t v54;
  _BYTE **v55;
  unint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  _BYTE *v59;
  unsigned int v60;
  uint64_t v61;
  _BYTE **v62;
  unint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  unsigned int v66;
  uint64_t v67;
  _BYTE **v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  _BYTE *v73;
  unsigned int v74;
  _BYTE *v75;
  unsigned int v76;
  _BYTE *v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  _DWORD *v81;
  __int128 v82;
  float32x4_t v83;
  unint64_t v84;
  uint64_t v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unint64_t v90;
  uint64_t v91;
  unsigned int v92;
  unsigned int v93;
  unint64_t v94;
  uint64_t v95;
  unsigned int v96;
  _BYTE **v97;
  unsigned int v98;
  _BOOL4 v99;
  _BOOL4 v100;
  _BOOL4 v101;
  _BOOL4 v102;
  unint64_t v103;
  uint64_t v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unint64_t v109;
  uint64_t v110;
  unsigned int v111;
  unsigned int v112;
  unint64_t v113;
  uint64_t v114;
  unsigned int v115;
  unsigned int v116;
  _BOOL4 v117;
  _BOOL4 v118;
  _BOOL4 v119;
  _BOOL4 v120;
  unint64_t v121;
  uint64_t v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unint64_t v127;
  uint64_t v128;
  unsigned int v129;
  unsigned int v130;
  unint64_t v131;
  uint64_t v132;
  unsigned int v133;
  unsigned int v134;
  _BOOL4 v135;
  _BOOL4 v136;
  _BOOL4 v137;
  _BOOL4 v138;
  unint64_t v139;
  uint64_t v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unint64_t v145;
  uint64_t v146;
  unsigned int v147;
  unsigned int v148;
  unint64_t v149;
  uint64_t v150;
  unsigned int v151;
  unsigned int v152;
  _BOOL4 v153;
  _BOOL4 v154;
  _BOOL4 v155;
  _BOOL4 v156;
  unint64_t v157;
  uint64_t v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  unint64_t v163;
  uint64_t v164;
  unsigned int v165;
  unsigned int v166;
  unint64_t v167;
  uint64_t v168;
  unsigned int v169;
  unsigned int v170;
  _BOOL4 v171;
  _BOOL4 v172;
  _BOOL4 v173;
  _BOOL4 v174;
  unint64_t v175;
  uint64_t v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unint64_t v181;
  uint64_t v182;
  unsigned int v183;
  unsigned int v184;
  unint64_t v185;
  uint64_t v186;
  unsigned int v187;
  unsigned int v188;
  _BOOL4 v189;
  _BOOL4 v190;
  _BOOL4 v191;
  _BOOL4 v192;
  unint64_t v193;
  uint64_t v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  unint64_t v199;
  uint64_t v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unint64_t v204;
  uint64_t v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  _BOOL4 v210;
  _BOOL4 v211;
  _BOOL4 v212;
  _BOOL4 v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _BYTE *v217;
  unsigned int v218;
  int v219;
  unint64_t v220;
  uint64_t v221;
  unsigned int v222;
  unint64_t v223;
  uint64_t v224;
  unsigned int v225;
  unint64_t v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unint64_t v250;
  uint64_t v251;
  unsigned int v252;
  unsigned int v253;
  _BOOL4 v254;
  _BOOL4 v255;
  _BOOL4 v256;
  _BOOL4 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  __int128 *v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  uint64_t v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  _BYTE **v310;
  unsigned int v311;
  _OWORD v312[5];
  __int128 v313;
  uint64_t v314;
  __int128 v315;
  uint64_t v316;
  __int128 v317;
  float32x4_t v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  float32x4_t v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  float32x4_t v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  float32x4_t v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  float32x4_t v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  float32x4_t v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  float32x4_t v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  float32x4_t v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  float32x4_t v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  float32x4_t v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  float32x4_t v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  float32x4_t v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  float32x4_t v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  float32x4_t v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  float32x4_t v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  float32x4_t v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  float32x4_t v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  float32x4_t v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  float32x4_t v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  float32x4_t v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  float32x4_t v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  float32x4_t v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  float32x4_t v428;
  __int128 v429;
  __int128 v430;
  __int128 v431;
  uint64_t v432;
  _OWORD v433[2];
  _QWORD v434[3];

  v434[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v7 = (_BYTE **)a2[2];
  v8 = *(unsigned int *)(a2[1] + 48);
  if ((v8 & 0x80000000) != 0)
  {
    v10 = v6 + 280;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 2328);
    if (v8 >= (*(_QWORD *)(v6 + 2336) - v9) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v9 = *(_QWORD *)(v6 + 2328);
    }
    v10 = v9 + (v8 << 11);
  }
  v11 = *(_DWORD *)(v10 + 1888);
  v12 = v11 & 0xCFFFFFFF;
  if ((v11 & 0x10000000) != 0)
    v13 = 0x40000000;
  else
    v13 = 0x80000000;
  if ((v11 & 0x20000000) != 0)
    v12 = v13;
  if (**v7)
    v14 = v11;
  else
    v14 = v12;
  v15 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 96);
  v16 = v15 & 0xCFFFFFFF;
  if ((v15 & 0x10000000) != 0)
    v17 = 0x40000000;
  else
    v17 = 0x80000000;
  if ((v15 & 0x20000000) != 0)
    v16 = v17;
  if (***(_BYTE ***)a1)
    v18 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 96);
  else
    v18 = v16;
  v19 = *a2;
  v20 = (_BYTE **)a2[2];
  v21 = *(unsigned int *)(a2[1] + 48);
  if ((v21 & 0x80000000) != 0)
  {
    v23 = v19 + 280;
  }
  else
  {
    v22 = *(_QWORD *)(v19 + 2328);
    if (v21 >= (*(_QWORD *)(v19 + 2336) - v22) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v22 = *(_QWORD *)(v19 + 2328);
    }
    v23 = v22 + (v21 << 11);
  }
  v24 = *(_DWORD *)(v23 + 1920);
  v25 = v24 & 0xCFFFFFFF;
  if ((v24 & 0x10000000) != 0)
    v26 = 0x40000000;
  else
    v26 = 0x80000000;
  if ((v24 & 0x20000000) != 0)
    v25 = v26;
  if (**v20)
    v27 = v24;
  else
    v27 = v25;
  v28 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 128);
  v29 = v28 & 0xCFFFFFFF;
  if ((v28 & 0x10000000) != 0)
    v30 = 0x40000000;
  else
    v30 = 0x80000000;
  if ((v28 & 0x20000000) != 0)
    v29 = v30;
  if (***(_BYTE ***)a1)
    v31 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 128);
  else
    v31 = v29;
  v32 = *a2;
  v33 = (_BYTE **)a2[2];
  v34 = *(unsigned int *)(a2[1] + 48);
  v304 = v18;
  v295 = v27;
  v298 = v14;
  if ((v34 & 0x80000000) != 0)
  {
    v36 = v32 + 280;
  }
  else
  {
    v35 = *(_QWORD *)(v32 + 2328);
    if (v34 >= (*(_QWORD *)(v32 + 2336) - v35) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v35 = *(_QWORD *)(v32 + 2328);
    }
    v36 = v35 + (v34 << 11);
  }
  v37 = *(_DWORD *)(v36 + 1952);
  v38 = v37 & 0xCFFFFFFF;
  if ((v37 & 0x10000000) != 0)
    v39 = 0x40000000;
  else
    v39 = 0x80000000;
  if ((v37 & 0x20000000) != 0)
    v38 = v39;
  if (**v33)
    v40 = v37;
  else
    v40 = v38;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (_BYTE **)a2[2];
  v282 = a1;
  v301 = v31;
  v292 = v40;
  if ((v31 & 0x40000000) == 0)
  {
    v268 = 0;
    v44 = 0;
    v277 = 0;
    v289 = 0;
    v264 = 0;
    goto LABEL_127;
  }
  v45 = v42[3];
  if ((v45 & 0x80000000) != 0)
  {
    v47 = *(_DWORD *)(v41 + 2196);
    if (**v43)
      goto LABEL_66;
  }
  else
  {
    v46 = *(_QWORD *)(v41 + 2328);
    if (v45 >= (*(_QWORD *)(v41 + 2336) - v46) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v46 = *(_QWORD *)(v41 + 2328);
    }
    v47 = *(_DWORD *)(v46 + (v45 << 11) + 1916);
    if (**v43)
    {
LABEL_66:
      v48 = *a2;
      v49 = (_BYTE **)a2[2];
      v50 = *(unsigned int *)(a2[1] + 16);
      if ((v50 & 0x80000000) == 0)
        goto LABEL_67;
LABEL_94:
      v73 = *v49;
      v53 = *(_DWORD *)(v48 + 404);
      if (*v73)
        goto LABEL_71;
      goto LABEL_95;
    }
  }
  if ((v47 & 0x10000000) != 0)
    v72 = 0x40000000;
  else
    v72 = 0x80000000;
  if ((v47 & 0x20000000) != 0)
    v47 = v72;
  else
    v47 &= 0xCFFFFFFF;
  v48 = *a2;
  v49 = (_BYTE **)a2[2];
  v50 = *(unsigned int *)(a2[1] + 16);
  if ((v50 & 0x80000000) != 0)
    goto LABEL_94;
LABEL_67:
  v51 = *(_QWORD *)(v48 + 2328);
  if (v50 >= (*(_QWORD *)(v48 + 2336) - v51) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v51 = *(_QWORD *)(v48 + 2328);
  }
  v52 = *v49;
  v53 = *(_DWORD *)(v51 + (v50 << 11) + 124);
  if (*v52)
  {
LABEL_71:
    v54 = *a2;
    v55 = (_BYTE **)a2[2];
    v56 = *(unsigned int *)(a2[1] + 12);
    if ((v56 & 0x80000000) == 0)
      goto LABEL_72;
LABEL_102:
    v58 = a3;
    v75 = *v55;
    v60 = *(_DWORD *)(v54 + 2228);
    if (*v75)
      goto LABEL_76;
    goto LABEL_103;
  }
LABEL_95:
  if ((v53 & 0x10000000) != 0)
    v74 = 0x40000000;
  else
    v74 = 0x80000000;
  if ((v53 & 0x20000000) != 0)
    v53 = v74;
  else
    v53 &= 0xCFFFFFFF;
  v54 = *a2;
  v55 = (_BYTE **)a2[2];
  v56 = *(unsigned int *)(a2[1] + 12);
  if ((v56 & 0x80000000) != 0)
    goto LABEL_102;
LABEL_72:
  v57 = *(_QWORD *)(v54 + 2328);
  if (v56 >= (*(_QWORD *)(v54 + 2336) - v57) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v57 = *(_QWORD *)(v54 + 2328);
  }
  v58 = a3;
  v59 = *v55;
  v60 = *(_DWORD *)(v57 + (v56 << 11) + 1948);
  if (*v59)
  {
LABEL_76:
    v61 = *a2;
    v62 = (_BYTE **)a2[2];
    v63 = *(unsigned int *)(a2[1] + 16);
    if ((v63 & 0x80000000) == 0)
      goto LABEL_77;
LABEL_110:
    v77 = *v62;
    v66 = *(_DWORD *)(v61 + 436);
    if (*v77)
      goto LABEL_81;
LABEL_111:
    if ((v66 & 0x10000000) != 0)
      v78 = 0x40000000;
    else
      v78 = 0x80000000;
    if ((v66 & 0x20000000) != 0)
      v66 = v78;
    else
      v66 &= 0xCFFFFFFF;
    v67 = *a2;
    v68 = (_BYTE **)a2[2];
    v69 = *(unsigned int *)(a2[1] + 12);
    if ((v69 & 0x80000000) == 0)
      goto LABEL_82;
    goto LABEL_118;
  }
LABEL_103:
  if ((v60 & 0x10000000) != 0)
    v76 = 0x40000000;
  else
    v76 = 0x80000000;
  if ((v60 & 0x20000000) != 0)
    v60 = v76;
  else
    v60 &= 0xCFFFFFFF;
  v61 = *a2;
  v62 = (_BYTE **)a2[2];
  v63 = *(unsigned int *)(a2[1] + 16);
  if ((v63 & 0x80000000) != 0)
    goto LABEL_110;
LABEL_77:
  v64 = *(_QWORD *)(v61 + 2328);
  if (v63 >= (*(_QWORD *)(v61 + 2336) - v64) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v64 = *(_QWORD *)(v61 + 2328);
  }
  v65 = *v62;
  v66 = *(_DWORD *)(v64 + (v63 << 11) + 156);
  if (!*v65)
    goto LABEL_111;
LABEL_81:
  v67 = *a2;
  v68 = (_BYTE **)a2[2];
  v69 = *(unsigned int *)(a2[1] + 12);
  if ((v69 & 0x80000000) == 0)
  {
LABEL_82:
    v70 = *(_QWORD *)(v67 + 2328);
    if (v69 >= (*(_QWORD *)(v67 + 2336) - v70) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v70 = *(_QWORD *)(v67 + 2328);
    }
    v71 = v70 + (v69 << 11);
    goto LABEL_119;
  }
LABEL_118:
  v71 = v67 + 280;
LABEL_119:
  v264 = (v47 >> 30) & 1;
  v289 = (v53 >> 30) & 1;
  v277 = (v60 >> 30) & 1;
  v44 = (v66 >> 30) & 1;
  v79 = *(_DWORD *)(v71 + 1980);
  a3 = v58;
  if (!**v68)
  {
    if ((v79 & 0x10000000) != 0)
      v80 = 0x40000000;
    else
      v80 = 0x80000000;
    if ((v79 & 0x20000000) != 0)
      v79 = v80;
    else
      v79 &= 0xCFFFFFFF;
  }
  v268 = (v79 >> 30) & 1;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (_BYTE **)a2[2];
  a1 = v282;
LABEL_127:
  v310 = *(_BYTE ***)a1;
  v81 = *(_DWORD **)(a1 + 16);
  v82 = a3[3];
  v319 = a3[2];
  v320 = v82;
  v321 = a3[4];
  v83 = *((float32x4_t *)a3 + 1);
  v317 = *a3;
  v318 = v83;
  v84 = v42[12];
  if ((v84 & 0x80000000) != 0)
  {
    v86 = *(_DWORD *)(v41 + 2172);
    v87 = **v43;
    if (**v43)
      goto LABEL_138;
    goto LABEL_132;
  }
  v85 = *(_QWORD *)(v41 + 2328);
  if (v84 >= (*(_QWORD *)(v41 + 2336) - v85) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v85 = *(_QWORD *)(v41 + 2328);
  }
  v86 = *(_DWORD *)(v85 + (v84 << 11) + 1892);
  v87 = **v43;
  if (!**v43)
  {
LABEL_132:
    if ((v86 & 0x10000000) != 0)
      v88 = 0x40000000;
    else
      v88 = 0x80000000;
    if ((v86 & 0x20000000) != 0)
      v86 = v88;
    else
      v86 &= 0xCFFFFFFF;
  }
LABEL_138:
  v273 = a3;
  v89 = v81[25];
  if (**v310)
  {
    v90 = v42[12];
    if ((v90 & 0x80000000) == 0)
      goto LABEL_140;
LABEL_594:
    v92 = *(_DWORD *)(v41 + 2204);
    if (v87)
      goto LABEL_150;
    goto LABEL_144;
  }
  if ((v89 & 0x10000000) != 0)
    v227 = 0x40000000;
  else
    v227 = 0x80000000;
  if ((v89 & 0x20000000) != 0)
    v89 = v227;
  else
    v89 &= 0xCFFFFFFF;
  v90 = v42[12];
  if ((v90 & 0x80000000) != 0)
    goto LABEL_594;
LABEL_140:
  v91 = *(_QWORD *)(v41 + 2328);
  if (v90 >= (*(_QWORD *)(v41 + 2336) - v91) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v91 = *(_QWORD *)(v41 + 2328);
    v87 = **v43;
  }
  v92 = *(_DWORD *)(v91 + (v90 << 11) + 1924);
  if (!v87)
  {
LABEL_144:
    if ((v92 & 0x10000000) != 0)
      v93 = 0x40000000;
    else
      v93 = 0x80000000;
    if ((v92 & 0x20000000) != 0)
      v92 = v93;
    else
      v92 &= 0xCFFFFFFF;
  }
LABEL_150:
  v307 = v81[33];
  if (**v310)
  {
    v94 = v42[12];
    if ((v94 & 0x80000000) == 0)
      goto LABEL_152;
LABEL_602:
    v265 = v298 >> 30;
    v96 = *(_DWORD *)(v41 + 2236);
    v97 = v43;
    if (v87)
      goto LABEL_162;
    goto LABEL_156;
  }
  v228 = v307 & 0xCFFFFFFF;
  if ((v307 & 0x10000000) != 0)
    v229 = 0x40000000;
  else
    v229 = 0x80000000;
  if ((v307 & 0x20000000) != 0)
    v228 = v229;
  v307 = v228;
  v94 = v42[12];
  if ((v94 & 0x80000000) != 0)
    goto LABEL_602;
LABEL_152:
  v95 = *(_QWORD *)(v41 + 2328);
  if (v94 < (*(_QWORD *)(v41 + 2336) - v95) >> 11)
    goto LABEL_155;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
LABEL_788:
    abort();
  }
  v95 = *(_QWORD *)(v41 + 2328);
  v87 = **v43;
LABEL_155:
  v265 = v298 >> 30;
  v96 = *(_DWORD *)(v95 + (v94 << 11) + 1956);
  v97 = v43;
  if (v87)
    goto LABEL_162;
LABEL_156:
  if ((v96 & 0x10000000) != 0)
    v98 = 0x40000000;
  else
    v98 = 0x80000000;
  if ((v96 & 0x20000000) != 0)
    v96 = v98;
  else
    v96 &= 0xCFFFFFFF;
LABEL_162:
  v271 = v86 >> 30;
  v283 = v295 >> 30;
  v286 = v304 >> 30;
  v274 = v292 >> 30;
  v296 = v92 >> 30;
  v299 = v89 >> 30;
  v280 = v96 >> 30;
  v329 = v319;
  v330 = v320;
  v331 = v321;
  v327 = v317;
  v328 = v318;
  if ((v301 & 0x40000000) != 0)
  {
    v379 = v319;
    v380 = v320;
    v381 = v321;
    v378 = v318;
    v377 = v317;
    *(_QWORD *)&v427 = 0xD0D0D0D0D0D0D0DLL;
    v372 = xmmword_224671C40;
    v373 = xmmword_224671C50;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 0, 4, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x6000000020), xmmword_224671C50);
    if (!v44)
    {
      v374 = v319;
      v375 = v320;
      v376 = v321;
      *(_QWORD *)&v422 = 0x4040D0D04040D0DLL;
      v373 = v318;
      v372 = v317;
      v427 = xmmword_224671C60;
      v428 = xmmword_224671C70;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 0, 4, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x6000000020), xmmword_224671C70);
      if (!(v289 | ((v304 & 0x40000000) != 0)))
      {
        v429 = v319;
        v430 = v320;
        v431 = v321;
        v427 = v317;
        v428 = v318;
        *(_QWORD *)&v417 = 0x40404040D0D0D0DLL;
        v422 = xmmword_224671C80;
        v423 = xmmword_224671C90;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 0, 4, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x6000000020), xmmword_224671C90);
        v99 = (v265 & 1) == 0 && (v277 | v283 & 1) == 0;
        if (!v264 && v99)
        {
          v424 = v319;
          v425 = v320;
          v426 = v321;
          v423 = v318;
          v422 = v317;
          *(_QWORD *)&v412 = 0x3040C0D03040C0DLL;
          v417 = xmmword_224671CA0;
          v418 = xmmword_224671CB0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 0, 4, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1E000000020), xmmword_224671CB0);
        }
      }
      if (v268)
        v100 = 0;
      else
        v100 = (v277 | v283 & 1) == 0;
      if (v100 && (v292 & 0x40000000) == 0)
      {
        v419 = v329;
        v420 = v330;
        v421 = v331;
        v418 = v328;
        v417 = v327;
        *(_QWORD *)&v407 = 0x30403040C0D0C0DLL;
        v412 = xmmword_224671CC0;
        v413 = xmmword_224671CD0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 0, 4, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1E000000020), xmmword_224671CD0);
      }
    }
    if (((v286 | v299) & 1) == 0)
    {
      v414 = v329;
      v415 = v330;
      v416 = v331;
      v413 = v328;
      v412 = v327;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_224671CE0;
      v408 = xmmword_224671CF0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 0, 4, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x6000000020), xmmword_224671CF0);
      v101 = (v86 & 0x40000000) == 0 && ((v283 | v296) & 1) == 0;
      if ((v265 & 1) == 0 && v101)
      {
        v409 = v329;
        v410 = v330;
        v411 = v331;
        v408 = v328;
        v407 = v327;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224671D00;
        v403 = xmmword_224671D10;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 0, 4, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1E000000020), xmmword_224671D10);
      }
    }
    v102 = (v292 & 0x40000000) == 0 && ((v283 | v296) & 1) == 0;
    if (v102 && (v280 & 1) == 0)
    {
      v404 = v329;
      v405 = v330;
      v406 = v331;
      v403 = v328;
      v402 = v327;
      *(_QWORD *)&v392 = 0xC0D0C0D0C0D0C0DLL;
      v397 = xmmword_224671D20;
      v398 = xmmword_224671D30;
      *(_QWORD *)&v387 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 0, 4, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v387, COERCE_DOUBLE(0x1E000000020), xmmword_224671D30);
    }
  }
  v324 = v319;
  v325 = v320;
  v326 = v321;
  v322 = v317;
  v323 = v318;
  v103 = v42[12];
  if ((v103 & 0x80000000) != 0)
  {
    v105 = *(_DWORD *)(v41 + 2176);
    v106 = **v97;
    if (**v97)
      goto LABEL_201;
    goto LABEL_195;
  }
  v104 = *(_QWORD *)(v41 + 2328);
  if (v103 >= (*(_QWORD *)(v41 + 2336) - v104) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v104 = *(_QWORD *)(v41 + 2328);
  }
  v105 = *(_DWORD *)(v104 + (v103 << 11) + 1896);
  v106 = **v97;
  if (!**v97)
  {
LABEL_195:
    if ((v105 & 0x10000000) != 0)
      v107 = 0x40000000;
    else
      v107 = 0x80000000;
    if ((v105 & 0x20000000) != 0)
      v105 = v107;
    else
      v105 &= 0xCFFFFFFF;
  }
LABEL_201:
  v108 = v81[26];
  if (**v310)
  {
    v109 = v42[12];
    if ((v109 & 0x80000000) == 0)
      goto LABEL_203;
LABEL_613:
    v111 = *(_DWORD *)(v41 + 2208);
    if (v106)
      goto LABEL_213;
    goto LABEL_207;
  }
  if ((v108 & 0x10000000) != 0)
    v230 = 0x40000000;
  else
    v230 = 0x80000000;
  if ((v108 & 0x20000000) != 0)
    v108 = v230;
  else
    v108 &= 0xCFFFFFFF;
  v109 = v42[12];
  if ((v109 & 0x80000000) != 0)
    goto LABEL_613;
LABEL_203:
  v110 = *(_QWORD *)(v41 + 2328);
  if (v109 >= (*(_QWORD *)(v41 + 2336) - v110) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v110 = *(_QWORD *)(v41 + 2328);
    v106 = **v97;
  }
  v111 = *(_DWORD *)(v110 + (v109 << 11) + 1928);
  if (!v106)
  {
LABEL_207:
    if ((v111 & 0x10000000) != 0)
      v112 = 0x40000000;
    else
      v112 = 0x80000000;
    if ((v111 & 0x20000000) != 0)
      v111 = v112;
    else
      v111 &= 0xCFFFFFFF;
  }
LABEL_213:
  v305 = v81[34];
  if (**v310)
  {
    v113 = v42[12];
    if ((v113 & 0x80000000) == 0)
      goto LABEL_215;
LABEL_621:
    v115 = *(_DWORD *)(v41 + 2240);
    if (v106)
      goto LABEL_225;
    goto LABEL_219;
  }
  v231 = v305 & 0xCFFFFFFF;
  if ((v305 & 0x10000000) != 0)
    v232 = 0x40000000;
  else
    v232 = 0x80000000;
  if ((v305 & 0x20000000) != 0)
    v231 = v232;
  v305 = v231;
  v113 = v42[12];
  if ((v113 & 0x80000000) != 0)
    goto LABEL_621;
LABEL_215:
  v114 = *(_QWORD *)(v41 + 2328);
  if (v113 >= (*(_QWORD *)(v41 + 2336) - v114) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v114 = *(_QWORD *)(v41 + 2328);
    v106 = **v97;
  }
  v115 = *(_DWORD *)(v114 + (v113 << 11) + 1960);
  if (!v106)
  {
LABEL_219:
    if ((v115 & 0x10000000) != 0)
      v116 = 0x40000000;
    else
      v116 = 0x80000000;
    if ((v115 & 0x20000000) != 0)
      v115 = v116;
    else
      v115 &= 0xCFFFFFFF;
  }
LABEL_225:
  v269 = v105 >> 30;
  v290 = v111 >> 30;
  v293 = v108 >> 30;
  v278 = v115 >> 30;
  v339 = v319;
  v340 = v320;
  v341 = v321;
  v337 = v317;
  v338 = v318;
  if ((v307 & 0x40000000) != 0)
  {
    v379 = v319;
    v380 = v320;
    v381 = v321;
    v378 = v318;
    v377 = v317;
    *(_QWORD *)&v427 = 0xD0D0D0D0D0D0D0DLL;
    v372 = xmmword_224671D40;
    v373 = xmmword_224671D50;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 1, 4, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x6100000021), xmmword_224671D50);
    if ((v301 & 0x40000000) == 0)
    {
      v374 = v319;
      v375 = v320;
      v376 = v321;
      v373 = v318;
      v372 = v317;
      *(_QWORD *)&v422 = 0xD0D0D0D0D0D0D0DLL;
      v427 = xmmword_224671D60;
      v428 = xmmword_224671D70;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 1, 4, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x6100000021), xmmword_224671D70);
      if (((v286 | v299) & 1) == 0)
      {
        v429 = v319;
        v430 = v320;
        v431 = v321;
        v427 = v317;
        v428 = v318;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224671D80;
        v423 = xmmword_224671D90;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 1, 4, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x6100000021), xmmword_224671D90);
        v117 = (v271 & 1) == 0 && ((v283 | v296) & 1) == 0;
        if ((v265 & 1) == 0 && v117)
        {
          v424 = v319;
          v425 = v320;
          v426 = v321;
          v423 = v318;
          v422 = v317;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_224671DA0;
          v418 = xmmword_224671DB0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 1, 4, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1E100000021), xmmword_224671DB0);
        }
      }
      v118 = (v274 & 1) == 0 && ((v283 | v296) & 1) == 0;
      if (v118 && (v280 & 1) == 0)
      {
        v419 = v339;
        v420 = v340;
        v421 = v341;
        v418 = v338;
        v417 = v337;
        *(_QWORD *)&v407 = 0xC0D0C0D0C0D0C0DLL;
        v412 = xmmword_224671DC0;
        v413 = xmmword_224671DD0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 1, 4, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1E100000021), xmmword_224671DD0);
      }
    }
    if (((v299 | v293) & 1) == 0)
    {
      v414 = v339;
      v415 = v340;
      v416 = v341;
      v413 = v338;
      v412 = v337;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_224671DE0;
      v408 = xmmword_224671DF0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 1, 4, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x6100000021), xmmword_224671DF0);
      v119 = (v105 & 0x40000000) == 0 && ((v296 | v290) & 1) == 0;
      if ((v271 & 1) == 0 && v119)
      {
        v409 = v339;
        v410 = v340;
        v411 = v341;
        v408 = v338;
        v407 = v337;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224671E00;
        v403 = xmmword_224671E10;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 1, 4, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1E100000021), xmmword_224671E10);
      }
    }
    v120 = (v280 & 1) == 0 && ((v296 | v290) & 1) == 0;
    if (v120 && (v278 & 1) == 0)
    {
      v404 = v339;
      v405 = v340;
      v406 = v341;
      v403 = v338;
      v402 = v337;
      *(_QWORD *)&v392 = 0xC0D0C0D0C0D0C0DLL;
      v397 = xmmword_224671E20;
      v398 = xmmword_224671E30;
      *(_QWORD *)&v387 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 1, 4, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v387, COERCE_DOUBLE(0x1E100000021), xmmword_224671E30);
    }
  }
  v334 = v324;
  v335 = v325;
  v336 = v326;
  v332 = v322;
  v333 = v323;
  v121 = v42[12];
  if ((v121 & 0x80000000) != 0)
  {
    v123 = *(_DWORD *)(v41 + 2180);
    v124 = **v97;
    if (**v97)
      goto LABEL_264;
    goto LABEL_258;
  }
  v122 = *(_QWORD *)(v41 + 2328);
  if (v121 >= (*(_QWORD *)(v41 + 2336) - v122) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v122 = *(_QWORD *)(v41 + 2328);
  }
  v123 = *(_DWORD *)(v122 + (v121 << 11) + 1900);
  v124 = **v97;
  if (!**v97)
  {
LABEL_258:
    if ((v123 & 0x10000000) != 0)
      v125 = 0x40000000;
    else
      v125 = 0x80000000;
    if ((v123 & 0x20000000) != 0)
      v123 = v125;
    else
      v123 &= 0xCFFFFFFF;
  }
LABEL_264:
  v126 = v81[27];
  if (**v310)
  {
    v127 = v42[12];
    if ((v127 & 0x80000000) == 0)
      goto LABEL_266;
LABEL_632:
    v129 = *(_DWORD *)(v41 + 2212);
    if (v124)
      goto LABEL_276;
    goto LABEL_270;
  }
  if ((v126 & 0x10000000) != 0)
    v233 = 0x40000000;
  else
    v233 = 0x80000000;
  if ((v126 & 0x20000000) != 0)
    v126 = v233;
  else
    v126 &= 0xCFFFFFFF;
  v127 = v42[12];
  if ((v127 & 0x80000000) != 0)
    goto LABEL_632;
LABEL_266:
  v128 = *(_QWORD *)(v41 + 2328);
  if (v127 >= (*(_QWORD *)(v41 + 2336) - v128) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v128 = *(_QWORD *)(v41 + 2328);
    v124 = **v97;
  }
  v129 = *(_DWORD *)(v128 + (v127 << 11) + 1932);
  if (!v124)
  {
LABEL_270:
    if ((v129 & 0x10000000) != 0)
      v130 = 0x40000000;
    else
      v130 = 0x80000000;
    if ((v129 & 0x20000000) != 0)
      v129 = v130;
    else
      v129 &= 0xCFFFFFFF;
  }
LABEL_276:
  v302 = v81[35];
  if (**v310)
  {
    v131 = v42[12];
    if ((v131 & 0x80000000) == 0)
      goto LABEL_278;
LABEL_640:
    v133 = *(_DWORD *)(v41 + 2244);
    if (v124)
      goto LABEL_288;
    goto LABEL_282;
  }
  v234 = v302 & 0xCFFFFFFF;
  if ((v302 & 0x10000000) != 0)
    v235 = 0x40000000;
  else
    v235 = 0x80000000;
  if ((v302 & 0x20000000) != 0)
    v234 = v235;
  v302 = v234;
  v131 = v42[12];
  if ((v131 & 0x80000000) != 0)
    goto LABEL_640;
LABEL_278:
  v132 = *(_QWORD *)(v41 + 2328);
  if (v131 >= (*(_QWORD *)(v41 + 2336) - v132) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v132 = *(_QWORD *)(v41 + 2328);
    v124 = **v97;
  }
  v133 = *(_DWORD *)(v132 + (v131 << 11) + 1964);
  if (!v124)
  {
LABEL_282:
    if ((v133 & 0x10000000) != 0)
      v134 = 0x40000000;
    else
      v134 = 0x80000000;
    if ((v133 & 0x20000000) != 0)
      v133 = v134;
    else
      v133 &= 0xCFFFFFFF;
  }
LABEL_288:
  v266 = v123 >> 30;
  v284 = v129 >> 30;
  v287 = v126 >> 30;
  v275 = v133 >> 30;
  v349 = v324;
  v350 = v325;
  v351 = v326;
  v347 = v322;
  v348 = v323;
  if ((v305 & 0x40000000) != 0)
  {
    v379 = v324;
    v380 = v325;
    v381 = v326;
    v378 = v323;
    v377 = v322;
    *(_QWORD *)&v427 = 0xD0D0D0D0D0D0D0DLL;
    v372 = xmmword_224671E40;
    v373 = xmmword_224671E50;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 2, 4, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x6200000022), xmmword_224671E50);
    if ((v307 & 0x40000000) == 0)
    {
      v374 = v324;
      v375 = v325;
      v376 = v326;
      v373 = v323;
      v372 = v322;
      *(_QWORD *)&v422 = 0xD0D0D0D0D0D0D0DLL;
      v427 = xmmword_224671E60;
      v428 = xmmword_224671E70;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 2, 4, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x6200000022), xmmword_224671E70);
      if (((v299 | v293) & 1) == 0)
      {
        v429 = v324;
        v430 = v325;
        v431 = v326;
        v427 = v322;
        v428 = v323;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224671E80;
        v423 = xmmword_224671E90;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 2, 4, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x6200000022), xmmword_224671E90);
        v135 = (v269 & 1) == 0 && ((v296 | v290) & 1) == 0;
        if ((v271 & 1) == 0 && v135)
        {
          v424 = v324;
          v425 = v325;
          v426 = v326;
          v423 = v323;
          v422 = v322;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_224671EA0;
          v418 = xmmword_224671EB0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 2, 4, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1E200000022), xmmword_224671EB0);
        }
      }
      v136 = (v280 & 1) == 0 && ((v296 | v290) & 1) == 0;
      if (v136 && (v278 & 1) == 0)
      {
        v419 = v349;
        v420 = v350;
        v421 = v351;
        v418 = v348;
        v417 = v347;
        *(_QWORD *)&v407 = 0xC0D0C0D0C0D0C0DLL;
        v412 = xmmword_224671EC0;
        v413 = xmmword_224671ED0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 2, 4, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1E200000022), xmmword_224671ED0);
      }
    }
    if (((v293 | v287) & 1) == 0)
    {
      v414 = v349;
      v415 = v350;
      v416 = v351;
      v413 = v348;
      v412 = v347;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_224671EE0;
      v408 = xmmword_224671EF0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 2, 4, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x6200000022), xmmword_224671EF0);
      v137 = (v123 & 0x40000000) == 0 && ((v290 | v284) & 1) == 0;
      if ((v269 & 1) == 0 && v137)
      {
        v409 = v349;
        v410 = v350;
        v411 = v351;
        v408 = v348;
        v407 = v347;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224671F00;
        v403 = xmmword_224671F10;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 2, 4, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1E200000022), xmmword_224671F10);
      }
    }
    v138 = (v278 & 1) == 0 && ((v290 | v284) & 1) == 0;
    if (v138 && (v275 & 1) == 0)
    {
      v404 = v349;
      v405 = v350;
      v406 = v351;
      v403 = v348;
      v402 = v347;
      *(_QWORD *)&v392 = 0xC0D0C0D0C0D0C0DLL;
      v397 = xmmword_224671F20;
      v398 = xmmword_224671F30;
      *(_QWORD *)&v387 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 2, 4, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v387, COERCE_DOUBLE(0x1E200000022), xmmword_224671F30);
    }
  }
  v344 = v334;
  v345 = v335;
  v346 = v336;
  v342 = v332;
  v343 = v333;
  v139 = v42[12];
  if ((v139 & 0x80000000) != 0)
  {
    v141 = *(_DWORD *)(v41 + 2184);
    v142 = **v97;
    if (**v97)
      goto LABEL_327;
    goto LABEL_321;
  }
  v140 = *(_QWORD *)(v41 + 2328);
  if (v139 >= (*(_QWORD *)(v41 + 2336) - v140) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v140 = *(_QWORD *)(v41 + 2328);
  }
  v141 = *(_DWORD *)(v140 + (v139 << 11) + 1904);
  v142 = **v97;
  if (!**v97)
  {
LABEL_321:
    if ((v141 & 0x10000000) != 0)
      v143 = 0x40000000;
    else
      v143 = 0x80000000;
    if ((v141 & 0x20000000) != 0)
      v141 = v143;
    else
      v141 &= 0xCFFFFFFF;
  }
LABEL_327:
  v144 = v81[28];
  if (**v310)
  {
    v145 = v42[12];
    if ((v145 & 0x80000000) == 0)
      goto LABEL_329;
LABEL_651:
    v147 = *(_DWORD *)(v41 + 2216);
    if (v142)
      goto LABEL_339;
    goto LABEL_333;
  }
  if ((v144 & 0x10000000) != 0)
    v236 = 0x40000000;
  else
    v236 = 0x80000000;
  if ((v144 & 0x20000000) != 0)
    v144 = v236;
  else
    v144 &= 0xCFFFFFFF;
  v145 = v42[12];
  if ((v145 & 0x80000000) != 0)
    goto LABEL_651;
LABEL_329:
  v146 = *(_QWORD *)(v41 + 2328);
  if (v145 >= (*(_QWORD *)(v41 + 2336) - v146) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v146 = *(_QWORD *)(v41 + 2328);
    v142 = **v97;
  }
  v147 = *(_DWORD *)(v146 + (v145 << 11) + 1936);
  if (!v142)
  {
LABEL_333:
    if ((v147 & 0x10000000) != 0)
      v148 = 0x40000000;
    else
      v148 = 0x80000000;
    if ((v147 & 0x20000000) != 0)
      v147 = v148;
    else
      v147 &= 0xCFFFFFFF;
  }
LABEL_339:
  v308 = v81[36];
  if (**v310)
  {
    v149 = v42[12];
    if ((v149 & 0x80000000) == 0)
      goto LABEL_341;
LABEL_659:
    v151 = *(_DWORD *)(v41 + 2248);
    if (v142)
      goto LABEL_351;
    goto LABEL_345;
  }
  v237 = v308 & 0xCFFFFFFF;
  if ((v308 & 0x10000000) != 0)
    v238 = 0x40000000;
  else
    v238 = 0x80000000;
  if ((v308 & 0x20000000) != 0)
    v237 = v238;
  v308 = v237;
  v149 = v42[12];
  if ((v149 & 0x80000000) != 0)
    goto LABEL_659;
LABEL_341:
  v150 = *(_QWORD *)(v41 + 2328);
  if (v149 >= (*(_QWORD *)(v41 + 2336) - v150) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v150 = *(_QWORD *)(v41 + 2328);
    v142 = **v97;
  }
  v151 = *(_DWORD *)(v150 + (v149 << 11) + 1968);
  if (!v142)
  {
LABEL_345:
    if ((v151 & 0x10000000) != 0)
      v152 = 0x40000000;
    else
      v152 = 0x80000000;
    if ((v151 & 0x20000000) != 0)
      v151 = v152;
    else
      v151 &= 0xCFFFFFFF;
  }
LABEL_351:
  v272 = v141 >> 30;
  v297 = v147 >> 30;
  v300 = v144 >> 30;
  v281 = v151 >> 30;
  v359 = v334;
  v360 = v335;
  v361 = v336;
  v357 = v332;
  v358 = v333;
  if ((v302 & 0x40000000) != 0)
  {
    v379 = v334;
    v380 = v335;
    v381 = v336;
    v378 = v333;
    v377 = v332;
    *(_QWORD *)&v427 = 0xD0D0D0D0D0D0D0DLL;
    v372 = xmmword_224671F40;
    v373 = xmmword_224671F50;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 3, 4, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x6300000023), xmmword_224671F50);
    if ((v305 & 0x40000000) == 0)
    {
      v374 = v334;
      v375 = v335;
      v376 = v336;
      v373 = v333;
      v372 = v332;
      *(_QWORD *)&v422 = 0xD0D0D0D0D0D0D0DLL;
      v427 = xmmword_224671F60;
      v428 = xmmword_224671F70;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 3, 4, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x6300000023), xmmword_224671F70);
      if (((v293 | v287) & 1) == 0)
      {
        v429 = v334;
        v430 = v335;
        v431 = v336;
        v427 = v332;
        v428 = v333;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224671F80;
        v423 = xmmword_224671F90;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 3, 4, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x6300000023), xmmword_224671F90);
        v153 = (v266 & 1) == 0 && ((v290 | v284) & 1) == 0;
        if ((v269 & 1) == 0 && v153)
        {
          v424 = v334;
          v425 = v335;
          v426 = v336;
          v423 = v333;
          v422 = v332;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_224671FA0;
          v418 = xmmword_224671FB0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 3, 4, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1E300000023), xmmword_224671FB0);
        }
      }
      v154 = (v278 & 1) == 0 && ((v290 | v284) & 1) == 0;
      if (v154 && (v275 & 1) == 0)
      {
        v419 = v359;
        v420 = v360;
        v421 = v361;
        v418 = v358;
        v417 = v357;
        *(_QWORD *)&v407 = 0xC0D0C0D0C0D0C0DLL;
        v412 = xmmword_224671FC0;
        v413 = xmmword_224671FD0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 3, 4, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1E300000023), xmmword_224671FD0);
      }
    }
    if (((v287 | v300) & 1) == 0)
    {
      v414 = v359;
      v415 = v360;
      v416 = v361;
      v413 = v358;
      v412 = v357;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_224671FE0;
      v408 = xmmword_224671FF0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 3, 4, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x6300000023), xmmword_224671FF0);
      v155 = (v141 & 0x40000000) == 0 && ((v284 | v297) & 1) == 0;
      if ((v266 & 1) == 0 && v155)
      {
        v409 = v359;
        v410 = v360;
        v411 = v361;
        v408 = v358;
        v407 = v357;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224672000;
        v403 = xmmword_224672010;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 3, 4, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1E300000023), xmmword_224672010);
      }
    }
    v156 = (v275 & 1) == 0 && ((v284 | v297) & 1) == 0;
    if (v156 && (v281 & 1) == 0)
    {
      v404 = v359;
      v405 = v360;
      v406 = v361;
      v403 = v358;
      v402 = v357;
      *(_QWORD *)&v392 = 0xC0D0C0D0C0D0C0DLL;
      v397 = xmmword_224672020;
      v398 = xmmword_224672030;
      *(_QWORD *)&v387 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 3, 4, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v387, COERCE_DOUBLE(0x1E300000023), xmmword_224672030);
    }
  }
  v354 = v344;
  v355 = v345;
  v356 = v346;
  v352 = v342;
  v353 = v343;
  v157 = v42[12];
  if ((v157 & 0x80000000) != 0)
  {
    v159 = *(_DWORD *)(v41 + 2188);
    v160 = **v97;
    if (**v97)
      goto LABEL_390;
    goto LABEL_384;
  }
  v158 = *(_QWORD *)(v41 + 2328);
  if (v157 >= (*(_QWORD *)(v41 + 2336) - v158) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v158 = *(_QWORD *)(v41 + 2328);
  }
  v159 = *(_DWORD *)(v158 + (v157 << 11) + 1908);
  v160 = **v97;
  if (!**v97)
  {
LABEL_384:
    if ((v159 & 0x10000000) != 0)
      v161 = 0x40000000;
    else
      v161 = 0x80000000;
    if ((v159 & 0x20000000) != 0)
      v159 = v161;
    else
      v159 &= 0xCFFFFFFF;
  }
LABEL_390:
  v162 = v81[29];
  if (**v310)
  {
    v163 = v42[12];
    if ((v163 & 0x80000000) == 0)
      goto LABEL_392;
LABEL_670:
    v165 = *(_DWORD *)(v41 + 2220);
    if (v160)
      goto LABEL_402;
    goto LABEL_396;
  }
  if ((v162 & 0x10000000) != 0)
    v239 = 0x40000000;
  else
    v239 = 0x80000000;
  if ((v162 & 0x20000000) != 0)
    v162 = v239;
  else
    v162 &= 0xCFFFFFFF;
  v163 = v42[12];
  if ((v163 & 0x80000000) != 0)
    goto LABEL_670;
LABEL_392:
  v164 = *(_QWORD *)(v41 + 2328);
  if (v163 >= (*(_QWORD *)(v41 + 2336) - v164) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v164 = *(_QWORD *)(v41 + 2328);
    v160 = **v97;
  }
  v165 = *(_DWORD *)(v164 + (v163 << 11) + 1940);
  if (!v160)
  {
LABEL_396:
    if ((v165 & 0x10000000) != 0)
      v166 = 0x40000000;
    else
      v166 = 0x80000000;
    if ((v165 & 0x20000000) != 0)
      v165 = v166;
    else
      v165 &= 0xCFFFFFFF;
  }
LABEL_402:
  v306 = v81[37];
  if (**v310)
  {
    v167 = v42[12];
    if ((v167 & 0x80000000) == 0)
      goto LABEL_404;
LABEL_678:
    v169 = *(_DWORD *)(v41 + 2252);
    if (v160)
      goto LABEL_414;
    goto LABEL_408;
  }
  v240 = v306 & 0xCFFFFFFF;
  if ((v306 & 0x10000000) != 0)
    v241 = 0x40000000;
  else
    v241 = 0x80000000;
  if ((v306 & 0x20000000) != 0)
    v240 = v241;
  v306 = v240;
  v167 = v42[12];
  if ((v167 & 0x80000000) != 0)
    goto LABEL_678;
LABEL_404:
  v168 = *(_QWORD *)(v41 + 2328);
  if (v167 >= (*(_QWORD *)(v41 + 2336) - v168) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v168 = *(_QWORD *)(v41 + 2328);
    v160 = **v97;
  }
  v169 = *(_DWORD *)(v168 + (v167 << 11) + 1972);
  if (!v160)
  {
LABEL_408:
    if ((v169 & 0x10000000) != 0)
      v170 = 0x40000000;
    else
      v170 = 0x80000000;
    if ((v169 & 0x20000000) != 0)
      v169 = v170;
    else
      v169 &= 0xCFFFFFFF;
  }
LABEL_414:
  v270 = v159 >> 30;
  v291 = v165 >> 30;
  v294 = v162 >> 30;
  v279 = v169 >> 30;
  v369 = v344;
  v370 = v345;
  v371 = v346;
  v368 = v343;
  v367 = v342;
  if ((v308 & 0x40000000) != 0)
  {
    v379 = v344;
    v380 = v345;
    v381 = v346;
    v378 = v343;
    v377 = v342;
    *(_QWORD *)&v427 = 0xD0D0D0D0D0D0D0DLL;
    v372 = xmmword_224672040;
    v373 = xmmword_224672050;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 4, 4, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x6400000024), xmmword_224672050);
    if ((v302 & 0x40000000) == 0)
    {
      v374 = v344;
      v375 = v345;
      v376 = v346;
      v373 = v343;
      v372 = v342;
      *(_QWORD *)&v422 = 0xD0D0D0D0D0D0D0DLL;
      v427 = xmmword_224672060;
      v428 = xmmword_224672070;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 4, 4, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x6400000024), xmmword_224672070);
      if (((v287 | v300) & 1) == 0)
      {
        v429 = v344;
        v430 = v345;
        v431 = v346;
        v427 = v342;
        v428 = v343;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224672080;
        v423 = xmmword_224672090;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 4, 4, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x6400000024), xmmword_224672090);
        v171 = (v272 & 1) == 0 && ((v284 | v297) & 1) == 0;
        if ((v266 & 1) == 0 && v171)
        {
          v424 = v344;
          v425 = v345;
          v426 = v346;
          v423 = v343;
          v422 = v342;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_2246720A0;
          v418 = xmmword_2246720B0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 4, 4, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1E400000024), xmmword_2246720B0);
        }
      }
      v172 = (v275 & 1) == 0 && ((v284 | v297) & 1) == 0;
      if (v172 && (v281 & 1) == 0)
      {
        v419 = v369;
        v420 = v370;
        v421 = v371;
        v418 = v368;
        v417 = v367;
        *(_QWORD *)&v407 = 0xC0D0C0D0C0D0C0DLL;
        v412 = xmmword_2246720C0;
        v413 = xmmword_2246720D0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 4, 4, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1E400000024), xmmword_2246720D0);
      }
    }
    if (((v300 | v294) & 1) == 0)
    {
      v414 = v369;
      v415 = v370;
      v416 = v371;
      v413 = v368;
      v412 = v367;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_2246720E0;
      v408 = xmmword_2246720F0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 4, 4, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x6400000024), xmmword_2246720F0);
      v173 = (v159 & 0x40000000) == 0 && ((v297 | v291) & 1) == 0;
      if ((v272 & 1) == 0 && v173)
      {
        v409 = v369;
        v410 = v370;
        v411 = v371;
        v408 = v368;
        v407 = v367;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224672100;
        v403 = xmmword_224672110;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 4, 4, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1E400000024), xmmword_224672110);
      }
    }
    v174 = (v281 & 1) == 0 && ((v297 | v291) & 1) == 0;
    if (v174 && (v279 & 1) == 0)
    {
      v404 = v369;
      v405 = v370;
      v406 = v371;
      v403 = v368;
      v402 = v367;
      *(_QWORD *)&v392 = 0xC0D0C0D0C0D0C0DLL;
      v397 = xmmword_224672120;
      v398 = xmmword_224672130;
      *(_QWORD *)&v387 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 4, 4, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v387, COERCE_DOUBLE(0x1E400000024), xmmword_224672130);
    }
  }
  v364 = v354;
  v365 = v355;
  v366 = v356;
  v362 = v352;
  v363 = v353;
  v175 = v42[12];
  if ((v175 & 0x80000000) != 0)
  {
    v177 = *(_DWORD *)(v41 + 2192);
    v178 = **v97;
    if (**v97)
      goto LABEL_453;
    goto LABEL_447;
  }
  v176 = *(_QWORD *)(v41 + 2328);
  if (v175 >= (*(_QWORD *)(v41 + 2336) - v176) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v176 = *(_QWORD *)(v41 + 2328);
  }
  v177 = *(_DWORD *)(v176 + (v175 << 11) + 1912);
  v178 = **v97;
  if (!**v97)
  {
LABEL_447:
    if ((v177 & 0x10000000) != 0)
      v179 = 0x40000000;
    else
      v179 = 0x80000000;
    if ((v177 & 0x20000000) != 0)
      v177 = v179;
    else
      v177 &= 0xCFFFFFFF;
  }
LABEL_453:
  v180 = v81[30];
  if (**v310)
  {
    v181 = v42[12];
    if ((v181 & 0x80000000) == 0)
      goto LABEL_455;
LABEL_689:
    v183 = *(_DWORD *)(v41 + 2224);
    if (v178)
      goto LABEL_465;
    goto LABEL_459;
  }
  if ((v180 & 0x10000000) != 0)
    v242 = 0x40000000;
  else
    v242 = 0x80000000;
  if ((v180 & 0x20000000) != 0)
    v180 = v242;
  else
    v180 &= 0xCFFFFFFF;
  v181 = v42[12];
  if ((v181 & 0x80000000) != 0)
    goto LABEL_689;
LABEL_455:
  v182 = *(_QWORD *)(v41 + 2328);
  if (v181 >= (*(_QWORD *)(v41 + 2336) - v182) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v182 = *(_QWORD *)(v41 + 2328);
    v178 = **v97;
  }
  v183 = *(_DWORD *)(v182 + (v181 << 11) + 1944);
  if (!v178)
  {
LABEL_459:
    if ((v183 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v183 & 0x20000000) != 0)
      v183 = v184;
    else
      v183 &= 0xCFFFFFFF;
  }
LABEL_465:
  v303 = v81[38];
  if (**v310)
  {
    v185 = v42[12];
    if ((v185 & 0x80000000) == 0)
      goto LABEL_467;
LABEL_697:
    v187 = *(_DWORD *)(v41 + 2256);
    if (v178)
      goto LABEL_477;
    goto LABEL_471;
  }
  v243 = v303 & 0xCFFFFFFF;
  if ((v303 & 0x10000000) != 0)
    v244 = 0x40000000;
  else
    v244 = 0x80000000;
  if ((v303 & 0x20000000) != 0)
    v243 = v244;
  v303 = v243;
  v185 = v42[12];
  if ((v185 & 0x80000000) != 0)
    goto LABEL_697;
LABEL_467:
  v186 = *(_QWORD *)(v41 + 2328);
  if (v185 >= (*(_QWORD *)(v41 + 2336) - v186) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v186 = *(_QWORD *)(v41 + 2328);
    v178 = **v97;
  }
  v187 = *(_DWORD *)(v186 + (v185 << 11) + 1976);
  if (!v178)
  {
LABEL_471:
    if ((v187 & 0x10000000) != 0)
      v188 = 0x40000000;
    else
      v188 = 0x80000000;
    if ((v187 & 0x20000000) != 0)
      v187 = v188;
    else
      v187 &= 0xCFFFFFFF;
  }
LABEL_477:
  v267 = v177 >> 30;
  v285 = v183 >> 30;
  v288 = v180 >> 30;
  v276 = v187 >> 30;
  v389 = v354;
  v390 = v355;
  v391 = v356;
  v388 = v353;
  v387 = v352;
  if ((v306 & 0x40000000) != 0)
  {
    v379 = v354;
    v380 = v355;
    v381 = v356;
    v378 = v353;
    v377 = v352;
    *(_QWORD *)&v427 = 0xD0D0D0D0D0D0D0DLL;
    v372 = xmmword_224672140;
    v373 = xmmword_224672150;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 5, 4, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x6500000025), xmmword_224672150);
    if ((v308 & 0x40000000) == 0)
    {
      v374 = v354;
      v375 = v355;
      v376 = v356;
      v373 = v353;
      v372 = v352;
      *(_QWORD *)&v422 = 0xD0D0D0D0D0D0D0DLL;
      v427 = xmmword_224672160;
      v428 = xmmword_224672170;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 5, 4, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x6500000025), xmmword_224672170);
      if (((v300 | v294) & 1) == 0)
      {
        v429 = v354;
        v430 = v355;
        v431 = v356;
        v427 = v352;
        v428 = v353;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224672180;
        v423 = xmmword_224672190;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 5, 4, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x6500000025), xmmword_224672190);
        v189 = (v270 & 1) == 0 && ((v297 | v291) & 1) == 0;
        if ((v272 & 1) == 0 && v189)
        {
          v424 = v354;
          v425 = v355;
          v426 = v356;
          v423 = v353;
          v422 = v352;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_2246721A0;
          v418 = xmmword_2246721B0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 5, 4, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1E500000025), xmmword_2246721B0);
        }
      }
      v190 = (v281 & 1) == 0 && ((v297 | v291) & 1) == 0;
      if (v190 && (v279 & 1) == 0)
      {
        v419 = v389;
        v420 = v390;
        v421 = v391;
        v418 = v388;
        v417 = v387;
        *(_QWORD *)&v407 = 0xC0D0C0D0C0D0C0DLL;
        v412 = xmmword_2246721C0;
        v413 = xmmword_2246721D0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 5, 4, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1E500000025), xmmword_2246721D0);
      }
    }
    if (((v294 | v288) & 1) == 0)
    {
      v414 = v389;
      v415 = v390;
      v416 = v391;
      v413 = v388;
      v412 = v387;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_2246721E0;
      v408 = xmmword_2246721F0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 5, 4, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x6500000025), xmmword_2246721F0);
      v191 = (v177 & 0x40000000) == 0 && ((v291 | v285) & 1) == 0;
      if ((v270 & 1) == 0 && v191)
      {
        v409 = v389;
        v410 = v390;
        v411 = v391;
        v408 = v388;
        v407 = v387;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224672200;
        v403 = xmmword_224672210;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 5, 4, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1E500000025), xmmword_224672210);
      }
    }
    v192 = (v279 & 1) == 0 && ((v291 | v285) & 1) == 0;
    if (v192 && (v276 & 1) == 0)
    {
      v404 = v389;
      v405 = v390;
      v406 = v391;
      v403 = v388;
      v402 = v387;
      *(_QWORD *)&v392 = 0xC0D0C0D0C0D0C0DLL;
      v397 = xmmword_224672220;
      v398 = xmmword_224672230;
      *(_QWORD *)&v382 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 5, 4, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v382, COERCE_DOUBLE(0x1E500000025), xmmword_224672230);
    }
  }
  v384 = v364;
  v385 = v365;
  v386 = v366;
  v383 = v363;
  v382 = v362;
  v193 = v42[12];
  if ((v193 & 0x80000000) != 0)
  {
    v195 = *(_DWORD *)(v41 + 2196);
    v196 = **v97;
    if (**v97)
      goto LABEL_516;
    goto LABEL_510;
  }
  v194 = *(_QWORD *)(v41 + 2328);
  if (v193 >= (*(_QWORD *)(v41 + 2336) - v194) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v194 = *(_QWORD *)(v41 + 2328);
  }
  v195 = *(_DWORD *)(v194 + (v193 << 11) + 1916);
  v196 = **v97;
  if (!**v97)
  {
LABEL_510:
    if ((v195 & 0x10000000) != 0)
      v197 = 0x40000000;
    else
      v197 = 0x80000000;
    if ((v195 & 0x20000000) != 0)
      v195 = v197;
    else
      v195 &= 0xCFFFFFFF;
  }
LABEL_516:
  v198 = v81[31];
  if (**v310)
  {
    v199 = v42[12];
    if ((v199 & 0x80000000) == 0)
      goto LABEL_518;
LABEL_708:
    v201 = *(_DWORD *)(v41 + 2228);
    if (v196)
      goto LABEL_528;
    goto LABEL_522;
  }
  if ((v198 & 0x10000000) != 0)
    v245 = 0x40000000;
  else
    v245 = 0x80000000;
  if ((v198 & 0x20000000) != 0)
    v198 = v245;
  else
    v198 &= 0xCFFFFFFF;
  v199 = v42[12];
  if ((v199 & 0x80000000) != 0)
    goto LABEL_708;
LABEL_518:
  v200 = *(_QWORD *)(v41 + 2328);
  if (v199 >= (*(_QWORD *)(v41 + 2336) - v200) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v200 = *(_QWORD *)(v41 + 2328);
    v196 = **v97;
  }
  v201 = *(_DWORD *)(v200 + (v199 << 11) + 1948);
  if (!v196)
  {
LABEL_522:
    if ((v201 & 0x10000000) != 0)
      v202 = 0x40000000;
    else
      v202 = 0x80000000;
    if ((v201 & 0x20000000) != 0)
      v201 = v202;
    else
      v201 &= 0xCFFFFFFF;
  }
LABEL_528:
  v203 = v81[39];
  if (**v310)
  {
    v204 = v42[12];
    if ((v204 & 0x80000000) == 0)
      goto LABEL_530;
LABEL_717:
    v206 = *(_DWORD *)(v41 + 2260);
    if (v196)
      goto LABEL_540;
    goto LABEL_534;
  }
  if ((v203 & 0x10000000) != 0)
    v246 = 0x40000000;
  else
    v246 = 0x80000000;
  if ((v203 & 0x20000000) != 0)
    v203 = v246;
  else
    v203 &= 0xCFFFFFFF;
  v204 = v42[12];
  if ((v204 & 0x80000000) != 0)
    goto LABEL_717;
LABEL_530:
  v205 = *(_QWORD *)(v41 + 2328);
  if (v204 >= (*(_QWORD *)(v41 + 2336) - v205) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v205 = *(_QWORD *)(v41 + 2328);
    v196 = **v97;
  }
  v206 = *(_DWORD *)(v205 + (v204 << 11) + 1980);
  if (!v196)
  {
LABEL_534:
    if ((v206 & 0x10000000) != 0)
      v207 = 0x40000000;
    else
      v207 = 0x80000000;
    if ((v206 & 0x20000000) != 0)
      v206 = v207;
    else
      v206 &= 0xCFFFFFFF;
  }
LABEL_540:
  v309 = v195 >> 30;
  v311 = v198 >> 30;
  v208 = v201 >> 30;
  v209 = v206 >> 30;
  v394 = v364;
  v395 = v365;
  v396 = v366;
  v393 = v363;
  v392 = v362;
  if ((v303 & 0x40000000) != 0)
  {
    v379 = v364;
    v380 = v365;
    v381 = v366;
    v378 = v363;
    v377 = v362;
    *(_QWORD *)&v427 = 0xD0D0D0D0D0D0D0DLL;
    v372 = xmmword_224672240;
    v373 = xmmword_224672250;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 6, 4, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x6600000026), xmmword_224672250);
    if ((v306 & 0x40000000) == 0)
    {
      v374 = v364;
      v375 = v365;
      v376 = v366;
      v373 = v363;
      v372 = v362;
      *(_QWORD *)&v422 = 0xD0D0D0D0D0D0D0DLL;
      v427 = xmmword_224672260;
      v428 = xmmword_224672270;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 6, 4, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x6600000026), xmmword_224672270);
      if (((v294 | v288) & 1) == 0)
      {
        v429 = v364;
        v430 = v365;
        v431 = v366;
        v427 = v362;
        v428 = v363;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224672280;
        v423 = xmmword_224672290;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 6, 4, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x6600000026), xmmword_224672290);
        v210 = (v267 & 1) == 0 && ((v291 | v285) & 1) == 0;
        if ((v270 & 1) == 0 && v210)
        {
          v424 = v364;
          v425 = v365;
          v426 = v366;
          v423 = v363;
          v422 = v362;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_2246722A0;
          v418 = xmmword_2246722B0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 6, 4, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1E600000026), xmmword_2246722B0);
        }
      }
      v211 = (v279 & 1) == 0 && ((v291 | v285) & 1) == 0;
      if (v211 && (v276 & 1) == 0)
      {
        v419 = v394;
        v420 = v395;
        v421 = v396;
        v418 = v393;
        v417 = v392;
        *(_QWORD *)&v407 = 0xC0D0C0D0C0D0C0DLL;
        v412 = xmmword_2246722C0;
        v413 = xmmword_2246722D0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 6, 4, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1E600000026), xmmword_2246722D0);
      }
    }
    if (((v288 | v311) & 1) == 0)
    {
      v414 = v394;
      v415 = v395;
      v416 = v396;
      v413 = v393;
      v412 = v392;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_2246722E0;
      v408 = xmmword_2246722F0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 6, 4, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x6600000026), xmmword_2246722F0);
      v212 = (v195 & 0x40000000) == 0 && ((v285 | v208) & 1) == 0;
      if ((v267 & 1) == 0 && v212)
      {
        v409 = v394;
        v410 = v395;
        v411 = v396;
        v408 = v393;
        v407 = v392;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224672300;
        v403 = xmmword_224672310;
        *(_QWORD *)&v433[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 6, 4, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)v433, COERCE_DOUBLE(0x1E600000026), xmmword_224672310);
      }
    }
    v213 = (v276 & 1) == 0 && ((v285 | v208) & 1) == 0;
    if (v213 && (v209 & 1) == 0)
    {
      v404 = v394;
      v405 = v395;
      v406 = v396;
      v403 = v393;
      v402 = v392;
      *(_QWORD *)&v433[0] = 0xC0D0C0D0C0D0C0DLL;
      v397 = xmmword_224672320;
      v398 = xmmword_224672330;
      v434[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 6, 4, 0, (uint64_t)v433, (uint64_t)&v397, (uint64_t)v434, COERCE_DOUBLE(0x1E600000026), xmmword_224672330);
    }
  }
  v214 = v42[21];
  if ((v214 & 0x80000000) != 0)
  {
    v217 = *v97;
    v218 = *(_DWORD *)(v41 + 2168);
    v219 = **v97;
    if (**v97)
      goto LABEL_573;
  }
  else
  {
    v215 = *(_QWORD *)(v41 + 2328);
    if (v214 >= (*(_QWORD *)(v41 + 2336) - v215) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v215 = *(_QWORD *)(v41 + 2328);
    }
    v216 = v215 + (v214 << 11);
    v217 = *v97;
    v218 = *(_DWORD *)(v216 + 1888);
    v219 = **v97;
    if (**v97)
    {
LABEL_573:
      v220 = v42[22];
      if ((v220 & 0x80000000) == 0)
        goto LABEL_574;
LABEL_727:
      v222 = *(_DWORD *)(v41 + 376);
      if (v219)
        goto LABEL_578;
      goto LABEL_728;
    }
  }
  if ((v218 & 0x10000000) != 0)
    v247 = 0x40000000;
  else
    v247 = 0x80000000;
  if ((v218 & 0x20000000) != 0)
    v218 = v247;
  else
    v218 &= 0xCFFFFFFF;
  v220 = v42[22];
  if ((v220 & 0x80000000) != 0)
    goto LABEL_727;
LABEL_574:
  v221 = *(_QWORD *)(v41 + 2328);
  if (v220 >= (*(_QWORD *)(v41 + 2336) - v221) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v221 = *(_QWORD *)(v41 + 2328);
    v217 = *v97;
    v219 = **v97;
  }
  v222 = *(_DWORD *)(v221 + (v220 << 11) + 96);
  if (v219)
  {
LABEL_578:
    v223 = v42[21];
    if ((v223 & 0x80000000) == 0)
      goto LABEL_579;
LABEL_735:
    v225 = *(_DWORD *)(v41 + 2200);
    if (v219)
      goto LABEL_583;
LABEL_736:
    if ((v225 & 0x10000000) != 0)
      v249 = 0x40000000;
    else
      v249 = 0x80000000;
    if ((v225 & 0x20000000) != 0)
      v225 = v249;
    else
      v225 &= 0xCFFFFFFF;
    v226 = v42[22];
    if ((v226 & 0x80000000) != 0)
      goto LABEL_746;
    goto LABEL_743;
  }
LABEL_728:
  if ((v222 & 0x10000000) != 0)
    v248 = 0x40000000;
  else
    v248 = 0x80000000;
  if ((v222 & 0x20000000) != 0)
    v222 = v248;
  else
    v222 &= 0xCFFFFFFF;
  v223 = v42[21];
  if ((v223 & 0x80000000) != 0)
    goto LABEL_735;
LABEL_579:
  v224 = *(_QWORD *)(v41 + 2328);
  if (v223 >= (*(_QWORD *)(v41 + 2336) - v224) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v224 = *(_QWORD *)(v41 + 2328);
    v217 = *v97;
    v219 = **v97;
  }
  v225 = *(_DWORD *)(v224 + (v223 << 11) + 1920);
  if (!v219)
    goto LABEL_736;
LABEL_583:
  v226 = v42[22];
  if ((v226 & 0x80000000) != 0)
    goto LABEL_746;
LABEL_743:
  if (v226 >= (uint64_t)(*(_QWORD *)(v41 + 2336) - *(_QWORD *)(v41 + 2328)) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v217 = *v97;
  }
LABEL_746:
  v250 = v42[21];
  if ((v250 & 0x80000000) != 0)
  {
    v252 = *(_DWORD *)(v41 + 2232);
    if (*v217)
      goto LABEL_757;
    goto LABEL_751;
  }
  v251 = *(_QWORD *)(v41 + 2328);
  if (v250 >= (*(_QWORD *)(v41 + 2336) - v251) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v251 = *(_QWORD *)(v41 + 2328);
    v217 = *v97;
  }
  v252 = *(_DWORD *)(v251 + (v250 << 11) + 1952);
  if (!*v217)
  {
LABEL_751:
    if ((v252 & 0x10000000) != 0)
      v253 = 0x40000000;
    else
      v253 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v252 = v253;
    else
      v252 &= 0xCFFFFFFF;
  }
LABEL_757:
  v399 = v384;
  v400 = v385;
  v401 = v386;
  v398 = v383;
  v397 = v382;
  if ((v203 & 0x40000000) != 0)
  {
    v379 = v384;
    v380 = v385;
    v381 = v386;
    *(_QWORD *)&v427 = 0x161616160D0D0D0DLL;
    v378 = v383;
    v377 = v382;
    v372 = xmmword_224672340;
    v373 = xmmword_224672350;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 7, 4, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x6700000027), xmmword_224672350);
    if ((v303 & 0x40000000) == 0)
    {
      v374 = v384;
      v375 = v385;
      v376 = v386;
      v373 = v383;
      v372 = v382;
      *(_QWORD *)&v422 = 0xD0D0D0D0D0D0D0DLL;
      v427 = xmmword_224672360;
      v428 = xmmword_224672370;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 7, 4, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x6700000027), xmmword_224672370);
      if (((v288 | v311) & 1) == 0)
      {
        v429 = v384;
        v430 = v385;
        v431 = v386;
        v427 = v382;
        v428 = v383;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224672380;
        v423 = xmmword_224672390;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 7, 4, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x6700000027), xmmword_224672390);
        v254 = (v309 & 1) == 0 && ((v285 | v208) & 1) == 0;
        if ((v267 & 1) == 0 && v254)
        {
          v424 = v384;
          v425 = v385;
          v426 = v386;
          v423 = v383;
          v422 = v382;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_2246723A0;
          v418 = xmmword_2246723B0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 7, 4, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1E700000027), xmmword_2246723B0);
        }
      }
      v255 = (v276 & 1) == 0 && ((v285 | v208) & 1) == 0;
      if (v255 && (v209 & 1) == 0)
      {
        v419 = v399;
        v420 = v400;
        v421 = v401;
        v418 = v398;
        v417 = v397;
        *(_QWORD *)&v407 = 0xC0D0C0D0C0D0C0DLL;
        v412 = xmmword_2246723C0;
        v413 = xmmword_2246723D0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 7, 4, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1E700000027), xmmword_2246723D0);
      }
    }
    if (!(v222 & 0x40000000 | v311 & 1))
    {
      v414 = v399;
      v415 = v400;
      v416 = v401;
      *(_QWORD *)&v402 = 0x16160D0D16160D0DLL;
      v413 = v398;
      v412 = v397;
      v407 = xmmword_2246723E0;
      v408 = xmmword_2246723F0;
      *(_QWORD *)&v433[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 7, 4, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)v433, COERCE_DOUBLE(0x6700000027), xmmword_2246723F0);
      v256 = (v218 & 0x40000000) == 0 && (v225 & 0x40000000 | v208 & 1) == 0;
      if ((v309 & 1) == 0 && v256)
      {
        v409 = v399;
        v410 = v400;
        v411 = v401;
        v408 = v398;
        v407 = v397;
        *(_QWORD *)&v433[0] = 0x151615160C0D0C0DLL;
        v402 = xmmword_224672400;
        v403 = xmmword_224672410;
        v434[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 7, 4, 0, (uint64_t)v433, (uint64_t)&v402, (uint64_t)v434, COERCE_DOUBLE(0x1E700000027), xmmword_224672410);
      }
    }
    v257 = (v209 & 1) == 0 && (v225 & 0x40000000 | v208 & 1) == 0;
    if (v257 && (v252 & 0x40000000) == 0)
    {
      v404 = v399;
      v405 = v400;
      v406 = v401;
      v434[0] = 0x15160C0D15160C0DLL;
      v403 = v398;
      v402 = v397;
      v433[0] = xmmword_224672420;
      v433[1] = xmmword_224672430;
      v432 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 7, 4, 0, (uint64_t)v434, (uint64_t)v433, (uint64_t)&v432, COERCE_DOUBLE(0x1E700000027), xmmword_224672430);
    }
  }
  v258 = *(_OWORD *)v282;
  v316 = *(_QWORD *)(v282 + 16);
  v315 = v258;
  v259 = *(_OWORD *)a2;
  v314 = a2[2];
  v260 = *v273;
  v261 = v273[1];
  v312[4] = v273[4];
  v313 = v259;
  v262 = v273[3];
  v312[2] = v273[2];
  v312[3] = v262;
  v312[0] = v260;
  v312[1] = v261;
  return sub_223D9FC20(&v315, (uint64_t *)&v313, v312);
}

unint64_t sub_223D9FC20(__int128 *a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v6;
  _BYTE **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  _BYTE **v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  _BYTE **v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  _BYTE **v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  _BYTE **v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  _BYTE **v54;
  unint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  unsigned int v58;
  uint64_t v59;
  _BYTE **v60;
  unint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  unsigned int v64;
  uint64_t v65;
  _BYTE **v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  _BYTE *v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  _DWORD *v77;
  __int128 v78;
  float32x4_t v79;
  unint64_t v80;
  uint64_t v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unint64_t v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int v89;
  unint64_t v90;
  uint64_t v91;
  unsigned int v92;
  _BYTE **v93;
  unsigned int v94;
  _BOOL4 v95;
  _BOOL4 v96;
  _BOOL4 v97;
  _BOOL4 v98;
  unint64_t v99;
  uint64_t v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unint64_t v105;
  uint64_t v106;
  unsigned int v107;
  unsigned int v108;
  unint64_t v109;
  uint64_t v110;
  unsigned int v111;
  unsigned int v112;
  _BOOL4 v113;
  _BOOL4 v114;
  _BOOL4 v115;
  _BOOL4 v116;
  unint64_t v117;
  uint64_t v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unint64_t v123;
  uint64_t v124;
  unsigned int v125;
  unsigned int v126;
  unint64_t v127;
  uint64_t v128;
  unsigned int v129;
  unsigned int v130;
  _BOOL4 v131;
  _BOOL4 v132;
  _BOOL4 v133;
  _BOOL4 v134;
  unint64_t v135;
  uint64_t v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unint64_t v141;
  uint64_t v142;
  unsigned int v143;
  unsigned int v144;
  unint64_t v145;
  uint64_t v146;
  unsigned int v147;
  unsigned int v148;
  _BOOL4 v149;
  _BOOL4 v150;
  _BOOL4 v151;
  _BOOL4 v152;
  unint64_t v153;
  uint64_t v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unint64_t v159;
  uint64_t v160;
  unsigned int v161;
  unsigned int v162;
  unint64_t v163;
  uint64_t v164;
  unsigned int v165;
  unsigned int v166;
  _BOOL4 v167;
  _BOOL4 v168;
  _BOOL4 v169;
  _BOOL4 v170;
  unint64_t v171;
  uint64_t v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unint64_t v177;
  uint64_t v178;
  unsigned int v179;
  unsigned int v180;
  unint64_t v181;
  uint64_t v182;
  unsigned int v183;
  unsigned int v184;
  _BOOL4 v185;
  _BOOL4 v186;
  _BOOL4 v187;
  _BOOL4 v188;
  unint64_t v189;
  uint64_t v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unint64_t v195;
  uint64_t v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unint64_t v200;
  uint64_t v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  _BOOL4 v206;
  _BOOL4 v207;
  _BOOL4 v208;
  _BOOL4 v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _BYTE *v213;
  unsigned int v214;
  int v215;
  unint64_t v216;
  uint64_t v217;
  unsigned int v218;
  unint64_t v219;
  uint64_t v220;
  unsigned int v221;
  unint64_t v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unsigned int v249;
  _BOOL4 v250;
  _BOOL4 v251;
  _BOOL4 v252;
  _BOOL4 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  __int128 *v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  __int128 *v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  _BYTE **v306;
  unsigned int v307;
  _OWORD v308[5];
  __int128 v309;
  uint64_t v310;
  __int128 v311;
  uint64_t v312;
  __int128 v313;
  float32x4_t v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  float32x4_t v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  float32x4_t v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  float32x4_t v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  float32x4_t v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  float32x4_t v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  float32x4_t v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  float32x4_t v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  float32x4_t v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  float32x4_t v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  float32x4_t v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  float32x4_t v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  float32x4_t v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  float32x4_t v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  float32x4_t v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  float32x4_t v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  float32x4_t v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  float32x4_t v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  float32x4_t v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  float32x4_t v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  float32x4_t v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  float32x4_t v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  float32x4_t v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  uint64_t v428;
  _OWORD v429[2];
  _QWORD v430[3];

  v430[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v7 = (_BYTE **)a2[2];
  v8 = *(unsigned int *)(a2[1] + 48);
  if ((v8 & 0x80000000) != 0)
  {
    v10 = v6 + 280;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 2328);
    if (v8 >= (*(_QWORD *)(v6 + 2336) - v9) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v9 = *(_QWORD *)(v6 + 2328);
    }
    v10 = v9 + (v8 << 11);
  }
  v11 = *(_DWORD *)(v10 + 1920);
  v12 = v11 & 0xCFFFFFFF;
  if ((v11 & 0x10000000) != 0)
    v13 = 0x40000000;
  else
    v13 = 0x80000000;
  if ((v11 & 0x20000000) != 0)
    v12 = v13;
  if (**v7)
    v14 = v11;
  else
    v14 = v12;
  v15 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 128);
  v16 = v15 & 0xCFFFFFFF;
  if ((v15 & 0x10000000) != 0)
    v17 = 0x40000000;
  else
    v17 = 0x80000000;
  if ((v15 & 0x20000000) != 0)
    v16 = v17;
  if (***(_BYTE ***)a1)
    v18 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 128);
  else
    v18 = v16;
  v19 = *a2;
  v20 = (_BYTE **)a2[2];
  v21 = *(unsigned int *)(a2[1] + 48);
  if ((v21 & 0x80000000) != 0)
  {
    v23 = v19 + 280;
  }
  else
  {
    v22 = *(_QWORD *)(v19 + 2328);
    if (v21 >= (*(_QWORD *)(v19 + 2336) - v22) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v22 = *(_QWORD *)(v19 + 2328);
    }
    v23 = v22 + (v21 << 11);
  }
  v24 = *(_DWORD *)(v23 + 1952);
  v25 = v24 & 0xCFFFFFFF;
  if ((v24 & 0x10000000) != 0)
    v26 = 0x40000000;
  else
    v26 = 0x80000000;
  if ((v24 & 0x20000000) != 0)
    v25 = v26;
  if (**v20)
    v27 = v24;
  else
    v27 = v25;
  v28 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 160);
  v29 = v28 & 0xCFFFFFFF;
  if ((v28 & 0x10000000) != 0)
    v30 = 0x40000000;
  else
    v30 = 0x80000000;
  if ((v28 & 0x20000000) != 0)
    v29 = v30;
  if (***(_BYTE ***)a1)
    v31 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 160);
  else
    v31 = v29;
  v32 = *a2;
  v33 = (_BYTE **)a2[2];
  v34 = *(unsigned int *)(a2[1] + 48);
  v300 = v18;
  v291 = v27;
  v294 = v14;
  if ((v34 & 0x80000000) != 0)
  {
    v36 = v32 + 280;
  }
  else
  {
    v35 = *(_QWORD *)(v32 + 2328);
    if (v34 >= (*(_QWORD *)(v32 + 2336) - v35) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v35 = *(_QWORD *)(v32 + 2328);
    }
    v36 = v35 + (v34 << 11);
  }
  v37 = *(_DWORD *)(v36 + 1984);
  v38 = v37 & 0xCFFFFFFF;
  if ((v37 & 0x10000000) != 0)
    v39 = 0x40000000;
  else
    v39 = 0x80000000;
  if ((v37 & 0x20000000) != 0)
    v38 = v39;
  if (**v33)
    v40 = v37;
  else
    v40 = v38;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (_BYTE **)a2[2];
  v278 = a1;
  v297 = v31;
  v288 = v40;
  if ((v31 & 0x40000000) == 0)
  {
    v264 = 0;
    v44 = 0;
    v273 = 0;
    v285 = 0;
    v260 = 0;
    goto LABEL_127;
  }
  v45 = v42[3];
  if ((v45 & 0x80000000) != 0)
  {
    v47 = *(_DWORD *)(v41 + 2228);
    if (**v43)
      goto LABEL_66;
  }
  else
  {
    v46 = *(_QWORD *)(v41 + 2328);
    if (v45 >= (*(_QWORD *)(v41 + 2336) - v46) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v46 = *(_QWORD *)(v41 + 2328);
    }
    v47 = *(_DWORD *)(v46 + (v45 << 11) + 1948);
    if (**v43)
    {
LABEL_66:
      v48 = *a2;
      v49 = (_BYTE **)a2[2];
      v50 = *(unsigned int *)(a2[1] + 16);
      if ((v50 & 0x80000000) == 0)
        goto LABEL_67;
LABEL_94:
      v52 = *(_DWORD *)(v48 + 436);
      if (**v49)
        goto LABEL_71;
      goto LABEL_95;
    }
  }
  if ((v47 & 0x10000000) != 0)
    v70 = 0x40000000;
  else
    v70 = 0x80000000;
  if ((v47 & 0x20000000) != 0)
    v47 = v70;
  else
    v47 &= 0xCFFFFFFF;
  v48 = *a2;
  v49 = (_BYTE **)a2[2];
  v50 = *(unsigned int *)(a2[1] + 16);
  if ((v50 & 0x80000000) != 0)
    goto LABEL_94;
LABEL_67:
  v51 = *(_QWORD *)(v48 + 2328);
  if (v50 >= (*(_QWORD *)(v48 + 2336) - v51) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v51 = *(_QWORD *)(v48 + 2328);
  }
  v52 = *(_DWORD *)(v51 + (v50 << 11) + 156);
  if (**v49)
  {
LABEL_71:
    v53 = *a2;
    v54 = (_BYTE **)a2[2];
    v55 = *(unsigned int *)(a2[1] + 12);
    if ((v55 & 0x80000000) == 0)
      goto LABEL_72;
LABEL_102:
    v57 = a3;
    v58 = *(_DWORD *)(v53 + 2260);
    if (**v54)
      goto LABEL_76;
    goto LABEL_103;
  }
LABEL_95:
  if ((v52 & 0x10000000) != 0)
    v71 = 0x40000000;
  else
    v71 = 0x80000000;
  if ((v52 & 0x20000000) != 0)
    v52 = v71;
  else
    v52 &= 0xCFFFFFFF;
  v53 = *a2;
  v54 = (_BYTE **)a2[2];
  v55 = *(unsigned int *)(a2[1] + 12);
  if ((v55 & 0x80000000) != 0)
    goto LABEL_102;
LABEL_72:
  v56 = *(_QWORD *)(v53 + 2328);
  if (v55 >= (*(_QWORD *)(v53 + 2336) - v56) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v56 = *(_QWORD *)(v53 + 2328);
  }
  v57 = a3;
  v58 = *(_DWORD *)(v56 + (v55 << 11) + 1980);
  if (**v54)
  {
LABEL_76:
    v59 = *a2;
    v60 = (_BYTE **)a2[2];
    v61 = *(unsigned int *)(a2[1] + 16);
    if ((v61 & 0x80000000) == 0)
      goto LABEL_77;
LABEL_110:
    v73 = *v60;
    v64 = *(_DWORD *)(v59 + 468);
    if (*v73)
      goto LABEL_81;
LABEL_111:
    if ((v64 & 0x10000000) != 0)
      v74 = 0x40000000;
    else
      v74 = 0x80000000;
    if ((v64 & 0x20000000) != 0)
      v64 = v74;
    else
      v64 &= 0xCFFFFFFF;
    v65 = *a2;
    v66 = (_BYTE **)a2[2];
    v67 = *(unsigned int *)(a2[1] + 12);
    if ((v67 & 0x80000000) == 0)
      goto LABEL_82;
    goto LABEL_118;
  }
LABEL_103:
  if ((v58 & 0x10000000) != 0)
    v72 = 0x40000000;
  else
    v72 = 0x80000000;
  if ((v58 & 0x20000000) != 0)
    v58 = v72;
  else
    v58 &= 0xCFFFFFFF;
  v59 = *a2;
  v60 = (_BYTE **)a2[2];
  v61 = *(unsigned int *)(a2[1] + 16);
  if ((v61 & 0x80000000) != 0)
    goto LABEL_110;
LABEL_77:
  v62 = *(_QWORD *)(v59 + 2328);
  if (v61 >= (*(_QWORD *)(v59 + 2336) - v62) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v62 = *(_QWORD *)(v59 + 2328);
  }
  v63 = *v60;
  v64 = *(_DWORD *)(v62 + (v61 << 11) + 188);
  if (!*v63)
    goto LABEL_111;
LABEL_81:
  v65 = *a2;
  v66 = (_BYTE **)a2[2];
  v67 = *(unsigned int *)(a2[1] + 12);
  if ((v67 & 0x80000000) == 0)
  {
LABEL_82:
    v68 = *(_QWORD *)(v65 + 2328);
    if (v67 >= (*(_QWORD *)(v65 + 2336) - v68) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v68 = *(_QWORD *)(v65 + 2328);
    }
    v69 = v68 + (v67 << 11);
    goto LABEL_119;
  }
LABEL_118:
  v69 = v65 + 280;
LABEL_119:
  v260 = (v47 >> 30) & 1;
  v285 = (v52 >> 30) & 1;
  v273 = (v58 >> 30) & 1;
  v44 = (v64 >> 30) & 1;
  v75 = *(_DWORD *)(v69 + 2012);
  a3 = v57;
  if (!**v66)
  {
    if ((v75 & 0x10000000) != 0)
      v76 = 0x40000000;
    else
      v76 = 0x80000000;
    if ((v75 & 0x20000000) != 0)
      v75 = v76;
    else
      v75 &= 0xCFFFFFFF;
  }
  v264 = (v75 >> 30) & 1;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (_BYTE **)a2[2];
  a1 = v278;
LABEL_127:
  v306 = *(_BYTE ***)a1;
  v77 = (_DWORD *)*((_QWORD *)a1 + 2);
  v78 = a3[3];
  v315 = a3[2];
  v316 = v78;
  v317 = a3[4];
  v79 = *((float32x4_t *)a3 + 1);
  v313 = *a3;
  v314 = v79;
  v80 = v42[12];
  if ((v80 & 0x80000000) != 0)
  {
    v269 = a3;
    v82 = *(_DWORD *)(v41 + 2204);
    v83 = **v43;
    if (**v43)
      goto LABEL_138;
    goto LABEL_132;
  }
  v81 = *(_QWORD *)(v41 + 2328);
  if (v80 >= (*(_QWORD *)(v41 + 2336) - v81) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v81 = *(_QWORD *)(v41 + 2328);
  }
  v269 = a3;
  v82 = *(_DWORD *)(v81 + (v80 << 11) + 1924);
  v83 = **v43;
  if (!**v43)
  {
LABEL_132:
    if ((v82 & 0x10000000) != 0)
      v84 = 0x40000000;
    else
      v84 = 0x80000000;
    if ((v82 & 0x20000000) != 0)
      v82 = v84;
    else
      v82 &= 0xCFFFFFFF;
  }
LABEL_138:
  v85 = v77[33];
  if (**v306)
  {
    v86 = v42[12];
    if ((v86 & 0x80000000) == 0)
      goto LABEL_140;
LABEL_594:
    v88 = *(_DWORD *)(v41 + 2236);
    if (v83)
      goto LABEL_150;
    goto LABEL_144;
  }
  if ((v85 & 0x10000000) != 0)
    v223 = 0x40000000;
  else
    v223 = 0x80000000;
  if ((v85 & 0x20000000) != 0)
    v85 = v223;
  else
    v85 &= 0xCFFFFFFF;
  v86 = v42[12];
  if ((v86 & 0x80000000) != 0)
    goto LABEL_594;
LABEL_140:
  v87 = *(_QWORD *)(v41 + 2328);
  if (v86 >= (*(_QWORD *)(v41 + 2336) - v87) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v87 = *(_QWORD *)(v41 + 2328);
    v83 = **v43;
  }
  v88 = *(_DWORD *)(v87 + (v86 << 11) + 1956);
  if (!v83)
  {
LABEL_144:
    if ((v88 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v88 & 0x20000000) != 0)
      v88 = v89;
    else
      v88 &= 0xCFFFFFFF;
  }
LABEL_150:
  v303 = v77[41];
  if (**v306)
  {
    v90 = v42[12];
    if ((v90 & 0x80000000) == 0)
      goto LABEL_152;
LABEL_602:
    v261 = v294 >> 30;
    v92 = *(_DWORD *)(v41 + 2268);
    v93 = v43;
    if (v83)
      goto LABEL_162;
    goto LABEL_156;
  }
  v224 = v303 & 0xCFFFFFFF;
  if ((v303 & 0x10000000) != 0)
    v225 = 0x40000000;
  else
    v225 = 0x80000000;
  if ((v303 & 0x20000000) != 0)
    v224 = v225;
  v303 = v224;
  v90 = v42[12];
  if ((v90 & 0x80000000) != 0)
    goto LABEL_602;
LABEL_152:
  v91 = *(_QWORD *)(v41 + 2328);
  if (v90 < (*(_QWORD *)(v41 + 2336) - v91) >> 11)
    goto LABEL_155;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
LABEL_788:
    abort();
  }
  v91 = *(_QWORD *)(v41 + 2328);
  v83 = **v43;
LABEL_155:
  v261 = v294 >> 30;
  v92 = *(_DWORD *)(v91 + (v90 << 11) + 1988);
  v93 = v43;
  if (v83)
    goto LABEL_162;
LABEL_156:
  if ((v92 & 0x10000000) != 0)
    v94 = 0x40000000;
  else
    v94 = 0x80000000;
  if ((v92 & 0x20000000) != 0)
    v92 = v94;
  else
    v92 &= 0xCFFFFFFF;
LABEL_162:
  v267 = v82 >> 30;
  v279 = v291 >> 30;
  v282 = v300 >> 30;
  v270 = v288 >> 30;
  v292 = v88 >> 30;
  v295 = v85 >> 30;
  v276 = v92 >> 30;
  v325 = v315;
  v326 = v316;
  v327 = v317;
  v323 = v313;
  v324 = v314;
  if ((v297 & 0x40000000) != 0)
  {
    v375 = v315;
    v376 = v316;
    v377 = v317;
    v374 = v314;
    v373 = v313;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224672440;
    v369 = xmmword_224672450;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 0, 5, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x6800000028), xmmword_224672450);
    if (!v44)
    {
      v370 = v315;
      v371 = v316;
      v372 = v317;
      *(_QWORD *)&v418 = 0x4040D0D04040D0DLL;
      v369 = v314;
      v368 = v313;
      v423 = xmmword_224672460;
      v424 = xmmword_224672470;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 0, 5, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x6800000028), xmmword_224672470);
      if (!(v285 | ((v300 & 0x40000000) != 0)))
      {
        v425 = v315;
        v426 = v316;
        v427 = v317;
        v423 = v313;
        v424 = v314;
        *(_QWORD *)&v413 = 0x40404040D0D0D0DLL;
        v418 = xmmword_224672480;
        v419 = xmmword_224672490;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 0, 5, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x6800000028), xmmword_224672490);
        v95 = (v261 & 1) == 0 && (v273 | v279 & 1) == 0;
        if (!v260 && v95)
        {
          v420 = v315;
          v421 = v316;
          v422 = v317;
          v419 = v314;
          v418 = v313;
          *(_QWORD *)&v408 = 0x3040C0D03040C0DLL;
          v413 = xmmword_2246724A0;
          v414 = xmmword_2246724B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 0, 5, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1E800000028), xmmword_2246724B0);
        }
      }
      if (v264)
        v96 = 0;
      else
        v96 = (v273 | v279 & 1) == 0;
      if (v96 && (v288 & 0x40000000) == 0)
      {
        v415 = v325;
        v416 = v326;
        v417 = v327;
        v414 = v324;
        v413 = v323;
        *(_QWORD *)&v403 = 0x30403040C0D0C0DLL;
        v408 = xmmword_2246724C0;
        v409 = xmmword_2246724D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 0, 5, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1E800000028), xmmword_2246724D0);
      }
    }
    if (((v282 | v295) & 1) == 0)
    {
      v410 = v325;
      v411 = v326;
      v412 = v327;
      v409 = v324;
      v408 = v323;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246724E0;
      v404 = xmmword_2246724F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 0, 5, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x6800000028), xmmword_2246724F0);
      v97 = (v82 & 0x40000000) == 0 && ((v279 | v292) & 1) == 0;
      if ((v261 & 1) == 0 && v97)
      {
        v405 = v325;
        v406 = v326;
        v407 = v327;
        v404 = v324;
        v403 = v323;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224672500;
        v399 = xmmword_224672510;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 0, 5, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1E800000028), xmmword_224672510);
      }
    }
    v98 = (v288 & 0x40000000) == 0 && ((v279 | v292) & 1) == 0;
    if (v98 && (v276 & 1) == 0)
    {
      v400 = v325;
      v401 = v326;
      v402 = v327;
      v399 = v324;
      v398 = v323;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224672520;
      v394 = xmmword_224672530;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 0, 5, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1E800000028), xmmword_224672530);
    }
  }
  v320 = v315;
  v321 = v316;
  v322 = v317;
  v318 = v313;
  v319 = v314;
  v99 = v42[12];
  if ((v99 & 0x80000000) != 0)
  {
    v101 = *(_DWORD *)(v41 + 2208);
    v102 = **v93;
    if (**v93)
      goto LABEL_201;
    goto LABEL_195;
  }
  v100 = *(_QWORD *)(v41 + 2328);
  if (v99 >= (*(_QWORD *)(v41 + 2336) - v100) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v100 = *(_QWORD *)(v41 + 2328);
  }
  v101 = *(_DWORD *)(v100 + (v99 << 11) + 1928);
  v102 = **v93;
  if (!**v93)
  {
LABEL_195:
    if ((v101 & 0x10000000) != 0)
      v103 = 0x40000000;
    else
      v103 = 0x80000000;
    if ((v101 & 0x20000000) != 0)
      v101 = v103;
    else
      v101 &= 0xCFFFFFFF;
  }
LABEL_201:
  v104 = v77[34];
  if (**v306)
  {
    v105 = v42[12];
    if ((v105 & 0x80000000) == 0)
      goto LABEL_203;
LABEL_613:
    v107 = *(_DWORD *)(v41 + 2240);
    if (v102)
      goto LABEL_213;
    goto LABEL_207;
  }
  if ((v104 & 0x10000000) != 0)
    v226 = 0x40000000;
  else
    v226 = 0x80000000;
  if ((v104 & 0x20000000) != 0)
    v104 = v226;
  else
    v104 &= 0xCFFFFFFF;
  v105 = v42[12];
  if ((v105 & 0x80000000) != 0)
    goto LABEL_613;
LABEL_203:
  v106 = *(_QWORD *)(v41 + 2328);
  if (v105 >= (*(_QWORD *)(v41 + 2336) - v106) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v106 = *(_QWORD *)(v41 + 2328);
    v102 = **v93;
  }
  v107 = *(_DWORD *)(v106 + (v105 << 11) + 1960);
  if (!v102)
  {
LABEL_207:
    if ((v107 & 0x10000000) != 0)
      v108 = 0x40000000;
    else
      v108 = 0x80000000;
    if ((v107 & 0x20000000) != 0)
      v107 = v108;
    else
      v107 &= 0xCFFFFFFF;
  }
LABEL_213:
  v301 = v77[42];
  if (**v306)
  {
    v109 = v42[12];
    if ((v109 & 0x80000000) == 0)
      goto LABEL_215;
LABEL_621:
    v111 = *(_DWORD *)(v41 + 2272);
    if (v102)
      goto LABEL_225;
    goto LABEL_219;
  }
  v227 = v301 & 0xCFFFFFFF;
  if ((v301 & 0x10000000) != 0)
    v228 = 0x40000000;
  else
    v228 = 0x80000000;
  if ((v301 & 0x20000000) != 0)
    v227 = v228;
  v301 = v227;
  v109 = v42[12];
  if ((v109 & 0x80000000) != 0)
    goto LABEL_621;
LABEL_215:
  v110 = *(_QWORD *)(v41 + 2328);
  if (v109 >= (*(_QWORD *)(v41 + 2336) - v110) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v110 = *(_QWORD *)(v41 + 2328);
    v102 = **v93;
  }
  v111 = *(_DWORD *)(v110 + (v109 << 11) + 1992);
  if (!v102)
  {
LABEL_219:
    if ((v111 & 0x10000000) != 0)
      v112 = 0x40000000;
    else
      v112 = 0x80000000;
    if ((v111 & 0x20000000) != 0)
      v111 = v112;
    else
      v111 &= 0xCFFFFFFF;
  }
LABEL_225:
  v265 = v101 >> 30;
  v286 = v107 >> 30;
  v289 = v104 >> 30;
  v274 = v111 >> 30;
  v335 = v315;
  v336 = v316;
  v337 = v317;
  v333 = v313;
  v334 = v314;
  if ((v303 & 0x40000000) != 0)
  {
    v375 = v315;
    v376 = v316;
    v377 = v317;
    v374 = v314;
    v373 = v313;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224672540;
    v369 = xmmword_224672550;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 1, 5, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x6900000029), xmmword_224672550);
    if ((v297 & 0x40000000) == 0)
    {
      v370 = v315;
      v371 = v316;
      v372 = v317;
      v369 = v314;
      v368 = v313;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224672560;
      v424 = xmmword_224672570;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 1, 5, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x6900000029), xmmword_224672570);
      if (((v282 | v295) & 1) == 0)
      {
        v425 = v315;
        v426 = v316;
        v427 = v317;
        v423 = v313;
        v424 = v314;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224672580;
        v419 = xmmword_224672590;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 1, 5, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x6900000029), xmmword_224672590);
        v113 = (v267 & 1) == 0 && ((v279 | v292) & 1) == 0;
        if ((v261 & 1) == 0 && v113)
        {
          v420 = v315;
          v421 = v316;
          v422 = v317;
          v419 = v314;
          v418 = v313;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246725A0;
          v414 = xmmword_2246725B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 1, 5, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1E900000029), xmmword_2246725B0);
        }
      }
      v114 = (v270 & 1) == 0 && ((v279 | v292) & 1) == 0;
      if (v114 && (v276 & 1) == 0)
      {
        v415 = v335;
        v416 = v336;
        v417 = v337;
        v414 = v334;
        v413 = v333;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246725C0;
        v409 = xmmword_2246725D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 1, 5, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1E900000029), xmmword_2246725D0);
      }
    }
    if (((v295 | v289) & 1) == 0)
    {
      v410 = v335;
      v411 = v336;
      v412 = v337;
      v409 = v334;
      v408 = v333;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246725E0;
      v404 = xmmword_2246725F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 1, 5, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x6900000029), xmmword_2246725F0);
      v115 = (v101 & 0x40000000) == 0 && ((v292 | v286) & 1) == 0;
      if ((v267 & 1) == 0 && v115)
      {
        v405 = v335;
        v406 = v336;
        v407 = v337;
        v404 = v334;
        v403 = v333;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224672600;
        v399 = xmmword_224672610;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 1, 5, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1E900000029), xmmword_224672610);
      }
    }
    v116 = (v276 & 1) == 0 && ((v292 | v286) & 1) == 0;
    if (v116 && (v274 & 1) == 0)
    {
      v400 = v335;
      v401 = v336;
      v402 = v337;
      v399 = v334;
      v398 = v333;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224672620;
      v394 = xmmword_224672630;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 1, 5, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1E900000029), xmmword_224672630);
    }
  }
  v330 = v320;
  v331 = v321;
  v332 = v322;
  v328 = v318;
  v329 = v319;
  v117 = v42[12];
  if ((v117 & 0x80000000) != 0)
  {
    v119 = *(_DWORD *)(v41 + 2212);
    v120 = **v93;
    if (**v93)
      goto LABEL_264;
    goto LABEL_258;
  }
  v118 = *(_QWORD *)(v41 + 2328);
  if (v117 >= (*(_QWORD *)(v41 + 2336) - v118) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v118 = *(_QWORD *)(v41 + 2328);
  }
  v119 = *(_DWORD *)(v118 + (v117 << 11) + 1932);
  v120 = **v93;
  if (!**v93)
  {
LABEL_258:
    if ((v119 & 0x10000000) != 0)
      v121 = 0x40000000;
    else
      v121 = 0x80000000;
    if ((v119 & 0x20000000) != 0)
      v119 = v121;
    else
      v119 &= 0xCFFFFFFF;
  }
LABEL_264:
  v122 = v77[35];
  if (**v306)
  {
    v123 = v42[12];
    if ((v123 & 0x80000000) == 0)
      goto LABEL_266;
LABEL_632:
    v125 = *(_DWORD *)(v41 + 2244);
    if (v120)
      goto LABEL_276;
    goto LABEL_270;
  }
  if ((v122 & 0x10000000) != 0)
    v229 = 0x40000000;
  else
    v229 = 0x80000000;
  if ((v122 & 0x20000000) != 0)
    v122 = v229;
  else
    v122 &= 0xCFFFFFFF;
  v123 = v42[12];
  if ((v123 & 0x80000000) != 0)
    goto LABEL_632;
LABEL_266:
  v124 = *(_QWORD *)(v41 + 2328);
  if (v123 >= (*(_QWORD *)(v41 + 2336) - v124) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v124 = *(_QWORD *)(v41 + 2328);
    v120 = **v93;
  }
  v125 = *(_DWORD *)(v124 + (v123 << 11) + 1964);
  if (!v120)
  {
LABEL_270:
    if ((v125 & 0x10000000) != 0)
      v126 = 0x40000000;
    else
      v126 = 0x80000000;
    if ((v125 & 0x20000000) != 0)
      v125 = v126;
    else
      v125 &= 0xCFFFFFFF;
  }
LABEL_276:
  v298 = v77[43];
  if (**v306)
  {
    v127 = v42[12];
    if ((v127 & 0x80000000) == 0)
      goto LABEL_278;
LABEL_640:
    v129 = *(_DWORD *)(v41 + 2276);
    if (v120)
      goto LABEL_288;
    goto LABEL_282;
  }
  v230 = v298 & 0xCFFFFFFF;
  if ((v298 & 0x10000000) != 0)
    v231 = 0x40000000;
  else
    v231 = 0x80000000;
  if ((v298 & 0x20000000) != 0)
    v230 = v231;
  v298 = v230;
  v127 = v42[12];
  if ((v127 & 0x80000000) != 0)
    goto LABEL_640;
LABEL_278:
  v128 = *(_QWORD *)(v41 + 2328);
  if (v127 >= (*(_QWORD *)(v41 + 2336) - v128) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v128 = *(_QWORD *)(v41 + 2328);
    v120 = **v93;
  }
  v129 = *(_DWORD *)(v128 + (v127 << 11) + 1996);
  if (!v120)
  {
LABEL_282:
    if ((v129 & 0x10000000) != 0)
      v130 = 0x40000000;
    else
      v130 = 0x80000000;
    if ((v129 & 0x20000000) != 0)
      v129 = v130;
    else
      v129 &= 0xCFFFFFFF;
  }
LABEL_288:
  v262 = v119 >> 30;
  v280 = v125 >> 30;
  v283 = v122 >> 30;
  v271 = v129 >> 30;
  v345 = v320;
  v346 = v321;
  v347 = v322;
  v343 = v318;
  v344 = v319;
  if ((v301 & 0x40000000) != 0)
  {
    v375 = v320;
    v376 = v321;
    v377 = v322;
    v374 = v319;
    v373 = v318;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224672640;
    v369 = xmmword_224672650;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 2, 5, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x6A0000002ALL), xmmword_224672650);
    if ((v303 & 0x40000000) == 0)
    {
      v370 = v320;
      v371 = v321;
      v372 = v322;
      v369 = v319;
      v368 = v318;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224672660;
      v424 = xmmword_224672670;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 2, 5, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x6A0000002ALL), xmmword_224672670);
      if (((v295 | v289) & 1) == 0)
      {
        v425 = v320;
        v426 = v321;
        v427 = v322;
        v423 = v318;
        v424 = v319;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224672680;
        v419 = xmmword_224672690;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 2, 5, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x6A0000002ALL), xmmword_224672690);
        v131 = (v265 & 1) == 0 && ((v292 | v286) & 1) == 0;
        if ((v267 & 1) == 0 && v131)
        {
          v420 = v320;
          v421 = v321;
          v422 = v322;
          v419 = v319;
          v418 = v318;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246726A0;
          v414 = xmmword_2246726B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 2, 5, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1EA0000002ALL), xmmword_2246726B0);
        }
      }
      v132 = (v276 & 1) == 0 && ((v292 | v286) & 1) == 0;
      if (v132 && (v274 & 1) == 0)
      {
        v415 = v345;
        v416 = v346;
        v417 = v347;
        v414 = v344;
        v413 = v343;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246726C0;
        v409 = xmmword_2246726D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 2, 5, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1EA0000002ALL), xmmword_2246726D0);
      }
    }
    if (((v289 | v283) & 1) == 0)
    {
      v410 = v345;
      v411 = v346;
      v412 = v347;
      v409 = v344;
      v408 = v343;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246726E0;
      v404 = xmmword_2246726F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 2, 5, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x6A0000002ALL), xmmword_2246726F0);
      v133 = (v119 & 0x40000000) == 0 && ((v286 | v280) & 1) == 0;
      if ((v265 & 1) == 0 && v133)
      {
        v405 = v345;
        v406 = v346;
        v407 = v347;
        v404 = v344;
        v403 = v343;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224672700;
        v399 = xmmword_224672710;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 2, 5, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1EA0000002ALL), xmmword_224672710);
      }
    }
    v134 = (v274 & 1) == 0 && ((v286 | v280) & 1) == 0;
    if (v134 && (v271 & 1) == 0)
    {
      v400 = v345;
      v401 = v346;
      v402 = v347;
      v399 = v344;
      v398 = v343;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224672720;
      v394 = xmmword_224672730;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 2, 5, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1EA0000002ALL), xmmword_224672730);
    }
  }
  v340 = v330;
  v341 = v331;
  v342 = v332;
  v338 = v328;
  v339 = v329;
  v135 = v42[12];
  if ((v135 & 0x80000000) != 0)
  {
    v137 = *(_DWORD *)(v41 + 2216);
    v138 = **v93;
    if (**v93)
      goto LABEL_327;
    goto LABEL_321;
  }
  v136 = *(_QWORD *)(v41 + 2328);
  if (v135 >= (*(_QWORD *)(v41 + 2336) - v136) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v136 = *(_QWORD *)(v41 + 2328);
  }
  v137 = *(_DWORD *)(v136 + (v135 << 11) + 1936);
  v138 = **v93;
  if (!**v93)
  {
LABEL_321:
    if ((v137 & 0x10000000) != 0)
      v139 = 0x40000000;
    else
      v139 = 0x80000000;
    if ((v137 & 0x20000000) != 0)
      v137 = v139;
    else
      v137 &= 0xCFFFFFFF;
  }
LABEL_327:
  v140 = v77[36];
  if (**v306)
  {
    v141 = v42[12];
    if ((v141 & 0x80000000) == 0)
      goto LABEL_329;
LABEL_651:
    v143 = *(_DWORD *)(v41 + 2248);
    if (v138)
      goto LABEL_339;
    goto LABEL_333;
  }
  if ((v140 & 0x10000000) != 0)
    v232 = 0x40000000;
  else
    v232 = 0x80000000;
  if ((v140 & 0x20000000) != 0)
    v140 = v232;
  else
    v140 &= 0xCFFFFFFF;
  v141 = v42[12];
  if ((v141 & 0x80000000) != 0)
    goto LABEL_651;
LABEL_329:
  v142 = *(_QWORD *)(v41 + 2328);
  if (v141 >= (*(_QWORD *)(v41 + 2336) - v142) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v142 = *(_QWORD *)(v41 + 2328);
    v138 = **v93;
  }
  v143 = *(_DWORD *)(v142 + (v141 << 11) + 1968);
  if (!v138)
  {
LABEL_333:
    if ((v143 & 0x10000000) != 0)
      v144 = 0x40000000;
    else
      v144 = 0x80000000;
    if ((v143 & 0x20000000) != 0)
      v143 = v144;
    else
      v143 &= 0xCFFFFFFF;
  }
LABEL_339:
  v304 = v77[44];
  if (**v306)
  {
    v145 = v42[12];
    if ((v145 & 0x80000000) == 0)
      goto LABEL_341;
LABEL_659:
    v147 = *(_DWORD *)(v41 + 2280);
    if (v138)
      goto LABEL_351;
    goto LABEL_345;
  }
  v233 = v304 & 0xCFFFFFFF;
  if ((v304 & 0x10000000) != 0)
    v234 = 0x40000000;
  else
    v234 = 0x80000000;
  if ((v304 & 0x20000000) != 0)
    v233 = v234;
  v304 = v233;
  v145 = v42[12];
  if ((v145 & 0x80000000) != 0)
    goto LABEL_659;
LABEL_341:
  v146 = *(_QWORD *)(v41 + 2328);
  if (v145 >= (*(_QWORD *)(v41 + 2336) - v146) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v146 = *(_QWORD *)(v41 + 2328);
    v138 = **v93;
  }
  v147 = *(_DWORD *)(v146 + (v145 << 11) + 2000);
  if (!v138)
  {
LABEL_345:
    if ((v147 & 0x10000000) != 0)
      v148 = 0x40000000;
    else
      v148 = 0x80000000;
    if ((v147 & 0x20000000) != 0)
      v147 = v148;
    else
      v147 &= 0xCFFFFFFF;
  }
LABEL_351:
  v268 = v137 >> 30;
  v293 = v143 >> 30;
  v296 = v140 >> 30;
  v277 = v147 >> 30;
  v355 = v330;
  v356 = v331;
  v357 = v332;
  v353 = v328;
  v354 = v329;
  if ((v298 & 0x40000000) != 0)
  {
    v375 = v330;
    v376 = v331;
    v377 = v332;
    v374 = v329;
    v373 = v328;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224672740;
    v369 = xmmword_224672750;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 3, 5, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x6B0000002BLL), xmmword_224672750);
    if ((v301 & 0x40000000) == 0)
    {
      v370 = v330;
      v371 = v331;
      v372 = v332;
      v369 = v329;
      v368 = v328;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224672760;
      v424 = xmmword_224672770;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 3, 5, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x6B0000002BLL), xmmword_224672770);
      if (((v289 | v283) & 1) == 0)
      {
        v425 = v330;
        v426 = v331;
        v427 = v332;
        v423 = v328;
        v424 = v329;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224672780;
        v419 = xmmword_224672790;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 3, 5, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x6B0000002BLL), xmmword_224672790);
        v149 = (v262 & 1) == 0 && ((v286 | v280) & 1) == 0;
        if ((v265 & 1) == 0 && v149)
        {
          v420 = v330;
          v421 = v331;
          v422 = v332;
          v419 = v329;
          v418 = v328;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246727A0;
          v414 = xmmword_2246727B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 3, 5, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1EB0000002BLL), xmmword_2246727B0);
        }
      }
      v150 = (v274 & 1) == 0 && ((v286 | v280) & 1) == 0;
      if (v150 && (v271 & 1) == 0)
      {
        v415 = v355;
        v416 = v356;
        v417 = v357;
        v414 = v354;
        v413 = v353;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246727C0;
        v409 = xmmword_2246727D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 3, 5, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1EB0000002BLL), xmmword_2246727D0);
      }
    }
    if (((v283 | v296) & 1) == 0)
    {
      v410 = v355;
      v411 = v356;
      v412 = v357;
      v409 = v354;
      v408 = v353;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246727E0;
      v404 = xmmword_2246727F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 3, 5, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x6B0000002BLL), xmmword_2246727F0);
      v151 = (v137 & 0x40000000) == 0 && ((v280 | v293) & 1) == 0;
      if ((v262 & 1) == 0 && v151)
      {
        v405 = v355;
        v406 = v356;
        v407 = v357;
        v404 = v354;
        v403 = v353;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224672800;
        v399 = xmmword_224672810;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 3, 5, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1EB0000002BLL), xmmword_224672810);
      }
    }
    v152 = (v271 & 1) == 0 && ((v280 | v293) & 1) == 0;
    if (v152 && (v277 & 1) == 0)
    {
      v400 = v355;
      v401 = v356;
      v402 = v357;
      v399 = v354;
      v398 = v353;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224672820;
      v394 = xmmword_224672830;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 3, 5, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1EB0000002BLL), xmmword_224672830);
    }
  }
  v350 = v340;
  v351 = v341;
  v352 = v342;
  v348 = v338;
  v349 = v339;
  v153 = v42[12];
  if ((v153 & 0x80000000) != 0)
  {
    v155 = *(_DWORD *)(v41 + 2220);
    v156 = **v93;
    if (**v93)
      goto LABEL_390;
    goto LABEL_384;
  }
  v154 = *(_QWORD *)(v41 + 2328);
  if (v153 >= (*(_QWORD *)(v41 + 2336) - v154) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v154 = *(_QWORD *)(v41 + 2328);
  }
  v155 = *(_DWORD *)(v154 + (v153 << 11) + 1940);
  v156 = **v93;
  if (!**v93)
  {
LABEL_384:
    if ((v155 & 0x10000000) != 0)
      v157 = 0x40000000;
    else
      v157 = 0x80000000;
    if ((v155 & 0x20000000) != 0)
      v155 = v157;
    else
      v155 &= 0xCFFFFFFF;
  }
LABEL_390:
  v158 = v77[37];
  if (**v306)
  {
    v159 = v42[12];
    if ((v159 & 0x80000000) == 0)
      goto LABEL_392;
LABEL_670:
    v161 = *(_DWORD *)(v41 + 2252);
    if (v156)
      goto LABEL_402;
    goto LABEL_396;
  }
  if ((v158 & 0x10000000) != 0)
    v235 = 0x40000000;
  else
    v235 = 0x80000000;
  if ((v158 & 0x20000000) != 0)
    v158 = v235;
  else
    v158 &= 0xCFFFFFFF;
  v159 = v42[12];
  if ((v159 & 0x80000000) != 0)
    goto LABEL_670;
LABEL_392:
  v160 = *(_QWORD *)(v41 + 2328);
  if (v159 >= (*(_QWORD *)(v41 + 2336) - v160) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v160 = *(_QWORD *)(v41 + 2328);
    v156 = **v93;
  }
  v161 = *(_DWORD *)(v160 + (v159 << 11) + 1972);
  if (!v156)
  {
LABEL_396:
    if ((v161 & 0x10000000) != 0)
      v162 = 0x40000000;
    else
      v162 = 0x80000000;
    if ((v161 & 0x20000000) != 0)
      v161 = v162;
    else
      v161 &= 0xCFFFFFFF;
  }
LABEL_402:
  v302 = v77[45];
  if (**v306)
  {
    v163 = v42[12];
    if ((v163 & 0x80000000) == 0)
      goto LABEL_404;
LABEL_678:
    v165 = *(_DWORD *)(v41 + 2284);
    if (v156)
      goto LABEL_414;
    goto LABEL_408;
  }
  v236 = v302 & 0xCFFFFFFF;
  if ((v302 & 0x10000000) != 0)
    v237 = 0x40000000;
  else
    v237 = 0x80000000;
  if ((v302 & 0x20000000) != 0)
    v236 = v237;
  v302 = v236;
  v163 = v42[12];
  if ((v163 & 0x80000000) != 0)
    goto LABEL_678;
LABEL_404:
  v164 = *(_QWORD *)(v41 + 2328);
  if (v163 >= (*(_QWORD *)(v41 + 2336) - v164) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v164 = *(_QWORD *)(v41 + 2328);
    v156 = **v93;
  }
  v165 = *(_DWORD *)(v164 + (v163 << 11) + 2004);
  if (!v156)
  {
LABEL_408:
    if ((v165 & 0x10000000) != 0)
      v166 = 0x40000000;
    else
      v166 = 0x80000000;
    if ((v165 & 0x20000000) != 0)
      v165 = v166;
    else
      v165 &= 0xCFFFFFFF;
  }
LABEL_414:
  v266 = v155 >> 30;
  v287 = v161 >> 30;
  v290 = v158 >> 30;
  v275 = v165 >> 30;
  v365 = v340;
  v366 = v341;
  v367 = v342;
  v364 = v339;
  v363 = v338;
  if ((v304 & 0x40000000) != 0)
  {
    v375 = v340;
    v376 = v341;
    v377 = v342;
    v374 = v339;
    v373 = v338;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224672840;
    v369 = xmmword_224672850;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 4, 5, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x6C0000002CLL), xmmword_224672850);
    if ((v298 & 0x40000000) == 0)
    {
      v370 = v340;
      v371 = v341;
      v372 = v342;
      v369 = v339;
      v368 = v338;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224672860;
      v424 = xmmword_224672870;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 4, 5, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x6C0000002CLL), xmmword_224672870);
      if (((v283 | v296) & 1) == 0)
      {
        v425 = v340;
        v426 = v341;
        v427 = v342;
        v423 = v338;
        v424 = v339;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224672880;
        v419 = xmmword_224672890;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 4, 5, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x6C0000002CLL), xmmword_224672890);
        v167 = (v268 & 1) == 0 && ((v280 | v293) & 1) == 0;
        if ((v262 & 1) == 0 && v167)
        {
          v420 = v340;
          v421 = v341;
          v422 = v342;
          v419 = v339;
          v418 = v338;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246728A0;
          v414 = xmmword_2246728B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 4, 5, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1EC0000002CLL), xmmword_2246728B0);
        }
      }
      v168 = (v271 & 1) == 0 && ((v280 | v293) & 1) == 0;
      if (v168 && (v277 & 1) == 0)
      {
        v415 = v365;
        v416 = v366;
        v417 = v367;
        v414 = v364;
        v413 = v363;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246728C0;
        v409 = xmmword_2246728D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 4, 5, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1EC0000002CLL), xmmword_2246728D0);
      }
    }
    if (((v296 | v290) & 1) == 0)
    {
      v410 = v365;
      v411 = v366;
      v412 = v367;
      v409 = v364;
      v408 = v363;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246728E0;
      v404 = xmmword_2246728F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 4, 5, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x6C0000002CLL), xmmword_2246728F0);
      v169 = (v155 & 0x40000000) == 0 && ((v293 | v287) & 1) == 0;
      if ((v268 & 1) == 0 && v169)
      {
        v405 = v365;
        v406 = v366;
        v407 = v367;
        v404 = v364;
        v403 = v363;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224672900;
        v399 = xmmword_224672910;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 4, 5, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1EC0000002CLL), xmmword_224672910);
      }
    }
    v170 = (v277 & 1) == 0 && ((v293 | v287) & 1) == 0;
    if (v170 && (v275 & 1) == 0)
    {
      v400 = v365;
      v401 = v366;
      v402 = v367;
      v399 = v364;
      v398 = v363;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224672920;
      v394 = xmmword_224672930;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 4, 5, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1EC0000002CLL), xmmword_224672930);
    }
  }
  v360 = v350;
  v361 = v351;
  v362 = v352;
  v358 = v348;
  v359 = v349;
  v171 = v42[12];
  if ((v171 & 0x80000000) != 0)
  {
    v173 = *(_DWORD *)(v41 + 2224);
    v174 = **v93;
    if (**v93)
      goto LABEL_453;
    goto LABEL_447;
  }
  v172 = *(_QWORD *)(v41 + 2328);
  if (v171 >= (*(_QWORD *)(v41 + 2336) - v172) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v172 = *(_QWORD *)(v41 + 2328);
  }
  v173 = *(_DWORD *)(v172 + (v171 << 11) + 1944);
  v174 = **v93;
  if (!**v93)
  {
LABEL_447:
    if ((v173 & 0x10000000) != 0)
      v175 = 0x40000000;
    else
      v175 = 0x80000000;
    if ((v173 & 0x20000000) != 0)
      v173 = v175;
    else
      v173 &= 0xCFFFFFFF;
  }
LABEL_453:
  v176 = v77[38];
  if (**v306)
  {
    v177 = v42[12];
    if ((v177 & 0x80000000) == 0)
      goto LABEL_455;
LABEL_689:
    v179 = *(_DWORD *)(v41 + 2256);
    if (v174)
      goto LABEL_465;
    goto LABEL_459;
  }
  if ((v176 & 0x10000000) != 0)
    v238 = 0x40000000;
  else
    v238 = 0x80000000;
  if ((v176 & 0x20000000) != 0)
    v176 = v238;
  else
    v176 &= 0xCFFFFFFF;
  v177 = v42[12];
  if ((v177 & 0x80000000) != 0)
    goto LABEL_689;
LABEL_455:
  v178 = *(_QWORD *)(v41 + 2328);
  if (v177 >= (*(_QWORD *)(v41 + 2336) - v178) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v178 = *(_QWORD *)(v41 + 2328);
    v174 = **v93;
  }
  v179 = *(_DWORD *)(v178 + (v177 << 11) + 1976);
  if (!v174)
  {
LABEL_459:
    if ((v179 & 0x10000000) != 0)
      v180 = 0x40000000;
    else
      v180 = 0x80000000;
    if ((v179 & 0x20000000) != 0)
      v179 = v180;
    else
      v179 &= 0xCFFFFFFF;
  }
LABEL_465:
  v299 = v77[46];
  if (**v306)
  {
    v181 = v42[12];
    if ((v181 & 0x80000000) == 0)
      goto LABEL_467;
LABEL_697:
    v183 = *(_DWORD *)(v41 + 2288);
    if (v174)
      goto LABEL_477;
    goto LABEL_471;
  }
  v239 = v299 & 0xCFFFFFFF;
  if ((v299 & 0x10000000) != 0)
    v240 = 0x40000000;
  else
    v240 = 0x80000000;
  if ((v299 & 0x20000000) != 0)
    v239 = v240;
  v299 = v239;
  v181 = v42[12];
  if ((v181 & 0x80000000) != 0)
    goto LABEL_697;
LABEL_467:
  v182 = *(_QWORD *)(v41 + 2328);
  if (v181 >= (*(_QWORD *)(v41 + 2336) - v182) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v182 = *(_QWORD *)(v41 + 2328);
    v174 = **v93;
  }
  v183 = *(_DWORD *)(v182 + (v181 << 11) + 2008);
  if (!v174)
  {
LABEL_471:
    if ((v183 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v183 & 0x20000000) != 0)
      v183 = v184;
    else
      v183 &= 0xCFFFFFFF;
  }
LABEL_477:
  v263 = v173 >> 30;
  v281 = v179 >> 30;
  v284 = v176 >> 30;
  v272 = v183 >> 30;
  v385 = v350;
  v386 = v351;
  v387 = v352;
  v384 = v349;
  v383 = v348;
  if ((v302 & 0x40000000) != 0)
  {
    v375 = v350;
    v376 = v351;
    v377 = v352;
    v374 = v349;
    v373 = v348;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224672940;
    v369 = xmmword_224672950;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 5, 5, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x6D0000002DLL), xmmword_224672950);
    if ((v304 & 0x40000000) == 0)
    {
      v370 = v350;
      v371 = v351;
      v372 = v352;
      v369 = v349;
      v368 = v348;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224672960;
      v424 = xmmword_224672970;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 5, 5, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x6D0000002DLL), xmmword_224672970);
      if (((v296 | v290) & 1) == 0)
      {
        v425 = v350;
        v426 = v351;
        v427 = v352;
        v423 = v348;
        v424 = v349;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224672980;
        v419 = xmmword_224672990;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 5, 5, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x6D0000002DLL), xmmword_224672990);
        v185 = (v266 & 1) == 0 && ((v293 | v287) & 1) == 0;
        if ((v268 & 1) == 0 && v185)
        {
          v420 = v350;
          v421 = v351;
          v422 = v352;
          v419 = v349;
          v418 = v348;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246729A0;
          v414 = xmmword_2246729B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 5, 5, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1ED0000002DLL), xmmword_2246729B0);
        }
      }
      v186 = (v277 & 1) == 0 && ((v293 | v287) & 1) == 0;
      if (v186 && (v275 & 1) == 0)
      {
        v415 = v385;
        v416 = v386;
        v417 = v387;
        v414 = v384;
        v413 = v383;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246729C0;
        v409 = xmmword_2246729D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 5, 5, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1ED0000002DLL), xmmword_2246729D0);
      }
    }
    if (((v290 | v284) & 1) == 0)
    {
      v410 = v385;
      v411 = v386;
      v412 = v387;
      v409 = v384;
      v408 = v383;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246729E0;
      v404 = xmmword_2246729F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 5, 5, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x6D0000002DLL), xmmword_2246729F0);
      v187 = (v173 & 0x40000000) == 0 && ((v287 | v281) & 1) == 0;
      if ((v266 & 1) == 0 && v187)
      {
        v405 = v385;
        v406 = v386;
        v407 = v387;
        v404 = v384;
        v403 = v383;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224672A00;
        v399 = xmmword_224672A10;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 5, 5, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1ED0000002DLL), xmmword_224672A10);
      }
    }
    v188 = (v275 & 1) == 0 && ((v287 | v281) & 1) == 0;
    if (v188 && (v272 & 1) == 0)
    {
      v400 = v385;
      v401 = v386;
      v402 = v387;
      v399 = v384;
      v398 = v383;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224672A20;
      v394 = xmmword_224672A30;
      *(_QWORD *)&v378 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 5, 5, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v378, COERCE_DOUBLE(0x1ED0000002DLL), xmmword_224672A30);
    }
  }
  v380 = v360;
  v381 = v361;
  v382 = v362;
  v379 = v359;
  v378 = v358;
  v189 = v42[12];
  if ((v189 & 0x80000000) != 0)
  {
    v191 = *(_DWORD *)(v41 + 2228);
    v192 = **v93;
    if (**v93)
      goto LABEL_516;
    goto LABEL_510;
  }
  v190 = *(_QWORD *)(v41 + 2328);
  if (v189 >= (*(_QWORD *)(v41 + 2336) - v190) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v190 = *(_QWORD *)(v41 + 2328);
  }
  v191 = *(_DWORD *)(v190 + (v189 << 11) + 1948);
  v192 = **v93;
  if (!**v93)
  {
LABEL_510:
    if ((v191 & 0x10000000) != 0)
      v193 = 0x40000000;
    else
      v193 = 0x80000000;
    if ((v191 & 0x20000000) != 0)
      v191 = v193;
    else
      v191 &= 0xCFFFFFFF;
  }
LABEL_516:
  v194 = v77[39];
  if (**v306)
  {
    v195 = v42[12];
    if ((v195 & 0x80000000) == 0)
      goto LABEL_518;
LABEL_708:
    v197 = *(_DWORD *)(v41 + 2260);
    if (v192)
      goto LABEL_528;
    goto LABEL_522;
  }
  if ((v194 & 0x10000000) != 0)
    v241 = 0x40000000;
  else
    v241 = 0x80000000;
  if ((v194 & 0x20000000) != 0)
    v194 = v241;
  else
    v194 &= 0xCFFFFFFF;
  v195 = v42[12];
  if ((v195 & 0x80000000) != 0)
    goto LABEL_708;
LABEL_518:
  v196 = *(_QWORD *)(v41 + 2328);
  if (v195 >= (*(_QWORD *)(v41 + 2336) - v196) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v196 = *(_QWORD *)(v41 + 2328);
    v192 = **v93;
  }
  v197 = *(_DWORD *)(v196 + (v195 << 11) + 1980);
  if (!v192)
  {
LABEL_522:
    if ((v197 & 0x10000000) != 0)
      v198 = 0x40000000;
    else
      v198 = 0x80000000;
    if ((v197 & 0x20000000) != 0)
      v197 = v198;
    else
      v197 &= 0xCFFFFFFF;
  }
LABEL_528:
  v199 = v77[47];
  if (**v306)
  {
    v200 = v42[12];
    if ((v200 & 0x80000000) == 0)
      goto LABEL_530;
LABEL_717:
    v202 = *(_DWORD *)(v41 + 2292);
    if (v192)
      goto LABEL_540;
    goto LABEL_534;
  }
  if ((v199 & 0x10000000) != 0)
    v242 = 0x40000000;
  else
    v242 = 0x80000000;
  if ((v199 & 0x20000000) != 0)
    v199 = v242;
  else
    v199 &= 0xCFFFFFFF;
  v200 = v42[12];
  if ((v200 & 0x80000000) != 0)
    goto LABEL_717;
LABEL_530:
  v201 = *(_QWORD *)(v41 + 2328);
  if (v200 >= (*(_QWORD *)(v41 + 2336) - v201) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v201 = *(_QWORD *)(v41 + 2328);
    v192 = **v93;
  }
  v202 = *(_DWORD *)(v201 + (v200 << 11) + 2012);
  if (!v192)
  {
LABEL_534:
    if ((v202 & 0x10000000) != 0)
      v203 = 0x40000000;
    else
      v203 = 0x80000000;
    if ((v202 & 0x20000000) != 0)
      v202 = v203;
    else
      v202 &= 0xCFFFFFFF;
  }
LABEL_540:
  v305 = v191 >> 30;
  v307 = v194 >> 30;
  v204 = v197 >> 30;
  v205 = v202 >> 30;
  v390 = v360;
  v391 = v361;
  v392 = v362;
  v389 = v359;
  v388 = v358;
  if ((v299 & 0x40000000) != 0)
  {
    v375 = v360;
    v376 = v361;
    v377 = v362;
    v374 = v359;
    v373 = v358;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224672A40;
    v369 = xmmword_224672A50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 6, 5, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x6E0000002ELL), xmmword_224672A50);
    if ((v302 & 0x40000000) == 0)
    {
      v370 = v360;
      v371 = v361;
      v372 = v362;
      v369 = v359;
      v368 = v358;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224672A60;
      v424 = xmmword_224672A70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 6, 5, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x6E0000002ELL), xmmword_224672A70);
      if (((v290 | v284) & 1) == 0)
      {
        v425 = v360;
        v426 = v361;
        v427 = v362;
        v423 = v358;
        v424 = v359;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224672A80;
        v419 = xmmword_224672A90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 6, 5, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x6E0000002ELL), xmmword_224672A90);
        v206 = (v263 & 1) == 0 && ((v287 | v281) & 1) == 0;
        if ((v266 & 1) == 0 && v206)
        {
          v420 = v360;
          v421 = v361;
          v422 = v362;
          v419 = v359;
          v418 = v358;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_224672AA0;
          v414 = xmmword_224672AB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 6, 5, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1EE0000002ELL), xmmword_224672AB0);
        }
      }
      v207 = (v275 & 1) == 0 && ((v287 | v281) & 1) == 0;
      if (v207 && (v272 & 1) == 0)
      {
        v415 = v390;
        v416 = v391;
        v417 = v392;
        v414 = v389;
        v413 = v388;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_224672AC0;
        v409 = xmmword_224672AD0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 6, 5, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1EE0000002ELL), xmmword_224672AD0);
      }
    }
    if (((v284 | v307) & 1) == 0)
    {
      v410 = v390;
      v411 = v391;
      v412 = v392;
      v409 = v389;
      v408 = v388;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_224672AE0;
      v404 = xmmword_224672AF0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 6, 5, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x6E0000002ELL), xmmword_224672AF0);
      v208 = (v305 & 1) == 0 && ((v281 | v204) & 1) == 0;
      if ((v263 & 1) == 0 && v208)
      {
        v405 = v390;
        v406 = v391;
        v407 = v392;
        v404 = v389;
        v403 = v388;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224672B00;
        v399 = xmmword_224672B10;
        *(_QWORD *)&v429[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 6, 5, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)v429, COERCE_DOUBLE(0x1EE0000002ELL), xmmword_224672B10);
      }
    }
    v209 = (v272 & 1) == 0 && ((v281 | v204) & 1) == 0;
    if (v209 && (v205 & 1) == 0)
    {
      v400 = v390;
      v401 = v391;
      v402 = v392;
      v399 = v389;
      v398 = v388;
      *(_QWORD *)&v429[0] = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224672B20;
      v394 = xmmword_224672B30;
      v430[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 6, 5, 0, (uint64_t)v429, (uint64_t)&v393, (uint64_t)v430, COERCE_DOUBLE(0x1EE0000002ELL), xmmword_224672B30);
    }
  }
  v210 = v42[21];
  if ((v210 & 0x80000000) != 0)
  {
    v213 = *v93;
    v214 = *(_DWORD *)(v41 + 2200);
    v215 = **v93;
    if (**v93)
      goto LABEL_573;
  }
  else
  {
    v211 = *(_QWORD *)(v41 + 2328);
    if (v210 >= (*(_QWORD *)(v41 + 2336) - v211) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v211 = *(_QWORD *)(v41 + 2328);
    }
    v212 = v211 + (v210 << 11);
    v213 = *v93;
    v214 = *(_DWORD *)(v212 + 1920);
    v215 = **v93;
    if (**v93)
    {
LABEL_573:
      v216 = v42[22];
      if ((v216 & 0x80000000) == 0)
        goto LABEL_574;
LABEL_727:
      v218 = *(_DWORD *)(v41 + 408);
      if (v215)
        goto LABEL_578;
      goto LABEL_728;
    }
  }
  if ((v214 & 0x10000000) != 0)
    v243 = 0x40000000;
  else
    v243 = 0x80000000;
  if ((v214 & 0x20000000) != 0)
    v214 = v243;
  else
    v214 &= 0xCFFFFFFF;
  v216 = v42[22];
  if ((v216 & 0x80000000) != 0)
    goto LABEL_727;
LABEL_574:
  v217 = *(_QWORD *)(v41 + 2328);
  if (v216 >= (*(_QWORD *)(v41 + 2336) - v217) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v217 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
    v215 = **v93;
  }
  v218 = *(_DWORD *)(v217 + (v216 << 11) + 128);
  if (v215)
  {
LABEL_578:
    v219 = v42[21];
    if ((v219 & 0x80000000) == 0)
      goto LABEL_579;
LABEL_735:
    v221 = *(_DWORD *)(v41 + 2232);
    if (v215)
      goto LABEL_583;
LABEL_736:
    if ((v221 & 0x10000000) != 0)
      v245 = 0x40000000;
    else
      v245 = 0x80000000;
    if ((v221 & 0x20000000) != 0)
      v221 = v245;
    else
      v221 &= 0xCFFFFFFF;
    v222 = v42[22];
    if ((v222 & 0x80000000) != 0)
      goto LABEL_746;
    goto LABEL_743;
  }
LABEL_728:
  if ((v218 & 0x10000000) != 0)
    v244 = 0x40000000;
  else
    v244 = 0x80000000;
  if ((v218 & 0x20000000) != 0)
    v218 = v244;
  else
    v218 &= 0xCFFFFFFF;
  v219 = v42[21];
  if ((v219 & 0x80000000) != 0)
    goto LABEL_735;
LABEL_579:
  v220 = *(_QWORD *)(v41 + 2328);
  if (v219 >= (*(_QWORD *)(v41 + 2336) - v220) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v220 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
    v215 = **v93;
  }
  v221 = *(_DWORD *)(v220 + (v219 << 11) + 1952);
  if (!v215)
    goto LABEL_736;
LABEL_583:
  v222 = v42[22];
  if ((v222 & 0x80000000) != 0)
    goto LABEL_746;
LABEL_743:
  if (v222 >= (uint64_t)(*(_QWORD *)(v41 + 2336) - *(_QWORD *)(v41 + 2328)) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v213 = *v93;
  }
LABEL_746:
  v246 = v42[21];
  if ((v246 & 0x80000000) != 0)
  {
    v248 = *(_DWORD *)(v41 + 2264);
    if (*v213)
      goto LABEL_757;
    goto LABEL_751;
  }
  v247 = *(_QWORD *)(v41 + 2328);
  if (v246 >= (*(_QWORD *)(v41 + 2336) - v247) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v247 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
  }
  v248 = *(_DWORD *)(v247 + (v246 << 11) + 1984);
  if (!*v213)
  {
LABEL_751:
    if ((v248 & 0x10000000) != 0)
      v249 = 0x40000000;
    else
      v249 = 0x80000000;
    if ((v248 & 0x20000000) != 0)
      v248 = v249;
    else
      v248 &= 0xCFFFFFFF;
  }
LABEL_757:
  v395 = v380;
  v396 = v381;
  v397 = v382;
  v394 = v379;
  v393 = v378;
  if ((v199 & 0x40000000) != 0)
  {
    v375 = v380;
    v376 = v381;
    v377 = v382;
    *(_QWORD *)&v423 = 0x161616160D0D0D0DLL;
    v374 = v379;
    v373 = v378;
    v368 = xmmword_224672B40;
    v369 = xmmword_224672B50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 7, 5, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x6F0000002FLL), xmmword_224672B50);
    if ((v299 & 0x40000000) == 0)
    {
      v370 = v380;
      v371 = v381;
      v372 = v382;
      v369 = v379;
      v368 = v378;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224672B60;
      v424 = xmmword_224672B70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 7, 5, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x6F0000002FLL), xmmword_224672B70);
      if (((v284 | v307) & 1) == 0)
      {
        v425 = v380;
        v426 = v381;
        v427 = v382;
        v423 = v378;
        v424 = v379;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224672B80;
        v419 = xmmword_224672B90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 7, 5, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x6F0000002FLL), xmmword_224672B90);
        v250 = (v305 & 1) == 0 && ((v281 | v204) & 1) == 0;
        if ((v263 & 1) == 0 && v250)
        {
          v420 = v380;
          v421 = v381;
          v422 = v382;
          v419 = v379;
          v418 = v378;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_224672BA0;
          v414 = xmmword_224672BB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 7, 5, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1EF0000002FLL), xmmword_224672BB0);
        }
      }
      v251 = (v272 & 1) == 0 && ((v281 | v204) & 1) == 0;
      if (v251 && (v205 & 1) == 0)
      {
        v415 = v395;
        v416 = v396;
        v417 = v397;
        v414 = v394;
        v413 = v393;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_224672BC0;
        v409 = xmmword_224672BD0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 7, 5, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1EF0000002FLL), xmmword_224672BD0);
      }
    }
    if (!(v218 & 0x40000000 | v307 & 1))
    {
      v410 = v395;
      v411 = v396;
      v412 = v397;
      *(_QWORD *)&v398 = 0x16160D0D16160D0DLL;
      v409 = v394;
      v408 = v393;
      v403 = xmmword_224672BE0;
      v404 = xmmword_224672BF0;
      *(_QWORD *)&v429[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 7, 5, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)v429, COERCE_DOUBLE(0x6F0000002FLL), xmmword_224672BF0);
      v252 = (v214 & 0x40000000) == 0 && (v221 & 0x40000000 | v204 & 1) == 0;
      if ((v305 & 1) == 0 && v252)
      {
        v405 = v395;
        v406 = v396;
        v407 = v397;
        v404 = v394;
        v403 = v393;
        *(_QWORD *)&v429[0] = 0x151615160C0D0C0DLL;
        v398 = xmmword_224672C00;
        v399 = xmmword_224672C10;
        v430[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 7, 5, 0, (uint64_t)v429, (uint64_t)&v398, (uint64_t)v430, COERCE_DOUBLE(0x1EF0000002FLL), xmmword_224672C10);
      }
    }
    v253 = (v205 & 1) == 0 && (v221 & 0x40000000 | v204 & 1) == 0;
    if (v253 && (v248 & 0x40000000) == 0)
    {
      v400 = v395;
      v401 = v396;
      v402 = v397;
      v430[0] = 0x15160C0D15160C0DLL;
      v399 = v394;
      v398 = v393;
      v429[0] = xmmword_224672C20;
      v429[1] = xmmword_224672C30;
      v428 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 7, 5, 0, (uint64_t)v430, (uint64_t)v429, (uint64_t)&v428, COERCE_DOUBLE(0x1EF0000002FLL), xmmword_224672C30);
    }
  }
  v254 = *v278;
  v312 = *((_QWORD *)v278 + 2);
  v311 = v254;
  v255 = *(_OWORD *)a2;
  v310 = a2[2];
  v256 = *v269;
  v257 = v269[1];
  v308[4] = v269[4];
  v309 = v255;
  v258 = v269[3];
  v308[2] = v269[2];
  v308[3] = v258;
  v308[0] = v256;
  v308[1] = v257;
  return sub_223DA3C0C((uint64_t)&v311, (uint64_t *)&v309, v308);
}

unint64_t sub_223DA3C0C(uint64_t a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v6;
  _BYTE **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  _BYTE **v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  _BYTE **v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  _BYTE **v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  _BYTE **v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  _BYTE **v54;
  unint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  unsigned int v58;
  uint64_t v59;
  _BYTE **v60;
  unint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  unsigned int v64;
  uint64_t v65;
  _BYTE **v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  _BYTE *v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  _DWORD *v77;
  __int128 v78;
  float32x4_t v79;
  unint64_t v80;
  uint64_t v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unint64_t v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int v89;
  unint64_t v90;
  uint64_t v91;
  unsigned int v92;
  _BYTE **v93;
  unsigned int v94;
  _BOOL4 v95;
  _BOOL4 v96;
  _BOOL4 v97;
  _BOOL4 v98;
  unint64_t v99;
  uint64_t v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unint64_t v105;
  uint64_t v106;
  unsigned int v107;
  unsigned int v108;
  unint64_t v109;
  uint64_t v110;
  unsigned int v111;
  unsigned int v112;
  _BOOL4 v113;
  _BOOL4 v114;
  _BOOL4 v115;
  _BOOL4 v116;
  unint64_t v117;
  uint64_t v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unint64_t v123;
  uint64_t v124;
  unsigned int v125;
  unsigned int v126;
  unint64_t v127;
  uint64_t v128;
  unsigned int v129;
  unsigned int v130;
  _BOOL4 v131;
  _BOOL4 v132;
  _BOOL4 v133;
  _BOOL4 v134;
  unint64_t v135;
  uint64_t v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unint64_t v141;
  uint64_t v142;
  unsigned int v143;
  unsigned int v144;
  unint64_t v145;
  uint64_t v146;
  unsigned int v147;
  unsigned int v148;
  _BOOL4 v149;
  _BOOL4 v150;
  _BOOL4 v151;
  _BOOL4 v152;
  unint64_t v153;
  uint64_t v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unint64_t v159;
  uint64_t v160;
  unsigned int v161;
  unsigned int v162;
  unint64_t v163;
  uint64_t v164;
  unsigned int v165;
  unsigned int v166;
  _BOOL4 v167;
  _BOOL4 v168;
  _BOOL4 v169;
  _BOOL4 v170;
  unint64_t v171;
  uint64_t v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unint64_t v177;
  uint64_t v178;
  unsigned int v179;
  unsigned int v180;
  unint64_t v181;
  uint64_t v182;
  unsigned int v183;
  unsigned int v184;
  _BOOL4 v185;
  _BOOL4 v186;
  _BOOL4 v187;
  _BOOL4 v188;
  unint64_t v189;
  uint64_t v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unint64_t v195;
  uint64_t v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unint64_t v200;
  uint64_t v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  _BOOL4 v206;
  _BOOL4 v207;
  _BOOL4 v208;
  _BOOL4 v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _BYTE *v213;
  unsigned int v214;
  int v215;
  unint64_t v216;
  uint64_t v217;
  unsigned int v218;
  unint64_t v219;
  uint64_t v220;
  unsigned int v221;
  unint64_t v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unsigned int v249;
  _BOOL4 v250;
  _BOOL4 v251;
  _BOOL4 v252;
  _BOOL4 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  __int128 *v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  uint64_t v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  _BYTE **v306;
  unsigned int v307;
  _OWORD v308[5];
  __int128 v309;
  uint64_t v310;
  __int128 v311;
  uint64_t v312;
  __int128 v313;
  float32x4_t v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  float32x4_t v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  float32x4_t v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  float32x4_t v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  float32x4_t v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  float32x4_t v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  float32x4_t v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  float32x4_t v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  float32x4_t v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  float32x4_t v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  float32x4_t v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  float32x4_t v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  float32x4_t v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  float32x4_t v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  float32x4_t v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  float32x4_t v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  float32x4_t v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  float32x4_t v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  float32x4_t v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  float32x4_t v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  float32x4_t v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  float32x4_t v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  float32x4_t v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  uint64_t v428;
  _OWORD v429[2];
  _QWORD v430[3];

  v430[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v7 = (_BYTE **)a2[2];
  v8 = *(unsigned int *)(a2[1] + 48);
  if ((v8 & 0x80000000) != 0)
  {
    v10 = v6 + 280;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 2328);
    if (v8 >= (*(_QWORD *)(v6 + 2336) - v9) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v9 = *(_QWORD *)(v6 + 2328);
    }
    v10 = v9 + (v8 << 11);
  }
  v11 = *(_DWORD *)(v10 + 1952);
  v12 = v11 & 0xCFFFFFFF;
  if ((v11 & 0x10000000) != 0)
    v13 = 0x40000000;
  else
    v13 = 0x80000000;
  if ((v11 & 0x20000000) != 0)
    v12 = v13;
  if (**v7)
    v14 = v11;
  else
    v14 = v12;
  v15 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 160);
  v16 = v15 & 0xCFFFFFFF;
  if ((v15 & 0x10000000) != 0)
    v17 = 0x40000000;
  else
    v17 = 0x80000000;
  if ((v15 & 0x20000000) != 0)
    v16 = v17;
  if (***(_BYTE ***)a1)
    v18 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 160);
  else
    v18 = v16;
  v19 = *a2;
  v20 = (_BYTE **)a2[2];
  v21 = *(unsigned int *)(a2[1] + 48);
  if ((v21 & 0x80000000) != 0)
  {
    v23 = v19 + 280;
  }
  else
  {
    v22 = *(_QWORD *)(v19 + 2328);
    if (v21 >= (*(_QWORD *)(v19 + 2336) - v22) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v22 = *(_QWORD *)(v19 + 2328);
    }
    v23 = v22 + (v21 << 11);
  }
  v24 = *(_DWORD *)(v23 + 1984);
  v25 = v24 & 0xCFFFFFFF;
  if ((v24 & 0x10000000) != 0)
    v26 = 0x40000000;
  else
    v26 = 0x80000000;
  if ((v24 & 0x20000000) != 0)
    v25 = v26;
  if (**v20)
    v27 = v24;
  else
    v27 = v25;
  v28 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 192);
  v29 = v28 & 0xCFFFFFFF;
  if ((v28 & 0x10000000) != 0)
    v30 = 0x40000000;
  else
    v30 = 0x80000000;
  if ((v28 & 0x20000000) != 0)
    v29 = v30;
  if (***(_BYTE ***)a1)
    v31 = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 192);
  else
    v31 = v29;
  v32 = *a2;
  v33 = (_BYTE **)a2[2];
  v34 = *(unsigned int *)(a2[1] + 48);
  v300 = v18;
  v291 = v27;
  v294 = v14;
  if ((v34 & 0x80000000) != 0)
  {
    v36 = v32 + 280;
  }
  else
  {
    v35 = *(_QWORD *)(v32 + 2328);
    if (v34 >= (*(_QWORD *)(v32 + 2336) - v35) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v35 = *(_QWORD *)(v32 + 2328);
    }
    v36 = v35 + (v34 << 11);
  }
  v37 = *(_DWORD *)(v36 + 2016);
  v38 = v37 & 0xCFFFFFFF;
  if ((v37 & 0x10000000) != 0)
    v39 = 0x40000000;
  else
    v39 = 0x80000000;
  if ((v37 & 0x20000000) != 0)
    v38 = v39;
  if (**v33)
    v40 = v37;
  else
    v40 = v38;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (_BYTE **)a2[2];
  v278 = a1;
  v297 = v31;
  v288 = v40;
  if ((v31 & 0x40000000) == 0)
  {
    v264 = 0;
    v44 = 0;
    v273 = 0;
    v285 = 0;
    v260 = 0;
    goto LABEL_127;
  }
  v45 = v42[3];
  if ((v45 & 0x80000000) != 0)
  {
    v47 = *(_DWORD *)(v41 + 2260);
    if (**v43)
      goto LABEL_66;
  }
  else
  {
    v46 = *(_QWORD *)(v41 + 2328);
    if (v45 >= (*(_QWORD *)(v41 + 2336) - v46) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v46 = *(_QWORD *)(v41 + 2328);
    }
    v47 = *(_DWORD *)(v46 + (v45 << 11) + 1980);
    if (**v43)
    {
LABEL_66:
      v48 = *a2;
      v49 = (_BYTE **)a2[2];
      v50 = *(unsigned int *)(a2[1] + 16);
      if ((v50 & 0x80000000) == 0)
        goto LABEL_67;
LABEL_94:
      v52 = *(_DWORD *)(v48 + 468);
      if (**v49)
        goto LABEL_71;
      goto LABEL_95;
    }
  }
  if ((v47 & 0x10000000) != 0)
    v70 = 0x40000000;
  else
    v70 = 0x80000000;
  if ((v47 & 0x20000000) != 0)
    v47 = v70;
  else
    v47 &= 0xCFFFFFFF;
  v48 = *a2;
  v49 = (_BYTE **)a2[2];
  v50 = *(unsigned int *)(a2[1] + 16);
  if ((v50 & 0x80000000) != 0)
    goto LABEL_94;
LABEL_67:
  v51 = *(_QWORD *)(v48 + 2328);
  if (v50 >= (*(_QWORD *)(v48 + 2336) - v51) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v51 = *(_QWORD *)(v48 + 2328);
  }
  v52 = *(_DWORD *)(v51 + (v50 << 11) + 188);
  if (**v49)
  {
LABEL_71:
    v53 = *a2;
    v54 = (_BYTE **)a2[2];
    v55 = *(unsigned int *)(a2[1] + 12);
    if ((v55 & 0x80000000) == 0)
      goto LABEL_72;
LABEL_102:
    v57 = a3;
    v58 = *(_DWORD *)(v53 + 2292);
    if (**v54)
      goto LABEL_76;
    goto LABEL_103;
  }
LABEL_95:
  if ((v52 & 0x10000000) != 0)
    v71 = 0x40000000;
  else
    v71 = 0x80000000;
  if ((v52 & 0x20000000) != 0)
    v52 = v71;
  else
    v52 &= 0xCFFFFFFF;
  v53 = *a2;
  v54 = (_BYTE **)a2[2];
  v55 = *(unsigned int *)(a2[1] + 12);
  if ((v55 & 0x80000000) != 0)
    goto LABEL_102;
LABEL_72:
  v56 = *(_QWORD *)(v53 + 2328);
  if (v55 >= (*(_QWORD *)(v53 + 2336) - v56) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v56 = *(_QWORD *)(v53 + 2328);
  }
  v57 = a3;
  v58 = *(_DWORD *)(v56 + (v55 << 11) + 2012);
  if (**v54)
  {
LABEL_76:
    v59 = *a2;
    v60 = (_BYTE **)a2[2];
    v61 = *(unsigned int *)(a2[1] + 16);
    if ((v61 & 0x80000000) == 0)
      goto LABEL_77;
LABEL_110:
    v73 = *v60;
    v64 = *(_DWORD *)(v59 + 500);
    if (*v73)
      goto LABEL_81;
LABEL_111:
    if ((v64 & 0x10000000) != 0)
      v74 = 0x40000000;
    else
      v74 = 0x80000000;
    if ((v64 & 0x20000000) != 0)
      v64 = v74;
    else
      v64 &= 0xCFFFFFFF;
    v65 = *a2;
    v66 = (_BYTE **)a2[2];
    v67 = *(unsigned int *)(a2[1] + 12);
    if ((v67 & 0x80000000) == 0)
      goto LABEL_82;
    goto LABEL_118;
  }
LABEL_103:
  if ((v58 & 0x10000000) != 0)
    v72 = 0x40000000;
  else
    v72 = 0x80000000;
  if ((v58 & 0x20000000) != 0)
    v58 = v72;
  else
    v58 &= 0xCFFFFFFF;
  v59 = *a2;
  v60 = (_BYTE **)a2[2];
  v61 = *(unsigned int *)(a2[1] + 16);
  if ((v61 & 0x80000000) != 0)
    goto LABEL_110;
LABEL_77:
  v62 = *(_QWORD *)(v59 + 2328);
  if (v61 >= (*(_QWORD *)(v59 + 2336) - v62) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v62 = *(_QWORD *)(v59 + 2328);
  }
  v63 = *v60;
  v64 = *(_DWORD *)(v62 + (v61 << 11) + 220);
  if (!*v63)
    goto LABEL_111;
LABEL_81:
  v65 = *a2;
  v66 = (_BYTE **)a2[2];
  v67 = *(unsigned int *)(a2[1] + 12);
  if ((v67 & 0x80000000) == 0)
  {
LABEL_82:
    v68 = *(_QWORD *)(v65 + 2328);
    if (v67 >= (*(_QWORD *)(v65 + 2336) - v68) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v68 = *(_QWORD *)(v65 + 2328);
    }
    v69 = v68 + (v67 << 11);
    goto LABEL_119;
  }
LABEL_118:
  v69 = v65 + 280;
LABEL_119:
  v260 = (v47 >> 30) & 1;
  v285 = (v52 >> 30) & 1;
  v273 = (v58 >> 30) & 1;
  v44 = (v64 >> 30) & 1;
  v75 = *(_DWORD *)(v69 + 2044);
  a3 = v57;
  if (!**v66)
  {
    if ((v75 & 0x10000000) != 0)
      v76 = 0x40000000;
    else
      v76 = 0x80000000;
    if ((v75 & 0x20000000) != 0)
      v75 = v76;
    else
      v75 &= 0xCFFFFFFF;
  }
  v264 = (v75 >> 30) & 1;
  v41 = *a2;
  v42 = (unsigned int *)a2[1];
  v43 = (_BYTE **)a2[2];
  a1 = v278;
LABEL_127:
  v306 = *(_BYTE ***)a1;
  v77 = *(_DWORD **)(a1 + 16);
  v78 = a3[3];
  v315 = a3[2];
  v316 = v78;
  v317 = a3[4];
  v79 = *((float32x4_t *)a3 + 1);
  v313 = *a3;
  v314 = v79;
  v80 = v42[12];
  if ((v80 & 0x80000000) != 0)
  {
    v269 = a3;
    v82 = *(_DWORD *)(v41 + 2236);
    v83 = **v43;
    if (**v43)
      goto LABEL_138;
    goto LABEL_132;
  }
  v81 = *(_QWORD *)(v41 + 2328);
  if (v80 >= (*(_QWORD *)(v41 + 2336) - v81) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v81 = *(_QWORD *)(v41 + 2328);
  }
  v269 = a3;
  v82 = *(_DWORD *)(v81 + (v80 << 11) + 1956);
  v83 = **v43;
  if (!**v43)
  {
LABEL_132:
    if ((v82 & 0x10000000) != 0)
      v84 = 0x40000000;
    else
      v84 = 0x80000000;
    if ((v82 & 0x20000000) != 0)
      v82 = v84;
    else
      v82 &= 0xCFFFFFFF;
  }
LABEL_138:
  v85 = v77[41];
  if (**v306)
  {
    v86 = v42[12];
    if ((v86 & 0x80000000) == 0)
      goto LABEL_140;
LABEL_594:
    v88 = *(_DWORD *)(v41 + 2268);
    if (v83)
      goto LABEL_150;
    goto LABEL_144;
  }
  if ((v85 & 0x10000000) != 0)
    v223 = 0x40000000;
  else
    v223 = 0x80000000;
  if ((v85 & 0x20000000) != 0)
    v85 = v223;
  else
    v85 &= 0xCFFFFFFF;
  v86 = v42[12];
  if ((v86 & 0x80000000) != 0)
    goto LABEL_594;
LABEL_140:
  v87 = *(_QWORD *)(v41 + 2328);
  if (v86 >= (*(_QWORD *)(v41 + 2336) - v87) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v87 = *(_QWORD *)(v41 + 2328);
    v83 = **v43;
  }
  v88 = *(_DWORD *)(v87 + (v86 << 11) + 1988);
  if (!v83)
  {
LABEL_144:
    if ((v88 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v88 & 0x20000000) != 0)
      v88 = v89;
    else
      v88 &= 0xCFFFFFFF;
  }
LABEL_150:
  v303 = v77[49];
  if (**v306)
  {
    v90 = v42[12];
    if ((v90 & 0x80000000) == 0)
      goto LABEL_152;
LABEL_602:
    v261 = v294 >> 30;
    v92 = *(_DWORD *)(v41 + 2300);
    v93 = v43;
    if (v83)
      goto LABEL_162;
    goto LABEL_156;
  }
  v224 = v303 & 0xCFFFFFFF;
  if ((v303 & 0x10000000) != 0)
    v225 = 0x40000000;
  else
    v225 = 0x80000000;
  if ((v303 & 0x20000000) != 0)
    v224 = v225;
  v303 = v224;
  v90 = v42[12];
  if ((v90 & 0x80000000) != 0)
    goto LABEL_602;
LABEL_152:
  v91 = *(_QWORD *)(v41 + 2328);
  if (v90 < (*(_QWORD *)(v41 + 2336) - v91) >> 11)
    goto LABEL_155;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
LABEL_788:
    abort();
  }
  v91 = *(_QWORD *)(v41 + 2328);
  v83 = **v43;
LABEL_155:
  v261 = v294 >> 30;
  v92 = *(_DWORD *)(v91 + (v90 << 11) + 2020);
  v93 = v43;
  if (v83)
    goto LABEL_162;
LABEL_156:
  if ((v92 & 0x10000000) != 0)
    v94 = 0x40000000;
  else
    v94 = 0x80000000;
  if ((v92 & 0x20000000) != 0)
    v92 = v94;
  else
    v92 &= 0xCFFFFFFF;
LABEL_162:
  v267 = v82 >> 30;
  v279 = v291 >> 30;
  v282 = v300 >> 30;
  v270 = v288 >> 30;
  v292 = v88 >> 30;
  v295 = v85 >> 30;
  v276 = v92 >> 30;
  v325 = v315;
  v326 = v316;
  v327 = v317;
  v323 = v313;
  v324 = v314;
  if ((v297 & 0x40000000) != 0)
  {
    v375 = v315;
    v376 = v316;
    v377 = v317;
    v374 = v314;
    v373 = v313;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224672C40;
    v369 = xmmword_224672C50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 0, 6, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x7000000030), xmmword_224672C50);
    if (!v44)
    {
      v370 = v315;
      v371 = v316;
      v372 = v317;
      *(_QWORD *)&v418 = 0x4040D0D04040D0DLL;
      v369 = v314;
      v368 = v313;
      v423 = xmmword_224672C60;
      v424 = xmmword_224672C70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 0, 6, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x7000000030), xmmword_224672C70);
      if (!(v285 | ((v300 & 0x40000000) != 0)))
      {
        v425 = v315;
        v426 = v316;
        v427 = v317;
        v423 = v313;
        v424 = v314;
        *(_QWORD *)&v413 = 0x40404040D0D0D0DLL;
        v418 = xmmword_224672C80;
        v419 = xmmword_224672C90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 0, 6, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x7000000030), xmmword_224672C90);
        v95 = (v261 & 1) == 0 && (v273 | v279 & 1) == 0;
        if (!v260 && v95)
        {
          v420 = v315;
          v421 = v316;
          v422 = v317;
          v419 = v314;
          v418 = v313;
          *(_QWORD *)&v408 = 0x3040C0D03040C0DLL;
          v413 = xmmword_224672CA0;
          v414 = xmmword_224672CB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 0, 6, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1F000000030), xmmword_224672CB0);
        }
      }
      if (v264)
        v96 = 0;
      else
        v96 = (v273 | v279 & 1) == 0;
      if (v96 && (v288 & 0x40000000) == 0)
      {
        v415 = v325;
        v416 = v326;
        v417 = v327;
        v414 = v324;
        v413 = v323;
        *(_QWORD *)&v403 = 0x30403040C0D0C0DLL;
        v408 = xmmword_224672CC0;
        v409 = xmmword_224672CD0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 0, 6, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1F000000030), xmmword_224672CD0);
      }
    }
    if (((v282 | v295) & 1) == 0)
    {
      v410 = v325;
      v411 = v326;
      v412 = v327;
      v409 = v324;
      v408 = v323;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_224672CE0;
      v404 = xmmword_224672CF0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 0, 6, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x7000000030), xmmword_224672CF0);
      v97 = (v82 & 0x40000000) == 0 && ((v279 | v292) & 1) == 0;
      if ((v261 & 1) == 0 && v97)
      {
        v405 = v325;
        v406 = v326;
        v407 = v327;
        v404 = v324;
        v403 = v323;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224672D00;
        v399 = xmmword_224672D10;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 0, 6, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1F000000030), xmmword_224672D10);
      }
    }
    v98 = (v288 & 0x40000000) == 0 && ((v279 | v292) & 1) == 0;
    if (v98 && (v276 & 1) == 0)
    {
      v400 = v325;
      v401 = v326;
      v402 = v327;
      v399 = v324;
      v398 = v323;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224672D20;
      v394 = xmmword_224672D30;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 0, 6, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1F000000030), xmmword_224672D30);
    }
  }
  v320 = v315;
  v321 = v316;
  v322 = v317;
  v318 = v313;
  v319 = v314;
  v99 = v42[12];
  if ((v99 & 0x80000000) != 0)
  {
    v101 = *(_DWORD *)(v41 + 2240);
    v102 = **v93;
    if (**v93)
      goto LABEL_201;
    goto LABEL_195;
  }
  v100 = *(_QWORD *)(v41 + 2328);
  if (v99 >= (*(_QWORD *)(v41 + 2336) - v100) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v100 = *(_QWORD *)(v41 + 2328);
  }
  v101 = *(_DWORD *)(v100 + (v99 << 11) + 1960);
  v102 = **v93;
  if (!**v93)
  {
LABEL_195:
    if ((v101 & 0x10000000) != 0)
      v103 = 0x40000000;
    else
      v103 = 0x80000000;
    if ((v101 & 0x20000000) != 0)
      v101 = v103;
    else
      v101 &= 0xCFFFFFFF;
  }
LABEL_201:
  v104 = v77[42];
  if (**v306)
  {
    v105 = v42[12];
    if ((v105 & 0x80000000) == 0)
      goto LABEL_203;
LABEL_613:
    v107 = *(_DWORD *)(v41 + 2272);
    if (v102)
      goto LABEL_213;
    goto LABEL_207;
  }
  if ((v104 & 0x10000000) != 0)
    v226 = 0x40000000;
  else
    v226 = 0x80000000;
  if ((v104 & 0x20000000) != 0)
    v104 = v226;
  else
    v104 &= 0xCFFFFFFF;
  v105 = v42[12];
  if ((v105 & 0x80000000) != 0)
    goto LABEL_613;
LABEL_203:
  v106 = *(_QWORD *)(v41 + 2328);
  if (v105 >= (*(_QWORD *)(v41 + 2336) - v106) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v106 = *(_QWORD *)(v41 + 2328);
    v102 = **v93;
  }
  v107 = *(_DWORD *)(v106 + (v105 << 11) + 1992);
  if (!v102)
  {
LABEL_207:
    if ((v107 & 0x10000000) != 0)
      v108 = 0x40000000;
    else
      v108 = 0x80000000;
    if ((v107 & 0x20000000) != 0)
      v107 = v108;
    else
      v107 &= 0xCFFFFFFF;
  }
LABEL_213:
  v301 = v77[50];
  if (**v306)
  {
    v109 = v42[12];
    if ((v109 & 0x80000000) == 0)
      goto LABEL_215;
LABEL_621:
    v111 = *(_DWORD *)(v41 + 2304);
    if (v102)
      goto LABEL_225;
    goto LABEL_219;
  }
  v227 = v301 & 0xCFFFFFFF;
  if ((v301 & 0x10000000) != 0)
    v228 = 0x40000000;
  else
    v228 = 0x80000000;
  if ((v301 & 0x20000000) != 0)
    v227 = v228;
  v301 = v227;
  v109 = v42[12];
  if ((v109 & 0x80000000) != 0)
    goto LABEL_621;
LABEL_215:
  v110 = *(_QWORD *)(v41 + 2328);
  if (v109 >= (*(_QWORD *)(v41 + 2336) - v110) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v110 = *(_QWORD *)(v41 + 2328);
    v102 = **v93;
  }
  v111 = *(_DWORD *)(v110 + (v109 << 11) + 2024);
  if (!v102)
  {
LABEL_219:
    if ((v111 & 0x10000000) != 0)
      v112 = 0x40000000;
    else
      v112 = 0x80000000;
    if ((v111 & 0x20000000) != 0)
      v111 = v112;
    else
      v111 &= 0xCFFFFFFF;
  }
LABEL_225:
  v265 = v101 >> 30;
  v286 = v107 >> 30;
  v289 = v104 >> 30;
  v274 = v111 >> 30;
  v335 = v315;
  v336 = v316;
  v337 = v317;
  v333 = v313;
  v334 = v314;
  if ((v303 & 0x40000000) != 0)
  {
    v375 = v315;
    v376 = v316;
    v377 = v317;
    v374 = v314;
    v373 = v313;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224672D40;
    v369 = xmmword_224672D50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 1, 6, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x7100000031), xmmword_224672D50);
    if ((v297 & 0x40000000) == 0)
    {
      v370 = v315;
      v371 = v316;
      v372 = v317;
      v369 = v314;
      v368 = v313;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224672D60;
      v424 = xmmword_224672D70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 1, 6, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x7100000031), xmmword_224672D70);
      if (((v282 | v295) & 1) == 0)
      {
        v425 = v315;
        v426 = v316;
        v427 = v317;
        v423 = v313;
        v424 = v314;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224672D80;
        v419 = xmmword_224672D90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 1, 6, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x7100000031), xmmword_224672D90);
        v113 = (v267 & 1) == 0 && ((v279 | v292) & 1) == 0;
        if ((v261 & 1) == 0 && v113)
        {
          v420 = v315;
          v421 = v316;
          v422 = v317;
          v419 = v314;
          v418 = v313;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_224672DA0;
          v414 = xmmword_224672DB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 1, 6, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1F100000031), xmmword_224672DB0);
        }
      }
      v114 = (v270 & 1) == 0 && ((v279 | v292) & 1) == 0;
      if (v114 && (v276 & 1) == 0)
      {
        v415 = v335;
        v416 = v336;
        v417 = v337;
        v414 = v334;
        v413 = v333;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_224672DC0;
        v409 = xmmword_224672DD0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 1, 6, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1F100000031), xmmword_224672DD0);
      }
    }
    if (((v295 | v289) & 1) == 0)
    {
      v410 = v335;
      v411 = v336;
      v412 = v337;
      v409 = v334;
      v408 = v333;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_224672DE0;
      v404 = xmmword_224672DF0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 1, 6, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x7100000031), xmmword_224672DF0);
      v115 = (v101 & 0x40000000) == 0 && ((v292 | v286) & 1) == 0;
      if ((v267 & 1) == 0 && v115)
      {
        v405 = v335;
        v406 = v336;
        v407 = v337;
        v404 = v334;
        v403 = v333;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224672E00;
        v399 = xmmword_224672E10;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 1, 6, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1F100000031), xmmword_224672E10);
      }
    }
    v116 = (v276 & 1) == 0 && ((v292 | v286) & 1) == 0;
    if (v116 && (v274 & 1) == 0)
    {
      v400 = v335;
      v401 = v336;
      v402 = v337;
      v399 = v334;
      v398 = v333;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224672E20;
      v394 = xmmword_224672E30;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 1, 6, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1F100000031), xmmword_224672E30);
    }
  }
  v330 = v320;
  v331 = v321;
  v332 = v322;
  v328 = v318;
  v329 = v319;
  v117 = v42[12];
  if ((v117 & 0x80000000) != 0)
  {
    v119 = *(_DWORD *)(v41 + 2244);
    v120 = **v93;
    if (**v93)
      goto LABEL_264;
    goto LABEL_258;
  }
  v118 = *(_QWORD *)(v41 + 2328);
  if (v117 >= (*(_QWORD *)(v41 + 2336) - v118) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v118 = *(_QWORD *)(v41 + 2328);
  }
  v119 = *(_DWORD *)(v118 + (v117 << 11) + 1964);
  v120 = **v93;
  if (!**v93)
  {
LABEL_258:
    if ((v119 & 0x10000000) != 0)
      v121 = 0x40000000;
    else
      v121 = 0x80000000;
    if ((v119 & 0x20000000) != 0)
      v119 = v121;
    else
      v119 &= 0xCFFFFFFF;
  }
LABEL_264:
  v122 = v77[43];
  if (**v306)
  {
    v123 = v42[12];
    if ((v123 & 0x80000000) == 0)
      goto LABEL_266;
LABEL_632:
    v125 = *(_DWORD *)(v41 + 2276);
    if (v120)
      goto LABEL_276;
    goto LABEL_270;
  }
  if ((v122 & 0x10000000) != 0)
    v229 = 0x40000000;
  else
    v229 = 0x80000000;
  if ((v122 & 0x20000000) != 0)
    v122 = v229;
  else
    v122 &= 0xCFFFFFFF;
  v123 = v42[12];
  if ((v123 & 0x80000000) != 0)
    goto LABEL_632;
LABEL_266:
  v124 = *(_QWORD *)(v41 + 2328);
  if (v123 >= (*(_QWORD *)(v41 + 2336) - v124) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v124 = *(_QWORD *)(v41 + 2328);
    v120 = **v93;
  }
  v125 = *(_DWORD *)(v124 + (v123 << 11) + 1996);
  if (!v120)
  {
LABEL_270:
    if ((v125 & 0x10000000) != 0)
      v126 = 0x40000000;
    else
      v126 = 0x80000000;
    if ((v125 & 0x20000000) != 0)
      v125 = v126;
    else
      v125 &= 0xCFFFFFFF;
  }
LABEL_276:
  v298 = v77[51];
  if (**v306)
  {
    v127 = v42[12];
    if ((v127 & 0x80000000) == 0)
      goto LABEL_278;
LABEL_640:
    v129 = *(_DWORD *)(v41 + 2308);
    if (v120)
      goto LABEL_288;
    goto LABEL_282;
  }
  v230 = v298 & 0xCFFFFFFF;
  if ((v298 & 0x10000000) != 0)
    v231 = 0x40000000;
  else
    v231 = 0x80000000;
  if ((v298 & 0x20000000) != 0)
    v230 = v231;
  v298 = v230;
  v127 = v42[12];
  if ((v127 & 0x80000000) != 0)
    goto LABEL_640;
LABEL_278:
  v128 = *(_QWORD *)(v41 + 2328);
  if (v127 >= (*(_QWORD *)(v41 + 2336) - v128) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v128 = *(_QWORD *)(v41 + 2328);
    v120 = **v93;
  }
  v129 = *(_DWORD *)(v128 + (v127 << 11) + 2028);
  if (!v120)
  {
LABEL_282:
    if ((v129 & 0x10000000) != 0)
      v130 = 0x40000000;
    else
      v130 = 0x80000000;
    if ((v129 & 0x20000000) != 0)
      v129 = v130;
    else
      v129 &= 0xCFFFFFFF;
  }
LABEL_288:
  v262 = v119 >> 30;
  v280 = v125 >> 30;
  v283 = v122 >> 30;
  v271 = v129 >> 30;
  v345 = v320;
  v346 = v321;
  v347 = v322;
  v343 = v318;
  v344 = v319;
  if ((v301 & 0x40000000) != 0)
  {
    v375 = v320;
    v376 = v321;
    v377 = v322;
    v374 = v319;
    v373 = v318;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224672E40;
    v369 = xmmword_224672E50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 2, 6, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x7200000032), xmmword_224672E50);
    if ((v303 & 0x40000000) == 0)
    {
      v370 = v320;
      v371 = v321;
      v372 = v322;
      v369 = v319;
      v368 = v318;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224672E60;
      v424 = xmmword_224672E70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 2, 6, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x7200000032), xmmword_224672E70);
      if (((v295 | v289) & 1) == 0)
      {
        v425 = v320;
        v426 = v321;
        v427 = v322;
        v423 = v318;
        v424 = v319;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224672E80;
        v419 = xmmword_224672E90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 2, 6, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x7200000032), xmmword_224672E90);
        v131 = (v265 & 1) == 0 && ((v292 | v286) & 1) == 0;
        if ((v267 & 1) == 0 && v131)
        {
          v420 = v320;
          v421 = v321;
          v422 = v322;
          v419 = v319;
          v418 = v318;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_224672EA0;
          v414 = xmmword_224672EB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 2, 6, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1F200000032), xmmword_224672EB0);
        }
      }
      v132 = (v276 & 1) == 0 && ((v292 | v286) & 1) == 0;
      if (v132 && (v274 & 1) == 0)
      {
        v415 = v345;
        v416 = v346;
        v417 = v347;
        v414 = v344;
        v413 = v343;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_224672EC0;
        v409 = xmmword_224672ED0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 2, 6, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1F200000032), xmmword_224672ED0);
      }
    }
    if (((v289 | v283) & 1) == 0)
    {
      v410 = v345;
      v411 = v346;
      v412 = v347;
      v409 = v344;
      v408 = v343;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_224672EE0;
      v404 = xmmword_224672EF0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 2, 6, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x7200000032), xmmword_224672EF0);
      v133 = (v119 & 0x40000000) == 0 && ((v286 | v280) & 1) == 0;
      if ((v265 & 1) == 0 && v133)
      {
        v405 = v345;
        v406 = v346;
        v407 = v347;
        v404 = v344;
        v403 = v343;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224672F00;
        v399 = xmmword_224672F10;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 2, 6, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1F200000032), xmmword_224672F10);
      }
    }
    v134 = (v274 & 1) == 0 && ((v286 | v280) & 1) == 0;
    if (v134 && (v271 & 1) == 0)
    {
      v400 = v345;
      v401 = v346;
      v402 = v347;
      v399 = v344;
      v398 = v343;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224672F20;
      v394 = xmmword_224672F30;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 2, 6, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1F200000032), xmmword_224672F30);
    }
  }
  v340 = v330;
  v341 = v331;
  v342 = v332;
  v338 = v328;
  v339 = v329;
  v135 = v42[12];
  if ((v135 & 0x80000000) != 0)
  {
    v137 = *(_DWORD *)(v41 + 2248);
    v138 = **v93;
    if (**v93)
      goto LABEL_327;
    goto LABEL_321;
  }
  v136 = *(_QWORD *)(v41 + 2328);
  if (v135 >= (*(_QWORD *)(v41 + 2336) - v136) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v136 = *(_QWORD *)(v41 + 2328);
  }
  v137 = *(_DWORD *)(v136 + (v135 << 11) + 1968);
  v138 = **v93;
  if (!**v93)
  {
LABEL_321:
    if ((v137 & 0x10000000) != 0)
      v139 = 0x40000000;
    else
      v139 = 0x80000000;
    if ((v137 & 0x20000000) != 0)
      v137 = v139;
    else
      v137 &= 0xCFFFFFFF;
  }
LABEL_327:
  v140 = v77[44];
  if (**v306)
  {
    v141 = v42[12];
    if ((v141 & 0x80000000) == 0)
      goto LABEL_329;
LABEL_651:
    v143 = *(_DWORD *)(v41 + 2280);
    if (v138)
      goto LABEL_339;
    goto LABEL_333;
  }
  if ((v140 & 0x10000000) != 0)
    v232 = 0x40000000;
  else
    v232 = 0x80000000;
  if ((v140 & 0x20000000) != 0)
    v140 = v232;
  else
    v140 &= 0xCFFFFFFF;
  v141 = v42[12];
  if ((v141 & 0x80000000) != 0)
    goto LABEL_651;
LABEL_329:
  v142 = *(_QWORD *)(v41 + 2328);
  if (v141 >= (*(_QWORD *)(v41 + 2336) - v142) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v142 = *(_QWORD *)(v41 + 2328);
    v138 = **v93;
  }
  v143 = *(_DWORD *)(v142 + (v141 << 11) + 2000);
  if (!v138)
  {
LABEL_333:
    if ((v143 & 0x10000000) != 0)
      v144 = 0x40000000;
    else
      v144 = 0x80000000;
    if ((v143 & 0x20000000) != 0)
      v143 = v144;
    else
      v143 &= 0xCFFFFFFF;
  }
LABEL_339:
  v304 = v77[52];
  if (**v306)
  {
    v145 = v42[12];
    if ((v145 & 0x80000000) == 0)
      goto LABEL_341;
LABEL_659:
    v147 = *(_DWORD *)(v41 + 2312);
    if (v138)
      goto LABEL_351;
    goto LABEL_345;
  }
  v233 = v304 & 0xCFFFFFFF;
  if ((v304 & 0x10000000) != 0)
    v234 = 0x40000000;
  else
    v234 = 0x80000000;
  if ((v304 & 0x20000000) != 0)
    v233 = v234;
  v304 = v233;
  v145 = v42[12];
  if ((v145 & 0x80000000) != 0)
    goto LABEL_659;
LABEL_341:
  v146 = *(_QWORD *)(v41 + 2328);
  if (v145 >= (*(_QWORD *)(v41 + 2336) - v146) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v146 = *(_QWORD *)(v41 + 2328);
    v138 = **v93;
  }
  v147 = *(_DWORD *)(v146 + (v145 << 11) + 2032);
  if (!v138)
  {
LABEL_345:
    if ((v147 & 0x10000000) != 0)
      v148 = 0x40000000;
    else
      v148 = 0x80000000;
    if ((v147 & 0x20000000) != 0)
      v147 = v148;
    else
      v147 &= 0xCFFFFFFF;
  }
LABEL_351:
  v268 = v137 >> 30;
  v293 = v143 >> 30;
  v296 = v140 >> 30;
  v277 = v147 >> 30;
  v355 = v330;
  v356 = v331;
  v357 = v332;
  v353 = v328;
  v354 = v329;
  if ((v298 & 0x40000000) != 0)
  {
    v375 = v330;
    v376 = v331;
    v377 = v332;
    v374 = v329;
    v373 = v328;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224672F40;
    v369 = xmmword_224672F50;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 3, 6, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x7300000033), xmmword_224672F50);
    if ((v301 & 0x40000000) == 0)
    {
      v370 = v330;
      v371 = v331;
      v372 = v332;
      v369 = v329;
      v368 = v328;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224672F60;
      v424 = xmmword_224672F70;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 3, 6, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x7300000033), xmmword_224672F70);
      if (((v289 | v283) & 1) == 0)
      {
        v425 = v330;
        v426 = v331;
        v427 = v332;
        v423 = v328;
        v424 = v329;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224672F80;
        v419 = xmmword_224672F90;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 3, 6, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x7300000033), xmmword_224672F90);
        v149 = (v262 & 1) == 0 && ((v286 | v280) & 1) == 0;
        if ((v265 & 1) == 0 && v149)
        {
          v420 = v330;
          v421 = v331;
          v422 = v332;
          v419 = v329;
          v418 = v328;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_224672FA0;
          v414 = xmmword_224672FB0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 3, 6, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1F300000033), xmmword_224672FB0);
        }
      }
      v150 = (v274 & 1) == 0 && ((v286 | v280) & 1) == 0;
      if (v150 && (v271 & 1) == 0)
      {
        v415 = v355;
        v416 = v356;
        v417 = v357;
        v414 = v354;
        v413 = v353;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_224672FC0;
        v409 = xmmword_224672FD0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 3, 6, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1F300000033), xmmword_224672FD0);
      }
    }
    if (((v283 | v296) & 1) == 0)
    {
      v410 = v355;
      v411 = v356;
      v412 = v357;
      v409 = v354;
      v408 = v353;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_224672FE0;
      v404 = xmmword_224672FF0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 3, 6, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x7300000033), xmmword_224672FF0);
      v151 = (v137 & 0x40000000) == 0 && ((v280 | v293) & 1) == 0;
      if ((v262 & 1) == 0 && v151)
      {
        v405 = v355;
        v406 = v356;
        v407 = v357;
        v404 = v354;
        v403 = v353;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224673000;
        v399 = xmmword_224673010;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 3, 6, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1F300000033), xmmword_224673010);
      }
    }
    v152 = (v271 & 1) == 0 && ((v280 | v293) & 1) == 0;
    if (v152 && (v277 & 1) == 0)
    {
      v400 = v355;
      v401 = v356;
      v402 = v357;
      v399 = v354;
      v398 = v353;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224673020;
      v394 = xmmword_224673030;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 3, 6, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1F300000033), xmmword_224673030);
    }
  }
  v350 = v340;
  v351 = v341;
  v352 = v342;
  v348 = v338;
  v349 = v339;
  v153 = v42[12];
  if ((v153 & 0x80000000) != 0)
  {
    v155 = *(_DWORD *)(v41 + 2252);
    v156 = **v93;
    if (**v93)
      goto LABEL_390;
    goto LABEL_384;
  }
  v154 = *(_QWORD *)(v41 + 2328);
  if (v153 >= (*(_QWORD *)(v41 + 2336) - v154) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v154 = *(_QWORD *)(v41 + 2328);
  }
  v155 = *(_DWORD *)(v154 + (v153 << 11) + 1972);
  v156 = **v93;
  if (!**v93)
  {
LABEL_384:
    if ((v155 & 0x10000000) != 0)
      v157 = 0x40000000;
    else
      v157 = 0x80000000;
    if ((v155 & 0x20000000) != 0)
      v155 = v157;
    else
      v155 &= 0xCFFFFFFF;
  }
LABEL_390:
  v158 = v77[45];
  if (**v306)
  {
    v159 = v42[12];
    if ((v159 & 0x80000000) == 0)
      goto LABEL_392;
LABEL_670:
    v161 = *(_DWORD *)(v41 + 2284);
    if (v156)
      goto LABEL_402;
    goto LABEL_396;
  }
  if ((v158 & 0x10000000) != 0)
    v235 = 0x40000000;
  else
    v235 = 0x80000000;
  if ((v158 & 0x20000000) != 0)
    v158 = v235;
  else
    v158 &= 0xCFFFFFFF;
  v159 = v42[12];
  if ((v159 & 0x80000000) != 0)
    goto LABEL_670;
LABEL_392:
  v160 = *(_QWORD *)(v41 + 2328);
  if (v159 >= (*(_QWORD *)(v41 + 2336) - v160) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v160 = *(_QWORD *)(v41 + 2328);
    v156 = **v93;
  }
  v161 = *(_DWORD *)(v160 + (v159 << 11) + 2004);
  if (!v156)
  {
LABEL_396:
    if ((v161 & 0x10000000) != 0)
      v162 = 0x40000000;
    else
      v162 = 0x80000000;
    if ((v161 & 0x20000000) != 0)
      v161 = v162;
    else
      v161 &= 0xCFFFFFFF;
  }
LABEL_402:
  v302 = v77[53];
  if (**v306)
  {
    v163 = v42[12];
    if ((v163 & 0x80000000) == 0)
      goto LABEL_404;
LABEL_678:
    v165 = *(_DWORD *)(v41 + 2316);
    if (v156)
      goto LABEL_414;
    goto LABEL_408;
  }
  v236 = v302 & 0xCFFFFFFF;
  if ((v302 & 0x10000000) != 0)
    v237 = 0x40000000;
  else
    v237 = 0x80000000;
  if ((v302 & 0x20000000) != 0)
    v236 = v237;
  v302 = v236;
  v163 = v42[12];
  if ((v163 & 0x80000000) != 0)
    goto LABEL_678;
LABEL_404:
  v164 = *(_QWORD *)(v41 + 2328);
  if (v163 >= (*(_QWORD *)(v41 + 2336) - v164) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v164 = *(_QWORD *)(v41 + 2328);
    v156 = **v93;
  }
  v165 = *(_DWORD *)(v164 + (v163 << 11) + 2036);
  if (!v156)
  {
LABEL_408:
    if ((v165 & 0x10000000) != 0)
      v166 = 0x40000000;
    else
      v166 = 0x80000000;
    if ((v165 & 0x20000000) != 0)
      v165 = v166;
    else
      v165 &= 0xCFFFFFFF;
  }
LABEL_414:
  v266 = v155 >> 30;
  v287 = v161 >> 30;
  v290 = v158 >> 30;
  v275 = v165 >> 30;
  v365 = v340;
  v366 = v341;
  v367 = v342;
  v364 = v339;
  v363 = v338;
  if ((v304 & 0x40000000) != 0)
  {
    v375 = v340;
    v376 = v341;
    v377 = v342;
    v374 = v339;
    v373 = v338;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224673040;
    v369 = xmmword_224673050;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 4, 6, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x7400000034), xmmword_224673050);
    if ((v298 & 0x40000000) == 0)
    {
      v370 = v340;
      v371 = v341;
      v372 = v342;
      v369 = v339;
      v368 = v338;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224673060;
      v424 = xmmword_224673070;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 4, 6, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x7400000034), xmmword_224673070);
      if (((v283 | v296) & 1) == 0)
      {
        v425 = v340;
        v426 = v341;
        v427 = v342;
        v423 = v338;
        v424 = v339;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224673080;
        v419 = xmmword_224673090;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 4, 6, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x7400000034), xmmword_224673090);
        v167 = (v268 & 1) == 0 && ((v280 | v293) & 1) == 0;
        if ((v262 & 1) == 0 && v167)
        {
          v420 = v340;
          v421 = v341;
          v422 = v342;
          v419 = v339;
          v418 = v338;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246730A0;
          v414 = xmmword_2246730B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 4, 6, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1F400000034), xmmword_2246730B0);
        }
      }
      v168 = (v271 & 1) == 0 && ((v280 | v293) & 1) == 0;
      if (v168 && (v277 & 1) == 0)
      {
        v415 = v365;
        v416 = v366;
        v417 = v367;
        v414 = v364;
        v413 = v363;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246730C0;
        v409 = xmmword_2246730D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 4, 6, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1F400000034), xmmword_2246730D0);
      }
    }
    if (((v296 | v290) & 1) == 0)
    {
      v410 = v365;
      v411 = v366;
      v412 = v367;
      v409 = v364;
      v408 = v363;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246730E0;
      v404 = xmmword_2246730F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 4, 6, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x7400000034), xmmword_2246730F0);
      v169 = (v155 & 0x40000000) == 0 && ((v293 | v287) & 1) == 0;
      if ((v268 & 1) == 0 && v169)
      {
        v405 = v365;
        v406 = v366;
        v407 = v367;
        v404 = v364;
        v403 = v363;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224673100;
        v399 = xmmword_224673110;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 4, 6, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1F400000034), xmmword_224673110);
      }
    }
    v170 = (v277 & 1) == 0 && ((v293 | v287) & 1) == 0;
    if (v170 && (v275 & 1) == 0)
    {
      v400 = v365;
      v401 = v366;
      v402 = v367;
      v399 = v364;
      v398 = v363;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224673120;
      v394 = xmmword_224673130;
      *(_QWORD *)&v383 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 4, 6, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v383, COERCE_DOUBLE(0x1F400000034), xmmword_224673130);
    }
  }
  v360 = v350;
  v361 = v351;
  v362 = v352;
  v358 = v348;
  v359 = v349;
  v171 = v42[12];
  if ((v171 & 0x80000000) != 0)
  {
    v173 = *(_DWORD *)(v41 + 2256);
    v174 = **v93;
    if (**v93)
      goto LABEL_453;
    goto LABEL_447;
  }
  v172 = *(_QWORD *)(v41 + 2328);
  if (v171 >= (*(_QWORD *)(v41 + 2336) - v172) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v172 = *(_QWORD *)(v41 + 2328);
  }
  v173 = *(_DWORD *)(v172 + (v171 << 11) + 1976);
  v174 = **v93;
  if (!**v93)
  {
LABEL_447:
    if ((v173 & 0x10000000) != 0)
      v175 = 0x40000000;
    else
      v175 = 0x80000000;
    if ((v173 & 0x20000000) != 0)
      v173 = v175;
    else
      v173 &= 0xCFFFFFFF;
  }
LABEL_453:
  v176 = v77[46];
  if (**v306)
  {
    v177 = v42[12];
    if ((v177 & 0x80000000) == 0)
      goto LABEL_455;
LABEL_689:
    v179 = *(_DWORD *)(v41 + 2288);
    if (v174)
      goto LABEL_465;
    goto LABEL_459;
  }
  if ((v176 & 0x10000000) != 0)
    v238 = 0x40000000;
  else
    v238 = 0x80000000;
  if ((v176 & 0x20000000) != 0)
    v176 = v238;
  else
    v176 &= 0xCFFFFFFF;
  v177 = v42[12];
  if ((v177 & 0x80000000) != 0)
    goto LABEL_689;
LABEL_455:
  v178 = *(_QWORD *)(v41 + 2328);
  if (v177 >= (*(_QWORD *)(v41 + 2336) - v178) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v178 = *(_QWORD *)(v41 + 2328);
    v174 = **v93;
  }
  v179 = *(_DWORD *)(v178 + (v177 << 11) + 2008);
  if (!v174)
  {
LABEL_459:
    if ((v179 & 0x10000000) != 0)
      v180 = 0x40000000;
    else
      v180 = 0x80000000;
    if ((v179 & 0x20000000) != 0)
      v179 = v180;
    else
      v179 &= 0xCFFFFFFF;
  }
LABEL_465:
  v299 = v77[54];
  if (**v306)
  {
    v181 = v42[12];
    if ((v181 & 0x80000000) == 0)
      goto LABEL_467;
LABEL_697:
    v183 = *(_DWORD *)(v41 + 2320);
    if (v174)
      goto LABEL_477;
    goto LABEL_471;
  }
  v239 = v299 & 0xCFFFFFFF;
  if ((v299 & 0x10000000) != 0)
    v240 = 0x40000000;
  else
    v240 = 0x80000000;
  if ((v299 & 0x20000000) != 0)
    v239 = v240;
  v299 = v239;
  v181 = v42[12];
  if ((v181 & 0x80000000) != 0)
    goto LABEL_697;
LABEL_467:
  v182 = *(_QWORD *)(v41 + 2328);
  if (v181 >= (*(_QWORD *)(v41 + 2336) - v182) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v182 = *(_QWORD *)(v41 + 2328);
    v174 = **v93;
  }
  v183 = *(_DWORD *)(v182 + (v181 << 11) + 2040);
  if (!v174)
  {
LABEL_471:
    if ((v183 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v183 & 0x20000000) != 0)
      v183 = v184;
    else
      v183 &= 0xCFFFFFFF;
  }
LABEL_477:
  v263 = v173 >> 30;
  v281 = v179 >> 30;
  v284 = v176 >> 30;
  v272 = v183 >> 30;
  v385 = v350;
  v386 = v351;
  v387 = v352;
  v384 = v349;
  v383 = v348;
  if ((v302 & 0x40000000) != 0)
  {
    v375 = v350;
    v376 = v351;
    v377 = v352;
    v374 = v349;
    v373 = v348;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224673140;
    v369 = xmmword_224673150;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 5, 6, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x7500000035), xmmword_224673150);
    if ((v304 & 0x40000000) == 0)
    {
      v370 = v350;
      v371 = v351;
      v372 = v352;
      v369 = v349;
      v368 = v348;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224673160;
      v424 = xmmword_224673170;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 5, 6, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x7500000035), xmmword_224673170);
      if (((v296 | v290) & 1) == 0)
      {
        v425 = v350;
        v426 = v351;
        v427 = v352;
        v423 = v348;
        v424 = v349;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224673180;
        v419 = xmmword_224673190;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 5, 6, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x7500000035), xmmword_224673190);
        v185 = (v266 & 1) == 0 && ((v293 | v287) & 1) == 0;
        if ((v268 & 1) == 0 && v185)
        {
          v420 = v350;
          v421 = v351;
          v422 = v352;
          v419 = v349;
          v418 = v348;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246731A0;
          v414 = xmmword_2246731B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 5, 6, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1F500000035), xmmword_2246731B0);
        }
      }
      v186 = (v277 & 1) == 0 && ((v293 | v287) & 1) == 0;
      if (v186 && (v275 & 1) == 0)
      {
        v415 = v385;
        v416 = v386;
        v417 = v387;
        v414 = v384;
        v413 = v383;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246731C0;
        v409 = xmmword_2246731D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 5, 6, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1F500000035), xmmword_2246731D0);
      }
    }
    if (((v290 | v284) & 1) == 0)
    {
      v410 = v385;
      v411 = v386;
      v412 = v387;
      v409 = v384;
      v408 = v383;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246731E0;
      v404 = xmmword_2246731F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 5, 6, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x7500000035), xmmword_2246731F0);
      v187 = (v173 & 0x40000000) == 0 && ((v287 | v281) & 1) == 0;
      if ((v266 & 1) == 0 && v187)
      {
        v405 = v385;
        v406 = v386;
        v407 = v387;
        v404 = v384;
        v403 = v383;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224673200;
        v399 = xmmword_224673210;
        *(_QWORD *)&v388 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 5, 6, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)&v388, COERCE_DOUBLE(0x1F500000035), xmmword_224673210);
      }
    }
    v188 = (v275 & 1) == 0 && ((v287 | v281) & 1) == 0;
    if (v188 && (v272 & 1) == 0)
    {
      v400 = v385;
      v401 = v386;
      v402 = v387;
      v399 = v384;
      v398 = v383;
      *(_QWORD *)&v388 = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224673220;
      v394 = xmmword_224673230;
      *(_QWORD *)&v378 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 5, 6, 0, (uint64_t)&v388, (uint64_t)&v393, (uint64_t)&v378, COERCE_DOUBLE(0x1F500000035), xmmword_224673230);
    }
  }
  v380 = v360;
  v381 = v361;
  v382 = v362;
  v379 = v359;
  v378 = v358;
  v189 = v42[12];
  if ((v189 & 0x80000000) != 0)
  {
    v191 = *(_DWORD *)(v41 + 2260);
    v192 = **v93;
    if (**v93)
      goto LABEL_516;
    goto LABEL_510;
  }
  v190 = *(_QWORD *)(v41 + 2328);
  if (v189 >= (*(_QWORD *)(v41 + 2336) - v190) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v190 = *(_QWORD *)(v41 + 2328);
  }
  v191 = *(_DWORD *)(v190 + (v189 << 11) + 1980);
  v192 = **v93;
  if (!**v93)
  {
LABEL_510:
    if ((v191 & 0x10000000) != 0)
      v193 = 0x40000000;
    else
      v193 = 0x80000000;
    if ((v191 & 0x20000000) != 0)
      v191 = v193;
    else
      v191 &= 0xCFFFFFFF;
  }
LABEL_516:
  v194 = v77[47];
  if (**v306)
  {
    v195 = v42[12];
    if ((v195 & 0x80000000) == 0)
      goto LABEL_518;
LABEL_708:
    v197 = *(_DWORD *)(v41 + 2292);
    if (v192)
      goto LABEL_528;
    goto LABEL_522;
  }
  if ((v194 & 0x10000000) != 0)
    v241 = 0x40000000;
  else
    v241 = 0x80000000;
  if ((v194 & 0x20000000) != 0)
    v194 = v241;
  else
    v194 &= 0xCFFFFFFF;
  v195 = v42[12];
  if ((v195 & 0x80000000) != 0)
    goto LABEL_708;
LABEL_518:
  v196 = *(_QWORD *)(v41 + 2328);
  if (v195 >= (*(_QWORD *)(v41 + 2336) - v196) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v196 = *(_QWORD *)(v41 + 2328);
    v192 = **v93;
  }
  v197 = *(_DWORD *)(v196 + (v195 << 11) + 2012);
  if (!v192)
  {
LABEL_522:
    if ((v197 & 0x10000000) != 0)
      v198 = 0x40000000;
    else
      v198 = 0x80000000;
    if ((v197 & 0x20000000) != 0)
      v197 = v198;
    else
      v197 &= 0xCFFFFFFF;
  }
LABEL_528:
  v199 = v77[55];
  if (**v306)
  {
    v200 = v42[12];
    if ((v200 & 0x80000000) == 0)
      goto LABEL_530;
LABEL_717:
    v202 = *(_DWORD *)(v41 + 2324);
    if (v192)
      goto LABEL_540;
    goto LABEL_534;
  }
  if ((v199 & 0x10000000) != 0)
    v242 = 0x40000000;
  else
    v242 = 0x80000000;
  if ((v199 & 0x20000000) != 0)
    v199 = v242;
  else
    v199 &= 0xCFFFFFFF;
  v200 = v42[12];
  if ((v200 & 0x80000000) != 0)
    goto LABEL_717;
LABEL_530:
  v201 = *(_QWORD *)(v41 + 2328);
  if (v200 >= (*(_QWORD *)(v41 + 2336) - v201) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v201 = *(_QWORD *)(v41 + 2328);
    v192 = **v93;
  }
  v202 = *(_DWORD *)(v201 + (v200 << 11) + 2044);
  if (!v192)
  {
LABEL_534:
    if ((v202 & 0x10000000) != 0)
      v203 = 0x40000000;
    else
      v203 = 0x80000000;
    if ((v202 & 0x20000000) != 0)
      v202 = v203;
    else
      v202 &= 0xCFFFFFFF;
  }
LABEL_540:
  v305 = v191 >> 30;
  v307 = v194 >> 30;
  v204 = v197 >> 30;
  v205 = v202 >> 30;
  v390 = v360;
  v391 = v361;
  v392 = v362;
  v389 = v359;
  v388 = v358;
  if ((v299 & 0x40000000) != 0)
  {
    v375 = v360;
    v376 = v361;
    v377 = v362;
    v374 = v359;
    v373 = v358;
    *(_QWORD *)&v423 = 0xD0D0D0D0D0D0D0DLL;
    v368 = xmmword_224673240;
    v369 = xmmword_224673250;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 6, 6, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x7600000036), xmmword_224673250);
    if ((v302 & 0x40000000) == 0)
    {
      v370 = v360;
      v371 = v361;
      v372 = v362;
      v369 = v359;
      v368 = v358;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224673260;
      v424 = xmmword_224673270;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 6, 6, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x7600000036), xmmword_224673270);
      if (((v290 | v284) & 1) == 0)
      {
        v425 = v360;
        v426 = v361;
        v427 = v362;
        v423 = v358;
        v424 = v359;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224673280;
        v419 = xmmword_224673290;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 6, 6, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x7600000036), xmmword_224673290);
        v206 = (v263 & 1) == 0 && ((v287 | v281) & 1) == 0;
        if ((v266 & 1) == 0 && v206)
        {
          v420 = v360;
          v421 = v361;
          v422 = v362;
          v419 = v359;
          v418 = v358;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246732A0;
          v414 = xmmword_2246732B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 6, 6, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1F600000036), xmmword_2246732B0);
        }
      }
      v207 = (v275 & 1) == 0 && ((v287 | v281) & 1) == 0;
      if (v207 && (v272 & 1) == 0)
      {
        v415 = v390;
        v416 = v391;
        v417 = v392;
        v414 = v389;
        v413 = v388;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246732C0;
        v409 = xmmword_2246732D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 6, 6, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1F600000036), xmmword_2246732D0);
      }
    }
    if (((v284 | v307) & 1) == 0)
    {
      v410 = v390;
      v411 = v391;
      v412 = v392;
      v409 = v389;
      v408 = v388;
      *(_QWORD *)&v398 = 0xD0D0D0D0D0D0D0DLL;
      v403 = xmmword_2246732E0;
      v404 = xmmword_2246732F0;
      *(_QWORD *)&v393 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 6, 6, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)&v393, COERCE_DOUBLE(0x7600000036), xmmword_2246732F0);
      v208 = (v305 & 1) == 0 && ((v281 | v204) & 1) == 0;
      if ((v263 & 1) == 0 && v208)
      {
        v405 = v390;
        v406 = v391;
        v407 = v392;
        v404 = v389;
        v403 = v388;
        *(_QWORD *)&v393 = 0xC0D0C0D0C0D0C0DLL;
        v398 = xmmword_224673300;
        v399 = xmmword_224673310;
        *(_QWORD *)&v429[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 6, 6, 0, (uint64_t)&v393, (uint64_t)&v398, (uint64_t)v429, COERCE_DOUBLE(0x1F600000036), xmmword_224673310);
      }
    }
    v209 = (v272 & 1) == 0 && ((v281 | v204) & 1) == 0;
    if (v209 && (v205 & 1) == 0)
    {
      v400 = v390;
      v401 = v391;
      v402 = v392;
      v399 = v389;
      v398 = v388;
      *(_QWORD *)&v429[0] = 0xC0D0C0D0C0D0C0DLL;
      v393 = xmmword_224673320;
      v394 = xmmword_224673330;
      v430[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 6, 6, 0, (uint64_t)v429, (uint64_t)&v393, (uint64_t)v430, COERCE_DOUBLE(0x1F600000036), xmmword_224673330);
    }
  }
  v210 = v42[21];
  if ((v210 & 0x80000000) != 0)
  {
    v213 = *v93;
    v214 = *(_DWORD *)(v41 + 2232);
    v215 = **v93;
    if (**v93)
      goto LABEL_573;
  }
  else
  {
    v211 = *(_QWORD *)(v41 + 2328);
    if (v210 >= (*(_QWORD *)(v41 + 2336) - v211) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v211 = *(_QWORD *)(v41 + 2328);
    }
    v212 = v211 + (v210 << 11);
    v213 = *v93;
    v214 = *(_DWORD *)(v212 + 1952);
    v215 = **v93;
    if (**v93)
    {
LABEL_573:
      v216 = v42[22];
      if ((v216 & 0x80000000) == 0)
        goto LABEL_574;
LABEL_727:
      v218 = *(_DWORD *)(v41 + 440);
      if (v215)
        goto LABEL_578;
      goto LABEL_728;
    }
  }
  if ((v214 & 0x10000000) != 0)
    v243 = 0x40000000;
  else
    v243 = 0x80000000;
  if ((v214 & 0x20000000) != 0)
    v214 = v243;
  else
    v214 &= 0xCFFFFFFF;
  v216 = v42[22];
  if ((v216 & 0x80000000) != 0)
    goto LABEL_727;
LABEL_574:
  v217 = *(_QWORD *)(v41 + 2328);
  if (v216 >= (*(_QWORD *)(v41 + 2336) - v217) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v217 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
    v215 = **v93;
  }
  v218 = *(_DWORD *)(v217 + (v216 << 11) + 160);
  if (v215)
  {
LABEL_578:
    v219 = v42[21];
    if ((v219 & 0x80000000) == 0)
      goto LABEL_579;
LABEL_735:
    v221 = *(_DWORD *)(v41 + 2264);
    if (v215)
      goto LABEL_583;
LABEL_736:
    if ((v221 & 0x10000000) != 0)
      v245 = 0x40000000;
    else
      v245 = 0x80000000;
    if ((v221 & 0x20000000) != 0)
      v221 = v245;
    else
      v221 &= 0xCFFFFFFF;
    v222 = v42[22];
    if ((v222 & 0x80000000) != 0)
      goto LABEL_746;
    goto LABEL_743;
  }
LABEL_728:
  if ((v218 & 0x10000000) != 0)
    v244 = 0x40000000;
  else
    v244 = 0x80000000;
  if ((v218 & 0x20000000) != 0)
    v218 = v244;
  else
    v218 &= 0xCFFFFFFF;
  v219 = v42[21];
  if ((v219 & 0x80000000) != 0)
    goto LABEL_735;
LABEL_579:
  v220 = *(_QWORD *)(v41 + 2328);
  if (v219 >= (*(_QWORD *)(v41 + 2336) - v220) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v220 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
    v215 = **v93;
  }
  v221 = *(_DWORD *)(v220 + (v219 << 11) + 1984);
  if (!v215)
    goto LABEL_736;
LABEL_583:
  v222 = v42[22];
  if ((v222 & 0x80000000) != 0)
    goto LABEL_746;
LABEL_743:
  if (v222 >= (uint64_t)(*(_QWORD *)(v41 + 2336) - *(_QWORD *)(v41 + 2328)) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v213 = *v93;
  }
LABEL_746:
  v246 = v42[21];
  if ((v246 & 0x80000000) != 0)
  {
    v248 = *(_DWORD *)(v41 + 2296);
    if (*v213)
      goto LABEL_757;
    goto LABEL_751;
  }
  v247 = *(_QWORD *)(v41 + 2328);
  if (v246 >= (*(_QWORD *)(v41 + 2336) - v247) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v247 = *(_QWORD *)(v41 + 2328);
    v213 = *v93;
  }
  v248 = *(_DWORD *)(v247 + (v246 << 11) + 2016);
  if (!*v213)
  {
LABEL_751:
    if ((v248 & 0x10000000) != 0)
      v249 = 0x40000000;
    else
      v249 = 0x80000000;
    if ((v248 & 0x20000000) != 0)
      v248 = v249;
    else
      v248 &= 0xCFFFFFFF;
  }
LABEL_757:
  v395 = v380;
  v396 = v381;
  v397 = v382;
  v394 = v379;
  v393 = v378;
  if ((v199 & 0x40000000) != 0)
  {
    v375 = v380;
    v376 = v381;
    v377 = v382;
    *(_QWORD *)&v423 = 0x161616160D0D0D0DLL;
    v374 = v379;
    v373 = v378;
    v368 = xmmword_224673340;
    v369 = xmmword_224673350;
    *(_QWORD *)&v418 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v373, 7, 6, 0, (uint64_t)&v423, (uint64_t)&v368, (uint64_t)&v418, COERCE_DOUBLE(0x7700000037), xmmword_224673350);
    if ((v299 & 0x40000000) == 0)
    {
      v370 = v380;
      v371 = v381;
      v372 = v382;
      v369 = v379;
      v368 = v378;
      *(_QWORD *)&v418 = 0xD0D0D0D0D0D0D0DLL;
      v423 = xmmword_224673360;
      v424 = xmmword_224673370;
      *(_QWORD *)&v413 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v368, 7, 6, 0, (uint64_t)&v418, (uint64_t)&v423, (uint64_t)&v413, COERCE_DOUBLE(0x7700000037), xmmword_224673370);
      if (((v284 | v307) & 1) == 0)
      {
        v425 = v380;
        v426 = v381;
        v427 = v382;
        v423 = v378;
        v424 = v379;
        *(_QWORD *)&v413 = 0xD0D0D0D0D0D0D0DLL;
        v418 = xmmword_224673380;
        v419 = xmmword_224673390;
        *(_QWORD *)&v408 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v423, 7, 6, 0, (uint64_t)&v413, (uint64_t)&v418, (uint64_t)&v408, COERCE_DOUBLE(0x7700000037), xmmword_224673390);
        v250 = (v305 & 1) == 0 && ((v281 | v204) & 1) == 0;
        if ((v263 & 1) == 0 && v250)
        {
          v420 = v380;
          v421 = v381;
          v422 = v382;
          v419 = v379;
          v418 = v378;
          *(_QWORD *)&v408 = 0xC0D0C0D0C0D0C0DLL;
          v413 = xmmword_2246733A0;
          v414 = xmmword_2246733B0;
          *(_QWORD *)&v403 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v418, 7, 6, 0, (uint64_t)&v408, (uint64_t)&v413, (uint64_t)&v403, COERCE_DOUBLE(0x1F700000037), xmmword_2246733B0);
        }
      }
      v251 = (v272 & 1) == 0 && ((v281 | v204) & 1) == 0;
      if (v251 && (v205 & 1) == 0)
      {
        v415 = v395;
        v416 = v396;
        v417 = v397;
        v414 = v394;
        v413 = v393;
        *(_QWORD *)&v403 = 0xC0D0C0D0C0D0C0DLL;
        v408 = xmmword_2246733C0;
        v409 = xmmword_2246733D0;
        *(_QWORD *)&v398 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v413, 7, 6, 0, (uint64_t)&v403, (uint64_t)&v408, (uint64_t)&v398, COERCE_DOUBLE(0x1F700000037), xmmword_2246733D0);
      }
    }
    if (!(v218 & 0x40000000 | v307 & 1))
    {
      v410 = v395;
      v411 = v396;
      v412 = v397;
      *(_QWORD *)&v398 = 0x16160D0D16160D0DLL;
      v409 = v394;
      v408 = v393;
      v403 = xmmword_2246733E0;
      v404 = xmmword_2246733F0;
      *(_QWORD *)&v429[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v408, 7, 6, 0, (uint64_t)&v398, (uint64_t)&v403, (uint64_t)v429, COERCE_DOUBLE(0x7700000037), xmmword_2246733F0);
      v252 = (v214 & 0x40000000) == 0 && (v221 & 0x40000000 | v204 & 1) == 0;
      if ((v305 & 1) == 0 && v252)
      {
        v405 = v395;
        v406 = v396;
        v407 = v397;
        v404 = v394;
        v403 = v393;
        *(_QWORD *)&v429[0] = 0x151615160C0D0C0DLL;
        v398 = xmmword_224673400;
        v399 = xmmword_224673410;
        v430[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v403, 7, 6, 0, (uint64_t)v429, (uint64_t)&v398, (uint64_t)v430, COERCE_DOUBLE(0x1F700000037), xmmword_224673410);
      }
    }
    v253 = (v205 & 1) == 0 && (v221 & 0x40000000 | v204 & 1) == 0;
    if (v253 && (v248 & 0x40000000) == 0)
    {
      v400 = v395;
      v401 = v396;
      v402 = v397;
      v430[0] = 0x15160C0D15160C0DLL;
      v399 = v394;
      v398 = v393;
      v429[0] = xmmword_224673420;
      v429[1] = xmmword_224673430;
      v428 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v398, 7, 6, 0, (uint64_t)v430, (uint64_t)v429, (uint64_t)&v428, COERCE_DOUBLE(0x1F700000037), xmmword_224673430);
    }
  }
  v254 = *(_OWORD *)v278;
  v312 = *(_QWORD *)(v278 + 16);
  v311 = v254;
  v255 = *(_OWORD *)a2;
  v310 = a2[2];
  v256 = *v269;
  v257 = v269[1];
  v308[4] = v269[4];
  v309 = v255;
  v258 = v269[3];
  v308[2] = v269[2];
  v308[3] = v258;
  v308[0] = v256;
  v308[1] = v257;
  return sub_223DA7BF8(&v311, (uint64_t *)&v309, v308);
}

unint64_t sub_223DA7BF8(__int128 *a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v6;
  _BYTE **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  _BYTE **v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  _BYTE **v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int *v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  __int128 *v45;
  _OWORD *v46;
  unsigned int v47;
  uint64_t v48;
  _BYTE **v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  unsigned int v53;
  uint64_t v54;
  _BYTE **v55;
  unint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  unsigned int v59;
  uint64_t v60;
  _BYTE **v61;
  unint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  unsigned int v65;
  uint64_t v66;
  _BYTE **v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  _BYTE *v72;
  unsigned int v73;
  _BYTE *v74;
  unsigned int v75;
  _BYTE *v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  __int128 *v80;
  _BYTE **v81;
  _DWORD *v82;
  __int128 v83;
  float32x4_t v84;
  unint64_t v85;
  uint64_t v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unint64_t v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int v94;
  unint64_t v95;
  uint64_t v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  _BOOL4 v100;
  _BOOL4 v101;
  _BOOL4 v102;
  _BOOL4 v103;
  unint64_t v104;
  uint64_t v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unint64_t v110;
  uint64_t v111;
  unsigned int v112;
  unsigned int v113;
  unint64_t v114;
  uint64_t v115;
  unsigned int v116;
  unsigned int v117;
  _BOOL4 v118;
  _BOOL4 v119;
  _BOOL4 v120;
  _BOOL4 v121;
  unint64_t v122;
  uint64_t v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unint64_t v128;
  uint64_t v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unint64_t v133;
  uint64_t v134;
  unsigned int v135;
  unsigned int v136;
  _BOOL4 v137;
  _BOOL4 v138;
  _BOOL4 v139;
  _BOOL4 v140;
  unint64_t v141;
  uint64_t v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unint64_t v147;
  uint64_t v148;
  unsigned int v149;
  unsigned int v150;
  unint64_t v151;
  uint64_t v152;
  unsigned int v153;
  unsigned int v154;
  _BOOL4 v155;
  _BOOL4 v156;
  _BOOL4 v157;
  _BOOL4 v158;
  unint64_t v159;
  uint64_t v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unint64_t v165;
  uint64_t v166;
  unsigned int v167;
  unsigned int v168;
  unint64_t v169;
  uint64_t v170;
  unsigned int v171;
  unsigned int v172;
  _BOOL4 v173;
  _BOOL4 v174;
  _BOOL4 v175;
  _BOOL4 v176;
  unint64_t v177;
  uint64_t v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unint64_t v183;
  uint64_t v184;
  unsigned int v185;
  unsigned int v186;
  unint64_t v187;
  uint64_t v188;
  unsigned int v189;
  unsigned int v190;
  _BOOL4 v191;
  _BOOL4 v192;
  _BOOL4 v193;
  _BOOL4 v194;
  unint64_t v195;
  uint64_t v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unint64_t v201;
  uint64_t v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unint64_t v206;
  uint64_t v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  _BOOL4 v212;
  _BOOL4 v213;
  _BOOL4 v214;
  _BOOL4 v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  _BYTE *v219;
  unsigned int v220;
  int v221;
  unint64_t v222;
  uint64_t v223;
  unsigned int v224;
  unint64_t v225;
  uint64_t v226;
  unsigned int v227;
  unint64_t v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unint64_t v251;
  uint64_t v252;
  unsigned int v253;
  unsigned int v254;
  _BOOL4 v255;
  _BOOL4 v256;
  _BOOL4 v257;
  _BOOL4 v258;
  _BOOL4 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  __int128 *v274;
  __int128 *v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  _BYTE **v311;
  _OWORD v312[5];
  __int128 v313;
  uint64_t v314;
  __int128 v315;
  uint64_t v316;
  __int128 v317;
  float32x4_t v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  float32x4_t v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  float32x4_t v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  float32x4_t v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  float32x4_t v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  float32x4_t v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  float32x4_t v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  float32x4_t v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  float32x4_t v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  float32x4_t v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  float32x4_t v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  float32x4_t v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  float32x4_t v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  float32x4_t v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  float32x4_t v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  float32x4_t v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  float32x4_t v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  float32x4_t v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  float32x4_t v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  float32x4_t v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  float32x4_t v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  float32x4_t v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  float32x4_t v428;
  __int128 v429;
  __int128 v430;
  __int128 v431;
  uint64_t v432;
  _OWORD v433[2];
  _QWORD v434[3];

  v434[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v7 = (_BYTE **)a2[2];
  v8 = *(unsigned int *)(a2[1] + 48);
  if ((v8 & 0x80000000) != 0)
  {
    v10 = v6 + 280;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 2328);
    if (v8 >= (*(_QWORD *)(v6 + 2336) - v9) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v9 = *(_QWORD *)(v6 + 2328);
    }
    v10 = v9 + (v8 << 11);
  }
  v11 = *(_DWORD *)(v10 + 1984);
  v12 = v11 & 0xCFFFFFFF;
  if ((v11 & 0x10000000) != 0)
    v13 = 0x40000000;
  else
    v13 = 0x80000000;
  if ((v11 & 0x20000000) != 0)
    v12 = v13;
  if (**v7)
    v14 = v11;
  else
    v14 = v12;
  v15 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 192);
  v16 = v15 & 0xCFFFFFFF;
  if ((v15 & 0x10000000) != 0)
    v17 = 0x40000000;
  else
    v17 = 0x80000000;
  if ((v15 & 0x20000000) != 0)
    v16 = v17;
  if (***(_BYTE ***)a1)
    v18 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 192);
  else
    v18 = v16;
  v19 = *a2;
  v20 = (_BYTE **)a2[2];
  v21 = *(unsigned int *)(a2[1] + 48);
  if ((v21 & 0x80000000) != 0)
  {
    v23 = v19 + 280;
  }
  else
  {
    v22 = *(_QWORD *)(v19 + 2328);
    if (v21 >= (*(_QWORD *)(v19 + 2336) - v22) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v22 = *(_QWORD *)(v19 + 2328);
    }
    v23 = v22 + (v21 << 11);
  }
  v24 = *(_DWORD *)(v23 + 2016);
  v25 = v24 & 0xCFFFFFFF;
  if ((v24 & 0x10000000) != 0)
    v26 = 0x40000000;
  else
    v26 = 0x80000000;
  if ((v24 & 0x20000000) != 0)
    v25 = v26;
  if (!**v20)
    v24 = v25;
  v295 = v24;
  v298 = v14;
  v27 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 224);
  v28 = v27 & 0xCFFFFFFF;
  if ((v27 & 0x10000000) != 0)
    v29 = 0x40000000;
  else
    v29 = 0x80000000;
  if ((v27 & 0x20000000) != 0)
    v28 = v29;
  if (***(_BYTE ***)a1)
    v30 = *(_DWORD *)(*((_QWORD *)a1 + 2) + 224);
  else
    v30 = v28;
  v31 = *a2;
  v32 = (_BYTE **)a2[2];
  v33 = *(unsigned int *)(a2[1] + 60);
  v305 = v18;
  if ((v33 & 0x80000000) != 0)
  {
    v35 = v31 + 280;
  }
  else
  {
    v34 = *(_QWORD *)(v31 + 2328);
    if (v33 >= (*(_QWORD *)(v31 + 2336) - v34) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v34 = *(_QWORD *)(v31 + 2328);
    }
    v35 = v34 + (v33 << 11);
  }
  v36 = *(_DWORD *)(v35 + 1792);
  v37 = v36 & 0xCFFFFFFF;
  if ((v36 & 0x10000000) != 0)
    v38 = 0x40000000;
  else
    v38 = 0x80000000;
  if ((v36 & 0x20000000) != 0)
    v37 = v38;
  if (**v32)
    v39 = v36;
  else
    v39 = v37;
  v40 = *a2;
  v41 = (unsigned int *)a2[1];
  v311 = (_BYTE **)a2[2];
  v302 = v30;
  v292 = v39;
  if ((v30 & 0x40000000) == 0)
  {
    v271 = 0;
    v42 = 0;
    v281 = 0;
    v289 = 0;
    v266 = 0;
    goto LABEL_126;
  }
  v43 = v41[3];
  if ((v43 & 0x80000000) != 0)
  {
    v45 = a1;
    v46 = a3;
    v47 = *(_DWORD *)(v40 + 2292);
    if (**v311)
      goto LABEL_65;
  }
  else
  {
    v44 = *(_QWORD *)(v40 + 2328);
    if (v43 >= (*(_QWORD *)(v40 + 2336) - v44) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v44 = *(_QWORD *)(v40 + 2328);
    }
    v45 = a1;
    v46 = a3;
    v47 = *(_DWORD *)(v44 + (v43 << 11) + 2012);
    if (**v311)
    {
LABEL_65:
      v48 = *a2;
      v49 = (_BYTE **)a2[2];
      v50 = *(unsigned int *)(a2[1] + 16);
      if ((v50 & 0x80000000) == 0)
        goto LABEL_66;
LABEL_93:
      v72 = *v49;
      v53 = *(_DWORD *)(v48 + 500);
      if (*v72)
        goto LABEL_70;
      goto LABEL_94;
    }
  }
  if ((v47 & 0x10000000) != 0)
    v71 = 0x40000000;
  else
    v71 = 0x80000000;
  if ((v47 & 0x20000000) != 0)
    v47 = v71;
  else
    v47 &= 0xCFFFFFFF;
  v48 = *a2;
  v49 = (_BYTE **)a2[2];
  v50 = *(unsigned int *)(a2[1] + 16);
  if ((v50 & 0x80000000) != 0)
    goto LABEL_93;
LABEL_66:
  v51 = *(_QWORD *)(v48 + 2328);
  if (v50 >= (*(_QWORD *)(v48 + 2336) - v51) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v51 = *(_QWORD *)(v48 + 2328);
  }
  v52 = *v49;
  v53 = *(_DWORD *)(v51 + (v50 << 11) + 220);
  if (*v52)
  {
LABEL_70:
    v54 = *a2;
    v55 = (_BYTE **)a2[2];
    v56 = *(unsigned int *)(a2[1] + 12);
    if ((v56 & 0x80000000) == 0)
      goto LABEL_71;
LABEL_101:
    v74 = *v55;
    v59 = *(_DWORD *)(v54 + 2324);
    if (*v74)
      goto LABEL_75;
    goto LABEL_102;
  }
LABEL_94:
  if ((v53 & 0x10000000) != 0)
    v73 = 0x40000000;
  else
    v73 = 0x80000000;
  if ((v53 & 0x20000000) != 0)
    v53 = v73;
  else
    v53 &= 0xCFFFFFFF;
  v54 = *a2;
  v55 = (_BYTE **)a2[2];
  v56 = *(unsigned int *)(a2[1] + 12);
  if ((v56 & 0x80000000) != 0)
    goto LABEL_101;
LABEL_71:
  v57 = *(_QWORD *)(v54 + 2328);
  if (v56 >= (*(_QWORD *)(v54 + 2336) - v57) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v57 = *(_QWORD *)(v54 + 2328);
  }
  v58 = *v55;
  v59 = *(_DWORD *)(v57 + (v56 << 11) + 2044);
  if (*v58)
  {
LABEL_75:
    v60 = *a2;
    v61 = (_BYTE **)a2[2];
    v62 = *(unsigned int *)(a2[1] + 16);
    if ((v62 & 0x80000000) == 0)
      goto LABEL_76;
LABEL_109:
    v76 = *v61;
    v65 = *(_DWORD *)(v60 + 532);
    if (*v76)
      goto LABEL_80;
LABEL_110:
    if ((v65 & 0x10000000) != 0)
      v77 = 0x40000000;
    else
      v77 = 0x80000000;
    if ((v65 & 0x20000000) != 0)
      v65 = v77;
    else
      v65 &= 0xCFFFFFFF;
    v66 = *a2;
    v67 = (_BYTE **)a2[2];
    v68 = *(unsigned int *)(a2[1] + 24);
    if ((v68 & 0x80000000) == 0)
      goto LABEL_81;
    goto LABEL_117;
  }
LABEL_102:
  if ((v59 & 0x10000000) != 0)
    v75 = 0x40000000;
  else
    v75 = 0x80000000;
  if ((v59 & 0x20000000) != 0)
    v59 = v75;
  else
    v59 &= 0xCFFFFFFF;
  v60 = *a2;
  v61 = (_BYTE **)a2[2];
  v62 = *(unsigned int *)(a2[1] + 16);
  if ((v62 & 0x80000000) != 0)
    goto LABEL_109;
LABEL_76:
  v63 = *(_QWORD *)(v60 + 2328);
  if (v62 >= (*(_QWORD *)(v60 + 2336) - v63) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v63 = *(_QWORD *)(v60 + 2328);
  }
  v64 = *v61;
  v65 = *(_DWORD *)(v63 + (v62 << 11) + 252);
  if (!*v64)
    goto LABEL_110;
LABEL_80:
  v66 = *a2;
  v67 = (_BYTE **)a2[2];
  v68 = *(unsigned int *)(a2[1] + 24);
  if ((v68 & 0x80000000) == 0)
  {
LABEL_81:
    v69 = *(_QWORD *)(v66 + 2328);
    if (v68 >= (*(_QWORD *)(v66 + 2336) - v69) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_788;
      }
      v69 = *(_QWORD *)(v66 + 2328);
    }
    v70 = v69 + (v68 << 11);
    goto LABEL_118;
  }
LABEL_117:
  v70 = v66 + 280;
LABEL_118:
  v266 = (v47 >> 30) & 1;
  v289 = (v53 >> 30) & 1;
  v281 = (v59 >> 30) & 1;
  v42 = (v65 >> 30) & 1;
  v78 = *(_DWORD *)(v70 + 1820);
  if (!**v67)
  {
    if ((v78 & 0x10000000) != 0)
      v79 = 0x40000000;
    else
      v79 = 0x80000000;
    if ((v78 & 0x20000000) != 0)
      v78 = v79;
    else
      v78 &= 0xCFFFFFFF;
  }
  v271 = (v78 >> 30) & 1;
  v40 = *a2;
  v41 = (unsigned int *)a2[1];
  v311 = (_BYTE **)a2[2];
  a3 = v46;
  a1 = v45;
LABEL_126:
  v80 = a1;
  v81 = *(_BYTE ***)a1;
  v275 = v80;
  v82 = (_DWORD *)*((_QWORD *)v80 + 2);
  v83 = a3[3];
  v319 = a3[2];
  v320 = v83;
  v321 = a3[4];
  v84 = *((float32x4_t *)a3 + 1);
  v317 = *a3;
  v318 = v84;
  v85 = v41[12];
  if ((v85 & 0x80000000) != 0)
  {
    v87 = *(_DWORD *)(v40 + 2268);
    v88 = **v311;
    if (**v311)
      goto LABEL_137;
    goto LABEL_131;
  }
  v86 = *(_QWORD *)(v40 + 2328);
  if (v85 >= (*(_QWORD *)(v40 + 2336) - v86) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v86 = *(_QWORD *)(v40 + 2328);
  }
  v87 = *(_DWORD *)(v86 + (v85 << 11) + 1988);
  v88 = **v311;
  if (!**v311)
  {
LABEL_131:
    if ((v87 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v87 & 0x20000000) != 0)
      v87 = v89;
    else
      v87 &= 0xCFFFFFFF;
  }
LABEL_137:
  v90 = v82[49];
  if (**v81)
  {
    v91 = v41[12];
    if ((v91 & 0x80000000) == 0)
      goto LABEL_139;
LABEL_593:
    v93 = *(_DWORD *)(v40 + 2300);
    if (v88)
      goto LABEL_149;
    goto LABEL_143;
  }
  if ((v90 & 0x10000000) != 0)
    v229 = 0x40000000;
  else
    v229 = 0x80000000;
  if ((v90 & 0x20000000) != 0)
    v90 = v229;
  else
    v90 &= 0xCFFFFFFF;
  v91 = v41[12];
  if ((v91 & 0x80000000) != 0)
    goto LABEL_593;
LABEL_139:
  v92 = *(_QWORD *)(v40 + 2328);
  if (v91 >= (*(_QWORD *)(v40 + 2336) - v92) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_788;
    }
    v92 = *(_QWORD *)(v40 + 2328);
    v88 = **v311;
  }
  v93 = *(_DWORD *)(v92 + (v91 << 11) + 2020);
  if (!v88)
  {
LABEL_143:
    if ((v93 & 0x10000000) != 0)
      v94 = 0x40000000;
    else
      v94 = 0x80000000;
    if ((v93 & 0x20000000) != 0)
      v93 = v94;
    else
      v93 &= 0xCFFFFFFF;
  }
LABEL_149:
  v274 = a3;
  v308 = v82[57];
  if (**v81)
  {
    v95 = v41[15];
    if ((v95 & 0x80000000) == 0)
      goto LABEL_151;
LABEL_601:
    v268 = v298 >> 30;
    v97 = *(_DWORD *)(v40 + 2076);
    if (v88)
      goto LABEL_161;
    goto LABEL_155;
  }
  v230 = v308 & 0xCFFFFFFF;
  if ((v308 & 0x10000000) != 0)
    v231 = 0x40000000;
  else
    v231 = 0x80000000;
  if ((v308 & 0x20000000) != 0)
    v230 = v231;
  v308 = v230;
  v95 = v41[15];
  if ((v95 & 0x80000000) != 0)
    goto LABEL_601;
LABEL_151:
  v96 = *(_QWORD *)(v40 + 2328);
  if (v95 < (*(_QWORD *)(v40 + 2336) - v96) >> 11)
    goto LABEL_154;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
LABEL_788:
    abort();
  }
  v96 = *(_QWORD *)(v40 + 2328);
  v88 = **v311;
LABEL_154:
  v268 = v298 >> 30;
  v97 = *(_DWORD *)(v96 + (v95 << 11) + 1796);
  if (v88)
    goto LABEL_161;
LABEL_155:
  if ((v97 & 0x10000000) != 0)
    v98 = 0x40000000;
  else
    v98 = 0x80000000;
  if ((v97 & 0x20000000) != 0)
    v97 = v98;
  else
    v97 &= 0xCFFFFFFF;
LABEL_161:
  v276 = v87 >> 30;
  v278 = v295 >> 30;
  v99 = v292 >> 30;
  v296 = v93 >> 30;
  v299 = v90 >> 30;
  v284 = v97 >> 30;
  v286 = v305 >> 30;
  v329 = v319;
  v330 = v320;
  v331 = v321;
  v327 = v317;
  v328 = v318;
  if ((v302 & 0x40000000) != 0)
  {
    v379 = v319;
    v380 = v320;
    v381 = v321;
    v378 = v318;
    v377 = v317;
    *(_QWORD *)&v427 = 0x10100D0D10100D0DLL;
    v372 = xmmword_224673440;
    v373 = xmmword_224673450;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 0, 7, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x7800000038), xmmword_224673450);
    if (!v42)
    {
      v374 = v319;
      v375 = v320;
      v376 = v321;
      *(_QWORD *)&v422 = 0x707101004040D0DLL;
      v373 = v318;
      v372 = v317;
      v427 = xmmword_224673460;
      v428 = xmmword_224673470;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 0, 7, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x7800000038), xmmword_224673470);
      if (!(v289 | ((v305 & 0x40000000) != 0)))
      {
        v429 = v319;
        v430 = v320;
        v431 = v321;
        v427 = v317;
        v428 = v318;
        *(_QWORD *)&v417 = 0x40404040D0D0D0DLL;
        v422 = xmmword_224673480;
        v423 = xmmword_224673490;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 0, 7, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x7800000038), xmmword_224673490);
        v100 = (v268 & 1) == 0 && (v281 | v278 & 1) == 0;
        if (!v266 && v100)
        {
          v424 = v319;
          v425 = v320;
          v426 = v321;
          v423 = v318;
          v422 = v317;
          *(_QWORD *)&v412 = 0x3040C0D03040C0DLL;
          v417 = xmmword_2246734A0;
          v418 = xmmword_2246734B0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 0, 7, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1F800000038), xmmword_2246734B0);
        }
      }
      if (v271)
        v101 = 0;
      else
        v101 = (v281 | v278 & 1) == 0;
      if (v101 && (v292 & 0x40000000) == 0)
      {
        v419 = v329;
        v420 = v330;
        v421 = v331;
        v418 = v328;
        v417 = v327;
        *(_QWORD *)&v407 = 0x60703040F100C0DLL;
        v412 = xmmword_2246734C0;
        v413 = xmmword_2246734D0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 0, 7, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1F800000038), xmmword_2246734D0);
      }
    }
    if (((v286 | v299) & 1) == 0)
    {
      v414 = v329;
      v415 = v330;
      v416 = v331;
      v413 = v328;
      v412 = v327;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_2246734E0;
      v408 = xmmword_2246734F0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 0, 7, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x7800000038), xmmword_2246734F0);
      v102 = (v87 & 0x40000000) == 0 && ((v278 | v296) & 1) == 0;
      if ((v268 & 1) == 0 && v102)
      {
        v409 = v329;
        v410 = v330;
        v411 = v331;
        v408 = v328;
        v407 = v327;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224673500;
        v403 = xmmword_224673510;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 0, 7, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1F800000038), xmmword_224673510);
      }
    }
    v103 = (v292 & 0x40000000) == 0 && ((v278 | v296) & 1) == 0;
    if (v103 && (v284 & 1) == 0)
    {
      v404 = v329;
      v405 = v330;
      v406 = v331;
      v403 = v328;
      v402 = v327;
      *(_QWORD *)&v392 = 0xF100F100C0D0C0DLL;
      v397 = xmmword_224673520;
      v398 = xmmword_224673530;
      *(_QWORD *)&v387 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 0, 7, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v387, COERCE_DOUBLE(0x1F800000038), xmmword_224673530);
    }
  }
  v324 = v319;
  v325 = v320;
  v326 = v321;
  v322 = v317;
  v323 = v318;
  v104 = v41[12];
  if ((v104 & 0x80000000) != 0)
  {
    v106 = *(_DWORD *)(v40 + 2272);
    v107 = **v311;
    if (**v311)
      goto LABEL_200;
    goto LABEL_194;
  }
  v105 = *(_QWORD *)(v40 + 2328);
  if (v104 >= (*(_QWORD *)(v40 + 2336) - v105) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v105 = *(_QWORD *)(v40 + 2328);
  }
  v106 = *(_DWORD *)(v105 + (v104 << 11) + 1992);
  v107 = **v311;
  if (!**v311)
  {
LABEL_194:
    if ((v106 & 0x10000000) != 0)
      v108 = 0x40000000;
    else
      v108 = 0x80000000;
    if ((v106 & 0x20000000) != 0)
      v106 = v108;
    else
      v106 &= 0xCFFFFFFF;
  }
LABEL_200:
  v109 = v82[50];
  if (**v81)
  {
    v110 = v41[12];
    if ((v110 & 0x80000000) == 0)
      goto LABEL_202;
LABEL_612:
    v112 = *(_DWORD *)(v40 + 2304);
    if (v107)
      goto LABEL_212;
    goto LABEL_206;
  }
  if ((v109 & 0x10000000) != 0)
    v232 = 0x40000000;
  else
    v232 = 0x80000000;
  if ((v109 & 0x20000000) != 0)
    v109 = v232;
  else
    v109 &= 0xCFFFFFFF;
  v110 = v41[12];
  if ((v110 & 0x80000000) != 0)
    goto LABEL_612;
LABEL_202:
  v111 = *(_QWORD *)(v40 + 2328);
  if (v110 >= (*(_QWORD *)(v40 + 2336) - v111) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v111 = *(_QWORD *)(v40 + 2328);
    v107 = **v311;
  }
  v112 = *(_DWORD *)(v111 + (v110 << 11) + 2024);
  if (!v107)
  {
LABEL_206:
    if ((v112 & 0x10000000) != 0)
      v113 = 0x40000000;
    else
      v113 = 0x80000000;
    if ((v112 & 0x20000000) != 0)
      v112 = v113;
    else
      v112 &= 0xCFFFFFFF;
  }
LABEL_212:
  v306 = v82[58];
  if (**v81)
  {
    v114 = v41[15];
    if ((v114 & 0x80000000) == 0)
      goto LABEL_214;
LABEL_620:
    v116 = *(_DWORD *)(v40 + 2080);
    if (v107)
      goto LABEL_224;
    goto LABEL_218;
  }
  v233 = v306 & 0xCFFFFFFF;
  if ((v306 & 0x10000000) != 0)
    v234 = 0x40000000;
  else
    v234 = 0x80000000;
  if ((v306 & 0x20000000) != 0)
    v233 = v234;
  v306 = v233;
  v114 = v41[15];
  if ((v114 & 0x80000000) != 0)
    goto LABEL_620;
LABEL_214:
  v115 = *(_QWORD *)(v40 + 2328);
  if (v114 >= (*(_QWORD *)(v40 + 2336) - v115) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v115 = *(_QWORD *)(v40 + 2328);
    v107 = **v311;
  }
  v116 = *(_DWORD *)(v115 + (v114 << 11) + 1800);
  if (!v107)
  {
LABEL_218:
    if ((v116 & 0x10000000) != 0)
      v117 = 0x40000000;
    else
      v117 = 0x80000000;
    if ((v116 & 0x20000000) != 0)
      v116 = v117;
    else
      v116 &= 0xCFFFFFFF;
  }
LABEL_224:
  v272 = v106 >> 30;
  v290 = v112 >> 30;
  v293 = v109 >> 30;
  v282 = v116 >> 30;
  v339 = v319;
  v340 = v320;
  v341 = v321;
  v337 = v317;
  v338 = v318;
  if ((v308 & 0x40000000) != 0)
  {
    v379 = v319;
    v380 = v320;
    v381 = v321;
    v378 = v318;
    v377 = v317;
    *(_QWORD *)&v427 = 0x10100D0D10100D0DLL;
    v372 = xmmword_224673540;
    v373 = xmmword_224673550;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 1, 7, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x7900000039), xmmword_224673550);
    if ((v302 & 0x40000000) == 0)
    {
      v374 = v319;
      v375 = v320;
      v376 = v321;
      v373 = v318;
      v372 = v317;
      *(_QWORD *)&v422 = 0x101010100D0D0D0DLL;
      v427 = xmmword_224673560;
      v428 = xmmword_224673570;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 1, 7, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x7900000039), xmmword_224673570);
      if (((v286 | v299) & 1) == 0)
      {
        v429 = v319;
        v430 = v320;
        v431 = v321;
        v427 = v317;
        v428 = v318;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224673580;
        v423 = xmmword_224673590;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 1, 7, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x7900000039), xmmword_224673590);
        v118 = (v276 & 1) == 0 && ((v278 | v296) & 1) == 0;
        if ((v268 & 1) == 0 && v118)
        {
          v424 = v319;
          v425 = v320;
          v426 = v321;
          v423 = v318;
          v422 = v317;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_2246735A0;
          v418 = xmmword_2246735B0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 1, 7, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1F900000039), xmmword_2246735B0);
        }
      }
      v119 = (v99 & 1) == 0 && ((v278 | v296) & 1) == 0;
      if (v119 && (v284 & 1) == 0)
      {
        v419 = v339;
        v420 = v340;
        v421 = v341;
        v418 = v338;
        v417 = v337;
        *(_QWORD *)&v407 = 0xF100C0D0F100C0DLL;
        v412 = xmmword_2246735C0;
        v413 = xmmword_2246735D0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 1, 7, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1F900000039), xmmword_2246735D0);
      }
    }
    if (((v299 | v293) & 1) == 0)
    {
      v414 = v339;
      v415 = v340;
      v416 = v341;
      v413 = v338;
      v412 = v337;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_2246735E0;
      v408 = xmmword_2246735F0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 1, 7, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x7900000039), xmmword_2246735F0);
      v120 = (v106 & 0x40000000) == 0 && ((v296 | v290) & 1) == 0;
      if ((v276 & 1) == 0 && v120)
      {
        v409 = v339;
        v410 = v340;
        v411 = v341;
        v408 = v338;
        v407 = v337;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224673600;
        v403 = xmmword_224673610;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 1, 7, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1F900000039), xmmword_224673610);
      }
    }
    v121 = (v284 & 1) == 0 && ((v296 | v290) & 1) == 0;
    if (v121 && (v282 & 1) == 0)
    {
      v404 = v339;
      v405 = v340;
      v406 = v341;
      v403 = v338;
      v402 = v337;
      *(_QWORD *)&v392 = 0xF100F100C0D0C0DLL;
      v397 = xmmword_224673620;
      v398 = xmmword_224673630;
      *(_QWORD *)&v387 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 1, 7, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v387, COERCE_DOUBLE(0x1F900000039), xmmword_224673630);
    }
  }
  v334 = v324;
  v335 = v325;
  v336 = v326;
  v332 = v322;
  v333 = v323;
  v122 = v41[12];
  if ((v122 & 0x80000000) != 0)
  {
    v124 = *(_DWORD *)(v40 + 2276);
    v125 = **v311;
    if (**v311)
      goto LABEL_263;
    goto LABEL_257;
  }
  v123 = *(_QWORD *)(v40 + 2328);
  if (v122 >= (*(_QWORD *)(v40 + 2336) - v123) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v123 = *(_QWORD *)(v40 + 2328);
  }
  v124 = *(_DWORD *)(v123 + (v122 << 11) + 1996);
  v125 = **v311;
  if (!**v311)
  {
LABEL_257:
    if ((v124 & 0x10000000) != 0)
      v126 = 0x40000000;
    else
      v126 = 0x80000000;
    if ((v124 & 0x20000000) != 0)
      v124 = v126;
    else
      v124 &= 0xCFFFFFFF;
  }
LABEL_263:
  v127 = v82[51];
  if (**v81)
  {
    v128 = v41[12];
    if ((v128 & 0x80000000) == 0)
      goto LABEL_265;
LABEL_631:
    v130 = *(_DWORD *)(v40 + 2308);
    if (v125)
      goto LABEL_275;
    goto LABEL_269;
  }
  if ((v127 & 0x10000000) != 0)
    v235 = 0x40000000;
  else
    v235 = 0x80000000;
  if ((v127 & 0x20000000) != 0)
    v127 = v235;
  else
    v127 &= 0xCFFFFFFF;
  v128 = v41[12];
  if ((v128 & 0x80000000) != 0)
    goto LABEL_631;
LABEL_265:
  v129 = *(_QWORD *)(v40 + 2328);
  if (v128 >= (*(_QWORD *)(v40 + 2336) - v129) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v129 = *(_QWORD *)(v40 + 2328);
    v125 = **v311;
  }
  v130 = *(_DWORD *)(v129 + (v128 << 11) + 2028);
  if (!v125)
  {
LABEL_269:
    if ((v130 & 0x10000000) != 0)
      v131 = 0x40000000;
    else
      v131 = 0x80000000;
    if ((v130 & 0x20000000) != 0)
      v130 = v131;
    else
      v130 &= 0xCFFFFFFF;
  }
LABEL_275:
  v132 = v82[59];
  if (**v81)
  {
    v133 = v41[15];
    if ((v133 & 0x80000000) == 0)
      goto LABEL_277;
LABEL_640:
    v135 = *(_DWORD *)(v40 + 2084);
    if (v125)
      goto LABEL_287;
    goto LABEL_281;
  }
  if ((v132 & 0x10000000) != 0)
    v236 = 0x40000000;
  else
    v236 = 0x80000000;
  if ((v132 & 0x20000000) != 0)
    v132 = v236;
  else
    v132 &= 0xCFFFFFFF;
  v133 = v41[15];
  if ((v133 & 0x80000000) != 0)
    goto LABEL_640;
LABEL_277:
  v134 = *(_QWORD *)(v40 + 2328);
  if (v133 >= (*(_QWORD *)(v40 + 2336) - v134) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v134 = *(_QWORD *)(v40 + 2328);
    v125 = **v311;
  }
  v135 = *(_DWORD *)(v134 + (v133 << 11) + 1804);
  if (!v125)
  {
LABEL_281:
    if ((v135 & 0x10000000) != 0)
      v136 = 0x40000000;
    else
      v136 = 0x80000000;
    if ((v135 & 0x20000000) != 0)
      v135 = v136;
    else
      v135 &= 0xCFFFFFFF;
  }
LABEL_287:
  v269 = v124 >> 30;
  v303 = v127 >> 30;
  v287 = v130 >> 30;
  v279 = v135 >> 30;
  v349 = v324;
  v350 = v325;
  v351 = v326;
  v347 = v322;
  v348 = v323;
  if ((v306 & 0x40000000) != 0)
  {
    v379 = v324;
    v380 = v325;
    v381 = v326;
    v378 = v323;
    v377 = v322;
    *(_QWORD *)&v427 = 0x10100D0D10100D0DLL;
    v372 = xmmword_224673640;
    v373 = xmmword_224673650;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 2, 7, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x7A0000003ALL), xmmword_224673650);
    if ((v308 & 0x40000000) == 0)
    {
      v374 = v324;
      v375 = v325;
      v376 = v326;
      v373 = v323;
      v372 = v322;
      *(_QWORD *)&v422 = 0x101010100D0D0D0DLL;
      v427 = xmmword_224673660;
      v428 = xmmword_224673670;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 2, 7, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x7A0000003ALL), xmmword_224673670);
      if (((v299 | v293) & 1) == 0)
      {
        v429 = v324;
        v430 = v325;
        v431 = v326;
        v427 = v322;
        v428 = v323;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224673680;
        v423 = xmmword_224673690;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 2, 7, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x7A0000003ALL), xmmword_224673690);
        v137 = (v272 & 1) == 0 && ((v296 | v290) & 1) == 0;
        if ((v276 & 1) == 0 && v137)
        {
          v424 = v324;
          v425 = v325;
          v426 = v326;
          v423 = v323;
          v422 = v322;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_2246736A0;
          v418 = xmmword_2246736B0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 2, 7, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1FA0000003ALL), xmmword_2246736B0);
        }
      }
      v138 = (v284 & 1) == 0 && ((v296 | v290) & 1) == 0;
      if (v138 && (v282 & 1) == 0)
      {
        v419 = v349;
        v420 = v350;
        v421 = v351;
        v418 = v348;
        v417 = v347;
        *(_QWORD *)&v407 = 0xF100C0D0F100C0DLL;
        v412 = xmmword_2246736C0;
        v413 = xmmword_2246736D0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 2, 7, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1FA0000003ALL), xmmword_2246736D0);
      }
    }
    if (((v293 | v303) & 1) == 0)
    {
      v414 = v349;
      v415 = v350;
      v416 = v351;
      v413 = v348;
      v412 = v347;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_2246736E0;
      v408 = xmmword_2246736F0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 2, 7, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x7A0000003ALL), xmmword_2246736F0);
      v139 = (v124 & 0x40000000) == 0 && ((v290 | v287) & 1) == 0;
      if ((v272 & 1) == 0 && v139)
      {
        v409 = v349;
        v410 = v350;
        v411 = v351;
        v408 = v348;
        v407 = v347;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224673700;
        v403 = xmmword_224673710;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 2, 7, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1FA0000003ALL), xmmword_224673710);
      }
    }
    v140 = (v282 & 1) == 0 && ((v290 | v287) & 1) == 0;
    if (v140 && (v279 & 1) == 0)
    {
      v404 = v349;
      v405 = v350;
      v406 = v351;
      v403 = v348;
      v402 = v347;
      *(_QWORD *)&v392 = 0xF100F100C0D0C0DLL;
      v397 = xmmword_224673720;
      v398 = xmmword_224673730;
      *(_QWORD *)&v387 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 2, 7, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v387, COERCE_DOUBLE(0x1FA0000003ALL), xmmword_224673730);
    }
  }
  v344 = v334;
  v345 = v335;
  v346 = v336;
  v342 = v332;
  v343 = v333;
  v141 = v41[12];
  if ((v141 & 0x80000000) != 0)
  {
    v143 = *(_DWORD *)(v40 + 2280);
    v144 = **v311;
    if (**v311)
      goto LABEL_326;
    goto LABEL_320;
  }
  v142 = *(_QWORD *)(v40 + 2328);
  if (v141 >= (*(_QWORD *)(v40 + 2336) - v142) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v142 = *(_QWORD *)(v40 + 2328);
  }
  v143 = *(_DWORD *)(v142 + (v141 << 11) + 2000);
  v144 = **v311;
  if (!**v311)
  {
LABEL_320:
    if ((v143 & 0x10000000) != 0)
      v145 = 0x40000000;
    else
      v145 = 0x80000000;
    if ((v143 & 0x20000000) != 0)
      v143 = v145;
    else
      v143 &= 0xCFFFFFFF;
  }
LABEL_326:
  v146 = v82[52];
  if (**v81)
  {
    v147 = v41[12];
    if ((v147 & 0x80000000) == 0)
      goto LABEL_328;
LABEL_651:
    v149 = *(_DWORD *)(v40 + 2312);
    if (v144)
      goto LABEL_338;
    goto LABEL_332;
  }
  if ((v146 & 0x10000000) != 0)
    v237 = 0x40000000;
  else
    v237 = 0x80000000;
  if ((v146 & 0x20000000) != 0)
    v146 = v237;
  else
    v146 &= 0xCFFFFFFF;
  v147 = v41[12];
  if ((v147 & 0x80000000) != 0)
    goto LABEL_651;
LABEL_328:
  v148 = *(_QWORD *)(v40 + 2328);
  if (v147 >= (*(_QWORD *)(v40 + 2336) - v148) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v148 = *(_QWORD *)(v40 + 2328);
    v144 = **v311;
  }
  v149 = *(_DWORD *)(v148 + (v147 << 11) + 2032);
  if (!v144)
  {
LABEL_332:
    if ((v149 & 0x10000000) != 0)
      v150 = 0x40000000;
    else
      v150 = 0x80000000;
    if ((v149 & 0x20000000) != 0)
      v149 = v150;
    else
      v149 &= 0xCFFFFFFF;
  }
LABEL_338:
  v309 = v82[60];
  if (**v81)
  {
    v151 = v41[15];
    if ((v151 & 0x80000000) == 0)
      goto LABEL_340;
LABEL_659:
    v153 = *(_DWORD *)(v40 + 2088);
    if (v144)
      goto LABEL_350;
    goto LABEL_344;
  }
  v238 = v309 & 0xCFFFFFFF;
  if ((v309 & 0x10000000) != 0)
    v239 = 0x40000000;
  else
    v239 = 0x80000000;
  if ((v309 & 0x20000000) != 0)
    v238 = v239;
  v309 = v238;
  v151 = v41[15];
  if ((v151 & 0x80000000) != 0)
    goto LABEL_659;
LABEL_340:
  v152 = *(_QWORD *)(v40 + 2328);
  if (v151 >= (*(_QWORD *)(v40 + 2336) - v152) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v152 = *(_QWORD *)(v40 + 2328);
    v144 = **v311;
  }
  v153 = *(_DWORD *)(v152 + (v151 << 11) + 1808);
  if (!v144)
  {
LABEL_344:
    if ((v153 & 0x10000000) != 0)
      v154 = 0x40000000;
    else
      v154 = 0x80000000;
    if ((v153 & 0x20000000) != 0)
      v153 = v154;
    else
      v153 &= 0xCFFFFFFF;
  }
LABEL_350:
  v267 = v143 >> 30;
  v297 = v149 >> 30;
  v300 = v146 >> 30;
  v277 = v153 >> 30;
  v359 = v334;
  v360 = v335;
  v361 = v336;
  v357 = v332;
  v358 = v333;
  if ((v132 & 0x40000000) != 0)
  {
    v379 = v334;
    v380 = v335;
    v381 = v336;
    v378 = v333;
    v377 = v332;
    *(_QWORD *)&v427 = 0x10100D0D10100D0DLL;
    v372 = xmmword_224673740;
    v373 = xmmword_224673750;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 3, 7, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x7B0000003BLL), xmmword_224673750);
    if ((v306 & 0x40000000) == 0)
    {
      v374 = v334;
      v375 = v335;
      v376 = v336;
      v373 = v333;
      v372 = v332;
      *(_QWORD *)&v422 = 0x101010100D0D0D0DLL;
      v427 = xmmword_224673760;
      v428 = xmmword_224673770;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 3, 7, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x7B0000003BLL), xmmword_224673770);
      if (((v293 | v303) & 1) == 0)
      {
        v429 = v334;
        v430 = v335;
        v431 = v336;
        v427 = v332;
        v428 = v333;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224673780;
        v423 = xmmword_224673790;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 3, 7, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x7B0000003BLL), xmmword_224673790);
        v155 = (v269 & 1) == 0 && ((v290 | v287) & 1) == 0;
        if ((v272 & 1) == 0 && v155)
        {
          v424 = v334;
          v425 = v335;
          v426 = v336;
          v423 = v333;
          v422 = v332;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_2246737A0;
          v418 = xmmword_2246737B0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 3, 7, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1FB0000003BLL), xmmword_2246737B0);
        }
      }
      v156 = (v282 & 1) == 0 && ((v290 | v287) & 1) == 0;
      if (v156 && (v279 & 1) == 0)
      {
        v419 = v359;
        v420 = v360;
        v421 = v361;
        v418 = v358;
        v417 = v357;
        *(_QWORD *)&v407 = 0xF100C0D0F100C0DLL;
        v412 = xmmword_2246737C0;
        v413 = xmmword_2246737D0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 3, 7, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1FB0000003BLL), xmmword_2246737D0);
      }
    }
    if (((v303 | v300) & 1) == 0)
    {
      v414 = v359;
      v415 = v360;
      v416 = v361;
      v413 = v358;
      v412 = v357;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_2246737E0;
      v408 = xmmword_2246737F0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 3, 7, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x7B0000003BLL), xmmword_2246737F0);
      v157 = (v143 & 0x40000000) == 0 && ((v287 | v297) & 1) == 0;
      if ((v269 & 1) == 0 && v157)
      {
        v409 = v359;
        v410 = v360;
        v411 = v361;
        v408 = v358;
        v407 = v357;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224673800;
        v403 = xmmword_224673810;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 3, 7, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1FB0000003BLL), xmmword_224673810);
      }
    }
    v158 = (v279 & 1) == 0 && ((v287 | v297) & 1) == 0;
    if (v158 && (v277 & 1) == 0)
    {
      v404 = v359;
      v405 = v360;
      v406 = v361;
      v403 = v358;
      v402 = v357;
      *(_QWORD *)&v392 = 0xF100F100C0D0C0DLL;
      v397 = xmmword_224673820;
      v398 = xmmword_224673830;
      *(_QWORD *)&v387 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 3, 7, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v387, COERCE_DOUBLE(0x1FB0000003BLL), xmmword_224673830);
    }
  }
  v354 = v344;
  v355 = v345;
  v356 = v346;
  v352 = v342;
  v353 = v343;
  v159 = v41[12];
  if ((v159 & 0x80000000) != 0)
  {
    v161 = *(_DWORD *)(v40 + 2284);
    v162 = **v311;
    if (**v311)
      goto LABEL_389;
    goto LABEL_383;
  }
  v160 = *(_QWORD *)(v40 + 2328);
  if (v159 >= (*(_QWORD *)(v40 + 2336) - v160) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v160 = *(_QWORD *)(v40 + 2328);
  }
  v161 = *(_DWORD *)(v160 + (v159 << 11) + 2004);
  v162 = **v311;
  if (!**v311)
  {
LABEL_383:
    if ((v161 & 0x10000000) != 0)
      v163 = 0x40000000;
    else
      v163 = 0x80000000;
    if ((v161 & 0x20000000) != 0)
      v161 = v163;
    else
      v161 &= 0xCFFFFFFF;
  }
LABEL_389:
  v164 = v82[53];
  if (**v81)
  {
    v165 = v41[12];
    if ((v165 & 0x80000000) == 0)
      goto LABEL_391;
LABEL_670:
    v167 = *(_DWORD *)(v40 + 2316);
    if (v162)
      goto LABEL_401;
    goto LABEL_395;
  }
  if ((v164 & 0x10000000) != 0)
    v240 = 0x40000000;
  else
    v240 = 0x80000000;
  if ((v164 & 0x20000000) != 0)
    v164 = v240;
  else
    v164 &= 0xCFFFFFFF;
  v165 = v41[12];
  if ((v165 & 0x80000000) != 0)
    goto LABEL_670;
LABEL_391:
  v166 = *(_QWORD *)(v40 + 2328);
  if (v165 >= (*(_QWORD *)(v40 + 2336) - v166) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v166 = *(_QWORD *)(v40 + 2328);
    v162 = **v311;
  }
  v167 = *(_DWORD *)(v166 + (v165 << 11) + 2036);
  if (!v162)
  {
LABEL_395:
    if ((v167 & 0x10000000) != 0)
      v168 = 0x40000000;
    else
      v168 = 0x80000000;
    if ((v167 & 0x20000000) != 0)
      v167 = v168;
    else
      v167 &= 0xCFFFFFFF;
  }
LABEL_401:
  v307 = v82[61];
  if (**v81)
  {
    v169 = v41[15];
    if ((v169 & 0x80000000) == 0)
      goto LABEL_403;
LABEL_678:
    v171 = *(_DWORD *)(v40 + 2092);
    if (v162)
      goto LABEL_413;
    goto LABEL_407;
  }
  v241 = v307 & 0xCFFFFFFF;
  if ((v307 & 0x10000000) != 0)
    v242 = 0x40000000;
  else
    v242 = 0x80000000;
  if ((v307 & 0x20000000) != 0)
    v241 = v242;
  v307 = v241;
  v169 = v41[15];
  if ((v169 & 0x80000000) != 0)
    goto LABEL_678;
LABEL_403:
  v170 = *(_QWORD *)(v40 + 2328);
  if (v169 >= (*(_QWORD *)(v40 + 2336) - v170) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v170 = *(_QWORD *)(v40 + 2328);
    v162 = **v311;
  }
  v171 = *(_DWORD *)(v170 + (v169 << 11) + 1812);
  if (!v162)
  {
LABEL_407:
    if ((v171 & 0x10000000) != 0)
      v172 = 0x40000000;
    else
      v172 = 0x80000000;
    if ((v171 & 0x20000000) != 0)
      v171 = v172;
    else
      v171 &= 0xCFFFFFFF;
  }
LABEL_413:
  v273 = v161 >> 30;
  v291 = v167 >> 30;
  v294 = v164 >> 30;
  v283 = v171 >> 30;
  v369 = v344;
  v370 = v345;
  v371 = v346;
  v368 = v343;
  v367 = v342;
  if ((v309 & 0x40000000) != 0)
  {
    v379 = v344;
    v380 = v345;
    v381 = v346;
    v378 = v343;
    v377 = v342;
    *(_QWORD *)&v427 = 0x10100D0D10100D0DLL;
    v372 = xmmword_224673840;
    v373 = xmmword_224673850;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 4, 7, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x7C0000003CLL), xmmword_224673850);
    if ((v132 & 0x40000000) == 0)
    {
      v374 = v344;
      v375 = v345;
      v376 = v346;
      v373 = v343;
      v372 = v342;
      *(_QWORD *)&v422 = 0x101010100D0D0D0DLL;
      v427 = xmmword_224673860;
      v428 = xmmword_224673870;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 4, 7, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x7C0000003CLL), xmmword_224673870);
      if (((v303 | v300) & 1) == 0)
      {
        v429 = v344;
        v430 = v345;
        v431 = v346;
        v427 = v342;
        v428 = v343;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224673880;
        v423 = xmmword_224673890;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 4, 7, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x7C0000003CLL), xmmword_224673890);
        v173 = (v267 & 1) == 0 && ((v287 | v297) & 1) == 0;
        if ((v269 & 1) == 0 && v173)
        {
          v424 = v344;
          v425 = v345;
          v426 = v346;
          v423 = v343;
          v422 = v342;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_2246738A0;
          v418 = xmmword_2246738B0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 4, 7, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1FC0000003CLL), xmmword_2246738B0);
        }
      }
      v174 = (v279 & 1) == 0 && ((v287 | v297) & 1) == 0;
      if (v174 && (v277 & 1) == 0)
      {
        v419 = v369;
        v420 = v370;
        v421 = v371;
        v418 = v368;
        v417 = v367;
        *(_QWORD *)&v407 = 0xF100C0D0F100C0DLL;
        v412 = xmmword_2246738C0;
        v413 = xmmword_2246738D0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 4, 7, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1FC0000003CLL), xmmword_2246738D0);
      }
    }
    if (((v300 | v294) & 1) == 0)
    {
      v414 = v369;
      v415 = v370;
      v416 = v371;
      v413 = v368;
      v412 = v367;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_2246738E0;
      v408 = xmmword_2246738F0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 4, 7, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x7C0000003CLL), xmmword_2246738F0);
      v175 = (v161 & 0x40000000) == 0 && ((v297 | v291) & 1) == 0;
      if ((v267 & 1) == 0 && v175)
      {
        v409 = v369;
        v410 = v370;
        v411 = v371;
        v408 = v368;
        v407 = v367;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224673900;
        v403 = xmmword_224673910;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 4, 7, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1FC0000003CLL), xmmword_224673910);
      }
    }
    v176 = (v277 & 1) == 0 && ((v297 | v291) & 1) == 0;
    if (v176 && (v283 & 1) == 0)
    {
      v404 = v369;
      v405 = v370;
      v406 = v371;
      v403 = v368;
      v402 = v367;
      *(_QWORD *)&v392 = 0xF100F100C0D0C0DLL;
      v397 = xmmword_224673920;
      v398 = xmmword_224673930;
      *(_QWORD *)&v387 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 4, 7, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v387, COERCE_DOUBLE(0x1FC0000003CLL), xmmword_224673930);
    }
  }
  v364 = v354;
  v365 = v355;
  v366 = v356;
  v362 = v352;
  v363 = v353;
  v177 = v41[12];
  if ((v177 & 0x80000000) != 0)
  {
    v179 = *(_DWORD *)(v40 + 2288);
    v180 = **v311;
    if (**v311)
      goto LABEL_452;
    goto LABEL_446;
  }
  v178 = *(_QWORD *)(v40 + 2328);
  if (v177 >= (*(_QWORD *)(v40 + 2336) - v178) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v178 = *(_QWORD *)(v40 + 2328);
  }
  v179 = *(_DWORD *)(v178 + (v177 << 11) + 2008);
  v180 = **v311;
  if (!**v311)
  {
LABEL_446:
    if ((v179 & 0x10000000) != 0)
      v181 = 0x40000000;
    else
      v181 = 0x80000000;
    if ((v179 & 0x20000000) != 0)
      v179 = v181;
    else
      v179 &= 0xCFFFFFFF;
  }
LABEL_452:
  v182 = v82[54];
  if (**v81)
  {
    v183 = v41[12];
    if ((v183 & 0x80000000) == 0)
      goto LABEL_454;
LABEL_689:
    v185 = *(_DWORD *)(v40 + 2320);
    if (v180)
      goto LABEL_464;
    goto LABEL_458;
  }
  if ((v182 & 0x10000000) != 0)
    v243 = 0x40000000;
  else
    v243 = 0x80000000;
  if ((v182 & 0x20000000) != 0)
    v182 = v243;
  else
    v182 &= 0xCFFFFFFF;
  v183 = v41[12];
  if ((v183 & 0x80000000) != 0)
    goto LABEL_689;
LABEL_454:
  v184 = *(_QWORD *)(v40 + 2328);
  if (v183 >= (*(_QWORD *)(v40 + 2336) - v184) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v184 = *(_QWORD *)(v40 + 2328);
    v180 = **v311;
  }
  v185 = *(_DWORD *)(v184 + (v183 << 11) + 2040);
  if (!v180)
  {
LABEL_458:
    if ((v185 & 0x10000000) != 0)
      v186 = 0x40000000;
    else
      v186 = 0x80000000;
    if ((v185 & 0x20000000) != 0)
      v185 = v186;
    else
      v185 &= 0xCFFFFFFF;
  }
LABEL_464:
  v304 = v82[62];
  if (**v81)
  {
    v187 = v41[15];
    if ((v187 & 0x80000000) == 0)
      goto LABEL_466;
LABEL_697:
    v189 = *(_DWORD *)(v40 + 2096);
    if (v180)
      goto LABEL_476;
    goto LABEL_470;
  }
  v244 = v304 & 0xCFFFFFFF;
  if ((v304 & 0x10000000) != 0)
    v245 = 0x40000000;
  else
    v245 = 0x80000000;
  if ((v304 & 0x20000000) != 0)
    v244 = v245;
  v304 = v244;
  v187 = v41[15];
  if ((v187 & 0x80000000) != 0)
    goto LABEL_697;
LABEL_466:
  v188 = *(_QWORD *)(v40 + 2328);
  if (v187 >= (*(_QWORD *)(v40 + 2336) - v188) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v188 = *(_QWORD *)(v40 + 2328);
    v180 = **v311;
  }
  v189 = *(_DWORD *)(v188 + (v187 << 11) + 1816);
  if (!v180)
  {
LABEL_470:
    if ((v189 & 0x10000000) != 0)
      v190 = 0x40000000;
    else
      v190 = 0x80000000;
    if ((v189 & 0x20000000) != 0)
      v189 = v190;
    else
      v189 &= 0xCFFFFFFF;
  }
LABEL_476:
  v270 = v179 >> 30;
  v285 = v185 >> 30;
  v288 = v182 >> 30;
  v280 = v189 >> 30;
  v389 = v354;
  v390 = v355;
  v391 = v356;
  v388 = v353;
  v387 = v352;
  if ((v307 & 0x40000000) != 0)
  {
    v379 = v354;
    v380 = v355;
    v381 = v356;
    v378 = v353;
    v377 = v352;
    *(_QWORD *)&v427 = 0x10100D0D10100D0DLL;
    v372 = xmmword_224673940;
    v373 = xmmword_224673950;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 5, 7, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x7D0000003DLL), xmmword_224673950);
    if ((v309 & 0x40000000) == 0)
    {
      v374 = v354;
      v375 = v355;
      v376 = v356;
      v373 = v353;
      v372 = v352;
      *(_QWORD *)&v422 = 0x101010100D0D0D0DLL;
      v427 = xmmword_224673960;
      v428 = xmmword_224673970;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 5, 7, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x7D0000003DLL), xmmword_224673970);
      if (((v300 | v294) & 1) == 0)
      {
        v429 = v354;
        v430 = v355;
        v431 = v356;
        v427 = v352;
        v428 = v353;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224673980;
        v423 = xmmword_224673990;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 5, 7, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x7D0000003DLL), xmmword_224673990);
        v191 = (v273 & 1) == 0 && ((v297 | v291) & 1) == 0;
        if ((v267 & 1) == 0 && v191)
        {
          v424 = v354;
          v425 = v355;
          v426 = v356;
          v423 = v353;
          v422 = v352;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_2246739A0;
          v418 = xmmword_2246739B0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 5, 7, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1FD0000003DLL), xmmword_2246739B0);
        }
      }
      v192 = (v277 & 1) == 0 && ((v297 | v291) & 1) == 0;
      if (v192 && (v283 & 1) == 0)
      {
        v419 = v389;
        v420 = v390;
        v421 = v391;
        v418 = v388;
        v417 = v387;
        *(_QWORD *)&v407 = 0xF100C0D0F100C0DLL;
        v412 = xmmword_2246739C0;
        v413 = xmmword_2246739D0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 5, 7, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1FD0000003DLL), xmmword_2246739D0);
      }
    }
    if (((v294 | v288) & 1) == 0)
    {
      v414 = v389;
      v415 = v390;
      v416 = v391;
      v413 = v388;
      v412 = v387;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_2246739E0;
      v408 = xmmword_2246739F0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 5, 7, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x7D0000003DLL), xmmword_2246739F0);
      v193 = (v179 & 0x40000000) == 0 && ((v291 | v285) & 1) == 0;
      if ((v273 & 1) == 0 && v193)
      {
        v409 = v389;
        v410 = v390;
        v411 = v391;
        v408 = v388;
        v407 = v387;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224673A00;
        v403 = xmmword_224673A10;
        *(_QWORD *)&v392 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 5, 7, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)&v392, COERCE_DOUBLE(0x1FD0000003DLL), xmmword_224673A10);
      }
    }
    v194 = (v283 & 1) == 0 && ((v291 | v285) & 1) == 0;
    if (v194 && (v280 & 1) == 0)
    {
      v404 = v389;
      v405 = v390;
      v406 = v391;
      v403 = v388;
      v402 = v387;
      *(_QWORD *)&v392 = 0xF100F100C0D0C0DLL;
      v397 = xmmword_224673A20;
      v398 = xmmword_224673A30;
      *(_QWORD *)&v382 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 5, 7, 0, (uint64_t)&v392, (uint64_t)&v397, (uint64_t)&v382, COERCE_DOUBLE(0x1FD0000003DLL), xmmword_224673A30);
    }
  }
  v384 = v364;
  v385 = v365;
  v386 = v366;
  v383 = v363;
  v382 = v362;
  v195 = v41[12];
  if ((v195 & 0x80000000) != 0)
  {
    v197 = *(_DWORD *)(v40 + 2292);
    v198 = **v311;
    if (**v311)
      goto LABEL_515;
    goto LABEL_509;
  }
  v196 = *(_QWORD *)(v40 + 2328);
  if (v195 >= (*(_QWORD *)(v40 + 2336) - v196) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v196 = *(_QWORD *)(v40 + 2328);
  }
  v197 = *(_DWORD *)(v196 + (v195 << 11) + 2012);
  v198 = **v311;
  if (!**v311)
  {
LABEL_509:
    if ((v197 & 0x10000000) != 0)
      v199 = 0x40000000;
    else
      v199 = 0x80000000;
    if ((v197 & 0x20000000) != 0)
      v197 = v199;
    else
      v197 &= 0xCFFFFFFF;
  }
LABEL_515:
  v200 = v82[55];
  if (**v81)
  {
    v201 = v41[12];
    if ((v201 & 0x80000000) == 0)
      goto LABEL_517;
LABEL_708:
    v203 = *(_DWORD *)(v40 + 2324);
    if (v198)
      goto LABEL_527;
    goto LABEL_521;
  }
  if ((v200 & 0x10000000) != 0)
    v246 = 0x40000000;
  else
    v246 = 0x80000000;
  if ((v200 & 0x20000000) != 0)
    v200 = v246;
  else
    v200 &= 0xCFFFFFFF;
  v201 = v41[12];
  if ((v201 & 0x80000000) != 0)
    goto LABEL_708;
LABEL_517:
  v202 = *(_QWORD *)(v40 + 2328);
  if (v201 >= (*(_QWORD *)(v40 + 2336) - v202) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v202 = *(_QWORD *)(v40 + 2328);
    v198 = **v311;
  }
  v203 = *(_DWORD *)(v202 + (v201 << 11) + 2044);
  if (!v198)
  {
LABEL_521:
    if ((v203 & 0x10000000) != 0)
      v204 = 0x40000000;
    else
      v204 = 0x80000000;
    if ((v203 & 0x20000000) != 0)
      v203 = v204;
    else
      v203 &= 0xCFFFFFFF;
  }
LABEL_527:
  v205 = v82[63];
  if (**v81)
  {
    v206 = v41[15];
    if ((v206 & 0x80000000) == 0)
      goto LABEL_529;
LABEL_717:
    v208 = *(_DWORD *)(v40 + 2100);
    if (v198)
      goto LABEL_539;
    goto LABEL_533;
  }
  if ((v205 & 0x10000000) != 0)
    v247 = 0x40000000;
  else
    v247 = 0x80000000;
  if ((v205 & 0x20000000) != 0)
    v205 = v247;
  else
    v205 &= 0xCFFFFFFF;
  v206 = v41[15];
  if ((v206 & 0x80000000) != 0)
    goto LABEL_717;
LABEL_529:
  v207 = *(_QWORD *)(v40 + 2328);
  if (v206 >= (*(_QWORD *)(v40 + 2336) - v207) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v207 = *(_QWORD *)(v40 + 2328);
    v198 = **v311;
  }
  v208 = *(_DWORD *)(v207 + (v206 << 11) + 1820);
  if (!v198)
  {
LABEL_533:
    if ((v208 & 0x10000000) != 0)
      v209 = 0x40000000;
    else
      v209 = 0x80000000;
    if ((v208 & 0x20000000) != 0)
      v208 = v209;
    else
      v208 &= 0xCFFFFFFF;
  }
LABEL_539:
  v301 = v197 >> 30;
  v310 = v200 >> 30;
  v210 = v203 >> 30;
  v211 = v208 >> 30;
  v394 = v364;
  v395 = v365;
  v396 = v366;
  v393 = v363;
  v392 = v362;
  if ((v304 & 0x40000000) != 0)
  {
    v379 = v364;
    v380 = v365;
    v381 = v366;
    *(_QWORD *)&v427 = 0x10100D0D10100D0DLL;
    v378 = v363;
    v377 = v362;
    v372 = xmmword_224673A40;
    v373 = xmmword_224673A50;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 6, 7, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x7E0000003ELL), xmmword_224673A50);
    if ((v307 & 0x40000000) == 0)
    {
      v374 = v364;
      v375 = v365;
      v376 = v366;
      v373 = v363;
      v372 = v362;
      *(_QWORD *)&v422 = 0x101010100D0D0D0DLL;
      v427 = xmmword_224673A60;
      v428 = xmmword_224673A70;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 6, 7, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x7E0000003ELL), xmmword_224673A70);
      if (((v294 | v288) & 1) == 0)
      {
        v429 = v364;
        v430 = v365;
        v431 = v366;
        v427 = v362;
        v428 = v363;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224673A80;
        v423 = xmmword_224673A90;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 6, 7, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x7E0000003ELL), xmmword_224673A90);
        v212 = (v270 & 1) == 0 && ((v291 | v285) & 1) == 0;
        if ((v273 & 1) == 0 && v212)
        {
          v424 = v364;
          v425 = v365;
          v426 = v366;
          v423 = v363;
          v422 = v362;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_224673AA0;
          v418 = xmmword_224673AB0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 6, 7, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1FE0000003ELL), xmmword_224673AB0);
        }
      }
      v213 = (v283 & 1) == 0 && ((v291 | v285) & 1) == 0;
      if (v213 && (v280 & 1) == 0)
      {
        v419 = v394;
        v420 = v395;
        v421 = v396;
        v418 = v393;
        v417 = v392;
        *(_QWORD *)&v407 = 0xF100C0D0F100C0DLL;
        v412 = xmmword_224673AC0;
        v413 = xmmword_224673AD0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 6, 7, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1FE0000003ELL), xmmword_224673AD0);
      }
    }
    if (((v288 | v310) & 1) == 0)
    {
      v414 = v394;
      v415 = v395;
      v416 = v396;
      v413 = v393;
      v412 = v392;
      *(_QWORD *)&v402 = 0xD0D0D0D0D0D0D0DLL;
      v407 = xmmword_224673AE0;
      v408 = xmmword_224673AF0;
      *(_QWORD *)&v397 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 6, 7, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)&v397, COERCE_DOUBLE(0x7E0000003ELL), xmmword_224673AF0);
      v214 = (v197 & 0x40000000) == 0 && ((v285 | v210) & 1) == 0;
      if ((v270 & 1) == 0 && v214)
      {
        v409 = v394;
        v410 = v395;
        v411 = v396;
        v408 = v393;
        v407 = v392;
        *(_QWORD *)&v397 = 0xC0D0C0D0C0D0C0DLL;
        v402 = xmmword_224673B00;
        v403 = xmmword_224673B10;
        *(_QWORD *)&v433[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 6, 7, 0, (uint64_t)&v397, (uint64_t)&v402, (uint64_t)v433, COERCE_DOUBLE(0x1FE0000003ELL), xmmword_224673B10);
      }
    }
    v215 = (v280 & 1) == 0 && ((v285 | v210) & 1) == 0;
    if (v215 && (v211 & 1) == 0)
    {
      v404 = v394;
      v405 = v395;
      v406 = v396;
      *(_QWORD *)&v433[0] = 0xF100F100C0D0C0DLL;
      v403 = v393;
      v402 = v392;
      v397 = xmmword_224673B20;
      v398 = xmmword_224673B30;
      v434[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 6, 7, 0, (uint64_t)v433, (uint64_t)&v397, (uint64_t)v434, COERCE_DOUBLE(0x1FE0000003ELL), xmmword_224673B30);
    }
  }
  v216 = v41[21];
  if ((v216 & 0x80000000) != 0)
  {
    v219 = *v311;
    v220 = *(_DWORD *)(v40 + 2264);
    v221 = **v311;
    if (**v311)
      goto LABEL_572;
  }
  else
  {
    v217 = *(_QWORD *)(v40 + 2328);
    if (v216 >= (*(_QWORD *)(v40 + 2336) - v217) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v217 = *(_QWORD *)(v40 + 2328);
    }
    v218 = v217 + (v216 << 11);
    v219 = *v311;
    v220 = *(_DWORD *)(v218 + 1984);
    v221 = **v311;
    if (**v311)
    {
LABEL_572:
      v222 = v41[22];
      if ((v222 & 0x80000000) == 0)
        goto LABEL_573;
LABEL_727:
      v224 = *(_DWORD *)(v40 + 472);
      if (v221)
        goto LABEL_577;
      goto LABEL_728;
    }
  }
  if ((v220 & 0x10000000) != 0)
    v248 = 0x40000000;
  else
    v248 = 0x80000000;
  if ((v220 & 0x20000000) != 0)
    v220 = v248;
  else
    v220 &= 0xCFFFFFFF;
  v222 = v41[22];
  if ((v222 & 0x80000000) != 0)
    goto LABEL_727;
LABEL_573:
  v223 = *(_QWORD *)(v40 + 2328);
  if (v222 >= (*(_QWORD *)(v40 + 2336) - v223) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v223 = *(_QWORD *)(v40 + 2328);
    v219 = *v311;
    v221 = **v311;
  }
  v224 = *(_DWORD *)(v223 + (v222 << 11) + 192);
  if (v221)
  {
LABEL_577:
    v225 = v41[21];
    if ((v225 & 0x80000000) == 0)
      goto LABEL_578;
LABEL_735:
    v227 = *(_DWORD *)(v40 + 2296);
    if (v221)
      goto LABEL_582;
LABEL_736:
    if ((v227 & 0x10000000) != 0)
      v250 = 0x40000000;
    else
      v250 = 0x80000000;
    if ((v227 & 0x20000000) != 0)
      v227 = v250;
    else
      v227 &= 0xCFFFFFFF;
    v228 = v41[22];
    if ((v228 & 0x80000000) != 0)
      goto LABEL_746;
    goto LABEL_743;
  }
LABEL_728:
  if ((v224 & 0x10000000) != 0)
    v249 = 0x40000000;
  else
    v249 = 0x80000000;
  if ((v224 & 0x20000000) != 0)
    v224 = v249;
  else
    v224 &= 0xCFFFFFFF;
  v225 = v41[21];
  if ((v225 & 0x80000000) != 0)
    goto LABEL_735;
LABEL_578:
  v226 = *(_QWORD *)(v40 + 2328);
  if (v225 >= (*(_QWORD *)(v40 + 2336) - v226) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v226 = *(_QWORD *)(v40 + 2328);
    v219 = *v311;
    v221 = **v311;
  }
  v227 = *(_DWORD *)(v226 + (v225 << 11) + 2016);
  if (!v221)
    goto LABEL_736;
LABEL_582:
  v228 = v41[22];
  if ((v228 & 0x80000000) != 0)
    goto LABEL_746;
LABEL_743:
  if (v228 >= (uint64_t)(*(_QWORD *)(v40 + 2336) - *(_QWORD *)(v40 + 2328)) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v219 = *v311;
  }
LABEL_746:
  v251 = v41[24];
  if ((v251 & 0x80000000) != 0)
  {
    v253 = *(_DWORD *)(v40 + 2072);
    if (*v219)
      goto LABEL_757;
    goto LABEL_751;
  }
  v252 = *(_QWORD *)(v40 + 2328);
  if (v251 >= (*(_QWORD *)(v40 + 2336) - v252) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v252 = *(_QWORD *)(v40 + 2328);
    v219 = *v311;
  }
  v253 = *(_DWORD *)(v252 + (v251 << 11) + 1792);
  if (!*v219)
  {
LABEL_751:
    if ((v253 & 0x10000000) != 0)
      v254 = 0x40000000;
    else
      v254 = 0x80000000;
    if ((v253 & 0x20000000) != 0)
      v253 = v254;
    else
      v253 &= 0xCFFFFFFF;
  }
LABEL_757:
  v399 = v384;
  v400 = v385;
  v401 = v386;
  v398 = v383;
  v397 = v382;
  if ((v205 & 0x40000000) != 0)
  {
    v379 = v384;
    v380 = v385;
    v381 = v386;
    *(_QWORD *)&v427 = 0x1919161610100D0DLL;
    v378 = v383;
    v377 = v382;
    v372 = xmmword_224673B40;
    v373 = xmmword_224673B50;
    *(_QWORD *)&v422 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v377, 7, 7, 0, (uint64_t)&v427, (uint64_t)&v372, (uint64_t)&v422, COERCE_DOUBLE(0x7F0000003FLL), xmmword_224673B50);
    if ((v304 & 0x40000000) == 0)
    {
      v374 = v384;
      v375 = v385;
      v376 = v386;
      *(_QWORD *)&v422 = 0x101010100D0D0D0DLL;
      v373 = v383;
      v372 = v382;
      v427 = xmmword_224673B60;
      v428 = xmmword_224673B70;
      *(_QWORD *)&v417 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v372, 7, 7, 0, (uint64_t)&v422, (uint64_t)&v427, (uint64_t)&v417, COERCE_DOUBLE(0x7F0000003FLL), xmmword_224673B70);
      if (((v288 | v310) & 1) == 0)
      {
        v429 = v384;
        v430 = v385;
        v431 = v386;
        v427 = v382;
        v428 = v383;
        *(_QWORD *)&v417 = 0xD0D0D0D0D0D0D0DLL;
        v422 = xmmword_224673B80;
        v423 = xmmword_224673B90;
        *(_QWORD *)&v412 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v427, 7, 7, 0, (uint64_t)&v417, (uint64_t)&v422, (uint64_t)&v412, COERCE_DOUBLE(0x7F0000003FLL), xmmword_224673B90);
        v255 = (v301 & 1) == 0 && ((v285 | v210) & 1) == 0;
        if ((v270 & 1) == 0 && v255)
        {
          v424 = v384;
          v425 = v385;
          v426 = v386;
          v423 = v383;
          v422 = v382;
          *(_QWORD *)&v412 = 0xC0D0C0D0C0D0C0DLL;
          v417 = xmmword_224673BA0;
          v418 = xmmword_224673BB0;
          *(_QWORD *)&v407 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v422, 7, 7, 0, (uint64_t)&v412, (uint64_t)&v417, (uint64_t)&v407, COERCE_DOUBLE(0x1FF0000003FLL), xmmword_224673BB0);
        }
      }
      v256 = (v280 & 1) == 0 && ((v285 | v210) & 1) == 0;
      if (v256 && (v211 & 1) == 0)
      {
        v419 = v399;
        v420 = v400;
        v421 = v401;
        v418 = v398;
        v417 = v397;
        *(_QWORD *)&v407 = 0xF100C0D0F100C0DLL;
        v412 = xmmword_224673BC0;
        v413 = xmmword_224673BD0;
        *(_QWORD *)&v402 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v417, 7, 7, 0, (uint64_t)&v407, (uint64_t)&v412, (uint64_t)&v402, COERCE_DOUBLE(0x1FF0000003FLL), xmmword_224673BD0);
      }
    }
    v257 = (v227 & 0x40000000 | v210 & 1) == 0;
    if (!(v224 & 0x40000000 | v310 & 1))
    {
      v414 = v399;
      v415 = v400;
      v416 = v401;
      *(_QWORD *)&v402 = 0x16160D0D16160D0DLL;
      v413 = v398;
      v412 = v397;
      v407 = xmmword_224673BE0;
      v408 = xmmword_224673BF0;
      *(_QWORD *)&v433[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v412, 7, 7, 0, (uint64_t)&v402, (uint64_t)&v407, (uint64_t)v433, COERCE_DOUBLE(0x7F0000003FLL), xmmword_224673BF0);
      v258 = (v220 & 0x40000000) == 0 && v257;
      if ((v301 & 1) == 0 && v258)
      {
        v409 = v399;
        v410 = v400;
        v411 = v401;
        v408 = v398;
        v407 = v397;
        *(_QWORD *)&v433[0] = 0x151615160C0D0C0DLL;
        v402 = xmmword_224673C00;
        v403 = xmmword_224673C10;
        v434[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v407, 7, 7, 0, (uint64_t)v433, (uint64_t)&v402, (uint64_t)v434, COERCE_DOUBLE(0x1FF0000003FLL), xmmword_224673C10);
      }
    }
    v259 = (v211 & 1) == 0 && v257;
    if (v259 && (v253 & 0x40000000) == 0)
    {
      v404 = v399;
      v405 = v400;
      v406 = v401;
      v403 = v398;
      v402 = v397;
      v434[0] = 0x18190F1015160C0DLL;
      v433[0] = xmmword_224673C20;
      v433[1] = xmmword_224673C30;
      v432 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v402, 7, 7, 0, (uint64_t)v434, (uint64_t)v433, (uint64_t)&v432, COERCE_DOUBLE(0x1FF0000003FLL), xmmword_224673C30);
    }
  }
  v260 = *v275;
  v316 = *((_QWORD *)v275 + 2);
  v315 = v260;
  v261 = *(_OWORD *)a2;
  v314 = a2[2];
  v262 = *v274;
  v263 = v274[1];
  v312[4] = v274[4];
  v313 = v261;
  v264 = v274[3];
  v312[2] = v274[2];
  v312[3] = v264;
  v312[0] = v262;
  v312[1] = v263;
  return sub_223DABCA8((unsigned __int8 ***)&v315, (uint64_t *)&v313, v312);
}

unint64_t sub_223DABCA8(unsigned __int8 ***a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v6;
  _BYTE **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  _BYTE **v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned __int8 **v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int *v32;
  int v33;
  int v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  _BYTE **v44;
  unint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  unsigned int v48;
  uint64_t v49;
  _BYTE **v50;
  unint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  unsigned int v54;
  uint64_t v55;
  _BYTE **v56;
  unint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  unsigned int v60;
  uint64_t v61;
  _BYTE **v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  unsigned int v67;
  _BYTE *v68;
  unsigned int v69;
  _BYTE *v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unint64_t v74;
  uint64_t v75;
  unsigned int v76;
  int v77;
  unint64_t v78;
  uint64_t v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  _BOOL4 v94;
  _BOOL4 v95;
  _BOOL4 v96;
  _BOOL4 v97;
  _BOOL4 v98;
  unint64_t v99;
  uint64_t v100;
  unsigned int v101;
  int v102;
  unint64_t v103;
  uint64_t v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  _BOOL4 v117;
  _BOOL4 v118;
  _BOOL4 v119;
  _BOOL4 v120;
  unint64_t v121;
  uint64_t v122;
  unsigned int v123;
  int v124;
  unint64_t v125;
  uint64_t v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  _BOOL4 v139;
  _BOOL4 v140;
  _BOOL4 v141;
  _BOOL4 v142;
  unint64_t v143;
  uint64_t v144;
  unsigned int v145;
  int v146;
  unint64_t v147;
  uint64_t v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  _BOOL4 v161;
  _BOOL4 v162;
  _BOOL4 v163;
  _BOOL4 v164;
  _BOOL4 v165;
  unint64_t v166;
  uint64_t v167;
  unsigned int v168;
  int v169;
  unint64_t v170;
  uint64_t v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  _BOOL4 v184;
  _BOOL4 v185;
  _BOOL4 v186;
  _BOOL4 v187;
  unint64_t v188;
  uint64_t v189;
  unsigned int v190;
  int v191;
  unint64_t v192;
  uint64_t v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  _BOOL4 v205;
  _BOOL4 v206;
  _BOOL4 v207;
  _BOOL4 v208;
  unint64_t v209;
  uint64_t v210;
  unsigned int v211;
  int v212;
  unint64_t v213;
  uint64_t v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  _BOOL4 v228;
  _BOOL4 v229;
  _BOOL4 v230;
  _BOOL4 v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  _BYTE *v235;
  unsigned int v236;
  int v237;
  unint64_t v238;
  uint64_t v239;
  unsigned int v240;
  unint64_t v241;
  uint64_t v242;
  unsigned int v243;
  unint64_t v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  uint64_t v248;
  unint64_t v249;
  unsigned int v250;
  unsigned int v251;
  _BOOL4 v252;
  _BOOL4 v253;
  _BOOL4 v254;
  _BOOL4 v255;
  unsigned __int8 **v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  unsigned int v272;
  unint64_t v273;
  uint64_t v274;
  unsigned int v275;
  int v276;
  unint64_t v277;
  uint64_t v278;
  unsigned int v279;
  unint64_t v280;
  uint64_t v281;
  unsigned int v282;
  unint64_t v283;
  uint64_t v284;
  unsigned int v285;
  unint64_t v286;
  uint64_t v287;
  uint64_t v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  _BOOL4 v307;
  _BOOL4 v308;
  _BOOL4 v309;
  _BOOL4 v310;
  _BOOL4 v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  _BOOL4 v326;
  _BOOL4 v327;
  _BOOL4 v328;
  _BOOL4 v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  _BOOL4 v344;
  _BOOL4 v345;
  _BOOL4 v346;
  _BOOL4 v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  _BOOL4 v363;
  _BOOL4 v364;
  _BOOL4 v365;
  _BOOL4 v366;
  _BOOL4 v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  _BOOL4 v382;
  _BOOL4 v383;
  _BOOL4 v384;
  _BOOL4 v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  int v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  int v398;
  _BOOL4 v399;
  _BOOL4 v400;
  _BOOL4 v401;
  _BOOL4 v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  int v411;
  unsigned int v412;
  int v413;
  unsigned int v414;
  int v415;
  unsigned int v416;
  unsigned int v417;
  _BOOL4 v418;
  _BOOL4 v419;
  _BOOL4 v420;
  _BOOL4 v421;
  unint64_t v422;
  uint64_t v423;
  unsigned int *v424;
  _BYTE *v425;
  unsigned int v426;
  int v427;
  unint64_t v428;
  uint64_t v429;
  unsigned int v430;
  unint64_t v431;
  uint64_t v432;
  unsigned int v433;
  unint64_t v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  uint64_t v438;
  unint64_t v439;
  unsigned int v440;
  unsigned int v441;
  _BOOL4 v442;
  _BOOL4 v443;
  _BOOL4 v444;
  _BOOL4 v445;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  __int128 v466;
  unsigned __int8 ***v467;
  unsigned int v468;
  unsigned int v469;
  _OWORD *v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  uint64_t v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  int v497;
  unsigned int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  _BYTE **v504;
  int v505;
  unsigned int v506;
  unsigned int v507;
  unsigned __int8 **v508;
  unsigned int v509;
  unsigned __int8 **v510;
  unsigned int v511;
  uint64_t v512;
  _BYTE **v513;
  uint64_t v514;
  __int128 v515;
  float32x4_t v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  float32x4_t v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  float32x4_t v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  float32x4_t v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  float32x4_t v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  float32x4_t v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  float32x4_t v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  float32x4_t v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  float32x4_t v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  float32x4_t v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  float32x4_t v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  float32x4_t v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  float32x4_t v576;
  __int128 v577;
  __int128 v578;
  __int128 v579;
  __int128 v580;
  float32x4_t v581;
  __int128 v582;
  __int128 v583;
  __int128 v584;
  __int128 v585;
  float32x4_t v586;
  __int128 v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  float32x4_t v591;
  __int128 v592;
  __int128 v593;
  __int128 v594;
  __int128 v595;
  float32x4_t v596;
  __int128 v597;
  __int128 v598;
  __int128 v599;
  uint64_t v600;
  _OWORD v601[2];
  _QWORD v602[3];

  v602[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v7 = (_BYTE **)a2[2];
  v8 = *(unsigned int *)(a2[1] + 40);
  if ((v8 & 0x80000000) != 0)
  {
    v10 = v6 + 280;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 2328);
    if (v8 >= (*(_QWORD *)(v6 + 2336) - v9) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1300;
      }
      v9 = *(_QWORD *)(v6 + 2328);
    }
    v10 = v9 + (v8 << 11);
  }
  v11 = *(_DWORD *)(v10 + 224);
  v12 = v11 & 0xCFFFFFFF;
  if ((v11 & 0x10000000) != 0)
    v13 = 0x40000000;
  else
    v13 = 0x80000000;
  if ((v11 & 0x20000000) != 0)
    v12 = v13;
  if (**v7)
    v14 = v11;
  else
    v14 = v12;
  v15 = *a2;
  v16 = (_BYTE **)a2[2];
  v17 = *(unsigned int *)(a2[1] + 40);
  v500 = v14;
  if ((v17 & 0x80000000) != 0)
  {
    v19 = v15 + 280;
  }
  else
  {
    v18 = *(_QWORD *)(v15 + 2328);
    if (v17 >= (*(_QWORD *)(v15 + 2336) - v18) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1300;
      }
      v18 = *(_QWORD *)(v15 + 2328);
    }
    v19 = v18 + (v17 << 11);
  }
  v20 = *(_DWORD *)(v19 + 480);
  v21 = v20 & 0xCFFFFFFF;
  if ((v20 & 0x10000000) != 0)
    v22 = 0x40000000;
  else
    v22 = 0x80000000;
  if ((v20 & 0x20000000) != 0)
    v21 = v22;
  if (**v16)
    v23 = *(_DWORD *)(v19 + 480);
  else
    v23 = v21;
  v24 = a1[2];
  v510 = *a1;
  v25 = *(_DWORD *)v24;
  if (***a1)
  {
    v26 = *((_DWORD *)v24 + 64);
    v27 = *((_DWORD *)v24 + 8);
  }
  else
  {
    if ((v25 & 0x20000000) != 0)
      v25 *= 4;
    v28 = *((_DWORD *)v24 + 64);
    if ((v28 & 0x20000000) != 0)
      v26 = 4 * v28;
    else
      v26 = *((_DWORD *)v24 + 64);
    v29 = *((_DWORD *)v24 + 8);
    if ((v29 & 0x10000000) != 0)
      v30 = 0x40000000;
    else
      v30 = 0x80000000;
    if ((v29 & 0x20000000) != 0)
      v27 = v30;
    else
      v27 = v29 & 0xCFFFFFFF;
  }
  v31 = *a2;
  v32 = (unsigned int *)a2[1];
  v513 = (_BYTE **)a2[2];
  v467 = a1;
  v470 = a3;
  v505 = v26;
  v489 = v27;
  v494 = v23;
  if ((v26 & 0x40000000) == 0)
  {
    v480 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    goto LABEL_111;
  }
  v36 = v32[1];
  if ((v36 & 0x80000000) != 0)
  {
    v38 = v31 + 280;
  }
  else
  {
    v37 = *(_QWORD *)(v31 + 2328);
    if (v36 >= (*(_QWORD *)(v31 + 2336) - v37) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1300;
      }
      v37 = *(_QWORD *)(v31 + 2328);
    }
    v38 = v37 + (v36 << 11);
  }
  v39 = *(_DWORD *)(v38 + 252);
  v40 = v39 & 0xCFFFFFFF;
  if ((v39 & 0x10000000) != 0)
    v41 = 0x40000000;
  else
    v41 = 0x80000000;
  if ((v39 & 0x20000000) != 0)
    v40 = v41;
  if (**v513)
    v42 = v39;
  else
    v42 = v40;
  v43 = *a2;
  v44 = (_BYTE **)a2[2];
  v45 = *(unsigned int *)(a2[1] + 4);
  if ((v45 & 0x80000000) != 0)
  {
    v66 = *v44;
    v48 = *(_DWORD *)(v43 + 788);
    if (*v66)
      goto LABEL_63;
  }
  else
  {
    v46 = *(_QWORD *)(v43 + 2328);
    if (v45 >= (*(_QWORD *)(v43 + 2336) - v46) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1300;
      }
      v46 = *(_QWORD *)(v43 + 2328);
    }
    v47 = *v44;
    v48 = *(_DWORD *)(v46 + (v45 << 11) + 508);
    if (*v47)
    {
LABEL_63:
      v49 = *a2;
      v50 = (_BYTE **)a2[2];
      v51 = *(unsigned int *)(a2[1] + 16);
      if ((v51 & 0x80000000) == 0)
        goto LABEL_64;
LABEL_86:
      v68 = *v50;
      v54 = *(_DWORD *)(v49 + 308);
      if (*v68)
        goto LABEL_68;
      goto LABEL_87;
    }
  }
  if ((v48 & 0x10000000) != 0)
    v67 = 0x40000000;
  else
    v67 = 0x80000000;
  if ((v48 & 0x20000000) != 0)
    v48 = v67;
  else
    v48 &= 0xCFFFFFFF;
  v49 = *a2;
  v50 = (_BYTE **)a2[2];
  v51 = *(unsigned int *)(a2[1] + 16);
  if ((v51 & 0x80000000) != 0)
    goto LABEL_86;
LABEL_64:
  v52 = *(_QWORD *)(v49 + 2328);
  if (v51 >= (*(_QWORD *)(v49 + 2336) - v52) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_1300;
    }
    v52 = *(_QWORD *)(v49 + 2328);
  }
  v53 = *v50;
  v54 = *(_DWORD *)(v52 + (v51 << 11) + 28);
  if (*v53)
  {
LABEL_68:
    v55 = *a2;
    v56 = (_BYTE **)a2[2];
    v57 = *(unsigned int *)(a2[1] + 16);
    if ((v57 & 0x80000000) == 0)
      goto LABEL_69;
LABEL_94:
    v70 = *v56;
    v60 = *(_DWORD *)(v55 + 564);
    if (*v70)
      goto LABEL_73;
LABEL_95:
    if ((v60 & 0x10000000) != 0)
      v71 = 0x40000000;
    else
      v71 = 0x80000000;
    if ((v60 & 0x20000000) != 0)
      v60 = v71;
    else
      v60 &= 0xCFFFFFFF;
    v61 = *a2;
    v62 = (_BYTE **)a2[2];
    v63 = *(unsigned int *)(a2[1] + 16);
    if ((v63 & 0x80000000) == 0)
      goto LABEL_74;
    goto LABEL_102;
  }
LABEL_87:
  if ((v54 & 0x10000000) != 0)
    v69 = 0x40000000;
  else
    v69 = 0x80000000;
  if ((v54 & 0x20000000) != 0)
    v54 = v69;
  else
    v54 &= 0xCFFFFFFF;
  v55 = *a2;
  v56 = (_BYTE **)a2[2];
  v57 = *(unsigned int *)(a2[1] + 16);
  if ((v57 & 0x80000000) != 0)
    goto LABEL_94;
LABEL_69:
  v58 = *(_QWORD *)(v55 + 2328);
  if (v57 >= (*(_QWORD *)(v55 + 2336) - v58) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_1300;
    }
    v58 = *(_QWORD *)(v55 + 2328);
  }
  v59 = *v56;
  v60 = *(_DWORD *)(v58 + (v57 << 11) + 284);
  if (!*v59)
    goto LABEL_95;
LABEL_73:
  v61 = *a2;
  v62 = (_BYTE **)a2[2];
  v63 = *(unsigned int *)(a2[1] + 16);
  if ((v63 & 0x80000000) == 0)
  {
LABEL_74:
    v64 = *(_QWORD *)(v61 + 2328);
    if (v63 >= (*(_QWORD *)(v61 + 2336) - v64) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1300;
      }
      v64 = *(_QWORD *)(v61 + 2328);
    }
    v65 = v64 + (v63 << 11);
    goto LABEL_103;
  }
LABEL_102:
  v65 = v61 + 280;
LABEL_103:
  LODWORD(v480) = (v42 >> 30) & 1;
  v35 = (v48 >> 30) & 1;
  v34 = (v54 >> 30) & 1;
  v33 = (v60 >> 30) & 1;
  v72 = *(_DWORD *)(v65 + 60);
  if (!**v62)
  {
    if ((v72 & 0x10000000) != 0)
      v73 = 0x40000000;
    else
      v73 = 0x80000000;
    if ((v72 & 0x20000000) != 0)
      v72 = v73;
    else
      v72 &= 0xCFFFFFFF;
  }
  HIDWORD(v480) = (v72 >> 30) & 1;
  a3 = v470;
  v24 = v467[2];
  v31 = *a2;
  v32 = (unsigned int *)a2[1];
  v510 = *v467;
  v513 = (_BYTE **)a2[2];
LABEL_111:
  v522 = a3[2];
  v523 = a3[3];
  v524 = a3[4];
  v520 = *a3;
  v521 = *((float32x4_t *)a3 + 1);
  v74 = v32[10];
  if ((v74 & 0x80000000) != 0)
  {
    v76 = *(_DWORD *)(v31 + 508);
    v77 = **v513;
    if (**v513)
      goto LABEL_116;
  }
  else
  {
    v75 = *(_QWORD *)(v31 + 2328);
    if (v74 >= (*(_QWORD *)(v31 + 2336) - v75) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1300;
      }
      v75 = *(_QWORD *)(v31 + 2328);
    }
    v76 = *(_DWORD *)(v75 + (v74 << 11) + 228);
    v77 = **v513;
    if (**v513)
    {
LABEL_116:
      v78 = v32[10];
      if ((v78 & 0x80000000) == 0)
        goto LABEL_117;
LABEL_137:
      v80 = *(_DWORD *)(v31 + 764);
      v81 = v494;
      if (!v77)
        goto LABEL_121;
      goto LABEL_127;
    }
  }
  if ((v76 & 0x10000000) != 0)
    v85 = 0x40000000;
  else
    v85 = 0x80000000;
  if ((v76 & 0x20000000) != 0)
    v76 = v85;
  else
    v76 &= 0xCFFFFFFF;
  v78 = v32[10];
  if ((v78 & 0x80000000) != 0)
    goto LABEL_137;
LABEL_117:
  v79 = *(_QWORD *)(v31 + 2328);
  if (v78 < (*(_QWORD *)(v31 + 2336) - v79) >> 11)
    goto LABEL_120;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
LABEL_1300:
    abort();
  }
  v79 = *(_QWORD *)(v31 + 2328);
  v77 = **v513;
LABEL_120:
  v80 = *(_DWORD *)(v79 + (v78 << 11) + 484);
  v81 = v494;
  if (!v77)
  {
LABEL_121:
    if ((v80 & 0x10000000) != 0)
      v82 = 0x40000000;
    else
      v82 = 0x80000000;
    if ((v80 & 0x20000000) != 0)
      v80 = v82;
    else
      v80 &= 0xCFFFFFFF;
  }
LABEL_127:
  v452 = v500 >> 30;
  v83 = *((_DWORD *)v24 + 1);
  if (**v510)
  {
    v501 = *((_DWORD *)v24 + 65);
    v84 = *((_DWORD *)v24 + 9);
  }
  else
  {
    if ((v83 & 0x10000000) != 0)
      v86 = 0x40000000;
    else
      v86 = 0x80000000;
    if ((v83 & 0x20000000) != 0)
      v83 = v86;
    else
      v83 &= 0xCFFFFFFF;
    v87 = *((_DWORD *)v24 + 65);
    if ((v87 & 0x10000000) != 0)
      v88 = 0x40000000;
    else
      v88 = 0x80000000;
    if ((v87 & 0x20000000) != 0)
      v89 = v88;
    else
      v89 = v87 & 0xCFFFFFFF;
    v501 = v89;
    v90 = *((_DWORD *)v24 + 9);
    if ((v90 & 0x10000000) != 0)
      v91 = 0x40000000;
    else
      v91 = 0x80000000;
    if ((v90 & 0x20000000) != 0)
      v84 = v91;
    else
      v84 = v90 & 0xCFFFFFFF;
  }
  v460 = v76 >> 30;
  v474 = v81 >> 30;
  v92 = v25 >> 30;
  v93 = v489 >> 30;
  v490 = v83 >> 30;
  v495 = v80 >> 30;
  v464 = v84 >> 30;
  if ((v505 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224673C40;
    v536 = xmmword_224673C50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 0, 0, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8000000040), xmmword_224673C50);
    if (!v33)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      *(_QWORD *)&v590 = 0x4040D0D04040D0DLL;
      v536 = v521;
      v535 = v520;
      v595 = xmmword_224673C60;
      v596 = xmmword_224673C70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 0, 0, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8000000040), xmmword_224673C70);
      v94 = (v34 | v92 & 1) == 0;
      if (!(v35 | v474 & 1))
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        *(_QWORD *)&v585 = 0x10104040A0A0D0DLL;
        v595 = v520;
        v596 = v521;
        v590 = xmmword_224673C80;
        v591 = xmmword_224673C90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 0, 0, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8000000040), xmmword_224673C90);
        v95 = (v452 & 1) == 0 && v94;
        if (!(_DWORD)v480 && v95)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0x1010A0A04040D0DLL;
          v585 = xmmword_224673CA0;
          v586 = xmmword_224673CB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 0, 0, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(64), xmmword_224673CB0);
        }
      }
      if (HIDWORD(v480))
        v96 = 0;
      else
        v96 = v94;
      if (v96 && (v93 & 1) == 0)
      {
        v587 = v522;
        v588 = v523;
        v589 = v524;
        *(_QWORD *)&v575 = 0x40404040D0D0D0DLL;
        v586 = v521;
        v585 = v520;
        v580 = xmmword_224673CC0;
        v581 = xmmword_224673CD0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 0, 0, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(64), xmmword_224673CD0);
      }
    }
    if (((v474 | v495) & 1) == 0)
    {
      v582 = v522;
      v583 = v523;
      v584 = v524;
      v581 = v521;
      v580 = v520;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_224673CE0;
      v576 = xmmword_224673CF0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 0, 0, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8000000040), xmmword_224673CF0);
      v97 = (v76 & 0x40000000) == 0 && ((v92 | v490) & 1) == 0;
      if ((v452 & 1) == 0 && v97)
      {
        v577 = v522;
        v578 = v523;
        v579 = v524;
        v576 = v521;
        v575 = v520;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_224673D00;
        v571 = xmmword_224673D10;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 0, 0, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(64), xmmword_224673D10);
      }
    }
    v98 = (v93 & 1) == 0 && ((v92 | v490) & 1) == 0;
    if (v98 && (v464 & 1) == 0)
    {
      v572 = v522;
      v573 = v523;
      v574 = v524;
      v571 = v521;
      v570 = v520;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224673D20;
      v566 = xmmword_224673D30;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 0, 0, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(64), xmmword_224673D30);
    }
  }
  v99 = v32[10];
  if ((v99 & 0x80000000) != 0)
  {
    v101 = *(_DWORD *)(v31 + 512);
    v102 = **v513;
    if (**v513)
      goto LABEL_190;
  }
  else
  {
    v100 = *(_QWORD *)(v31 + 2328);
    if (v99 >= (*(_QWORD *)(v31 + 2336) - v100) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v100 = *(_QWORD *)(v31 + 2328);
    }
    v101 = *(_DWORD *)(v100 + (v99 << 11) + 232);
    v102 = **v513;
    if (**v513)
    {
LABEL_190:
      v103 = v32[10];
      if ((v103 & 0x80000000) == 0)
        goto LABEL_191;
LABEL_205:
      v105 = *(_DWORD *)(v31 + 768);
      if (v102)
        goto LABEL_195;
LABEL_206:
      if ((v105 & 0x10000000) != 0)
        v110 = 0x40000000;
      else
        v110 = 0x80000000;
      if ((v105 & 0x20000000) != 0)
        v105 = v110;
      else
        v105 &= 0xCFFFFFFF;
      v106 = *((_DWORD *)v24 + 2);
      if (**v510)
        goto LABEL_196;
      goto LABEL_213;
    }
  }
  if ((v101 & 0x10000000) != 0)
    v109 = 0x40000000;
  else
    v109 = 0x80000000;
  if ((v101 & 0x20000000) != 0)
    v101 = v109;
  else
    v101 &= 0xCFFFFFFF;
  v103 = v32[10];
  if ((v103 & 0x80000000) != 0)
    goto LABEL_205;
LABEL_191:
  v104 = *(_QWORD *)(v31 + 2328);
  if (v103 >= (*(_QWORD *)(v31 + 2336) - v104) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v104 = *(_QWORD *)(v31 + 2328);
    v102 = **v513;
  }
  v105 = *(_DWORD *)(v104 + (v103 << 11) + 488);
  if (!v102)
    goto LABEL_206;
LABEL_195:
  v106 = *((_DWORD *)v24 + 2);
  if (**v510)
  {
LABEL_196:
    v107 = *((_DWORD *)v24 + 66);
    v108 = *((_DWORD *)v24 + 10);
    goto LABEL_231;
  }
LABEL_213:
  if ((v106 & 0x10000000) != 0)
    v111 = 0x40000000;
  else
    v111 = 0x80000000;
  if ((v106 & 0x20000000) != 0)
    v106 = v111;
  else
    v106 &= 0xCFFFFFFF;
  v112 = *((_DWORD *)v24 + 66);
  if ((v112 & 0x10000000) != 0)
    v113 = 0x40000000;
  else
    v113 = 0x80000000;
  if ((v112 & 0x20000000) != 0)
    v107 = v113;
  else
    v107 = v112 & 0xCFFFFFFF;
  v114 = *((_DWORD *)v24 + 10);
  if ((v114 & 0x10000000) != 0)
    v115 = 0x40000000;
  else
    v115 = 0x80000000;
  if ((v114 & 0x20000000) != 0)
    v108 = v115;
  else
    v108 = v114 & 0xCFFFFFFF;
LABEL_231:
  v456 = v101 >> 30;
  v481 = v106 >> 30;
  v485 = v105 >> 30;
  v116 = v108 >> 30;
  if ((v501 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224673D40;
    v536 = xmmword_224673D50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 1, 0, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8100000041), xmmword_224673D50);
    if ((v505 & 0x40000000) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224673D60;
      v596 = xmmword_224673D70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 1, 0, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8100000041), xmmword_224673D70);
      if (((v474 | v495) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_224673D80;
        v591 = xmmword_224673D90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 1, 0, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8100000041), xmmword_224673D90);
        v117 = (v460 & 1) == 0 && ((v92 | v490) & 1) == 0;
        if ((v452 & 1) == 0 && v117)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_224673DA0;
          v586 = xmmword_224673DB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 1, 0, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x100000041), xmmword_224673DB0);
        }
      }
      v118 = (v93 & 1) == 0 && ((v92 | v490) & 1) == 0;
      if (v118 && (v464 & 1) == 0)
      {
        v587 = v522;
        v588 = v523;
        v589 = v524;
        v586 = v521;
        v585 = v520;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_224673DC0;
        v581 = xmmword_224673DD0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 1, 0, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x100000041), xmmword_224673DD0);
      }
    }
    if (((v495 | v485) & 1) == 0)
    {
      v582 = v522;
      v583 = v523;
      v584 = v524;
      v581 = v521;
      v580 = v520;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_224673DE0;
      v576 = xmmword_224673DF0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 1, 0, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8100000041), xmmword_224673DF0);
      v119 = (v101 & 0x40000000) == 0 && ((v490 | v481) & 1) == 0;
      if ((v460 & 1) == 0 && v119)
      {
        v577 = v522;
        v578 = v523;
        v579 = v524;
        v576 = v521;
        v575 = v520;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_224673E00;
        v571 = xmmword_224673E10;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 1, 0, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x100000041), xmmword_224673E10);
      }
    }
    v120 = (v464 & 1) == 0 && ((v490 | v481) & 1) == 0;
    if (v120 && (v116 & 1) == 0)
    {
      v572 = v522;
      v573 = v523;
      v574 = v524;
      v571 = v521;
      v570 = v520;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224673E20;
      v566 = xmmword_224673E30;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 1, 0, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x100000041), xmmword_224673E30);
    }
  }
  v121 = v32[10];
  if ((v121 & 0x80000000) != 0)
  {
    v123 = *(_DWORD *)(v31 + 516);
    v124 = **v513;
    if (**v513)
      goto LABEL_264;
  }
  else
  {
    v122 = *(_QWORD *)(v31 + 2328);
    if (v121 >= (*(_QWORD *)(v31 + 2336) - v122) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v122 = *(_QWORD *)(v31 + 2328);
    }
    v123 = *(_DWORD *)(v122 + (v121 << 11) + 236);
    v124 = **v513;
    if (**v513)
    {
LABEL_264:
      v125 = v32[10];
      if ((v125 & 0x80000000) == 0)
        goto LABEL_265;
LABEL_279:
      v127 = *(_DWORD *)(v31 + 772);
      if (v124)
        goto LABEL_269;
LABEL_280:
      if ((v127 & 0x10000000) != 0)
        v132 = 0x40000000;
      else
        v132 = 0x80000000;
      if ((v127 & 0x20000000) != 0)
        v127 = v132;
      else
        v127 &= 0xCFFFFFFF;
      v128 = *((_DWORD *)v24 + 3);
      if (**v510)
        goto LABEL_270;
      goto LABEL_287;
    }
  }
  if ((v123 & 0x10000000) != 0)
    v131 = 0x40000000;
  else
    v131 = 0x80000000;
  if ((v123 & 0x20000000) != 0)
    v123 = v131;
  else
    v123 &= 0xCFFFFFFF;
  v125 = v32[10];
  if ((v125 & 0x80000000) != 0)
    goto LABEL_279;
LABEL_265:
  v126 = *(_QWORD *)(v31 + 2328);
  if (v125 >= (*(_QWORD *)(v31 + 2336) - v126) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v126 = *(_QWORD *)(v31 + 2328);
    v124 = **v513;
  }
  v127 = *(_DWORD *)(v126 + (v125 << 11) + 492);
  if (!v124)
    goto LABEL_280;
LABEL_269:
  v128 = *((_DWORD *)v24 + 3);
  if (**v510)
  {
LABEL_270:
    v129 = *((_DWORD *)v24 + 67);
    v130 = *((_DWORD *)v24 + 11);
    goto LABEL_305;
  }
LABEL_287:
  if ((v128 & 0x10000000) != 0)
    v133 = 0x40000000;
  else
    v133 = 0x80000000;
  if ((v128 & 0x20000000) != 0)
    v128 = v133;
  else
    v128 &= 0xCFFFFFFF;
  v134 = *((_DWORD *)v24 + 67);
  if ((v134 & 0x10000000) != 0)
    v135 = 0x40000000;
  else
    v135 = 0x80000000;
  if ((v134 & 0x20000000) != 0)
    v129 = v135;
  else
    v129 = v134 & 0xCFFFFFFF;
  v136 = *((_DWORD *)v24 + 11);
  if ((v136 & 0x10000000) != 0)
    v137 = 0x40000000;
  else
    v137 = 0x80000000;
  if ((v136 & 0x20000000) != 0)
    v130 = v137;
  else
    v130 = v136 & 0xCFFFFFFF;
LABEL_305:
  v453 = v123 >> 30;
  v506 = v127 >> 30;
  v475 = v128 >> 30;
  v138 = v130 >> 30;
  if ((v107 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224673E40;
    v536 = xmmword_224673E50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 2, 0, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8200000042), xmmword_224673E50);
    if ((v501 & 0x40000000) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224673E60;
      v596 = xmmword_224673E70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 2, 0, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8200000042), xmmword_224673E70);
      if (((v495 | v485) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_224673E80;
        v591 = xmmword_224673E90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 2, 0, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8200000042), xmmword_224673E90);
        v139 = (v456 & 1) == 0 && ((v490 | v481) & 1) == 0;
        if ((v460 & 1) == 0 && v139)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_224673EA0;
          v586 = xmmword_224673EB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 2, 0, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x200000042), xmmword_224673EB0);
        }
      }
      v140 = (v464 & 1) == 0 && ((v490 | v481) & 1) == 0;
      if (v140 && (v116 & 1) == 0)
      {
        v587 = v522;
        v588 = v523;
        v589 = v524;
        v586 = v521;
        v585 = v520;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_224673EC0;
        v581 = xmmword_224673ED0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 2, 0, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x200000042), xmmword_224673ED0);
      }
    }
    if (((v485 | v506) & 1) == 0)
    {
      v582 = v522;
      v583 = v523;
      v584 = v524;
      v581 = v521;
      v580 = v520;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_224673EE0;
      v576 = xmmword_224673EF0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 2, 0, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8200000042), xmmword_224673EF0);
      v141 = (v123 & 0x40000000) == 0 && ((v481 | v475) & 1) == 0;
      if ((v456 & 1) == 0 && v141)
      {
        v577 = v522;
        v578 = v523;
        v579 = v524;
        v576 = v521;
        v575 = v520;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_224673F00;
        v571 = xmmword_224673F10;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 2, 0, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x200000042), xmmword_224673F10);
      }
    }
    v142 = (v116 & 1) == 0 && ((v481 | v475) & 1) == 0;
    if (v142 && (v138 & 1) == 0)
    {
      v572 = v522;
      v573 = v523;
      v574 = v524;
      v571 = v521;
      v570 = v520;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224673F20;
      v566 = xmmword_224673F30;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 2, 0, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x200000042), xmmword_224673F30);
    }
  }
  v143 = v32[10];
  if ((v143 & 0x80000000) != 0)
  {
    v145 = *(_DWORD *)(v31 + 520);
    v146 = **v513;
    if (**v513)
      goto LABEL_338;
  }
  else
  {
    v144 = *(_QWORD *)(v31 + 2328);
    if (v143 >= (*(_QWORD *)(v31 + 2336) - v144) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v144 = *(_QWORD *)(v31 + 2328);
    }
    v145 = *(_DWORD *)(v144 + (v143 << 11) + 240);
    v146 = **v513;
    if (**v513)
    {
LABEL_338:
      v147 = v32[10];
      if ((v147 & 0x80000000) == 0)
        goto LABEL_339;
LABEL_353:
      v149 = *(_DWORD *)(v31 + 776);
      if (v146)
        goto LABEL_343;
LABEL_354:
      if ((v149 & 0x10000000) != 0)
        v155 = 0x40000000;
      else
        v155 = 0x80000000;
      if ((v149 & 0x20000000) != 0)
        v149 = v155;
      else
        v149 &= 0xCFFFFFFF;
      v150 = v107;
      v151 = *((_DWORD *)v24 + 4);
      if (**v510)
        goto LABEL_344;
      goto LABEL_361;
    }
  }
  if ((v145 & 0x10000000) != 0)
    v154 = 0x40000000;
  else
    v154 = 0x80000000;
  if ((v145 & 0x20000000) != 0)
    v145 = v154;
  else
    v145 &= 0xCFFFFFFF;
  v147 = v32[10];
  if ((v147 & 0x80000000) != 0)
    goto LABEL_353;
LABEL_339:
  v148 = *(_QWORD *)(v31 + 2328);
  if (v147 >= (*(_QWORD *)(v31 + 2336) - v148) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v148 = *(_QWORD *)(v31 + 2328);
    v146 = **v513;
  }
  v149 = *(_DWORD *)(v148 + (v147 << 11) + 496);
  if (!v146)
    goto LABEL_354;
LABEL_343:
  v150 = v107;
  v151 = *((_DWORD *)v24 + 4);
  if (**v510)
  {
LABEL_344:
    v152 = *((_DWORD *)v24 + 68);
    v153 = *((_DWORD *)v24 + 12);
    goto LABEL_379;
  }
LABEL_361:
  if ((v151 & 0x10000000) != 0)
    v156 = 0x40000000;
  else
    v156 = 0x80000000;
  if ((v151 & 0x20000000) != 0)
    v151 = v156;
  else
    v151 &= 0xCFFFFFFF;
  v157 = *((_DWORD *)v24 + 68);
  if ((v157 & 0x10000000) != 0)
    v158 = 0x40000000;
  else
    v158 = 0x80000000;
  if ((v157 & 0x20000000) != 0)
    v152 = v158;
  else
    v152 = v157 & 0xCFFFFFFF;
  v159 = *((_DWORD *)v24 + 12);
  if ((v159 & 0x10000000) != 0)
    v160 = 0x40000000;
  else
    v160 = 0x80000000;
  if ((v159 & 0x20000000) != 0)
    v153 = v160;
  else
    v153 = v159 & 0xCFFFFFFF;
LABEL_379:
  v451 = v145 >> 30;
  v496 = v151 >> 30;
  v502 = v149 >> 30;
  v465 = v153 >> 30;
  if ((v129 & 0x40000000) != 0)
  {
    v161 = (v150 & 0x40000000) == 0;
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224673F40;
    v536 = xmmword_224673F50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 3, 0, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8300000043), xmmword_224673F50);
    if (v161)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224673F60;
      v596 = xmmword_224673F70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 3, 0, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8300000043), xmmword_224673F70);
      if (((v485 | v506) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_224673F80;
        v591 = xmmword_224673F90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 3, 0, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8300000043), xmmword_224673F90);
        v162 = (v453 & 1) == 0 && ((v481 | v475) & 1) == 0;
        if ((v456 & 1) == 0 && v162)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_224673FA0;
          v586 = xmmword_224673FB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 3, 0, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x300000043), xmmword_224673FB0);
        }
      }
      v163 = (v116 & 1) == 0 && ((v481 | v475) & 1) == 0;
      if (v163 && (v138 & 1) == 0)
      {
        v587 = v522;
        v588 = v523;
        v589 = v524;
        v586 = v521;
        v585 = v520;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_224673FC0;
        v581 = xmmword_224673FD0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 3, 0, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x300000043), xmmword_224673FD0);
      }
    }
    if (((v506 | v502) & 1) == 0)
    {
      v582 = v522;
      v583 = v523;
      v584 = v524;
      v581 = v521;
      v580 = v520;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_224673FE0;
      v576 = xmmword_224673FF0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 3, 0, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8300000043), xmmword_224673FF0);
      v164 = (v451 & 1) == 0 && ((v475 | v496) & 1) == 0;
      if ((v453 & 1) == 0 && v164)
      {
        v577 = v522;
        v578 = v523;
        v579 = v524;
        v576 = v521;
        v575 = v520;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_224674000;
        v571 = xmmword_224674010;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 3, 0, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x300000043), xmmword_224674010);
      }
    }
    v165 = (v138 & 1) == 0 && ((v475 | v496) & 1) == 0;
    if (v165 && (v465 & 1) == 0)
    {
      v572 = v522;
      v573 = v523;
      v574 = v524;
      v571 = v521;
      v570 = v520;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224674020;
      v566 = xmmword_224674030;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 3, 0, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x300000043), xmmword_224674030);
    }
  }
  v166 = v32[10];
  if ((v166 & 0x80000000) != 0)
  {
    v168 = *(_DWORD *)(v31 + 524);
    v169 = **v513;
    if (**v513)
      goto LABEL_412;
  }
  else
  {
    v167 = *(_QWORD *)(v31 + 2328);
    if (v166 >= (*(_QWORD *)(v31 + 2336) - v167) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v167 = *(_QWORD *)(v31 + 2328);
    }
    v168 = *(_DWORD *)(v167 + (v166 << 11) + 244);
    v169 = **v513;
    if (**v513)
    {
LABEL_412:
      v170 = v32[10];
      if ((v170 & 0x80000000) == 0)
        goto LABEL_413;
LABEL_427:
      v172 = *(_DWORD *)(v31 + 780);
      if (v169)
        goto LABEL_417;
LABEL_428:
      if ((v172 & 0x10000000) != 0)
        v177 = 0x40000000;
      else
        v177 = 0x80000000;
      if ((v172 & 0x20000000) != 0)
        v172 = v177;
      else
        v172 &= 0xCFFFFFFF;
      v173 = *((_DWORD *)v24 + 5);
      if (**v510)
        goto LABEL_418;
      goto LABEL_435;
    }
  }
  if ((v168 & 0x10000000) != 0)
    v176 = 0x40000000;
  else
    v176 = 0x80000000;
  if ((v168 & 0x20000000) != 0)
    v168 = v176;
  else
    v168 &= 0xCFFFFFFF;
  v170 = v32[10];
  if ((v170 & 0x80000000) != 0)
    goto LABEL_427;
LABEL_413:
  v171 = *(_QWORD *)(v31 + 2328);
  if (v170 >= (*(_QWORD *)(v31 + 2336) - v171) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v171 = *(_QWORD *)(v31 + 2328);
    v169 = **v513;
  }
  v172 = *(_DWORD *)(v171 + (v170 << 11) + 500);
  if (!v169)
    goto LABEL_428;
LABEL_417:
  v173 = *((_DWORD *)v24 + 5);
  if (**v510)
  {
LABEL_418:
    v174 = *((_DWORD *)v24 + 69);
    v175 = *((_DWORD *)v24 + 13);
    goto LABEL_453;
  }
LABEL_435:
  if ((v173 & 0x10000000) != 0)
    v178 = 0x40000000;
  else
    v178 = 0x80000000;
  if ((v173 & 0x20000000) != 0)
    v173 = v178;
  else
    v173 &= 0xCFFFFFFF;
  v179 = *((_DWORD *)v24 + 69);
  if ((v179 & 0x10000000) != 0)
    v180 = 0x40000000;
  else
    v180 = 0x80000000;
  if ((v179 & 0x20000000) != 0)
    v174 = v180;
  else
    v174 = v179 & 0xCFFFFFFF;
  v181 = *((_DWORD *)v24 + 13);
  if ((v181 & 0x10000000) != 0)
    v182 = 0x40000000;
  else
    v182 = 0x80000000;
  if ((v181 & 0x20000000) != 0)
    v175 = v182;
  else
    v175 = v181 & 0xCFFFFFFF;
LABEL_453:
  v457 = v168 >> 30;
  v486 = v173 >> 30;
  v491 = v172 >> 30;
  v183 = v175 >> 30;
  if ((v152 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224674040;
    v536 = xmmword_224674050;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 4, 0, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8400000044), xmmword_224674050);
    if ((v129 & 0x40000000) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224674060;
      v596 = xmmword_224674070;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 4, 0, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8400000044), xmmword_224674070);
      if (((v506 | v502) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_224674080;
        v591 = xmmword_224674090;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 4, 0, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8400000044), xmmword_224674090);
        v184 = (v451 & 1) == 0 && ((v475 | v496) & 1) == 0;
        if ((v453 & 1) == 0 && v184)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_2246740A0;
          v586 = xmmword_2246740B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 4, 0, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x400000044), xmmword_2246740B0);
        }
      }
      v185 = (v138 & 1) == 0 && ((v475 | v496) & 1) == 0;
      if (v185 && (v465 & 1) == 0)
      {
        v587 = v522;
        v588 = v523;
        v589 = v524;
        v586 = v521;
        v585 = v520;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_2246740C0;
        v581 = xmmword_2246740D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 4, 0, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x400000044), xmmword_2246740D0);
      }
    }
    if (((v502 | v491) & 1) == 0)
    {
      v582 = v522;
      v583 = v523;
      v584 = v524;
      v581 = v521;
      v580 = v520;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_2246740E0;
      v576 = xmmword_2246740F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 4, 0, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8400000044), xmmword_2246740F0);
      v186 = (v168 & 0x40000000) == 0 && ((v496 | v486) & 1) == 0;
      if ((v451 & 1) == 0 && v186)
      {
        v577 = v522;
        v578 = v523;
        v579 = v524;
        v576 = v521;
        v575 = v520;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_224674100;
        v571 = xmmword_224674110;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 4, 0, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x400000044), xmmword_224674110);
      }
    }
    v187 = (v465 & 1) == 0 && ((v496 | v486) & 1) == 0;
    if (v187 && (v183 & 1) == 0)
    {
      v572 = v522;
      v573 = v523;
      v574 = v524;
      v571 = v521;
      v570 = v520;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224674120;
      v566 = xmmword_224674130;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 4, 0, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x400000044), xmmword_224674130);
    }
  }
  v188 = v32[10];
  if ((v188 & 0x80000000) != 0)
  {
    v190 = *(_DWORD *)(v31 + 528);
    v191 = **v513;
    if (**v513)
      goto LABEL_486;
  }
  else
  {
    v189 = *(_QWORD *)(v31 + 2328);
    if (v188 >= (*(_QWORD *)(v31 + 2336) - v189) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v189 = *(_QWORD *)(v31 + 2328);
    }
    v190 = *(_DWORD *)(v189 + (v188 << 11) + 248);
    v191 = **v513;
    if (**v513)
    {
LABEL_486:
      v192 = v32[10];
      if ((v192 & 0x80000000) == 0)
        goto LABEL_487;
LABEL_501:
      v194 = *(_DWORD *)(v31 + 784);
      if (v191)
        goto LABEL_491;
LABEL_502:
      if ((v194 & 0x10000000) != 0)
        v198 = 0x40000000;
      else
        v198 = 0x80000000;
      if ((v194 & 0x20000000) != 0)
        v194 = v198;
      else
        v194 &= 0xCFFFFFFF;
      v195 = *((_DWORD *)v24 + 6);
      if (**v510)
        goto LABEL_492;
      goto LABEL_509;
    }
  }
  if ((v190 & 0x10000000) != 0)
    v197 = 0x40000000;
  else
    v197 = 0x80000000;
  if ((v190 & 0x20000000) != 0)
    v190 = v197;
  else
    v190 &= 0xCFFFFFFF;
  v192 = v32[10];
  if ((v192 & 0x80000000) != 0)
    goto LABEL_501;
LABEL_487:
  v193 = *(_QWORD *)(v31 + 2328);
  if (v192 >= (*(_QWORD *)(v31 + 2336) - v193) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v193 = *(_QWORD *)(v31 + 2328);
    v191 = **v513;
  }
  v194 = *(_DWORD *)(v193 + (v192 << 11) + 504);
  if (!v191)
    goto LABEL_502;
LABEL_491:
  v195 = *((_DWORD *)v24 + 6);
  if (**v510)
  {
LABEL_492:
    v507 = *((_DWORD *)v24 + 70);
    v196 = *((_DWORD *)v24 + 14);
    goto LABEL_527;
  }
LABEL_509:
  if ((v195 & 0x10000000) != 0)
    v199 = 0x40000000;
  else
    v199 = 0x80000000;
  if ((v195 & 0x20000000) != 0)
    v195 = v199;
  else
    v195 &= 0xCFFFFFFF;
  v200 = *((_DWORD *)v24 + 70);
  if ((v200 & 0x10000000) != 0)
    v201 = 0x40000000;
  else
    v201 = 0x80000000;
  if ((v200 & 0x20000000) != 0)
    v202 = v201;
  else
    v202 = v200 & 0xCFFFFFFF;
  v507 = v202;
  v203 = *((_DWORD *)v24 + 14);
  if ((v203 & 0x10000000) != 0)
    v204 = 0x40000000;
  else
    v204 = 0x80000000;
  if ((v203 & 0x20000000) != 0)
    v196 = v204;
  else
    v196 = v203 & 0xCFFFFFFF;
LABEL_527:
  v454 = v190 >> 30;
  v476 = v195 >> 30;
  v482 = v194 >> 30;
  v461 = v196 >> 30;
  v557 = v522;
  v558 = v523;
  v559 = v524;
  v556 = v521;
  v555 = v520;
  if ((v174 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224674140;
    v536 = xmmword_224674150;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 5, 0, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8500000045), xmmword_224674150);
    if ((v152 & 0x40000000) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224674160;
      v596 = xmmword_224674170;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 5, 0, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8500000045), xmmword_224674170);
      if (((v502 | v491) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_224674180;
        v591 = xmmword_224674190;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 5, 0, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8500000045), xmmword_224674190);
        v205 = (v457 & 1) == 0 && ((v496 | v486) & 1) == 0;
        if ((v451 & 1) == 0 && v205)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_2246741A0;
          v586 = xmmword_2246741B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 5, 0, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x500000045), xmmword_2246741B0);
        }
      }
      v206 = (v465 & 1) == 0 && ((v496 | v486) & 1) == 0;
      if (v206 && (v183 & 1) == 0)
      {
        v587 = v557;
        v588 = v558;
        v589 = v559;
        v586 = v556;
        v585 = v555;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_2246741C0;
        v581 = xmmword_2246741D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 5, 0, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x500000045), xmmword_2246741D0);
      }
    }
    if (((v491 | v482) & 1) == 0)
    {
      v582 = v557;
      v583 = v558;
      v584 = v559;
      v581 = v556;
      v580 = v555;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_2246741E0;
      v576 = xmmword_2246741F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 5, 0, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8500000045), xmmword_2246741F0);
      v207 = (v190 & 0x40000000) == 0 && ((v486 | v476) & 1) == 0;
      if ((v457 & 1) == 0 && v207)
      {
        v577 = v557;
        v578 = v558;
        v579 = v559;
        v576 = v556;
        v575 = v555;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_224674200;
        v571 = xmmword_224674210;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 5, 0, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x500000045), xmmword_224674210);
      }
    }
    v208 = (v183 & 1) == 0 && ((v486 | v476) & 1) == 0;
    if (v208 && (v461 & 1) == 0)
    {
      v572 = v557;
      v573 = v558;
      v574 = v559;
      v571 = v556;
      v570 = v555;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224674220;
      v566 = xmmword_224674230;
      *(_QWORD *)&v550 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 5, 0, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v550, COERCE_DOUBLE(0x500000045), xmmword_224674230);
    }
  }
  v552 = v522;
  v553 = v523;
  v554 = v524;
  v551 = v521;
  v550 = v520;
  v209 = v32[10];
  if ((v209 & 0x80000000) != 0)
  {
    v211 = *(_DWORD *)(v31 + 532);
    v212 = **v513;
    if (**v513)
      goto LABEL_560;
  }
  else
  {
    v210 = *(_QWORD *)(v31 + 2328);
    if (v209 >= (*(_QWORD *)(v31 + 2336) - v210) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v210 = *(_QWORD *)(v31 + 2328);
    }
    v211 = *(_DWORD *)(v210 + (v209 << 11) + 252);
    v212 = **v513;
    if (**v513)
    {
LABEL_560:
      v213 = v32[10];
      if ((v213 & 0x80000000) == 0)
        goto LABEL_561;
LABEL_575:
      v215 = *(_DWORD *)(v31 + 788);
      if (v212)
        goto LABEL_565;
LABEL_576:
      if ((v215 & 0x10000000) != 0)
        v220 = 0x40000000;
      else
        v220 = 0x80000000;
      if ((v215 & 0x20000000) != 0)
        v215 = v220;
      else
        v215 &= 0xCFFFFFFF;
      v216 = *((_DWORD *)v24 + 7);
      if (**v510)
        goto LABEL_566;
      goto LABEL_583;
    }
  }
  if ((v211 & 0x10000000) != 0)
    v219 = 0x40000000;
  else
    v219 = 0x80000000;
  if ((v211 & 0x20000000) != 0)
    v211 = v219;
  else
    v211 &= 0xCFFFFFFF;
  v213 = v32[10];
  if ((v213 & 0x80000000) != 0)
    goto LABEL_575;
LABEL_561:
  v214 = *(_QWORD *)(v31 + 2328);
  if (v213 >= (*(_QWORD *)(v31 + 2336) - v214) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v214 = *(_QWORD *)(v31 + 2328);
    v212 = **v513;
  }
  v215 = *(_DWORD *)(v214 + (v213 << 11) + 508);
  if (!v212)
    goto LABEL_576;
LABEL_565:
  v216 = *((_DWORD *)v24 + 7);
  if (**v510)
  {
LABEL_566:
    v217 = *((_DWORD *)v24 + 71);
    v218 = *((_DWORD *)v24 + 15);
    goto LABEL_601;
  }
LABEL_583:
  if ((v216 & 0x10000000) != 0)
    v221 = 0x40000000;
  else
    v221 = 0x80000000;
  if ((v216 & 0x20000000) != 0)
    v216 = v221;
  else
    v216 &= 0xCFFFFFFF;
  v222 = *((_DWORD *)v24 + 71);
  if ((v222 & 0x10000000) != 0)
    v223 = 0x40000000;
  else
    v223 = 0x80000000;
  if ((v222 & 0x20000000) != 0)
    v217 = v223;
  else
    v217 = v222 & 0xCFFFFFFF;
  v224 = *((_DWORD *)v24 + 15);
  if ((v224 & 0x10000000) != 0)
    v225 = 0x40000000;
  else
    v225 = 0x80000000;
  if ((v224 & 0x20000000) != 0)
    v218 = v225;
  else
    v218 = v224 & 0xCFFFFFFF;
LABEL_601:
  v503 = v211 >> 30;
  v226 = v215 >> 30;
  v227 = v216 >> 30;
  v511 = v218 >> 30;
  v562 = v522;
  v563 = v523;
  v564 = v524;
  v561 = v521;
  v560 = v520;
  if ((v507 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224674240;
    v536 = xmmword_224674250;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 6, 0, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8600000046), xmmword_224674250);
    if ((v174 & 0x40000000) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224674260;
      v596 = xmmword_224674270;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 6, 0, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8600000046), xmmword_224674270);
      if (((v491 | v482) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_224674280;
        v591 = xmmword_224674290;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 6, 0, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8600000046), xmmword_224674290);
        v228 = (v454 & 1) == 0 && ((v486 | v476) & 1) == 0;
        if ((v457 & 1) == 0 && v228)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_2246742A0;
          v586 = xmmword_2246742B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 6, 0, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x600000046), xmmword_2246742B0);
        }
      }
      v229 = (v183 & 1) == 0 && ((v486 | v476) & 1) == 0;
      if (v229 && (v461 & 1) == 0)
      {
        v587 = v562;
        v588 = v563;
        v589 = v564;
        v586 = v561;
        v585 = v560;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_2246742C0;
        v581 = xmmword_2246742D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 6, 0, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x600000046), xmmword_2246742D0);
      }
    }
    if (((v482 | v226) & 1) == 0)
    {
      v582 = v562;
      v583 = v563;
      v584 = v564;
      v581 = v561;
      v580 = v560;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_2246742E0;
      v576 = xmmword_2246742F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 6, 0, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8600000046), xmmword_2246742F0);
      v230 = (v211 & 0x40000000) == 0 && ((v476 | v227) & 1) == 0;
      if ((v454 & 1) == 0 && v230)
      {
        v577 = v562;
        v578 = v563;
        v579 = v564;
        v576 = v561;
        v575 = v560;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_224674300;
        v571 = xmmword_224674310;
        *(_QWORD *)&v545 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 6, 0, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v545, COERCE_DOUBLE(0x600000046), xmmword_224674310);
      }
    }
    v231 = (v461 & 1) == 0 && ((v476 | v227) & 1) == 0;
    if (v231 && (v511 & 1) == 0)
    {
      v572 = v562;
      v573 = v563;
      v574 = v564;
      v571 = v561;
      v570 = v560;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224674320;
      v566 = xmmword_224674330;
      *(_QWORD *)&v601[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 6, 0, 1, (uint64_t)&v545, (uint64_t)&v565, (uint64_t)v601, COERCE_DOUBLE(0x600000046), xmmword_224674330);
    }
  }
  v232 = v32[19];
  if ((v232 & 0x80000000) != 0)
  {
    v235 = *v513;
    v236 = *(_DWORD *)(v31 + 504);
    v237 = **v513;
    if (**v513)
      goto LABEL_634;
  }
  else
  {
    v233 = *(_QWORD *)(v31 + 2328);
    if (v232 >= (*(_QWORD *)(v31 + 2336) - v233) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v233 = *(_QWORD *)(v31 + 2328);
    }
    v234 = v233 + (v232 << 11);
    v235 = *v513;
    v236 = *(_DWORD *)(v234 + 224);
    v237 = **v513;
    if (**v513)
    {
LABEL_634:
      v238 = v32[19];
      if ((v238 & 0x80000000) == 0)
        goto LABEL_635;
LABEL_654:
      v240 = *(_DWORD *)(v31 + 760);
      if (v237)
        goto LABEL_639;
      goto LABEL_655;
    }
  }
  if ((v236 & 0x10000000) != 0)
    v245 = 0x40000000;
  else
    v245 = 0x80000000;
  if ((v236 & 0x20000000) != 0)
    v236 = v245;
  else
    v236 &= 0xCFFFFFFF;
  v238 = v32[19];
  if ((v238 & 0x80000000) != 0)
    goto LABEL_654;
LABEL_635:
  v239 = *(_QWORD *)(v31 + 2328);
  if (v238 >= (*(_QWORD *)(v31 + 2336) - v239) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v239 = *(_QWORD *)(v31 + 2328);
    v235 = *v513;
    v237 = **v513;
  }
  v240 = *(_DWORD *)(v239 + (v238 << 11) + 480);
  if (v237)
  {
LABEL_639:
    v241 = v32[22];
    if ((v241 & 0x80000000) == 0)
      goto LABEL_640;
LABEL_662:
    v243 = *(_DWORD *)(v31 + 280);
    if (v237)
      goto LABEL_644;
    goto LABEL_663;
  }
LABEL_655:
  if ((v240 & 0x10000000) != 0)
    v246 = 0x40000000;
  else
    v246 = 0x80000000;
  if ((v240 & 0x20000000) != 0)
    v240 = v246;
  else
    v240 &= 0xCFFFFFFF;
  v241 = v32[22];
  if ((v241 & 0x80000000) != 0)
    goto LABEL_662;
LABEL_640:
  v242 = *(_QWORD *)(v31 + 2328);
  if (v241 >= (*(_QWORD *)(v31 + 2336) - v242) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v242 = *(_QWORD *)(v31 + 2328);
    v235 = *v513;
    v237 = **v513;
  }
  v243 = *(_DWORD *)(v242 + (v241 << 11));
  if (v237)
  {
LABEL_644:
    v244 = v32[22];
    if ((v244 & 0x80000000) != 0)
      goto LABEL_715;
    goto LABEL_670;
  }
LABEL_663:
  if ((v243 & 0x10000000) != 0)
    v247 = 0x40000000;
  else
    v247 = 0x80000000;
  if ((v243 & 0x20000000) != 0)
    v243 = v247;
  else
    v243 &= 0xCFFFFFFF;
  v244 = v32[22];
  if ((v244 & 0x80000000) != 0)
    goto LABEL_715;
LABEL_670:
  v248 = *(_QWORD *)(v31 + 2328);
  v249 = (*(_QWORD *)(v31 + 2336) - v248) >> 11;
  if (v249 > v244)
    goto LABEL_674;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v235 = *v513;
  v244 = v32[22];
  if ((v244 & 0x80000000) != 0)
  {
LABEL_715:
    v250 = *(_DWORD *)(v31 + 312);
    if (*v235)
      goto LABEL_684;
    goto LABEL_678;
  }
  v248 = *(_QWORD *)(v31 + 2328);
  v249 = (*(_QWORD *)(v31 + 2336) - v248) >> 11;
LABEL_674:
  if (v249 <= v244)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v248 = *(_QWORD *)(v31 + 2328);
    v235 = *v513;
  }
  v250 = *(_DWORD *)(v248 + (v244 << 11) + 32);
  if (!*v235)
  {
LABEL_678:
    if ((v250 & 0x10000000) != 0)
      v251 = 0x40000000;
    else
      v251 = 0x80000000;
    if ((v250 & 0x20000000) != 0)
      v250 = v251;
    else
      v250 &= 0xCFFFFFFF;
  }
LABEL_684:
  v567 = v552;
  v568 = v553;
  v569 = v554;
  v566 = v551;
  v565 = v550;
  if ((v217 & 0x40000000) != 0)
  {
    v542 = v552;
    v543 = v553;
    v544 = v554;
    *(_QWORD *)&v595 = 0x161616160D0D0D0DLL;
    v541 = v551;
    v540 = v550;
    v535 = xmmword_224674340;
    v536 = xmmword_224674350;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 7, 0, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8700000047), xmmword_224674350);
    if ((v507 & 0x40000000) == 0)
    {
      v537 = v552;
      v538 = v553;
      v539 = v554;
      v536 = v551;
      v535 = v550;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224674360;
      v596 = xmmword_224674370;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 7, 0, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8700000047), xmmword_224674370);
      if (((v482 | v226) & 1) == 0)
      {
        v597 = v552;
        v598 = v553;
        v599 = v554;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v595 = v550;
        v596 = v551;
        v590 = xmmword_224674380;
        v591 = xmmword_224674390;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 7, 0, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8700000047), xmmword_224674390);
        v252 = (v503 & 1) == 0 && ((v476 | v227) & 1) == 0;
        if ((v454 & 1) == 0 && v252)
        {
          v592 = v552;
          v593 = v553;
          v594 = v554;
          v591 = v551;
          v590 = v550;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_2246743A0;
          v586 = xmmword_2246743B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 7, 0, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x700000047), xmmword_2246743B0);
        }
      }
      v253 = (v461 & 1) == 0 && ((v476 | v227) & 1) == 0;
      if (v253 && (v511 & 1) == 0)
      {
        v587 = v567;
        v588 = v568;
        v589 = v569;
        v586 = v566;
        v585 = v565;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_2246743C0;
        v581 = xmmword_2246743D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 7, 0, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x700000047), xmmword_2246743D0);
      }
    }
    if (!(v240 & 0x40000000 | v226 & 1))
    {
      v582 = v567;
      v583 = v568;
      v584 = v569;
      *(_QWORD *)&v570 = 0x13130A0A16160D0DLL;
      v581 = v566;
      v580 = v565;
      v575 = xmmword_2246743E0;
      v576 = xmmword_2246743F0;
      *(_QWORD *)&v545 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 7, 0, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v545, COERCE_DOUBLE(0x8700000047), xmmword_2246743F0);
      v254 = (v236 & 0x40000000) == 0 && (v243 & 0x40000000 | v227 & 1) == 0;
      if ((v503 & 1) == 0 && v254)
      {
        v577 = v567;
        v578 = v568;
        v579 = v569;
        *(_QWORD *)&v545 = 0x131316160A0A0D0DLL;
        v576 = v566;
        v575 = v565;
        v570 = xmmword_224674400;
        v571 = xmmword_224674410;
        *(_QWORD *)&v601[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 7, 0, 1, (uint64_t)&v545, (uint64_t)&v570, (uint64_t)v601, COERCE_DOUBLE(0x700000047), xmmword_224674410);
      }
    }
    v255 = (v511 & 1) == 0 && (v243 & 0x40000000 | v227 & 1) == 0;
    if (v255 && (v250 & 0x40000000) == 0)
    {
      v572 = v567;
      v573 = v568;
      v574 = v569;
      *(_QWORD *)&v601[0] = 0x16160D0D16160D0DLL;
      v571 = v566;
      v570 = v565;
      v545 = xmmword_224674420;
      v546 = xmmword_224674430;
      v602[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 7, 0, 1, (uint64_t)v601, (uint64_t)&v545, (uint64_t)v602, COERCE_DOUBLE(0x700000047), xmmword_224674430);
    }
  }
  v256 = v467[2];
  v512 = a2[1];
  v514 = *a2;
  v518 = v470[3];
  v519 = v470[4];
  v516 = *((float32x4_t *)v470 + 1);
  v517 = v470[2];
  v515 = *v470;
  v466 = *(_OWORD *)v467;
  v504 = (_BYTE **)a2[2];
  v508 = *v467;
  v257 = *(_DWORD *)v256;
  v258 = ***v467;
  if (***v467)
  {
    v259 = *((_DWORD *)v256 + 64);
    v260 = *((_DWORD *)v256 + 8);
    v261 = *((_DWORD *)v256 + 16);
    v497 = *((_DWORD *)v256 + 72);
    if ((v497 & 0x40000000) == 0)
    {
LABEL_714:
      v262 = 0;
      v263 = 0;
      v264 = 0;
      v265 = 0;
      v266 = 0;
      goto LABEL_767;
    }
  }
  else
  {
    if ((v257 & 0x20000000) != 0)
      v257 *= 4;
    v267 = *((_DWORD *)v256 + 64);
    if ((v267 & 0x20000000) != 0)
      v259 = 4 * v267;
    else
      v259 = *((_DWORD *)v256 + 64);
    v268 = *((_DWORD *)v256 + 8);
    if ((v268 & 0x20000000) != 0)
      v260 = 4 * v268;
    else
      v260 = *((_DWORD *)v256 + 8);
    v269 = *((_DWORD *)v256 + 72);
    if ((v269 & 0x20000000) != 0)
      v270 = 4 * v269;
    else
      v270 = *((_DWORD *)v256 + 72);
    v271 = *((_DWORD *)v256 + 16);
    if ((v271 & 0x10000000) != 0)
      v272 = 0x40000000;
    else
      v272 = 0x80000000;
    if ((v271 & 0x20000000) != 0)
      v261 = v272;
    else
      v261 = v271 & 0xCFFFFFFF;
    v497 = v270;
    if ((v270 & 0x40000000) == 0)
      goto LABEL_714;
  }
  v273 = *(unsigned int *)(v512 + 16);
  if ((v273 & 0x80000000) != 0)
  {
    v275 = *(_DWORD *)(v514 + 308);
    v276 = **v504;
    if (**v504)
      goto LABEL_740;
  }
  else
  {
    v274 = *(_QWORD *)(v514 + 2328);
    if (v273 >= (*(_QWORD *)(v514 + 2336) - v274) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v274 = *(_QWORD *)(v514 + 2328);
    }
    v275 = *(_DWORD *)(v274 + (v273 << 11) + 28);
    v276 = **v504;
    if (**v504)
    {
LABEL_740:
      v277 = *(unsigned int *)(v512 + 16);
      if ((v277 & 0x80000000) == 0)
        goto LABEL_741;
LABEL_1274:
      v279 = *(_DWORD *)(v514 + 564);
      if (v276)
        goto LABEL_745;
      goto LABEL_1275;
    }
  }
  if ((v275 & 0x10000000) != 0)
    v447 = 0x40000000;
  else
    v447 = 0x80000000;
  if ((v275 & 0x20000000) != 0)
    v275 = v447;
  else
    v275 &= 0xCFFFFFFF;
  v277 = *(unsigned int *)(v512 + 16);
  if ((v277 & 0x80000000) != 0)
    goto LABEL_1274;
LABEL_741:
  v278 = *(_QWORD *)(v514 + 2328);
  if (v277 >= (*(_QWORD *)(v514 + 2336) - v278) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v278 = *(_QWORD *)(v514 + 2328);
    v276 = **v504;
  }
  v279 = *(_DWORD *)(v278 + (v277 << 11) + 284);
  if (v276)
  {
LABEL_745:
    v280 = *(unsigned int *)(v512 + 16);
    if ((v280 & 0x80000000) == 0)
      goto LABEL_746;
LABEL_1282:
    v282 = *(_DWORD *)(v514 + 340);
    if (v276)
      goto LABEL_750;
    goto LABEL_1283;
  }
LABEL_1275:
  if ((v279 & 0x10000000) != 0)
    v448 = 0x40000000;
  else
    v448 = 0x80000000;
  if ((v279 & 0x20000000) != 0)
    v279 = v448;
  else
    v279 &= 0xCFFFFFFF;
  v280 = *(unsigned int *)(v512 + 16);
  if ((v280 & 0x80000000) != 0)
    goto LABEL_1282;
LABEL_746:
  v281 = *(_QWORD *)(v514 + 2328);
  if (v280 >= (*(_QWORD *)(v514 + 2336) - v281) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v281 = *(_QWORD *)(v514 + 2328);
    v276 = **v504;
  }
  v282 = *(_DWORD *)(v281 + (v280 << 11) + 60);
  if (v276)
  {
LABEL_750:
    v283 = *(unsigned int *)(v512 + 16);
    if ((v283 & 0x80000000) == 0)
      goto LABEL_751;
LABEL_1290:
    v285 = *(_DWORD *)(v514 + 596);
    if (v276)
      goto LABEL_755;
    goto LABEL_1291;
  }
LABEL_1283:
  if ((v282 & 0x10000000) != 0)
    v449 = 0x40000000;
  else
    v449 = 0x80000000;
  if ((v282 & 0x20000000) != 0)
    v282 = v449;
  else
    v282 &= 0xCFFFFFFF;
  v283 = *(unsigned int *)(v512 + 16);
  if ((v283 & 0x80000000) != 0)
    goto LABEL_1290;
LABEL_751:
  v284 = *(_QWORD *)(v514 + 2328);
  if (v283 >= (*(_QWORD *)(v514 + 2336) - v284) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v284 = *(_QWORD *)(v514 + 2328);
    v276 = **v504;
  }
  v285 = *(_DWORD *)(v284 + (v283 << 11) + 316);
  if (v276)
  {
LABEL_755:
    v286 = *(unsigned int *)(v512 + 16);
    if ((v286 & 0x80000000) == 0)
      goto LABEL_756;
    goto LABEL_1298;
  }
LABEL_1291:
  if ((v285 & 0x10000000) != 0)
    v450 = 0x40000000;
  else
    v450 = 0x80000000;
  if ((v285 & 0x20000000) != 0)
    v285 = v450;
  else
    v285 &= 0xCFFFFFFF;
  v286 = *(unsigned int *)(v512 + 16);
  if ((v286 & 0x80000000) == 0)
  {
LABEL_756:
    v287 = *(_QWORD *)(v514 + 2328);
    if (v286 >= (*(_QWORD *)(v514 + 2336) - v287) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v287 = *(_QWORD *)(v514 + 2328);
      v276 = **v504;
    }
    v288 = v287 + (v286 << 11);
    v266 = (v275 >> 30) & 1;
    v265 = (v279 >> 30) & 1;
    v264 = (v282 >> 30) & 1;
    v289 = *(_DWORD *)(v288 + 92);
    v263 = (v285 >> 30) & 1;
    if (v276)
      goto LABEL_766;
    goto LABEL_760;
  }
LABEL_1298:
  v266 = (v275 >> 30) & 1;
  v265 = (v279 >> 30) & 1;
  v264 = (v282 >> 30) & 1;
  v289 = *(_DWORD *)(v514 + 372);
  v263 = (v285 >> 30) & 1;
  if (!v276)
  {
LABEL_760:
    if ((v289 & 0x10000000) != 0)
      v290 = 0x40000000;
    else
      v290 = 0x80000000;
    if ((v289 & 0x20000000) != 0)
      v289 = v290;
    else
      v289 &= 0xCFFFFFFF;
  }
LABEL_766:
  v262 = (v289 >> 30) & 1;
  v258 = **v508;
LABEL_767:
  v477 = v257 >> 30;
  v547 = v517;
  v548 = v518;
  v549 = v519;
  v546 = v516;
  v545 = v515;
  v291 = *((_DWORD *)v256 + 1);
  if (v258)
  {
    v292 = *((_DWORD *)v256 + 65);
    v293 = *((_DWORD *)v256 + 9);
    v294 = *((_DWORD *)v256 + 73);
    v295 = *((_DWORD *)v256 + 17);
  }
  else
  {
    if ((v291 & 0x10000000) != 0)
      v296 = 0x40000000;
    else
      v296 = 0x80000000;
    if ((v291 & 0x20000000) != 0)
      v291 = v296;
    else
      v291 &= 0xCFFFFFFF;
    v297 = *((_DWORD *)v256 + 65);
    if ((v297 & 0x10000000) != 0)
      v298 = 0x40000000;
    else
      v298 = 0x80000000;
    if ((v297 & 0x20000000) != 0)
      v292 = v298;
    else
      v292 = v297 & 0xCFFFFFFF;
    v299 = *((_DWORD *)v256 + 9);
    if ((v299 & 0x10000000) != 0)
      v300 = 0x40000000;
    else
      v300 = 0x80000000;
    if ((v299 & 0x20000000) != 0)
      v293 = v300;
    else
      v293 = v299 & 0xCFFFFFFF;
    v301 = *((_DWORD *)v256 + 73);
    if ((v301 & 0x10000000) != 0)
      v302 = 0x40000000;
    else
      v302 = 0x80000000;
    if ((v301 & 0x20000000) != 0)
      v294 = v302;
    else
      v294 = v301 & 0xCFFFFFFF;
    v303 = *((_DWORD *)v256 + 17);
    if ((v303 & 0x10000000) != 0)
      v295 = 0x40000000;
    else
      v295 = 0x80000000;
    if ((v303 & 0x20000000) == 0)
      v295 = v303 & 0xCFFFFFFF;
  }
  v304 = v260 >> 30;
  v305 = v259 >> 30;
  v306 = v261 >> 30;
  v462 = v291 >> 30;
  v487 = v293 >> 30;
  v492 = v292 >> 30;
  v471 = v295 >> 30;
  if ((v497 & 0x40000000) != 0)
  {
    v542 = v517;
    v543 = v518;
    v544 = v519;
    v541 = v516;
    v540 = v515;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224674440;
    v536 = xmmword_224674450;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 0, 1, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8800000048), xmmword_224674450);
    if (!v263)
    {
      v537 = v517;
      v538 = v518;
      v539 = v519;
      v536 = v516;
      v535 = v515;
      *(_QWORD *)&v590 = 0x4040D0D04040D0DLL;
      v595 = xmmword_224674460;
      v596 = xmmword_224674470;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 0, 1, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8800000048), xmmword_224674470);
      v307 = (v264 | v304 & 1) == 0;
      if (!(v265 | v305 & 1))
      {
        v597 = v517;
        v598 = v518;
        v599 = v519;
        v595 = v515;
        v596 = v516;
        *(_QWORD *)&v585 = 0x40404040D0D0D0DLL;
        v590 = xmmword_224674480;
        v591 = xmmword_224674490;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 0, 1, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8800000048), xmmword_224674490);
        v308 = (v477 & 1) == 0 && v307;
        if (!v266 && v308)
        {
          v592 = v517;
          v593 = v518;
          v594 = v519;
          v591 = v516;
          v590 = v515;
          *(_QWORD *)&v580 = 0x4040D0D04040D0DLL;
          v585 = xmmword_2246744A0;
          v586 = xmmword_2246744B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 0, 1, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x800000048), xmmword_2246744B0);
        }
      }
      if (v262)
        v309 = 0;
      else
        v309 = v307;
      if (v309 && (v306 & 1) == 0)
      {
        v587 = v517;
        v588 = v518;
        v589 = v519;
        *(_QWORD *)&v575 = 0x40404040D0D0D0DLL;
        v586 = v516;
        v585 = v515;
        v580 = xmmword_2246744C0;
        v581 = xmmword_2246744D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 0, 1, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x800000048), xmmword_2246744D0);
      }
    }
    if (((v305 | v492) & 1) == 0)
    {
      v582 = v517;
      v583 = v518;
      v584 = v519;
      v581 = v516;
      v580 = v515;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_2246744E0;
      v576 = xmmword_2246744F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 0, 1, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8800000048), xmmword_2246744F0);
      v310 = (v462 & 1) == 0 && ((v304 | v487) & 1) == 0;
      if ((v477 & 1) == 0 && v310)
      {
        v577 = v517;
        v578 = v518;
        v579 = v519;
        v576 = v516;
        v575 = v515;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_224674500;
        v571 = xmmword_224674510;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 0, 1, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x800000048), xmmword_224674510);
      }
    }
    v311 = (v306 & 1) == 0 && ((v304 | v487) & 1) == 0;
    if (v311 && (v471 & 1) == 0)
    {
      v572 = v517;
      v573 = v518;
      v574 = v519;
      v571 = v516;
      v570 = v515;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224674520;
      v566 = xmmword_224674530;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 0, 1, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x800000048), xmmword_224674530);
    }
  }
  v527 = v547;
  v528 = v548;
  v529 = v549;
  v525 = v545;
  v526 = v546;
  v312 = *((_DWORD *)v256 + 2);
  if (**v508)
  {
    v313 = *((_DWORD *)v256 + 66);
    v314 = *((_DWORD *)v256 + 10);
    v315 = *((_DWORD *)v256 + 74);
    v316 = *((_DWORD *)v256 + 18);
  }
  else
  {
    if ((v312 & 0x10000000) != 0)
      v317 = 0x40000000;
    else
      v317 = 0x80000000;
    if ((v312 & 0x20000000) != 0)
      v312 = v317;
    else
      v312 &= 0xCFFFFFFF;
    v318 = *((_DWORD *)v256 + 66);
    if ((v318 & 0x10000000) != 0)
      v319 = 0x40000000;
    else
      v319 = 0x80000000;
    if ((v318 & 0x20000000) != 0)
      v313 = v319;
    else
      v313 = v318 & 0xCFFFFFFF;
    v320 = *((_DWORD *)v256 + 10);
    if ((v320 & 0x10000000) != 0)
      v321 = 0x40000000;
    else
      v321 = 0x80000000;
    if ((v320 & 0x20000000) != 0)
      v314 = v321;
    else
      v314 = v320 & 0xCFFFFFFF;
    v322 = *((_DWORD *)v256 + 74);
    if ((v322 & 0x10000000) != 0)
      v323 = 0x40000000;
    else
      v323 = 0x80000000;
    if ((v322 & 0x20000000) != 0)
      v315 = v323;
    else
      v315 = v322 & 0xCFFFFFFF;
    v324 = *((_DWORD *)v256 + 18);
    if ((v324 & 0x10000000) != 0)
      v316 = 0x40000000;
    else
      v316 = 0x80000000;
    if ((v324 & 0x20000000) == 0)
      v316 = v324 & 0xCFFFFFFF;
  }
  v325 = v314 >> 30;
  v458 = v312 >> 30;
  v483 = v313 >> 30;
  v468 = v316 >> 30;
  v532 = v547;
  v533 = v548;
  v534 = v549;
  v530 = v545;
  v531 = v546;
  if ((v294 & 0x40000000) != 0)
  {
    v542 = v547;
    v543 = v548;
    v544 = v549;
    v541 = v546;
    v540 = v545;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224674540;
    v536 = xmmword_224674550;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 1, 1, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8900000049), xmmword_224674550);
    if ((v497 & 0x40000000) == 0)
    {
      v537 = v547;
      v538 = v548;
      v539 = v549;
      v536 = v546;
      v535 = v545;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224674560;
      v596 = xmmword_224674570;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 1, 1, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8900000049), xmmword_224674570);
      if (((v305 | v492) & 1) == 0)
      {
        v597 = v547;
        v598 = v548;
        v599 = v549;
        v595 = v545;
        v596 = v546;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_224674580;
        v591 = xmmword_224674590;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 1, 1, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8900000049), xmmword_224674590);
        v326 = (v462 & 1) == 0 && ((v304 | v487) & 1) == 0;
        if ((v477 & 1) == 0 && v326)
        {
          v592 = v547;
          v593 = v548;
          v594 = v549;
          v591 = v546;
          v590 = v545;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_2246745A0;
          v586 = xmmword_2246745B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 1, 1, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x900000049), xmmword_2246745B0);
        }
      }
      v327 = (v306 & 1) == 0 && ((v304 | v487) & 1) == 0;
      if (v327 && (v471 & 1) == 0)
      {
        v587 = v532;
        v588 = v533;
        v589 = v534;
        v586 = v531;
        v585 = v530;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_2246745C0;
        v581 = xmmword_2246745D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 1, 1, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x900000049), xmmword_2246745D0);
      }
    }
    if (((v492 | v483) & 1) == 0)
    {
      v582 = v532;
      v583 = v533;
      v584 = v534;
      v581 = v531;
      v580 = v530;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_2246745E0;
      v576 = xmmword_2246745F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 1, 1, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8900000049), xmmword_2246745F0);
      v328 = (v458 & 1) == 0 && ((v487 | v325) & 1) == 0;
      if ((v462 & 1) == 0 && v328)
      {
        v577 = v532;
        v578 = v533;
        v579 = v534;
        v576 = v531;
        v575 = v530;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_224674600;
        v571 = xmmword_224674610;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 1, 1, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x900000049), xmmword_224674610);
      }
    }
    v329 = (v471 & 1) == 0 && ((v487 | v325) & 1) == 0;
    if (v329 && (v468 & 1) == 0)
    {
      v572 = v532;
      v573 = v533;
      v574 = v534;
      v571 = v531;
      v570 = v530;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224674620;
      v566 = xmmword_224674630;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 1, 1, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x900000049), xmmword_224674630);
    }
  }
  v330 = *((_DWORD *)v256 + 3);
  if (**v508)
  {
    v331 = *((_DWORD *)v256 + 67);
    v332 = *((_DWORD *)v256 + 11);
    v333 = *((_DWORD *)v256 + 75);
    v334 = *((_DWORD *)v256 + 19);
  }
  else
  {
    if ((v330 & 0x10000000) != 0)
      v335 = 0x40000000;
    else
      v335 = 0x80000000;
    if ((v330 & 0x20000000) != 0)
      v330 = v335;
    else
      v330 &= 0xCFFFFFFF;
    v336 = *((_DWORD *)v256 + 67);
    if ((v336 & 0x10000000) != 0)
      v337 = 0x40000000;
    else
      v337 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v331 = v337;
    else
      v331 = v336 & 0xCFFFFFFF;
    v338 = *((_DWORD *)v256 + 11);
    if ((v338 & 0x10000000) != 0)
      v339 = 0x40000000;
    else
      v339 = 0x80000000;
    if ((v338 & 0x20000000) != 0)
      v332 = v339;
    else
      v332 = v338 & 0xCFFFFFFF;
    v340 = *((_DWORD *)v256 + 75);
    if ((v340 & 0x10000000) != 0)
      v341 = 0x40000000;
    else
      v341 = 0x80000000;
    if ((v340 & 0x20000000) != 0)
      v333 = v341;
    else
      v333 = v340 & 0xCFFFFFFF;
    v342 = *((_DWORD *)v256 + 19);
    if ((v342 & 0x10000000) != 0)
      v334 = 0x40000000;
    else
      v334 = 0x80000000;
    if ((v342 & 0x20000000) == 0)
      v334 = v342 & 0xCFFFFFFF;
  }
  v478 = v332 >> 30;
  v455 = v330 >> 30;
  v498 = v331 >> 30;
  v343 = v334 >> 30;
  if ((v315 & 0x40000000) != 0)
  {
    v542 = v527;
    v543 = v528;
    v544 = v529;
    v541 = v526;
    v540 = v525;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224674640;
    v536 = xmmword_224674650;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 2, 1, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8A0000004ALL), xmmword_224674650);
    if ((v294 & 0x40000000) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224674660;
      v596 = xmmword_224674670;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 2, 1, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8A0000004ALL), xmmword_224674670);
      if (((v492 | v483) & 1) == 0)
      {
        v597 = v527;
        v598 = v528;
        v599 = v529;
        v595 = v525;
        v596 = v526;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_224674680;
        v591 = xmmword_224674690;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 2, 1, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8A0000004ALL), xmmword_224674690);
        v344 = (v458 & 1) == 0 && ((v487 | v325) & 1) == 0;
        if ((v462 & 1) == 0 && v344)
        {
          v592 = v527;
          v593 = v528;
          v594 = v529;
          v591 = v526;
          v590 = v525;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_2246746A0;
          v586 = xmmword_2246746B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 2, 1, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0xA0000004ALL), xmmword_2246746B0);
        }
      }
      v345 = (v471 & 1) == 0 && ((v487 | v325) & 1) == 0;
      if (v345 && (v468 & 1) == 0)
      {
        v587 = v527;
        v588 = v528;
        v589 = v529;
        v586 = v526;
        v585 = v525;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_2246746C0;
        v581 = xmmword_2246746D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 2, 1, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0xA0000004ALL), xmmword_2246746D0);
      }
    }
    if (((v483 | v498) & 1) == 0)
    {
      v582 = v527;
      v583 = v528;
      v584 = v529;
      v581 = v526;
      v580 = v525;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_2246746E0;
      v576 = xmmword_2246746F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 2, 1, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8A0000004ALL), xmmword_2246746F0);
      v346 = (v455 & 1) == 0 && ((v325 | v478) & 1) == 0;
      if ((v458 & 1) == 0 && v346)
      {
        v577 = v527;
        v578 = v528;
        v579 = v529;
        v576 = v526;
        v575 = v525;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_224674700;
        v571 = xmmword_224674710;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 2, 1, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0xA0000004ALL), xmmword_224674710);
      }
    }
    v347 = (v468 & 1) == 0 && ((v325 | v478) & 1) == 0;
    if (v347 && (v343 & 1) == 0)
    {
      v572 = v527;
      v573 = v528;
      v574 = v529;
      v571 = v526;
      v570 = v525;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224674720;
      v566 = xmmword_224674730;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 2, 1, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0xA0000004ALL), xmmword_224674730);
    }
  }
  v348 = *((_DWORD *)v256 + 4);
  if (**v508)
  {
    v349 = *((_DWORD *)v256 + 68);
    v350 = *((_DWORD *)v256 + 12);
    v351 = *((_DWORD *)v256 + 76);
    v352 = *((_DWORD *)v256 + 20);
  }
  else
  {
    if ((v348 & 0x10000000) != 0)
      v353 = 0x40000000;
    else
      v353 = 0x80000000;
    if ((v348 & 0x20000000) != 0)
      v348 = v353;
    else
      v348 &= 0xCFFFFFFF;
    v354 = *((_DWORD *)v256 + 68);
    if ((v354 & 0x10000000) != 0)
      v355 = 0x40000000;
    else
      v355 = 0x80000000;
    if ((v354 & 0x20000000) != 0)
      v349 = v355;
    else
      v349 = v354 & 0xCFFFFFFF;
    v356 = *((_DWORD *)v256 + 12);
    if ((v356 & 0x10000000) != 0)
      v357 = 0x40000000;
    else
      v357 = 0x80000000;
    if ((v356 & 0x20000000) != 0)
      v350 = v357;
    else
      v350 = v356 & 0xCFFFFFFF;
    v358 = *((_DWORD *)v256 + 76);
    if ((v358 & 0x10000000) != 0)
      v359 = 0x40000000;
    else
      v359 = 0x80000000;
    if ((v358 & 0x20000000) != 0)
      v351 = v359;
    else
      v351 = v358 & 0xCFFFFFFF;
    v360 = *((_DWORD *)v256 + 20);
    if ((v360 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v360 & 0x20000000) == 0)
      v352 = v360 & 0xCFFFFFFF;
  }
  v361 = v350 >> 30;
  v463 = v348 >> 30;
  v362 = v349 >> 30;
  v472 = v352 >> 30;
  if ((v333 & 0x40000000) != 0)
  {
    v542 = v527;
    v543 = v528;
    v544 = v529;
    v541 = v526;
    v540 = v525;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224674740;
    v536 = xmmword_224674750;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 3, 1, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8B0000004BLL), xmmword_224674750);
    if ((v315 & 0x40000000) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224674760;
      v596 = xmmword_224674770;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 3, 1, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8B0000004BLL), xmmword_224674770);
      v363 = ((v325 | v478) & 1) == 0;
      if (((v483 | v498) & 1) == 0)
      {
        v597 = v527;
        v598 = v528;
        v599 = v529;
        v595 = v525;
        v596 = v526;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_224674780;
        v591 = xmmword_224674790;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 3, 1, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8B0000004BLL), xmmword_224674790);
        v364 = (v455 & 1) == 0 && v363;
        if ((v458 & 1) == 0 && v364)
        {
          v592 = v527;
          v593 = v528;
          v594 = v529;
          v591 = v526;
          v590 = v525;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_2246747A0;
          v586 = xmmword_2246747B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 3, 1, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0xB0000004BLL), xmmword_2246747B0);
        }
      }
      v365 = (v468 & 1) == 0 && v363;
      if (v365 && (v343 & 1) == 0)
      {
        v587 = v527;
        v588 = v528;
        v589 = v529;
        v586 = v526;
        v585 = v525;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_2246747C0;
        v581 = xmmword_2246747D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 3, 1, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0xB0000004BLL), xmmword_2246747D0);
      }
    }
    if (((v498 | v362) & 1) == 0)
    {
      v582 = v527;
      v583 = v528;
      v584 = v529;
      v581 = v526;
      v580 = v525;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_2246747E0;
      v576 = xmmword_2246747F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 3, 1, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8B0000004BLL), xmmword_2246747F0);
      v366 = (v463 & 1) == 0 && ((v478 | v361) & 1) == 0;
      if ((v455 & 1) == 0 && v366)
      {
        v577 = v527;
        v578 = v528;
        v579 = v529;
        v576 = v526;
        v575 = v525;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_224674800;
        v571 = xmmword_224674810;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 3, 1, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0xB0000004BLL), xmmword_224674810);
      }
    }
    v367 = (v343 & 1) == 0 && ((v478 | v361) & 1) == 0;
    if (v367 && (v472 & 1) == 0)
    {
      v572 = v527;
      v573 = v528;
      v574 = v529;
      v571 = v526;
      v570 = v525;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224674820;
      v566 = xmmword_224674830;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 3, 1, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0xB0000004BLL), xmmword_224674830);
    }
  }
  v368 = *((_DWORD *)v256 + 5);
  if (**v508)
  {
    v369 = *((_DWORD *)v256 + 69);
    v370 = *((_DWORD *)v256 + 13);
    v371 = *((_DWORD *)v256 + 77);
    v372 = *((_DWORD *)v256 + 21);
  }
  else
  {
    if ((v368 & 0x10000000) != 0)
      v373 = 0x40000000;
    else
      v373 = 0x80000000;
    if ((v368 & 0x20000000) != 0)
      v368 = v373;
    else
      v368 &= 0xCFFFFFFF;
    v374 = *((_DWORD *)v256 + 69);
    if ((v374 & 0x10000000) != 0)
      v375 = 0x40000000;
    else
      v375 = 0x80000000;
    if ((v374 & 0x20000000) != 0)
      v369 = v375;
    else
      v369 = v374 & 0xCFFFFFFF;
    v376 = *((_DWORD *)v256 + 13);
    if ((v376 & 0x10000000) != 0)
      v377 = 0x40000000;
    else
      v377 = 0x80000000;
    if ((v376 & 0x20000000) != 0)
      v370 = v377;
    else
      v370 = v376 & 0xCFFFFFFF;
    v378 = *((_DWORD *)v256 + 77);
    if ((v378 & 0x10000000) != 0)
      v379 = 0x40000000;
    else
      v379 = 0x80000000;
    if ((v378 & 0x20000000) != 0)
      v371 = v379;
    else
      v371 = v378 & 0xCFFFFFFF;
    v380 = *((_DWORD *)v256 + 21);
    if ((v380 & 0x10000000) != 0)
      v372 = 0x40000000;
    else
      v372 = 0x80000000;
    if ((v380 & 0x20000000) == 0)
      v372 = v380 & 0xCFFFFFFF;
  }
  v381 = v370 >> 30;
  v469 = v368 >> 30;
  v493 = v369 >> 30;
  v484 = v372 >> 30;
  if ((v351 & 0x40000000) != 0)
  {
    v542 = v527;
    v543 = v528;
    v544 = v529;
    v541 = v526;
    v540 = v525;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224674840;
    v536 = xmmword_224674850;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 4, 1, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8C0000004CLL), xmmword_224674850);
    if ((v333 & 0x40000000) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224674860;
      v596 = xmmword_224674870;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 4, 1, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8C0000004CLL), xmmword_224674870);
      if (((v498 | v362) & 1) == 0)
      {
        v597 = v527;
        v598 = v528;
        v599 = v529;
        v595 = v525;
        v596 = v526;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_224674880;
        v591 = xmmword_224674890;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 4, 1, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8C0000004CLL), xmmword_224674890);
        v382 = (v463 & 1) == 0 && ((v478 | v361) & 1) == 0;
        if ((v455 & 1) == 0 && v382)
        {
          v592 = v527;
          v593 = v528;
          v594 = v529;
          v591 = v526;
          v590 = v525;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_2246748A0;
          v586 = xmmword_2246748B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 4, 1, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0xC0000004CLL), xmmword_2246748B0);
        }
      }
      v383 = (v343 & 1) == 0 && ((v478 | v361) & 1) == 0;
      if (v383 && (v472 & 1) == 0)
      {
        v587 = v527;
        v588 = v528;
        v589 = v529;
        v586 = v526;
        v585 = v525;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_2246748C0;
        v581 = xmmword_2246748D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 4, 1, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0xC0000004CLL), xmmword_2246748D0);
      }
    }
    if (((v362 | v493) & 1) == 0)
    {
      v582 = v527;
      v583 = v528;
      v584 = v529;
      v581 = v526;
      v580 = v525;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_2246748E0;
      v576 = xmmword_2246748F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 4, 1, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8C0000004CLL), xmmword_2246748F0);
      v384 = (v469 & 1) == 0 && ((v361 | v381) & 1) == 0;
      if ((v463 & 1) == 0 && v384)
      {
        v577 = v527;
        v578 = v528;
        v579 = v529;
        v576 = v526;
        v575 = v525;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_224674900;
        v571 = xmmword_224674910;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 4, 1, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0xC0000004CLL), xmmword_224674910);
      }
    }
    v385 = (v472 & 1) == 0 && ((v361 | v381) & 1) == 0;
    if (v385 && (v484 & 1) == 0)
    {
      v572 = v527;
      v573 = v528;
      v574 = v529;
      v571 = v526;
      v570 = v525;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224674920;
      v566 = xmmword_224674930;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 4, 1, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0xC0000004CLL), xmmword_224674930);
    }
  }
  v386 = *((_DWORD *)v256 + 6);
  if (**v508)
  {
    v387 = *((_DWORD *)v256 + 70);
    v388 = *((_DWORD *)v256 + 14);
    v389 = *((_DWORD *)v256 + 78);
    v390 = *((_DWORD *)v256 + 22);
  }
  else
  {
    if ((v386 & 0x10000000) != 0)
      v391 = 0x40000000;
    else
      v391 = 0x80000000;
    if ((v386 & 0x20000000) != 0)
      v386 = v391;
    else
      v386 &= 0xCFFFFFFF;
    v392 = *((_DWORD *)v256 + 70);
    if ((v392 & 0x10000000) != 0)
      v393 = 0x40000000;
    else
      v393 = 0x80000000;
    if ((v392 & 0x20000000) != 0)
      v387 = v393;
    else
      v387 = v392 & 0xCFFFFFFF;
    v394 = *((_DWORD *)v256 + 14);
    if ((v394 & 0x10000000) != 0)
      v395 = 0x40000000;
    else
      v395 = 0x80000000;
    if ((v394 & 0x20000000) != 0)
      v388 = v395;
    else
      v388 = v394 & 0xCFFFFFFF;
    v396 = *((_DWORD *)v256 + 78);
    if ((v396 & 0x10000000) != 0)
      v397 = 0x40000000;
    else
      v397 = 0x80000000;
    if ((v396 & 0x20000000) != 0)
      v389 = v397;
    else
      v389 = v396 & 0xCFFFFFFF;
    v398 = *((_DWORD *)v256 + 22);
    if ((v398 & 0x10000000) != 0)
      v390 = 0x40000000;
    else
      v390 = 0x80000000;
    if ((v398 & 0x20000000) == 0)
      v390 = v398 & 0xCFFFFFFF;
  }
  v488 = v388 >> 30;
  v459 = v386 >> 30;
  v499 = v387 >> 30;
  v479 = v390 >> 30;
  v557 = v527;
  v558 = v528;
  v559 = v529;
  v556 = v526;
  v555 = v525;
  if ((v371 & 0x40000000) != 0)
  {
    v542 = v527;
    v543 = v528;
    v544 = v529;
    v541 = v526;
    v540 = v525;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224674940;
    v536 = xmmword_224674950;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 5, 1, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8D0000004DLL), xmmword_224674950);
    if ((v351 & 0x40000000) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224674960;
      v596 = xmmword_224674970;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 5, 1, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8D0000004DLL), xmmword_224674970);
      if (((v362 | v493) & 1) == 0)
      {
        v597 = v527;
        v598 = v528;
        v599 = v529;
        v595 = v525;
        v596 = v526;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_224674980;
        v591 = xmmword_224674990;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 5, 1, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8D0000004DLL), xmmword_224674990);
        v399 = (v469 & 1) == 0 && ((v361 | v381) & 1) == 0;
        if ((v463 & 1) == 0 && v399)
        {
          v592 = v527;
          v593 = v528;
          v594 = v529;
          v591 = v526;
          v590 = v525;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_2246749A0;
          v586 = xmmword_2246749B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 5, 1, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0xD0000004DLL), xmmword_2246749B0);
        }
      }
      v400 = (v472 & 1) == 0 && ((v361 | v381) & 1) == 0;
      if (v400 && (v484 & 1) == 0)
      {
        v587 = v557;
        v588 = v558;
        v589 = v559;
        v586 = v556;
        v585 = v555;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_2246749C0;
        v581 = xmmword_2246749D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 5, 1, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0xD0000004DLL), xmmword_2246749D0);
      }
    }
    if (((v493 | v499) & 1) == 0)
    {
      v582 = v557;
      v583 = v558;
      v584 = v559;
      v581 = v556;
      v580 = v555;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_2246749E0;
      v576 = xmmword_2246749F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 5, 1, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8D0000004DLL), xmmword_2246749F0);
      v401 = (v459 & 1) == 0 && ((v381 | v488) & 1) == 0;
      if ((v469 & 1) == 0 && v401)
      {
        v577 = v557;
        v578 = v558;
        v579 = v559;
        v576 = v556;
        v575 = v555;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_224674A00;
        v571 = xmmword_224674A10;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 5, 1, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0xD0000004DLL), xmmword_224674A10);
      }
    }
    v402 = (v484 & 1) == 0 && ((v381 | v488) & 1) == 0;
    if (v402 && (v479 & 1) == 0)
    {
      v572 = v557;
      v573 = v558;
      v574 = v559;
      v571 = v556;
      v570 = v555;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224674A20;
      v566 = xmmword_224674A30;
      *(_QWORD *)&v550 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 5, 1, 1, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v550, COERCE_DOUBLE(0xD0000004DLL), xmmword_224674A30);
    }
  }
  v552 = v527;
  v553 = v528;
  v554 = v529;
  v551 = v526;
  v550 = v525;
  v403 = *((_DWORD *)v256 + 7);
  if (**v508)
  {
    v404 = *((_DWORD *)v256 + 71);
    v405 = *((_DWORD *)v256 + 15);
    v406 = *((_DWORD *)v256 + 79);
    v407 = *((_DWORD *)v256 + 23);
  }
  else
  {
    if ((v403 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v403 & 0x20000000) != 0)
      v403 = v408;
    else
      v403 &= 0xCFFFFFFF;
    v409 = *((_DWORD *)v256 + 71);
    if ((v409 & 0x10000000) != 0)
      v410 = 0x40000000;
    else
      v410 = 0x80000000;
    if ((v409 & 0x20000000) != 0)
      v404 = v410;
    else
      v404 = v409 & 0xCFFFFFFF;
    v411 = *((_DWORD *)v256 + 15);
    if ((v411 & 0x10000000) != 0)
      v412 = 0x40000000;
    else
      v412 = 0x80000000;
    if ((v411 & 0x20000000) != 0)
      v405 = v412;
    else
      v405 = v411 & 0xCFFFFFFF;
    v413 = *((_DWORD *)v256 + 79);
    if ((v413 & 0x10000000) != 0)
      v414 = 0x40000000;
    else
      v414 = 0x80000000;
    if ((v413 & 0x20000000) != 0)
      v406 = v414;
    else
      v406 = v413 & 0xCFFFFFFF;
    v415 = *((_DWORD *)v256 + 23);
    if ((v415 & 0x10000000) != 0)
      v407 = 0x40000000;
    else
      v407 = 0x80000000;
    if ((v415 & 0x20000000) == 0)
      v407 = v415 & 0xCFFFFFFF;
  }
  v416 = v405 >> 30;
  v473 = v403 >> 30;
  v417 = v404 >> 30;
  v509 = v407 >> 30;
  v562 = v527;
  v563 = v528;
  v564 = v529;
  v561 = v526;
  v560 = v525;
  if ((v389 & 0x40000000) != 0)
  {
    v542 = v527;
    v543 = v528;
    v544 = v529;
    v541 = v526;
    v540 = v525;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_224674A40;
    v536 = xmmword_224674A50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 6, 1, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8E0000004ELL), xmmword_224674A50);
    if ((v371 & 0x40000000) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224674A60;
      v596 = xmmword_224674A70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 6, 1, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8E0000004ELL), xmmword_224674A70);
      if (((v493 | v499) & 1) == 0)
      {
        v597 = v527;
        v598 = v528;
        v599 = v529;
        v595 = v525;
        v596 = v526;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_224674A80;
        v591 = xmmword_224674A90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 6, 1, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8E0000004ELL), xmmword_224674A90);
        v418 = (v459 & 1) == 0 && ((v381 | v488) & 1) == 0;
        if ((v469 & 1) == 0 && v418)
        {
          v592 = v527;
          v593 = v528;
          v594 = v529;
          v591 = v526;
          v590 = v525;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_224674AA0;
          v586 = xmmword_224674AB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 6, 1, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0xE0000004ELL), xmmword_224674AB0);
        }
      }
      v419 = (v484 & 1) == 0 && ((v381 | v488) & 1) == 0;
      if (v419 && (v479 & 1) == 0)
      {
        v587 = v562;
        v588 = v563;
        v589 = v564;
        v586 = v561;
        v585 = v560;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_224674AC0;
        v581 = xmmword_224674AD0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 6, 1, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0xE0000004ELL), xmmword_224674AD0);
      }
    }
    if (((v499 | v417) & 1) == 0)
    {
      v582 = v562;
      v583 = v563;
      v584 = v564;
      v581 = v561;
      v580 = v560;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_224674AE0;
      v576 = xmmword_224674AF0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 6, 1, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x8E0000004ELL), xmmword_224674AF0);
      v420 = (v473 & 1) == 0 && ((v488 | v416) & 1) == 0;
      if ((v459 & 1) == 0 && v420)
      {
        v577 = v562;
        v578 = v563;
        v579 = v564;
        v576 = v561;
        v575 = v560;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_224674B00;
        v571 = xmmword_224674B10;
        *(_QWORD *)&v601[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 6, 1, 1, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)v601, COERCE_DOUBLE(0xE0000004ELL), xmmword_224674B10);
      }
    }
    v421 = (v479 & 1) == 0 && ((v488 | v416) & 1) == 0;
    if (v421 && (v509 & 1) == 0)
    {
      v572 = v562;
      v573 = v563;
      v574 = v564;
      v571 = v561;
      v570 = v560;
      *(_QWORD *)&v601[0] = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_224674B20;
      v566 = xmmword_224674B30;
      v602[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 6, 1, 1, (uint64_t)v601, (uint64_t)&v565, (uint64_t)v602, COERCE_DOUBLE(0xE0000004ELL), xmmword_224674B30);
    }
  }
  v422 = *(unsigned int *)(v512 + 88);
  if ((v422 & 0x80000000) != 0)
  {
    v425 = *v504;
    v426 = *(_DWORD *)(v514 + 280);
    v427 = **v504;
    if (**v504)
      goto LABEL_1185;
  }
  else
  {
    v423 = *(_QWORD *)(v514 + 2328);
    if (v422 >= (*(_QWORD *)(v514 + 2336) - v423) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v423 = *(_QWORD *)(v514 + 2328);
    }
    v424 = (unsigned int *)(v423 + (v422 << 11));
    v425 = *v504;
    v426 = *v424;
    v427 = **v504;
    if (**v504)
    {
LABEL_1185:
      v428 = *(unsigned int *)(v512 + 88);
      if ((v428 & 0x80000000) == 0)
        goto LABEL_1186;
LABEL_1205:
      v430 = *(_DWORD *)(v514 + 536);
      if (v427)
        goto LABEL_1190;
      goto LABEL_1206;
    }
  }
  if ((v426 & 0x10000000) != 0)
    v435 = 0x40000000;
  else
    v435 = 0x80000000;
  if ((v426 & 0x20000000) != 0)
    v426 = v435;
  else
    v426 &= 0xCFFFFFFF;
  v428 = *(unsigned int *)(v512 + 88);
  if ((v428 & 0x80000000) != 0)
    goto LABEL_1205;
LABEL_1186:
  v429 = *(_QWORD *)(v514 + 2328);
  if (v428 >= (*(_QWORD *)(v514 + 2336) - v429) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v429 = *(_QWORD *)(v514 + 2328);
    v425 = *v504;
    v427 = **v504;
  }
  v430 = *(_DWORD *)(v429 + (v428 << 11) + 256);
  if (v427)
  {
LABEL_1190:
    v431 = *(unsigned int *)(v512 + 88);
    if ((v431 & 0x80000000) == 0)
      goto LABEL_1191;
LABEL_1213:
    v433 = *(_DWORD *)(v514 + 312);
    if (v427)
      goto LABEL_1195;
    goto LABEL_1214;
  }
LABEL_1206:
  if ((v430 & 0x10000000) != 0)
    v436 = 0x40000000;
  else
    v436 = 0x80000000;
  if ((v430 & 0x20000000) != 0)
    v430 = v436;
  else
    v430 &= 0xCFFFFFFF;
  v431 = *(unsigned int *)(v512 + 88);
  if ((v431 & 0x80000000) != 0)
    goto LABEL_1213;
LABEL_1191:
  v432 = *(_QWORD *)(v514 + 2328);
  if (v431 >= (*(_QWORD *)(v514 + 2336) - v432) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v432 = *(_QWORD *)(v514 + 2328);
    v425 = *v504;
    v427 = **v504;
  }
  v433 = *(_DWORD *)(v432 + (v431 << 11) + 32);
  if (v427)
  {
LABEL_1195:
    v434 = *(unsigned int *)(v512 + 88);
    if ((v434 & 0x80000000) != 0)
      goto LABEL_1264;
    goto LABEL_1221;
  }
LABEL_1214:
  if ((v433 & 0x10000000) != 0)
    v437 = 0x40000000;
  else
    v437 = 0x80000000;
  if ((v433 & 0x20000000) != 0)
    v433 = v437;
  else
    v433 &= 0xCFFFFFFF;
  v434 = *(unsigned int *)(v512 + 88);
  if ((v434 & 0x80000000) != 0)
    goto LABEL_1264;
LABEL_1221:
  v438 = *(_QWORD *)(v514 + 2328);
  v439 = (*(_QWORD *)(v514 + 2336) - v438) >> 11;
  if (v439 > v434)
    goto LABEL_1225;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v425 = *v504;
  v434 = *(unsigned int *)(v512 + 88);
  if ((v434 & 0x80000000) != 0)
  {
LABEL_1264:
    v440 = *(_DWORD *)(v514 + 344);
    if (*v425)
      goto LABEL_1235;
    goto LABEL_1229;
  }
  v438 = *(_QWORD *)(v514 + 2328);
  v439 = (*(_QWORD *)(v514 + 2336) - v438) >> 11;
LABEL_1225:
  if (v439 <= v434)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v438 = *(_QWORD *)(v514 + 2328);
    v425 = *v504;
  }
  v440 = *(_DWORD *)(v438 + (v434 << 11) + 64);
  if (!*v425)
  {
LABEL_1229:
    if ((v440 & 0x10000000) != 0)
      v441 = 0x40000000;
    else
      v441 = 0x80000000;
    if ((v440 & 0x20000000) != 0)
      v440 = v441;
    else
      v440 &= 0xCFFFFFFF;
  }
LABEL_1235:
  v567 = v552;
  v568 = v553;
  v569 = v554;
  v566 = v551;
  v565 = v550;
  if ((v406 & 0x40000000) != 0)
  {
    v542 = v552;
    v543 = v553;
    v544 = v554;
    v541 = v551;
    v540 = v550;
    *(_QWORD *)&v595 = 0x161616160D0D0D0DLL;
    v535 = xmmword_224674B40;
    v536 = xmmword_224674B50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 7, 1, 1, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x8F0000004FLL), xmmword_224674B50);
    if ((v389 & 0x40000000) == 0)
    {
      v537 = v552;
      v538 = v553;
      v539 = v554;
      v536 = v551;
      v535 = v550;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_224674B60;
      v596 = xmmword_224674B70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 7, 1, 1, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x8F0000004FLL), xmmword_224674B70);
      if (((v499 | v417) & 1) == 0)
      {
        v597 = v552;
        v598 = v553;
        v599 = v554;
        v595 = v550;
        v596 = v551;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_224674B80;
        v591 = xmmword_224674B90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 7, 1, 1, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x8F0000004FLL), xmmword_224674B90);
        v442 = (v473 & 1) == 0 && ((v488 | v416) & 1) == 0;
        if ((v459 & 1) == 0 && v442)
        {
          v592 = v552;
          v593 = v553;
          v594 = v554;
          v591 = v551;
          v590 = v550;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_224674BA0;
          v586 = xmmword_224674BB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 7, 1, 1, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0xF0000004FLL), xmmword_224674BB0);
        }
      }
      v443 = (v479 & 1) == 0 && ((v488 | v416) & 1) == 0;
      if (v443 && (v509 & 1) == 0)
      {
        v587 = v567;
        v588 = v568;
        v589 = v569;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v586 = v566;
        v585 = v565;
        v580 = xmmword_224674BC0;
        v581 = xmmword_224674BD0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 7, 1, 1, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0xF0000004FLL), xmmword_224674BD0);
      }
    }
    if (!(v430 & 0x40000000 | v417 & 1))
    {
      v582 = v567;
      v583 = v568;
      v584 = v569;
      *(_QWORD *)&v570 = 0x16160D0D16160D0DLL;
      v581 = v566;
      v580 = v565;
      v575 = xmmword_224674BE0;
      v576 = xmmword_224674BF0;
      *(_QWORD *)&v601[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 7, 1, 1, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)v601, COERCE_DOUBLE(0x8F0000004FLL), xmmword_224674BF0);
      v444 = (v426 & 0x40000000) == 0 && (v433 & 0x40000000 | v416 & 1) == 0;
      if ((v473 & 1) == 0 && v444)
      {
        v577 = v567;
        v578 = v568;
        v579 = v569;
        *(_QWORD *)&v601[0] = 0x161616160D0D0D0DLL;
        v576 = v566;
        v575 = v565;
        v570 = xmmword_224674C00;
        v571 = xmmword_224674C10;
        v602[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 7, 1, 1, (uint64_t)v601, (uint64_t)&v570, (uint64_t)v602, COERCE_DOUBLE(0xF0000004FLL), xmmword_224674C10);
      }
    }
    v445 = (v509 & 1) == 0 && (v433 & 0x40000000 | v416 & 1) == 0;
    if (v445 && (v440 & 0x40000000) == 0)
    {
      v572 = v567;
      v573 = v568;
      v574 = v569;
      v602[0] = 0x16160D0D16160D0DLL;
      v571 = v566;
      v570 = v565;
      v601[0] = xmmword_224674C20;
      v601[1] = xmmword_224674C30;
      v600 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 7, 1, 1, (uint64_t)v602, (uint64_t)v601, (uint64_t)&v600, COERCE_DOUBLE(0xF0000004FLL), xmmword_224674C30);
    }
  }
  v535 = v466;
  v536.i64[0] = (uint64_t)v256;
  *(_QWORD *)&v595 = v514;
  *((_QWORD *)&v595 + 1) = v512;
  v596.i64[0] = (uint64_t)v504;
  v544 = v519;
  v543 = v518;
  v542 = v517;
  v540 = v515;
  v541 = v516;
  return sub_223DB2A14((unsigned __int8 ***)&v535, (uint64_t *)&v595, &v540);
}

unint64_t sub_223DB2A14(unsigned __int8 ***a1, uint64_t *a2, __int128 *a3)
{
  uint64_t *v4;
  unsigned __int8 **v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  _BYTE **v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  _BYTE **v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  _BYTE **v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  _BYTE **v50;
  unint64_t v51;
  uint64_t v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  _BYTE **v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  __int128 v81;
  __int128 v82;
  _BOOL4 v83;
  _BOOL4 v84;
  _BOOL4 v85;
  _BOOL4 v86;
  _BOOL4 v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  _BOOL4 v103;
  _BOOL4 v104;
  _BOOL4 v105;
  _BOOL4 v106;
  _BOOL4 v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  _BOOL4 v122;
  _BOOL4 v123;
  _BOOL4 v124;
  _BOOL4 v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  _BOOL4 v140;
  _BOOL4 v141;
  _BOOL4 v142;
  _BOOL4 v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  _BOOL4 v159;
  _BOOL4 v160;
  _BOOL4 v161;
  _BOOL4 v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  int v175;
  _BOOL4 v176;
  _BOOL4 v177;
  _BOOL4 v178;
  _BOOL4 v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  int v192;
  uint64_t v193;
  unsigned int v194;
  unsigned int v195;
  _BOOL4 v196;
  _BOOL4 v197;
  _BOOL4 v198;
  _BOOL4 v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _BYTE *v203;
  unsigned int v204;
  int v205;
  unint64_t v206;
  uint64_t v207;
  unsigned int v208;
  unint64_t v209;
  uint64_t v210;
  unsigned int v211;
  unint64_t v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  uint64_t v216;
  unint64_t v217;
  unsigned int v218;
  unsigned int v219;
  _BOOL4 v220;
  _BOOL4 v221;
  _BOOL4 v222;
  _BOOL4 v223;
  unsigned __int8 **v224;
  unsigned int v225;
  int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  unsigned int v241;
  unint64_t v242;
  uint64_t v243;
  unsigned int v244;
  int v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unint64_t v249;
  uint64_t v250;
  unsigned int v251;
  unint64_t v252;
  uint64_t v253;
  unsigned int v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  _BOOL4 v276;
  _BOOL4 v277;
  _BOOL4 v278;
  _BOOL4 v279;
  _BOOL4 v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  _BOOL4 v295;
  _BOOL4 v296;
  _BOOL4 v297;
  _BOOL4 v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  _BOOL4 v314;
  _BOOL4 v315;
  _BOOL4 v316;
  _BOOL4 v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  int v330;
  _BOOL4 v331;
  _BOOL4 v332;
  _BOOL4 v333;
  _BOOL4 v334;
  _BOOL4 v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  _BOOL4 v351;
  _BOOL4 v352;
  _BOOL4 v353;
  _BOOL4 v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  _BOOL4 v369;
  _BOOL4 v370;
  _BOOL4 v371;
  _BOOL4 v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  unsigned int v378;
  int v379;
  unsigned int v380;
  int v381;
  unsigned int v382;
  int v383;
  unsigned int v384;
  int v385;
  unsigned int v386;
  unsigned int v387;
  _BOOL4 v388;
  _BOOL4 v389;
  _BOOL4 v390;
  _BOOL4 v391;
  unint64_t v392;
  uint64_t v393;
  uint64_t v394;
  _BYTE *v395;
  unsigned int v396;
  int v397;
  unint64_t v398;
  uint64_t v399;
  unsigned int v400;
  unint64_t v401;
  uint64_t v402;
  unsigned int v403;
  unint64_t v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  uint64_t v408;
  unint64_t v409;
  unsigned int v410;
  unsigned int v411;
  _BOOL4 v412;
  _BOOL4 v413;
  _BOOL4 v414;
  _BOOL4 v415;
  _BOOL4 v416;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  __int128 v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned __int8 **v465;
  int v466;
  unsigned int v467;
  unsigned int v468;
  uint64_t *v469;
  _BYTE **v470;
  uint64_t v471;
  _BYTE **v472;
  unsigned int v473;
  unsigned int v474;
  uint64_t v475;
  uint64_t v476;
  _BYTE **v477;
  unsigned int v478;
  unsigned int v479;
  uint64_t v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  float32x4_t v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  uint64_t v571;
  _OWORD v572[2];
  _QWORD v573[3];

  v4 = a2;
  v573[1] = *MEMORY[0x24BDAC8D0];
  v5 = a1[2];
  v477 = *a1;
  v6 = *((_DWORD *)v5 + 8);
  v7 = ***a1;
  if (***a1)
  {
    v8 = *((_DWORD *)v5 + 72);
    v9 = *((_DWORD *)v5 + 16);
    v10 = *((_DWORD *)v5 + 80);
    v11 = *((_DWORD *)v5 + 24);
    v12 = *a2;
    v469 = a2;
    v459 = v10;
    if ((v10 & 0x40000000) == 0)
    {
LABEL_3:
      v471 = v12;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = 0;
      goto LABEL_91;
    }
  }
  else
  {
    if ((v6 & 0x20000000) != 0)
      v6 *= 4;
    v18 = *((_DWORD *)v5 + 72);
    if ((v18 & 0x20000000) != 0)
      v8 = 4 * v18;
    else
      v8 = *((_DWORD *)v5 + 72);
    v19 = *((_DWORD *)v5 + 16);
    if ((v19 & 0x20000000) != 0)
      v9 = 4 * v19;
    else
      v9 = *((_DWORD *)v5 + 16);
    v20 = *((_DWORD *)v5 + 80);
    if ((v20 & 0x20000000) != 0)
      v10 = 4 * v20;
    else
      v10 = *((_DWORD *)v5 + 80);
    v21 = *((_DWORD *)v5 + 24);
    if ((v21 & 0x10000000) != 0)
      v22 = 0x40000000;
    else
      v22 = 0x80000000;
    if ((v21 & 0x20000000) != 0)
      v11 = v22;
    else
      v11 = v21 & 0xCFFFFFFF;
    v12 = *a2;
    v469 = a2;
    v459 = v10;
    if ((v10 & 0x40000000) == 0)
      goto LABEL_3;
  }
  v474 = v9;
  v23 = (_BYTE **)a2[2];
  v24 = *(unsigned int *)(a2[1] + 16);
  v478 = v8;
  if ((v24 & 0x80000000) != 0)
  {
    v26 = v12 + 280;
  }
  else
  {
    v25 = *(_QWORD *)(v12 + 2328);
    if (v24 >= (*(_QWORD *)(v12 + 2336) - v25) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v25 = *(_QWORD *)(v12 + 2328);
      v10 = v459;
      v8 = v478;
    }
    v26 = v25 + (v24 << 11);
  }
  v27 = *(_DWORD *)(v26 + 60);
  v28 = v27 & 0xCFFFFFFF;
  if ((v27 & 0x10000000) != 0)
    v29 = 0x40000000;
  else
    v29 = 0x80000000;
  if ((v27 & 0x20000000) != 0)
    v28 = v29;
  if (**v23)
    v30 = v27;
  else
    v30 = v28;
  v31 = *v4;
  v32 = (_BYTE **)v4[2];
  v33 = *(unsigned int *)(v4[1] + 16);
  if ((v33 & 0x80000000) != 0)
  {
    v35 = v31 + 280;
  }
  else
  {
    v34 = *(_QWORD *)(v31 + 2328);
    if (v33 >= (*(_QWORD *)(v31 + 2336) - v34) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v34 = *(_QWORD *)(v31 + 2328);
      v10 = v459;
      v8 = v478;
    }
    v35 = v34 + (v33 << 11);
  }
  v36 = *(_DWORD *)(v35 + 316);
  v37 = v36 & 0xCFFFFFFF;
  if ((v36 & 0x10000000) != 0)
    v38 = 0x40000000;
  else
    v38 = 0x80000000;
  if ((v36 & 0x20000000) != 0)
    v37 = v38;
  if (**v32)
    v39 = v36;
  else
    v39 = v37;
  v40 = *v469;
  v41 = (_BYTE **)v469[2];
  v42 = *(unsigned int *)(v469[1] + 16);
  if ((v42 & 0x80000000) != 0)
  {
    v44 = v40 + 280;
  }
  else
  {
    v43 = *(_QWORD *)(v40 + 2328);
    if (v42 >= (*(_QWORD *)(v40 + 2336) - v43) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v43 = *(_QWORD *)(v40 + 2328);
      v10 = v459;
      v8 = v478;
    }
    v44 = v43 + (v42 << 11);
  }
  v45 = *(_DWORD *)(v44 + 92);
  v46 = v45 & 0xCFFFFFFF;
  if ((v45 & 0x10000000) != 0)
    v47 = 0x40000000;
  else
    v47 = 0x80000000;
  if ((v45 & 0x20000000) != 0)
    v46 = v47;
  if (**v41)
    v48 = v45;
  else
    v48 = v46;
  v49 = *v469;
  v50 = (_BYTE **)v469[2];
  v51 = *(unsigned int *)(v469[1] + 16);
  if ((v51 & 0x80000000) != 0)
  {
    v53 = v11;
    v54 = v30;
    v55 = *(_DWORD *)(v49 + 628);
    if (**v50)
      goto LABEL_69;
  }
  else
  {
    v52 = *(_QWORD *)(v49 + 2328);
    if (v51 >= (*(_QWORD *)(v49 + 2336) - v52) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v52 = *(_QWORD *)(v49 + 2328);
      v10 = v459;
      v8 = v478;
    }
    v53 = v11;
    v54 = v30;
    v55 = *(_DWORD *)(v52 + (v51 << 11) + 348);
    if (**v50)
    {
LABEL_69:
      v56 = *v469;
      v57 = (_BYTE **)v469[2];
      v58 = *(unsigned int *)(v469[1] + 16);
      if ((v58 & 0x80000000) == 0)
        goto LABEL_70;
LABEL_82:
      v60 = v56 + 280;
      goto LABEL_83;
    }
  }
  if ((v55 & 0x10000000) != 0)
    v61 = 0x40000000;
  else
    v61 = 0x80000000;
  if ((v55 & 0x20000000) != 0)
    v55 = v61;
  else
    v55 &= 0xCFFFFFFF;
  v56 = *v469;
  v57 = (_BYTE **)v469[2];
  v58 = *(unsigned int *)(v469[1] + 16);
  if ((v58 & 0x80000000) != 0)
    goto LABEL_82;
LABEL_70:
  v59 = *(_QWORD *)(v56 + 2328);
  if (v58 >= (*(_QWORD *)(v56 + 2336) - v59) >> 11)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      v59 = *(_QWORD *)(v56 + 2328);
      v10 = v459;
      v8 = v478;
      goto LABEL_73;
    }
LABEL_1175:
    abort();
  }
LABEL_73:
  v60 = v59 + (v58 << 11);
LABEL_83:
  v17 = (v54 >> 30) & 1;
  v16 = (v39 >> 30) & 1;
  v15 = (v48 >> 30) & 1;
  v14 = (v55 >> 30) & 1;
  v62 = *(_DWORD *)(v60 + 124);
  v9 = v474;
  if (!**v57)
  {
    if ((v62 & 0x10000000) != 0)
      v63 = 0x40000000;
    else
      v63 = 0x80000000;
    if ((v62 & 0x20000000) != 0)
      v62 = v63;
    else
      v62 &= 0xCFFFFFFF;
  }
  v13 = (v62 >> 30) & 1;
  v5 = a1[2];
  v4 = v469;
  v471 = *v469;
  v477 = *a1;
  v7 = ***a1;
  v11 = v53;
LABEL_91:
  v437 = v6 >> 30;
  v475 = v4[1];
  v465 = (unsigned __int8 **)v4[2];
  v488 = a3[2];
  v489 = a3[3];
  v490 = a3[4];
  v486 = *a3;
  v487 = a3[1];
  v64 = *((_DWORD *)v5 + 9);
  if (v7)
  {
    v65 = *((_DWORD *)v5 + 73);
    v66 = *((_DWORD *)v5 + 17);
    v454 = *((_DWORD *)v5 + 81);
    v67 = *((_DWORD *)v5 + 25);
  }
  else
  {
    if ((v64 & 0x10000000) != 0)
      v68 = 0x40000000;
    else
      v68 = 0x80000000;
    if ((v64 & 0x20000000) != 0)
      v64 = v68;
    else
      v64 &= 0xCFFFFFFF;
    v69 = *((_DWORD *)v5 + 73);
    if ((v69 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v69 & 0x20000000) != 0)
      v65 = v70;
    else
      v65 = v69 & 0xCFFFFFFF;
    v71 = *((_DWORD *)v5 + 17);
    if ((v71 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v71 & 0x20000000) != 0)
      v66 = v72;
    else
      v66 = v71 & 0xCFFFFFFF;
    v73 = *((_DWORD *)v5 + 81);
    if ((v73 & 0x10000000) != 0)
      v74 = 0x40000000;
    else
      v74 = 0x80000000;
    if ((v73 & 0x20000000) != 0)
      v75 = v74;
    else
      v75 = v73 & 0xCFFFFFFF;
    v454 = v75;
    v76 = *((_DWORD *)v5 + 25);
    if ((v76 & 0x10000000) != 0)
      v67 = 0x40000000;
    else
      v67 = 0x80000000;
    if ((v76 & 0x20000000) == 0)
      v67 = v76 & 0xCFFFFFFF;
  }
  v77 = v9 >> 30;
  v78 = v8 >> 30;
  v79 = v11 >> 30;
  v446 = v66 >> 30;
  v450 = v65 >> 30;
  v423 = v64 >> 30;
  v427 = v67 >> 30;
  v498 = a3[2];
  v499 = a3[3];
  v500 = a3[4];
  v496 = *a3;
  v497 = a3[1];
  if ((v10 & 0x40000000) != 0)
  {
    v80 = v17;
    v81 = a3[3];
    v513 = a3[2];
    v514 = v81;
    v515 = a3[4];
    v82 = *a3;
    v512 = a3[1];
    v511 = v82;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224674C40;
    v507 = (__int128)xmmword_224674C50;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 0, 2, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9000000050), xmmword_224674C50);
    if (!v14)
    {
      v508 = v498;
      v509 = v499;
      v510 = v500;
      v507 = v497;
      v506 = v496;
      *(_QWORD *)&v561 = 0x4040D0D04040D0DLL;
      v566 = xmmword_224674C60;
      v567 = (__int128)xmmword_224674C70;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 0, 2, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9000000050), xmmword_224674C70);
      v83 = (v15 | v77 & 1) == 0;
      if (!(v16 | v78 & 1))
      {
        v568 = v498;
        v569 = v499;
        v570 = v500;
        v566 = v496;
        v567 = v497;
        *(_QWORD *)&v556 = 0x40404040D0D0D0DLL;
        v561 = xmmword_224674C80;
        v562 = (__int128)xmmword_224674C90;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 0, 2, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9000000050), xmmword_224674C90);
        v84 = (v437 & 1) == 0 && v83;
        if (!v80 && v84)
        {
          v563 = v498;
          v564 = v499;
          v565 = v500;
          v562 = v497;
          v561 = v496;
          *(_QWORD *)&v551 = 0x4040D0D04040D0DLL;
          v556 = xmmword_224674CA0;
          v557 = (__int128)xmmword_224674CB0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 0, 2, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1000000050), xmmword_224674CB0);
        }
      }
      if (v13)
        v85 = 0;
      else
        v85 = v83;
      if (v85 && (v79 & 1) == 0)
      {
        v558 = v498;
        v559 = v499;
        v560 = v500;
        *(_QWORD *)&v546 = 0x40404040D0D0D0DLL;
        v557 = v497;
        v556 = v496;
        v551 = xmmword_224674CC0;
        v552 = (__int128)xmmword_224674CD0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 0, 2, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1000000050), xmmword_224674CD0);
      }
    }
    if (((v78 | v450) & 1) == 0)
    {
      v553 = v498;
      v554 = v499;
      v555 = v500;
      v552 = v497;
      v551 = v496;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_224674CE0;
      v547 = (__int128)xmmword_224674CF0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 0, 2, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9000000050), xmmword_224674CF0);
      v86 = (v423 & 1) == 0 && ((v77 | v446) & 1) == 0;
      if ((v437 & 1) == 0 && v86)
      {
        v548 = v498;
        v549 = v499;
        v550 = v500;
        v547 = v497;
        v546 = v496;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224674D00;
        v542 = (__int128)xmmword_224674D10;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 0, 2, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1000000050), xmmword_224674D10);
      }
    }
    v87 = (v79 & 1) == 0 && ((v77 | v446) & 1) == 0;
    v10 = v459;
    if (v87 && (v427 & 1) == 0)
    {
      v543 = v498;
      v544 = v499;
      v545 = v500;
      v542 = v497;
      v541 = v496;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224674D20;
      v537 = xmmword_224674D30;
      *(_QWORD *)&v526 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 0, 2, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0x1000000050), xmmword_224674D30);
      v10 = v459;
    }
  }
  v88 = *((_DWORD *)v5 + 10);
  if (**v477)
  {
    v89 = *((_DWORD *)v5 + 74);
    v90 = *((_DWORD *)v5 + 18);
    v91 = *((_DWORD *)v5 + 82);
    v92 = *((_DWORD *)v5 + 26);
  }
  else
  {
    if ((v88 & 0x10000000) != 0)
      v93 = 0x40000000;
    else
      v93 = 0x80000000;
    if ((v88 & 0x20000000) != 0)
      v88 = v93;
    else
      v88 &= 0xCFFFFFFF;
    v94 = *((_DWORD *)v5 + 74);
    if ((v94 & 0x10000000) != 0)
      v95 = 0x40000000;
    else
      v95 = 0x80000000;
    if ((v94 & 0x20000000) != 0)
      v89 = v95;
    else
      v89 = v94 & 0xCFFFFFFF;
    v96 = *((_DWORD *)v5 + 18);
    if ((v96 & 0x10000000) != 0)
      v97 = 0x40000000;
    else
      v97 = 0x80000000;
    if ((v96 & 0x20000000) != 0)
      v90 = v97;
    else
      v90 = v96 & 0xCFFFFFFF;
    v98 = *((_DWORD *)v5 + 82);
    if ((v98 & 0x10000000) != 0)
      v99 = 0x40000000;
    else
      v99 = 0x80000000;
    if ((v98 & 0x20000000) != 0)
      v91 = v99;
    else
      v91 = v98 & 0xCFFFFFFF;
    v100 = *((_DWORD *)v5 + 26);
    if ((v100 & 0x10000000) != 0)
      v92 = 0x40000000;
    else
      v92 = 0x80000000;
    if ((v100 & 0x20000000) == 0)
      v92 = v100 & 0xCFFFFFFF;
  }
  v442 = v90 >> 30;
  v101 = v88 >> 30;
  v460 = v89 >> 30;
  v102 = v92 >> 30;
  if ((v454 & 0x40000000) != 0)
  {
    v103 = (v10 & 0x40000000) == 0;
    v513 = v488;
    v514 = v489;
    v515 = v490;
    v512 = v487;
    v511 = v486;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224674D40;
    v507 = (__int128)xmmword_224674D50;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 1, 2, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9100000051), xmmword_224674D50);
    if (v103)
    {
      v508 = v488;
      v509 = v489;
      v510 = v490;
      v507 = v487;
      v506 = v486;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224674D60;
      v567 = (__int128)xmmword_224674D70;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 1, 2, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9100000051), xmmword_224674D70);
      if (((v78 | v450) & 1) == 0)
      {
        v568 = v488;
        v569 = v489;
        v570 = v490;
        v566 = v486;
        v567 = v487;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224674D80;
        v562 = (__int128)xmmword_224674D90;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 1, 2, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9100000051), xmmword_224674D90);
        v104 = (v423 & 1) == 0 && ((v77 | v446) & 1) == 0;
        if ((v437 & 1) == 0 && v104)
        {
          v563 = v488;
          v564 = v489;
          v565 = v490;
          v562 = v487;
          v561 = v486;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_224674DA0;
          v557 = (__int128)xmmword_224674DB0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 1, 2, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1100000051), xmmword_224674DB0);
        }
      }
      v105 = (v79 & 1) == 0 && ((v77 | v446) & 1) == 0;
      if (v105 && (v427 & 1) == 0)
      {
        v558 = v488;
        v559 = v489;
        v560 = v490;
        v557 = v487;
        v556 = v486;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_224674DC0;
        v552 = (__int128)xmmword_224674DD0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 1, 2, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1100000051), xmmword_224674DD0);
      }
    }
    if (((v450 | v460) & 1) == 0)
    {
      v553 = v488;
      v554 = v489;
      v555 = v490;
      v552 = v487;
      v551 = v486;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_224674DE0;
      v547 = (__int128)xmmword_224674DF0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 1, 2, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9100000051), xmmword_224674DF0);
      v106 = (v101 & 1) == 0 && ((v446 | v442) & 1) == 0;
      if ((v423 & 1) == 0 && v106)
      {
        v548 = v488;
        v549 = v489;
        v550 = v490;
        v547 = v487;
        v546 = v486;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224674E00;
        v542 = (__int128)xmmword_224674E10;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 1, 2, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1100000051), xmmword_224674E10);
      }
    }
    v107 = (v427 & 1) == 0 && ((v446 | v442) & 1) == 0;
    if (v107 && (v102 & 1) == 0)
    {
      v543 = v488;
      v544 = v489;
      v545 = v490;
      v542 = v487;
      v541 = v486;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224674E20;
      v537 = xmmword_224674E30;
      *(_QWORD *)&v526 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 1, 2, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0x1100000051), xmmword_224674E30);
    }
  }
  v108 = *((_DWORD *)v5 + 11);
  if (**v477)
  {
    v109 = *((_DWORD *)v5 + 75);
    v110 = *((_DWORD *)v5 + 19);
    v111 = *((_DWORD *)v5 + 83);
    v112 = *((_DWORD *)v5 + 27);
  }
  else
  {
    if ((v108 & 0x10000000) != 0)
      v113 = 0x40000000;
    else
      v113 = 0x80000000;
    if ((v108 & 0x20000000) != 0)
      v108 = v113;
    else
      v108 &= 0xCFFFFFFF;
    v114 = *((_DWORD *)v5 + 75);
    if ((v114 & 0x10000000) != 0)
      v115 = 0x40000000;
    else
      v115 = 0x80000000;
    if ((v114 & 0x20000000) != 0)
      v109 = v115;
    else
      v109 = v114 & 0xCFFFFFFF;
    v116 = *((_DWORD *)v5 + 19);
    if ((v116 & 0x10000000) != 0)
      v117 = 0x40000000;
    else
      v117 = 0x80000000;
    if ((v116 & 0x20000000) != 0)
      v110 = v117;
    else
      v110 = v116 & 0xCFFFFFFF;
    v118 = *((_DWORD *)v5 + 83);
    if ((v118 & 0x10000000) != 0)
      v119 = 0x40000000;
    else
      v119 = 0x80000000;
    if ((v118 & 0x20000000) != 0)
      v111 = v119;
    else
      v111 = v118 & 0xCFFFFFFF;
    v120 = *((_DWORD *)v5 + 27);
    if ((v120 & 0x10000000) != 0)
      v112 = 0x40000000;
    else
      v112 = 0x80000000;
    if ((v120 & 0x20000000) == 0)
      v112 = v120 & 0xCFFFFFFF;
  }
  v434 = v110 >> 30;
  v422 = v108 >> 30;
  v438 = v109 >> 30;
  v121 = v112 >> 30;
  if ((v91 & 0x40000000) != 0)
  {
    v513 = v488;
    v514 = v489;
    v515 = v490;
    v512 = v487;
    v511 = v486;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224674E40;
    v507 = (__int128)xmmword_224674E50;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 2, 2, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9200000052), xmmword_224674E50);
    if ((v454 & 0x40000000) == 0)
    {
      v508 = v488;
      v509 = v489;
      v510 = v490;
      v507 = v487;
      v506 = v486;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224674E60;
      v567 = (__int128)xmmword_224674E70;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 2, 2, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9200000052), xmmword_224674E70);
      if (((v450 | v460) & 1) == 0)
      {
        v568 = v488;
        v569 = v489;
        v570 = v490;
        v566 = v486;
        v567 = v487;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224674E80;
        v562 = (__int128)xmmword_224674E90;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 2, 2, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9200000052), xmmword_224674E90);
        v122 = (v101 & 1) == 0 && ((v446 | v442) & 1) == 0;
        if ((v423 & 1) == 0 && v122)
        {
          v563 = v488;
          v564 = v489;
          v565 = v490;
          v562 = v487;
          v561 = v486;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_224674EA0;
          v557 = (__int128)xmmword_224674EB0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 2, 2, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1200000052), xmmword_224674EB0);
        }
      }
      v123 = (v427 & 1) == 0 && ((v446 | v442) & 1) == 0;
      if (v123 && (v102 & 1) == 0)
      {
        v558 = v488;
        v559 = v489;
        v560 = v490;
        v557 = v487;
        v556 = v486;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_224674EC0;
        v552 = (__int128)xmmword_224674ED0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 2, 2, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1200000052), xmmword_224674ED0);
      }
    }
    if (((v460 | v438) & 1) == 0)
    {
      v553 = v488;
      v554 = v489;
      v555 = v490;
      v552 = v487;
      v551 = v486;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_224674EE0;
      v547 = (__int128)xmmword_224674EF0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 2, 2, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9200000052), xmmword_224674EF0);
      v124 = (v422 & 1) == 0 && ((v442 | v434) & 1) == 0;
      if ((v101 & 1) == 0 && v124)
      {
        v548 = v488;
        v549 = v489;
        v550 = v490;
        v547 = v487;
        v546 = v486;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224674F00;
        v542 = (__int128)xmmword_224674F10;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 2, 2, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1200000052), xmmword_224674F10);
      }
    }
    v125 = (v102 & 1) == 0 && ((v442 | v434) & 1) == 0;
    if (v125 && (v121 & 1) == 0)
    {
      v543 = v488;
      v544 = v489;
      v545 = v490;
      v542 = v487;
      v541 = v486;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224674F20;
      v537 = xmmword_224674F30;
      *(_QWORD *)&v526 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 2, 2, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0x1200000052), xmmword_224674F30);
    }
  }
  v126 = *((_DWORD *)v5 + 12);
  if (**v477)
  {
    v127 = *((_DWORD *)v5 + 76);
    v128 = *((_DWORD *)v5 + 20);
    v129 = *((_DWORD *)v5 + 84);
    v130 = *((_DWORD *)v5 + 28);
  }
  else
  {
    if ((v126 & 0x10000000) != 0)
      v131 = 0x40000000;
    else
      v131 = 0x80000000;
    if ((v126 & 0x20000000) != 0)
      v126 = v131;
    else
      v126 &= 0xCFFFFFFF;
    v132 = *((_DWORD *)v5 + 76);
    if ((v132 & 0x10000000) != 0)
      v133 = 0x40000000;
    else
      v133 = 0x80000000;
    if ((v132 & 0x20000000) != 0)
      v127 = v133;
    else
      v127 = v132 & 0xCFFFFFFF;
    v134 = *((_DWORD *)v5 + 20);
    if ((v134 & 0x10000000) != 0)
      v135 = 0x40000000;
    else
      v135 = 0x80000000;
    if ((v134 & 0x20000000) != 0)
      v128 = v135;
    else
      v128 = v134 & 0xCFFFFFFF;
    v136 = *((_DWORD *)v5 + 84);
    if ((v136 & 0x10000000) != 0)
      v137 = 0x40000000;
    else
      v137 = 0x80000000;
    if ((v136 & 0x20000000) != 0)
      v129 = v137;
    else
      v129 = v136 & 0xCFFFFFFF;
    v138 = *((_DWORD *)v5 + 28);
    if ((v138 & 0x10000000) != 0)
      v130 = 0x40000000;
    else
      v130 = 0x80000000;
    if ((v138 & 0x20000000) == 0)
      v130 = v138 & 0xCFFFFFFF;
  }
  v428 = v126 >> 30;
  v451 = v128 >> 30;
  v455 = v127 >> 30;
  v139 = v130 >> 30;
  if ((v111 & 0x40000000) != 0)
  {
    v513 = v488;
    v514 = v489;
    v515 = v490;
    v512 = v487;
    v511 = v486;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224674F40;
    v507 = (__int128)xmmword_224674F50;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 3, 2, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9300000053), xmmword_224674F50);
    if ((v91 & 0x40000000) == 0)
    {
      v508 = v488;
      v509 = v489;
      v510 = v490;
      v507 = v487;
      v506 = v486;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224674F60;
      v567 = (__int128)xmmword_224674F70;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 3, 2, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9300000053), xmmword_224674F70);
      if (((v460 | v438) & 1) == 0)
      {
        v568 = v488;
        v569 = v489;
        v570 = v490;
        v566 = v486;
        v567 = v487;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224674F80;
        v562 = (__int128)xmmword_224674F90;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 3, 2, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9300000053), xmmword_224674F90);
        v140 = (v422 & 1) == 0 && ((v442 | v434) & 1) == 0;
        if ((v101 & 1) == 0 && v140)
        {
          v563 = v488;
          v564 = v489;
          v565 = v490;
          v562 = v487;
          v561 = v486;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_224674FA0;
          v557 = (__int128)xmmword_224674FB0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 3, 2, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1300000053), xmmword_224674FB0);
        }
      }
      v141 = (v102 & 1) == 0 && ((v442 | v434) & 1) == 0;
      if (v141 && (v121 & 1) == 0)
      {
        v558 = v488;
        v559 = v489;
        v560 = v490;
        v557 = v487;
        v556 = v486;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_224674FC0;
        v552 = (__int128)xmmword_224674FD0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 3, 2, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1300000053), xmmword_224674FD0);
      }
    }
    if (((v438 | v455) & 1) == 0)
    {
      v553 = v488;
      v554 = v489;
      v555 = v490;
      v552 = v487;
      v551 = v486;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_224674FE0;
      v547 = (__int128)xmmword_224674FF0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 3, 2, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9300000053), xmmword_224674FF0);
      v142 = (v428 & 1) == 0 && ((v434 | v451) & 1) == 0;
      if ((v422 & 1) == 0 && v142)
      {
        v548 = v488;
        v549 = v489;
        v550 = v490;
        v547 = v487;
        v546 = v486;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224675000;
        v542 = (__int128)xmmword_224675010;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 3, 2, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1300000053), xmmword_224675010);
      }
    }
    v143 = (v121 & 1) == 0 && ((v434 | v451) & 1) == 0;
    if (v143 && (v139 & 1) == 0)
    {
      v543 = v488;
      v544 = v489;
      v545 = v490;
      v542 = v487;
      v541 = v486;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224675020;
      v537 = xmmword_224675030;
      *(_QWORD *)&v526 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 3, 2, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0x1300000053), xmmword_224675030);
    }
  }
  v144 = *((_DWORD *)v5 + 13);
  if (**v477)
  {
    v145 = *((_DWORD *)v5 + 77);
    v146 = *((_DWORD *)v5 + 21);
    v147 = *((_DWORD *)v5 + 85);
    v148 = *((_DWORD *)v5 + 29);
  }
  else
  {
    if ((v144 & 0x10000000) != 0)
      v149 = 0x40000000;
    else
      v149 = 0x80000000;
    if ((v144 & 0x20000000) != 0)
      v144 = v149;
    else
      v144 &= 0xCFFFFFFF;
    v150 = *((_DWORD *)v5 + 77);
    if ((v150 & 0x10000000) != 0)
      v151 = 0x40000000;
    else
      v151 = 0x80000000;
    if ((v150 & 0x20000000) != 0)
      v145 = v151;
    else
      v145 = v150 & 0xCFFFFFFF;
    v152 = *((_DWORD *)v5 + 21);
    if ((v152 & 0x10000000) != 0)
      v153 = 0x40000000;
    else
      v153 = 0x80000000;
    if ((v152 & 0x20000000) != 0)
      v146 = v153;
    else
      v146 = v152 & 0xCFFFFFFF;
    v154 = *((_DWORD *)v5 + 85);
    if ((v154 & 0x10000000) != 0)
      v155 = 0x40000000;
    else
      v155 = 0x80000000;
    if ((v154 & 0x20000000) != 0)
      v147 = v155;
    else
      v147 = v154 & 0xCFFFFFFF;
    v156 = *((_DWORD *)v5 + 29);
    if ((v156 & 0x10000000) != 0)
      v148 = 0x40000000;
    else
      v148 = 0x80000000;
    if ((v156 & 0x20000000) == 0)
      v148 = v156 & 0xCFFFFFFF;
  }
  v157 = v146 >> 30;
  v424 = v144 >> 30;
  v461 = v145 >> 30;
  v158 = v148 >> 30;
  if ((v129 & 0x40000000) != 0)
  {
    v513 = v488;
    v514 = v489;
    v515 = v490;
    v512 = v487;
    v511 = v486;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224675040;
    v507 = (__int128)xmmword_224675050;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 4, 2, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9400000054), xmmword_224675050);
    if ((v111 & 0x40000000) == 0)
    {
      v508 = v488;
      v509 = v489;
      v510 = v490;
      v507 = v487;
      v506 = v486;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224675060;
      v567 = (__int128)xmmword_224675070;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 4, 2, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9400000054), xmmword_224675070);
      if (((v438 | v455) & 1) == 0)
      {
        v568 = v488;
        v569 = v489;
        v570 = v490;
        v566 = v486;
        v567 = v487;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224675080;
        v562 = (__int128)xmmword_224675090;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 4, 2, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9400000054), xmmword_224675090);
        v159 = (v428 & 1) == 0 && ((v434 | v451) & 1) == 0;
        if ((v422 & 1) == 0 && v159)
        {
          v563 = v488;
          v564 = v489;
          v565 = v490;
          v562 = v487;
          v561 = v486;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_2246750A0;
          v557 = (__int128)xmmword_2246750B0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 4, 2, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1400000054), xmmword_2246750B0);
        }
      }
      v160 = (v121 & 1) == 0 && ((v434 | v451) & 1) == 0;
      if (v160 && (v139 & 1) == 0)
      {
        v558 = v488;
        v559 = v489;
        v560 = v490;
        v557 = v487;
        v556 = v486;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_2246750C0;
        v552 = (__int128)xmmword_2246750D0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 4, 2, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1400000054), xmmword_2246750D0);
      }
    }
    if (((v455 | v461) & 1) == 0)
    {
      v553 = v488;
      v554 = v489;
      v555 = v490;
      v552 = v487;
      v551 = v486;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_2246750E0;
      v547 = (__int128)xmmword_2246750F0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 4, 2, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9400000054), xmmword_2246750F0);
      v161 = (v424 & 1) == 0 && ((v451 | v157) & 1) == 0;
      if ((v428 & 1) == 0 && v161)
      {
        v548 = v488;
        v549 = v489;
        v550 = v490;
        v547 = v487;
        v546 = v486;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224675100;
        v542 = (__int128)xmmword_224675110;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 4, 2, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1400000054), xmmword_224675110);
      }
    }
    v162 = (v139 & 1) == 0 && ((v451 | v157) & 1) == 0;
    if (v162 && (v158 & 1) == 0)
    {
      v543 = v488;
      v544 = v489;
      v545 = v490;
      v542 = v487;
      v541 = v486;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224675120;
      v537 = xmmword_224675130;
      *(_QWORD *)&v526 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 4, 2, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0x1400000054), xmmword_224675130);
    }
  }
  v163 = *((_DWORD *)v5 + 14);
  if (**v477)
  {
    v164 = *((_DWORD *)v5 + 78);
    v165 = *((_DWORD *)v5 + 22);
    v166 = *((_DWORD *)v5 + 86);
    v167 = *((_DWORD *)v5 + 30);
  }
  else
  {
    if ((v163 & 0x10000000) != 0)
      v168 = 0x40000000;
    else
      v168 = 0x80000000;
    if ((v163 & 0x20000000) != 0)
      v163 = v168;
    else
      v163 &= 0xCFFFFFFF;
    v169 = *((_DWORD *)v5 + 78);
    if ((v169 & 0x10000000) != 0)
      v170 = 0x40000000;
    else
      v170 = 0x80000000;
    if ((v169 & 0x20000000) != 0)
      v164 = v170;
    else
      v164 = v169 & 0xCFFFFFFF;
    v171 = *((_DWORD *)v5 + 22);
    if ((v171 & 0x10000000) != 0)
      v172 = 0x40000000;
    else
      v172 = 0x80000000;
    if ((v171 & 0x20000000) != 0)
      v165 = v172;
    else
      v165 = v171 & 0xCFFFFFFF;
    v173 = *((_DWORD *)v5 + 86);
    if ((v173 & 0x10000000) != 0)
      v174 = 0x40000000;
    else
      v174 = 0x80000000;
    if ((v173 & 0x20000000) != 0)
      v166 = v174;
    else
      v166 = v173 & 0xCFFFFFFF;
    v175 = *((_DWORD *)v5 + 30);
    if ((v175 & 0x10000000) != 0)
      v167 = 0x40000000;
    else
      v167 = 0x80000000;
    if ((v175 & 0x20000000) == 0)
      v167 = v175 & 0xCFFFFFFF;
  }
  v435 = v163 >> 30;
  v443 = v165 >> 30;
  v447 = v164 >> 30;
  v439 = v167 >> 30;
  v528 = v488;
  v529 = v489;
  v530 = v490;
  v527 = v487;
  v526 = v486;
  if ((v147 & 0x40000000) != 0)
  {
    v513 = v488;
    v514 = v489;
    v515 = v490;
    v512 = v487;
    v511 = v486;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224675140;
    v507 = (__int128)xmmword_224675150;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 5, 2, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9500000055), xmmword_224675150);
    if ((v129 & 0x40000000) == 0)
    {
      v508 = v488;
      v509 = v489;
      v510 = v490;
      v507 = v487;
      v506 = v486;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224675160;
      v567 = (__int128)xmmword_224675170;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 5, 2, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9500000055), xmmword_224675170);
      if (((v455 | v461) & 1) == 0)
      {
        v568 = v488;
        v569 = v489;
        v570 = v490;
        v566 = v486;
        v567 = v487;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224675180;
        v562 = (__int128)xmmword_224675190;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 5, 2, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9500000055), xmmword_224675190);
        v176 = (v424 & 1) == 0 && ((v451 | v157) & 1) == 0;
        if ((v428 & 1) == 0 && v176)
        {
          v563 = v488;
          v564 = v489;
          v565 = v490;
          v562 = v487;
          v561 = v486;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_2246751A0;
          v557 = (__int128)xmmword_2246751B0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 5, 2, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1500000055), xmmword_2246751B0);
        }
      }
      v177 = (v139 & 1) == 0 && ((v451 | v157) & 1) == 0;
      if (v177 && (v158 & 1) == 0)
      {
        v558 = v528;
        v559 = v529;
        v560 = v530;
        v557 = v527;
        v556 = v526;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_2246751C0;
        v552 = (__int128)xmmword_2246751D0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 5, 2, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1500000055), xmmword_2246751D0);
      }
    }
    if (((v461 | v447) & 1) == 0)
    {
      v553 = v528;
      v554 = v529;
      v555 = v530;
      v552 = v527;
      v551 = v526;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_2246751E0;
      v547 = (__int128)xmmword_2246751F0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 5, 2, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9500000055), xmmword_2246751F0);
      v178 = (v435 & 1) == 0 && ((v157 | v443) & 1) == 0;
      if ((v424 & 1) == 0 && v178)
      {
        v548 = v528;
        v549 = v529;
        v550 = v530;
        v547 = v527;
        v546 = v526;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224675200;
        v542 = (__int128)xmmword_224675210;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 5, 2, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1500000055), xmmword_224675210);
      }
    }
    v179 = (v158 & 1) == 0 && ((v157 | v443) & 1) == 0;
    if (v179 && (v439 & 1) == 0)
    {
      v543 = v528;
      v544 = v529;
      v545 = v530;
      v542 = v527;
      v541 = v526;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224675220;
      v537 = xmmword_224675230;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 5, 2, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v521, COERCE_DOUBLE(0x1500000055), xmmword_224675230);
    }
  }
  v523 = v488;
  v524 = v489;
  v525 = v490;
  v522 = v487;
  v521 = v486;
  v180 = *((_DWORD *)v5 + 15);
  if (**v477)
  {
    v181 = *((_DWORD *)v5 + 79);
    v182 = *((_DWORD *)v5 + 23);
    v183 = *((_DWORD *)v5 + 87);
    v184 = *((_DWORD *)v5 + 31);
  }
  else
  {
    if ((v180 & 0x10000000) != 0)
      v185 = 0x40000000;
    else
      v185 = 0x80000000;
    if ((v180 & 0x20000000) != 0)
      v180 = v185;
    else
      v180 &= 0xCFFFFFFF;
    v186 = *((_DWORD *)v5 + 79);
    if ((v186 & 0x10000000) != 0)
      v187 = 0x40000000;
    else
      v187 = 0x80000000;
    if ((v186 & 0x20000000) != 0)
      v181 = v187;
    else
      v181 = v186 & 0xCFFFFFFF;
    v188 = *((_DWORD *)v5 + 23);
    if ((v188 & 0x10000000) != 0)
      v189 = 0x40000000;
    else
      v189 = 0x80000000;
    if ((v188 & 0x20000000) != 0)
      v182 = v189;
    else
      v182 = v188 & 0xCFFFFFFF;
    v190 = *((_DWORD *)v5 + 87);
    if ((v190 & 0x10000000) != 0)
      v191 = 0x40000000;
    else
      v191 = 0x80000000;
    if ((v190 & 0x20000000) != 0)
      v183 = v191;
    else
      v183 = v190 & 0xCFFFFFFF;
    v192 = *((_DWORD *)v5 + 31);
    if ((v192 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v192 & 0x20000000) == 0)
      v184 = v192 & 0xCFFFFFFF;
  }
  v193 = v471;
  v194 = v182 >> 30;
  v456 = v180 >> 30;
  v195 = v181 >> 30;
  v479 = v184 >> 30;
  v533 = v488;
  v534 = v489;
  v535 = v490;
  v532 = v487;
  v531 = v486;
  if ((v166 & 0x40000000) != 0)
  {
    v513 = v488;
    v514 = v489;
    v515 = v490;
    v512 = v487;
    v511 = v486;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224675240;
    v507 = (__int128)xmmword_224675250;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 6, 2, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9600000056), xmmword_224675250);
    if ((v147 & 0x40000000) == 0)
    {
      v508 = v488;
      v509 = v489;
      v510 = v490;
      v507 = v487;
      v506 = v486;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224675260;
      v567 = (__int128)xmmword_224675270;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 6, 2, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9600000056), xmmword_224675270);
      if (((v461 | v447) & 1) == 0)
      {
        v568 = v488;
        v569 = v489;
        v570 = v490;
        v566 = v486;
        v567 = v487;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224675280;
        v562 = (__int128)xmmword_224675290;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 6, 2, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9600000056), xmmword_224675290);
        v196 = (v435 & 1) == 0 && ((v157 | v443) & 1) == 0;
        if ((v424 & 1) == 0 && v196)
        {
          v563 = v488;
          v564 = v489;
          v565 = v490;
          v562 = v487;
          v561 = v486;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_2246752A0;
          v557 = (__int128)xmmword_2246752B0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 6, 2, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1600000056), xmmword_2246752B0);
        }
      }
      v197 = (v158 & 1) == 0 && ((v157 | v443) & 1) == 0;
      if (v197 && (v439 & 1) == 0)
      {
        v558 = v533;
        v559 = v534;
        v560 = v535;
        v557 = v532;
        v556 = v531;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_2246752C0;
        v552 = (__int128)xmmword_2246752D0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 6, 2, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1600000056), xmmword_2246752D0);
      }
    }
    if (((v447 | v195) & 1) == 0)
    {
      v553 = v533;
      v554 = v534;
      v555 = v535;
      v552 = v532;
      v551 = v531;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_2246752E0;
      v547 = (__int128)xmmword_2246752F0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 6, 2, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9600000056), xmmword_2246752F0);
      v198 = (v456 & 1) == 0 && ((v443 | v194) & 1) == 0;
      if ((v435 & 1) == 0 && v198)
      {
        v548 = v533;
        v549 = v534;
        v550 = v535;
        v547 = v532;
        v546 = v531;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224675300;
        v542 = (__int128)xmmword_224675310;
        *(_QWORD *)&v516 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 6, 2, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v516, COERCE_DOUBLE(0x1600000056), xmmword_224675310);
      }
    }
    v199 = (v439 & 1) == 0 && ((v443 | v194) & 1) == 0;
    v193 = v471;
    if (v199 && (v479 & 1) == 0)
    {
      v543 = v533;
      v544 = v534;
      v545 = v535;
      v542 = v532;
      v541 = v531;
      *(_QWORD *)&v516 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224675320;
      v537 = xmmword_224675330;
      *(_QWORD *)&v572[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 6, 2, 1, (uint64_t)&v516, (uint64_t)&v536, (uint64_t)v572, COERCE_DOUBLE(0x1600000056), xmmword_224675330);
      v193 = v471;
    }
  }
  v200 = *(unsigned int *)(v475 + 88);
  if ((v200 & 0x80000000) != 0)
  {
    v203 = *v465;
    v204 = *(_DWORD *)(v193 + 312);
    v205 = **v465;
    if (**v465)
      goto LABEL_509;
  }
  else
  {
    v201 = *(_QWORD *)(v193 + 2328);
    if (v200 >= (*(_QWORD *)(v193 + 2336) - v201) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v193 = v471;
      v201 = *(_QWORD *)(v471 + 2328);
    }
    v202 = v201 + (v200 << 11);
    v203 = *v465;
    v204 = *(_DWORD *)(v202 + 32);
    v205 = **v465;
    if (**v465)
    {
LABEL_509:
      v206 = *(unsigned int *)(v475 + 88);
      if ((v206 & 0x80000000) == 0)
        goto LABEL_510;
LABEL_529:
      v208 = *(_DWORD *)(v193 + 568);
      if (v205)
        goto LABEL_514;
      goto LABEL_530;
    }
  }
  if ((v204 & 0x10000000) != 0)
    v213 = 0x40000000;
  else
    v213 = 0x80000000;
  if ((v204 & 0x20000000) != 0)
    v204 = v213;
  else
    v204 &= 0xCFFFFFFF;
  v206 = *(unsigned int *)(v475 + 88);
  if ((v206 & 0x80000000) != 0)
    goto LABEL_529;
LABEL_510:
  v207 = *(_QWORD *)(v193 + 2328);
  if (v206 >= (*(_QWORD *)(v193 + 2336) - v207) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v193 = v471;
    v207 = *(_QWORD *)(v471 + 2328);
    v203 = *v465;
    v205 = **v465;
  }
  v208 = *(_DWORD *)(v207 + (v206 << 11) + 288);
  if (v205)
  {
LABEL_514:
    v209 = *(unsigned int *)(v475 + 88);
    if ((v209 & 0x80000000) == 0)
      goto LABEL_515;
LABEL_537:
    v211 = *(_DWORD *)(v193 + 344);
    if (v205)
      goto LABEL_519;
    goto LABEL_538;
  }
LABEL_530:
  if ((v208 & 0x10000000) != 0)
    v214 = 0x40000000;
  else
    v214 = 0x80000000;
  if ((v208 & 0x20000000) != 0)
    v208 = v214;
  else
    v208 &= 0xCFFFFFFF;
  v209 = *(unsigned int *)(v475 + 88);
  if ((v209 & 0x80000000) != 0)
    goto LABEL_537;
LABEL_515:
  v210 = *(_QWORD *)(v193 + 2328);
  if (v209 >= (*(_QWORD *)(v193 + 2336) - v210) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v193 = v471;
    v210 = *(_QWORD *)(v471 + 2328);
    v203 = *v465;
    v205 = **v465;
  }
  v211 = *(_DWORD *)(v210 + (v209 << 11) + 64);
  if (v205)
  {
LABEL_519:
    v212 = *(unsigned int *)(v475 + 88);
    if ((v212 & 0x80000000) != 0)
      goto LABEL_590;
    goto LABEL_545;
  }
LABEL_538:
  if ((v211 & 0x10000000) != 0)
    v215 = 0x40000000;
  else
    v215 = 0x80000000;
  if ((v211 & 0x20000000) != 0)
    v211 = v215;
  else
    v211 &= 0xCFFFFFFF;
  v212 = *(unsigned int *)(v475 + 88);
  if ((v212 & 0x80000000) != 0)
    goto LABEL_590;
LABEL_545:
  v216 = *(_QWORD *)(v193 + 2328);
  v217 = (*(_QWORD *)(v193 + 2336) - v216) >> 11;
  if (v217 > v212)
    goto LABEL_549;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v203 = *v465;
  v193 = v471;
  v212 = *(unsigned int *)(v475 + 88);
  if ((v212 & 0x80000000) != 0)
  {
LABEL_590:
    v218 = *(_DWORD *)(v193 + 376);
    if (*v203)
      goto LABEL_559;
    goto LABEL_553;
  }
  v216 = *(_QWORD *)(v471 + 2328);
  v217 = (*(_QWORD *)(v471 + 2336) - v216) >> 11;
LABEL_549:
  if (v217 <= v212)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v216 = *(_QWORD *)(v471 + 2328);
    v203 = *v465;
  }
  v218 = *(_DWORD *)(v216 + (v212 << 11) + 96);
  if (!*v203)
  {
LABEL_553:
    if ((v218 & 0x10000000) != 0)
      v219 = 0x40000000;
    else
      v219 = 0x80000000;
    if ((v218 & 0x20000000) != 0)
      v218 = v219;
    else
      v218 &= 0xCFFFFFFF;
  }
LABEL_559:
  v538 = v523;
  v539 = v524;
  v540 = v525;
  v537 = (float32x4_t)v522;
  v536 = v521;
  if ((v183 & 0x40000000) != 0)
  {
    v513 = v523;
    v514 = v524;
    v515 = v525;
    v512 = v522;
    v511 = v521;
    *(_QWORD *)&v566 = 0x161616160D0D0D0DLL;
    v506 = xmmword_224675340;
    v507 = (__int128)xmmword_224675350;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 7, 2, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9700000057), xmmword_224675350);
    if ((v166 & 0x40000000) == 0)
    {
      v508 = v523;
      v509 = v524;
      v510 = v525;
      v507 = v522;
      v506 = v521;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224675360;
      v567 = (__int128)xmmword_224675370;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 7, 2, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9700000057), xmmword_224675370);
      if (((v447 | v195) & 1) == 0)
      {
        v568 = v523;
        v569 = v524;
        v570 = v525;
        v566 = v521;
        v567 = v522;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224675380;
        v562 = (__int128)xmmword_224675390;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 7, 2, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9700000057), xmmword_224675390);
        v220 = (v456 & 1) == 0 && ((v443 | v194) & 1) == 0;
        if ((v435 & 1) == 0 && v220)
        {
          v563 = v523;
          v564 = v524;
          v565 = v525;
          v562 = v522;
          v561 = v521;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_2246753A0;
          v557 = (__int128)xmmword_2246753B0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 7, 2, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1700000057), xmmword_2246753B0);
        }
      }
      v221 = (v439 & 1) == 0 && ((v443 | v194) & 1) == 0;
      if (v221 && (v479 & 1) == 0)
      {
        v558 = v538;
        v559 = v539;
        v560 = v540;
        v557 = (__int128)v537;
        v556 = v536;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_2246753C0;
        v552 = (__int128)xmmword_2246753D0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 7, 2, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1700000057), xmmword_2246753D0);
      }
    }
    if (!(v208 & 0x40000000 | v195 & 1))
    {
      v553 = v538;
      v554 = v539;
      v555 = v540;
      *(_QWORD *)&v541 = 0x16160D0D16160D0DLL;
      v552 = (__int128)v537;
      v551 = v536;
      v546 = xmmword_2246753E0;
      v547 = (__int128)xmmword_2246753F0;
      *(_QWORD *)&v516 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 7, 2, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v516, COERCE_DOUBLE(0x9700000057), xmmword_2246753F0);
      v222 = (v204 & 0x40000000) == 0 && (v211 & 0x40000000 | v194 & 1) == 0;
      if ((v456 & 1) == 0 && v222)
      {
        v548 = v538;
        v549 = v539;
        v550 = v540;
        *(_QWORD *)&v516 = 0x161616160D0D0D0DLL;
        v547 = (__int128)v537;
        v546 = v536;
        v541 = xmmword_224675400;
        v542 = (__int128)xmmword_224675410;
        *(_QWORD *)&v572[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 7, 2, 1, (uint64_t)&v516, (uint64_t)&v541, (uint64_t)v572, COERCE_DOUBLE(0x1700000057), xmmword_224675410);
      }
    }
    v223 = (v479 & 1) == 0 && (v211 & 0x40000000 | v194 & 1) == 0;
    if (v223 && (v218 & 0x40000000) == 0)
    {
      v543 = v538;
      v544 = v539;
      v545 = v540;
      *(_QWORD *)&v572[0] = 0x16160D0D16160D0DLL;
      v542 = (__int128)v537;
      v541 = v536;
      v516 = xmmword_224675420;
      v517 = (__int128)xmmword_224675430;
      v573[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 7, 2, 1, (uint64_t)v572, (uint64_t)&v516, (uint64_t)v573, COERCE_DOUBLE(0x1700000057), xmmword_224675430);
    }
  }
  v224 = a1[2];
  v476 = v469[1];
  v480 = *v469;
  v484 = a3[3];
  v485 = a3[4];
  v482 = a3[1];
  v483 = a3[2];
  v481 = *a3;
  v436 = *(_OWORD *)a1;
  v470 = (_BYTE **)v469[2];
  v472 = *a1;
  v225 = *((_DWORD *)v224 + 16);
  v226 = ***a1;
  if (***a1)
  {
    v227 = *((_DWORD *)v224 + 80);
    v228 = *((_DWORD *)v224 + 24);
    v229 = *((_DWORD *)v224 + 32);
    v466 = *((_DWORD *)v224 + 88);
    if ((v466 & 0x40000000) == 0)
    {
LABEL_589:
      v230 = v227;
      v231 = 0;
      v232 = 0;
      v233 = 0;
      v234 = 0;
      v235 = 0;
      goto LABEL_642;
    }
  }
  else
  {
    if ((v225 & 0x20000000) != 0)
      v225 *= 4;
    v236 = *((_DWORD *)v224 + 80);
    if ((v236 & 0x20000000) != 0)
      v227 = 4 * v236;
    else
      v227 = *((_DWORD *)v224 + 80);
    v237 = *((_DWORD *)v224 + 24);
    if ((v237 & 0x20000000) != 0)
      v228 = 4 * v237;
    else
      v228 = *((_DWORD *)v224 + 24);
    v238 = *((_DWORD *)v224 + 88);
    if ((v238 & 0x20000000) != 0)
      v239 = 4 * v238;
    else
      v239 = *((_DWORD *)v224 + 88);
    v240 = *((_DWORD *)v224 + 32);
    if ((v240 & 0x10000000) != 0)
      v241 = 0x40000000;
    else
      v241 = 0x80000000;
    if ((v240 & 0x20000000) != 0)
      v229 = v241;
    else
      v229 = v240 & 0xCFFFFFFF;
    v466 = v239;
    if ((v239 & 0x40000000) == 0)
      goto LABEL_589;
  }
  v242 = *(unsigned int *)(v476 + 16);
  if ((v242 & 0x80000000) != 0)
  {
    v244 = *(_DWORD *)(v480 + 372);
    v245 = **v470;
    if (**v470)
      goto LABEL_615;
  }
  else
  {
    v243 = *(_QWORD *)(v480 + 2328);
    if (v242 >= (*(_QWORD *)(v480 + 2336) - v243) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v243 = *(_QWORD *)(v480 + 2328);
    }
    v244 = *(_DWORD *)(v243 + (v242 << 11) + 92);
    v245 = **v470;
    if (**v470)
    {
LABEL_615:
      v246 = *(unsigned int *)(v476 + 16);
      if ((v246 & 0x80000000) == 0)
        goto LABEL_616;
LABEL_1149:
      v248 = *(_DWORD *)(v480 + 628);
      if (v245)
        goto LABEL_620;
      goto LABEL_1150;
    }
  }
  if ((v244 & 0x10000000) != 0)
    v418 = 0x40000000;
  else
    v418 = 0x80000000;
  if ((v244 & 0x20000000) != 0)
    v244 = v418;
  else
    v244 &= 0xCFFFFFFF;
  v246 = *(unsigned int *)(v476 + 16);
  if ((v246 & 0x80000000) != 0)
    goto LABEL_1149;
LABEL_616:
  v247 = *(_QWORD *)(v480 + 2328);
  if (v246 >= (*(_QWORD *)(v480 + 2336) - v247) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v247 = *(_QWORD *)(v480 + 2328);
    v245 = **v470;
  }
  v248 = *(_DWORD *)(v247 + (v246 << 11) + 348);
  if (v245)
  {
LABEL_620:
    v249 = *(unsigned int *)(v476 + 16);
    if ((v249 & 0x80000000) == 0)
      goto LABEL_621;
LABEL_1157:
    v251 = *(_DWORD *)(v480 + 404);
    if (v245)
      goto LABEL_625;
    goto LABEL_1158;
  }
LABEL_1150:
  if ((v248 & 0x10000000) != 0)
    v419 = 0x40000000;
  else
    v419 = 0x80000000;
  if ((v248 & 0x20000000) != 0)
    v248 = v419;
  else
    v248 &= 0xCFFFFFFF;
  v249 = *(unsigned int *)(v476 + 16);
  if ((v249 & 0x80000000) != 0)
    goto LABEL_1157;
LABEL_621:
  v250 = *(_QWORD *)(v480 + 2328);
  if (v249 >= (*(_QWORD *)(v480 + 2336) - v250) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v250 = *(_QWORD *)(v480 + 2328);
    v245 = **v470;
  }
  v251 = *(_DWORD *)(v250 + (v249 << 11) + 124);
  if (v245)
  {
LABEL_625:
    v252 = *(unsigned int *)(v476 + 16);
    if ((v252 & 0x80000000) == 0)
      goto LABEL_626;
LABEL_1165:
    v254 = *(_DWORD *)(v480 + 660);
    if (v245)
      goto LABEL_630;
    goto LABEL_1166;
  }
LABEL_1158:
  if ((v251 & 0x10000000) != 0)
    v420 = 0x40000000;
  else
    v420 = 0x80000000;
  if ((v251 & 0x20000000) != 0)
    v251 = v420;
  else
    v251 &= 0xCFFFFFFF;
  v252 = *(unsigned int *)(v476 + 16);
  if ((v252 & 0x80000000) != 0)
    goto LABEL_1165;
LABEL_626:
  v253 = *(_QWORD *)(v480 + 2328);
  if (v252 >= (*(_QWORD *)(v480 + 2336) - v253) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v253 = *(_QWORD *)(v480 + 2328);
    v245 = **v470;
  }
  v254 = *(_DWORD *)(v253 + (v252 << 11) + 380);
  if (v245)
  {
LABEL_630:
    v255 = *(unsigned int *)(v476 + 16);
    if ((v255 & 0x80000000) == 0)
      goto LABEL_631;
    goto LABEL_1173;
  }
LABEL_1166:
  if ((v254 & 0x10000000) != 0)
    v421 = 0x40000000;
  else
    v421 = 0x80000000;
  if ((v254 & 0x20000000) != 0)
    v254 = v421;
  else
    v254 &= 0xCFFFFFFF;
  v255 = *(unsigned int *)(v476 + 16);
  if ((v255 & 0x80000000) == 0)
  {
LABEL_631:
    v256 = *(_QWORD *)(v480 + 2328);
    if (v255 >= (*(_QWORD *)(v480 + 2336) - v256) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v256 = *(_QWORD *)(v480 + 2328);
      v245 = **v470;
    }
    v230 = v227;
    v257 = v256 + (v255 << 11);
    v235 = (v244 >> 30) & 1;
    v234 = (v248 >> 30) & 1;
    v233 = (v251 >> 30) & 1;
    v258 = *(_DWORD *)(v257 + 156);
    v232 = (v254 >> 30) & 1;
    if (v245)
      goto LABEL_641;
    goto LABEL_635;
  }
LABEL_1173:
  v230 = v227;
  v235 = (v244 >> 30) & 1;
  v234 = (v248 >> 30) & 1;
  v233 = (v251 >> 30) & 1;
  v258 = *(_DWORD *)(v480 + 436);
  v232 = (v254 >> 30) & 1;
  if (!v245)
  {
LABEL_635:
    if ((v258 & 0x10000000) != 0)
      v259 = 0x40000000;
    else
      v259 = 0x80000000;
    if ((v258 & 0x20000000) != 0)
      v258 = v259;
    else
      v258 &= 0xCFFFFFFF;
  }
LABEL_641:
  v231 = (v258 >> 30) & 1;
  v226 = **v472;
LABEL_642:
  v425 = v225 >> 30;
  v518 = v483;
  v519 = v484;
  v520 = v485;
  v517 = v482;
  v516 = v481;
  v260 = *((_DWORD *)v224 + 17);
  if (v226)
  {
    v261 = *((_DWORD *)v224 + 81);
    v262 = *((_DWORD *)v224 + 25);
    v462 = *((_DWORD *)v224 + 89);
    v263 = *((_DWORD *)v224 + 33);
  }
  else
  {
    if ((v260 & 0x10000000) != 0)
      v264 = 0x40000000;
    else
      v264 = 0x80000000;
    if ((v260 & 0x20000000) != 0)
      v260 = v264;
    else
      v260 &= 0xCFFFFFFF;
    v265 = *((_DWORD *)v224 + 81);
    if ((v265 & 0x10000000) != 0)
      v266 = 0x40000000;
    else
      v266 = 0x80000000;
    if ((v265 & 0x20000000) != 0)
      v261 = v266;
    else
      v261 = v265 & 0xCFFFFFFF;
    v267 = *((_DWORD *)v224 + 25);
    if ((v267 & 0x10000000) != 0)
      v268 = 0x40000000;
    else
      v268 = 0x80000000;
    if ((v267 & 0x20000000) != 0)
      v262 = v268;
    else
      v262 = v267 & 0xCFFFFFFF;
    v269 = *((_DWORD *)v224 + 89);
    if ((v269 & 0x10000000) != 0)
      v270 = 0x40000000;
    else
      v270 = 0x80000000;
    if ((v269 & 0x20000000) != 0)
      v271 = v270;
    else
      v271 = v269 & 0xCFFFFFFF;
    v462 = v271;
    v272 = *((_DWORD *)v224 + 33);
    if ((v272 & 0x10000000) != 0)
      v263 = 0x40000000;
    else
      v263 = 0x80000000;
    if ((v272 & 0x20000000) == 0)
      v263 = v272 & 0xCFFFFFFF;
  }
  v273 = v228 >> 30;
  v274 = v230 >> 30;
  v275 = v229 >> 30;
  v432 = v260 >> 30;
  v452 = v262 >> 30;
  v457 = v261 >> 30;
  v444 = v263 >> 30;
  if ((v466 & 0x40000000) != 0)
  {
    v513 = v483;
    v514 = v484;
    v515 = v485;
    v512 = v482;
    v511 = v481;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224675440;
    v507 = (__int128)xmmword_224675450;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 0, 3, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9800000058), xmmword_224675450);
    if (!v232)
    {
      v508 = v483;
      v509 = v484;
      v510 = v485;
      v507 = v482;
      v506 = v481;
      *(_QWORD *)&v561 = 0x4040D0D04040D0DLL;
      v566 = xmmword_224675460;
      v567 = (__int128)xmmword_224675470;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 0, 3, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9800000058), xmmword_224675470);
      v276 = (v233 | v273 & 1) == 0;
      if (!(v234 | v274 & 1))
      {
        v568 = v483;
        v569 = v484;
        v570 = v485;
        v566 = v481;
        v567 = v482;
        *(_QWORD *)&v556 = 0x40404040D0D0D0DLL;
        v561 = xmmword_224675480;
        v562 = (__int128)xmmword_224675490;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 0, 3, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9800000058), xmmword_224675490);
        v277 = (v425 & 1) == 0 && v276;
        if (!v235 && v277)
        {
          v563 = v483;
          v564 = v484;
          v565 = v485;
          v562 = v482;
          v561 = v481;
          *(_QWORD *)&v551 = 0x4040D0D04040D0DLL;
          v556 = xmmword_2246754A0;
          v557 = (__int128)xmmword_2246754B0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 0, 3, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1800000058), xmmword_2246754B0);
        }
      }
      if (v231)
        v278 = 0;
      else
        v278 = v276;
      if (v278 && (v229 & 0x40000000) == 0)
      {
        v558 = v483;
        v559 = v484;
        v560 = v485;
        *(_QWORD *)&v546 = 0x40404040D0D0D0DLL;
        v557 = v482;
        v556 = v481;
        v551 = xmmword_2246754C0;
        v552 = (__int128)xmmword_2246754D0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 0, 3, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1800000058), xmmword_2246754D0);
      }
    }
    if (((v274 | v457) & 1) == 0)
    {
      v553 = v483;
      v554 = v484;
      v555 = v485;
      v552 = v482;
      v551 = v481;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_2246754E0;
      v547 = (__int128)xmmword_2246754F0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 0, 3, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9800000058), xmmword_2246754F0);
      v279 = (v432 & 1) == 0 && ((v273 | v452) & 1) == 0;
      if ((v425 & 1) == 0 && v279)
      {
        v548 = v483;
        v549 = v484;
        v550 = v485;
        v547 = v482;
        v546 = v481;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224675500;
        v542 = (__int128)xmmword_224675510;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 0, 3, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1800000058), xmmword_224675510);
      }
    }
    v280 = (v229 & 0x40000000) == 0 && ((v273 | v452) & 1) == 0;
    if (v280 && (v444 & 1) == 0)
    {
      v543 = v483;
      v544 = v484;
      v545 = v485;
      v542 = v482;
      v541 = v481;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224675520;
      v537 = xmmword_224675530;
      *(_QWORD *)&v526 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 0, 3, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0x1800000058), xmmword_224675530);
    }
  }
  v493 = v518;
  v494 = v519;
  v495 = v520;
  v491 = v516;
  v492 = v517;
  v281 = *((_DWORD *)v224 + 18);
  if (**v472)
  {
    v282 = *((_DWORD *)v224 + 82);
    v283 = *((_DWORD *)v224 + 26);
    v284 = *((_DWORD *)v224 + 90);
    v285 = *((_DWORD *)v224 + 34);
  }
  else
  {
    if ((v281 & 0x10000000) != 0)
      v286 = 0x40000000;
    else
      v286 = 0x80000000;
    if ((v281 & 0x20000000) != 0)
      v281 = v286;
    else
      v281 &= 0xCFFFFFFF;
    v287 = *((_DWORD *)v224 + 82);
    if ((v287 & 0x10000000) != 0)
      v288 = 0x40000000;
    else
      v288 = 0x80000000;
    if ((v287 & 0x20000000) != 0)
      v282 = v288;
    else
      v282 = v287 & 0xCFFFFFFF;
    v289 = *((_DWORD *)v224 + 26);
    if ((v289 & 0x10000000) != 0)
      v290 = 0x40000000;
    else
      v290 = 0x80000000;
    if ((v289 & 0x20000000) != 0)
      v283 = v290;
    else
      v283 = v289 & 0xCFFFFFFF;
    v291 = *((_DWORD *)v224 + 90);
    if ((v291 & 0x10000000) != 0)
      v292 = 0x40000000;
    else
      v292 = 0x80000000;
    if ((v291 & 0x20000000) != 0)
      v284 = v292;
    else
      v284 = v291 & 0xCFFFFFFF;
    v293 = *((_DWORD *)v224 + 34);
    if ((v293 & 0x10000000) != 0)
      v285 = 0x40000000;
    else
      v285 = 0x80000000;
    if ((v293 & 0x20000000) == 0)
      v285 = v293 & 0xCFFFFFFF;
  }
  v294 = v283 >> 30;
  v429 = v281 >> 30;
  v448 = v282 >> 30;
  v440 = v285 >> 30;
  v503 = v518;
  v504 = v519;
  v505 = v520;
  v501 = v516;
  v502 = v517;
  if ((v462 & 0x40000000) != 0)
  {
    v513 = v518;
    v514 = v519;
    v515 = v520;
    v512 = v517;
    v511 = v516;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224675540;
    v507 = (__int128)xmmword_224675550;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 1, 3, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9900000059), xmmword_224675550);
    if ((v466 & 0x40000000) == 0)
    {
      v508 = v518;
      v509 = v519;
      v510 = v520;
      v507 = v517;
      v506 = v516;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224675560;
      v567 = (__int128)xmmword_224675570;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 1, 3, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9900000059), xmmword_224675570);
      if (((v274 | v457) & 1) == 0)
      {
        v568 = v518;
        v569 = v519;
        v570 = v520;
        v566 = v516;
        v567 = v517;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224675580;
        v562 = (__int128)xmmword_224675590;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 1, 3, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9900000059), xmmword_224675590);
        v295 = (v432 & 1) == 0 && ((v273 | v452) & 1) == 0;
        if ((v425 & 1) == 0 && v295)
        {
          v563 = v518;
          v564 = v519;
          v565 = v520;
          v562 = v517;
          v561 = v516;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_2246755A0;
          v557 = (__int128)xmmword_2246755B0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 1, 3, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1900000059), xmmword_2246755B0);
        }
      }
      v296 = (v275 & 1) == 0 && ((v273 | v452) & 1) == 0;
      if (v296 && (v444 & 1) == 0)
      {
        v558 = v503;
        v559 = v504;
        v560 = v505;
        v557 = v502;
        v556 = v501;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_2246755C0;
        v552 = (__int128)xmmword_2246755D0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 1, 3, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1900000059), xmmword_2246755D0);
      }
    }
    if (((v457 | v448) & 1) == 0)
    {
      v553 = v503;
      v554 = v504;
      v555 = v505;
      v552 = v502;
      v551 = v501;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_2246755E0;
      v547 = (__int128)xmmword_2246755F0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 1, 3, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9900000059), xmmword_2246755F0);
      v297 = (v429 & 1) == 0 && ((v452 | v294) & 1) == 0;
      if ((v432 & 1) == 0 && v297)
      {
        v548 = v503;
        v549 = v504;
        v550 = v505;
        v547 = v502;
        v546 = v501;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224675600;
        v542 = (__int128)xmmword_224675610;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 1, 3, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1900000059), xmmword_224675610);
      }
    }
    v298 = (v444 & 1) == 0 && ((v452 | v294) & 1) == 0;
    if (v298 && (v440 & 1) == 0)
    {
      v543 = v503;
      v544 = v504;
      v545 = v505;
      v542 = v502;
      v541 = v501;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224675620;
      v537 = xmmword_224675630;
      *(_QWORD *)&v526 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 1, 3, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0x1900000059), xmmword_224675630);
    }
  }
  v299 = *((_DWORD *)v224 + 19);
  if (**v472)
  {
    v300 = *((_DWORD *)v224 + 83);
    v301 = *((_DWORD *)v224 + 27);
    v302 = *((_DWORD *)v224 + 91);
    v303 = *((_DWORD *)v224 + 35);
  }
  else
  {
    if ((v299 & 0x10000000) != 0)
      v304 = 0x40000000;
    else
      v304 = 0x80000000;
    if ((v299 & 0x20000000) != 0)
      v299 = v304;
    else
      v299 &= 0xCFFFFFFF;
    v305 = *((_DWORD *)v224 + 83);
    if ((v305 & 0x10000000) != 0)
      v306 = 0x40000000;
    else
      v306 = 0x80000000;
    if ((v305 & 0x20000000) != 0)
      v300 = v306;
    else
      v300 = v305 & 0xCFFFFFFF;
    v307 = *((_DWORD *)v224 + 27);
    if ((v307 & 0x10000000) != 0)
      v308 = 0x40000000;
    else
      v308 = 0x80000000;
    if ((v307 & 0x20000000) != 0)
      v301 = v308;
    else
      v301 = v307 & 0xCFFFFFFF;
    v309 = *((_DWORD *)v224 + 91);
    if ((v309 & 0x10000000) != 0)
      v310 = 0x40000000;
    else
      v310 = 0x80000000;
    if ((v309 & 0x20000000) != 0)
      v302 = v310;
    else
      v302 = v309 & 0xCFFFFFFF;
    v311 = *((_DWORD *)v224 + 35);
    if ((v311 & 0x10000000) != 0)
      v303 = 0x40000000;
    else
      v303 = 0x80000000;
    if ((v311 & 0x20000000) == 0)
      v303 = v311 & 0xCFFFFFFF;
  }
  v312 = v301 >> 30;
  v426 = v299 >> 30;
  v467 = v300 >> 30;
  v313 = v303 >> 30;
  if ((v284 & 0x40000000) != 0)
  {
    v513 = v493;
    v514 = v494;
    v515 = v495;
    v512 = v492;
    v511 = v491;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224675640;
    v507 = (__int128)xmmword_224675650;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 2, 3, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9A0000005ALL), xmmword_224675650);
    if ((v462 & 0x40000000) == 0)
    {
      v508 = v493;
      v509 = v494;
      v510 = v495;
      v507 = v492;
      v506 = v491;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224675660;
      v567 = (__int128)xmmword_224675670;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 2, 3, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9A0000005ALL), xmmword_224675670);
      if (((v457 | v448) & 1) == 0)
      {
        v568 = v493;
        v569 = v494;
        v570 = v495;
        v566 = v491;
        v567 = v492;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224675680;
        v562 = (__int128)xmmword_224675690;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 2, 3, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9A0000005ALL), xmmword_224675690);
        v314 = (v429 & 1) == 0 && ((v452 | v294) & 1) == 0;
        if ((v432 & 1) == 0 && v314)
        {
          v563 = v493;
          v564 = v494;
          v565 = v495;
          v562 = v492;
          v561 = v491;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_2246756A0;
          v557 = (__int128)xmmword_2246756B0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 2, 3, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1A0000005ALL), xmmword_2246756B0);
        }
      }
      v315 = (v444 & 1) == 0 && ((v452 | v294) & 1) == 0;
      if (v315 && (v440 & 1) == 0)
      {
        v558 = v493;
        v559 = v494;
        v560 = v495;
        v557 = v492;
        v556 = v491;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_2246756C0;
        v552 = (__int128)xmmword_2246756D0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 2, 3, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1A0000005ALL), xmmword_2246756D0);
      }
    }
    if (((v448 | v467) & 1) == 0)
    {
      v553 = v493;
      v554 = v494;
      v555 = v495;
      v552 = v492;
      v551 = v491;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_2246756E0;
      v547 = (__int128)xmmword_2246756F0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 2, 3, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9A0000005ALL), xmmword_2246756F0);
      v316 = (v426 & 1) == 0 && ((v294 | v312) & 1) == 0;
      if ((v429 & 1) == 0 && v316)
      {
        v548 = v493;
        v549 = v494;
        v550 = v495;
        v547 = v492;
        v546 = v491;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224675700;
        v542 = (__int128)xmmword_224675710;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 2, 3, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1A0000005ALL), xmmword_224675710);
      }
    }
    v317 = (v440 & 1) == 0 && ((v294 | v312) & 1) == 0;
    if (v317 && (v313 & 1) == 0)
    {
      v543 = v493;
      v544 = v494;
      v545 = v495;
      v542 = v492;
      v541 = v491;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224675720;
      v537 = xmmword_224675730;
      *(_QWORD *)&v526 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 2, 3, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0x1A0000005ALL), xmmword_224675730);
    }
  }
  v318 = *((_DWORD *)v224 + 20);
  if (**v472)
  {
    v319 = *((_DWORD *)v224 + 84);
    v320 = *((_DWORD *)v224 + 28);
    v321 = *((_DWORD *)v224 + 92);
    v322 = *((_DWORD *)v224 + 36);
  }
  else
  {
    if ((v318 & 0x10000000) != 0)
      v323 = 0x40000000;
    else
      v323 = 0x80000000;
    if ((v318 & 0x20000000) != 0)
      v318 = v323;
    else
      v318 &= 0xCFFFFFFF;
    v324 = *((_DWORD *)v224 + 84);
    if ((v324 & 0x10000000) != 0)
      v325 = 0x40000000;
    else
      v325 = 0x80000000;
    if ((v324 & 0x20000000) != 0)
      v319 = v325;
    else
      v319 = v324 & 0xCFFFFFFF;
    v326 = *((_DWORD *)v224 + 28);
    if ((v326 & 0x10000000) != 0)
      v327 = 0x40000000;
    else
      v327 = 0x80000000;
    if ((v326 & 0x20000000) != 0)
      v320 = v327;
    else
      v320 = v326 & 0xCFFFFFFF;
    v328 = *((_DWORD *)v224 + 92);
    if ((v328 & 0x10000000) != 0)
      v329 = 0x40000000;
    else
      v329 = 0x80000000;
    if ((v328 & 0x20000000) != 0)
      v321 = v329;
    else
      v321 = v328 & 0xCFFFFFFF;
    v330 = *((_DWORD *)v224 + 36);
    if ((v330 & 0x10000000) != 0)
      v322 = 0x40000000;
    else
      v322 = 0x80000000;
    if ((v330 & 0x20000000) == 0)
      v322 = v330 & 0xCFFFFFFF;
  }
  v433 = v318 >> 30;
  v458 = v320 >> 30;
  v463 = v319 >> 30;
  v445 = v322 >> 30;
  if ((v302 & 0x40000000) != 0)
  {
    v513 = v493;
    v514 = v494;
    v515 = v495;
    v512 = v492;
    v511 = v491;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224675740;
    v507 = (__int128)xmmword_224675750;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 3, 3, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9B0000005BLL), xmmword_224675750);
    if ((v284 & 0x40000000) == 0)
    {
      v508 = v493;
      v509 = v494;
      v510 = v495;
      v507 = v492;
      v506 = v491;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224675760;
      v567 = (__int128)xmmword_224675770;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 3, 3, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9B0000005BLL), xmmword_224675770);
      v331 = ((v294 | v312) & 1) == 0;
      if (((v448 | v467) & 1) == 0)
      {
        v568 = v493;
        v569 = v494;
        v570 = v495;
        v566 = v491;
        v567 = v492;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224675780;
        v562 = (__int128)xmmword_224675790;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 3, 3, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9B0000005BLL), xmmword_224675790);
        v332 = (v426 & 1) == 0 && v331;
        if ((v429 & 1) == 0 && v332)
        {
          v563 = v493;
          v564 = v494;
          v565 = v495;
          v562 = v492;
          v561 = v491;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_2246757A0;
          v557 = (__int128)xmmword_2246757B0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 3, 3, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1B0000005BLL), xmmword_2246757B0);
        }
      }
      v333 = (v440 & 1) == 0 && v331;
      if (v333 && (v313 & 1) == 0)
      {
        v558 = v493;
        v559 = v494;
        v560 = v495;
        v557 = v492;
        v556 = v491;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_2246757C0;
        v552 = (__int128)xmmword_2246757D0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 3, 3, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1B0000005BLL), xmmword_2246757D0);
      }
    }
    if (((v467 | v463) & 1) == 0)
    {
      v553 = v493;
      v554 = v494;
      v555 = v495;
      v552 = v492;
      v551 = v491;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_2246757E0;
      v547 = (__int128)xmmword_2246757F0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 3, 3, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9B0000005BLL), xmmword_2246757F0);
      v334 = (v433 & 1) == 0 && ((v312 | v458) & 1) == 0;
      if ((v426 & 1) == 0 && v334)
      {
        v548 = v493;
        v549 = v494;
        v550 = v495;
        v547 = v492;
        v546 = v491;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224675800;
        v542 = (__int128)xmmword_224675810;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 3, 3, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1B0000005BLL), xmmword_224675810);
      }
    }
    v335 = (v313 & 1) == 0 && ((v312 | v458) & 1) == 0;
    if (v335 && (v445 & 1) == 0)
    {
      v543 = v493;
      v544 = v494;
      v545 = v495;
      v542 = v492;
      v541 = v491;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224675820;
      v537 = xmmword_224675830;
      *(_QWORD *)&v526 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 3, 3, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0x1B0000005BLL), xmmword_224675830);
    }
  }
  v336 = *((_DWORD *)v224 + 21);
  if (**v472)
  {
    v337 = *((_DWORD *)v224 + 85);
    v338 = *((_DWORD *)v224 + 29);
    v339 = *((_DWORD *)v224 + 93);
    v340 = *((_DWORD *)v224 + 37);
  }
  else
  {
    if ((v336 & 0x10000000) != 0)
      v341 = 0x40000000;
    else
      v341 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v336 = v341;
    else
      v336 &= 0xCFFFFFFF;
    v342 = *((_DWORD *)v224 + 85);
    if ((v342 & 0x10000000) != 0)
      v343 = 0x40000000;
    else
      v343 = 0x80000000;
    if ((v342 & 0x20000000) != 0)
      v337 = v343;
    else
      v337 = v342 & 0xCFFFFFFF;
    v344 = *((_DWORD *)v224 + 29);
    if ((v344 & 0x10000000) != 0)
      v345 = 0x40000000;
    else
      v345 = 0x80000000;
    if ((v344 & 0x20000000) != 0)
      v338 = v345;
    else
      v338 = v344 & 0xCFFFFFFF;
    v346 = *((_DWORD *)v224 + 93);
    if ((v346 & 0x10000000) != 0)
      v347 = 0x40000000;
    else
      v347 = 0x80000000;
    if ((v346 & 0x20000000) != 0)
      v339 = v347;
    else
      v339 = v346 & 0xCFFFFFFF;
    v348 = *((_DWORD *)v224 + 37);
    if ((v348 & 0x10000000) != 0)
      v340 = 0x40000000;
    else
      v340 = 0x80000000;
    if ((v348 & 0x20000000) == 0)
      v340 = v348 & 0xCFFFFFFF;
  }
  v349 = v338 >> 30;
  v441 = v336 >> 30;
  v350 = v337 >> 30;
  v449 = v340 >> 30;
  if ((v321 & 0x40000000) != 0)
  {
    v513 = v493;
    v514 = v494;
    v515 = v495;
    v512 = v492;
    v511 = v491;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224675840;
    v507 = (__int128)xmmword_224675850;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 4, 3, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9C0000005CLL), xmmword_224675850);
    if ((v302 & 0x40000000) == 0)
    {
      v508 = v493;
      v509 = v494;
      v510 = v495;
      v507 = v492;
      v506 = v491;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224675860;
      v567 = (__int128)xmmword_224675870;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 4, 3, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9C0000005CLL), xmmword_224675870);
      if (((v467 | v463) & 1) == 0)
      {
        v568 = v493;
        v569 = v494;
        v570 = v495;
        v566 = v491;
        v567 = v492;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224675880;
        v562 = (__int128)xmmword_224675890;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 4, 3, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9C0000005CLL), xmmword_224675890);
        v351 = (v433 & 1) == 0 && ((v312 | v458) & 1) == 0;
        if ((v426 & 1) == 0 && v351)
        {
          v563 = v493;
          v564 = v494;
          v565 = v495;
          v562 = v492;
          v561 = v491;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_2246758A0;
          v557 = (__int128)xmmword_2246758B0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 4, 3, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1C0000005CLL), xmmword_2246758B0);
        }
      }
      v352 = (v313 & 1) == 0 && ((v312 | v458) & 1) == 0;
      if (v352 && (v445 & 1) == 0)
      {
        v558 = v493;
        v559 = v494;
        v560 = v495;
        v557 = v492;
        v556 = v491;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_2246758C0;
        v552 = (__int128)xmmword_2246758D0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 4, 3, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1C0000005CLL), xmmword_2246758D0);
      }
    }
    if (((v463 | v350) & 1) == 0)
    {
      v553 = v493;
      v554 = v494;
      v555 = v495;
      v552 = v492;
      v551 = v491;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_2246758E0;
      v547 = (__int128)xmmword_2246758F0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 4, 3, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9C0000005CLL), xmmword_2246758F0);
      v353 = (v441 & 1) == 0 && ((v458 | v349) & 1) == 0;
      if ((v433 & 1) == 0 && v353)
      {
        v548 = v493;
        v549 = v494;
        v550 = v495;
        v547 = v492;
        v546 = v491;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224675900;
        v542 = (__int128)xmmword_224675910;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 4, 3, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1C0000005CLL), xmmword_224675910);
      }
    }
    v354 = (v445 & 1) == 0 && ((v458 | v349) & 1) == 0;
    if (v354 && (v449 & 1) == 0)
    {
      v543 = v493;
      v544 = v494;
      v545 = v495;
      v542 = v492;
      v541 = v491;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224675920;
      v537 = xmmword_224675930;
      *(_QWORD *)&v526 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 4, 3, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0x1C0000005CLL), xmmword_224675930);
    }
  }
  v355 = *((_DWORD *)v224 + 22);
  if (**v472)
  {
    v356 = *((_DWORD *)v224 + 86);
    v357 = *((_DWORD *)v224 + 30);
    v358 = *((_DWORD *)v224 + 94);
    v359 = *((_DWORD *)v224 + 38);
  }
  else
  {
    if ((v355 & 0x10000000) != 0)
      v360 = 0x40000000;
    else
      v360 = 0x80000000;
    if ((v355 & 0x20000000) != 0)
      v355 = v360;
    else
      v355 &= 0xCFFFFFFF;
    v361 = *((_DWORD *)v224 + 86);
    if ((v361 & 0x10000000) != 0)
      v362 = 0x40000000;
    else
      v362 = 0x80000000;
    if ((v361 & 0x20000000) != 0)
      v356 = v362;
    else
      v356 = v361 & 0xCFFFFFFF;
    v363 = *((_DWORD *)v224 + 30);
    if ((v363 & 0x10000000) != 0)
      v364 = 0x40000000;
    else
      v364 = 0x80000000;
    if ((v363 & 0x20000000) != 0)
      v357 = v364;
    else
      v357 = v363 & 0xCFFFFFFF;
    v365 = *((_DWORD *)v224 + 94);
    if ((v365 & 0x10000000) != 0)
      v366 = 0x40000000;
    else
      v366 = 0x80000000;
    if ((v365 & 0x20000000) != 0)
      v358 = v366;
    else
      v358 = v365 & 0xCFFFFFFF;
    v367 = *((_DWORD *)v224 + 38);
    if ((v367 & 0x10000000) != 0)
      v359 = 0x40000000;
    else
      v359 = 0x80000000;
    if ((v367 & 0x20000000) == 0)
      v359 = v367 & 0xCFFFFFFF;
  }
  v453 = v357 >> 30;
  v430 = v355 >> 30;
  v468 = v356 >> 30;
  v368 = v359 >> 30;
  v528 = v493;
  v529 = v494;
  v530 = v495;
  v527 = v492;
  v526 = v491;
  if ((v339 & 0x40000000) != 0)
  {
    v513 = v493;
    v514 = v494;
    v515 = v495;
    v512 = v492;
    v511 = v491;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224675940;
    v507 = (__int128)xmmword_224675950;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 5, 3, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9D0000005DLL), xmmword_224675950);
    if ((v321 & 0x40000000) == 0)
    {
      v508 = v493;
      v509 = v494;
      v510 = v495;
      v507 = v492;
      v506 = v491;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224675960;
      v567 = (__int128)xmmword_224675970;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 5, 3, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9D0000005DLL), xmmword_224675970);
      if (((v463 | v350) & 1) == 0)
      {
        v568 = v493;
        v569 = v494;
        v570 = v495;
        v566 = v491;
        v567 = v492;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224675980;
        v562 = (__int128)xmmword_224675990;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 5, 3, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9D0000005DLL), xmmword_224675990);
        v369 = (v441 & 1) == 0 && ((v458 | v349) & 1) == 0;
        if ((v433 & 1) == 0 && v369)
        {
          v563 = v493;
          v564 = v494;
          v565 = v495;
          v562 = v492;
          v561 = v491;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_2246759A0;
          v557 = (__int128)xmmword_2246759B0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 5, 3, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1D0000005DLL), xmmword_2246759B0);
        }
      }
      v370 = (v445 & 1) == 0 && ((v458 | v349) & 1) == 0;
      if (v370 && (v449 & 1) == 0)
      {
        v558 = v528;
        v559 = v529;
        v560 = v530;
        v557 = v527;
        v556 = v526;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_2246759C0;
        v552 = (__int128)xmmword_2246759D0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 5, 3, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1D0000005DLL), xmmword_2246759D0);
      }
    }
    if (((v350 | v468) & 1) == 0)
    {
      v553 = v528;
      v554 = v529;
      v555 = v530;
      v552 = v527;
      v551 = v526;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_2246759E0;
      v547 = (__int128)xmmword_2246759F0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 5, 3, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9D0000005DLL), xmmword_2246759F0);
      v371 = (v430 & 1) == 0 && ((v349 | v453) & 1) == 0;
      if ((v441 & 1) == 0 && v371)
      {
        v548 = v528;
        v549 = v529;
        v550 = v530;
        v547 = v527;
        v546 = v526;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224675A00;
        v542 = (__int128)xmmword_224675A10;
        *(_QWORD *)&v531 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 5, 3, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x1D0000005DLL), xmmword_224675A10);
      }
    }
    v372 = (v449 & 1) == 0 && ((v349 | v453) & 1) == 0;
    if (v372 && (v368 & 1) == 0)
    {
      v543 = v528;
      v544 = v529;
      v545 = v530;
      v542 = v527;
      v541 = v526;
      *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224675A20;
      v537 = xmmword_224675A30;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 5, 3, 1, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v521, COERCE_DOUBLE(0x1D0000005DLL), xmmword_224675A30);
    }
  }
  v523 = v493;
  v524 = v494;
  v525 = v495;
  v522 = v492;
  v521 = v491;
  v373 = *((_DWORD *)v224 + 23);
  if (**v472)
  {
    v374 = *((_DWORD *)v224 + 87);
    v375 = *((_DWORD *)v224 + 31);
    v376 = *((_DWORD *)v224 + 95);
    v377 = *((_DWORD *)v224 + 39);
  }
  else
  {
    if ((v373 & 0x10000000) != 0)
      v378 = 0x40000000;
    else
      v378 = 0x80000000;
    if ((v373 & 0x20000000) != 0)
      v373 = v378;
    else
      v373 &= 0xCFFFFFFF;
    v379 = *((_DWORD *)v224 + 87);
    if ((v379 & 0x10000000) != 0)
      v380 = 0x40000000;
    else
      v380 = 0x80000000;
    if ((v379 & 0x20000000) != 0)
      v374 = v380;
    else
      v374 = v379 & 0xCFFFFFFF;
    v381 = *((_DWORD *)v224 + 31);
    if ((v381 & 0x10000000) != 0)
      v382 = 0x40000000;
    else
      v382 = 0x80000000;
    if ((v381 & 0x20000000) != 0)
      v375 = v382;
    else
      v375 = v381 & 0xCFFFFFFF;
    v383 = *((_DWORD *)v224 + 95);
    if ((v383 & 0x10000000) != 0)
      v384 = 0x40000000;
    else
      v384 = 0x80000000;
    if ((v383 & 0x20000000) != 0)
      v376 = v384;
    else
      v376 = v383 & 0xCFFFFFFF;
    v385 = *((_DWORD *)v224 + 39);
    if ((v385 & 0x10000000) != 0)
      v377 = 0x40000000;
    else
      v377 = 0x80000000;
    if ((v385 & 0x20000000) == 0)
      v377 = v385 & 0xCFFFFFFF;
  }
  v386 = v375 >> 30;
  v464 = v373 >> 30;
  v387 = v374 >> 30;
  v473 = v377 >> 30;
  v533 = v493;
  v534 = v494;
  v535 = v495;
  v532 = v492;
  v531 = v491;
  if ((v358 & 0x40000000) != 0)
  {
    v513 = v493;
    v514 = v494;
    v515 = v495;
    v512 = v492;
    v511 = v491;
    *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
    v506 = xmmword_224675A40;
    v507 = (__int128)xmmword_224675A50;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 6, 3, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9E0000005ELL), xmmword_224675A50);
    if ((v339 & 0x40000000) == 0)
    {
      v508 = v493;
      v509 = v494;
      v510 = v495;
      v507 = v492;
      v506 = v491;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224675A60;
      v567 = (__int128)xmmword_224675A70;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 6, 3, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9E0000005ELL), xmmword_224675A70);
      if (((v350 | v468) & 1) == 0)
      {
        v568 = v493;
        v569 = v494;
        v570 = v495;
        v566 = v491;
        v567 = v492;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224675A80;
        v562 = (__int128)xmmword_224675A90;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 6, 3, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9E0000005ELL), xmmword_224675A90);
        v388 = (v430 & 1) == 0 && ((v349 | v453) & 1) == 0;
        if ((v441 & 1) == 0 && v388)
        {
          v563 = v493;
          v564 = v494;
          v565 = v495;
          v562 = v492;
          v561 = v491;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_224675AA0;
          v557 = (__int128)xmmword_224675AB0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 6, 3, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1E0000005ELL), xmmword_224675AB0);
        }
      }
      v389 = (v449 & 1) == 0 && ((v349 | v453) & 1) == 0;
      if (v389 && (v368 & 1) == 0)
      {
        v558 = v533;
        v559 = v534;
        v560 = v535;
        v557 = v532;
        v556 = v531;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v551 = xmmword_224675AC0;
        v552 = (__int128)xmmword_224675AD0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 6, 3, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1E0000005ELL), xmmword_224675AD0);
      }
    }
    if (((v468 | v387) & 1) == 0)
    {
      v553 = v533;
      v554 = v534;
      v555 = v535;
      v552 = v532;
      v551 = v531;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v546 = xmmword_224675AE0;
      v547 = (__int128)xmmword_224675AF0;
      *(_QWORD *)&v536 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 6, 3, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0x9E0000005ELL), xmmword_224675AF0);
      v390 = (v464 & 1) == 0 && ((v453 | v386) & 1) == 0;
      if ((v430 & 1) == 0 && v390)
      {
        v548 = v533;
        v549 = v534;
        v550 = v535;
        v547 = v532;
        v546 = v531;
        *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
        v541 = xmmword_224675B00;
        v542 = (__int128)xmmword_224675B10;
        *(_QWORD *)&v572[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 6, 3, 1, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)v572, COERCE_DOUBLE(0x1E0000005ELL), xmmword_224675B10);
      }
    }
    v391 = (v368 & 1) == 0 && ((v453 | v386) & 1) == 0;
    if (v391 && (v473 & 1) == 0)
    {
      v543 = v533;
      v544 = v534;
      v545 = v535;
      v542 = v532;
      v541 = v531;
      *(_QWORD *)&v572[0] = 0xD0D0D0D0D0D0D0DLL;
      v536 = xmmword_224675B20;
      v537 = xmmword_224675B30;
      v573[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 6, 3, 1, (uint64_t)v572, (uint64_t)&v536, (uint64_t)v573, COERCE_DOUBLE(0x1E0000005ELL), xmmword_224675B30);
    }
  }
  v392 = *(unsigned int *)(v476 + 88);
  if ((v392 & 0x80000000) != 0)
  {
    v395 = *v470;
    v396 = *(_DWORD *)(v480 + 344);
    v397 = **v470;
    if (**v470)
      goto LABEL_1060;
  }
  else
  {
    v393 = *(_QWORD *)(v480 + 2328);
    if (v392 >= (*(_QWORD *)(v480 + 2336) - v393) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v393 = *(_QWORD *)(v480 + 2328);
    }
    v394 = v393 + (v392 << 11);
    v395 = *v470;
    v396 = *(_DWORD *)(v394 + 64);
    v397 = **v470;
    if (**v470)
    {
LABEL_1060:
      v398 = *(unsigned int *)(v476 + 88);
      if ((v398 & 0x80000000) == 0)
        goto LABEL_1061;
LABEL_1080:
      v400 = *(_DWORD *)(v480 + 600);
      if (v397)
        goto LABEL_1065;
      goto LABEL_1081;
    }
  }
  if ((v396 & 0x10000000) != 0)
    v405 = 0x40000000;
  else
    v405 = 0x80000000;
  if ((v396 & 0x20000000) != 0)
    v396 = v405;
  else
    v396 &= 0xCFFFFFFF;
  v398 = *(unsigned int *)(v476 + 88);
  if ((v398 & 0x80000000) != 0)
    goto LABEL_1080;
LABEL_1061:
  v399 = *(_QWORD *)(v480 + 2328);
  if (v398 >= (*(_QWORD *)(v480 + 2336) - v399) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v399 = *(_QWORD *)(v480 + 2328);
    v395 = *v470;
    v397 = **v470;
  }
  v400 = *(_DWORD *)(v399 + (v398 << 11) + 320);
  if (v397)
  {
LABEL_1065:
    v401 = *(unsigned int *)(v476 + 88);
    if ((v401 & 0x80000000) == 0)
      goto LABEL_1066;
LABEL_1088:
    v403 = *(_DWORD *)(v480 + 376);
    if (v397)
      goto LABEL_1070;
    goto LABEL_1089;
  }
LABEL_1081:
  if ((v400 & 0x10000000) != 0)
    v406 = 0x40000000;
  else
    v406 = 0x80000000;
  if ((v400 & 0x20000000) != 0)
    v400 = v406;
  else
    v400 &= 0xCFFFFFFF;
  v401 = *(unsigned int *)(v476 + 88);
  if ((v401 & 0x80000000) != 0)
    goto LABEL_1088;
LABEL_1066:
  v402 = *(_QWORD *)(v480 + 2328);
  if (v401 >= (*(_QWORD *)(v480 + 2336) - v402) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v402 = *(_QWORD *)(v480 + 2328);
    v395 = *v470;
    v397 = **v470;
  }
  v403 = *(_DWORD *)(v402 + (v401 << 11) + 96);
  if (v397)
  {
LABEL_1070:
    v404 = *(unsigned int *)(v476 + 88);
    if ((v404 & 0x80000000) != 0)
      goto LABEL_1139;
    goto LABEL_1096;
  }
LABEL_1089:
  if ((v403 & 0x10000000) != 0)
    v407 = 0x40000000;
  else
    v407 = 0x80000000;
  if ((v403 & 0x20000000) != 0)
    v403 = v407;
  else
    v403 &= 0xCFFFFFFF;
  v404 = *(unsigned int *)(v476 + 88);
  if ((v404 & 0x80000000) != 0)
    goto LABEL_1139;
LABEL_1096:
  v408 = *(_QWORD *)(v480 + 2328);
  v409 = (*(_QWORD *)(v480 + 2336) - v408) >> 11;
  if (v409 > v404)
    goto LABEL_1100;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v395 = *v470;
  v404 = *(unsigned int *)(v476 + 88);
  if ((v404 & 0x80000000) != 0)
  {
LABEL_1139:
    v410 = *(_DWORD *)(v480 + 408);
    if (*v395)
      goto LABEL_1110;
    goto LABEL_1104;
  }
  v408 = *(_QWORD *)(v480 + 2328);
  v409 = (*(_QWORD *)(v480 + 2336) - v408) >> 11;
LABEL_1100:
  if (v409 <= v404)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v408 = *(_QWORD *)(v480 + 2328);
    v395 = *v470;
  }
  v410 = *(_DWORD *)(v408 + (v404 << 11) + 128);
  if (!*v395)
  {
LABEL_1104:
    if ((v410 & 0x10000000) != 0)
      v411 = 0x40000000;
    else
      v411 = 0x80000000;
    if ((v410 & 0x20000000) != 0)
      v410 = v411;
    else
      v410 &= 0xCFFFFFFF;
  }
LABEL_1110:
  v538 = v523;
  v539 = v524;
  v540 = v525;
  v537 = (float32x4_t)v522;
  v536 = v521;
  if ((v376 & 0x40000000) != 0)
  {
    v513 = v523;
    v514 = v524;
    v515 = v525;
    v512 = v522;
    v511 = v521;
    *(_QWORD *)&v566 = 0x161616160D0D0D0DLL;
    v506 = xmmword_224675B40;
    v507 = (__int128)xmmword_224675B50;
    *(_QWORD *)&v561 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v511, 7, 3, 1, (uint64_t)&v566, (uint64_t)&v506, (uint64_t)&v561, COERCE_DOUBLE(0x9F0000005FLL), xmmword_224675B50);
    if ((v358 & 0x40000000) == 0)
    {
      v508 = v523;
      v509 = v524;
      v510 = v525;
      v507 = v522;
      v506 = v521;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224675B60;
      v567 = (__int128)xmmword_224675B70;
      *(_QWORD *)&v556 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v506, 7, 3, 1, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x9F0000005FLL), xmmword_224675B70);
      if (((v468 | v387) & 1) == 0)
      {
        v568 = v523;
        v569 = v524;
        v570 = v525;
        v566 = v521;
        v567 = v522;
        *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
        v561 = xmmword_224675B80;
        v562 = (__int128)xmmword_224675B90;
        *(_QWORD *)&v551 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v566, 7, 3, 1, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x9F0000005FLL), xmmword_224675B90);
        v412 = (v464 & 1) == 0 && ((v453 | v386) & 1) == 0;
        if ((v430 & 1) == 0 && v412)
        {
          v563 = v523;
          v564 = v524;
          v565 = v525;
          v562 = v522;
          v561 = v521;
          *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
          v556 = xmmword_224675BA0;
          v557 = (__int128)xmmword_224675BB0;
          *(_QWORD *)&v546 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v561, 7, 3, 1, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x1F0000005FLL), xmmword_224675BB0);
        }
      }
      v413 = (v368 & 1) == 0 && ((v453 | v386) & 1) == 0;
      if (v413 && (v473 & 1) == 0)
      {
        v558 = v538;
        v559 = v539;
        v560 = v540;
        *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
        v557 = (__int128)v537;
        v556 = v536;
        v551 = xmmword_224675BC0;
        v552 = (__int128)xmmword_224675BD0;
        *(_QWORD *)&v541 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v556, 7, 3, 1, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0x1F0000005FLL), xmmword_224675BD0);
      }
    }
    v414 = (v403 & 0x40000000 | v386 & 1) == 0;
    if (!(v400 & 0x40000000 | v387 & 1))
    {
      v553 = v538;
      v554 = v539;
      v555 = v540;
      *(_QWORD *)&v541 = 0x16160D0D16160D0DLL;
      v552 = (__int128)v537;
      v551 = v536;
      v546 = xmmword_224675BE0;
      v547 = (__int128)xmmword_224675BF0;
      *(_QWORD *)&v572[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v551, 7, 3, 1, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)v572, COERCE_DOUBLE(0x9F0000005FLL), xmmword_224675BF0);
      v415 = (v396 & 0x40000000) == 0 && v414;
      if ((v464 & 1) == 0 && v415)
      {
        v548 = v538;
        v549 = v539;
        v550 = v540;
        *(_QWORD *)&v572[0] = 0x161616160D0D0D0DLL;
        v547 = (__int128)v537;
        v546 = v536;
        v541 = xmmword_224675C00;
        v542 = (__int128)xmmword_224675C10;
        v573[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v546, 7, 3, 1, (uint64_t)v572, (uint64_t)&v541, (uint64_t)v573, COERCE_DOUBLE(0x1F0000005FLL), xmmword_224675C10);
      }
    }
    v416 = (v473 & 1) == 0 && v414;
    if (v416 && (v410 & 0x40000000) == 0)
    {
      v543 = v538;
      v544 = v539;
      v545 = v540;
      v573[0] = 0x16160D0D16160D0DLL;
      v542 = (__int128)v537;
      v541 = v536;
      v572[0] = xmmword_224675C20;
      v572[1] = xmmword_224675C30;
      v571 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v541, 7, 3, 1, (uint64_t)v573, (uint64_t)v572, (uint64_t)&v571, COERCE_DOUBLE(0x1F0000005FLL), xmmword_224675C30);
    }
  }
  v506 = v436;
  *(_QWORD *)&v507 = v224;
  *(_QWORD *)&v566 = v480;
  *((_QWORD *)&v566 + 1) = v476;
  *(_QWORD *)&v567 = v470;
  v515 = v485;
  v514 = v484;
  v513 = v483;
  v511 = v481;
  v512 = v482;
  return sub_223DB8D90((unsigned __int8 ***)&v506, &v566, &v511);
}

unint64_t sub_223DB8D90(unsigned __int8 ***a1, _QWORD *a2, __int128 *a3)
{
  unsigned __int8 **v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  _BYTE **v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  _BYTE **v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  _BYTE **v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  _BYTE **v50;
  unint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  unsigned int v54;
  _QWORD *v55;
  uint64_t v56;
  _BYTE **v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  unsigned int v63;
  _QWORD *v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  __int128 v84;
  __int128 v85;
  _BOOL4 v86;
  _BOOL4 v87;
  _BOOL4 v88;
  _BOOL4 v89;
  _BOOL4 v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  _BOOL4 v105;
  _BOOL4 v106;
  _BOOL4 v107;
  _BOOL4 v108;
  _BOOL4 v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  _BOOL4 v124;
  _BOOL4 v125;
  _BOOL4 v126;
  _BOOL4 v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  _BOOL4 v142;
  _BOOL4 v143;
  _BOOL4 v144;
  _BOOL4 v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  _BOOL4 v161;
  _BOOL4 v162;
  _BOOL4 v163;
  _BOOL4 v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  int v177;
  _BOOL4 v178;
  _BOOL4 v179;
  _BOOL4 v180;
  _BOOL4 v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  int v194;
  uint64_t v195;
  unsigned int v196;
  unsigned int v197;
  _BOOL4 v198;
  _BOOL4 v199;
  _BOOL4 v200;
  _BOOL4 v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _BYTE *v205;
  unsigned int v206;
  int v207;
  unint64_t v208;
  uint64_t v209;
  unsigned int v210;
  unint64_t v211;
  uint64_t v212;
  unsigned int v213;
  unint64_t v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  uint64_t v218;
  unint64_t v219;
  unsigned int v220;
  unsigned int v221;
  _BOOL4 v222;
  _BOOL4 v223;
  _BOOL4 v224;
  _BOOL4 v225;
  unsigned __int8 **v226;
  unsigned int v227;
  int v228;
  int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  unsigned int v243;
  unint64_t v244;
  uint64_t v245;
  unsigned int v246;
  int v247;
  unint64_t v248;
  uint64_t v249;
  unsigned int v250;
  unint64_t v251;
  uint64_t v252;
  unsigned int v253;
  unint64_t v254;
  uint64_t v255;
  unsigned int v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  _BOOL4 v278;
  _BOOL4 v279;
  _BOOL4 v280;
  _BOOL4 v281;
  _BOOL4 v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  _BOOL4 v298;
  _BOOL4 v299;
  _BOOL4 v300;
  _BOOL4 v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  _BOOL4 v317;
  _BOOL4 v318;
  _BOOL4 v319;
  _BOOL4 v320;
  _BOOL4 v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  unsigned int v336;
  _BOOL4 v337;
  _BOOL4 v338;
  _BOOL4 v339;
  _BOOL4 v340;
  _BOOL4 v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  int v350;
  unsigned int v351;
  int v352;
  unsigned int v353;
  int v354;
  unsigned int v355;
  unsigned int v356;
  _BOOL4 v357;
  _BOOL4 v358;
  _BOOL4 v359;
  _BOOL4 v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  int v368;
  unsigned int v369;
  int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  _BOOL4 v374;
  _BOOL4 v375;
  _BOOL4 v376;
  _BOOL4 v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  int v386;
  unsigned int v387;
  int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  _BOOL4 v394;
  _BOOL4 v395;
  _BOOL4 v396;
  _BOOL4 v397;
  _BOOL4 v398;
  unint64_t v399;
  uint64_t v400;
  uint64_t v401;
  _BYTE *v402;
  unsigned int v403;
  int v404;
  unint64_t v405;
  uint64_t v406;
  unsigned int v407;
  unint64_t v408;
  uint64_t v409;
  unsigned int v410;
  unint64_t v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  uint64_t v415;
  unint64_t v416;
  unsigned int v417;
  unsigned int v418;
  _BOOL4 v419;
  _BOOL4 v420;
  _BOOL4 v421;
  _BOOL4 v422;
  _BOOL4 v423;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  uint64_t *v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  __int128 v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  int v469;
  unsigned int v470;
  unsigned int v471;
  int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned __int8 **v476;
  _BYTE **v477;
  uint64_t v478;
  _BYTE **v479;
  unsigned int v480;
  unsigned int v481;
  uint64_t v482;
  uint64_t v483;
  _BYTE **v484;
  unsigned int v485;
  unsigned int v486;
  uint64_t v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  float32x4_t v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  uint64_t v578;
  _OWORD v579[2];
  _QWORD v580[3];

  v580[1] = *MEMORY[0x24BDAC8D0];
  v5 = a1[2];
  v484 = *a1;
  v6 = *((_DWORD *)v5 + 24);
  v7 = ***a1;
  if (***a1)
  {
    v8 = *((_DWORD *)v5 + 88);
    v9 = *((_DWORD *)v5 + 32);
    v10 = *((_DWORD *)v5 + 96);
    v11 = *((_DWORD *)v5 + 40);
    v12 = *a2;
    v469 = v10;
    if ((v10 & 0x40000000) == 0)
    {
LABEL_3:
      v478 = v12;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = 0;
      goto LABEL_91;
    }
  }
  else
  {
    if ((v6 & 0x20000000) != 0)
      v6 *= 4;
    v18 = *((_DWORD *)v5 + 88);
    if ((v18 & 0x20000000) != 0)
      v8 = 4 * v18;
    else
      v8 = *((_DWORD *)v5 + 88);
    v19 = *((_DWORD *)v5 + 32);
    if ((v19 & 0x20000000) != 0)
      v9 = 4 * v19;
    else
      v9 = *((_DWORD *)v5 + 32);
    v20 = *((_DWORD *)v5 + 96);
    if ((v20 & 0x20000000) != 0)
      v10 = 4 * v20;
    else
      v10 = *((_DWORD *)v5 + 96);
    v21 = *((_DWORD *)v5 + 40);
    if ((v21 & 0x10000000) != 0)
      v22 = 0x40000000;
    else
      v22 = 0x80000000;
    if ((v21 & 0x20000000) != 0)
      v11 = v22;
    else
      v11 = v21 & 0xCFFFFFFF;
    v12 = *a2;
    v469 = v10;
    if ((v10 & 0x40000000) == 0)
      goto LABEL_3;
  }
  v475 = v11;
  v481 = v9;
  v23 = (_BYTE **)a2[2];
  v24 = *(unsigned int *)(a2[1] + 16);
  v485 = v8;
  if ((v24 & 0x80000000) != 0)
  {
    v26 = v12 + 280;
  }
  else
  {
    v25 = *(_QWORD *)(v12 + 2328);
    if (v24 >= (*(_QWORD *)(v12 + 2336) - v25) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v25 = *(_QWORD *)(v12 + 2328);
      v10 = v469;
      v8 = v485;
    }
    v26 = v25 + (v24 << 11);
  }
  v27 = *(_DWORD *)(v26 + 124);
  v28 = v27 & 0xCFFFFFFF;
  if ((v27 & 0x10000000) != 0)
    v29 = 0x40000000;
  else
    v29 = 0x80000000;
  if ((v27 & 0x20000000) != 0)
    v28 = v29;
  if (**v23)
    v30 = v27;
  else
    v30 = v28;
  v31 = *a2;
  v32 = (_BYTE **)a2[2];
  v33 = *(unsigned int *)(a2[1] + 16);
  if ((v33 & 0x80000000) != 0)
  {
    v35 = v31 + 280;
  }
  else
  {
    v34 = *(_QWORD *)(v31 + 2328);
    if (v33 >= (*(_QWORD *)(v31 + 2336) - v34) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v34 = *(_QWORD *)(v31 + 2328);
      v10 = v469;
      v8 = v485;
    }
    v35 = v34 + (v33 << 11);
  }
  v36 = *(_DWORD *)(v35 + 380);
  v37 = v36 & 0xCFFFFFFF;
  if ((v36 & 0x10000000) != 0)
    v38 = 0x40000000;
  else
    v38 = 0x80000000;
  if ((v36 & 0x20000000) != 0)
    v37 = v38;
  if (**v32)
    v39 = v36;
  else
    v39 = v37;
  v40 = *a2;
  v41 = (_BYTE **)a2[2];
  v42 = *(unsigned int *)(a2[1] + 16);
  if ((v42 & 0x80000000) != 0)
  {
    v44 = v40 + 280;
  }
  else
  {
    v43 = *(_QWORD *)(v40 + 2328);
    if (v42 >= (*(_QWORD *)(v40 + 2336) - v43) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v43 = *(_QWORD *)(v40 + 2328);
      v10 = v469;
      v8 = v485;
    }
    v44 = v43 + (v42 << 11);
  }
  v45 = *(_DWORD *)(v44 + 156);
  v46 = v45 & 0xCFFFFFFF;
  if ((v45 & 0x10000000) != 0)
    v47 = 0x40000000;
  else
    v47 = 0x80000000;
  if ((v45 & 0x20000000) != 0)
    v46 = v47;
  if (**v41)
    v48 = v45;
  else
    v48 = v46;
  v49 = *a2;
  v50 = (_BYTE **)a2[2];
  v51 = *(unsigned int *)(a2[1] + 16);
  if ((v51 & 0x80000000) != 0)
  {
    v62 = *v50;
    v54 = *(_DWORD *)(v49 + 692);
    if (*v62)
      goto LABEL_69;
  }
  else
  {
    v52 = *(_QWORD *)(v49 + 2328);
    if (v51 >= (*(_QWORD *)(v49 + 2336) - v52) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v52 = *(_QWORD *)(v49 + 2328);
      v10 = v469;
      v8 = v485;
    }
    v53 = *v50;
    v54 = *(_DWORD *)(v52 + (v51 << 11) + 412);
    if (*v53)
    {
LABEL_69:
      v55 = a2;
      v56 = *a2;
      v57 = (_BYTE **)v55[2];
      v58 = v55;
      v59 = *(unsigned int *)(v55[1] + 16);
      if ((v59 & 0x80000000) == 0)
        goto LABEL_70;
LABEL_82:
      v61 = v56 + 280;
      goto LABEL_83;
    }
  }
  if ((v54 & 0x10000000) != 0)
    v63 = 0x40000000;
  else
    v63 = 0x80000000;
  if ((v54 & 0x20000000) != 0)
    v54 = v63;
  else
    v54 &= 0xCFFFFFFF;
  v64 = a2;
  v56 = *a2;
  v57 = (_BYTE **)v64[2];
  v58 = v64;
  v59 = *(unsigned int *)(v64[1] + 16);
  if ((v59 & 0x80000000) != 0)
    goto LABEL_82;
LABEL_70:
  v60 = *(_QWORD *)(v56 + 2328);
  if (v59 >= (*(_QWORD *)(v56 + 2336) - v60) >> 11)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      v60 = *(_QWORD *)(v56 + 2328);
      v10 = v469;
      v8 = v485;
      goto LABEL_73;
    }
LABEL_1175:
    abort();
  }
LABEL_73:
  v61 = v60 + (v59 << 11);
LABEL_83:
  v17 = (v30 >> 30) & 1;
  v16 = (v39 >> 30) & 1;
  v15 = (v48 >> 30) & 1;
  v14 = (v54 >> 30) & 1;
  v65 = *(_DWORD *)(v61 + 188);
  a2 = v58;
  v9 = v481;
  v11 = v475;
  if (!**v57)
  {
    if ((v65 & 0x10000000) != 0)
      v66 = 0x40000000;
    else
      v66 = 0x80000000;
    if ((v65 & 0x20000000) != 0)
      v65 = v66;
    else
      v65 &= 0xCFFFFFFF;
  }
  v13 = (v65 >> 30) & 1;
  v5 = a1[2];
  v478 = *v58;
  v484 = *a1;
  v7 = ***a1;
LABEL_91:
  v446 = v6 >> 30;
  v482 = a2[1];
  v476 = (unsigned __int8 **)a2[2];
  v495 = a3[2];
  v496 = a3[3];
  v497 = a3[4];
  v493 = *a3;
  v494 = a3[1];
  v67 = *((_DWORD *)v5 + 25);
  v434 = a2;
  if (v7)
  {
    v68 = *((_DWORD *)v5 + 89);
    v69 = *((_DWORD *)v5 + 33);
    v464 = *((_DWORD *)v5 + 97);
    v70 = *((_DWORD *)v5 + 41);
  }
  else
  {
    if ((v67 & 0x10000000) != 0)
      v71 = 0x40000000;
    else
      v71 = 0x80000000;
    if ((v67 & 0x20000000) != 0)
      v67 = v71;
    else
      v67 &= 0xCFFFFFFF;
    v72 = *((_DWORD *)v5 + 89);
    if ((v72 & 0x10000000) != 0)
      v73 = 0x40000000;
    else
      v73 = 0x80000000;
    if ((v72 & 0x20000000) != 0)
      v68 = v73;
    else
      v68 = v72 & 0xCFFFFFFF;
    v74 = *((_DWORD *)v5 + 33);
    if ((v74 & 0x10000000) != 0)
      v75 = 0x40000000;
    else
      v75 = 0x80000000;
    if ((v74 & 0x20000000) != 0)
      v69 = v75;
    else
      v69 = v74 & 0xCFFFFFFF;
    v76 = *((_DWORD *)v5 + 97);
    if ((v76 & 0x10000000) != 0)
      v77 = 0x40000000;
    else
      v77 = 0x80000000;
    if ((v76 & 0x20000000) != 0)
      v78 = v77;
    else
      v78 = v76 & 0xCFFFFFFF;
    v464 = v78;
    v79 = *((_DWORD *)v5 + 41);
    if ((v79 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v79 & 0x20000000) == 0)
      v70 = v79 & 0xCFFFFFFF;
  }
  v80 = v9 >> 30;
  v81 = v8 >> 30;
  v82 = v11 >> 30;
  v432 = v67 >> 30;
  v455 = v69 >> 30;
  v460 = v68 >> 30;
  v437 = v70 >> 30;
  v505 = a3[2];
  v506 = a3[3];
  v507 = a3[4];
  v503 = *a3;
  v504 = a3[1];
  if ((v10 & 0x40000000) != 0)
  {
    v83 = v17;
    v84 = a3[3];
    v520 = a3[2];
    v521 = v84;
    v522 = a3[4];
    v85 = *a3;
    v519 = a3[1];
    v518 = v85;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224675C40;
    v514 = (__int128)xmmword_224675C50;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 0, 4, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xA000000060), xmmword_224675C50);
    if (!v14)
    {
      v515 = v505;
      v516 = v506;
      v517 = v507;
      v514 = v504;
      v513 = v503;
      *(_QWORD *)&v568 = 0x4040D0D04040D0DLL;
      v573 = xmmword_224675C60;
      v574 = (__int128)xmmword_224675C70;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 0, 4, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xA000000060), xmmword_224675C70);
      v86 = (v15 | v80 & 1) == 0;
      if (!(v16 | v81 & 1))
      {
        v575 = v505;
        v576 = v506;
        v577 = v507;
        v573 = v503;
        v574 = v504;
        *(_QWORD *)&v563 = 0x40404040D0D0D0DLL;
        v568 = xmmword_224675C80;
        v569 = (__int128)xmmword_224675C90;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 0, 4, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xA000000060), xmmword_224675C90);
        v87 = (v446 & 1) == 0 && v86;
        if (!v83 && v87)
        {
          v570 = v505;
          v571 = v506;
          v572 = v507;
          v569 = v504;
          v568 = v503;
          *(_QWORD *)&v558 = 0x4040D0D04040D0DLL;
          v563 = xmmword_224675CA0;
          v564 = (__int128)xmmword_224675CB0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 0, 4, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2000000060), xmmword_224675CB0);
        }
      }
      if (v13)
        v88 = 0;
      else
        v88 = v86;
      if (v88 && (v82 & 1) == 0)
      {
        v565 = v505;
        v566 = v506;
        v567 = v507;
        *(_QWORD *)&v553 = 0x40404040D0D0D0DLL;
        v564 = v504;
        v563 = v503;
        v558 = xmmword_224675CC0;
        v559 = (__int128)xmmword_224675CD0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 0, 4, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2000000060), xmmword_224675CD0);
      }
    }
    if (((v81 | v460) & 1) == 0)
    {
      v560 = v505;
      v561 = v506;
      v562 = v507;
      v559 = v504;
      v558 = v503;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_224675CE0;
      v554 = (__int128)xmmword_224675CF0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 0, 4, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xA000000060), xmmword_224675CF0);
      v89 = (v432 & 1) == 0 && ((v80 | v455) & 1) == 0;
      if ((v446 & 1) == 0 && v89)
      {
        v555 = v505;
        v556 = v506;
        v557 = v507;
        v554 = v504;
        v553 = v503;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224675D00;
        v549 = (__int128)xmmword_224675D10;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 0, 4, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2000000060), xmmword_224675D10);
      }
    }
    v90 = (v82 & 1) == 0 && ((v80 | v455) & 1) == 0;
    v10 = v469;
    if (v90 && (v437 & 1) == 0)
    {
      v550 = v505;
      v551 = v506;
      v552 = v507;
      v549 = v504;
      v548 = v503;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224675D20;
      v544 = xmmword_224675D30;
      *(_QWORD *)&v533 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 0, 4, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x2000000060), xmmword_224675D30);
      v10 = v469;
    }
  }
  v91 = *((_DWORD *)v5 + 26);
  if (**v484)
  {
    v92 = *((_DWORD *)v5 + 90);
    v93 = *((_DWORD *)v5 + 34);
    v94 = *((_DWORD *)v5 + 98);
    v95 = *((_DWORD *)v5 + 42);
  }
  else
  {
    if ((v91 & 0x10000000) != 0)
      v96 = 0x40000000;
    else
      v96 = 0x80000000;
    if ((v91 & 0x20000000) != 0)
      v91 = v96;
    else
      v91 &= 0xCFFFFFFF;
    v97 = *((_DWORD *)v5 + 90);
    if ((v97 & 0x10000000) != 0)
      v98 = 0x40000000;
    else
      v98 = 0x80000000;
    if ((v97 & 0x20000000) != 0)
      v92 = v98;
    else
      v92 = v97 & 0xCFFFFFFF;
    v99 = *((_DWORD *)v5 + 34);
    if ((v99 & 0x10000000) != 0)
      v100 = 0x40000000;
    else
      v100 = 0x80000000;
    if ((v99 & 0x20000000) != 0)
      v93 = v100;
    else
      v93 = v99 & 0xCFFFFFFF;
    v101 = *((_DWORD *)v5 + 98);
    if ((v101 & 0x10000000) != 0)
      v102 = 0x40000000;
    else
      v102 = 0x80000000;
    if ((v101 & 0x20000000) != 0)
      v94 = v102;
    else
      v94 = v101 & 0xCFFFFFFF;
    v103 = *((_DWORD *)v5 + 42);
    if ((v103 & 0x10000000) != 0)
      v95 = 0x40000000;
    else
      v95 = 0x80000000;
    if ((v103 & 0x20000000) == 0)
      v95 = v103 & 0xCFFFFFFF;
  }
  v451 = v93 >> 30;
  v430 = v91 >> 30;
  v470 = v92 >> 30;
  v104 = v95 >> 30;
  if ((v464 & 0x40000000) != 0)
  {
    v105 = (v10 & 0x40000000) == 0;
    v520 = v495;
    v521 = v496;
    v522 = v497;
    v519 = v494;
    v518 = v493;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224675D40;
    v514 = (__int128)xmmword_224675D50;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 1, 4, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xA100000061), xmmword_224675D50);
    if (v105)
    {
      v515 = v495;
      v516 = v496;
      v517 = v497;
      v514 = v494;
      v513 = v493;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224675D60;
      v574 = (__int128)xmmword_224675D70;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 1, 4, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xA100000061), xmmword_224675D70);
      if (((v81 | v460) & 1) == 0)
      {
        v575 = v495;
        v576 = v496;
        v577 = v497;
        v573 = v493;
        v574 = v494;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224675D80;
        v569 = (__int128)xmmword_224675D90;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 1, 4, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xA100000061), xmmword_224675D90);
        v106 = (v432 & 1) == 0 && ((v80 | v455) & 1) == 0;
        if ((v446 & 1) == 0 && v106)
        {
          v570 = v495;
          v571 = v496;
          v572 = v497;
          v569 = v494;
          v568 = v493;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_224675DA0;
          v564 = (__int128)xmmword_224675DB0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 1, 4, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2100000061), xmmword_224675DB0);
        }
      }
      v107 = (v82 & 1) == 0 && ((v80 | v455) & 1) == 0;
      if (v107 && (v437 & 1) == 0)
      {
        v565 = v495;
        v566 = v496;
        v567 = v497;
        v564 = v494;
        v563 = v493;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_224675DC0;
        v559 = (__int128)xmmword_224675DD0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 1, 4, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2100000061), xmmword_224675DD0);
      }
    }
    if (((v460 | v470) & 1) == 0)
    {
      v560 = v495;
      v561 = v496;
      v562 = v497;
      v559 = v494;
      v558 = v493;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_224675DE0;
      v554 = (__int128)xmmword_224675DF0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 1, 4, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xA100000061), xmmword_224675DF0);
      v108 = (v430 & 1) == 0 && ((v455 | v451) & 1) == 0;
      if ((v432 & 1) == 0 && v108)
      {
        v555 = v495;
        v556 = v496;
        v557 = v497;
        v554 = v494;
        v553 = v493;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224675E00;
        v549 = (__int128)xmmword_224675E10;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 1, 4, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2100000061), xmmword_224675E10);
      }
    }
    v109 = (v437 & 1) == 0 && ((v455 | v451) & 1) == 0;
    if (v109 && (v104 & 1) == 0)
    {
      v550 = v495;
      v551 = v496;
      v552 = v497;
      v549 = v494;
      v548 = v493;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224675E20;
      v544 = xmmword_224675E30;
      *(_QWORD *)&v533 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 1, 4, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x2100000061), xmmword_224675E30);
    }
  }
  v110 = *((_DWORD *)v5 + 27);
  if (**v484)
  {
    v111 = *((_DWORD *)v5 + 91);
    v112 = *((_DWORD *)v5 + 35);
    v113 = *((_DWORD *)v5 + 99);
    v114 = *((_DWORD *)v5 + 43);
  }
  else
  {
    if ((v110 & 0x10000000) != 0)
      v115 = 0x40000000;
    else
      v115 = 0x80000000;
    if ((v110 & 0x20000000) != 0)
      v110 = v115;
    else
      v110 &= 0xCFFFFFFF;
    v116 = *((_DWORD *)v5 + 91);
    if ((v116 & 0x10000000) != 0)
      v117 = 0x40000000;
    else
      v117 = 0x80000000;
    if ((v116 & 0x20000000) != 0)
      v111 = v117;
    else
      v111 = v116 & 0xCFFFFFFF;
    v118 = *((_DWORD *)v5 + 35);
    if ((v118 & 0x10000000) != 0)
      v119 = 0x40000000;
    else
      v119 = 0x80000000;
    if ((v118 & 0x20000000) != 0)
      v112 = v119;
    else
      v112 = v118 & 0xCFFFFFFF;
    v120 = *((_DWORD *)v5 + 99);
    if ((v120 & 0x10000000) != 0)
      v121 = 0x40000000;
    else
      v121 = 0x80000000;
    if ((v120 & 0x20000000) != 0)
      v113 = v121;
    else
      v113 = v120 & 0xCFFFFFFF;
    v122 = *((_DWORD *)v5 + 43);
    if ((v122 & 0x10000000) != 0)
      v114 = 0x40000000;
    else
      v114 = 0x80000000;
    if ((v122 & 0x20000000) == 0)
      v114 = v122 & 0xCFFFFFFF;
  }
  v444 = v112 >> 30;
  v429 = v110 >> 30;
  v447 = v111 >> 30;
  v123 = v114 >> 30;
  if ((v94 & 0x40000000) != 0)
  {
    v520 = v495;
    v521 = v496;
    v522 = v497;
    v519 = v494;
    v518 = v493;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224675E40;
    v514 = (__int128)xmmword_224675E50;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 2, 4, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xA200000062), xmmword_224675E50);
    if ((v464 & 0x40000000) == 0)
    {
      v515 = v495;
      v516 = v496;
      v517 = v497;
      v514 = v494;
      v513 = v493;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224675E60;
      v574 = (__int128)xmmword_224675E70;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 2, 4, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xA200000062), xmmword_224675E70);
      if (((v460 | v470) & 1) == 0)
      {
        v575 = v495;
        v576 = v496;
        v577 = v497;
        v573 = v493;
        v574 = v494;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224675E80;
        v569 = (__int128)xmmword_224675E90;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 2, 4, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xA200000062), xmmword_224675E90);
        v124 = (v430 & 1) == 0 && ((v455 | v451) & 1) == 0;
        if ((v432 & 1) == 0 && v124)
        {
          v570 = v495;
          v571 = v496;
          v572 = v497;
          v569 = v494;
          v568 = v493;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_224675EA0;
          v564 = (__int128)xmmword_224675EB0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 2, 4, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2200000062), xmmword_224675EB0);
        }
      }
      v125 = (v437 & 1) == 0 && ((v455 | v451) & 1) == 0;
      if (v125 && (v104 & 1) == 0)
      {
        v565 = v495;
        v566 = v496;
        v567 = v497;
        v564 = v494;
        v563 = v493;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_224675EC0;
        v559 = (__int128)xmmword_224675ED0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 2, 4, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2200000062), xmmword_224675ED0);
      }
    }
    if (((v470 | v447) & 1) == 0)
    {
      v560 = v495;
      v561 = v496;
      v562 = v497;
      v559 = v494;
      v558 = v493;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_224675EE0;
      v554 = (__int128)xmmword_224675EF0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 2, 4, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xA200000062), xmmword_224675EF0);
      v126 = (v429 & 1) == 0 && ((v451 | v444) & 1) == 0;
      if ((v430 & 1) == 0 && v126)
      {
        v555 = v495;
        v556 = v496;
        v557 = v497;
        v554 = v494;
        v553 = v493;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224675F00;
        v549 = (__int128)xmmword_224675F10;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 2, 4, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2200000062), xmmword_224675F10);
      }
    }
    v127 = (v104 & 1) == 0 && ((v451 | v444) & 1) == 0;
    if (v127 && (v123 & 1) == 0)
    {
      v550 = v495;
      v551 = v496;
      v552 = v497;
      v549 = v494;
      v548 = v493;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224675F20;
      v544 = xmmword_224675F30;
      *(_QWORD *)&v533 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 2, 4, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x2200000062), xmmword_224675F30);
    }
  }
  v128 = *((_DWORD *)v5 + 28);
  if (**v484)
  {
    v129 = *((_DWORD *)v5 + 92);
    v130 = *((_DWORD *)v5 + 36);
    v131 = *((_DWORD *)v5 + 100);
    v132 = *((_DWORD *)v5 + 44);
  }
  else
  {
    if ((v128 & 0x10000000) != 0)
      v133 = 0x40000000;
    else
      v133 = 0x80000000;
    if ((v128 & 0x20000000) != 0)
      v128 = v133;
    else
      v128 &= 0xCFFFFFFF;
    v134 = *((_DWORD *)v5 + 92);
    if ((v134 & 0x10000000) != 0)
      v135 = 0x40000000;
    else
      v135 = 0x80000000;
    if ((v134 & 0x20000000) != 0)
      v129 = v135;
    else
      v129 = v134 & 0xCFFFFFFF;
    v136 = *((_DWORD *)v5 + 36);
    if ((v136 & 0x10000000) != 0)
      v137 = 0x40000000;
    else
      v137 = 0x80000000;
    if ((v136 & 0x20000000) != 0)
      v130 = v137;
    else
      v130 = v136 & 0xCFFFFFFF;
    v138 = *((_DWORD *)v5 + 100);
    if ((v138 & 0x10000000) != 0)
      v139 = 0x40000000;
    else
      v139 = 0x80000000;
    if ((v138 & 0x20000000) != 0)
      v131 = v139;
    else
      v131 = v138 & 0xCFFFFFFF;
    v140 = *((_DWORD *)v5 + 44);
    if ((v140 & 0x10000000) != 0)
      v132 = 0x40000000;
    else
      v132 = 0x80000000;
    if ((v140 & 0x20000000) == 0)
      v132 = v140 & 0xCFFFFFFF;
  }
  v141 = v130 >> 30;
  v433 = v128 >> 30;
  v465 = v129 >> 30;
  v438 = v132 >> 30;
  if ((v113 & 0x40000000) != 0)
  {
    v520 = v495;
    v521 = v496;
    v522 = v497;
    v519 = v494;
    v518 = v493;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224675F40;
    v514 = (__int128)xmmword_224675F50;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 3, 4, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xA300000063), xmmword_224675F50);
    if ((v94 & 0x40000000) == 0)
    {
      v515 = v495;
      v516 = v496;
      v517 = v497;
      v514 = v494;
      v513 = v493;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224675F60;
      v574 = (__int128)xmmword_224675F70;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 3, 4, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xA300000063), xmmword_224675F70);
      if (((v470 | v447) & 1) == 0)
      {
        v575 = v495;
        v576 = v496;
        v577 = v497;
        v573 = v493;
        v574 = v494;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224675F80;
        v569 = (__int128)xmmword_224675F90;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 3, 4, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xA300000063), xmmword_224675F90);
        v142 = (v429 & 1) == 0 && ((v451 | v444) & 1) == 0;
        if ((v430 & 1) == 0 && v142)
        {
          v570 = v495;
          v571 = v496;
          v572 = v497;
          v569 = v494;
          v568 = v493;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_224675FA0;
          v564 = (__int128)xmmword_224675FB0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 3, 4, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2300000063), xmmword_224675FB0);
        }
      }
      v143 = (v104 & 1) == 0 && ((v451 | v444) & 1) == 0;
      if (v143 && (v123 & 1) == 0)
      {
        v565 = v495;
        v566 = v496;
        v567 = v497;
        v564 = v494;
        v563 = v493;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_224675FC0;
        v559 = (__int128)xmmword_224675FD0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 3, 4, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2300000063), xmmword_224675FD0);
      }
    }
    if (((v447 | v465) & 1) == 0)
    {
      v560 = v495;
      v561 = v496;
      v562 = v497;
      v559 = v494;
      v558 = v493;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_224675FE0;
      v554 = (__int128)xmmword_224675FF0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 3, 4, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xA300000063), xmmword_224675FF0);
      v144 = (v433 & 1) == 0 && ((v444 | v141) & 1) == 0;
      if ((v429 & 1) == 0 && v144)
      {
        v555 = v495;
        v556 = v496;
        v557 = v497;
        v554 = v494;
        v553 = v493;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224676000;
        v549 = (__int128)xmmword_224676010;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 3, 4, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2300000063), xmmword_224676010);
      }
    }
    v145 = (v123 & 1) == 0 && ((v444 | v141) & 1) == 0;
    if (v145 && (v438 & 1) == 0)
    {
      v550 = v495;
      v551 = v496;
      v552 = v497;
      v549 = v494;
      v548 = v493;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224676020;
      v544 = xmmword_224676030;
      *(_QWORD *)&v533 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 3, 4, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x2300000063), xmmword_224676030);
    }
  }
  v146 = *((_DWORD *)v5 + 29);
  if (**v484)
  {
    v147 = *((_DWORD *)v5 + 93);
    v148 = *((_DWORD *)v5 + 37);
    v149 = *((_DWORD *)v5 + 101);
    v150 = *((_DWORD *)v5 + 45);
  }
  else
  {
    if ((v146 & 0x10000000) != 0)
      v151 = 0x40000000;
    else
      v151 = 0x80000000;
    if ((v146 & 0x20000000) != 0)
      v146 = v151;
    else
      v146 &= 0xCFFFFFFF;
    v152 = *((_DWORD *)v5 + 93);
    if ((v152 & 0x10000000) != 0)
      v153 = 0x40000000;
    else
      v153 = 0x80000000;
    if ((v152 & 0x20000000) != 0)
      v147 = v153;
    else
      v147 = v152 & 0xCFFFFFFF;
    v154 = *((_DWORD *)v5 + 37);
    if ((v154 & 0x10000000) != 0)
      v155 = 0x40000000;
    else
      v155 = 0x80000000;
    if ((v154 & 0x20000000) != 0)
      v148 = v155;
    else
      v148 = v154 & 0xCFFFFFFF;
    v156 = *((_DWORD *)v5 + 101);
    if ((v156 & 0x10000000) != 0)
      v157 = 0x40000000;
    else
      v157 = 0x80000000;
    if ((v156 & 0x20000000) != 0)
      v149 = v157;
    else
      v149 = v156 & 0xCFFFFFFF;
    v158 = *((_DWORD *)v5 + 45);
    if ((v158 & 0x10000000) != 0)
      v150 = 0x40000000;
    else
      v150 = 0x80000000;
    if ((v158 & 0x20000000) == 0)
      v150 = v158 & 0xCFFFFFFF;
  }
  v159 = v148 >> 30;
  v431 = v146 >> 30;
  v471 = v147 >> 30;
  v160 = v150 >> 30;
  if ((v131 & 0x40000000) != 0)
  {
    v520 = v495;
    v521 = v496;
    v522 = v497;
    v519 = v494;
    v518 = v493;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224676040;
    v514 = (__int128)xmmword_224676050;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 4, 4, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xA400000064), xmmword_224676050);
    if ((v113 & 0x40000000) == 0)
    {
      v515 = v495;
      v516 = v496;
      v517 = v497;
      v514 = v494;
      v513 = v493;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224676060;
      v574 = (__int128)xmmword_224676070;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 4, 4, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xA400000064), xmmword_224676070);
      if (((v447 | v465) & 1) == 0)
      {
        v575 = v495;
        v576 = v496;
        v577 = v497;
        v573 = v493;
        v574 = v494;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224676080;
        v569 = (__int128)xmmword_224676090;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 4, 4, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xA400000064), xmmword_224676090);
        v161 = (v433 & 1) == 0 && ((v444 | v141) & 1) == 0;
        if ((v429 & 1) == 0 && v161)
        {
          v570 = v495;
          v571 = v496;
          v572 = v497;
          v569 = v494;
          v568 = v493;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_2246760A0;
          v564 = (__int128)xmmword_2246760B0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 4, 4, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2400000064), xmmword_2246760B0);
        }
      }
      v162 = (v123 & 1) == 0 && ((v444 | v141) & 1) == 0;
      if (v162 && (v438 & 1) == 0)
      {
        v565 = v495;
        v566 = v496;
        v567 = v497;
        v564 = v494;
        v563 = v493;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_2246760C0;
        v559 = (__int128)xmmword_2246760D0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 4, 4, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2400000064), xmmword_2246760D0);
      }
    }
    if (((v465 | v471) & 1) == 0)
    {
      v560 = v495;
      v561 = v496;
      v562 = v497;
      v559 = v494;
      v558 = v493;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_2246760E0;
      v554 = (__int128)xmmword_2246760F0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 4, 4, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xA400000064), xmmword_2246760F0);
      v163 = (v431 & 1) == 0 && ((v141 | v159) & 1) == 0;
      if ((v433 & 1) == 0 && v163)
      {
        v555 = v495;
        v556 = v496;
        v557 = v497;
        v554 = v494;
        v553 = v493;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224676100;
        v549 = (__int128)xmmword_224676110;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 4, 4, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2400000064), xmmword_224676110);
      }
    }
    v164 = (v438 & 1) == 0 && ((v141 | v159) & 1) == 0;
    if (v164 && (v160 & 1) == 0)
    {
      v550 = v495;
      v551 = v496;
      v552 = v497;
      v549 = v494;
      v548 = v493;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224676120;
      v544 = xmmword_224676130;
      *(_QWORD *)&v533 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 4, 4, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x2400000064), xmmword_224676130);
    }
  }
  v165 = *((_DWORD *)v5 + 30);
  if (**v484)
  {
    v166 = *((_DWORD *)v5 + 94);
    v167 = *((_DWORD *)v5 + 38);
    v168 = *((_DWORD *)v5 + 102);
    v169 = *((_DWORD *)v5 + 46);
  }
  else
  {
    if ((v165 & 0x10000000) != 0)
      v170 = 0x40000000;
    else
      v170 = 0x80000000;
    if ((v165 & 0x20000000) != 0)
      v165 = v170;
    else
      v165 &= 0xCFFFFFFF;
    v171 = *((_DWORD *)v5 + 94);
    if ((v171 & 0x10000000) != 0)
      v172 = 0x40000000;
    else
      v172 = 0x80000000;
    if ((v171 & 0x20000000) != 0)
      v166 = v172;
    else
      v166 = v171 & 0xCFFFFFFF;
    v173 = *((_DWORD *)v5 + 38);
    if ((v173 & 0x10000000) != 0)
      v174 = 0x40000000;
    else
      v174 = 0x80000000;
    if ((v173 & 0x20000000) != 0)
      v167 = v174;
    else
      v167 = v173 & 0xCFFFFFFF;
    v175 = *((_DWORD *)v5 + 102);
    if ((v175 & 0x10000000) != 0)
      v176 = 0x40000000;
    else
      v176 = 0x80000000;
    if ((v175 & 0x20000000) != 0)
      v168 = v176;
    else
      v168 = v175 & 0xCFFFFFFF;
    v177 = *((_DWORD *)v5 + 46);
    if ((v177 & 0x10000000) != 0)
      v169 = 0x40000000;
    else
      v169 = 0x80000000;
    if ((v177 & 0x20000000) == 0)
      v169 = v177 & 0xCFFFFFFF;
  }
  v448 = v165 >> 30;
  v456 = v167 >> 30;
  v461 = v166 >> 30;
  v452 = v169 >> 30;
  v535 = v495;
  v536 = v496;
  v537 = v497;
  v534 = v494;
  v533 = v493;
  if ((v149 & 0x40000000) != 0)
  {
    v520 = v495;
    v521 = v496;
    v522 = v497;
    v519 = v494;
    v518 = v493;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224676140;
    v514 = (__int128)xmmword_224676150;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 5, 4, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xA500000065), xmmword_224676150);
    if ((v131 & 0x40000000) == 0)
    {
      v515 = v495;
      v516 = v496;
      v517 = v497;
      v514 = v494;
      v513 = v493;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224676160;
      v574 = (__int128)xmmword_224676170;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 5, 4, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xA500000065), xmmword_224676170);
      if (((v465 | v471) & 1) == 0)
      {
        v575 = v495;
        v576 = v496;
        v577 = v497;
        v573 = v493;
        v574 = v494;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224676180;
        v569 = (__int128)xmmword_224676190;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 5, 4, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xA500000065), xmmword_224676190);
        v178 = (v431 & 1) == 0 && ((v141 | v159) & 1) == 0;
        if ((v433 & 1) == 0 && v178)
        {
          v570 = v495;
          v571 = v496;
          v572 = v497;
          v569 = v494;
          v568 = v493;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_2246761A0;
          v564 = (__int128)xmmword_2246761B0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 5, 4, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2500000065), xmmword_2246761B0);
        }
      }
      v179 = (v438 & 1) == 0 && ((v141 | v159) & 1) == 0;
      if (v179 && (v160 & 1) == 0)
      {
        v565 = v535;
        v566 = v536;
        v567 = v537;
        v564 = v534;
        v563 = v533;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_2246761C0;
        v559 = (__int128)xmmword_2246761D0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 5, 4, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2500000065), xmmword_2246761D0);
      }
    }
    if (((v471 | v461) & 1) == 0)
    {
      v560 = v535;
      v561 = v536;
      v562 = v537;
      v559 = v534;
      v558 = v533;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_2246761E0;
      v554 = (__int128)xmmword_2246761F0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 5, 4, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xA500000065), xmmword_2246761F0);
      v180 = (v448 & 1) == 0 && ((v159 | v456) & 1) == 0;
      if ((v431 & 1) == 0 && v180)
      {
        v555 = v535;
        v556 = v536;
        v557 = v537;
        v554 = v534;
        v553 = v533;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224676200;
        v549 = (__int128)xmmword_224676210;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 5, 4, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2500000065), xmmword_224676210);
      }
    }
    v181 = (v160 & 1) == 0 && ((v159 | v456) & 1) == 0;
    if (v181 && (v452 & 1) == 0)
    {
      v550 = v535;
      v551 = v536;
      v552 = v537;
      v549 = v534;
      v548 = v533;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224676220;
      v544 = xmmword_224676230;
      *(_QWORD *)&v528 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 5, 4, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v528, COERCE_DOUBLE(0x2500000065), xmmword_224676230);
    }
  }
  v530 = v495;
  v531 = v496;
  v532 = v497;
  v529 = v494;
  v528 = v493;
  v182 = *((_DWORD *)v5 + 31);
  if (**v484)
  {
    v183 = *((_DWORD *)v5 + 95);
    v184 = *((_DWORD *)v5 + 39);
    v185 = *((_DWORD *)v5 + 103);
    v186 = *((_DWORD *)v5 + 47);
  }
  else
  {
    if ((v182 & 0x10000000) != 0)
      v187 = 0x40000000;
    else
      v187 = 0x80000000;
    if ((v182 & 0x20000000) != 0)
      v182 = v187;
    else
      v182 &= 0xCFFFFFFF;
    v188 = *((_DWORD *)v5 + 95);
    if ((v188 & 0x10000000) != 0)
      v189 = 0x40000000;
    else
      v189 = 0x80000000;
    if ((v188 & 0x20000000) != 0)
      v183 = v189;
    else
      v183 = v188 & 0xCFFFFFFF;
    v190 = *((_DWORD *)v5 + 39);
    if ((v190 & 0x10000000) != 0)
      v191 = 0x40000000;
    else
      v191 = 0x80000000;
    if ((v190 & 0x20000000) != 0)
      v184 = v191;
    else
      v184 = v190 & 0xCFFFFFFF;
    v192 = *((_DWORD *)v5 + 103);
    if ((v192 & 0x10000000) != 0)
      v193 = 0x40000000;
    else
      v193 = 0x80000000;
    if ((v192 & 0x20000000) != 0)
      v185 = v193;
    else
      v185 = v192 & 0xCFFFFFFF;
    v194 = *((_DWORD *)v5 + 47);
    if ((v194 & 0x10000000) != 0)
      v186 = 0x40000000;
    else
      v186 = 0x80000000;
    if ((v194 & 0x20000000) == 0)
      v186 = v194 & 0xCFFFFFFF;
  }
  v195 = v478;
  v196 = v184 >> 30;
  v466 = v182 >> 30;
  v197 = v183 >> 30;
  v486 = v186 >> 30;
  v540 = v495;
  v541 = v496;
  v542 = v497;
  v539 = v494;
  v538 = v493;
  if ((v168 & 0x40000000) != 0)
  {
    v520 = v495;
    v521 = v496;
    v522 = v497;
    v519 = v494;
    v518 = v493;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224676240;
    v514 = (__int128)xmmword_224676250;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 6, 4, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xA600000066), xmmword_224676250);
    if ((v149 & 0x40000000) == 0)
    {
      v515 = v495;
      v516 = v496;
      v517 = v497;
      v514 = v494;
      v513 = v493;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224676260;
      v574 = (__int128)xmmword_224676270;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 6, 4, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xA600000066), xmmword_224676270);
      if (((v471 | v461) & 1) == 0)
      {
        v575 = v495;
        v576 = v496;
        v577 = v497;
        v573 = v493;
        v574 = v494;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224676280;
        v569 = (__int128)xmmword_224676290;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 6, 4, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xA600000066), xmmword_224676290);
        v198 = (v448 & 1) == 0 && ((v159 | v456) & 1) == 0;
        if ((v431 & 1) == 0 && v198)
        {
          v570 = v495;
          v571 = v496;
          v572 = v497;
          v569 = v494;
          v568 = v493;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_2246762A0;
          v564 = (__int128)xmmword_2246762B0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 6, 4, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2600000066), xmmword_2246762B0);
        }
      }
      v199 = (v160 & 1) == 0 && ((v159 | v456) & 1) == 0;
      if (v199 && (v452 & 1) == 0)
      {
        v565 = v540;
        v566 = v541;
        v567 = v542;
        v564 = v539;
        v563 = v538;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_2246762C0;
        v559 = (__int128)xmmword_2246762D0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 6, 4, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2600000066), xmmword_2246762D0);
      }
    }
    if (((v461 | v197) & 1) == 0)
    {
      v560 = v540;
      v561 = v541;
      v562 = v542;
      v559 = v539;
      v558 = v538;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_2246762E0;
      v554 = (__int128)xmmword_2246762F0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 6, 4, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xA600000066), xmmword_2246762F0);
      v200 = (v466 & 1) == 0 && ((v456 | v196) & 1) == 0;
      if ((v448 & 1) == 0 && v200)
      {
        v555 = v540;
        v556 = v541;
        v557 = v542;
        v554 = v539;
        v553 = v538;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224676300;
        v549 = (__int128)xmmword_224676310;
        *(_QWORD *)&v523 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 6, 4, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v523, COERCE_DOUBLE(0x2600000066), xmmword_224676310);
      }
    }
    v201 = (v452 & 1) == 0 && ((v456 | v196) & 1) == 0;
    v195 = v478;
    if (v201 && (v486 & 1) == 0)
    {
      v550 = v540;
      v551 = v541;
      v552 = v542;
      v549 = v539;
      v548 = v538;
      *(_QWORD *)&v523 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224676320;
      v544 = xmmword_224676330;
      *(_QWORD *)&v579[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 6, 4, 1, (uint64_t)&v523, (uint64_t)&v543, (uint64_t)v579, COERCE_DOUBLE(0x2600000066), xmmword_224676330);
      v195 = v478;
    }
  }
  v202 = *(unsigned int *)(v482 + 88);
  if ((v202 & 0x80000000) != 0)
  {
    v205 = *v476;
    v206 = *(_DWORD *)(v195 + 376);
    v207 = **v476;
    if (**v476)
      goto LABEL_509;
  }
  else
  {
    v203 = *(_QWORD *)(v195 + 2328);
    if (v202 >= (*(_QWORD *)(v195 + 2336) - v203) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v195 = v478;
      v203 = *(_QWORD *)(v478 + 2328);
    }
    v204 = v203 + (v202 << 11);
    v205 = *v476;
    v206 = *(_DWORD *)(v204 + 96);
    v207 = **v476;
    if (**v476)
    {
LABEL_509:
      v208 = *(unsigned int *)(v482 + 88);
      if ((v208 & 0x80000000) == 0)
        goto LABEL_510;
LABEL_529:
      v210 = *(_DWORD *)(v195 + 632);
      if (v207)
        goto LABEL_514;
      goto LABEL_530;
    }
  }
  if ((v206 & 0x10000000) != 0)
    v215 = 0x40000000;
  else
    v215 = 0x80000000;
  if ((v206 & 0x20000000) != 0)
    v206 = v215;
  else
    v206 &= 0xCFFFFFFF;
  v208 = *(unsigned int *)(v482 + 88);
  if ((v208 & 0x80000000) != 0)
    goto LABEL_529;
LABEL_510:
  v209 = *(_QWORD *)(v195 + 2328);
  if (v208 >= (*(_QWORD *)(v195 + 2336) - v209) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v195 = v478;
    v209 = *(_QWORD *)(v478 + 2328);
    v205 = *v476;
    v207 = **v476;
  }
  v210 = *(_DWORD *)(v209 + (v208 << 11) + 352);
  if (v207)
  {
LABEL_514:
    v211 = *(unsigned int *)(v482 + 88);
    if ((v211 & 0x80000000) == 0)
      goto LABEL_515;
LABEL_537:
    v213 = *(_DWORD *)(v195 + 408);
    if (v207)
      goto LABEL_519;
    goto LABEL_538;
  }
LABEL_530:
  if ((v210 & 0x10000000) != 0)
    v216 = 0x40000000;
  else
    v216 = 0x80000000;
  if ((v210 & 0x20000000) != 0)
    v210 = v216;
  else
    v210 &= 0xCFFFFFFF;
  v211 = *(unsigned int *)(v482 + 88);
  if ((v211 & 0x80000000) != 0)
    goto LABEL_537;
LABEL_515:
  v212 = *(_QWORD *)(v195 + 2328);
  if (v211 >= (*(_QWORD *)(v195 + 2336) - v212) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v195 = v478;
    v212 = *(_QWORD *)(v478 + 2328);
    v205 = *v476;
    v207 = **v476;
  }
  v213 = *(_DWORD *)(v212 + (v211 << 11) + 128);
  if (v207)
  {
LABEL_519:
    v214 = *(unsigned int *)(v482 + 88);
    if ((v214 & 0x80000000) != 0)
      goto LABEL_590;
    goto LABEL_545;
  }
LABEL_538:
  if ((v213 & 0x10000000) != 0)
    v217 = 0x40000000;
  else
    v217 = 0x80000000;
  if ((v213 & 0x20000000) != 0)
    v213 = v217;
  else
    v213 &= 0xCFFFFFFF;
  v214 = *(unsigned int *)(v482 + 88);
  if ((v214 & 0x80000000) != 0)
    goto LABEL_590;
LABEL_545:
  v218 = *(_QWORD *)(v195 + 2328);
  v219 = (*(_QWORD *)(v195 + 2336) - v218) >> 11;
  if (v219 > v214)
    goto LABEL_549;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v195 = v478;
  v205 = *v476;
  v214 = *(unsigned int *)(v482 + 88);
  if ((v214 & 0x80000000) != 0)
  {
LABEL_590:
    v220 = *(_DWORD *)(v195 + 440);
    if (*v205)
      goto LABEL_559;
    goto LABEL_553;
  }
  v218 = *(_QWORD *)(v478 + 2328);
  v219 = (*(_QWORD *)(v478 + 2336) - v218) >> 11;
LABEL_549:
  if (v219 <= v214)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v218 = *(_QWORD *)(v478 + 2328);
    v205 = *v476;
  }
  v220 = *(_DWORD *)(v218 + (v214 << 11) + 160);
  if (!*v205)
  {
LABEL_553:
    if ((v220 & 0x10000000) != 0)
      v221 = 0x40000000;
    else
      v221 = 0x80000000;
    if ((v220 & 0x20000000) != 0)
      v220 = v221;
    else
      v220 &= 0xCFFFFFFF;
  }
LABEL_559:
  v545 = v530;
  v546 = v531;
  v547 = v532;
  v544 = (float32x4_t)v529;
  v543 = v528;
  if ((v185 & 0x40000000) != 0)
  {
    v520 = v530;
    v521 = v531;
    v522 = v532;
    v519 = v529;
    v518 = v528;
    *(_QWORD *)&v573 = 0x161616160D0D0D0DLL;
    v513 = xmmword_224676340;
    v514 = (__int128)xmmword_224676350;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 7, 4, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xA700000067), xmmword_224676350);
    if ((v168 & 0x40000000) == 0)
    {
      v515 = v530;
      v516 = v531;
      v517 = v532;
      v514 = v529;
      v513 = v528;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224676360;
      v574 = (__int128)xmmword_224676370;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 7, 4, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xA700000067), xmmword_224676370);
      if (((v461 | v197) & 1) == 0)
      {
        v575 = v530;
        v576 = v531;
        v577 = v532;
        v573 = v528;
        v574 = v529;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224676380;
        v569 = (__int128)xmmword_224676390;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 7, 4, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xA700000067), xmmword_224676390);
        v222 = (v466 & 1) == 0 && ((v456 | v196) & 1) == 0;
        if ((v448 & 1) == 0 && v222)
        {
          v570 = v530;
          v571 = v531;
          v572 = v532;
          v569 = v529;
          v568 = v528;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_2246763A0;
          v564 = (__int128)xmmword_2246763B0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 7, 4, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2700000067), xmmword_2246763B0);
        }
      }
      v223 = (v452 & 1) == 0 && ((v456 | v196) & 1) == 0;
      if (v223 && (v486 & 1) == 0)
      {
        v565 = v545;
        v566 = v546;
        v567 = v547;
        v564 = (__int128)v544;
        v563 = v543;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_2246763C0;
        v559 = (__int128)xmmword_2246763D0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 7, 4, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2700000067), xmmword_2246763D0);
      }
    }
    if (!(v210 & 0x40000000 | v197 & 1))
    {
      v560 = v545;
      v561 = v546;
      v562 = v547;
      *(_QWORD *)&v548 = 0x16160D0D16160D0DLL;
      v559 = (__int128)v544;
      v558 = v543;
      v553 = xmmword_2246763E0;
      v554 = (__int128)xmmword_2246763F0;
      *(_QWORD *)&v523 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 7, 4, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v523, COERCE_DOUBLE(0xA700000067), xmmword_2246763F0);
      v224 = (v206 & 0x40000000) == 0 && (v213 & 0x40000000 | v196 & 1) == 0;
      if ((v466 & 1) == 0 && v224)
      {
        v555 = v545;
        v556 = v546;
        v557 = v547;
        *(_QWORD *)&v523 = 0x161616160D0D0D0DLL;
        v554 = (__int128)v544;
        v553 = v543;
        v548 = xmmword_224676400;
        v549 = (__int128)xmmword_224676410;
        *(_QWORD *)&v579[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 7, 4, 1, (uint64_t)&v523, (uint64_t)&v548, (uint64_t)v579, COERCE_DOUBLE(0x2700000067), xmmword_224676410);
      }
    }
    v225 = (v486 & 1) == 0 && (v213 & 0x40000000 | v196 & 1) == 0;
    if (v225 && (v220 & 0x40000000) == 0)
    {
      v550 = v545;
      v551 = v546;
      v552 = v547;
      *(_QWORD *)&v579[0] = 0x16160D0D16160D0DLL;
      v549 = (__int128)v544;
      v548 = v543;
      v523 = xmmword_224676420;
      v524 = (__int128)xmmword_224676430;
      v580[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 7, 4, 1, (uint64_t)v579, (uint64_t)&v523, (uint64_t)v580, COERCE_DOUBLE(0x2700000067), xmmword_224676430);
    }
  }
  v226 = a1[2];
  v483 = v434[1];
  v487 = *v434;
  v491 = a3[3];
  v492 = a3[4];
  v489 = a3[1];
  v490 = a3[2];
  v488 = *a3;
  v445 = *(_OWORD *)a1;
  v477 = (_BYTE **)v434[2];
  v479 = *a1;
  v227 = *((_DWORD *)v226 + 32);
  v228 = ***a1;
  if (***a1)
  {
    v229 = *((_DWORD *)v226 + 96);
    v230 = *((_DWORD *)v226 + 40);
    v231 = *((_DWORD *)v226 + 48);
    v472 = *((_DWORD *)v226 + 104);
    if ((v472 & 0x40000000) == 0)
    {
LABEL_589:
      v232 = v229;
      v233 = 0;
      v234 = 0;
      v235 = 0;
      v236 = 0;
      v237 = 0;
      goto LABEL_642;
    }
  }
  else
  {
    if ((v227 & 0x20000000) != 0)
      v227 *= 4;
    v238 = *((_DWORD *)v226 + 96);
    if ((v238 & 0x20000000) != 0)
      v229 = 4 * v238;
    else
      v229 = *((_DWORD *)v226 + 96);
    v239 = *((_DWORD *)v226 + 40);
    if ((v239 & 0x20000000) != 0)
      v230 = 4 * v239;
    else
      v230 = *((_DWORD *)v226 + 40);
    v240 = *((_DWORD *)v226 + 104);
    if ((v240 & 0x20000000) != 0)
      v241 = 4 * v240;
    else
      v241 = *((_DWORD *)v226 + 104);
    v242 = *((_DWORD *)v226 + 48);
    if ((v242 & 0x10000000) != 0)
      v243 = 0x40000000;
    else
      v243 = 0x80000000;
    if ((v242 & 0x20000000) != 0)
      v231 = v243;
    else
      v231 = v242 & 0xCFFFFFFF;
    v472 = v241;
    if ((v241 & 0x40000000) == 0)
      goto LABEL_589;
  }
  v244 = *(unsigned int *)(v483 + 16);
  if ((v244 & 0x80000000) != 0)
  {
    v246 = *(_DWORD *)(v487 + 436);
    v247 = **v477;
    if (**v477)
      goto LABEL_615;
  }
  else
  {
    v245 = *(_QWORD *)(v487 + 2328);
    if (v244 >= (*(_QWORD *)(v487 + 2336) - v245) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v245 = *(_QWORD *)(v487 + 2328);
    }
    v246 = *(_DWORD *)(v245 + (v244 << 11) + 156);
    v247 = **v477;
    if (**v477)
    {
LABEL_615:
      v248 = *(unsigned int *)(v483 + 16);
      if ((v248 & 0x80000000) == 0)
        goto LABEL_616;
LABEL_1149:
      v250 = *(_DWORD *)(v487 + 692);
      if (v247)
        goto LABEL_620;
      goto LABEL_1150;
    }
  }
  if ((v246 & 0x10000000) != 0)
    v425 = 0x40000000;
  else
    v425 = 0x80000000;
  if ((v246 & 0x20000000) != 0)
    v246 = v425;
  else
    v246 &= 0xCFFFFFFF;
  v248 = *(unsigned int *)(v483 + 16);
  if ((v248 & 0x80000000) != 0)
    goto LABEL_1149;
LABEL_616:
  v249 = *(_QWORD *)(v487 + 2328);
  if (v248 >= (*(_QWORD *)(v487 + 2336) - v249) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v249 = *(_QWORD *)(v487 + 2328);
    v247 = **v477;
  }
  v250 = *(_DWORD *)(v249 + (v248 << 11) + 412);
  if (v247)
  {
LABEL_620:
    v251 = *(unsigned int *)(v483 + 16);
    if ((v251 & 0x80000000) == 0)
      goto LABEL_621;
LABEL_1157:
    v253 = *(_DWORD *)(v487 + 468);
    if (v247)
      goto LABEL_625;
    goto LABEL_1158;
  }
LABEL_1150:
  if ((v250 & 0x10000000) != 0)
    v426 = 0x40000000;
  else
    v426 = 0x80000000;
  if ((v250 & 0x20000000) != 0)
    v250 = v426;
  else
    v250 &= 0xCFFFFFFF;
  v251 = *(unsigned int *)(v483 + 16);
  if ((v251 & 0x80000000) != 0)
    goto LABEL_1157;
LABEL_621:
  v252 = *(_QWORD *)(v487 + 2328);
  if (v251 >= (*(_QWORD *)(v487 + 2336) - v252) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v252 = *(_QWORD *)(v487 + 2328);
    v247 = **v477;
  }
  v253 = *(_DWORD *)(v252 + (v251 << 11) + 188);
  if (v247)
  {
LABEL_625:
    v254 = *(unsigned int *)(v483 + 16);
    if ((v254 & 0x80000000) == 0)
      goto LABEL_626;
LABEL_1165:
    v256 = *(_DWORD *)(v487 + 724);
    if (v247)
      goto LABEL_630;
    goto LABEL_1166;
  }
LABEL_1158:
  if ((v253 & 0x10000000) != 0)
    v427 = 0x40000000;
  else
    v427 = 0x80000000;
  if ((v253 & 0x20000000) != 0)
    v253 = v427;
  else
    v253 &= 0xCFFFFFFF;
  v254 = *(unsigned int *)(v483 + 16);
  if ((v254 & 0x80000000) != 0)
    goto LABEL_1165;
LABEL_626:
  v255 = *(_QWORD *)(v487 + 2328);
  if (v254 >= (*(_QWORD *)(v487 + 2336) - v255) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v255 = *(_QWORD *)(v487 + 2328);
    v247 = **v477;
  }
  v256 = *(_DWORD *)(v255 + (v254 << 11) + 444);
  if (v247)
  {
LABEL_630:
    v257 = *(unsigned int *)(v483 + 16);
    if ((v257 & 0x80000000) == 0)
      goto LABEL_631;
    goto LABEL_1173;
  }
LABEL_1166:
  if ((v256 & 0x10000000) != 0)
    v428 = 0x40000000;
  else
    v428 = 0x80000000;
  if ((v256 & 0x20000000) != 0)
    v256 = v428;
  else
    v256 &= 0xCFFFFFFF;
  v257 = *(unsigned int *)(v483 + 16);
  if ((v257 & 0x80000000) == 0)
  {
LABEL_631:
    v258 = *(_QWORD *)(v487 + 2328);
    if (v257 >= (*(_QWORD *)(v487 + 2336) - v258) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v258 = *(_QWORD *)(v487 + 2328);
      v247 = **v477;
    }
    v232 = v229;
    v259 = v258 + (v257 << 11);
    v237 = (v246 >> 30) & 1;
    v236 = (v250 >> 30) & 1;
    v235 = (v253 >> 30) & 1;
    v260 = *(_DWORD *)(v259 + 220);
    v234 = (v256 >> 30) & 1;
    if (v247)
      goto LABEL_641;
    goto LABEL_635;
  }
LABEL_1173:
  v232 = v229;
  v237 = (v246 >> 30) & 1;
  v236 = (v250 >> 30) & 1;
  v235 = (v253 >> 30) & 1;
  v260 = *(_DWORD *)(v487 + 500);
  v234 = (v256 >> 30) & 1;
  if (!v247)
  {
LABEL_635:
    if ((v260 & 0x10000000) != 0)
      v261 = 0x40000000;
    else
      v261 = 0x80000000;
    if ((v260 & 0x20000000) != 0)
      v260 = v261;
    else
      v260 &= 0xCFFFFFFF;
  }
LABEL_641:
  v233 = (v260 >> 30) & 1;
  v228 = **v479;
LABEL_642:
  v457 = v227 >> 30;
  v525 = v490;
  v526 = v491;
  v527 = v492;
  v524 = v489;
  v523 = v488;
  v262 = *((_DWORD *)v226 + 33);
  if (v228)
  {
    v263 = *((_DWORD *)v226 + 97);
    v264 = *((_DWORD *)v226 + 41);
    v265 = *((_DWORD *)v226 + 105);
    v266 = *((_DWORD *)v226 + 49);
  }
  else
  {
    if ((v262 & 0x10000000) != 0)
      v267 = 0x40000000;
    else
      v267 = 0x80000000;
    if ((v262 & 0x20000000) != 0)
      v262 = v267;
    else
      v262 &= 0xCFFFFFFF;
    v268 = *((_DWORD *)v226 + 97);
    if ((v268 & 0x10000000) != 0)
      v269 = 0x40000000;
    else
      v269 = 0x80000000;
    if ((v268 & 0x20000000) != 0)
      v263 = v269;
    else
      v263 = v268 & 0xCFFFFFFF;
    v270 = *((_DWORD *)v226 + 41);
    if ((v270 & 0x10000000) != 0)
      v271 = 0x40000000;
    else
      v271 = 0x80000000;
    if ((v270 & 0x20000000) != 0)
      v264 = v271;
    else
      v264 = v270 & 0xCFFFFFFF;
    v272 = *((_DWORD *)v226 + 105);
    if ((v272 & 0x10000000) != 0)
      v273 = 0x40000000;
    else
      v273 = 0x80000000;
    if ((v272 & 0x20000000) != 0)
      v265 = v273;
    else
      v265 = v272 & 0xCFFFFFFF;
    v274 = *((_DWORD *)v226 + 49);
    if ((v274 & 0x10000000) != 0)
      v266 = 0x40000000;
    else
      v266 = 0x80000000;
    if ((v274 & 0x20000000) == 0)
      v266 = v274 & 0xCFFFFFFF;
  }
  v275 = v230 >> 30;
  v276 = v232 >> 30;
  v277 = v231 >> 30;
  v442 = v262 >> 30;
  v462 = v264 >> 30;
  v467 = v263 >> 30;
  v453 = v266 >> 30;
  if ((v472 & 0x40000000) != 0)
  {
    v520 = v490;
    v521 = v491;
    v522 = v492;
    v519 = v489;
    v518 = v488;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224676440;
    v514 = (__int128)xmmword_224676450;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 0, 5, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xA800000068), xmmword_224676450);
    if (!v234)
    {
      v515 = v490;
      v516 = v491;
      v517 = v492;
      v514 = v489;
      v513 = v488;
      *(_QWORD *)&v568 = 0x4040D0D04040D0DLL;
      v573 = xmmword_224676460;
      v574 = (__int128)xmmword_224676470;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 0, 5, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xA800000068), xmmword_224676470);
      v278 = (v235 | v275 & 1) == 0;
      if (!(v236 | v276 & 1))
      {
        v575 = v490;
        v576 = v491;
        v577 = v492;
        v573 = v488;
        v574 = v489;
        *(_QWORD *)&v563 = 0x40404040D0D0D0DLL;
        v568 = xmmword_224676480;
        v569 = (__int128)xmmword_224676490;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 0, 5, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xA800000068), xmmword_224676490);
        v279 = (v457 & 1) == 0 && v278;
        if (!v237 && v279)
        {
          v570 = v490;
          v571 = v491;
          v572 = v492;
          v569 = v489;
          v568 = v488;
          *(_QWORD *)&v558 = 0x4040D0D04040D0DLL;
          v563 = xmmword_2246764A0;
          v564 = (__int128)xmmword_2246764B0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 0, 5, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2800000068), xmmword_2246764B0);
        }
      }
      if (v233)
        v280 = 0;
      else
        v280 = v278;
      if (v280 && (v277 & 1) == 0)
      {
        v565 = v490;
        v566 = v491;
        v567 = v492;
        *(_QWORD *)&v553 = 0x40404040D0D0D0DLL;
        v564 = v489;
        v563 = v488;
        v558 = xmmword_2246764C0;
        v559 = (__int128)xmmword_2246764D0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 0, 5, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2800000068), xmmword_2246764D0);
      }
    }
    if (((v276 | v467) & 1) == 0)
    {
      v560 = v490;
      v561 = v491;
      v562 = v492;
      v559 = v489;
      v558 = v488;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_2246764E0;
      v554 = (__int128)xmmword_2246764F0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 0, 5, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xA800000068), xmmword_2246764F0);
      v281 = (v442 & 1) == 0 && ((v275 | v462) & 1) == 0;
      if ((v457 & 1) == 0 && v281)
      {
        v555 = v490;
        v556 = v491;
        v557 = v492;
        v554 = v489;
        v553 = v488;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224676500;
        v549 = (__int128)xmmword_224676510;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 0, 5, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2800000068), xmmword_224676510);
      }
    }
    v282 = (v277 & 1) == 0 && ((v275 | v462) & 1) == 0;
    if (v282 && (v453 & 1) == 0)
    {
      v550 = v490;
      v551 = v491;
      v552 = v492;
      v549 = v489;
      v548 = v488;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224676520;
      v544 = xmmword_224676530;
      *(_QWORD *)&v533 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 0, 5, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x2800000068), xmmword_224676530);
    }
  }
  v500 = v525;
  v501 = v526;
  v502 = v527;
  v498 = v523;
  v499 = v524;
  v283 = *((_DWORD *)v226 + 34);
  if (**v479)
  {
    v284 = *((_DWORD *)v226 + 98);
    v285 = *((_DWORD *)v226 + 42);
    v286 = *((_DWORD *)v226 + 106);
    v287 = *((_DWORD *)v226 + 50);
  }
  else
  {
    if ((v283 & 0x10000000) != 0)
      v288 = 0x40000000;
    else
      v288 = 0x80000000;
    if ((v283 & 0x20000000) != 0)
      v283 = v288;
    else
      v283 &= 0xCFFFFFFF;
    v289 = *((_DWORD *)v226 + 98);
    if ((v289 & 0x10000000) != 0)
      v290 = 0x40000000;
    else
      v290 = 0x80000000;
    if ((v289 & 0x20000000) != 0)
      v284 = v290;
    else
      v284 = v289 & 0xCFFFFFFF;
    v291 = *((_DWORD *)v226 + 42);
    if ((v291 & 0x10000000) != 0)
      v292 = 0x40000000;
    else
      v292 = 0x80000000;
    if ((v291 & 0x20000000) != 0)
      v285 = v292;
    else
      v285 = v291 & 0xCFFFFFFF;
    v293 = *((_DWORD *)v226 + 106);
    if ((v293 & 0x10000000) != 0)
      v294 = 0x40000000;
    else
      v294 = 0x80000000;
    if ((v293 & 0x20000000) != 0)
      v286 = v294;
    else
      v286 = v293 & 0xCFFFFFFF;
    v295 = *((_DWORD *)v226 + 50);
    if ((v295 & 0x10000000) != 0)
      v287 = 0x40000000;
    else
      v287 = 0x80000000;
    if ((v295 & 0x20000000) == 0)
      v287 = v295 & 0xCFFFFFFF;
  }
  v296 = v285 >> 30;
  v439 = v283 >> 30;
  v297 = v284 >> 30;
  v449 = v287 >> 30;
  v510 = v525;
  v511 = v526;
  v512 = v527;
  v508 = v523;
  v509 = v524;
  if ((v265 & 0x40000000) != 0)
  {
    v520 = v525;
    v521 = v526;
    v522 = v527;
    v519 = v524;
    v518 = v523;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224676540;
    v514 = (__int128)xmmword_224676550;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 1, 5, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xA900000069), xmmword_224676550);
    if ((v472 & 0x40000000) == 0)
    {
      v515 = v525;
      v516 = v526;
      v517 = v527;
      v514 = v524;
      v513 = v523;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224676560;
      v574 = (__int128)xmmword_224676570;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 1, 5, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xA900000069), xmmword_224676570);
      if (((v276 | v467) & 1) == 0)
      {
        v575 = v525;
        v576 = v526;
        v577 = v527;
        v573 = v523;
        v574 = v524;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224676580;
        v569 = (__int128)xmmword_224676590;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 1, 5, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xA900000069), xmmword_224676590);
        v298 = (v442 & 1) == 0 && ((v275 | v462) & 1) == 0;
        if ((v457 & 1) == 0 && v298)
        {
          v570 = v525;
          v571 = v526;
          v572 = v527;
          v569 = v524;
          v568 = v523;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_2246765A0;
          v564 = (__int128)xmmword_2246765B0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 1, 5, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2900000069), xmmword_2246765B0);
        }
      }
      v299 = (v277 & 1) == 0 && ((v275 | v462) & 1) == 0;
      if (v299 && (v453 & 1) == 0)
      {
        v565 = v510;
        v566 = v511;
        v567 = v512;
        v564 = v509;
        v563 = v508;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_2246765C0;
        v559 = (__int128)xmmword_2246765D0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 1, 5, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2900000069), xmmword_2246765D0);
      }
    }
    if (((v467 | v297) & 1) == 0)
    {
      v560 = v510;
      v561 = v511;
      v562 = v512;
      v559 = v509;
      v558 = v508;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_2246765E0;
      v554 = (__int128)xmmword_2246765F0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 1, 5, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xA900000069), xmmword_2246765F0);
      v300 = (v439 & 1) == 0 && ((v462 | v296) & 1) == 0;
      if ((v442 & 1) == 0 && v300)
      {
        v555 = v510;
        v556 = v511;
        v557 = v512;
        v554 = v509;
        v553 = v508;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224676600;
        v549 = (__int128)xmmword_224676610;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 1, 5, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2900000069), xmmword_224676610);
      }
    }
    v301 = (v453 & 1) == 0 && ((v462 | v296) & 1) == 0;
    if (v301 && (v449 & 1) == 0)
    {
      v550 = v510;
      v551 = v511;
      v552 = v512;
      v549 = v509;
      v548 = v508;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224676620;
      v544 = xmmword_224676630;
      *(_QWORD *)&v533 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 1, 5, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x2900000069), xmmword_224676630);
    }
  }
  v302 = *((_DWORD *)v226 + 35);
  if (**v479)
  {
    v303 = v265;
    v304 = *((_DWORD *)v226 + 99);
    v305 = *((_DWORD *)v226 + 43);
    v306 = *((_DWORD *)v226 + 107);
    v307 = *((_DWORD *)v226 + 51);
  }
  else
  {
    v303 = v265;
    if ((v302 & 0x10000000) != 0)
      v308 = 0x40000000;
    else
      v308 = 0x80000000;
    if ((v302 & 0x20000000) != 0)
      v302 = v308;
    else
      v302 &= 0xCFFFFFFF;
    v309 = *((_DWORD *)v226 + 99);
    if ((v309 & 0x10000000) != 0)
      v310 = 0x40000000;
    else
      v310 = 0x80000000;
    if ((v309 & 0x20000000) != 0)
      v304 = v310;
    else
      v304 = v309 & 0xCFFFFFFF;
    v311 = *((_DWORD *)v226 + 43);
    if ((v311 & 0x10000000) != 0)
      v312 = 0x40000000;
    else
      v312 = 0x80000000;
    if ((v311 & 0x20000000) != 0)
      v305 = v312;
    else
      v305 = v311 & 0xCFFFFFFF;
    v313 = *((_DWORD *)v226 + 107);
    if ((v313 & 0x10000000) != 0)
      v314 = 0x40000000;
    else
      v314 = 0x80000000;
    if ((v313 & 0x20000000) != 0)
      v306 = v314;
    else
      v306 = v313 & 0xCFFFFFFF;
    v315 = *((_DWORD *)v226 + 51);
    if ((v315 & 0x10000000) != 0)
      v307 = 0x40000000;
    else
      v307 = 0x80000000;
    if ((v315 & 0x20000000) == 0)
      v307 = v315 & 0xCFFFFFFF;
  }
  v458 = v305 >> 30;
  v435 = v302 >> 30;
  v473 = v304 >> 30;
  v316 = v307 >> 30;
  if ((v286 & 0x40000000) != 0)
  {
    v317 = (v303 & 0x40000000) == 0;
    v520 = v500;
    v521 = v501;
    v522 = v502;
    v519 = v499;
    v518 = v498;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224676640;
    v514 = (__int128)xmmword_224676650;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 2, 5, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xAA0000006ALL), xmmword_224676650);
    if (v317)
    {
      v515 = v500;
      v516 = v501;
      v517 = v502;
      v514 = v499;
      v513 = v498;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224676660;
      v574 = (__int128)xmmword_224676670;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 2, 5, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xAA0000006ALL), xmmword_224676670);
      if (((v467 | v297) & 1) == 0)
      {
        v575 = v500;
        v576 = v501;
        v577 = v502;
        v573 = v498;
        v574 = v499;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224676680;
        v569 = (__int128)xmmword_224676690;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 2, 5, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xAA0000006ALL), xmmword_224676690);
        v318 = (v439 & 1) == 0 && ((v462 | v296) & 1) == 0;
        if ((v442 & 1) == 0 && v318)
        {
          v570 = v500;
          v571 = v501;
          v572 = v502;
          v569 = v499;
          v568 = v498;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_2246766A0;
          v564 = (__int128)xmmword_2246766B0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 2, 5, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2A0000006ALL), xmmword_2246766B0);
        }
      }
      v319 = (v453 & 1) == 0 && ((v462 | v296) & 1) == 0;
      if (v319 && (v449 & 1) == 0)
      {
        v565 = v500;
        v566 = v501;
        v567 = v502;
        v564 = v499;
        v563 = v498;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_2246766C0;
        v559 = (__int128)xmmword_2246766D0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 2, 5, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2A0000006ALL), xmmword_2246766D0);
      }
    }
    if (((v297 | v473) & 1) == 0)
    {
      v560 = v500;
      v561 = v501;
      v562 = v502;
      v559 = v499;
      v558 = v498;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_2246766E0;
      v554 = (__int128)xmmword_2246766F0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 2, 5, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xAA0000006ALL), xmmword_2246766F0);
      v320 = (v435 & 1) == 0 && ((v296 | v458) & 1) == 0;
      if ((v439 & 1) == 0 && v320)
      {
        v555 = v500;
        v556 = v501;
        v557 = v502;
        v554 = v499;
        v553 = v498;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224676700;
        v549 = (__int128)xmmword_224676710;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 2, 5, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2A0000006ALL), xmmword_224676710);
      }
    }
    v321 = (v449 & 1) == 0 && ((v296 | v458) & 1) == 0;
    if (v321 && (v316 & 1) == 0)
    {
      v550 = v500;
      v551 = v501;
      v552 = v502;
      v549 = v499;
      v548 = v498;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224676720;
      v544 = xmmword_224676730;
      *(_QWORD *)&v533 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 2, 5, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x2A0000006ALL), xmmword_224676730);
    }
  }
  v322 = *((_DWORD *)v226 + 36);
  if (**v479)
  {
    v323 = *((_DWORD *)v226 + 100);
    v324 = *((_DWORD *)v226 + 44);
    v325 = *((_DWORD *)v226 + 108);
    v326 = *((_DWORD *)v226 + 52);
  }
  else
  {
    if ((v322 & 0x10000000) != 0)
      v327 = 0x40000000;
    else
      v327 = 0x80000000;
    if ((v322 & 0x20000000) != 0)
      v322 = v327;
    else
      v322 &= 0xCFFFFFFF;
    v328 = *((_DWORD *)v226 + 100);
    if ((v328 & 0x10000000) != 0)
      v329 = 0x40000000;
    else
      v329 = 0x80000000;
    if ((v328 & 0x20000000) != 0)
      v323 = v329;
    else
      v323 = v328 & 0xCFFFFFFF;
    v330 = *((_DWORD *)v226 + 44);
    if ((v330 & 0x10000000) != 0)
      v331 = 0x40000000;
    else
      v331 = 0x80000000;
    if ((v330 & 0x20000000) != 0)
      v324 = v331;
    else
      v324 = v330 & 0xCFFFFFFF;
    v332 = *((_DWORD *)v226 + 108);
    if ((v332 & 0x10000000) != 0)
      v333 = 0x40000000;
    else
      v333 = 0x80000000;
    if ((v332 & 0x20000000) != 0)
      v325 = v333;
    else
      v325 = v332 & 0xCFFFFFFF;
    v334 = *((_DWORD *)v226 + 52);
    if ((v334 & 0x10000000) != 0)
      v326 = 0x40000000;
    else
      v326 = 0x80000000;
    if ((v334 & 0x20000000) == 0)
      v326 = v334 & 0xCFFFFFFF;
  }
  v335 = v324 >> 30;
  v443 = v322 >> 30;
  v336 = v323 >> 30;
  v454 = v326 >> 30;
  if ((v306 & 0x40000000) != 0)
  {
    v520 = v500;
    v521 = v501;
    v522 = v502;
    v519 = v499;
    v518 = v498;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224676740;
    v514 = (__int128)xmmword_224676750;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 3, 5, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xAB0000006BLL), xmmword_224676750);
    if ((v286 & 0x40000000) == 0)
    {
      v515 = v500;
      v516 = v501;
      v517 = v502;
      v514 = v499;
      v513 = v498;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224676760;
      v574 = (__int128)xmmword_224676770;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 3, 5, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xAB0000006BLL), xmmword_224676770);
      v337 = ((v296 | v458) & 1) == 0;
      if (((v297 | v473) & 1) == 0)
      {
        v575 = v500;
        v576 = v501;
        v577 = v502;
        v573 = v498;
        v574 = v499;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224676780;
        v569 = (__int128)xmmword_224676790;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 3, 5, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xAB0000006BLL), xmmword_224676790);
        v338 = (v435 & 1) == 0 && v337;
        if ((v439 & 1) == 0 && v338)
        {
          v570 = v500;
          v571 = v501;
          v572 = v502;
          v569 = v499;
          v568 = v498;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_2246767A0;
          v564 = (__int128)xmmword_2246767B0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 3, 5, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2B0000006BLL), xmmword_2246767B0);
        }
      }
      v339 = (v449 & 1) == 0 && v337;
      if (v339 && (v316 & 1) == 0)
      {
        v565 = v500;
        v566 = v501;
        v567 = v502;
        v564 = v499;
        v563 = v498;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_2246767C0;
        v559 = (__int128)xmmword_2246767D0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 3, 5, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2B0000006BLL), xmmword_2246767D0);
      }
    }
    if (((v473 | v336) & 1) == 0)
    {
      v560 = v500;
      v561 = v501;
      v562 = v502;
      v559 = v499;
      v558 = v498;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_2246767E0;
      v554 = (__int128)xmmword_2246767F0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 3, 5, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xAB0000006BLL), xmmword_2246767F0);
      v340 = (v443 & 1) == 0 && ((v458 | v335) & 1) == 0;
      if ((v435 & 1) == 0 && v340)
      {
        v555 = v500;
        v556 = v501;
        v557 = v502;
        v554 = v499;
        v553 = v498;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224676800;
        v549 = (__int128)xmmword_224676810;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 3, 5, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2B0000006BLL), xmmword_224676810);
      }
    }
    v341 = (v316 & 1) == 0 && ((v458 | v335) & 1) == 0;
    if (v341 && (v454 & 1) == 0)
    {
      v550 = v500;
      v551 = v501;
      v552 = v502;
      v549 = v499;
      v548 = v498;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224676820;
      v544 = xmmword_224676830;
      *(_QWORD *)&v533 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 3, 5, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x2B0000006BLL), xmmword_224676830);
    }
  }
  v342 = *((_DWORD *)v226 + 37);
  if (**v479)
  {
    v343 = *((_DWORD *)v226 + 101);
    v344 = *((_DWORD *)v226 + 45);
    v345 = *((_DWORD *)v226 + 109);
    v346 = *((_DWORD *)v226 + 53);
  }
  else
  {
    if ((v342 & 0x10000000) != 0)
      v347 = 0x40000000;
    else
      v347 = 0x80000000;
    if ((v342 & 0x20000000) != 0)
      v342 = v347;
    else
      v342 &= 0xCFFFFFFF;
    v348 = *((_DWORD *)v226 + 101);
    if ((v348 & 0x10000000) != 0)
      v349 = 0x40000000;
    else
      v349 = 0x80000000;
    if ((v348 & 0x20000000) != 0)
      v343 = v349;
    else
      v343 = v348 & 0xCFFFFFFF;
    v350 = *((_DWORD *)v226 + 45);
    if ((v350 & 0x10000000) != 0)
      v351 = 0x40000000;
    else
      v351 = 0x80000000;
    if ((v350 & 0x20000000) != 0)
      v344 = v351;
    else
      v344 = v350 & 0xCFFFFFFF;
    v352 = *((_DWORD *)v226 + 109);
    if ((v352 & 0x10000000) != 0)
      v353 = 0x40000000;
    else
      v353 = 0x80000000;
    if ((v352 & 0x20000000) != 0)
      v345 = v353;
    else
      v345 = v352 & 0xCFFFFFFF;
    v354 = *((_DWORD *)v226 + 53);
    if ((v354 & 0x10000000) != 0)
      v346 = 0x40000000;
    else
      v346 = 0x80000000;
    if ((v354 & 0x20000000) == 0)
      v346 = v354 & 0xCFFFFFFF;
  }
  v355 = v344 >> 30;
  v440 = v342 >> 30;
  v356 = v343 >> 30;
  v450 = v346 >> 30;
  if ((v325 & 0x40000000) != 0)
  {
    v520 = v500;
    v521 = v501;
    v522 = v502;
    v519 = v499;
    v518 = v498;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224676840;
    v514 = (__int128)xmmword_224676850;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 4, 5, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xAC0000006CLL), xmmword_224676850);
    if ((v306 & 0x40000000) == 0)
    {
      v515 = v500;
      v516 = v501;
      v517 = v502;
      v514 = v499;
      v513 = v498;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224676860;
      v574 = (__int128)xmmword_224676870;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 4, 5, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xAC0000006CLL), xmmword_224676870);
      if (((v473 | v336) & 1) == 0)
      {
        v575 = v500;
        v576 = v501;
        v577 = v502;
        v573 = v498;
        v574 = v499;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224676880;
        v569 = (__int128)xmmword_224676890;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 4, 5, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xAC0000006CLL), xmmword_224676890);
        v357 = (v443 & 1) == 0 && ((v458 | v335) & 1) == 0;
        if ((v435 & 1) == 0 && v357)
        {
          v570 = v500;
          v571 = v501;
          v572 = v502;
          v569 = v499;
          v568 = v498;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_2246768A0;
          v564 = (__int128)xmmword_2246768B0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 4, 5, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2C0000006CLL), xmmword_2246768B0);
        }
      }
      v358 = (v316 & 1) == 0 && ((v458 | v335) & 1) == 0;
      if (v358 && (v454 & 1) == 0)
      {
        v565 = v500;
        v566 = v501;
        v567 = v502;
        v564 = v499;
        v563 = v498;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_2246768C0;
        v559 = (__int128)xmmword_2246768D0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 4, 5, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2C0000006CLL), xmmword_2246768D0);
      }
    }
    if (((v336 | v356) & 1) == 0)
    {
      v560 = v500;
      v561 = v501;
      v562 = v502;
      v559 = v499;
      v558 = v498;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_2246768E0;
      v554 = (__int128)xmmword_2246768F0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 4, 5, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xAC0000006CLL), xmmword_2246768F0);
      v359 = (v440 & 1) == 0 && ((v335 | v355) & 1) == 0;
      if ((v443 & 1) == 0 && v359)
      {
        v555 = v500;
        v556 = v501;
        v557 = v502;
        v554 = v499;
        v553 = v498;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224676900;
        v549 = (__int128)xmmword_224676910;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 4, 5, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2C0000006CLL), xmmword_224676910);
      }
    }
    v360 = (v454 & 1) == 0 && ((v335 | v355) & 1) == 0;
    if (v360 && (v450 & 1) == 0)
    {
      v550 = v500;
      v551 = v501;
      v552 = v502;
      v549 = v499;
      v548 = v498;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224676920;
      v544 = xmmword_224676930;
      *(_QWORD *)&v533 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 4, 5, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x2C0000006CLL), xmmword_224676930);
    }
  }
  v361 = *((_DWORD *)v226 + 38);
  if (**v479)
  {
    v362 = *((_DWORD *)v226 + 102);
    v363 = *((_DWORD *)v226 + 46);
    v474 = *((_DWORD *)v226 + 110);
    v364 = *((_DWORD *)v226 + 54);
  }
  else
  {
    if ((v361 & 0x10000000) != 0)
      v365 = 0x40000000;
    else
      v365 = 0x80000000;
    if ((v361 & 0x20000000) != 0)
      v361 = v365;
    else
      v361 &= 0xCFFFFFFF;
    v366 = *((_DWORD *)v226 + 102);
    if ((v366 & 0x10000000) != 0)
      v367 = 0x40000000;
    else
      v367 = 0x80000000;
    if ((v366 & 0x20000000) != 0)
      v362 = v367;
    else
      v362 = v366 & 0xCFFFFFFF;
    v368 = *((_DWORD *)v226 + 46);
    if ((v368 & 0x10000000) != 0)
      v369 = 0x40000000;
    else
      v369 = 0x80000000;
    if ((v368 & 0x20000000) != 0)
      v363 = v369;
    else
      v363 = v368 & 0xCFFFFFFF;
    v370 = *((_DWORD *)v226 + 110);
    if ((v370 & 0x10000000) != 0)
      v371 = 0x40000000;
    else
      v371 = 0x80000000;
    if ((v370 & 0x20000000) != 0)
      v372 = v371;
    else
      v372 = v370 & 0xCFFFFFFF;
    v474 = v372;
    v373 = *((_DWORD *)v226 + 54);
    if ((v373 & 0x10000000) != 0)
      v364 = 0x40000000;
    else
      v364 = 0x80000000;
    if ((v373 & 0x20000000) == 0)
      v364 = v373 & 0xCFFFFFFF;
  }
  v436 = v361 >> 30;
  v463 = v363 >> 30;
  v468 = v362 >> 30;
  v459 = v364 >> 30;
  v535 = v500;
  v536 = v501;
  v537 = v502;
  v534 = v499;
  v533 = v498;
  if ((v345 & 0x40000000) != 0)
  {
    v520 = v500;
    v521 = v501;
    v522 = v502;
    v519 = v499;
    v518 = v498;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224676940;
    v514 = (__int128)xmmword_224676950;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 5, 5, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xAD0000006DLL), xmmword_224676950);
    if ((v325 & 0x40000000) == 0)
    {
      v515 = v500;
      v516 = v501;
      v517 = v502;
      v514 = v499;
      v513 = v498;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224676960;
      v574 = (__int128)xmmword_224676970;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 5, 5, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xAD0000006DLL), xmmword_224676970);
      if (((v336 | v356) & 1) == 0)
      {
        v575 = v500;
        v576 = v501;
        v577 = v502;
        v573 = v498;
        v574 = v499;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224676980;
        v569 = (__int128)xmmword_224676990;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 5, 5, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xAD0000006DLL), xmmword_224676990);
        v374 = (v440 & 1) == 0 && ((v335 | v355) & 1) == 0;
        if ((v443 & 1) == 0 && v374)
        {
          v570 = v500;
          v571 = v501;
          v572 = v502;
          v569 = v499;
          v568 = v498;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_2246769A0;
          v564 = (__int128)xmmword_2246769B0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 5, 5, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2D0000006DLL), xmmword_2246769B0);
        }
      }
      v375 = (v454 & 1) == 0 && ((v335 | v355) & 1) == 0;
      if (v375 && (v450 & 1) == 0)
      {
        v565 = v535;
        v566 = v536;
        v567 = v537;
        v564 = v534;
        v563 = v533;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_2246769C0;
        v559 = (__int128)xmmword_2246769D0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 5, 5, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2D0000006DLL), xmmword_2246769D0);
      }
    }
    if (((v356 | v468) & 1) == 0)
    {
      v560 = v535;
      v561 = v536;
      v562 = v537;
      v559 = v534;
      v558 = v533;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_2246769E0;
      v554 = (__int128)xmmword_2246769F0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 5, 5, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xAD0000006DLL), xmmword_2246769F0);
      v376 = (v436 & 1) == 0 && ((v355 | v463) & 1) == 0;
      if ((v440 & 1) == 0 && v376)
      {
        v555 = v535;
        v556 = v536;
        v557 = v537;
        v554 = v534;
        v553 = v533;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224676A00;
        v549 = (__int128)xmmword_224676A10;
        *(_QWORD *)&v538 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 5, 5, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x2D0000006DLL), xmmword_224676A10);
      }
    }
    v377 = (v450 & 1) == 0 && ((v355 | v463) & 1) == 0;
    if (v377 && (v459 & 1) == 0)
    {
      v550 = v535;
      v551 = v536;
      v552 = v537;
      v549 = v534;
      v548 = v533;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224676A20;
      v544 = xmmword_224676A30;
      *(_QWORD *)&v528 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 5, 5, 1, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v528, COERCE_DOUBLE(0x2D0000006DLL), xmmword_224676A30);
    }
  }
  v530 = v500;
  v531 = v501;
  v532 = v502;
  v529 = v499;
  v528 = v498;
  v378 = *((_DWORD *)v226 + 39);
  if (**v479)
  {
    v379 = *((_DWORD *)v226 + 103);
    v380 = *((_DWORD *)v226 + 47);
    v381 = *((_DWORD *)v226 + 111);
    v382 = *((_DWORD *)v226 + 55);
  }
  else
  {
    if ((v378 & 0x10000000) != 0)
      v383 = 0x40000000;
    else
      v383 = 0x80000000;
    if ((v378 & 0x20000000) != 0)
      v378 = v383;
    else
      v378 &= 0xCFFFFFFF;
    v384 = *((_DWORD *)v226 + 103);
    if ((v384 & 0x10000000) != 0)
      v385 = 0x40000000;
    else
      v385 = 0x80000000;
    if ((v384 & 0x20000000) != 0)
      v379 = v385;
    else
      v379 = v384 & 0xCFFFFFFF;
    v386 = *((_DWORD *)v226 + 47);
    if ((v386 & 0x10000000) != 0)
      v387 = 0x40000000;
    else
      v387 = 0x80000000;
    if ((v386 & 0x20000000) != 0)
      v380 = v387;
    else
      v380 = v386 & 0xCFFFFFFF;
    v388 = *((_DWORD *)v226 + 111);
    if ((v388 & 0x10000000) != 0)
      v389 = 0x40000000;
    else
      v389 = 0x80000000;
    if ((v388 & 0x20000000) != 0)
      v381 = v389;
    else
      v381 = v388 & 0xCFFFFFFF;
    v390 = *((_DWORD *)v226 + 55);
    if ((v390 & 0x10000000) != 0)
      v382 = 0x40000000;
    else
      v382 = 0x80000000;
    if ((v390 & 0x20000000) == 0)
      v382 = v390 & 0xCFFFFFFF;
  }
  v391 = v380 >> 30;
  v480 = v378 >> 30;
  v392 = v379 >> 30;
  v393 = v382 >> 30;
  v540 = v500;
  v541 = v501;
  v542 = v502;
  v539 = v499;
  v538 = v498;
  if ((v474 & 0x40000000) != 0)
  {
    v520 = v500;
    v521 = v501;
    v522 = v502;
    v519 = v499;
    v518 = v498;
    *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
    v513 = xmmword_224676A40;
    v514 = (__int128)xmmword_224676A50;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 6, 5, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xAE0000006ELL), xmmword_224676A50);
    if ((v345 & 0x40000000) == 0)
    {
      v515 = v500;
      v516 = v501;
      v517 = v502;
      v514 = v499;
      v513 = v498;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224676A60;
      v574 = (__int128)xmmword_224676A70;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 6, 5, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xAE0000006ELL), xmmword_224676A70);
      v394 = ((v355 | v463) & 1) == 0;
      if (((v356 | v468) & 1) == 0)
      {
        v575 = v500;
        v576 = v501;
        v577 = v502;
        v573 = v498;
        v574 = v499;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224676A80;
        v569 = (__int128)xmmword_224676A90;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 6, 5, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xAE0000006ELL), xmmword_224676A90);
        v395 = (v436 & 1) == 0 && v394;
        if ((v440 & 1) == 0 && v395)
        {
          v570 = v500;
          v571 = v501;
          v572 = v502;
          v569 = v499;
          v568 = v498;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_224676AA0;
          v564 = (__int128)xmmword_224676AB0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 6, 5, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2E0000006ELL), xmmword_224676AB0);
        }
      }
      v396 = (v450 & 1) == 0 && v394;
      if (v396 && (v459 & 1) == 0)
      {
        v565 = v540;
        v566 = v541;
        v567 = v542;
        v564 = v539;
        v563 = v538;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_224676AC0;
        v559 = (__int128)xmmword_224676AD0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 6, 5, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2E0000006ELL), xmmword_224676AD0);
      }
    }
    if (((v468 | v392) & 1) == 0)
    {
      v560 = v540;
      v561 = v541;
      v562 = v542;
      v559 = v539;
      v558 = v538;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v553 = xmmword_224676AE0;
      v554 = (__int128)xmmword_224676AF0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 6, 5, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0xAE0000006ELL), xmmword_224676AF0);
      v397 = (v480 & 1) == 0 && ((v463 | v391) & 1) == 0;
      if ((v436 & 1) == 0 && v397)
      {
        v555 = v540;
        v556 = v541;
        v557 = v542;
        v554 = v539;
        v553 = v538;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_224676B00;
        v549 = (__int128)xmmword_224676B10;
        *(_QWORD *)&v579[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 6, 5, 1, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)v579, COERCE_DOUBLE(0x2E0000006ELL), xmmword_224676B10);
      }
    }
    v398 = (v459 & 1) == 0 && ((v463 | v391) & 1) == 0;
    if (v398 && (v393 & 1) == 0)
    {
      v550 = v540;
      v551 = v541;
      v552 = v542;
      v549 = v539;
      v548 = v538;
      *(_QWORD *)&v579[0] = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_224676B20;
      v544 = xmmword_224676B30;
      v580[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 6, 5, 1, (uint64_t)v579, (uint64_t)&v543, (uint64_t)v580, COERCE_DOUBLE(0x2E0000006ELL), xmmword_224676B30);
    }
  }
  v399 = *(unsigned int *)(v483 + 88);
  if ((v399 & 0x80000000) != 0)
  {
    v402 = *v477;
    v403 = *(_DWORD *)(v487 + 408);
    v404 = **v477;
    if (**v477)
      goto LABEL_1060;
  }
  else
  {
    v400 = *(_QWORD *)(v487 + 2328);
    if (v399 >= (*(_QWORD *)(v487 + 2336) - v400) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v400 = *(_QWORD *)(v487 + 2328);
    }
    v401 = v400 + (v399 << 11);
    v402 = *v477;
    v403 = *(_DWORD *)(v401 + 128);
    v404 = **v477;
    if (**v477)
    {
LABEL_1060:
      v405 = *(unsigned int *)(v483 + 88);
      if ((v405 & 0x80000000) == 0)
        goto LABEL_1061;
LABEL_1080:
      v407 = *(_DWORD *)(v487 + 664);
      if (v404)
        goto LABEL_1065;
      goto LABEL_1081;
    }
  }
  if ((v403 & 0x10000000) != 0)
    v412 = 0x40000000;
  else
    v412 = 0x80000000;
  if ((v403 & 0x20000000) != 0)
    v403 = v412;
  else
    v403 &= 0xCFFFFFFF;
  v405 = *(unsigned int *)(v483 + 88);
  if ((v405 & 0x80000000) != 0)
    goto LABEL_1080;
LABEL_1061:
  v406 = *(_QWORD *)(v487 + 2328);
  if (v405 >= (*(_QWORD *)(v487 + 2336) - v406) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v406 = *(_QWORD *)(v487 + 2328);
    v402 = *v477;
    v404 = **v477;
  }
  v407 = *(_DWORD *)(v406 + (v405 << 11) + 384);
  if (v404)
  {
LABEL_1065:
    v408 = *(unsigned int *)(v483 + 88);
    if ((v408 & 0x80000000) == 0)
      goto LABEL_1066;
LABEL_1088:
    v410 = *(_DWORD *)(v487 + 440);
    if (v404)
      goto LABEL_1070;
    goto LABEL_1089;
  }
LABEL_1081:
  if ((v407 & 0x10000000) != 0)
    v413 = 0x40000000;
  else
    v413 = 0x80000000;
  if ((v407 & 0x20000000) != 0)
    v407 = v413;
  else
    v407 &= 0xCFFFFFFF;
  v408 = *(unsigned int *)(v483 + 88);
  if ((v408 & 0x80000000) != 0)
    goto LABEL_1088;
LABEL_1066:
  v409 = *(_QWORD *)(v487 + 2328);
  if (v408 >= (*(_QWORD *)(v487 + 2336) - v409) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v409 = *(_QWORD *)(v487 + 2328);
    v402 = *v477;
    v404 = **v477;
  }
  v410 = *(_DWORD *)(v409 + (v408 << 11) + 160);
  if (v404)
  {
LABEL_1070:
    v411 = *(unsigned int *)(v483 + 88);
    if ((v411 & 0x80000000) != 0)
      goto LABEL_1139;
    goto LABEL_1096;
  }
LABEL_1089:
  if ((v410 & 0x10000000) != 0)
    v414 = 0x40000000;
  else
    v414 = 0x80000000;
  if ((v410 & 0x20000000) != 0)
    v410 = v414;
  else
    v410 &= 0xCFFFFFFF;
  v411 = *(unsigned int *)(v483 + 88);
  if ((v411 & 0x80000000) != 0)
    goto LABEL_1139;
LABEL_1096:
  v415 = *(_QWORD *)(v487 + 2328);
  v416 = (*(_QWORD *)(v487 + 2336) - v415) >> 11;
  if (v416 > v411)
    goto LABEL_1100;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v402 = *v477;
  v411 = *(unsigned int *)(v483 + 88);
  if ((v411 & 0x80000000) != 0)
  {
LABEL_1139:
    v417 = *(_DWORD *)(v487 + 472);
    if (*v402)
      goto LABEL_1110;
    goto LABEL_1104;
  }
  v415 = *(_QWORD *)(v487 + 2328);
  v416 = (*(_QWORD *)(v487 + 2336) - v415) >> 11;
LABEL_1100:
  if (v416 <= v411)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v415 = *(_QWORD *)(v487 + 2328);
    v402 = *v477;
  }
  v417 = *(_DWORD *)(v415 + (v411 << 11) + 192);
  if (!*v402)
  {
LABEL_1104:
    if ((v417 & 0x10000000) != 0)
      v418 = 0x40000000;
    else
      v418 = 0x80000000;
    if ((v417 & 0x20000000) != 0)
      v417 = v418;
    else
      v417 &= 0xCFFFFFFF;
  }
LABEL_1110:
  v545 = v530;
  v546 = v531;
  v547 = v532;
  v544 = (float32x4_t)v529;
  v543 = v528;
  if ((v381 & 0x40000000) != 0)
  {
    v520 = v530;
    v521 = v531;
    v522 = v532;
    v519 = v529;
    v518 = v528;
    *(_QWORD *)&v573 = 0x161616160D0D0D0DLL;
    v513 = xmmword_224676B40;
    v514 = (__int128)xmmword_224676B50;
    *(_QWORD *)&v568 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v518, 7, 5, 1, (uint64_t)&v573, (uint64_t)&v513, (uint64_t)&v568, COERCE_DOUBLE(0xAF0000006FLL), xmmword_224676B50);
    if ((v474 & 0x40000000) == 0)
    {
      v515 = v530;
      v516 = v531;
      v517 = v532;
      v514 = v529;
      v513 = v528;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_224676B60;
      v574 = (__int128)xmmword_224676B70;
      *(_QWORD *)&v563 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v513, 7, 5, 1, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0xAF0000006FLL), xmmword_224676B70);
      if (((v468 | v392) & 1) == 0)
      {
        v575 = v530;
        v576 = v531;
        v577 = v532;
        v573 = v528;
        v574 = v529;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_224676B80;
        v569 = (__int128)xmmword_224676B90;
        *(_QWORD *)&v558 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v573, 7, 5, 1, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xAF0000006FLL), xmmword_224676B90);
        v419 = (v480 & 1) == 0 && ((v463 | v391) & 1) == 0;
        if ((v436 & 1) == 0 && v419)
        {
          v570 = v530;
          v571 = v531;
          v572 = v532;
          v569 = v529;
          v568 = v528;
          *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
          v563 = xmmword_224676BA0;
          v564 = (__int128)xmmword_224676BB0;
          *(_QWORD *)&v553 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v568, 7, 5, 1, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x2F0000006FLL), xmmword_224676BB0);
        }
      }
      v420 = (v459 & 1) == 0 && ((v463 | v391) & 1) == 0;
      if (v420 && (v393 & 1) == 0)
      {
        v565 = v545;
        v566 = v546;
        v567 = v547;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v564 = (__int128)v544;
        v563 = v543;
        v558 = xmmword_224676BC0;
        v559 = (__int128)xmmword_224676BD0;
        *(_QWORD *)&v548 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v563, 7, 5, 1, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x2F0000006FLL), xmmword_224676BD0);
      }
    }
    v421 = (v410 & 0x40000000 | v391 & 1) == 0;
    if (!(v407 & 0x40000000 | v392 & 1))
    {
      v560 = v545;
      v561 = v546;
      v562 = v547;
      *(_QWORD *)&v548 = 0x16160D0D16160D0DLL;
      v559 = (__int128)v544;
      v558 = v543;
      v553 = xmmword_224676BE0;
      v554 = (__int128)xmmword_224676BF0;
      *(_QWORD *)&v579[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v558, 7, 5, 1, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)v579, COERCE_DOUBLE(0xAF0000006FLL), xmmword_224676BF0);
      v422 = (v403 & 0x40000000) == 0 && v421;
      if ((v480 & 1) == 0 && v422)
      {
        v555 = v545;
        v556 = v546;
        v557 = v547;
        *(_QWORD *)&v579[0] = 0x161616160D0D0D0DLL;
        v554 = (__int128)v544;
        v553 = v543;
        v548 = xmmword_224676C00;
        v549 = (__int128)xmmword_224676C10;
        v580[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v553, 7, 5, 1, (uint64_t)v579, (uint64_t)&v548, (uint64_t)v580, COERCE_DOUBLE(0x2F0000006FLL), xmmword_224676C10);
      }
    }
    v423 = (v393 & 1) == 0 && v421;
    if (v423 && (v417 & 0x40000000) == 0)
    {
      v550 = v545;
      v551 = v546;
      v552 = v547;
      v580[0] = 0x16160D0D16160D0DLL;
      v549 = (__int128)v544;
      v548 = v543;
      v579[0] = xmmword_224676C20;
      v579[1] = xmmword_224676C30;
      v578 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v548, 7, 5, 1, (uint64_t)v580, (uint64_t)v579, (uint64_t)&v578, COERCE_DOUBLE(0x2F0000006FLL), xmmword_224676C30);
    }
  }
  v513 = v445;
  *(_QWORD *)&v514 = v226;
  *(_QWORD *)&v573 = v487;
  *((_QWORD *)&v573 + 1) = v483;
  *(_QWORD *)&v574 = v477;
  v522 = v492;
  v521 = v491;
  v520 = v490;
  v518 = v488;
  v519 = v489;
  return sub_223DBF10C((unsigned __int8 ***)&v513, &v573, &v518);
}

unint64_t sub_223DBF10C(unsigned __int8 ***a1, _QWORD *a2, __int128 *a3)
{
  _QWORD *v4;
  unsigned __int8 **v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  _BYTE **v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  _BYTE **v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  _BYTE **v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  _BYTE **v51;
  unint64_t v52;
  uint64_t v53;
  unsigned int v54;
  __int128 *v55;
  unsigned int v56;
  unsigned int v57;
  _BYTE *v58;
  unsigned int v59;
  _QWORD *v60;
  uint64_t v61;
  _BYTE **v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  _BYTE *v68;
  unsigned int v69;
  _QWORD *v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  __int128 v91;
  __int128 v92;
  _BOOL4 v93;
  _BOOL4 v94;
  _BOOL4 v95;
  _BOOL4 v96;
  _BOOL4 v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  int v110;
  _BOOL4 v111;
  _BOOL4 v112;
  _BOOL4 v113;
  _BOOL4 v114;
  _BOOL4 v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  _BOOL4 v130;
  _BOOL4 v131;
  _BOOL4 v132;
  _BOOL4 v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  _BOOL4 v148;
  _BOOL4 v149;
  _BOOL4 v150;
  _BOOL4 v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  _BOOL4 v167;
  _BOOL4 v168;
  _BOOL4 v169;
  _BOOL4 v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  _BOOL4 v184;
  _BOOL4 v185;
  _BOOL4 v186;
  _BOOL4 v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  int v200;
  uint64_t v201;
  unsigned int v202;
  unsigned int v203;
  _BOOL4 v204;
  _BOOL4 v205;
  _BOOL4 v206;
  _BOOL4 v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _BYTE *v211;
  unsigned int v212;
  int v213;
  unint64_t v214;
  uint64_t v215;
  unsigned int v216;
  unint64_t v217;
  uint64_t v218;
  unsigned int v219;
  unint64_t v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  uint64_t v224;
  unint64_t v225;
  unsigned int v226;
  unsigned int v227;
  _BOOL4 v228;
  _BOOL4 v229;
  _BOOL4 v230;
  _BOOL4 v231;
  unsigned __int8 **v232;
  uint64_t v233;
  unsigned int v234;
  unint64_t v235;
  uint64_t v236;
  unsigned int *v237;
  _BYTE *v238;
  unsigned int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unint64_t v250;
  uint64_t v251;
  unsigned int v252;
  unint64_t v253;
  uint64_t v254;
  unsigned int v255;
  unint64_t v256;
  uint64_t v257;
  unsigned int v258;
  unint64_t v259;
  uint64_t v260;
  unsigned int v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unint64_t v274;
  uint64_t v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  _BOOL4 v281;
  _BOOL4 v282;
  _BOOL4 v283;
  _BOOL4 v284;
  _BOOL4 v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unint64_t v289;
  uint64_t v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  _BOOL4 v294;
  _BOOL4 v295;
  _BOOL4 v296;
  _BOOL4 v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unint64_t v301;
  uint64_t v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  _BOOL4 v308;
  _BOOL4 v309;
  _BOOL4 v310;
  _BOOL4 v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unint64_t v315;
  uint64_t v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  _BOOL4 v320;
  _BOOL4 v321;
  _BOOL4 v322;
  _BOOL4 v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unint64_t v327;
  uint64_t v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  _BOOL4 v332;
  _BOOL4 v333;
  _BOOL4 v334;
  _BOOL4 v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  unint64_t v340;
  uint64_t v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  _BOOL4 v345;
  _BOOL4 v346;
  _BOOL4 v347;
  _BOOL4 v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unint64_t v353;
  uint64_t v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  _BOOL4 v358;
  _BOOL4 v359;
  _BOOL4 v360;
  _BOOL4 v361;
  unint64_t v362;
  uint64_t v363;
  uint64_t v364;
  _BYTE *v365;
  unsigned int v366;
  int v367;
  unint64_t v368;
  uint64_t v369;
  unsigned int v370;
  unint64_t v371;
  uint64_t v372;
  unsigned int v373;
  unint64_t v374;
  unsigned int v375;
  int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  int v386;
  unsigned int v387;
  int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  int v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  int v410;
  unsigned int v411;
  int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  int v416;
  unsigned int v417;
  int v418;
  unsigned int v419;
  int v420;
  unsigned int v421;
  unsigned int v422;
  int v423;
  unsigned int v424;
  int v425;
  unsigned int v426;
  int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unint64_t v432;
  uint64_t v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  _BOOL4 v437;
  _BOOL4 v438;
  _BOOL4 v439;
  _BOOL4 v440;
  _BOOL4 v441;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  uint64_t *v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  __int128 v459;
  unsigned int v460;
  unsigned int v461;
  int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned __int8 **v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  uint64_t v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  uint64_t v506;
  unsigned __int8 **v507;
  _BYTE **v508;
  unsigned int v509;
  unsigned int v510;
  unsigned int *v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  float32x4_t v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  __int128 v578;
  __int128 v579;
  __int128 v580;
  __int128 v581;
  __int128 v582;
  __int128 v583;
  __int128 v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  __int128 v591;
  __int128 v592;
  __int128 v593;
  __int128 v594;
  __int128 v595;
  __int128 v596;
  __int128 v597;
  __int128 v598;
  __int128 v599;
  __int128 v600;
  __int128 v601;
  uint64_t v602;
  _OWORD v603[2];
  _QWORD v604[3];

  v4 = a2;
  v604[1] = *MEMORY[0x24BDAC8D0];
  v5 = a1[2];
  v508 = *a1;
  v6 = *((_DWORD *)v5 + 40);
  v7 = ***a1;
  if (***a1)
  {
    v8 = *((_DWORD *)v5 + 104);
    v9 = *((_DWORD *)v5 + 48);
    v10 = *((_DWORD *)v5 + 112);
    v11 = *((_DWORD *)v5 + 56);
    v12 = *a2;
    v492 = v10;
    if ((v10 & 0x40000000) == 0)
    {
LABEL_3:
      v502 = v12;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = 0;
      goto LABEL_91;
    }
  }
  else
  {
    if ((v6 & 0x20000000) != 0)
      v6 *= 4;
    v18 = *((_DWORD *)v5 + 104);
    if ((v18 & 0x20000000) != 0)
      v8 = 4 * v18;
    else
      v8 = *((_DWORD *)v5 + 104);
    v19 = *((_DWORD *)v5 + 48);
    if ((v19 & 0x20000000) != 0)
      v9 = 4 * v19;
    else
      v9 = *((_DWORD *)v5 + 48);
    v20 = *((_DWORD *)v5 + 112);
    if ((v20 & 0x20000000) != 0)
      v10 = 4 * v20;
    else
      v10 = *((_DWORD *)v5 + 112);
    v21 = *((_DWORD *)v5 + 56);
    if ((v21 & 0x10000000) != 0)
      v22 = 0x40000000;
    else
      v22 = 0x80000000;
    if ((v21 & 0x20000000) != 0)
      v11 = v22;
    else
      v11 = v21 & 0xCFFFFFFF;
    v12 = *a2;
    v492 = v10;
    if ((v10 & 0x40000000) == 0)
      goto LABEL_3;
  }
  v23 = (_BYTE **)a2[2];
  v24 = *(unsigned int *)(a2[1] + 16);
  v509 = v8;
  if ((v24 & 0x80000000) != 0)
  {
    v26 = v12 + 280;
  }
  else
  {
    v25 = *(_QWORD *)(v12 + 2328);
    if (v24 >= (*(_QWORD *)(v12 + 2336) - v25) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v25 = *(_QWORD *)(v12 + 2328);
      v10 = v492;
      v8 = v509;
    }
    v26 = v25 + (v24 << 11);
  }
  v27 = *(_DWORD *)(v26 + 188);
  v28 = v27 & 0xCFFFFFFF;
  if ((v27 & 0x10000000) != 0)
    v29 = 0x40000000;
  else
    v29 = 0x80000000;
  if ((v27 & 0x20000000) != 0)
    v28 = v29;
  if (**v23)
    v30 = v27;
  else
    v30 = v28;
  v31 = *v4;
  v32 = (_BYTE **)v4[2];
  v33 = *(unsigned int *)(v4[1] + 16);
  if ((v33 & 0x80000000) != 0)
  {
    v35 = v31 + 280;
  }
  else
  {
    v34 = *(_QWORD *)(v31 + 2328);
    if (v33 >= (*(_QWORD *)(v31 + 2336) - v34) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v34 = *(_QWORD *)(v31 + 2328);
      v10 = v492;
      v8 = v509;
    }
    v35 = v34 + (v33 << 11);
  }
  v36 = *(_DWORD *)(v35 + 444);
  v37 = v36 & 0xCFFFFFFF;
  if ((v36 & 0x10000000) != 0)
    v38 = 0x40000000;
  else
    v38 = 0x80000000;
  if ((v36 & 0x20000000) != 0)
    v37 = v38;
  if (**v32)
    v39 = v36;
  else
    v39 = v37;
  v40 = *v4;
  v41 = (_BYTE **)v4[2];
  v42 = *(unsigned int *)(v4[1] + 16);
  v505 = v30;
  if ((v42 & 0x80000000) != 0)
  {
    v45 = v40 + 280;
  }
  else
  {
    v43 = *(_QWORD *)(v40 + 2328);
    if (v42 >= (*(_QWORD *)(v40 + 2336) - v43) >> 11)
    {
      v44 = v39;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v43 = *(_QWORD *)(v40 + 2328);
      v10 = v492;
      v8 = v509;
      v39 = v44;
    }
    v45 = v43 + (v42 << 11);
  }
  v46 = *(_DWORD *)(v45 + 220);
  v47 = v46 & 0xCFFFFFFF;
  if ((v46 & 0x10000000) != 0)
    v48 = 0x40000000;
  else
    v48 = 0x80000000;
  if ((v46 & 0x20000000) != 0)
    v47 = v48;
  if (**v41)
    v49 = v46;
  else
    v49 = v47;
  v50 = *v4;
  v51 = (_BYTE **)v4[2];
  v52 = *(unsigned int *)(v4[1] + 16);
  if ((v52 & 0x80000000) != 0)
  {
    v55 = a3;
    v56 = v11;
    v57 = v9;
    v68 = *v51;
    v59 = *(_DWORD *)(v50 + 756);
    if (*v68)
      goto LABEL_69;
  }
  else
  {
    v53 = *(_QWORD *)(v50 + 2328);
    if (v52 >= (*(_QWORD *)(v50 + 2336) - v53) >> 11)
    {
      v54 = v39;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v53 = *(_QWORD *)(v50 + 2328);
      v10 = v492;
      v8 = v509;
      v39 = v54;
    }
    v55 = a3;
    v56 = v11;
    v57 = v9;
    v58 = *v51;
    v59 = *(_DWORD *)(v53 + (v52 << 11) + 476);
    if (*v58)
    {
LABEL_69:
      v60 = v4;
      v61 = *v4;
      v62 = (_BYTE **)v60[2];
      v63 = v60;
      v64 = *(unsigned int *)(v60[1] + 16);
      if ((v64 & 0x80000000) == 0)
        goto LABEL_70;
LABEL_82:
      v67 = v61 + 280;
      goto LABEL_83;
    }
  }
  if ((v59 & 0x10000000) != 0)
    v69 = 0x40000000;
  else
    v69 = 0x80000000;
  if ((v59 & 0x20000000) != 0)
    v59 = v69;
  else
    v59 &= 0xCFFFFFFF;
  v70 = v4;
  v61 = *v4;
  v62 = (_BYTE **)v70[2];
  v63 = v70;
  v64 = *(unsigned int *)(v70[1] + 16);
  if ((v64 & 0x80000000) != 0)
    goto LABEL_82;
LABEL_70:
  v65 = *(_QWORD *)(v61 + 2328);
  if (v64 >= (*(_QWORD *)(v61 + 2336) - v65) >> 11)
  {
    v503 = v49;
    v66 = v39;
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      v65 = *(_QWORD *)(v61 + 2328);
      v10 = v492;
      v8 = v509;
      v39 = v66;
      v49 = v503;
      goto LABEL_73;
    }
LABEL_1240:
    abort();
  }
LABEL_73:
  v67 = v65 + (v64 << 11);
LABEL_83:
  v17 = (v505 >> 30) & 1;
  v16 = (v39 >> 30) & 1;
  v15 = (v49 >> 30) & 1;
  v14 = (v59 >> 30) & 1;
  v71 = *(_DWORD *)(v67 + 252);
  v4 = v63;
  if (!**v62)
  {
    if ((v71 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v71 & 0x20000000) != 0)
      v71 = v72;
    else
      v71 &= 0xCFFFFFFF;
  }
  v13 = (v71 >> 30) & 1;
  v5 = a1[2];
  v502 = *v63;
  v508 = *a1;
  v7 = ***a1;
  v9 = v57;
  v11 = v56;
  a3 = v55;
LABEL_91:
  v465 = v6 >> 30;
  v506 = v4[1];
  v498 = (unsigned __int8 **)v4[2];
  v519 = a3[2];
  v520 = a3[3];
  v521 = a3[4];
  v517 = *a3;
  v518 = a3[1];
  v73 = *((_DWORD *)v5 + 41);
  v446 = v4;
  if (v7)
  {
    v74 = *((_DWORD *)v5 + 105);
    v75 = *((_DWORD *)v5 + 49);
    v485 = *((_DWORD *)v5 + 113);
    v76 = *((_DWORD *)v5 + 57);
  }
  else
  {
    if ((v73 & 0x10000000) != 0)
      v77 = 0x40000000;
    else
      v77 = 0x80000000;
    if ((v73 & 0x20000000) != 0)
      v73 = v77;
    else
      v73 &= 0xCFFFFFFF;
    v78 = *((_DWORD *)v5 + 105);
    if ((v78 & 0x10000000) != 0)
      v79 = 0x40000000;
    else
      v79 = 0x80000000;
    if ((v78 & 0x20000000) != 0)
      v74 = v79;
    else
      v74 = v78 & 0xCFFFFFFF;
    v80 = *((_DWORD *)v5 + 49);
    if ((v80 & 0x10000000) != 0)
      v81 = 0x40000000;
    else
      v81 = 0x80000000;
    if ((v80 & 0x20000000) != 0)
      v75 = v81;
    else
      v75 = v80 & 0xCFFFFFFF;
    v82 = *((_DWORD *)v5 + 113);
    if ((v82 & 0x10000000) != 0)
      v83 = 0x40000000;
    else
      v83 = 0x80000000;
    if ((v82 & 0x20000000) != 0)
      v84 = v83;
    else
      v84 = v82 & 0xCFFFFFFF;
    v485 = v84;
    v85 = *((_DWORD *)v5 + 57);
    if ((v85 & 0x10000000) != 0)
      v76 = 0x40000000;
    else
      v76 = 0x80000000;
    if ((v85 & 0x20000000) == 0)
      v76 = v85 & 0xCFFFFFFF;
  }
  v86 = v9 >> 30;
  v87 = v8 >> 30;
  v88 = v11 >> 30;
  v445 = v73 >> 30;
  v475 = v75 >> 30;
  v480 = v74 >> 30;
  v454 = v76 >> 30;
  v529 = a3[2];
  v530 = a3[3];
  v531 = a3[4];
  v527 = *a3;
  v528 = a3[1];
  if ((v10 & 0x40000000) != 0)
  {
    v89 = v17;
    v90 = v13;
    v91 = a3[3];
    v544 = a3[2];
    v545 = v91;
    v546 = a3[4];
    v92 = *a3;
    v543 = a3[1];
    v542 = v92;
    *(_QWORD *)&v597 = 0xD0D0D0D0D0D0D0DLL;
    v537 = xmmword_224676C40;
    v538 = (__int128)xmmword_224676C50;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 0, 6, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xB000000070), xmmword_224676C50);
    if (!v14)
    {
      v539 = v529;
      v540 = v530;
      v541 = v531;
      v538 = v528;
      v537 = v527;
      *(_QWORD *)&v592 = 0x4040D0D04040D0DLL;
      v597 = xmmword_224676C60;
      v598 = (__int128)xmmword_224676C70;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 0, 6, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xB000000070), xmmword_224676C70);
      v93 = (v15 | v86 & 1) == 0;
      if (!(v16 | v87 & 1))
      {
        v599 = v529;
        v600 = v530;
        v601 = v531;
        *(_QWORD *)&v587 = 0x40404040D0D0D0DLL;
        v597 = v527;
        v598 = v528;
        v592 = xmmword_224676C80;
        v593 = (__int128)xmmword_224676C90;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 0, 6, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xB000000070), xmmword_224676C90);
        v94 = (v465 & 1) == 0 && v93;
        if (!v89 && v94)
        {
          v594 = v529;
          v595 = v530;
          v596 = v531;
          v593 = v528;
          v592 = v527;
          *(_QWORD *)&v582 = 0x4040D0D04040D0DLL;
          v587 = xmmword_224676CA0;
          v588 = (__int128)xmmword_224676CB0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 0, 6, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3000000070), xmmword_224676CB0);
        }
      }
      if (v90)
        v95 = 0;
      else
        v95 = v93;
      if (v95 && (v88 & 1) == 0)
      {
        v589 = v529;
        v590 = v530;
        v591 = v531;
        *(_QWORD *)&v577 = 0x40404040D0D0D0DLL;
        v588 = v528;
        v587 = v527;
        v582 = xmmword_224676CC0;
        v583 = (__int128)xmmword_224676CD0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 0, 6, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3000000070), xmmword_224676CD0);
      }
    }
    if (((v87 | v480) & 1) == 0)
    {
      v584 = v529;
      v585 = v530;
      v586 = v531;
      v583 = v528;
      v582 = v527;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_224676CE0;
      v578 = (__int128)xmmword_224676CF0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 0, 6, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xB000000070), xmmword_224676CF0);
      v96 = (v445 & 1) == 0 && ((v86 | v475) & 1) == 0;
      if ((v465 & 1) == 0 && v96)
      {
        v579 = v529;
        v580 = v530;
        v581 = v531;
        v578 = v528;
        v577 = v527;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224676D00;
        v573 = (__int128)xmmword_224676D10;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 0, 6, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3000000070), xmmword_224676D10);
      }
    }
    v97 = (v88 & 1) == 0 && ((v86 | v475) & 1) == 0;
    v10 = v492;
    if (v97 && (v454 & 1) == 0)
    {
      v574 = v529;
      v575 = v530;
      v576 = v531;
      v573 = v528;
      v572 = v527;
      *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
      v567 = xmmword_224676D20;
      v568 = xmmword_224676D30;
      *(_QWORD *)&v557 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 0, 6, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v557, COERCE_DOUBLE(0x3000000070), xmmword_224676D30);
      v10 = v492;
    }
  }
  v98 = *((_DWORD *)v5 + 42);
  if (**v508)
  {
    v99 = *((_DWORD *)v5 + 106);
    v100 = *((_DWORD *)v5 + 50);
    v101 = *((_DWORD *)v5 + 114);
    v102 = *((_DWORD *)v5 + 58);
  }
  else
  {
    if ((v98 & 0x10000000) != 0)
      v103 = 0x40000000;
    else
      v103 = 0x80000000;
    if ((v98 & 0x20000000) != 0)
      v98 = v103;
    else
      v98 &= 0xCFFFFFFF;
    v104 = *((_DWORD *)v5 + 106);
    if ((v104 & 0x10000000) != 0)
      v105 = 0x40000000;
    else
      v105 = 0x80000000;
    if ((v104 & 0x20000000) != 0)
      v99 = v105;
    else
      v99 = v104 & 0xCFFFFFFF;
    v106 = *((_DWORD *)v5 + 50);
    if ((v106 & 0x10000000) != 0)
      v107 = 0x40000000;
    else
      v107 = 0x80000000;
    if ((v106 & 0x20000000) != 0)
      v100 = v107;
    else
      v100 = v106 & 0xCFFFFFFF;
    v108 = *((_DWORD *)v5 + 114);
    if ((v108 & 0x10000000) != 0)
      v109 = 0x40000000;
    else
      v109 = 0x80000000;
    if ((v108 & 0x20000000) != 0)
      v101 = v109;
    else
      v101 = v108 & 0xCFFFFFFF;
    v110 = *((_DWORD *)v5 + 58);
    if ((v110 & 0x10000000) != 0)
      v102 = 0x40000000;
    else
      v102 = 0x80000000;
    if ((v110 & 0x20000000) == 0)
      v102 = v110 & 0xCFFFFFFF;
  }
  v470 = v100 >> 30;
  v444 = v98 >> 30;
  v493 = v99 >> 30;
  v450 = v102 >> 30;
  if ((v485 & 0x40000000) != 0)
  {
    v111 = (v10 & 0x40000000) == 0;
    v544 = v519;
    v545 = v520;
    v546 = v521;
    v543 = v518;
    v542 = v517;
    *(_QWORD *)&v597 = 0xD0D0D0D0D0D0D0DLL;
    v537 = xmmword_224676D40;
    v538 = (__int128)xmmword_224676D50;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 1, 6, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xB100000071), xmmword_224676D50);
    if (v111)
    {
      v539 = v519;
      v540 = v520;
      v541 = v521;
      v538 = v518;
      v537 = v517;
      *(_QWORD *)&v592 = 0xD0D0D0D0D0D0D0DLL;
      v597 = xmmword_224676D60;
      v598 = (__int128)xmmword_224676D70;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 1, 6, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xB100000071), xmmword_224676D70);
      if (((v87 | v480) & 1) == 0)
      {
        v599 = v519;
        v600 = v520;
        v601 = v521;
        v597 = v517;
        v598 = v518;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224676D80;
        v593 = (__int128)xmmword_224676D90;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 1, 6, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xB100000071), xmmword_224676D90);
        v112 = (v445 & 1) == 0 && ((v86 | v475) & 1) == 0;
        if ((v465 & 1) == 0 && v112)
        {
          v594 = v519;
          v595 = v520;
          v596 = v521;
          v593 = v518;
          v592 = v517;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_224676DA0;
          v588 = (__int128)xmmword_224676DB0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 1, 6, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3100000071), xmmword_224676DB0);
        }
      }
      v113 = (v88 & 1) == 0 && ((v86 | v475) & 1) == 0;
      if (v113 && (v454 & 1) == 0)
      {
        v589 = v519;
        v590 = v520;
        v591 = v521;
        v588 = v518;
        v587 = v517;
        *(_QWORD *)&v577 = 0xD0D0D0D0D0D0D0DLL;
        v582 = xmmword_224676DC0;
        v583 = (__int128)xmmword_224676DD0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 1, 6, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3100000071), xmmword_224676DD0);
      }
    }
    if (((v480 | v493) & 1) == 0)
    {
      v584 = v519;
      v585 = v520;
      v586 = v521;
      v583 = v518;
      v582 = v517;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_224676DE0;
      v578 = (__int128)xmmword_224676DF0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 1, 6, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xB100000071), xmmword_224676DF0);
      v114 = (v444 & 1) == 0 && ((v475 | v470) & 1) == 0;
      if ((v445 & 1) == 0 && v114)
      {
        v579 = v519;
        v580 = v520;
        v581 = v521;
        v578 = v518;
        v577 = v517;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224676E00;
        v573 = (__int128)xmmword_224676E10;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 1, 6, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3100000071), xmmword_224676E10);
      }
    }
    v115 = (v454 & 1) == 0 && ((v475 | v470) & 1) == 0;
    if (v115 && (v450 & 1) == 0)
    {
      v574 = v519;
      v575 = v520;
      v576 = v521;
      v573 = v518;
      v572 = v517;
      *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
      v567 = xmmword_224676E20;
      v568 = xmmword_224676E30;
      *(_QWORD *)&v557 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 1, 6, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v557, COERCE_DOUBLE(0x3100000071), xmmword_224676E30);
    }
  }
  v116 = *((_DWORD *)v5 + 43);
  if (**v508)
  {
    v117 = *((_DWORD *)v5 + 107);
    v118 = *((_DWORD *)v5 + 51);
    v119 = *((_DWORD *)v5 + 115);
    v120 = *((_DWORD *)v5 + 59);
  }
  else
  {
    if ((v116 & 0x10000000) != 0)
      v121 = 0x40000000;
    else
      v121 = 0x80000000;
    if ((v116 & 0x20000000) != 0)
      v116 = v121;
    else
      v116 &= 0xCFFFFFFF;
    v122 = *((_DWORD *)v5 + 107);
    if ((v122 & 0x10000000) != 0)
      v123 = 0x40000000;
    else
      v123 = 0x80000000;
    if ((v122 & 0x20000000) != 0)
      v117 = v123;
    else
      v117 = v122 & 0xCFFFFFFF;
    v124 = *((_DWORD *)v5 + 51);
    if ((v124 & 0x10000000) != 0)
      v125 = 0x40000000;
    else
      v125 = 0x80000000;
    if ((v124 & 0x20000000) != 0)
      v118 = v125;
    else
      v118 = v124 & 0xCFFFFFFF;
    v126 = *((_DWORD *)v5 + 115);
    if ((v126 & 0x10000000) != 0)
      v127 = 0x40000000;
    else
      v127 = 0x80000000;
    if ((v126 & 0x20000000) != 0)
      v119 = v127;
    else
      v119 = v126 & 0xCFFFFFFF;
    v128 = *((_DWORD *)v5 + 59);
    if ((v128 & 0x10000000) != 0)
      v120 = 0x40000000;
    else
      v120 = 0x80000000;
    if ((v128 & 0x20000000) == 0)
      v120 = v128 & 0xCFFFFFFF;
  }
  v443 = v116 >> 30;
  v460 = v118 >> 30;
  v466 = v117 >> 30;
  v129 = v120 >> 30;
  if ((v101 & 0x40000000) != 0)
  {
    v544 = v519;
    v545 = v520;
    v546 = v521;
    v543 = v518;
    v542 = v517;
    *(_QWORD *)&v597 = 0xD0D0D0D0D0D0D0DLL;
    v537 = xmmword_224676E40;
    v538 = (__int128)xmmword_224676E50;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 2, 6, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xB200000072), xmmword_224676E50);
    if ((v485 & 0x40000000) == 0)
    {
      v539 = v519;
      v540 = v520;
      v541 = v521;
      v538 = v518;
      v537 = v517;
      *(_QWORD *)&v592 = 0xD0D0D0D0D0D0D0DLL;
      v597 = xmmword_224676E60;
      v598 = (__int128)xmmword_224676E70;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 2, 6, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xB200000072), xmmword_224676E70);
      if (((v480 | v493) & 1) == 0)
      {
        v599 = v519;
        v600 = v520;
        v601 = v521;
        v597 = v517;
        v598 = v518;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224676E80;
        v593 = (__int128)xmmword_224676E90;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 2, 6, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xB200000072), xmmword_224676E90);
        v130 = (v444 & 1) == 0 && ((v475 | v470) & 1) == 0;
        if ((v445 & 1) == 0 && v130)
        {
          v594 = v519;
          v595 = v520;
          v596 = v521;
          v593 = v518;
          v592 = v517;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_224676EA0;
          v588 = (__int128)xmmword_224676EB0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 2, 6, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3200000072), xmmword_224676EB0);
        }
      }
      v131 = (v454 & 1) == 0 && ((v475 | v470) & 1) == 0;
      if (v131 && (v450 & 1) == 0)
      {
        v589 = v519;
        v590 = v520;
        v591 = v521;
        v588 = v518;
        v587 = v517;
        *(_QWORD *)&v577 = 0xD0D0D0D0D0D0D0DLL;
        v582 = xmmword_224676EC0;
        v583 = (__int128)xmmword_224676ED0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 2, 6, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3200000072), xmmword_224676ED0);
      }
    }
    if (((v493 | v466) & 1) == 0)
    {
      v584 = v519;
      v585 = v520;
      v586 = v521;
      v583 = v518;
      v582 = v517;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_224676EE0;
      v578 = (__int128)xmmword_224676EF0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 2, 6, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xB200000072), xmmword_224676EF0);
      v132 = (v443 & 1) == 0 && ((v470 | v460) & 1) == 0;
      if ((v444 & 1) == 0 && v132)
      {
        v579 = v519;
        v580 = v520;
        v581 = v521;
        v578 = v518;
        v577 = v517;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224676F00;
        v573 = (__int128)xmmword_224676F10;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 2, 6, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3200000072), xmmword_224676F10);
      }
    }
    v133 = (v450 & 1) == 0 && ((v470 | v460) & 1) == 0;
    if (v133 && (v129 & 1) == 0)
    {
      v574 = v519;
      v575 = v520;
      v576 = v521;
      v573 = v518;
      v572 = v517;
      *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
      v567 = xmmword_224676F20;
      v568 = xmmword_224676F30;
      *(_QWORD *)&v557 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 2, 6, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v557, COERCE_DOUBLE(0x3200000072), xmmword_224676F30);
    }
  }
  v134 = *((_DWORD *)v5 + 44);
  if (**v508)
  {
    v135 = *((_DWORD *)v5 + 108);
    v136 = *((_DWORD *)v5 + 52);
    v137 = *((_DWORD *)v5 + 116);
    v138 = *((_DWORD *)v5 + 60);
  }
  else
  {
    if ((v134 & 0x10000000) != 0)
      v139 = 0x40000000;
    else
      v139 = 0x80000000;
    if ((v134 & 0x20000000) != 0)
      v134 = v139;
    else
      v134 &= 0xCFFFFFFF;
    v140 = *((_DWORD *)v5 + 108);
    if ((v140 & 0x10000000) != 0)
      v141 = 0x40000000;
    else
      v141 = 0x80000000;
    if ((v140 & 0x20000000) != 0)
      v135 = v141;
    else
      v135 = v140 & 0xCFFFFFFF;
    v142 = *((_DWORD *)v5 + 52);
    if ((v142 & 0x10000000) != 0)
      v143 = 0x40000000;
    else
      v143 = 0x80000000;
    if ((v142 & 0x20000000) != 0)
      v136 = v143;
    else
      v136 = v142 & 0xCFFFFFFF;
    v144 = *((_DWORD *)v5 + 116);
    if ((v144 & 0x10000000) != 0)
      v145 = 0x40000000;
    else
      v145 = 0x80000000;
    if ((v144 & 0x20000000) != 0)
      v137 = v145;
    else
      v137 = v144 & 0xCFFFFFFF;
    v146 = *((_DWORD *)v5 + 60);
    if ((v146 & 0x10000000) != 0)
      v138 = 0x40000000;
    else
      v138 = 0x80000000;
    if ((v146 & 0x20000000) == 0)
      v138 = v146 & 0xCFFFFFFF;
  }
  v455 = v134 >> 30;
  v481 = v136 >> 30;
  v486 = v135 >> 30;
  v147 = v138 >> 30;
  if ((v119 & 0x40000000) != 0)
  {
    v544 = v519;
    v545 = v520;
    v546 = v521;
    v543 = v518;
    v542 = v517;
    *(_QWORD *)&v597 = 0xD0D0D0D0D0D0D0DLL;
    v537 = xmmword_224676F40;
    v538 = (__int128)xmmword_224676F50;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 3, 6, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xB300000073), xmmword_224676F50);
    if ((v101 & 0x40000000) == 0)
    {
      v539 = v519;
      v540 = v520;
      v541 = v521;
      v538 = v518;
      v537 = v517;
      *(_QWORD *)&v592 = 0xD0D0D0D0D0D0D0DLL;
      v597 = xmmword_224676F60;
      v598 = (__int128)xmmword_224676F70;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 3, 6, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xB300000073), xmmword_224676F70);
      if (((v493 | v466) & 1) == 0)
      {
        v599 = v519;
        v600 = v520;
        v601 = v521;
        v597 = v517;
        v598 = v518;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224676F80;
        v593 = (__int128)xmmword_224676F90;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 3, 6, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xB300000073), xmmword_224676F90);
        v148 = (v443 & 1) == 0 && ((v470 | v460) & 1) == 0;
        if ((v444 & 1) == 0 && v148)
        {
          v594 = v519;
          v595 = v520;
          v596 = v521;
          v593 = v518;
          v592 = v517;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_224676FA0;
          v588 = (__int128)xmmword_224676FB0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 3, 6, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3300000073), xmmword_224676FB0);
        }
      }
      v149 = (v450 & 1) == 0 && ((v470 | v460) & 1) == 0;
      if (v149 && (v129 & 1) == 0)
      {
        v589 = v519;
        v590 = v520;
        v591 = v521;
        v588 = v518;
        v587 = v517;
        *(_QWORD *)&v577 = 0xD0D0D0D0D0D0D0DLL;
        v582 = xmmword_224676FC0;
        v583 = (__int128)xmmword_224676FD0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 3, 6, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3300000073), xmmword_224676FD0);
      }
    }
    if (((v466 | v486) & 1) == 0)
    {
      v584 = v519;
      v585 = v520;
      v586 = v521;
      v583 = v518;
      v582 = v517;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_224676FE0;
      v578 = (__int128)xmmword_224676FF0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 3, 6, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xB300000073), xmmword_224676FF0);
      v150 = (v455 & 1) == 0 && ((v460 | v481) & 1) == 0;
      if ((v443 & 1) == 0 && v150)
      {
        v579 = v519;
        v580 = v520;
        v581 = v521;
        v578 = v518;
        v577 = v517;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224677000;
        v573 = (__int128)xmmword_224677010;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 3, 6, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3300000073), xmmword_224677010);
      }
    }
    v151 = (v129 & 1) == 0 && ((v460 | v481) & 1) == 0;
    if (v151 && (v147 & 1) == 0)
    {
      v574 = v519;
      v575 = v520;
      v576 = v521;
      v573 = v518;
      v572 = v517;
      *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
      v567 = xmmword_224677020;
      v568 = xmmword_224677030;
      *(_QWORD *)&v557 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 3, 6, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v557, COERCE_DOUBLE(0x3300000073), xmmword_224677030);
    }
  }
  v152 = *((_DWORD *)v5 + 45);
  if (**v508)
  {
    v153 = *((_DWORD *)v5 + 109);
    v154 = *((_DWORD *)v5 + 53);
    v155 = *((_DWORD *)v5 + 117);
    v156 = *((_DWORD *)v5 + 61);
  }
  else
  {
    if ((v152 & 0x10000000) != 0)
      v157 = 0x40000000;
    else
      v157 = 0x80000000;
    if ((v152 & 0x20000000) != 0)
      v152 = v157;
    else
      v152 &= 0xCFFFFFFF;
    v158 = *((_DWORD *)v5 + 109);
    if ((v158 & 0x10000000) != 0)
      v159 = 0x40000000;
    else
      v159 = 0x80000000;
    if ((v158 & 0x20000000) != 0)
      v153 = v159;
    else
      v153 = v158 & 0xCFFFFFFF;
    v160 = *((_DWORD *)v5 + 53);
    if ((v160 & 0x10000000) != 0)
      v161 = 0x40000000;
    else
      v161 = 0x80000000;
    if ((v160 & 0x20000000) != 0)
      v154 = v161;
    else
      v154 = v160 & 0xCFFFFFFF;
    v162 = *((_DWORD *)v5 + 117);
    if ((v162 & 0x10000000) != 0)
      v163 = 0x40000000;
    else
      v163 = 0x80000000;
    if ((v162 & 0x20000000) != 0)
      v155 = v163;
    else
      v155 = v162 & 0xCFFFFFFF;
    v164 = *((_DWORD *)v5 + 61);
    if ((v164 & 0x10000000) != 0)
      v156 = 0x40000000;
    else
      v156 = 0x80000000;
    if ((v164 & 0x20000000) == 0)
      v156 = v164 & 0xCFFFFFFF;
  }
  v165 = v154 >> 30;
  v451 = v152 >> 30;
  v166 = v153 >> 30;
  v471 = v156 >> 30;
  if ((v137 & 0x40000000) != 0)
  {
    v544 = v519;
    v545 = v520;
    v546 = v521;
    v543 = v518;
    v542 = v517;
    *(_QWORD *)&v597 = 0xD0D0D0D0D0D0D0DLL;
    v537 = xmmword_224677040;
    v538 = (__int128)xmmword_224677050;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 4, 6, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xB400000074), xmmword_224677050);
    if ((v119 & 0x40000000) == 0)
    {
      v539 = v519;
      v540 = v520;
      v541 = v521;
      v538 = v518;
      v537 = v517;
      *(_QWORD *)&v592 = 0xD0D0D0D0D0D0D0DLL;
      v597 = xmmword_224677060;
      v598 = (__int128)xmmword_224677070;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 4, 6, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xB400000074), xmmword_224677070);
      if (((v466 | v486) & 1) == 0)
      {
        v599 = v519;
        v600 = v520;
        v601 = v521;
        v597 = v517;
        v598 = v518;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224677080;
        v593 = (__int128)xmmword_224677090;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 4, 6, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xB400000074), xmmword_224677090);
        v167 = (v455 & 1) == 0 && ((v460 | v481) & 1) == 0;
        if ((v443 & 1) == 0 && v167)
        {
          v594 = v519;
          v595 = v520;
          v596 = v521;
          v593 = v518;
          v592 = v517;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_2246770A0;
          v588 = (__int128)xmmword_2246770B0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 4, 6, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3400000074), xmmword_2246770B0);
        }
      }
      v168 = (v129 & 1) == 0 && ((v460 | v481) & 1) == 0;
      if (v168 && (v147 & 1) == 0)
      {
        v589 = v519;
        v590 = v520;
        v591 = v521;
        v588 = v518;
        v587 = v517;
        *(_QWORD *)&v577 = 0xD0D0D0D0D0D0D0DLL;
        v582 = xmmword_2246770C0;
        v583 = (__int128)xmmword_2246770D0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 4, 6, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3400000074), xmmword_2246770D0);
      }
    }
    if (((v486 | v166) & 1) == 0)
    {
      v584 = v519;
      v585 = v520;
      v586 = v521;
      v583 = v518;
      v582 = v517;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_2246770E0;
      v578 = (__int128)xmmword_2246770F0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 4, 6, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xB400000074), xmmword_2246770F0);
      v169 = (v451 & 1) == 0 && ((v481 | v165) & 1) == 0;
      if ((v455 & 1) == 0 && v169)
      {
        v579 = v519;
        v580 = v520;
        v581 = v521;
        v578 = v518;
        v577 = v517;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224677100;
        v573 = (__int128)xmmword_224677110;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 4, 6, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3400000074), xmmword_224677110);
      }
    }
    v170 = (v147 & 1) == 0 && ((v481 | v165) & 1) == 0;
    if (v170 && (v471 & 1) == 0)
    {
      v574 = v519;
      v575 = v520;
      v576 = v521;
      v573 = v518;
      v572 = v517;
      *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
      v567 = xmmword_224677120;
      v568 = xmmword_224677130;
      *(_QWORD *)&v557 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 4, 6, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v557, COERCE_DOUBLE(0x3400000074), xmmword_224677130);
    }
  }
  v171 = *((_DWORD *)v5 + 46);
  if (**v508)
  {
    v172 = *((_DWORD *)v5 + 110);
    v173 = *((_DWORD *)v5 + 54);
    v174 = *((_DWORD *)v5 + 118);
    v175 = *((_DWORD *)v5 + 62);
  }
  else
  {
    if ((v171 & 0x10000000) != 0)
      v176 = 0x40000000;
    else
      v176 = 0x80000000;
    if ((v171 & 0x20000000) != 0)
      v171 = v176;
    else
      v171 &= 0xCFFFFFFF;
    v177 = *((_DWORD *)v5 + 110);
    if ((v177 & 0x10000000) != 0)
      v178 = 0x40000000;
    else
      v178 = 0x80000000;
    if ((v177 & 0x20000000) != 0)
      v172 = v178;
    else
      v172 = v177 & 0xCFFFFFFF;
    v179 = *((_DWORD *)v5 + 54);
    if ((v179 & 0x10000000) != 0)
      v180 = 0x40000000;
    else
      v180 = 0x80000000;
    if ((v179 & 0x20000000) != 0)
      v173 = v180;
    else
      v173 = v179 & 0xCFFFFFFF;
    v181 = *((_DWORD *)v5 + 118);
    if ((v181 & 0x10000000) != 0)
      v182 = 0x40000000;
    else
      v182 = 0x80000000;
    if ((v181 & 0x20000000) != 0)
      v174 = v182;
    else
      v174 = v181 & 0xCFFFFFFF;
    v183 = *((_DWORD *)v5 + 62);
    if ((v183 & 0x10000000) != 0)
      v175 = 0x40000000;
    else
      v175 = 0x80000000;
    if ((v183 & 0x20000000) == 0)
      v175 = v183 & 0xCFFFFFFF;
  }
  v476 = v173 >> 30;
  v494 = v172 >> 30;
  v461 = v171 >> 30;
  v467 = v175 >> 30;
  v559 = v519;
  v560 = v520;
  v561 = v521;
  v558 = v518;
  v557 = v517;
  if ((v155 & 0x40000000) != 0)
  {
    v544 = v519;
    v545 = v520;
    v546 = v521;
    v543 = v518;
    v542 = v517;
    *(_QWORD *)&v597 = 0xD0D0D0D0D0D0D0DLL;
    v537 = xmmword_224677140;
    v538 = (__int128)xmmword_224677150;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 5, 6, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xB500000075), xmmword_224677150);
    if ((v137 & 0x40000000) == 0)
    {
      v539 = v519;
      v540 = v520;
      v541 = v521;
      v538 = v518;
      v537 = v517;
      *(_QWORD *)&v592 = 0xD0D0D0D0D0D0D0DLL;
      v597 = xmmword_224677160;
      v598 = (__int128)xmmword_224677170;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 5, 6, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xB500000075), xmmword_224677170);
      if (((v486 | v166) & 1) == 0)
      {
        v599 = v519;
        v600 = v520;
        v601 = v521;
        v597 = v517;
        v598 = v518;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224677180;
        v593 = (__int128)xmmword_224677190;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 5, 6, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xB500000075), xmmword_224677190);
        v184 = (v451 & 1) == 0 && ((v481 | v165) & 1) == 0;
        if ((v455 & 1) == 0 && v184)
        {
          v594 = v519;
          v595 = v520;
          v596 = v521;
          v593 = v518;
          v592 = v517;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_2246771A0;
          v588 = (__int128)xmmword_2246771B0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 5, 6, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3500000075), xmmword_2246771B0);
        }
      }
      v185 = (v147 & 1) == 0 && ((v481 | v165) & 1) == 0;
      if (v185 && (v471 & 1) == 0)
      {
        v589 = v559;
        v590 = v560;
        v591 = v561;
        v588 = v558;
        v587 = v557;
        *(_QWORD *)&v577 = 0xD0D0D0D0D0D0D0DLL;
        v582 = xmmword_2246771C0;
        v583 = (__int128)xmmword_2246771D0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 5, 6, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3500000075), xmmword_2246771D0);
      }
    }
    if (((v166 | v494) & 1) == 0)
    {
      v584 = v559;
      v585 = v560;
      v586 = v561;
      v583 = v558;
      v582 = v557;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_2246771E0;
      v578 = (__int128)xmmword_2246771F0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 5, 6, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xB500000075), xmmword_2246771F0);
      v186 = (v461 & 1) == 0 && ((v165 | v476) & 1) == 0;
      if ((v451 & 1) == 0 && v186)
      {
        v579 = v559;
        v580 = v560;
        v581 = v561;
        v578 = v558;
        v577 = v557;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224677200;
        v573 = (__int128)xmmword_224677210;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 5, 6, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3500000075), xmmword_224677210);
      }
    }
    v187 = (v471 & 1) == 0 && ((v165 | v476) & 1) == 0;
    if (v187 && (v467 & 1) == 0)
    {
      v574 = v559;
      v575 = v560;
      v576 = v561;
      v573 = v558;
      v572 = v557;
      *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
      v567 = xmmword_224677220;
      v568 = xmmword_224677230;
      *(_QWORD *)&v552 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 5, 6, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v552, COERCE_DOUBLE(0x3500000075), xmmword_224677230);
    }
  }
  v554 = v519;
  v555 = v520;
  v556 = v521;
  v553 = v518;
  v552 = v517;
  v188 = *((_DWORD *)v5 + 47);
  if (**v508)
  {
    v189 = *((_DWORD *)v5 + 111);
    v190 = *((_DWORD *)v5 + 55);
    v191 = *((_DWORD *)v5 + 119);
    v192 = *((_DWORD *)v5 + 63);
  }
  else
  {
    if ((v188 & 0x10000000) != 0)
      v193 = 0x40000000;
    else
      v193 = 0x80000000;
    if ((v188 & 0x20000000) != 0)
      v188 = v193;
    else
      v188 &= 0xCFFFFFFF;
    v194 = *((_DWORD *)v5 + 111);
    if ((v194 & 0x10000000) != 0)
      v195 = 0x40000000;
    else
      v195 = 0x80000000;
    if ((v194 & 0x20000000) != 0)
      v189 = v195;
    else
      v189 = v194 & 0xCFFFFFFF;
    v196 = *((_DWORD *)v5 + 55);
    if ((v196 & 0x10000000) != 0)
      v197 = 0x40000000;
    else
      v197 = 0x80000000;
    if ((v196 & 0x20000000) != 0)
      v190 = v197;
    else
      v190 = v196 & 0xCFFFFFFF;
    v198 = *((_DWORD *)v5 + 119);
    if ((v198 & 0x10000000) != 0)
      v199 = 0x40000000;
    else
      v199 = 0x80000000;
    if ((v198 & 0x20000000) != 0)
      v191 = v199;
    else
      v191 = v198 & 0xCFFFFFFF;
    v200 = *((_DWORD *)v5 + 63);
    if ((v200 & 0x10000000) != 0)
      v192 = 0x40000000;
    else
      v192 = 0x80000000;
    if ((v200 & 0x20000000) == 0)
      v192 = v200 & 0xCFFFFFFF;
  }
  v201 = v502;
  v202 = v190 >> 30;
  v487 = v188 >> 30;
  v203 = v189 >> 30;
  v510 = v192 >> 30;
  v564 = v519;
  v565 = v520;
  v566 = v521;
  v563 = v518;
  v562 = v517;
  if ((v174 & 0x40000000) != 0)
  {
    v544 = v519;
    v545 = v520;
    v546 = v521;
    v543 = v518;
    v542 = v517;
    *(_QWORD *)&v597 = 0xD0D0D0D0D0D0D0DLL;
    v537 = xmmword_224677240;
    v538 = (__int128)xmmword_224677250;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 6, 6, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xB600000076), xmmword_224677250);
    if ((v155 & 0x40000000) == 0)
    {
      v539 = v519;
      v540 = v520;
      v541 = v521;
      v538 = v518;
      v537 = v517;
      *(_QWORD *)&v592 = 0xD0D0D0D0D0D0D0DLL;
      v597 = xmmword_224677260;
      v598 = (__int128)xmmword_224677270;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 6, 6, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xB600000076), xmmword_224677270);
      if (((v166 | v494) & 1) == 0)
      {
        v599 = v519;
        v600 = v520;
        v601 = v521;
        v597 = v517;
        v598 = v518;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224677280;
        v593 = (__int128)xmmword_224677290;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 6, 6, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xB600000076), xmmword_224677290);
        v204 = (v461 & 1) == 0 && ((v165 | v476) & 1) == 0;
        if ((v451 & 1) == 0 && v204)
        {
          v594 = v519;
          v595 = v520;
          v596 = v521;
          v593 = v518;
          v592 = v517;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_2246772A0;
          v588 = (__int128)xmmword_2246772B0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 6, 6, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3600000076), xmmword_2246772B0);
        }
      }
      v205 = (v471 & 1) == 0 && ((v165 | v476) & 1) == 0;
      if (v205 && (v467 & 1) == 0)
      {
        v589 = v564;
        v590 = v565;
        v591 = v566;
        v588 = v563;
        v587 = v562;
        *(_QWORD *)&v577 = 0xD0D0D0D0D0D0D0DLL;
        v582 = xmmword_2246772C0;
        v583 = (__int128)xmmword_2246772D0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 6, 6, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3600000076), xmmword_2246772D0);
      }
    }
    if (((v494 | v203) & 1) == 0)
    {
      v584 = v564;
      v585 = v565;
      v586 = v566;
      v583 = v563;
      v582 = v562;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_2246772E0;
      v578 = (__int128)xmmword_2246772F0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 6, 6, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xB600000076), xmmword_2246772F0);
      v206 = (v487 & 1) == 0 && ((v476 | v202) & 1) == 0;
      if ((v461 & 1) == 0 && v206)
      {
        v579 = v564;
        v580 = v565;
        v581 = v566;
        v578 = v563;
        v577 = v562;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224677300;
        v573 = (__int128)xmmword_224677310;
        *(_QWORD *)&v547 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 6, 6, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v547, COERCE_DOUBLE(0x3600000076), xmmword_224677310);
      }
    }
    v207 = (v467 & 1) == 0 && ((v476 | v202) & 1) == 0;
    v201 = v502;
    if (v207 && (v510 & 1) == 0)
    {
      v574 = v564;
      v575 = v565;
      v576 = v566;
      v573 = v563;
      v572 = v562;
      *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
      v567 = xmmword_224677320;
      v568 = xmmword_224677330;
      *(_QWORD *)&v603[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 6, 6, 1, (uint64_t)&v547, (uint64_t)&v567, (uint64_t)v603, COERCE_DOUBLE(0x3600000076), xmmword_224677330);
      v201 = v502;
    }
  }
  v208 = *(unsigned int *)(v506 + 88);
  if ((v208 & 0x80000000) != 0)
  {
    v211 = *v498;
    v212 = *(_DWORD *)(v201 + 440);
    v213 = **v498;
    if (**v498)
      goto LABEL_509;
  }
  else
  {
    v209 = *(_QWORD *)(v201 + 2328);
    if (v208 >= (*(_QWORD *)(v201 + 2336) - v209) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v201 = v502;
      v209 = *(_QWORD *)(v502 + 2328);
    }
    v210 = v209 + (v208 << 11);
    v211 = *v498;
    v212 = *(_DWORD *)(v210 + 160);
    v213 = **v498;
    if (**v498)
    {
LABEL_509:
      v214 = *(unsigned int *)(v506 + 88);
      if ((v214 & 0x80000000) == 0)
        goto LABEL_510;
LABEL_529:
      v216 = *(_DWORD *)(v201 + 696);
      if (v213)
        goto LABEL_514;
      goto LABEL_530;
    }
  }
  if ((v212 & 0x10000000) != 0)
    v221 = 0x40000000;
  else
    v221 = 0x80000000;
  if ((v212 & 0x20000000) != 0)
    v212 = v221;
  else
    v212 &= 0xCFFFFFFF;
  v214 = *(unsigned int *)(v506 + 88);
  if ((v214 & 0x80000000) != 0)
    goto LABEL_529;
LABEL_510:
  v215 = *(_QWORD *)(v201 + 2328);
  if (v214 >= (*(_QWORD *)(v201 + 2336) - v215) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v201 = v502;
    v215 = *(_QWORD *)(v502 + 2328);
    v211 = *v498;
    v213 = **v498;
  }
  v216 = *(_DWORD *)(v215 + (v214 << 11) + 416);
  if (v213)
  {
LABEL_514:
    v217 = *(unsigned int *)(v506 + 88);
    if ((v217 & 0x80000000) == 0)
      goto LABEL_515;
LABEL_537:
    v219 = *(_DWORD *)(v201 + 472);
    if (v213)
      goto LABEL_519;
    goto LABEL_538;
  }
LABEL_530:
  if ((v216 & 0x10000000) != 0)
    v222 = 0x40000000;
  else
    v222 = 0x80000000;
  if ((v216 & 0x20000000) != 0)
    v216 = v222;
  else
    v216 &= 0xCFFFFFFF;
  v217 = *(unsigned int *)(v506 + 88);
  if ((v217 & 0x80000000) != 0)
    goto LABEL_537;
LABEL_515:
  v218 = *(_QWORD *)(v201 + 2328);
  if (v217 >= (*(_QWORD *)(v201 + 2336) - v218) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v201 = v502;
    v218 = *(_QWORD *)(v502 + 2328);
    v211 = *v498;
    v213 = **v498;
  }
  v219 = *(_DWORD *)(v218 + (v217 << 11) + 192);
  if (v213)
  {
LABEL_519:
    v220 = *(unsigned int *)(v506 + 88);
    if ((v220 & 0x80000000) != 0)
      goto LABEL_595;
    goto LABEL_545;
  }
LABEL_538:
  if ((v219 & 0x10000000) != 0)
    v223 = 0x40000000;
  else
    v223 = 0x80000000;
  if ((v219 & 0x20000000) != 0)
    v219 = v223;
  else
    v219 &= 0xCFFFFFFF;
  v220 = *(unsigned int *)(v506 + 88);
  if ((v220 & 0x80000000) != 0)
    goto LABEL_595;
LABEL_545:
  v224 = *(_QWORD *)(v201 + 2328);
  v225 = (*(_QWORD *)(v201 + 2336) - v224) >> 11;
  if (v225 > v220)
    goto LABEL_549;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v201 = v502;
  v211 = *v498;
  v220 = *(unsigned int *)(v506 + 88);
  if ((v220 & 0x80000000) != 0)
  {
LABEL_595:
    v226 = *(_DWORD *)(v201 + 504);
    if (*v211)
      goto LABEL_559;
    goto LABEL_553;
  }
  v224 = *(_QWORD *)(v502 + 2328);
  v225 = (*(_QWORD *)(v502 + 2336) - v224) >> 11;
LABEL_549:
  if (v225 <= v220)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v224 = *(_QWORD *)(v502 + 2328);
    v211 = *v498;
  }
  v226 = *(_DWORD *)(v224 + (v220 << 11) + 224);
  if (!*v211)
  {
LABEL_553:
    if ((v226 & 0x10000000) != 0)
      v227 = 0x40000000;
    else
      v227 = 0x80000000;
    if ((v226 & 0x20000000) != 0)
      v226 = v227;
    else
      v226 &= 0xCFFFFFFF;
  }
LABEL_559:
  v569 = v554;
  v570 = v555;
  v571 = v556;
  v568 = (float32x4_t)v553;
  v567 = v552;
  if ((v191 & 0x40000000) != 0)
  {
    v544 = v554;
    v545 = v555;
    v546 = v556;
    v543 = v553;
    v542 = v552;
    *(_QWORD *)&v597 = 0x161616160D0D0D0DLL;
    v537 = xmmword_224677340;
    v538 = (__int128)xmmword_224677350;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 7, 6, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xB700000077), xmmword_224677350);
    if ((v174 & 0x40000000) == 0)
    {
      v539 = v554;
      v540 = v555;
      v541 = v556;
      v538 = v553;
      v537 = v552;
      *(_QWORD *)&v592 = 0xD0D0D0D0D0D0D0DLL;
      v597 = xmmword_224677360;
      v598 = (__int128)xmmword_224677370;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 7, 6, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xB700000077), xmmword_224677370);
      if (((v494 | v203) & 1) == 0)
      {
        v599 = v554;
        v600 = v555;
        v601 = v556;
        v597 = v552;
        v598 = v553;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224677380;
        v593 = (__int128)xmmword_224677390;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 7, 6, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xB700000077), xmmword_224677390);
        v228 = (v487 & 1) == 0 && ((v476 | v202) & 1) == 0;
        if ((v461 & 1) == 0 && v228)
        {
          v594 = v554;
          v595 = v555;
          v596 = v556;
          v593 = v553;
          v592 = v552;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_2246773A0;
          v588 = (__int128)xmmword_2246773B0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 7, 6, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3700000077), xmmword_2246773B0);
        }
      }
      v229 = (v467 & 1) == 0 && ((v476 | v202) & 1) == 0;
      if (v229 && (v510 & 1) == 0)
      {
        v589 = v569;
        v590 = v570;
        v591 = v571;
        v588 = (__int128)v568;
        v587 = v567;
        *(_QWORD *)&v577 = 0xD0D0D0D0D0D0D0DLL;
        v582 = xmmword_2246773C0;
        v583 = (__int128)xmmword_2246773D0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 7, 6, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3700000077), xmmword_2246773D0);
      }
    }
    if (!(v216 & 0x40000000 | v203 & 1))
    {
      v584 = v569;
      v585 = v570;
      v586 = v571;
      *(_QWORD *)&v572 = 0x16160D0D16160D0DLL;
      v583 = (__int128)v568;
      v582 = v567;
      v577 = xmmword_2246773E0;
      v578 = (__int128)xmmword_2246773F0;
      *(_QWORD *)&v547 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 7, 6, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v547, COERCE_DOUBLE(0xB700000077), xmmword_2246773F0);
      v230 = (v212 & 0x40000000) == 0 && (v219 & 0x40000000 | v202 & 1) == 0;
      if ((v487 & 1) == 0 && v230)
      {
        v579 = v569;
        v580 = v570;
        v581 = v571;
        *(_QWORD *)&v547 = 0x161616160D0D0D0DLL;
        v578 = (__int128)v568;
        v577 = v567;
        v572 = xmmword_224677400;
        v573 = (__int128)xmmword_224677410;
        *(_QWORD *)&v603[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 7, 6, 1, (uint64_t)&v547, (uint64_t)&v572, (uint64_t)v603, COERCE_DOUBLE(0x3700000077), xmmword_224677410);
      }
    }
    v231 = (v510 & 1) == 0 && (v219 & 0x40000000 | v202 & 1) == 0;
    if (v231 && (v226 & 0x40000000) == 0)
    {
      v574 = v569;
      v575 = v570;
      v576 = v571;
      *(_QWORD *)&v603[0] = 0x16160D0D16160D0DLL;
      v573 = (__int128)v568;
      v572 = v567;
      v547 = xmmword_224677420;
      v548 = (__int128)xmmword_224677430;
      v604[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 7, 6, 1, (uint64_t)v603, (uint64_t)&v547, (uint64_t)v604, COERCE_DOUBLE(0x3700000077), xmmword_224677430);
    }
  }
  v232 = a1[2];
  v233 = *v446;
  v507 = (unsigned __int8 **)v446[2];
  v511 = (unsigned int *)v446[1];
  v515 = a3[3];
  v516 = a3[4];
  v513 = a3[1];
  v514 = a3[2];
  v512 = *a3;
  v459 = *(_OWORD *)a1;
  v234 = *((_DWORD *)v232 + 48);
  if (**(_BYTE **)v459)
  {
    v482 = *((_DWORD *)v232 + 56);
    v488 = *((_DWORD *)v232 + 112);
    v499 = *((_DWORD *)v232 + 120);
    v235 = v511[16];
    if ((v235 & 0x80000000) == 0)
      goto LABEL_589;
LABEL_611:
    v238 = *v507;
    v239 = *(_DWORD *)(v233 + 280);
    v240 = **v507;
    if (**v507)
      goto LABEL_593;
LABEL_612:
    if ((v239 & 0x10000000) != 0)
      v249 = 0x40000000;
    else
      v249 = 0x80000000;
    if ((v239 & 0x20000000) != 0)
      v239 = v249;
    else
      v239 &= 0xCFFFFFFF;
    if ((v499 & 0x40000000) == 0)
      goto LABEL_594;
    goto LABEL_619;
  }
  if ((v234 & 0x20000000) != 0)
    v234 *= 4;
  v243 = *((_DWORD *)v232 + 112);
  if ((v243 & 0x20000000) != 0)
    v244 = 4 * v243;
  else
    v244 = *((_DWORD *)v232 + 112);
  v245 = *((_DWORD *)v232 + 56);
  if ((v245 & 0x20000000) != 0)
    v245 *= 4;
  v482 = v245;
  v488 = v244;
  v246 = *((_DWORD *)v232 + 120);
  if ((v246 & 0x10000000) != 0)
    v247 = 0x40000000;
  else
    v247 = 0x80000000;
  if ((v246 & 0x20000000) != 0)
    v248 = v247;
  else
    v248 = v246 & 0xCFFFFFFF;
  v499 = v248;
  v235 = v511[16];
  if ((v235 & 0x80000000) != 0)
    goto LABEL_611;
LABEL_589:
  v236 = *(_QWORD *)(v233 + 2328);
  if (v235 >= (*(_QWORD *)(v233 + 2336) - v236) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v236 = *(_QWORD *)(v233 + 2328);
  }
  v237 = (unsigned int *)(v236 + (v235 << 11));
  v238 = *v507;
  v239 = *v237;
  v240 = **v507;
  if (!**v507)
    goto LABEL_612;
LABEL_593:
  if ((v499 & 0x40000000) == 0)
  {
LABEL_594:
    v472 = 0;
    v477 = 0;
    v241 = 0;
    v242 = 0;
    v462 = 0;
    goto LABEL_685;
  }
LABEL_619:
  v250 = v511[4];
  if ((v250 & 0x80000000) != 0)
  {
    v252 = *(_DWORD *)(v233 + 500);
    if (v240)
      goto LABEL_624;
  }
  else
  {
    v251 = *(_QWORD *)(v233 + 2328);
    if (v250 >= (*(_QWORD *)(v233 + 2336) - v251) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v251 = *(_QWORD *)(v233 + 2328);
      v238 = *v507;
      v240 = **v507;
    }
    v252 = *(_DWORD *)(v251 + (v250 << 11) + 220);
    if (v240)
    {
LABEL_624:
      v253 = v511[4];
      if ((v253 & 0x80000000) == 0)
        goto LABEL_625;
LABEL_652:
      v255 = *(_DWORD *)(v233 + 756);
      if (v240)
        goto LABEL_629;
      goto LABEL_653;
    }
  }
  if ((v252 & 0x10000000) != 0)
    v265 = 0x40000000;
  else
    v265 = 0x80000000;
  if ((v252 & 0x20000000) != 0)
    v252 = v265;
  else
    v252 &= 0xCFFFFFFF;
  v253 = v511[4];
  if ((v253 & 0x80000000) != 0)
    goto LABEL_652;
LABEL_625:
  v254 = *(_QWORD *)(v233 + 2328);
  if (v253 >= (*(_QWORD *)(v233 + 2336) - v254) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v254 = *(_QWORD *)(v233 + 2328);
    v238 = *v507;
    v240 = **v507;
  }
  v255 = *(_DWORD *)(v254 + (v253 << 11) + 476);
  if (v240)
  {
LABEL_629:
    v256 = v511[4];
    if ((v256 & 0x80000000) == 0)
      goto LABEL_630;
LABEL_660:
    v258 = *(_DWORD *)(v233 + 532);
    if (v240)
      goto LABEL_634;
    goto LABEL_661;
  }
LABEL_653:
  if ((v255 & 0x10000000) != 0)
    v266 = 0x40000000;
  else
    v266 = 0x80000000;
  if ((v255 & 0x20000000) != 0)
    v255 = v266;
  else
    v255 &= 0xCFFFFFFF;
  v256 = v511[4];
  if ((v256 & 0x80000000) != 0)
    goto LABEL_660;
LABEL_630:
  v257 = *(_QWORD *)(v233 + 2328);
  if (v256 >= (*(_QWORD *)(v233 + 2336) - v257) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v257 = *(_QWORD *)(v233 + 2328);
    v238 = *v507;
    v240 = **v507;
  }
  v258 = *(_DWORD *)(v257 + (v256 << 11) + 252);
  if (v240)
  {
LABEL_634:
    v259 = v511[4];
    if ((v259 & 0x80000000) == 0)
      goto LABEL_635;
LABEL_668:
    v261 = *(_DWORD *)(v233 + 788);
    if (v240)
      goto LABEL_639;
LABEL_669:
    if ((v261 & 0x10000000) != 0)
      v268 = 0x40000000;
    else
      v268 = 0x80000000;
    if ((v261 & 0x20000000) != 0)
      v261 = v268;
    else
      v261 &= 0xCFFFFFFF;
    v262 = v511[7];
    if ((v262 & 0x80000000) == 0)
      goto LABEL_640;
    goto LABEL_676;
  }
LABEL_661:
  if ((v258 & 0x10000000) != 0)
    v267 = 0x40000000;
  else
    v267 = 0x80000000;
  if ((v258 & 0x20000000) != 0)
    v258 = v267;
  else
    v258 &= 0xCFFFFFFF;
  v259 = v511[4];
  if ((v259 & 0x80000000) != 0)
    goto LABEL_668;
LABEL_635:
  v260 = *(_QWORD *)(v233 + 2328);
  if (v259 >= (*(_QWORD *)(v233 + 2336) - v260) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v260 = *(_QWORD *)(v233 + 2328);
    v238 = *v507;
    v240 = **v507;
  }
  v261 = *(_DWORD *)(v260 + (v259 << 11) + 508);
  if (!v240)
    goto LABEL_669;
LABEL_639:
  v262 = v511[7];
  if ((v262 & 0x80000000) == 0)
  {
LABEL_640:
    v263 = *(_QWORD *)(v233 + 2328);
    if (v262 >= (*(_QWORD *)(v233 + 2336) - v263) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v263 = *(_QWORD *)(v233 + 2328);
      v238 = *v507;
      v240 = **v507;
    }
    v264 = v263 + (v262 << 11);
    goto LABEL_677;
  }
LABEL_676:
  v264 = v233 + 280;
LABEL_677:
  v462 = (v252 >> 30) & 1;
  v477 = (v255 >> 30) & 1;
  v242 = (v258 >> 30) & 1;
  v269 = *(_DWORD *)(v264 + 28);
  v241 = (v261 >> 30) & 1;
  if (!v240)
  {
    if ((v269 & 0x10000000) != 0)
      v270 = 0x40000000;
    else
      v270 = 0x80000000;
    if ((v269 & 0x20000000) != 0)
      v269 = v270;
    else
      v269 &= 0xCFFFFFFF;
  }
  v472 = (v269 >> 30) & 1;
LABEL_685:
  v549 = v514;
  v550 = v515;
  v551 = v516;
  v548 = v513;
  v547 = v512;
  v271 = *((_DWORD *)v232 + 49);
  if (**(_BYTE **)v459)
  {
    v272 = *((_DWORD *)v232 + 113);
    v273 = *((_DWORD *)v232 + 57);
    v495 = *((_DWORD *)v232 + 121);
    v274 = v511[16];
    if ((v274 & 0x80000000) == 0)
      goto LABEL_687;
LABEL_1007:
    v447 = v234 >> 30;
    v276 = *(_DWORD *)(v233 + 284);
    if (*v238)
      goto LABEL_697;
    goto LABEL_691;
  }
  if ((v271 & 0x10000000) != 0)
    v375 = 0x40000000;
  else
    v375 = 0x80000000;
  if ((v271 & 0x20000000) != 0)
    v271 = v375;
  else
    v271 &= 0xCFFFFFFF;
  v376 = *((_DWORD *)v232 + 113);
  if ((v376 & 0x10000000) != 0)
    v377 = 0x40000000;
  else
    v377 = 0x80000000;
  if ((v376 & 0x20000000) != 0)
    v272 = v377;
  else
    v272 = v376 & 0xCFFFFFFF;
  v378 = *((_DWORD *)v232 + 57);
  if ((v378 & 0x10000000) != 0)
    v379 = 0x40000000;
  else
    v379 = 0x80000000;
  if ((v378 & 0x20000000) != 0)
    v273 = v379;
  else
    v273 = v378 & 0xCFFFFFFF;
  v380 = *((_DWORD *)v232 + 121);
  if ((v380 & 0x10000000) != 0)
    v381 = 0x40000000;
  else
    v381 = 0x80000000;
  if ((v380 & 0x20000000) != 0)
    v382 = v381;
  else
    v382 = v380 & 0xCFFFFFFF;
  v495 = v382;
  v274 = v511[16];
  if ((v274 & 0x80000000) != 0)
    goto LABEL_1007;
LABEL_687:
  v275 = *(_QWORD *)(v233 + 2328);
  if (v274 >= (*(_QWORD *)(v233 + 2336) - v275) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v275 = *(_QWORD *)(v233 + 2328);
    v238 = *v507;
  }
  v447 = v234 >> 30;
  v276 = *(_DWORD *)(v275 + (v274 << 11) + 4);
  if (!*v238)
  {
LABEL_691:
    if ((v276 & 0x10000000) != 0)
      v277 = 0x40000000;
    else
      v277 = 0x80000000;
    if ((v276 & 0x20000000) != 0)
      v276 = v277;
    else
      v276 &= 0xCFFFFFFF;
  }
LABEL_697:
  v456 = v271 >> 30;
  v278 = v482 >> 30;
  v279 = v488 >> 30;
  v280 = v239 >> 30;
  v483 = v273 >> 30;
  v489 = v272 >> 30;
  v468 = v276 >> 30;
  if ((v499 & 0x40000000) != 0)
  {
    v544 = v514;
    v545 = v515;
    v546 = v516;
    v543 = v513;
    v542 = v512;
    *(_QWORD *)&v597 = 0x10100D0D10100D0DLL;
    v537 = xmmword_224677440;
    v538 = (__int128)xmmword_224677450;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 0, 7, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xB800000078), xmmword_224677450);
    if (!v241)
    {
      v539 = v514;
      v540 = v515;
      v541 = v516;
      *(_QWORD *)&v592 = 0x707101004040D0DLL;
      v538 = v513;
      v537 = v512;
      v597 = xmmword_224677460;
      v598 = (__int128)xmmword_224677470;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 0, 7, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xB800000078), xmmword_224677470);
      v281 = (v242 | v278 & 1) == 0;
      if (!(v477 | v279 & 1))
      {
        v599 = v514;
        v600 = v515;
        v601 = v516;
        *(_QWORD *)&v587 = 0x40404040D0D0D0DLL;
        v597 = v512;
        v598 = v513;
        v592 = xmmword_224677480;
        v593 = (__int128)xmmword_224677490;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 0, 7, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xB800000078), xmmword_224677490);
        v282 = (v447 & 1) == 0 && v281;
        if (!v462 && v282)
        {
          v594 = v514;
          v595 = v515;
          v596 = v516;
          v593 = v513;
          v592 = v512;
          *(_QWORD *)&v582 = 0x4040D0D04040D0DLL;
          v587 = xmmword_2246774A0;
          v588 = (__int128)xmmword_2246774B0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 0, 7, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3800000078), xmmword_2246774B0);
        }
      }
      if (v472)
        v283 = 0;
      else
        v283 = v281;
      if (v283 && (v280 & 1) == 0)
      {
        v589 = v514;
        v590 = v515;
        v591 = v516;
        *(_QWORD *)&v577 = 0x707040410100D0DLL;
        v588 = v513;
        v587 = v512;
        v582 = xmmword_2246774C0;
        v583 = (__int128)xmmword_2246774D0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 0, 7, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3800000078), xmmword_2246774D0);
      }
    }
    if (((v279 | v489) & 1) == 0)
    {
      v584 = v514;
      v585 = v515;
      v586 = v516;
      v583 = v513;
      v582 = v512;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_2246774E0;
      v578 = (__int128)xmmword_2246774F0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 0, 7, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xB800000078), xmmword_2246774F0);
      v284 = (v456 & 1) == 0 && ((v278 | v483) & 1) == 0;
      if ((v447 & 1) == 0 && v284)
      {
        v579 = v514;
        v580 = v515;
        v581 = v516;
        v578 = v513;
        v577 = v512;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224677500;
        v573 = (__int128)xmmword_224677510;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 0, 7, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3800000078), xmmword_224677510);
      }
    }
    v285 = (v280 & 1) == 0 && ((v278 | v483) & 1) == 0;
    if (v285 && (v468 & 1) == 0)
    {
      v574 = v514;
      v575 = v515;
      v576 = v516;
      v573 = v513;
      v572 = v512;
      *(_QWORD *)&v562 = 0x101010100D0D0D0DLL;
      v567 = xmmword_224677520;
      v568 = xmmword_224677530;
      *(_QWORD *)&v557 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 0, 7, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v557, COERCE_DOUBLE(0x3800000078), xmmword_224677530);
    }
  }
  v524 = v549;
  v525 = v550;
  v526 = v551;
  v522 = v547;
  v523 = v548;
  v286 = *((_DWORD *)v232 + 50);
  if (**(_BYTE **)v459)
  {
    v287 = *((_DWORD *)v232 + 114);
    v288 = *((_DWORD *)v232 + 58);
    v478 = *((_DWORD *)v232 + 122);
    v289 = v511[16];
    if ((v289 & 0x80000000) == 0)
      goto LABEL_727;
LABEL_1034:
    v291 = *(_DWORD *)(v233 + 288);
    if (**v507)
      goto LABEL_737;
    goto LABEL_731;
  }
  if ((v286 & 0x10000000) != 0)
    v383 = 0x40000000;
  else
    v383 = 0x80000000;
  if ((v286 & 0x20000000) != 0)
    v286 = v383;
  else
    v286 &= 0xCFFFFFFF;
  v384 = *((_DWORD *)v232 + 114);
  if ((v384 & 0x10000000) != 0)
    v385 = 0x40000000;
  else
    v385 = 0x80000000;
  if ((v384 & 0x20000000) != 0)
    v287 = v385;
  else
    v287 = v384 & 0xCFFFFFFF;
  v386 = *((_DWORD *)v232 + 58);
  if ((v386 & 0x10000000) != 0)
    v387 = 0x40000000;
  else
    v387 = 0x80000000;
  if ((v386 & 0x20000000) != 0)
    v288 = v387;
  else
    v288 = v386 & 0xCFFFFFFF;
  v388 = *((_DWORD *)v232 + 122);
  if ((v388 & 0x10000000) != 0)
    v389 = 0x40000000;
  else
    v389 = 0x80000000;
  if ((v388 & 0x20000000) != 0)
    v390 = v389;
  else
    v390 = v388 & 0xCFFFFFFF;
  v478 = v390;
  v289 = v511[16];
  if ((v289 & 0x80000000) != 0)
    goto LABEL_1034;
LABEL_727:
  v290 = *(_QWORD *)(v233 + 2328);
  if (v289 >= (*(_QWORD *)(v233 + 2336) - v290) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v290 = *(_QWORD *)(v233 + 2328);
  }
  v291 = *(_DWORD *)(v290 + (v289 << 11) + 8);
  if (!**v507)
  {
LABEL_731:
    if ((v291 & 0x10000000) != 0)
      v292 = 0x40000000;
    else
      v292 = 0x80000000;
    if ((v291 & 0x20000000) != 0)
      v291 = v292;
    else
      v291 &= 0xCFFFFFFF;
  }
LABEL_737:
  v452 = v286 >> 30;
  v473 = v287 >> 30;
  v293 = v288 >> 30;
  v463 = v291 >> 30;
  v534 = v549;
  v535 = v550;
  v536 = v551;
  v532 = v547;
  v533 = v548;
  if ((v495 & 0x40000000) != 0)
  {
    v544 = v549;
    v545 = v550;
    v546 = v551;
    v543 = v548;
    v542 = v547;
    *(_QWORD *)&v597 = 0x10100D0D10100D0DLL;
    v537 = xmmword_224677540;
    v538 = (__int128)xmmword_224677550;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 1, 7, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xB900000079), xmmword_224677550);
    if ((v499 & 0x40000000) == 0)
    {
      v539 = v549;
      v540 = v550;
      v541 = v551;
      v538 = v548;
      v537 = v547;
      *(_QWORD *)&v592 = 0x101010100D0D0D0DLL;
      v597 = xmmword_224677560;
      v598 = (__int128)xmmword_224677570;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 1, 7, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xB900000079), xmmword_224677570);
      if (((v279 | v489) & 1) == 0)
      {
        v599 = v549;
        v600 = v550;
        v601 = v551;
        v597 = v547;
        v598 = v548;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224677580;
        v593 = (__int128)xmmword_224677590;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 1, 7, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xB900000079), xmmword_224677590);
        v294 = (v456 & 1) == 0 && ((v278 | v483) & 1) == 0;
        if ((v447 & 1) == 0 && v294)
        {
          v594 = v549;
          v595 = v550;
          v596 = v551;
          v593 = v548;
          v592 = v547;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_2246775A0;
          v588 = (__int128)xmmword_2246775B0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 1, 7, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3900000079), xmmword_2246775B0);
        }
      }
      v295 = (v280 & 1) == 0 && ((v278 | v483) & 1) == 0;
      if (v295 && (v468 & 1) == 0)
      {
        v589 = v534;
        v590 = v535;
        v591 = v536;
        v588 = v533;
        v587 = v532;
        *(_QWORD *)&v577 = 0x10100D0D10100D0DLL;
        v582 = xmmword_2246775C0;
        v583 = (__int128)xmmword_2246775D0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 1, 7, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3900000079), xmmword_2246775D0);
      }
    }
    if (((v489 | v473) & 1) == 0)
    {
      v584 = v534;
      v585 = v535;
      v586 = v536;
      v583 = v533;
      v582 = v532;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_2246775E0;
      v578 = (__int128)xmmword_2246775F0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 1, 7, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xB900000079), xmmword_2246775F0);
      v296 = (v286 & 0x40000000) == 0 && ((v483 | v293) & 1) == 0;
      if ((v456 & 1) == 0 && v296)
      {
        v579 = v534;
        v580 = v535;
        v581 = v536;
        v578 = v533;
        v577 = v532;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224677600;
        v573 = (__int128)xmmword_224677610;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 1, 7, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3900000079), xmmword_224677610);
      }
    }
    v297 = (v468 & 1) == 0 && ((v483 | v293) & 1) == 0;
    if (v297 && (v463 & 1) == 0)
    {
      v574 = v534;
      v575 = v535;
      v576 = v536;
      v573 = v533;
      v572 = v532;
      *(_QWORD *)&v562 = 0x101010100D0D0D0DLL;
      v567 = xmmword_224677620;
      v568 = xmmword_224677630;
      *(_QWORD *)&v557 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 1, 7, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v557, COERCE_DOUBLE(0x3900000079), xmmword_224677630);
    }
  }
  v298 = *((_DWORD *)v232 + 51);
  if (**(_BYTE **)v459)
  {
    v299 = *((_DWORD *)v232 + 115);
    v300 = *((_DWORD *)v232 + 59);
    v500 = *((_DWORD *)v232 + 123);
    v301 = v511[16];
    if ((v301 & 0x80000000) == 0)
      goto LABEL_767;
LABEL_1061:
    v303 = *(_DWORD *)(v233 + 292);
    if (**v507)
      goto LABEL_777;
    goto LABEL_771;
  }
  if ((v298 & 0x10000000) != 0)
    v391 = 0x40000000;
  else
    v391 = 0x80000000;
  if ((v298 & 0x20000000) != 0)
    v298 = v391;
  else
    v298 &= 0xCFFFFFFF;
  v392 = *((_DWORD *)v232 + 115);
  if ((v392 & 0x10000000) != 0)
    v393 = 0x40000000;
  else
    v393 = 0x80000000;
  if ((v392 & 0x20000000) != 0)
    v299 = v393;
  else
    v299 = v392 & 0xCFFFFFFF;
  v394 = *((_DWORD *)v232 + 59);
  if ((v394 & 0x10000000) != 0)
    v395 = 0x40000000;
  else
    v395 = 0x80000000;
  if ((v394 & 0x20000000) != 0)
    v300 = v395;
  else
    v300 = v394 & 0xCFFFFFFF;
  v396 = *((_DWORD *)v232 + 123);
  if ((v396 & 0x10000000) != 0)
    v397 = 0x40000000;
  else
    v397 = 0x80000000;
  if ((v396 & 0x20000000) != 0)
    v398 = v397;
  else
    v398 = v396 & 0xCFFFFFFF;
  v500 = v398;
  v301 = v511[16];
  if ((v301 & 0x80000000) != 0)
    goto LABEL_1061;
LABEL_767:
  v302 = *(_QWORD *)(v233 + 2328);
  if (v301 >= (*(_QWORD *)(v233 + 2336) - v302) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v302 = *(_QWORD *)(v233 + 2328);
  }
  v303 = *(_DWORD *)(v302 + (v301 << 11) + 12);
  if (!**v507)
  {
LABEL_771:
    if ((v303 & 0x10000000) != 0)
      v304 = 0x40000000;
    else
      v304 = 0x80000000;
    if ((v303 & 0x20000000) != 0)
      v303 = v304;
    else
      v303 &= 0xCFFFFFFF;
  }
LABEL_777:
  v448 = v298 >> 30;
  v305 = v299 >> 30;
  v306 = v300 >> 30;
  v307 = v303 >> 30;
  if ((v478 & 0x40000000) != 0)
  {
    v544 = v524;
    v545 = v525;
    v546 = v526;
    v543 = v523;
    v542 = v522;
    *(_QWORD *)&v597 = 0x10100D0D10100D0DLL;
    v537 = xmmword_224677640;
    v538 = (__int128)xmmword_224677650;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 2, 7, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xBA0000007ALL), xmmword_224677650);
    if ((v495 & 0x40000000) == 0)
    {
      v539 = v524;
      v540 = v525;
      v541 = v526;
      v538 = v523;
      v537 = v522;
      *(_QWORD *)&v592 = 0x101010100D0D0D0DLL;
      v597 = xmmword_224677660;
      v598 = (__int128)xmmword_224677670;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 2, 7, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xBA0000007ALL), xmmword_224677670);
      if (((v489 | v473) & 1) == 0)
      {
        v599 = v524;
        v600 = v525;
        v601 = v526;
        v597 = v522;
        v598 = v523;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224677680;
        v593 = (__int128)xmmword_224677690;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 2, 7, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xBA0000007ALL), xmmword_224677690);
        v308 = (v452 & 1) == 0 && ((v483 | v293) & 1) == 0;
        if ((v456 & 1) == 0 && v308)
        {
          v594 = v524;
          v595 = v525;
          v596 = v526;
          v593 = v523;
          v592 = v522;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_2246776A0;
          v588 = (__int128)xmmword_2246776B0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 2, 7, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3A0000007ALL), xmmword_2246776B0);
        }
      }
      v309 = (v468 & 1) == 0 && ((v483 | v293) & 1) == 0;
      if (v309 && (v463 & 1) == 0)
      {
        v589 = v524;
        v590 = v525;
        v591 = v526;
        v588 = v523;
        v587 = v522;
        *(_QWORD *)&v577 = 0x10100D0D10100D0DLL;
        v582 = xmmword_2246776C0;
        v583 = (__int128)xmmword_2246776D0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 2, 7, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3A0000007ALL), xmmword_2246776D0);
      }
    }
    if (((v473 | v305) & 1) == 0)
    {
      v584 = v524;
      v585 = v525;
      v586 = v526;
      v583 = v523;
      v582 = v522;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_2246776E0;
      v578 = (__int128)xmmword_2246776F0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 2, 7, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xBA0000007ALL), xmmword_2246776F0);
      v310 = (v448 & 1) == 0 && ((v293 | v306) & 1) == 0;
      if ((v452 & 1) == 0 && v310)
      {
        v579 = v524;
        v580 = v525;
        v581 = v526;
        v578 = v523;
        v577 = v522;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224677700;
        v573 = (__int128)xmmword_224677710;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 2, 7, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3A0000007ALL), xmmword_224677710);
      }
    }
    v311 = (v463 & 1) == 0 && ((v293 | v306) & 1) == 0;
    if (v311 && (v307 & 1) == 0)
    {
      v574 = v524;
      v575 = v525;
      v576 = v526;
      v573 = v523;
      v572 = v522;
      *(_QWORD *)&v562 = 0x101010100D0D0D0DLL;
      v567 = xmmword_224677720;
      v568 = xmmword_224677730;
      *(_QWORD *)&v557 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 2, 7, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v557, COERCE_DOUBLE(0x3A0000007ALL), xmmword_224677730);
    }
  }
  v312 = *((_DWORD *)v232 + 52);
  if (**(_BYTE **)v459)
  {
    v313 = *((_DWORD *)v232 + 116);
    v314 = *((_DWORD *)v232 + 60);
    v496 = *((_DWORD *)v232 + 124);
    v315 = v511[16];
    if ((v315 & 0x80000000) == 0)
      goto LABEL_807;
LABEL_1088:
    v317 = *(_DWORD *)(v233 + 296);
    if (**v507)
      goto LABEL_817;
    goto LABEL_811;
  }
  if ((v312 & 0x10000000) != 0)
    v399 = 0x40000000;
  else
    v399 = 0x80000000;
  if ((v312 & 0x20000000) != 0)
    v312 = v399;
  else
    v312 &= 0xCFFFFFFF;
  v400 = *((_DWORD *)v232 + 116);
  if ((v400 & 0x10000000) != 0)
    v401 = 0x40000000;
  else
    v401 = 0x80000000;
  if ((v400 & 0x20000000) != 0)
    v313 = v401;
  else
    v313 = v400 & 0xCFFFFFFF;
  v402 = *((_DWORD *)v232 + 60);
  if ((v402 & 0x10000000) != 0)
    v403 = 0x40000000;
  else
    v403 = 0x80000000;
  if ((v402 & 0x20000000) != 0)
    v314 = v403;
  else
    v314 = v402 & 0xCFFFFFFF;
  v404 = *((_DWORD *)v232 + 124);
  if ((v404 & 0x10000000) != 0)
    v405 = 0x40000000;
  else
    v405 = 0x80000000;
  if ((v404 & 0x20000000) != 0)
    v406 = v405;
  else
    v406 = v404 & 0xCFFFFFFF;
  v496 = v406;
  v315 = v511[16];
  if ((v315 & 0x80000000) != 0)
    goto LABEL_1088;
LABEL_807:
  v316 = *(_QWORD *)(v233 + 2328);
  if (v315 >= (*(_QWORD *)(v233 + 2336) - v316) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v316 = *(_QWORD *)(v233 + 2328);
  }
  v317 = *(_DWORD *)(v316 + (v315 << 11) + 16);
  if (!**v507)
  {
LABEL_811:
    if ((v317 & 0x10000000) != 0)
      v318 = 0x40000000;
    else
      v318 = 0x80000000;
    if ((v317 & 0x20000000) != 0)
      v317 = v318;
    else
      v317 &= 0xCFFFFFFF;
  }
LABEL_817:
  v457 = v312 >> 30;
  v490 = v313 >> 30;
  v319 = v314 >> 30;
  v469 = v317 >> 30;
  if ((v500 & 0x40000000) != 0)
  {
    v544 = v524;
    v545 = v525;
    v546 = v526;
    v543 = v523;
    v542 = v522;
    *(_QWORD *)&v597 = 0x10100D0D10100D0DLL;
    v537 = xmmword_224677740;
    v538 = (__int128)xmmword_224677750;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 3, 7, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xBB0000007BLL), xmmword_224677750);
    if ((v478 & 0x40000000) == 0)
    {
      v539 = v524;
      v540 = v525;
      v541 = v526;
      v538 = v523;
      v537 = v522;
      *(_QWORD *)&v592 = 0x101010100D0D0D0DLL;
      v597 = xmmword_224677760;
      v598 = (__int128)xmmword_224677770;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 3, 7, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xBB0000007BLL), xmmword_224677770);
      if (((v473 | v305) & 1) == 0)
      {
        v599 = v524;
        v600 = v525;
        v601 = v526;
        v597 = v522;
        v598 = v523;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224677780;
        v593 = (__int128)xmmword_224677790;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 3, 7, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xBB0000007BLL), xmmword_224677790);
        v320 = (v448 & 1) == 0 && ((v293 | v306) & 1) == 0;
        if ((v452 & 1) == 0 && v320)
        {
          v594 = v524;
          v595 = v525;
          v596 = v526;
          v593 = v523;
          v592 = v522;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_2246777A0;
          v588 = (__int128)xmmword_2246777B0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 3, 7, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3B0000007BLL), xmmword_2246777B0);
        }
      }
      v321 = (v463 & 1) == 0 && ((v293 | v306) & 1) == 0;
      if (v321 && (v307 & 1) == 0)
      {
        v589 = v524;
        v590 = v525;
        v591 = v526;
        v588 = v523;
        v587 = v522;
        *(_QWORD *)&v577 = 0x10100D0D10100D0DLL;
        v582 = xmmword_2246777C0;
        v583 = (__int128)xmmword_2246777D0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 3, 7, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3B0000007BLL), xmmword_2246777D0);
      }
    }
    if (((v305 | v490) & 1) == 0)
    {
      v584 = v524;
      v585 = v525;
      v586 = v526;
      v583 = v523;
      v582 = v522;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_2246777E0;
      v578 = (__int128)xmmword_2246777F0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 3, 7, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xBB0000007BLL), xmmword_2246777F0);
      v322 = (v312 & 0x40000000) == 0 && ((v306 | v319) & 1) == 0;
      if ((v448 & 1) == 0 && v322)
      {
        v579 = v524;
        v580 = v525;
        v581 = v526;
        v578 = v523;
        v577 = v522;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224677800;
        v573 = (__int128)xmmword_224677810;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 3, 7, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3B0000007BLL), xmmword_224677810);
      }
    }
    v323 = (v307 & 1) == 0 && ((v306 | v319) & 1) == 0;
    if (v323 && (v469 & 1) == 0)
    {
      v574 = v524;
      v575 = v525;
      v576 = v526;
      v573 = v523;
      v572 = v522;
      *(_QWORD *)&v562 = 0x101010100D0D0D0DLL;
      v567 = xmmword_224677820;
      v568 = xmmword_224677830;
      *(_QWORD *)&v557 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 3, 7, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v557, COERCE_DOUBLE(0x3B0000007BLL), xmmword_224677830);
    }
  }
  v324 = *((_DWORD *)v232 + 53);
  if (**(_BYTE **)v459)
  {
    v325 = *((_DWORD *)v232 + 117);
    v326 = *((_DWORD *)v232 + 61);
    v484 = *((_DWORD *)v232 + 125);
    v327 = v511[16];
    if ((v327 & 0x80000000) == 0)
      goto LABEL_847;
LABEL_1115:
    v329 = *(_DWORD *)(v233 + 300);
    if (**v507)
      goto LABEL_857;
    goto LABEL_851;
  }
  if ((v324 & 0x10000000) != 0)
    v407 = 0x40000000;
  else
    v407 = 0x80000000;
  if ((v324 & 0x20000000) != 0)
    v324 = v407;
  else
    v324 &= 0xCFFFFFFF;
  v408 = *((_DWORD *)v232 + 117);
  if ((v408 & 0x10000000) != 0)
    v409 = 0x40000000;
  else
    v409 = 0x80000000;
  if ((v408 & 0x20000000) != 0)
    v325 = v409;
  else
    v325 = v408 & 0xCFFFFFFF;
  v410 = *((_DWORD *)v232 + 61);
  if ((v410 & 0x10000000) != 0)
    v411 = 0x40000000;
  else
    v411 = 0x80000000;
  if ((v410 & 0x20000000) != 0)
    v326 = v411;
  else
    v326 = v410 & 0xCFFFFFFF;
  v412 = *((_DWORD *)v232 + 125);
  if ((v412 & 0x10000000) != 0)
    v413 = 0x40000000;
  else
    v413 = 0x80000000;
  if ((v412 & 0x20000000) != 0)
    v414 = v413;
  else
    v414 = v412 & 0xCFFFFFFF;
  v484 = v414;
  v327 = v511[16];
  if ((v327 & 0x80000000) != 0)
    goto LABEL_1115;
LABEL_847:
  v328 = *(_QWORD *)(v233 + 2328);
  if (v327 >= (*(_QWORD *)(v233 + 2336) - v328) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v328 = *(_QWORD *)(v233 + 2328);
  }
  v329 = *(_DWORD *)(v328 + (v327 << 11) + 20);
  if (!**v507)
  {
LABEL_851:
    if ((v329 & 0x10000000) != 0)
      v330 = 0x40000000;
    else
      v330 = 0x80000000;
    if ((v329 & 0x20000000) != 0)
      v329 = v330;
    else
      v329 &= 0xCFFFFFFF;
  }
LABEL_857:
  v453 = v324 >> 30;
  v479 = v325 >> 30;
  v331 = v326 >> 30;
  v464 = v329 >> 30;
  if ((v496 & 0x40000000) != 0)
  {
    v544 = v524;
    v545 = v525;
    v546 = v526;
    v543 = v523;
    v542 = v522;
    *(_QWORD *)&v597 = 0x10100D0D10100D0DLL;
    v537 = xmmword_224677840;
    v538 = (__int128)xmmword_224677850;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 4, 7, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xBC0000007CLL), xmmword_224677850);
    if ((v500 & 0x40000000) == 0)
    {
      v539 = v524;
      v540 = v525;
      v541 = v526;
      v538 = v523;
      v537 = v522;
      *(_QWORD *)&v592 = 0x101010100D0D0D0DLL;
      v597 = xmmword_224677860;
      v598 = (__int128)xmmword_224677870;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 4, 7, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xBC0000007CLL), xmmword_224677870);
      if (((v305 | v490) & 1) == 0)
      {
        v599 = v524;
        v600 = v525;
        v601 = v526;
        v597 = v522;
        v598 = v523;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224677880;
        v593 = (__int128)xmmword_224677890;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 4, 7, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xBC0000007CLL), xmmword_224677890);
        v332 = (v457 & 1) == 0 && ((v306 | v319) & 1) == 0;
        if ((v448 & 1) == 0 && v332)
        {
          v594 = v524;
          v595 = v525;
          v596 = v526;
          v593 = v523;
          v592 = v522;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_2246778A0;
          v588 = (__int128)xmmword_2246778B0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 4, 7, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3C0000007CLL), xmmword_2246778B0);
        }
      }
      v333 = (v307 & 1) == 0 && ((v306 | v319) & 1) == 0;
      if (v333 && (v469 & 1) == 0)
      {
        v589 = v524;
        v590 = v525;
        v591 = v526;
        v588 = v523;
        v587 = v522;
        *(_QWORD *)&v577 = 0x10100D0D10100D0DLL;
        v582 = xmmword_2246778C0;
        v583 = (__int128)xmmword_2246778D0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 4, 7, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3C0000007CLL), xmmword_2246778D0);
      }
    }
    if (((v490 | v479) & 1) == 0)
    {
      v584 = v524;
      v585 = v525;
      v586 = v526;
      v583 = v523;
      v582 = v522;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_2246778E0;
      v578 = (__int128)xmmword_2246778F0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 4, 7, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xBC0000007CLL), xmmword_2246778F0);
      v334 = (v324 & 0x40000000) == 0 && ((v319 | v331) & 1) == 0;
      if ((v457 & 1) == 0 && v334)
      {
        v579 = v524;
        v580 = v525;
        v581 = v526;
        v578 = v523;
        v577 = v522;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224677900;
        v573 = (__int128)xmmword_224677910;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 4, 7, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3C0000007CLL), xmmword_224677910);
      }
    }
    v335 = (v469 & 1) == 0 && ((v319 | v331) & 1) == 0;
    if (v335 && (v464 & 1) == 0)
    {
      v574 = v524;
      v575 = v525;
      v576 = v526;
      v573 = v523;
      v572 = v522;
      *(_QWORD *)&v562 = 0x101010100D0D0D0DLL;
      v567 = xmmword_224677920;
      v568 = xmmword_224677930;
      *(_QWORD *)&v557 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 4, 7, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v557, COERCE_DOUBLE(0x3C0000007CLL), xmmword_224677930);
    }
  }
  v336 = *((_DWORD *)v232 + 54);
  if (**(_BYTE **)v459)
  {
    v337 = *((_DWORD *)v232 + 118);
    v338 = *((_DWORD *)v232 + 62);
    v339 = *((_DWORD *)v232 + 126);
    v340 = v511[16];
    if ((v340 & 0x80000000) == 0)
      goto LABEL_887;
LABEL_1142:
    v342 = *(_DWORD *)(v233 + 304);
    if (**v507)
      goto LABEL_897;
    goto LABEL_891;
  }
  if ((v336 & 0x10000000) != 0)
    v415 = 0x40000000;
  else
    v415 = 0x80000000;
  if ((v336 & 0x20000000) != 0)
    v336 = v415;
  else
    v336 &= 0xCFFFFFFF;
  v416 = *((_DWORD *)v232 + 118);
  if ((v416 & 0x10000000) != 0)
    v417 = 0x40000000;
  else
    v417 = 0x80000000;
  if ((v416 & 0x20000000) != 0)
    v337 = v417;
  else
    v337 = v416 & 0xCFFFFFFF;
  v418 = *((_DWORD *)v232 + 62);
  if ((v418 & 0x10000000) != 0)
    v419 = 0x40000000;
  else
    v419 = 0x80000000;
  if ((v418 & 0x20000000) != 0)
    v338 = v419;
  else
    v338 = v418 & 0xCFFFFFFF;
  v420 = *((_DWORD *)v232 + 126);
  if ((v420 & 0x10000000) != 0)
    v421 = 0x40000000;
  else
    v421 = 0x80000000;
  if ((v420 & 0x20000000) != 0)
    v339 = v421;
  else
    v339 = v420 & 0xCFFFFFFF;
  v340 = v511[16];
  if ((v340 & 0x80000000) != 0)
    goto LABEL_1142;
LABEL_887:
  v341 = *(_QWORD *)(v233 + 2328);
  if (v340 >= (*(_QWORD *)(v233 + 2336) - v341) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v341 = *(_QWORD *)(v233 + 2328);
  }
  v342 = *(_DWORD *)(v341 + (v340 << 11) + 24);
  if (!**v507)
  {
LABEL_891:
    if ((v342 & 0x10000000) != 0)
      v343 = 0x40000000;
    else
      v343 = 0x80000000;
    if ((v342 & 0x20000000) != 0)
      v342 = v343;
    else
      v342 &= 0xCFFFFFFF;
  }
LABEL_897:
  v449 = v336 >> 30;
  v501 = v337 >> 30;
  v474 = v338 >> 30;
  v344 = v342 >> 30;
  v559 = v524;
  v560 = v525;
  v561 = v526;
  v558 = v523;
  v557 = v522;
  if ((v484 & 0x40000000) != 0)
  {
    v544 = v524;
    v545 = v525;
    v546 = v526;
    v543 = v523;
    v542 = v522;
    *(_QWORD *)&v597 = 0x10100D0D10100D0DLL;
    v537 = xmmword_224677940;
    v538 = (__int128)xmmword_224677950;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 5, 7, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xBD0000007DLL), xmmword_224677950);
    if ((v496 & 0x40000000) == 0)
    {
      v539 = v524;
      v540 = v525;
      v541 = v526;
      v538 = v523;
      v537 = v522;
      *(_QWORD *)&v592 = 0x101010100D0D0D0DLL;
      v597 = xmmword_224677960;
      v598 = (__int128)xmmword_224677970;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 5, 7, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xBD0000007DLL), xmmword_224677970);
      if (((v490 | v479) & 1) == 0)
      {
        v599 = v524;
        v600 = v525;
        v601 = v526;
        v597 = v522;
        v598 = v523;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224677980;
        v593 = (__int128)xmmword_224677990;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 5, 7, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xBD0000007DLL), xmmword_224677990);
        v345 = (v453 & 1) == 0 && ((v319 | v331) & 1) == 0;
        if ((v457 & 1) == 0 && v345)
        {
          v594 = v524;
          v595 = v525;
          v596 = v526;
          v593 = v523;
          v592 = v522;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_2246779A0;
          v588 = (__int128)xmmword_2246779B0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 5, 7, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3D0000007DLL), xmmword_2246779B0);
        }
      }
      v346 = (v469 & 1) == 0 && ((v319 | v331) & 1) == 0;
      if (v346 && (v464 & 1) == 0)
      {
        v589 = v559;
        v590 = v560;
        v591 = v561;
        v588 = v558;
        v587 = v557;
        *(_QWORD *)&v577 = 0x10100D0D10100D0DLL;
        v582 = xmmword_2246779C0;
        v583 = (__int128)xmmword_2246779D0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 5, 7, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3D0000007DLL), xmmword_2246779D0);
      }
    }
    if (((v479 | v501) & 1) == 0)
    {
      v584 = v559;
      v585 = v560;
      v586 = v561;
      v583 = v558;
      v582 = v557;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_2246779E0;
      v578 = (__int128)xmmword_2246779F0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 5, 7, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xBD0000007DLL), xmmword_2246779F0);
      v347 = (v336 & 0x40000000) == 0 && ((v331 | v474) & 1) == 0;
      if ((v453 & 1) == 0 && v347)
      {
        v579 = v559;
        v580 = v560;
        v581 = v561;
        v578 = v558;
        v577 = v557;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224677A00;
        v573 = (__int128)xmmword_224677A10;
        *(_QWORD *)&v562 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 5, 7, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)&v562, COERCE_DOUBLE(0x3D0000007DLL), xmmword_224677A10);
      }
    }
    v348 = (v464 & 1) == 0 && ((v331 | v474) & 1) == 0;
    if (v348 && (v344 & 1) == 0)
    {
      v574 = v559;
      v575 = v560;
      v576 = v561;
      v573 = v558;
      v572 = v557;
      *(_QWORD *)&v562 = 0x101010100D0D0D0DLL;
      v567 = xmmword_224677A20;
      v568 = xmmword_224677A30;
      *(_QWORD *)&v552 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 5, 7, 1, (uint64_t)&v562, (uint64_t)&v567, (uint64_t)&v552, COERCE_DOUBLE(0x3D0000007DLL), xmmword_224677A30);
    }
  }
  v554 = v524;
  v555 = v525;
  v556 = v526;
  v553 = v523;
  v552 = v522;
  v349 = *((_DWORD *)v232 + 55);
  if (**(_BYTE **)v459)
  {
    v350 = *((_DWORD *)v232 + 119);
    v351 = *((_DWORD *)v232 + 63);
    v352 = *((_DWORD *)v232 + 127);
    v353 = v511[16];
    if ((v353 & 0x80000000) == 0)
      goto LABEL_927;
LABEL_1169:
    v355 = *(_DWORD *)(v233 + 308);
    if (**v507)
      goto LABEL_937;
    goto LABEL_931;
  }
  if ((v349 & 0x10000000) != 0)
    v422 = 0x40000000;
  else
    v422 = 0x80000000;
  if ((v349 & 0x20000000) != 0)
    v349 = v422;
  else
    v349 &= 0xCFFFFFFF;
  v423 = *((_DWORD *)v232 + 119);
  if ((v423 & 0x10000000) != 0)
    v424 = 0x40000000;
  else
    v424 = 0x80000000;
  if ((v423 & 0x20000000) != 0)
    v350 = v424;
  else
    v350 = v423 & 0xCFFFFFFF;
  v425 = *((_DWORD *)v232 + 63);
  if ((v425 & 0x10000000) != 0)
    v426 = 0x40000000;
  else
    v426 = 0x80000000;
  if ((v425 & 0x20000000) != 0)
    v351 = v426;
  else
    v351 = v425 & 0xCFFFFFFF;
  v427 = *((_DWORD *)v232 + 127);
  if ((v427 & 0x10000000) != 0)
    v428 = 0x40000000;
  else
    v428 = 0x80000000;
  if ((v427 & 0x20000000) != 0)
    v352 = v428;
  else
    v352 = v427 & 0xCFFFFFFF;
  v353 = v511[16];
  if ((v353 & 0x80000000) != 0)
    goto LABEL_1169;
LABEL_927:
  v354 = *(_QWORD *)(v233 + 2328);
  if (v353 >= (*(_QWORD *)(v233 + 2336) - v354) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v354 = *(_QWORD *)(v233 + 2328);
  }
  v355 = *(_DWORD *)(v354 + (v353 << 11) + 28);
  if (!**v507)
  {
LABEL_931:
    if ((v355 & 0x10000000) != 0)
      v356 = 0x40000000;
    else
      v356 = 0x80000000;
    if ((v355 & 0x20000000) != 0)
      v355 = v356;
    else
      v355 &= 0xCFFFFFFF;
  }
LABEL_937:
  v504 = v350 >> 30;
  v357 = v351 >> 30;
  v491 = v349 >> 30;
  v497 = v355 >> 30;
  v564 = v524;
  v565 = v525;
  v566 = v526;
  v563 = v523;
  v562 = v522;
  if ((v339 & 0x40000000) != 0)
  {
    v544 = v524;
    v545 = v525;
    v546 = v526;
    v543 = v523;
    v542 = v522;
    *(_QWORD *)&v597 = 0x10100D0D10100D0DLL;
    v537 = xmmword_224677A40;
    v538 = (__int128)xmmword_224677A50;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 6, 7, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xBE0000007ELL), xmmword_224677A50);
    if ((v484 & 0x40000000) == 0)
    {
      v539 = v524;
      v540 = v525;
      v541 = v526;
      v538 = v523;
      v537 = v522;
      *(_QWORD *)&v592 = 0x101010100D0D0D0DLL;
      v597 = xmmword_224677A60;
      v598 = (__int128)xmmword_224677A70;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 6, 7, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xBE0000007ELL), xmmword_224677A70);
      if (((v479 | v501) & 1) == 0)
      {
        v599 = v524;
        v600 = v525;
        v601 = v526;
        v597 = v522;
        v598 = v523;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224677A80;
        v593 = (__int128)xmmword_224677A90;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 6, 7, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xBE0000007ELL), xmmword_224677A90);
        v358 = (v449 & 1) == 0 && ((v331 | v474) & 1) == 0;
        if ((v453 & 1) == 0 && v358)
        {
          v594 = v524;
          v595 = v525;
          v596 = v526;
          v593 = v523;
          v592 = v522;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_224677AA0;
          v588 = (__int128)xmmword_224677AB0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 6, 7, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3E0000007ELL), xmmword_224677AB0);
        }
      }
      v359 = (v464 & 1) == 0 && ((v331 | v474) & 1) == 0;
      if (v359 && (v344 & 1) == 0)
      {
        v589 = v564;
        v590 = v565;
        v591 = v566;
        v588 = v563;
        v587 = v562;
        *(_QWORD *)&v577 = 0x10100D0D10100D0DLL;
        v582 = xmmword_224677AC0;
        v583 = (__int128)xmmword_224677AD0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 6, 7, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3E0000007ELL), xmmword_224677AD0);
      }
    }
    if (((v501 | v504) & 1) == 0)
    {
      v584 = v564;
      v585 = v565;
      v586 = v566;
      v583 = v563;
      v582 = v562;
      *(_QWORD *)&v572 = 0xD0D0D0D0D0D0D0DLL;
      v577 = xmmword_224677AE0;
      v578 = (__int128)xmmword_224677AF0;
      *(_QWORD *)&v567 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 6, 7, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)&v567, COERCE_DOUBLE(0xBE0000007ELL), xmmword_224677AF0);
      v360 = (v349 & 0x40000000) == 0 && ((v474 | v357) & 1) == 0;
      if ((v449 & 1) == 0 && v360)
      {
        v579 = v564;
        v580 = v565;
        v581 = v566;
        v578 = v563;
        v577 = v562;
        *(_QWORD *)&v567 = 0xD0D0D0D0D0D0D0DLL;
        v572 = xmmword_224677B00;
        v573 = (__int128)xmmword_224677B10;
        *(_QWORD *)&v603[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 6, 7, 1, (uint64_t)&v567, (uint64_t)&v572, (uint64_t)v603, COERCE_DOUBLE(0x3E0000007ELL), xmmword_224677B10);
      }
    }
    v361 = (v344 & 1) == 0 && ((v474 | v357) & 1) == 0;
    if (v361 && (v497 & 1) == 0)
    {
      v574 = v564;
      v575 = v565;
      v576 = v566;
      v573 = v563;
      v572 = v562;
      *(_QWORD *)&v603[0] = 0x101010100D0D0D0DLL;
      v567 = xmmword_224677B20;
      v568 = xmmword_224677B30;
      v604[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 6, 7, 1, (uint64_t)v603, (uint64_t)&v567, (uint64_t)v604, COERCE_DOUBLE(0x3E0000007ELL), xmmword_224677B30);
    }
  }
  v362 = v511[22];
  if ((v362 & 0x80000000) != 0)
  {
    v365 = *v507;
    v366 = *(_DWORD *)(v233 + 472);
    v367 = **v507;
    if (**v507)
      goto LABEL_970;
  }
  else
  {
    v363 = *(_QWORD *)(v233 + 2328);
    if (v362 >= (*(_QWORD *)(v233 + 2336) - v363) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v363 = *(_QWORD *)(v233 + 2328);
    }
    v364 = v363 + (v362 << 11);
    v365 = *v507;
    v366 = *(_DWORD *)(v364 + 192);
    v367 = **v507;
    if (**v507)
    {
LABEL_970:
      v368 = v511[22];
      if ((v368 & 0x80000000) == 0)
        goto LABEL_971;
LABEL_1179:
      v370 = *(_DWORD *)(v233 + 728);
      if (v367)
        goto LABEL_975;
      goto LABEL_1180;
    }
  }
  if ((v366 & 0x10000000) != 0)
    v429 = 0x40000000;
  else
    v429 = 0x80000000;
  if ((v366 & 0x20000000) != 0)
    v366 = v429;
  else
    v366 &= 0xCFFFFFFF;
  v368 = v511[22];
  if ((v368 & 0x80000000) != 0)
    goto LABEL_1179;
LABEL_971:
  v369 = *(_QWORD *)(v233 + 2328);
  if (v368 >= (*(_QWORD *)(v233 + 2336) - v369) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v369 = *(_QWORD *)(v233 + 2328);
    v365 = *v507;
    v367 = **v507;
  }
  v370 = *(_DWORD *)(v369 + (v368 << 11) + 448);
  if (v367)
  {
LABEL_975:
    v371 = v511[22];
    if ((v371 & 0x80000000) == 0)
      goto LABEL_976;
LABEL_1187:
    v373 = *(_DWORD *)(v233 + 504);
    if (v367)
      goto LABEL_980;
LABEL_1188:
    if ((v373 & 0x10000000) != 0)
      v431 = 0x40000000;
    else
      v431 = 0x80000000;
    if ((v373 & 0x20000000) != 0)
      v373 = v431;
    else
      v373 &= 0xCFFFFFFF;
    v374 = v511[22];
    if ((v374 & 0x80000000) != 0)
      goto LABEL_1198;
    goto LABEL_1195;
  }
LABEL_1180:
  if ((v370 & 0x10000000) != 0)
    v430 = 0x40000000;
  else
    v430 = 0x80000000;
  if ((v370 & 0x20000000) != 0)
    v370 = v430;
  else
    v370 &= 0xCFFFFFFF;
  v371 = v511[22];
  if ((v371 & 0x80000000) != 0)
    goto LABEL_1187;
LABEL_976:
  v372 = *(_QWORD *)(v233 + 2328);
  if (v371 >= (*(_QWORD *)(v233 + 2336) - v372) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v372 = *(_QWORD *)(v233 + 2328);
    v365 = *v507;
    v367 = **v507;
  }
  v373 = *(_DWORD *)(v372 + (v371 << 11) + 224);
  if (!v367)
    goto LABEL_1188;
LABEL_980:
  v374 = v511[22];
  if ((v374 & 0x80000000) != 0)
    goto LABEL_1198;
LABEL_1195:
  if (v374 >= (uint64_t)(*(_QWORD *)(v233 + 2336) - *(_QWORD *)(v233 + 2328)) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v365 = *v507;
  }
LABEL_1198:
  v432 = v511[25];
  if ((v432 & 0x80000000) != 0)
  {
    v434 = v339;
    v435 = *(_DWORD *)(v233 + 280);
    if (*v365)
      goto LABEL_1209;
    goto LABEL_1203;
  }
  v433 = *(_QWORD *)(v233 + 2328);
  if (v432 >= (*(_QWORD *)(v233 + 2336) - v433) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v433 = *(_QWORD *)(v233 + 2328);
    v365 = *v507;
  }
  v434 = v339;
  v435 = *(_DWORD *)(v433 + (v432 << 11));
  if (!*v365)
  {
LABEL_1203:
    if ((v435 & 0x10000000) != 0)
      v436 = 0x40000000;
    else
      v436 = 0x80000000;
    if ((v435 & 0x20000000) != 0)
      v435 = v436;
    else
      v435 &= 0xCFFFFFFF;
  }
LABEL_1209:
  v569 = v554;
  v570 = v555;
  v571 = v556;
  v568 = (float32x4_t)v553;
  v567 = v552;
  if ((v352 & 0x40000000) != 0)
  {
    v437 = (v434 & 0x40000000) == 0;
    v544 = v554;
    v545 = v555;
    v546 = v556;
    *(_QWORD *)&v597 = 0x1919161610100D0DLL;
    v543 = v553;
    v542 = v552;
    v537 = xmmword_224677B40;
    v538 = (__int128)xmmword_224677B50;
    *(_QWORD *)&v592 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v542, 7, 7, 1, (uint64_t)&v597, (uint64_t)&v537, (uint64_t)&v592, COERCE_DOUBLE(0xBF0000007FLL), xmmword_224677B50);
    if (v437)
    {
      v539 = v554;
      v540 = v555;
      v541 = v556;
      *(_QWORD *)&v592 = 0x101010100D0D0D0DLL;
      v538 = v553;
      v537 = v552;
      v597 = xmmword_224677B60;
      v598 = (__int128)xmmword_224677B70;
      *(_QWORD *)&v587 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v537, 7, 7, 1, (uint64_t)&v592, (uint64_t)&v597, (uint64_t)&v587, COERCE_DOUBLE(0xBF0000007FLL), xmmword_224677B70);
      if (((v501 | v504) & 1) == 0)
      {
        v599 = v554;
        v600 = v555;
        v601 = v556;
        v597 = v552;
        v598 = v553;
        *(_QWORD *)&v587 = 0xD0D0D0D0D0D0D0DLL;
        v592 = xmmword_224677B80;
        v593 = (__int128)xmmword_224677B90;
        *(_QWORD *)&v582 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v597, 7, 7, 1, (uint64_t)&v587, (uint64_t)&v592, (uint64_t)&v582, COERCE_DOUBLE(0xBF0000007FLL), xmmword_224677B90);
        v438 = (v491 & 1) == 0 && ((v474 | v357) & 1) == 0;
        if ((v449 & 1) == 0 && v438)
        {
          v594 = v554;
          v595 = v555;
          v596 = v556;
          v593 = v553;
          v592 = v552;
          *(_QWORD *)&v582 = 0xD0D0D0D0D0D0D0DLL;
          v587 = xmmword_224677BA0;
          v588 = (__int128)xmmword_224677BB0;
          *(_QWORD *)&v577 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v592, 7, 7, 1, (uint64_t)&v582, (uint64_t)&v587, (uint64_t)&v577, COERCE_DOUBLE(0x3F0000007FLL), xmmword_224677BB0);
        }
      }
      v439 = (v344 & 1) == 0 && ((v474 | v357) & 1) == 0;
      if (v439 && (v497 & 1) == 0)
      {
        v589 = v569;
        v590 = v570;
        v591 = v571;
        *(_QWORD *)&v577 = 0x10100D0D10100D0DLL;
        v588 = (__int128)v568;
        v587 = v567;
        v582 = xmmword_224677BC0;
        v583 = (__int128)xmmword_224677BD0;
        *(_QWORD *)&v572 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v587, 7, 7, 1, (uint64_t)&v577, (uint64_t)&v582, (uint64_t)&v572, COERCE_DOUBLE(0x3F0000007FLL), xmmword_224677BD0);
      }
    }
    if (!(v370 & 0x40000000 | v504 & 1))
    {
      v584 = v569;
      v585 = v570;
      v586 = v571;
      *(_QWORD *)&v572 = 0x16160D0D16160D0DLL;
      v583 = (__int128)v568;
      v582 = v567;
      v577 = xmmword_224677BE0;
      v578 = (__int128)xmmword_224677BF0;
      *(_QWORD *)&v603[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v582, 7, 7, 1, (uint64_t)&v572, (uint64_t)&v577, (uint64_t)v603, COERCE_DOUBLE(0xBF0000007FLL), xmmword_224677BF0);
      v440 = (v366 & 0x40000000) == 0 && (v373 & 0x40000000 | v357 & 1) == 0;
      if ((v491 & 1) == 0 && v440)
      {
        v579 = v569;
        v580 = v570;
        v581 = v571;
        *(_QWORD *)&v603[0] = 0x161616160D0D0D0DLL;
        v578 = (__int128)v568;
        v577 = v567;
        v572 = xmmword_224677C00;
        v573 = (__int128)xmmword_224677C10;
        v604[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v577, 7, 7, 1, (uint64_t)v603, (uint64_t)&v572, (uint64_t)v604, COERCE_DOUBLE(0x3F0000007FLL), xmmword_224677C10);
      }
    }
    v441 = (v497 & 1) == 0 && (v373 & 0x40000000 | v357 & 1) == 0;
    if (v441 && (v435 & 0x40000000) == 0)
    {
      v574 = v569;
      v575 = v570;
      v576 = v571;
      v604[0] = 0x1919101016160D0DLL;
      v573 = (__int128)v568;
      v572 = v567;
      v603[0] = xmmword_224677C20;
      v603[1] = xmmword_224677C30;
      v602 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v572, 7, 7, 1, (uint64_t)v604, (uint64_t)v603, (uint64_t)&v602, COERCE_DOUBLE(0x3F0000007FLL), xmmword_224677C30);
    }
  }
  v537 = v459;
  *(_QWORD *)&v538 = v232;
  *(_QWORD *)&v597 = v233;
  *((_QWORD *)&v597 + 1) = v511;
  *(_QWORD *)&v598 = v507;
  v546 = v516;
  v545 = v515;
  v544 = v514;
  v542 = v512;
  v543 = v513;
  return sub_223DC5A1C((unsigned __int8 ***)&v537, (uint64_t *)&v597, &v542);
}

unint64_t sub_223DC5A1C(unsigned __int8 ***a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v6;
  _BYTE **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  _BYTE **v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned __int8 **v23;
  unsigned __int8 **v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int *v32;
  int v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  _BYTE **v43;
  unint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  unsigned int v47;
  uint64_t v48;
  _BYTE **v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  unsigned int v53;
  uint64_t v54;
  _BYTE **v55;
  unint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  unsigned int v59;
  uint64_t v60;
  _BYTE **v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  unsigned int v66;
  _BYTE *v67;
  unsigned int v68;
  _BYTE *v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unint64_t v73;
  uint64_t v74;
  unsigned int v75;
  int v76;
  unint64_t v77;
  uint64_t v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned __int8 **v92;
  _BOOL4 v93;
  _BOOL4 v94;
  _BOOL4 v95;
  _BOOL4 v96;
  unint64_t v97;
  uint64_t v98;
  unsigned int v99;
  int v100;
  unint64_t v101;
  uint64_t v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  _BOOL4 v114;
  _BOOL4 v115;
  _BOOL4 v116;
  _BOOL4 v117;
  unint64_t v118;
  uint64_t v119;
  unsigned int v120;
  int v121;
  unint64_t v122;
  uint64_t v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  _BOOL4 v135;
  _BOOL4 v136;
  _BOOL4 v137;
  _BOOL4 v138;
  unint64_t v139;
  uint64_t v140;
  unsigned int v141;
  int v142;
  unint64_t v143;
  uint64_t v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  _BOOL4 v157;
  _BOOL4 v158;
  _BOOL4 v159;
  _BOOL4 v160;
  _BOOL4 v161;
  unint64_t v162;
  uint64_t v163;
  unsigned int v164;
  int v165;
  unint64_t v166;
  uint64_t v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  _BOOL4 v179;
  _BOOL4 v180;
  _BOOL4 v181;
  _BOOL4 v182;
  unint64_t v183;
  uint64_t v184;
  unsigned int v185;
  int v186;
  unint64_t v187;
  uint64_t v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  _BOOL4 v200;
  _BOOL4 v201;
  _BOOL4 v202;
  _BOOL4 v203;
  unint64_t v204;
  uint64_t v205;
  unsigned int v206;
  int v207;
  unint64_t v208;
  uint64_t v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  _BOOL4 v223;
  _BOOL4 v224;
  _BOOL4 v225;
  _BOOL4 v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _BYTE *v230;
  unsigned int v231;
  int v232;
  unint64_t v233;
  uint64_t v234;
  unsigned int v235;
  unint64_t v236;
  uint64_t v237;
  unsigned int v238;
  unint64_t v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  uint64_t v243;
  unint64_t v244;
  unsigned int v245;
  unsigned int v246;
  _BOOL4 v247;
  _BOOL4 v248;
  _BOOL4 v249;
  _BOOL4 v250;
  _BOOL4 v251;
  unsigned __int8 **v252;
  unsigned int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  unsigned int v268;
  unint64_t v269;
  uint64_t v270;
  unsigned int v271;
  int v272;
  unint64_t v273;
  uint64_t v274;
  unsigned int v275;
  unint64_t v276;
  uint64_t v277;
  unsigned int v278;
  unint64_t v279;
  uint64_t v280;
  unsigned int v281;
  unint64_t v282;
  uint64_t v283;
  uint64_t v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  _BOOL4 v303;
  _BOOL4 v304;
  _BOOL4 v305;
  _BOOL4 v306;
  _BOOL4 v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  int v314;
  unsigned int v315;
  int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  _BOOL4 v322;
  _BOOL4 v323;
  _BOOL4 v324;
  _BOOL4 v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  _BOOL4 v341;
  _BOOL4 v342;
  _BOOL4 v343;
  _BOOL4 v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  int v357;
  _BOOL4 v358;
  _BOOL4 v359;
  _BOOL4 v360;
  _BOOL4 v361;
  _BOOL4 v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  unsigned int v377;
  _BOOL4 v378;
  _BOOL4 v379;
  _BOOL4 v380;
  _BOOL4 v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  int v387;
  unsigned int v388;
  int v389;
  unsigned int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  int v394;
  _BOOL4 v395;
  _BOOL4 v396;
  _BOOL4 v397;
  _BOOL4 v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  unsigned int v406;
  int v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  _BOOL4 v415;
  _BOOL4 v416;
  _BOOL4 v417;
  _BOOL4 v418;
  unint64_t v419;
  uint64_t v420;
  uint64_t v421;
  _BYTE *v422;
  unsigned int v423;
  int v424;
  unint64_t v425;
  uint64_t v426;
  unsigned int v427;
  unint64_t v428;
  uint64_t v429;
  unsigned int v430;
  unint64_t v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  uint64_t v435;
  unint64_t v436;
  unsigned int v437;
  unsigned int v438;
  _BOOL4 v439;
  _BOOL4 v440;
  _BOOL4 v441;
  _BOOL4 v442;
  _BOOL4 v443;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  __int128 v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned __int8 ***v475;
  unsigned int v476;
  unsigned int v477;
  _OWORD *v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  int v491;
  unsigned int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned int v498;
  int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  unsigned int v504;
  _BYTE **v505;
  unsigned int v506;
  unsigned int v507;
  unsigned int v508;
  unsigned int v509;
  unsigned __int8 **v510;
  unsigned int v511;
  int v512;
  unsigned int v513;
  unsigned int v514;
  uint64_t v515;
  _BYTE **v516;
  uint64_t v517;
  __int128 v518;
  float32x4_t v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  float32x4_t v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  float32x4_t v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  float32x4_t v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  float32x4_t v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  float32x4_t v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  float32x4_t v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  float32x4_t v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  float32x4_t v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  float32x4_t v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  float32x4_t v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  float32x4_t v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  __int128 v578;
  float32x4_t v579;
  __int128 v580;
  __int128 v581;
  __int128 v582;
  __int128 v583;
  float32x4_t v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  __int128 v588;
  float32x4_t v589;
  __int128 v590;
  __int128 v591;
  __int128 v592;
  __int128 v593;
  float32x4_t v594;
  __int128 v595;
  __int128 v596;
  __int128 v597;
  __int128 v598;
  float32x4_t v599;
  __int128 v600;
  __int128 v601;
  __int128 v602;
  uint64_t v603;
  _OWORD v604[2];
  _QWORD v605[3];

  v605[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v7 = (_BYTE **)a2[2];
  v8 = *(unsigned int *)(a2[1] + 40);
  if ((v8 & 0x80000000) != 0)
  {
    v10 = v6 + 280;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 2328);
    if (v8 >= (*(_QWORD *)(v6 + 2336) - v9) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v9 = *(_QWORD *)(v6 + 2328);
    }
    v10 = v9 + (v8 << 11);
  }
  v11 = *(_DWORD *)(v10 + 480);
  v12 = v11 & 0xCFFFFFFF;
  if ((v11 & 0x10000000) != 0)
    v13 = 0x40000000;
  else
    v13 = 0x80000000;
  if ((v11 & 0x20000000) != 0)
    v12 = v13;
  if (**v7)
    v14 = v11;
  else
    v14 = v12;
  v15 = *a2;
  v16 = (_BYTE **)a2[2];
  v17 = *(unsigned int *)(a2[1] + 40);
  v506 = v14;
  if ((v17 & 0x80000000) != 0)
  {
    v19 = v15 + 280;
  }
  else
  {
    v18 = *(_QWORD *)(v15 + 2328);
    if (v17 >= (*(_QWORD *)(v15 + 2336) - v18) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v18 = *(_QWORD *)(v15 + 2328);
    }
    v19 = v18 + (v17 << 11);
  }
  v20 = *(_DWORD *)(v19 + 736);
  v21 = v20 & 0xCFFFFFFF;
  if ((v20 & 0x10000000) != 0)
    v22 = 0x40000000;
  else
    v22 = 0x80000000;
  if ((v20 & 0x20000000) != 0)
    v21 = v22;
  if (!**v16)
    v20 = v21;
  v501 = v20;
  v23 = a1[2];
  v24 = *a1;
  v25 = *((_DWORD *)v23 + 64);
  if (***a1)
  {
    v26 = *((_DWORD *)v23 + 128);
    v27 = *((_DWORD *)v23 + 72);
  }
  else
  {
    if ((v25 & 0x20000000) != 0)
      v25 *= 4;
    v28 = *((_DWORD *)v23 + 128);
    if ((v28 & 0x20000000) != 0)
      v26 = 4 * v28;
    else
      v26 = *((_DWORD *)v23 + 128);
    v29 = *((_DWORD *)v23 + 72);
    if ((v29 & 0x10000000) != 0)
      v30 = 0x40000000;
    else
      v30 = 0x80000000;
    if ((v29 & 0x20000000) != 0)
      v27 = v30;
    else
      v27 = v29 & 0xCFFFFFFF;
  }
  v31 = *a2;
  v32 = (unsigned int *)a2[1];
  v516 = (_BYTE **)a2[2];
  v475 = a1;
  v478 = a3;
  v512 = v26;
  v496 = v27;
  if ((v26 & 0x40000000) == 0)
  {
    v486 = 0;
    v491 = 0;
    v33 = 0;
    v34 = 0;
    v465 = 0;
    goto LABEL_110;
  }
  v35 = v32[1];
  if ((v35 & 0x80000000) != 0)
  {
    v37 = v31 + 280;
  }
  else
  {
    v36 = *(_QWORD *)(v31 + 2328);
    if (v35 >= (*(_QWORD *)(v31 + 2336) - v36) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v36 = *(_QWORD *)(v31 + 2328);
    }
    v37 = v36 + (v35 << 11);
  }
  v38 = *(_DWORD *)(v37 + 508);
  v39 = v38 & 0xCFFFFFFF;
  if ((v38 & 0x10000000) != 0)
    v40 = 0x40000000;
  else
    v40 = 0x80000000;
  if ((v38 & 0x20000000) != 0)
    v39 = v40;
  if (**v516)
    v41 = v38;
  else
    v41 = v39;
  v42 = *a2;
  v43 = (_BYTE **)a2[2];
  v44 = *(unsigned int *)(a2[1] + 4);
  if ((v44 & 0x80000000) != 0)
  {
    v65 = *v43;
    v47 = *(_DWORD *)(v42 + 1044);
    if (*v65)
      goto LABEL_62;
  }
  else
  {
    v45 = *(_QWORD *)(v42 + 2328);
    if (v44 >= (*(_QWORD *)(v42 + 2336) - v45) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v45 = *(_QWORD *)(v42 + 2328);
    }
    v46 = *v43;
    v47 = *(_DWORD *)(v45 + (v44 << 11) + 764);
    if (*v46)
    {
LABEL_62:
      v48 = *a2;
      v49 = (_BYTE **)a2[2];
      v50 = *(unsigned int *)(a2[1] + 16);
      if ((v50 & 0x80000000) == 0)
        goto LABEL_63;
LABEL_85:
      v67 = *v49;
      v53 = *(_DWORD *)(v48 + 564);
      if (*v67)
        goto LABEL_67;
      goto LABEL_86;
    }
  }
  if ((v47 & 0x10000000) != 0)
    v66 = 0x40000000;
  else
    v66 = 0x80000000;
  if ((v47 & 0x20000000) != 0)
    v47 = v66;
  else
    v47 &= 0xCFFFFFFF;
  v48 = *a2;
  v49 = (_BYTE **)a2[2];
  v50 = *(unsigned int *)(a2[1] + 16);
  if ((v50 & 0x80000000) != 0)
    goto LABEL_85;
LABEL_63:
  v51 = *(_QWORD *)(v48 + 2328);
  if (v50 >= (*(_QWORD *)(v48 + 2336) - v51) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_1299;
    }
    v51 = *(_QWORD *)(v48 + 2328);
  }
  v52 = *v49;
  v53 = *(_DWORD *)(v51 + (v50 << 11) + 284);
  if (*v52)
  {
LABEL_67:
    v54 = *a2;
    v55 = (_BYTE **)a2[2];
    v56 = *(unsigned int *)(a2[1] + 16);
    if ((v56 & 0x80000000) == 0)
      goto LABEL_68;
LABEL_93:
    v69 = *v55;
    v59 = *(_DWORD *)(v54 + 820);
    if (*v69)
      goto LABEL_72;
LABEL_94:
    if ((v59 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v59 & 0x20000000) != 0)
      v59 = v70;
    else
      v59 &= 0xCFFFFFFF;
    v60 = *a2;
    v61 = (_BYTE **)a2[2];
    v62 = *(unsigned int *)(a2[1] + 16);
    if ((v62 & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_101;
  }
LABEL_86:
  if ((v53 & 0x10000000) != 0)
    v68 = 0x40000000;
  else
    v68 = 0x80000000;
  if ((v53 & 0x20000000) != 0)
    v53 = v68;
  else
    v53 &= 0xCFFFFFFF;
  v54 = *a2;
  v55 = (_BYTE **)a2[2];
  v56 = *(unsigned int *)(a2[1] + 16);
  if ((v56 & 0x80000000) != 0)
    goto LABEL_93;
LABEL_68:
  v57 = *(_QWORD *)(v54 + 2328);
  if (v56 >= (*(_QWORD *)(v54 + 2336) - v57) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_1299;
    }
    v57 = *(_QWORD *)(v54 + 2328);
  }
  v58 = *v55;
  v59 = *(_DWORD *)(v57 + (v56 << 11) + 540);
  if (!*v58)
    goto LABEL_94;
LABEL_72:
  v60 = *a2;
  v61 = (_BYTE **)a2[2];
  v62 = *(unsigned int *)(a2[1] + 16);
  if ((v62 & 0x80000000) == 0)
  {
LABEL_73:
    v63 = *(_QWORD *)(v60 + 2328);
    if (v62 >= (*(_QWORD *)(v60 + 2336) - v63) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v63 = *(_QWORD *)(v60 + 2328);
    }
    v64 = v63 + (v62 << 11);
    goto LABEL_102;
  }
LABEL_101:
  v64 = v60 + 280;
LABEL_102:
  v465 = (v41 >> 30) & 1;
  v491 = (v47 >> 30) & 1;
  v34 = (v53 >> 30) & 1;
  v33 = (v59 >> 30) & 1;
  v71 = *(_DWORD *)(v64 + 316);
  if (!**v61)
  {
    if ((v71 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v71 & 0x20000000) != 0)
      v71 = v72;
    else
      v71 &= 0xCFFFFFFF;
  }
  v486 = (v71 >> 30) & 1;
  a3 = v478;
  v24 = *v475;
  v23 = v475[2];
  v31 = *a2;
  v32 = (unsigned int *)a2[1];
  v516 = (_BYTE **)a2[2];
LABEL_110:
  v525 = a3[2];
  v526 = a3[3];
  v527 = a3[4];
  v523 = *a3;
  v524 = *((float32x4_t *)a3 + 1);
  v73 = v32[10];
  if ((v73 & 0x80000000) != 0)
  {
    v75 = *(_DWORD *)(v31 + 764);
    v76 = **v516;
    if (**v516)
      goto LABEL_115;
  }
  else
  {
    v74 = *(_QWORD *)(v31 + 2328);
    if (v73 >= (*(_QWORD *)(v31 + 2336) - v74) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v74 = *(_QWORD *)(v31 + 2328);
    }
    v75 = *(_DWORD *)(v74 + (v73 << 11) + 484);
    v76 = **v516;
    if (**v516)
    {
LABEL_115:
      v77 = v32[10];
      if ((v77 & 0x80000000) == 0)
        goto LABEL_116;
LABEL_136:
      v79 = *(_DWORD *)(v31 + 1020);
      if (!v76)
        goto LABEL_120;
      goto LABEL_126;
    }
  }
  if ((v75 & 0x10000000) != 0)
    v83 = 0x40000000;
  else
    v83 = 0x80000000;
  if ((v75 & 0x20000000) != 0)
    v75 = v83;
  else
    v75 &= 0xCFFFFFFF;
  v77 = v32[10];
  if ((v77 & 0x80000000) != 0)
    goto LABEL_136;
LABEL_116:
  v78 = *(_QWORD *)(v31 + 2328);
  if (v77 < (*(_QWORD *)(v31 + 2336) - v78) >> 11)
    goto LABEL_119;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
LABEL_1299:
    abort();
  }
  v78 = *(_QWORD *)(v31 + 2328);
  v76 = **v516;
LABEL_119:
  v79 = *(_DWORD *)(v78 + (v77 << 11) + 740);
  if (!v76)
  {
LABEL_120:
    if ((v79 & 0x10000000) != 0)
      v80 = 0x40000000;
    else
      v80 = 0x80000000;
    if ((v79 & 0x20000000) != 0)
      v79 = v80;
    else
      v79 &= 0xCFFFFFFF;
  }
LABEL_126:
  v460 = v506 >> 30;
  v81 = *((_DWORD *)v23 + 65);
  if (**v24)
  {
    v507 = *((_DWORD *)v23 + 129);
    v82 = *((_DWORD *)v23 + 73);
  }
  else
  {
    if ((v81 & 0x10000000) != 0)
      v84 = 0x40000000;
    else
      v84 = 0x80000000;
    if ((v81 & 0x20000000) != 0)
      v81 = v84;
    else
      v81 &= 0xCFFFFFFF;
    v85 = *((_DWORD *)v23 + 129);
    if ((v85 & 0x10000000) != 0)
      v86 = 0x40000000;
    else
      v86 = 0x80000000;
    if ((v85 & 0x20000000) != 0)
      v87 = v86;
    else
      v87 = v85 & 0xCFFFFFFF;
    v507 = v87;
    v88 = *((_DWORD *)v23 + 73);
    if ((v88 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v88 & 0x20000000) != 0)
      v82 = v89;
    else
      v82 = v88 & 0xCFFFFFFF;
  }
  v457 = v75 >> 30;
  v481 = v501 >> 30;
  v90 = v25 >> 30;
  v91 = v496 >> 30;
  v497 = v81 >> 30;
  v502 = v79 >> 30;
  v471 = v82 >> 30;
  v92 = v24;
  if ((v512 & 0x40000000) != 0)
  {
    v545 = v525;
    v546 = v526;
    v547 = v527;
    v544 = v524;
    v543 = v523;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224677C40;
    v539 = xmmword_224677C50;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 0, 0, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xC000000080), xmmword_224677C50);
    if (!v33)
    {
      v540 = v525;
      v541 = v526;
      v542 = v527;
      *(_QWORD *)&v593 = 0x4040D0D04040D0DLL;
      v539 = v524;
      v538 = v523;
      v598 = xmmword_224677C60;
      v599 = xmmword_224677C70;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 0, 0, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xC000000080), xmmword_224677C70);
      if (!(v491 | v481 & 1))
      {
        v600 = v525;
        v601 = v526;
        v602 = v527;
        *(_QWORD *)&v588 = 0x10104040A0A0D0DLL;
        v598 = v523;
        v599 = v524;
        v593 = xmmword_224677C80;
        v594 = xmmword_224677C90;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 0, 0, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xC000000080), xmmword_224677C90);
        v93 = (v460 & 1) == 0 && (v34 | v90 & 1) == 0;
        if (!v465 && v93)
        {
          v595 = v525;
          v596 = v526;
          v597 = v527;
          v594 = v524;
          v593 = v523;
          *(_QWORD *)&v583 = 0x1010A0A04040D0DLL;
          v588 = xmmword_224677CA0;
          v589 = xmmword_224677CB0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 0, 0, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4000000080), xmmword_224677CB0);
        }
      }
      if (v486)
        v94 = 0;
      else
        v94 = (v34 | v90 & 1) == 0;
      if (v94 && (v91 & 1) == 0)
      {
        v590 = v525;
        v591 = v526;
        v592 = v527;
        *(_QWORD *)&v578 = 0x40404040D0D0D0DLL;
        v589 = v524;
        v588 = v523;
        v583 = xmmword_224677CC0;
        v584 = xmmword_224677CD0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 0, 0, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4000000080), xmmword_224677CD0);
      }
    }
    if (((v481 | v502) & 1) == 0)
    {
      v585 = v525;
      v586 = v526;
      v587 = v527;
      v584 = v524;
      v583 = v523;
      *(_QWORD *)&v573 = 0xA0A0A0A0D0D0D0DLL;
      v578 = xmmword_224677CE0;
      v579 = xmmword_224677CF0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 0, 0, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xC000000080), xmmword_224677CF0);
      v95 = (v457 & 1) == 0 && ((v90 | v497) & 1) == 0;
      if ((v460 & 1) == 0 && v95)
      {
        v580 = v525;
        v581 = v526;
        v582 = v527;
        v579 = v524;
        v578 = v523;
        *(_QWORD *)&v568 = 0xA0A0D0D0A0A0D0DLL;
        v573 = xmmword_224677D00;
        v574 = xmmword_224677D10;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 0, 0, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4000000080), xmmword_224677D10);
      }
    }
    v96 = (v91 & 1) == 0 && ((v90 | v497) & 1) == 0;
    if (v96 && (v471 & 1) == 0)
    {
      v575 = v525;
      v576 = v526;
      v577 = v527;
      v574 = v524;
      v573 = v523;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224677D20;
      v569 = xmmword_224677D30;
      *(_QWORD *)&v558 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 0, 0, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0x4000000080), xmmword_224677D30);
    }
  }
  v97 = v32[10];
  if ((v97 & 0x80000000) != 0)
  {
    v99 = *(_DWORD *)(v31 + 768);
    v100 = **v516;
    if (**v516)
      goto LABEL_189;
  }
  else
  {
    v98 = *(_QWORD *)(v31 + 2328);
    if (v97 >= (*(_QWORD *)(v31 + 2336) - v98) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v98 = *(_QWORD *)(v31 + 2328);
    }
    v99 = *(_DWORD *)(v98 + (v97 << 11) + 488);
    v100 = **v516;
    if (**v516)
    {
LABEL_189:
      v101 = v32[10];
      if ((v101 & 0x80000000) == 0)
        goto LABEL_190;
LABEL_204:
      v103 = *(_DWORD *)(v31 + 1024);
      if (v100)
        goto LABEL_194;
LABEL_205:
      if ((v103 & 0x10000000) != 0)
        v108 = 0x40000000;
      else
        v108 = 0x80000000;
      if ((v103 & 0x20000000) != 0)
        v103 = v108;
      else
        v103 &= 0xCFFFFFFF;
      v104 = *((_DWORD *)v23 + 66);
      if (**v92)
        goto LABEL_195;
      goto LABEL_212;
    }
  }
  if ((v99 & 0x10000000) != 0)
    v107 = 0x40000000;
  else
    v107 = 0x80000000;
  if ((v99 & 0x20000000) != 0)
    v99 = v107;
  else
    v99 &= 0xCFFFFFFF;
  v101 = v32[10];
  if ((v101 & 0x80000000) != 0)
    goto LABEL_204;
LABEL_190:
  v102 = *(_QWORD *)(v31 + 2328);
  if (v101 >= (*(_QWORD *)(v31 + 2336) - v102) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v102 = *(_QWORD *)(v31 + 2328);
    v100 = **v516;
  }
  v103 = *(_DWORD *)(v102 + (v101 << 11) + 744);
  if (!v100)
    goto LABEL_205;
LABEL_194:
  v104 = *((_DWORD *)v23 + 66);
  if (**v92)
  {
LABEL_195:
    v105 = *((_DWORD *)v23 + 130);
    v106 = *((_DWORD *)v23 + 74);
    goto LABEL_230;
  }
LABEL_212:
  if ((v104 & 0x10000000) != 0)
    v109 = 0x40000000;
  else
    v109 = 0x80000000;
  if ((v104 & 0x20000000) != 0)
    v104 = v109;
  else
    v104 &= 0xCFFFFFFF;
  v110 = *((_DWORD *)v23 + 130);
  if ((v110 & 0x10000000) != 0)
    v111 = 0x40000000;
  else
    v111 = 0x80000000;
  if ((v110 & 0x20000000) != 0)
    v105 = v111;
  else
    v105 = v110 & 0xCFFFFFFF;
  v112 = *((_DWORD *)v23 + 74);
  if ((v112 & 0x10000000) != 0)
    v113 = 0x40000000;
  else
    v113 = 0x80000000;
  if ((v112 & 0x20000000) != 0)
    v106 = v113;
  else
    v106 = v112 & 0xCFFFFFFF;
LABEL_230:
  v453 = v99 >> 30;
  v487 = v104 >> 30;
  v492 = v103 >> 30;
  v466 = v106 >> 30;
  if ((v507 & 0x40000000) != 0)
  {
    v545 = v525;
    v546 = v526;
    v547 = v527;
    v544 = v524;
    v543 = v523;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224677D40;
    v539 = xmmword_224677D50;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 1, 0, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xC100000081), xmmword_224677D50);
    if ((v512 & 0x40000000) == 0)
    {
      v540 = v525;
      v541 = v526;
      v542 = v527;
      v539 = v524;
      v538 = v523;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224677D60;
      v599 = xmmword_224677D70;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 1, 0, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xC100000081), xmmword_224677D70);
      if (((v481 | v502) & 1) == 0)
      {
        v600 = v525;
        v601 = v526;
        v602 = v527;
        v598 = v523;
        v599 = v524;
        *(_QWORD *)&v588 = 0xA0A0D0D0A0A0D0DLL;
        v593 = xmmword_224677D80;
        v594 = xmmword_224677D90;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 1, 0, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xC100000081), xmmword_224677D90);
        v114 = (v457 & 1) == 0 && ((v90 | v497) & 1) == 0;
        if ((v460 & 1) == 0 && v114)
        {
          v595 = v525;
          v596 = v526;
          v597 = v527;
          v594 = v524;
          v593 = v523;
          *(_QWORD *)&v583 = 0xA0A0A0A0D0D0D0DLL;
          v588 = xmmword_224677DA0;
          v589 = xmmword_224677DB0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 1, 0, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4100000081), xmmword_224677DB0);
        }
      }
      v115 = (v91 & 1) == 0 && ((v90 | v497) & 1) == 0;
      if (v115 && (v471 & 1) == 0)
      {
        v590 = v525;
        v591 = v526;
        v592 = v527;
        v589 = v524;
        v588 = v523;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_224677DC0;
        v584 = xmmword_224677DD0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 1, 0, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4100000081), xmmword_224677DD0);
      }
    }
    if (((v502 | v492) & 1) == 0)
    {
      v585 = v525;
      v586 = v526;
      v587 = v527;
      v584 = v524;
      v583 = v523;
      *(_QWORD *)&v573 = 0xA0A0A0A0D0D0D0DLL;
      v578 = xmmword_224677DE0;
      v579 = xmmword_224677DF0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 1, 0, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xC100000081), xmmword_224677DF0);
      v116 = (v99 & 0x40000000) == 0 && ((v497 | v487) & 1) == 0;
      if ((v457 & 1) == 0 && v116)
      {
        v580 = v525;
        v581 = v526;
        v582 = v527;
        v579 = v524;
        v578 = v523;
        *(_QWORD *)&v568 = 0xA0A0D0D0A0A0D0DLL;
        v573 = xmmword_224677E00;
        v574 = xmmword_224677E10;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 1, 0, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4100000081), xmmword_224677E10);
      }
    }
    v117 = (v471 & 1) == 0 && ((v497 | v487) & 1) == 0;
    if (v117 && (v466 & 1) == 0)
    {
      v575 = v525;
      v576 = v526;
      v577 = v527;
      v574 = v524;
      v573 = v523;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224677E20;
      v569 = xmmword_224677E30;
      *(_QWORD *)&v558 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 1, 0, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0x4100000081), xmmword_224677E30);
    }
  }
  v118 = v32[10];
  if ((v118 & 0x80000000) != 0)
  {
    v120 = *(_DWORD *)(v31 + 772);
    v121 = **v516;
    if (**v516)
      goto LABEL_263;
  }
  else
  {
    v119 = *(_QWORD *)(v31 + 2328);
    if (v118 >= (*(_QWORD *)(v31 + 2336) - v119) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v119 = *(_QWORD *)(v31 + 2328);
    }
    v120 = *(_DWORD *)(v119 + (v118 << 11) + 492);
    v121 = **v516;
    if (**v516)
    {
LABEL_263:
      v122 = v32[10];
      if ((v122 & 0x80000000) == 0)
        goto LABEL_264;
LABEL_278:
      v124 = *(_DWORD *)(v31 + 1028);
      if (v121)
        goto LABEL_268;
LABEL_279:
      if ((v124 & 0x10000000) != 0)
        v129 = 0x40000000;
      else
        v129 = 0x80000000;
      if ((v124 & 0x20000000) != 0)
        v124 = v129;
      else
        v124 &= 0xCFFFFFFF;
      v125 = *((_DWORD *)v23 + 67);
      if (**v92)
        goto LABEL_269;
      goto LABEL_286;
    }
  }
  if ((v120 & 0x10000000) != 0)
    v128 = 0x40000000;
  else
    v128 = 0x80000000;
  if ((v120 & 0x20000000) != 0)
    v120 = v128;
  else
    v120 &= 0xCFFFFFFF;
  v122 = v32[10];
  if ((v122 & 0x80000000) != 0)
    goto LABEL_278;
LABEL_264:
  v123 = *(_QWORD *)(v31 + 2328);
  if (v122 >= (*(_QWORD *)(v31 + 2336) - v123) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v123 = *(_QWORD *)(v31 + 2328);
    v121 = **v516;
  }
  v124 = *(_DWORD *)(v123 + (v122 << 11) + 748);
  if (!v121)
    goto LABEL_279;
LABEL_268:
  v125 = *((_DWORD *)v23 + 67);
  if (**v92)
  {
LABEL_269:
    v126 = *((_DWORD *)v23 + 131);
    v127 = *((_DWORD *)v23 + 75);
    goto LABEL_304;
  }
LABEL_286:
  if ((v125 & 0x10000000) != 0)
    v130 = 0x40000000;
  else
    v130 = 0x80000000;
  if ((v125 & 0x20000000) != 0)
    v125 = v130;
  else
    v125 &= 0xCFFFFFFF;
  v131 = *((_DWORD *)v23 + 131);
  if ((v131 & 0x10000000) != 0)
    v132 = 0x40000000;
  else
    v132 = 0x80000000;
  if ((v131 & 0x20000000) != 0)
    v126 = v132;
  else
    v126 = v131 & 0xCFFFFFFF;
  v133 = *((_DWORD *)v23 + 75);
  if ((v133 & 0x10000000) != 0)
    v134 = 0x40000000;
  else
    v134 = 0x80000000;
  if ((v133 & 0x20000000) != 0)
    v127 = v134;
  else
    v127 = v133 & 0xCFFFFFFF;
LABEL_304:
  v450 = v120 >> 30;
  v513 = v124 >> 30;
  v482 = v125 >> 30;
  v461 = v127 >> 30;
  if ((v105 & 0x40000000) != 0)
  {
    v545 = v525;
    v546 = v526;
    v547 = v527;
    v544 = v524;
    v543 = v523;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224677E40;
    v539 = xmmword_224677E50;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 2, 0, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xC200000082), xmmword_224677E50);
    if ((v507 & 0x40000000) == 0)
    {
      v540 = v525;
      v541 = v526;
      v542 = v527;
      v539 = v524;
      v538 = v523;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224677E60;
      v599 = xmmword_224677E70;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 2, 0, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xC200000082), xmmword_224677E70);
      if (((v502 | v492) & 1) == 0)
      {
        v600 = v525;
        v601 = v526;
        v602 = v527;
        v598 = v523;
        v599 = v524;
        *(_QWORD *)&v588 = 0xA0A0D0D0A0A0D0DLL;
        v593 = xmmword_224677E80;
        v594 = xmmword_224677E90;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 2, 0, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xC200000082), xmmword_224677E90);
        v135 = (v453 & 1) == 0 && ((v497 | v487) & 1) == 0;
        if ((v457 & 1) == 0 && v135)
        {
          v595 = v525;
          v596 = v526;
          v597 = v527;
          v594 = v524;
          v593 = v523;
          *(_QWORD *)&v583 = 0xA0A0A0A0D0D0D0DLL;
          v588 = xmmword_224677EA0;
          v589 = xmmword_224677EB0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 2, 0, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4200000082), xmmword_224677EB0);
        }
      }
      v136 = (v471 & 1) == 0 && ((v497 | v487) & 1) == 0;
      if (v136 && (v466 & 1) == 0)
      {
        v590 = v525;
        v591 = v526;
        v592 = v527;
        v589 = v524;
        v588 = v523;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_224677EC0;
        v584 = xmmword_224677ED0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 2, 0, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4200000082), xmmword_224677ED0);
      }
    }
    if (((v492 | v513) & 1) == 0)
    {
      v585 = v525;
      v586 = v526;
      v587 = v527;
      v584 = v524;
      v583 = v523;
      *(_QWORD *)&v573 = 0xA0A0A0A0D0D0D0DLL;
      v578 = xmmword_224677EE0;
      v579 = xmmword_224677EF0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 2, 0, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xC200000082), xmmword_224677EF0);
      v137 = (v120 & 0x40000000) == 0 && ((v487 | v482) & 1) == 0;
      if ((v453 & 1) == 0 && v137)
      {
        v580 = v525;
        v581 = v526;
        v582 = v527;
        v579 = v524;
        v578 = v523;
        *(_QWORD *)&v568 = 0xA0A0D0D0A0A0D0DLL;
        v573 = xmmword_224677F00;
        v574 = xmmword_224677F10;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 2, 0, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4200000082), xmmword_224677F10);
      }
    }
    v138 = (v466 & 1) == 0 && ((v487 | v482) & 1) == 0;
    if (v138 && (v461 & 1) == 0)
    {
      v575 = v525;
      v576 = v526;
      v577 = v527;
      v574 = v524;
      v573 = v523;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224677F20;
      v569 = xmmword_224677F30;
      *(_QWORD *)&v558 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 2, 0, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0x4200000082), xmmword_224677F30);
    }
  }
  v139 = v32[10];
  if ((v139 & 0x80000000) != 0)
  {
    v141 = *(_DWORD *)(v31 + 776);
    v142 = **v516;
    if (**v516)
      goto LABEL_337;
  }
  else
  {
    v140 = *(_QWORD *)(v31 + 2328);
    if (v139 >= (*(_QWORD *)(v31 + 2336) - v140) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v140 = *(_QWORD *)(v31 + 2328);
    }
    v141 = *(_DWORD *)(v140 + (v139 << 11) + 496);
    v142 = **v516;
    if (**v516)
    {
LABEL_337:
      v143 = v32[10];
      if ((v143 & 0x80000000) == 0)
        goto LABEL_338;
LABEL_352:
      v145 = *(_DWORD *)(v31 + 1032);
      if (v142)
        goto LABEL_342;
LABEL_353:
      if ((v145 & 0x10000000) != 0)
        v151 = 0x40000000;
      else
        v151 = 0x80000000;
      if ((v145 & 0x20000000) != 0)
        v145 = v151;
      else
        v145 &= 0xCFFFFFFF;
      v146 = v105;
      v147 = *((_DWORD *)v23 + 68);
      if (**v92)
        goto LABEL_343;
      goto LABEL_360;
    }
  }
  if ((v141 & 0x10000000) != 0)
    v150 = 0x40000000;
  else
    v150 = 0x80000000;
  if ((v141 & 0x20000000) != 0)
    v141 = v150;
  else
    v141 &= 0xCFFFFFFF;
  v143 = v32[10];
  if ((v143 & 0x80000000) != 0)
    goto LABEL_352;
LABEL_338:
  v144 = *(_QWORD *)(v31 + 2328);
  if (v143 >= (*(_QWORD *)(v31 + 2336) - v144) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v144 = *(_QWORD *)(v31 + 2328);
    v142 = **v516;
  }
  v145 = *(_DWORD *)(v144 + (v143 << 11) + 752);
  if (!v142)
    goto LABEL_353;
LABEL_342:
  v146 = v105;
  v147 = *((_DWORD *)v23 + 68);
  if (**v92)
  {
LABEL_343:
    v148 = *((_DWORD *)v23 + 132);
    v149 = *((_DWORD *)v23 + 76);
    goto LABEL_378;
  }
LABEL_360:
  if ((v147 & 0x10000000) != 0)
    v152 = 0x40000000;
  else
    v152 = 0x80000000;
  if ((v147 & 0x20000000) != 0)
    v147 = v152;
  else
    v147 &= 0xCFFFFFFF;
  v153 = *((_DWORD *)v23 + 132);
  if ((v153 & 0x10000000) != 0)
    v154 = 0x40000000;
  else
    v154 = 0x80000000;
  if ((v153 & 0x20000000) != 0)
    v148 = v154;
  else
    v148 = v153 & 0xCFFFFFFF;
  v155 = *((_DWORD *)v23 + 76);
  if ((v155 & 0x10000000) != 0)
    v156 = 0x40000000;
  else
    v156 = 0x80000000;
  if ((v155 & 0x20000000) != 0)
    v149 = v156;
  else
    v149 = v155 & 0xCFFFFFFF;
LABEL_378:
  v458 = v141 >> 30;
  v508 = v145 >> 30;
  v503 = v147 >> 30;
  v472 = v149 >> 30;
  if ((v126 & 0x40000000) != 0)
  {
    v157 = (v146 & 0x40000000) == 0;
    v545 = v525;
    v546 = v526;
    v547 = v527;
    v544 = v524;
    v543 = v523;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224677F40;
    v539 = xmmword_224677F50;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 3, 0, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xC300000083), xmmword_224677F50);
    if (v157)
    {
      v540 = v525;
      v541 = v526;
      v542 = v527;
      v539 = v524;
      v538 = v523;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224677F60;
      v599 = xmmword_224677F70;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 3, 0, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xC300000083), xmmword_224677F70);
      if (((v492 | v513) & 1) == 0)
      {
        v600 = v525;
        v601 = v526;
        v602 = v527;
        v598 = v523;
        v599 = v524;
        *(_QWORD *)&v588 = 0xA0A0D0D0A0A0D0DLL;
        v593 = xmmword_224677F80;
        v594 = xmmword_224677F90;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 3, 0, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xC300000083), xmmword_224677F90);
        v158 = (v450 & 1) == 0 && ((v487 | v482) & 1) == 0;
        if ((v453 & 1) == 0 && v158)
        {
          v595 = v525;
          v596 = v526;
          v597 = v527;
          v594 = v524;
          v593 = v523;
          *(_QWORD *)&v583 = 0xA0A0A0A0D0D0D0DLL;
          v588 = xmmword_224677FA0;
          v589 = xmmword_224677FB0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 3, 0, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4300000083), xmmword_224677FB0);
        }
      }
      v159 = (v466 & 1) == 0 && ((v487 | v482) & 1) == 0;
      if (v159 && (v461 & 1) == 0)
      {
        v590 = v525;
        v591 = v526;
        v592 = v527;
        v589 = v524;
        v588 = v523;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_224677FC0;
        v584 = xmmword_224677FD0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 3, 0, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4300000083), xmmword_224677FD0);
      }
    }
    if (((v513 | v508) & 1) == 0)
    {
      v585 = v525;
      v586 = v526;
      v587 = v527;
      v584 = v524;
      v583 = v523;
      *(_QWORD *)&v573 = 0xA0A0A0A0D0D0D0DLL;
      v578 = xmmword_224677FE0;
      v579 = xmmword_224677FF0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 3, 0, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xC300000083), xmmword_224677FF0);
      v160 = (v458 & 1) == 0 && ((v482 | v503) & 1) == 0;
      if ((v450 & 1) == 0 && v160)
      {
        v580 = v525;
        v581 = v526;
        v582 = v527;
        v579 = v524;
        v578 = v523;
        *(_QWORD *)&v568 = 0xA0A0D0D0A0A0D0DLL;
        v573 = xmmword_224678000;
        v574 = xmmword_224678010;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 3, 0, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4300000083), xmmword_224678010);
      }
    }
    v161 = (v461 & 1) == 0 && ((v482 | v503) & 1) == 0;
    if (v161 && (v472 & 1) == 0)
    {
      v575 = v525;
      v576 = v526;
      v577 = v527;
      v574 = v524;
      v573 = v523;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224678020;
      v569 = xmmword_224678030;
      *(_QWORD *)&v558 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 3, 0, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0x4300000083), xmmword_224678030);
    }
  }
  v162 = v32[10];
  if ((v162 & 0x80000000) != 0)
  {
    v164 = *(_DWORD *)(v31 + 780);
    v165 = **v516;
    if (**v516)
      goto LABEL_411;
  }
  else
  {
    v163 = *(_QWORD *)(v31 + 2328);
    if (v162 >= (*(_QWORD *)(v31 + 2336) - v163) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v163 = *(_QWORD *)(v31 + 2328);
    }
    v164 = *(_DWORD *)(v163 + (v162 << 11) + 500);
    v165 = **v516;
    if (**v516)
    {
LABEL_411:
      v166 = v32[10];
      if ((v166 & 0x80000000) == 0)
        goto LABEL_412;
LABEL_426:
      v168 = *(_DWORD *)(v31 + 1036);
      if (v165)
        goto LABEL_416;
LABEL_427:
      if ((v168 & 0x10000000) != 0)
        v173 = 0x40000000;
      else
        v173 = 0x80000000;
      if ((v168 & 0x20000000) != 0)
        v168 = v173;
      else
        v168 &= 0xCFFFFFFF;
      v169 = *((_DWORD *)v23 + 69);
      if (**v92)
        goto LABEL_417;
      goto LABEL_434;
    }
  }
  if ((v164 & 0x10000000) != 0)
    v172 = 0x40000000;
  else
    v172 = 0x80000000;
  if ((v164 & 0x20000000) != 0)
    v164 = v172;
  else
    v164 &= 0xCFFFFFFF;
  v166 = v32[10];
  if ((v166 & 0x80000000) != 0)
    goto LABEL_426;
LABEL_412:
  v167 = *(_QWORD *)(v31 + 2328);
  if (v166 >= (*(_QWORD *)(v31 + 2336) - v167) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v167 = *(_QWORD *)(v31 + 2328);
    v165 = **v516;
  }
  v168 = *(_DWORD *)(v167 + (v166 << 11) + 756);
  if (!v165)
    goto LABEL_427;
LABEL_416:
  v169 = *((_DWORD *)v23 + 69);
  if (**v92)
  {
LABEL_417:
    v170 = *((_DWORD *)v23 + 133);
    v171 = *((_DWORD *)v23 + 77);
    goto LABEL_452;
  }
LABEL_434:
  if ((v169 & 0x10000000) != 0)
    v174 = 0x40000000;
  else
    v174 = 0x80000000;
  if ((v169 & 0x20000000) != 0)
    v169 = v174;
  else
    v169 &= 0xCFFFFFFF;
  v175 = *((_DWORD *)v23 + 133);
  if ((v175 & 0x10000000) != 0)
    v176 = 0x40000000;
  else
    v176 = 0x80000000;
  if ((v175 & 0x20000000) != 0)
    v170 = v176;
  else
    v170 = v175 & 0xCFFFFFFF;
  v177 = *((_DWORD *)v23 + 77);
  if ((v177 & 0x10000000) != 0)
    v178 = 0x40000000;
  else
    v178 = 0x80000000;
  if ((v177 & 0x20000000) != 0)
    v171 = v178;
  else
    v171 = v177 & 0xCFFFFFFF;
LABEL_452:
  v454 = v164 >> 30;
  v493 = v169 >> 30;
  v498 = v168 >> 30;
  v467 = v171 >> 30;
  if ((v148 & 0x40000000) != 0)
  {
    v545 = v525;
    v546 = v526;
    v547 = v527;
    v544 = v524;
    v543 = v523;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224678040;
    v539 = xmmword_224678050;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 4, 0, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xC400000084), xmmword_224678050);
    if ((v126 & 0x40000000) == 0)
    {
      v540 = v525;
      v541 = v526;
      v542 = v527;
      v539 = v524;
      v538 = v523;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224678060;
      v599 = xmmword_224678070;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 4, 0, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xC400000084), xmmword_224678070);
      if (((v513 | v508) & 1) == 0)
      {
        v600 = v525;
        v601 = v526;
        v602 = v527;
        v598 = v523;
        v599 = v524;
        *(_QWORD *)&v588 = 0xA0A0D0D0A0A0D0DLL;
        v593 = xmmword_224678080;
        v594 = xmmword_224678090;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 4, 0, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xC400000084), xmmword_224678090);
        v179 = (v458 & 1) == 0 && ((v482 | v503) & 1) == 0;
        if ((v450 & 1) == 0 && v179)
        {
          v595 = v525;
          v596 = v526;
          v597 = v527;
          v594 = v524;
          v593 = v523;
          *(_QWORD *)&v583 = 0xA0A0A0A0D0D0D0DLL;
          v588 = xmmword_2246780A0;
          v589 = xmmword_2246780B0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 4, 0, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4400000084), xmmword_2246780B0);
        }
      }
      v180 = (v461 & 1) == 0 && ((v482 | v503) & 1) == 0;
      if (v180 && (v472 & 1) == 0)
      {
        v590 = v525;
        v591 = v526;
        v592 = v527;
        v589 = v524;
        v588 = v523;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_2246780C0;
        v584 = xmmword_2246780D0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 4, 0, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4400000084), xmmword_2246780D0);
      }
    }
    if (((v508 | v498) & 1) == 0)
    {
      v585 = v525;
      v586 = v526;
      v587 = v527;
      v584 = v524;
      v583 = v523;
      *(_QWORD *)&v573 = 0xA0A0A0A0D0D0D0DLL;
      v578 = xmmword_2246780E0;
      v579 = xmmword_2246780F0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 4, 0, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xC400000084), xmmword_2246780F0);
      v181 = (v164 & 0x40000000) == 0 && ((v503 | v493) & 1) == 0;
      if ((v458 & 1) == 0 && v181)
      {
        v580 = v525;
        v581 = v526;
        v582 = v527;
        v579 = v524;
        v578 = v523;
        *(_QWORD *)&v568 = 0xA0A0D0D0A0A0D0DLL;
        v573 = xmmword_224678100;
        v574 = xmmword_224678110;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 4, 0, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4400000084), xmmword_224678110);
      }
    }
    v182 = (v472 & 1) == 0 && ((v503 | v493) & 1) == 0;
    if (v182 && (v467 & 1) == 0)
    {
      v575 = v525;
      v576 = v526;
      v577 = v527;
      v574 = v524;
      v573 = v523;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224678120;
      v569 = xmmword_224678130;
      *(_QWORD *)&v558 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 4, 0, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0x4400000084), xmmword_224678130);
    }
  }
  v183 = v32[10];
  if ((v183 & 0x80000000) != 0)
  {
    v185 = *(_DWORD *)(v31 + 784);
    v186 = **v516;
    if (**v516)
      goto LABEL_485;
  }
  else
  {
    v184 = *(_QWORD *)(v31 + 2328);
    if (v183 >= (*(_QWORD *)(v31 + 2336) - v184) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v184 = *(_QWORD *)(v31 + 2328);
    }
    v185 = *(_DWORD *)(v184 + (v183 << 11) + 504);
    v186 = **v516;
    if (**v516)
    {
LABEL_485:
      v187 = v32[10];
      if ((v187 & 0x80000000) == 0)
        goto LABEL_486;
LABEL_500:
      v189 = *(_DWORD *)(v31 + 1040);
      if (v186)
        goto LABEL_490;
LABEL_501:
      if ((v189 & 0x10000000) != 0)
        v193 = 0x40000000;
      else
        v193 = 0x80000000;
      if ((v189 & 0x20000000) != 0)
        v189 = v193;
      else
        v189 &= 0xCFFFFFFF;
      v190 = *((_DWORD *)v23 + 70);
      if (**v92)
        goto LABEL_491;
      goto LABEL_508;
    }
  }
  if ((v185 & 0x10000000) != 0)
    v192 = 0x40000000;
  else
    v192 = 0x80000000;
  if ((v185 & 0x20000000) != 0)
    v185 = v192;
  else
    v185 &= 0xCFFFFFFF;
  v187 = v32[10];
  if ((v187 & 0x80000000) != 0)
    goto LABEL_500;
LABEL_486:
  v188 = *(_QWORD *)(v31 + 2328);
  if (v187 >= (*(_QWORD *)(v31 + 2336) - v188) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v188 = *(_QWORD *)(v31 + 2328);
    v186 = **v516;
  }
  v189 = *(_DWORD *)(v188 + (v187 << 11) + 760);
  if (!v186)
    goto LABEL_501;
LABEL_490:
  v190 = *((_DWORD *)v23 + 70);
  if (**v92)
  {
LABEL_491:
    v514 = *((_DWORD *)v23 + 134);
    v191 = *((_DWORD *)v23 + 78);
    goto LABEL_526;
  }
LABEL_508:
  if ((v190 & 0x10000000) != 0)
    v194 = 0x40000000;
  else
    v194 = 0x80000000;
  if ((v190 & 0x20000000) != 0)
    v190 = v194;
  else
    v190 &= 0xCFFFFFFF;
  v195 = *((_DWORD *)v23 + 134);
  if ((v195 & 0x10000000) != 0)
    v196 = 0x40000000;
  else
    v196 = 0x80000000;
  if ((v195 & 0x20000000) != 0)
    v197 = v196;
  else
    v197 = v195 & 0xCFFFFFFF;
  v514 = v197;
  v198 = *((_DWORD *)v23 + 78);
  if ((v198 & 0x10000000) != 0)
    v199 = 0x40000000;
  else
    v199 = 0x80000000;
  if ((v198 & 0x20000000) != 0)
    v191 = v199;
  else
    v191 = v198 & 0xCFFFFFFF;
LABEL_526:
  v451 = v185 >> 30;
  v483 = v190 >> 30;
  v488 = v189 >> 30;
  v462 = v191 >> 30;
  v560 = v525;
  v561 = v526;
  v562 = v527;
  v559 = v524;
  v558 = v523;
  if ((v170 & 0x40000000) != 0)
  {
    v545 = v525;
    v546 = v526;
    v547 = v527;
    v544 = v524;
    v543 = v523;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224678140;
    v539 = xmmword_224678150;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 5, 0, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xC500000085), xmmword_224678150);
    if ((v148 & 0x40000000) == 0)
    {
      v540 = v525;
      v541 = v526;
      v542 = v527;
      v539 = v524;
      v538 = v523;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224678160;
      v599 = xmmword_224678170;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 5, 0, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xC500000085), xmmword_224678170);
      if (((v508 | v498) & 1) == 0)
      {
        v600 = v525;
        v601 = v526;
        v602 = v527;
        v598 = v523;
        v599 = v524;
        *(_QWORD *)&v588 = 0xA0A0D0D0A0A0D0DLL;
        v593 = xmmword_224678180;
        v594 = xmmword_224678190;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 5, 0, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xC500000085), xmmword_224678190);
        v200 = (v454 & 1) == 0 && ((v503 | v493) & 1) == 0;
        if ((v458 & 1) == 0 && v200)
        {
          v595 = v525;
          v596 = v526;
          v597 = v527;
          v594 = v524;
          v593 = v523;
          *(_QWORD *)&v583 = 0xA0A0A0A0D0D0D0DLL;
          v588 = xmmword_2246781A0;
          v589 = xmmword_2246781B0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 5, 0, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4500000085), xmmword_2246781B0);
        }
      }
      v201 = (v472 & 1) == 0 && ((v503 | v493) & 1) == 0;
      if (v201 && (v467 & 1) == 0)
      {
        v590 = v560;
        v591 = v561;
        v592 = v562;
        v589 = v559;
        v588 = v558;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_2246781C0;
        v584 = xmmword_2246781D0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 5, 0, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4500000085), xmmword_2246781D0);
      }
    }
    if (((v498 | v488) & 1) == 0)
    {
      v585 = v560;
      v586 = v561;
      v587 = v562;
      v584 = v559;
      v583 = v558;
      *(_QWORD *)&v573 = 0xA0A0A0A0D0D0D0DLL;
      v578 = xmmword_2246781E0;
      v579 = xmmword_2246781F0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 5, 0, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xC500000085), xmmword_2246781F0);
      v202 = (v185 & 0x40000000) == 0 && ((v493 | v483) & 1) == 0;
      if ((v454 & 1) == 0 && v202)
      {
        v580 = v560;
        v581 = v561;
        v582 = v562;
        v579 = v559;
        v578 = v558;
        *(_QWORD *)&v568 = 0xA0A0D0D0A0A0D0DLL;
        v573 = xmmword_224678200;
        v574 = xmmword_224678210;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 5, 0, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4500000085), xmmword_224678210);
      }
    }
    v203 = (v467 & 1) == 0 && ((v493 | v483) & 1) == 0;
    if (v203 && (v462 & 1) == 0)
    {
      v575 = v560;
      v576 = v561;
      v577 = v562;
      v574 = v559;
      v573 = v558;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224678220;
      v569 = xmmword_224678230;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 5, 0, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v553, COERCE_DOUBLE(0x4500000085), xmmword_224678230);
    }
  }
  v555 = v525;
  v556 = v526;
  v557 = v527;
  v554 = v524;
  v553 = v523;
  v204 = v32[10];
  if ((v204 & 0x80000000) != 0)
  {
    v206 = *(_DWORD *)(v31 + 788);
    v207 = **v516;
    if (**v516)
      goto LABEL_559;
  }
  else
  {
    v205 = *(_QWORD *)(v31 + 2328);
    if (v204 >= (*(_QWORD *)(v31 + 2336) - v205) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v205 = *(_QWORD *)(v31 + 2328);
    }
    v206 = *(_DWORD *)(v205 + (v204 << 11) + 508);
    v207 = **v516;
    if (**v516)
    {
LABEL_559:
      v208 = v32[10];
      if ((v208 & 0x80000000) == 0)
        goto LABEL_560;
LABEL_574:
      v210 = *(_DWORD *)(v31 + 1044);
      if (v207)
        goto LABEL_564;
LABEL_575:
      if ((v210 & 0x10000000) != 0)
        v215 = 0x40000000;
      else
        v215 = 0x80000000;
      if ((v210 & 0x20000000) != 0)
        v210 = v215;
      else
        v210 &= 0xCFFFFFFF;
      v211 = *((_DWORD *)v23 + 71);
      if (**v92)
        goto LABEL_565;
      goto LABEL_582;
    }
  }
  if ((v206 & 0x10000000) != 0)
    v214 = 0x40000000;
  else
    v214 = 0x80000000;
  if ((v206 & 0x20000000) != 0)
    v206 = v214;
  else
    v206 &= 0xCFFFFFFF;
  v208 = v32[10];
  if ((v208 & 0x80000000) != 0)
    goto LABEL_574;
LABEL_560:
  v209 = *(_QWORD *)(v31 + 2328);
  if (v208 >= (*(_QWORD *)(v31 + 2336) - v209) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v209 = *(_QWORD *)(v31 + 2328);
    v207 = **v516;
  }
  v210 = *(_DWORD *)(v209 + (v208 << 11) + 764);
  if (!v207)
    goto LABEL_575;
LABEL_564:
  v211 = *((_DWORD *)v23 + 71);
  if (**v92)
  {
LABEL_565:
    v212 = *((_DWORD *)v23 + 135);
    v213 = *((_DWORD *)v23 + 79);
    goto LABEL_600;
  }
LABEL_582:
  if ((v211 & 0x10000000) != 0)
    v216 = 0x40000000;
  else
    v216 = 0x80000000;
  if ((v211 & 0x20000000) != 0)
    v211 = v216;
  else
    v211 &= 0xCFFFFFFF;
  v217 = *((_DWORD *)v23 + 135);
  if ((v217 & 0x10000000) != 0)
    v218 = 0x40000000;
  else
    v218 = 0x80000000;
  if ((v217 & 0x20000000) != 0)
    v212 = v218;
  else
    v212 = v217 & 0xCFFFFFFF;
  v219 = *((_DWORD *)v23 + 79);
  if ((v219 & 0x10000000) != 0)
    v220 = 0x40000000;
  else
    v220 = 0x80000000;
  if ((v219 & 0x20000000) != 0)
    v213 = v220;
  else
    v213 = v219 & 0xCFFFFFFF;
LABEL_600:
  v504 = v206 >> 30;
  v221 = v210 >> 30;
  v222 = v211 >> 30;
  v509 = v213 >> 30;
  v565 = v525;
  v566 = v526;
  v567 = v527;
  v564 = v524;
  v563 = v523;
  if ((v514 & 0x40000000) != 0)
  {
    v545 = v525;
    v546 = v526;
    v547 = v527;
    v544 = v524;
    v543 = v523;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224678240;
    v539 = xmmword_224678250;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 6, 0, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xC600000086), xmmword_224678250);
    if ((v170 & 0x40000000) == 0)
    {
      v540 = v525;
      v541 = v526;
      v542 = v527;
      v539 = v524;
      v538 = v523;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224678260;
      v599 = xmmword_224678270;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 6, 0, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xC600000086), xmmword_224678270);
      if (((v498 | v488) & 1) == 0)
      {
        v600 = v525;
        v601 = v526;
        v602 = v527;
        v598 = v523;
        v599 = v524;
        *(_QWORD *)&v588 = 0xA0A0D0D0A0A0D0DLL;
        v593 = xmmword_224678280;
        v594 = xmmword_224678290;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 6, 0, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xC600000086), xmmword_224678290);
        v223 = (v451 & 1) == 0 && ((v493 | v483) & 1) == 0;
        if ((v454 & 1) == 0 && v223)
        {
          v595 = v525;
          v596 = v526;
          v597 = v527;
          v594 = v524;
          v593 = v523;
          *(_QWORD *)&v583 = 0xA0A0A0A0D0D0D0DLL;
          v588 = xmmword_2246782A0;
          v589 = xmmword_2246782B0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 6, 0, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4600000086), xmmword_2246782B0);
        }
      }
      v224 = (v467 & 1) == 0 && ((v493 | v483) & 1) == 0;
      if (v224 && (v462 & 1) == 0)
      {
        v590 = v565;
        v591 = v566;
        v592 = v567;
        v589 = v564;
        v588 = v563;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_2246782C0;
        v584 = xmmword_2246782D0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 6, 0, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4600000086), xmmword_2246782D0);
      }
    }
    if (((v488 | v221) & 1) == 0)
    {
      v585 = v565;
      v586 = v566;
      v587 = v567;
      v584 = v564;
      v583 = v563;
      *(_QWORD *)&v573 = 0xA0A0A0A0D0D0D0DLL;
      v578 = xmmword_2246782E0;
      v579 = xmmword_2246782F0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 6, 0, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xC600000086), xmmword_2246782F0);
      v225 = (v206 & 0x40000000) == 0 && ((v483 | v222) & 1) == 0;
      if ((v451 & 1) == 0 && v225)
      {
        v580 = v565;
        v581 = v566;
        v582 = v567;
        v579 = v564;
        v578 = v563;
        *(_QWORD *)&v568 = 0xA0A0D0D0A0A0D0DLL;
        v573 = xmmword_224678300;
        v574 = xmmword_224678310;
        *(_QWORD *)&v548 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 6, 0, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v548, COERCE_DOUBLE(0x4600000086), xmmword_224678310);
      }
    }
    v226 = (v462 & 1) == 0 && ((v483 | v222) & 1) == 0;
    if (v226 && (v509 & 1) == 0)
    {
      v575 = v565;
      v576 = v566;
      v577 = v567;
      v574 = v564;
      v573 = v563;
      *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224678320;
      v569 = xmmword_224678330;
      *(_QWORD *)&v604[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 6, 0, 2, (uint64_t)&v548, (uint64_t)&v568, (uint64_t)v604, COERCE_DOUBLE(0x4600000086), xmmword_224678330);
    }
  }
  v227 = v32[19];
  if ((v227 & 0x80000000) != 0)
  {
    v230 = *v516;
    v231 = *(_DWORD *)(v31 + 760);
    v232 = **v516;
    if (**v516)
      goto LABEL_633;
  }
  else
  {
    v228 = *(_QWORD *)(v31 + 2328);
    if (v227 >= (*(_QWORD *)(v31 + 2336) - v228) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v228 = *(_QWORD *)(v31 + 2328);
    }
    v229 = v228 + (v227 << 11);
    v230 = *v516;
    v231 = *(_DWORD *)(v229 + 480);
    v232 = **v516;
    if (**v516)
    {
LABEL_633:
      v233 = v32[19];
      if ((v233 & 0x80000000) == 0)
        goto LABEL_634;
LABEL_653:
      v235 = *(_DWORD *)(v31 + 1016);
      if (v232)
        goto LABEL_638;
      goto LABEL_654;
    }
  }
  if ((v231 & 0x10000000) != 0)
    v240 = 0x40000000;
  else
    v240 = 0x80000000;
  if ((v231 & 0x20000000) != 0)
    v231 = v240;
  else
    v231 &= 0xCFFFFFFF;
  v233 = v32[19];
  if ((v233 & 0x80000000) != 0)
    goto LABEL_653;
LABEL_634:
  v234 = *(_QWORD *)(v31 + 2328);
  if (v233 >= (*(_QWORD *)(v31 + 2336) - v234) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v234 = *(_QWORD *)(v31 + 2328);
    v230 = *v516;
    v232 = **v516;
  }
  v235 = *(_DWORD *)(v234 + (v233 << 11) + 736);
  if (v232)
  {
LABEL_638:
    v236 = v32[22];
    if ((v236 & 0x80000000) == 0)
      goto LABEL_639;
LABEL_661:
    v238 = *(_DWORD *)(v31 + 536);
    if (v232)
      goto LABEL_643;
    goto LABEL_662;
  }
LABEL_654:
  if ((v235 & 0x10000000) != 0)
    v241 = 0x40000000;
  else
    v241 = 0x80000000;
  if ((v235 & 0x20000000) != 0)
    v235 = v241;
  else
    v235 &= 0xCFFFFFFF;
  v236 = v32[22];
  if ((v236 & 0x80000000) != 0)
    goto LABEL_661;
LABEL_639:
  v237 = *(_QWORD *)(v31 + 2328);
  if (v236 >= (*(_QWORD *)(v31 + 2336) - v237) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v237 = *(_QWORD *)(v31 + 2328);
    v230 = *v516;
    v232 = **v516;
  }
  v238 = *(_DWORD *)(v237 + (v236 << 11) + 256);
  if (v232)
  {
LABEL_643:
    v239 = v32[22];
    if ((v239 & 0x80000000) != 0)
      goto LABEL_714;
    goto LABEL_669;
  }
LABEL_662:
  if ((v238 & 0x10000000) != 0)
    v242 = 0x40000000;
  else
    v242 = 0x80000000;
  if ((v238 & 0x20000000) != 0)
    v238 = v242;
  else
    v238 &= 0xCFFFFFFF;
  v239 = v32[22];
  if ((v239 & 0x80000000) != 0)
    goto LABEL_714;
LABEL_669:
  v243 = *(_QWORD *)(v31 + 2328);
  v244 = (*(_QWORD *)(v31 + 2336) - v243) >> 11;
  if (v244 > v239)
    goto LABEL_673;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v230 = *v516;
  v239 = v32[22];
  if ((v239 & 0x80000000) != 0)
  {
LABEL_714:
    v245 = *(_DWORD *)(v31 + 568);
    if (*v230)
      goto LABEL_683;
    goto LABEL_677;
  }
  v243 = *(_QWORD *)(v31 + 2328);
  v244 = (*(_QWORD *)(v31 + 2336) - v243) >> 11;
LABEL_673:
  if (v244 <= v239)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v243 = *(_QWORD *)(v31 + 2328);
    v230 = *v516;
  }
  v245 = *(_DWORD *)(v243 + (v239 << 11) + 288);
  if (!*v230)
  {
LABEL_677:
    if ((v245 & 0x10000000) != 0)
      v246 = 0x40000000;
    else
      v246 = 0x80000000;
    if ((v245 & 0x20000000) != 0)
      v245 = v246;
    else
      v245 &= 0xCFFFFFFF;
  }
LABEL_683:
  v570 = v555;
  v571 = v556;
  v572 = v557;
  v569 = v554;
  v568 = v553;
  if ((v212 & 0x40000000) != 0)
  {
    v545 = v555;
    v546 = v556;
    v547 = v557;
    *(_QWORD *)&v598 = 0x161616160D0D0D0DLL;
    v544 = v554;
    v543 = v553;
    v538 = xmmword_224678340;
    v539 = xmmword_224678350;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 7, 0, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xC700000087), xmmword_224678350);
    if ((v514 & 0x40000000) == 0)
    {
      v540 = v555;
      v541 = v556;
      v542 = v557;
      v539 = v554;
      v538 = v553;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224678360;
      v599 = xmmword_224678370;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 7, 0, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xC700000087), xmmword_224678370);
      if (((v488 | v221) & 1) == 0)
      {
        v600 = v555;
        v601 = v556;
        v602 = v557;
        *(_QWORD *)&v588 = 0xA0A0D0D0A0A0D0DLL;
        v598 = v553;
        v599 = v554;
        v593 = xmmword_224678380;
        v594 = xmmword_224678390;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 7, 0, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xC700000087), xmmword_224678390);
        v247 = (v504 & 1) == 0 && ((v483 | v222) & 1) == 0;
        if ((v451 & 1) == 0 && v247)
        {
          v595 = v555;
          v596 = v556;
          v597 = v557;
          v594 = v554;
          v593 = v553;
          *(_QWORD *)&v583 = 0xA0A0A0A0D0D0D0DLL;
          v588 = xmmword_2246783A0;
          v589 = xmmword_2246783B0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 7, 0, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4700000087), xmmword_2246783B0);
        }
      }
      v248 = (v462 & 1) == 0 && ((v483 | v222) & 1) == 0;
      if (v248 && (v509 & 1) == 0)
      {
        v590 = v570;
        v591 = v571;
        v592 = v572;
        v589 = v569;
        v588 = v568;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_2246783C0;
        v584 = xmmword_2246783D0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 7, 0, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4700000087), xmmword_2246783D0);
      }
    }
    v249 = (v238 & 0x40000000 | v222 & 1) == 0;
    if (!(v235 & 0x40000000 | v221 & 1))
    {
      v585 = v570;
      v586 = v571;
      v587 = v572;
      *(_QWORD *)&v573 = 0x13130A0A16160D0DLL;
      v584 = v569;
      v583 = v568;
      v578 = xmmword_2246783E0;
      v579 = xmmword_2246783F0;
      *(_QWORD *)&v548 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 7, 0, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v548, COERCE_DOUBLE(0xC700000087), xmmword_2246783F0);
      v250 = (v231 & 0x40000000) == 0 && v249;
      if ((v504 & 1) == 0 && v250)
      {
        v580 = v570;
        v581 = v571;
        v582 = v572;
        *(_QWORD *)&v548 = 0x131316160A0A0D0DLL;
        v579 = v569;
        v578 = v568;
        v573 = xmmword_224678400;
        v574 = xmmword_224678410;
        *(_QWORD *)&v604[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 7, 0, 2, (uint64_t)&v548, (uint64_t)&v573, (uint64_t)v604, COERCE_DOUBLE(0x4700000087), xmmword_224678410);
      }
    }
    v251 = (v509 & 1) == 0 && v249;
    if (v251 && (v245 & 0x40000000) == 0)
    {
      v575 = v570;
      v576 = v571;
      v577 = v572;
      *(_QWORD *)&v604[0] = 0x16160D0D16160D0DLL;
      v574 = v569;
      v573 = v568;
      v548 = xmmword_224678420;
      v549 = xmmword_224678430;
      v605[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 7, 0, 2, (uint64_t)v604, (uint64_t)&v548, (uint64_t)v605, COERCE_DOUBLE(0x4700000087), xmmword_224678430);
    }
  }
  v252 = v475[2];
  v515 = a2[1];
  v517 = *a2;
  v521 = v478[3];
  v522 = v478[4];
  v519 = *((float32x4_t *)v478 + 1);
  v520 = v478[2];
  v518 = *v478;
  v459 = *(_OWORD *)v475;
  v505 = (_BYTE **)a2[2];
  v510 = *v475;
  v253 = *((_DWORD *)v252 + 64);
  v254 = ***v475;
  if (***v475)
  {
    v255 = *((_DWORD *)v252 + 128);
    v256 = *((_DWORD *)v252 + 72);
    v257 = *((_DWORD *)v252 + 80);
    v499 = *((_DWORD *)v252 + 136);
    if ((v499 & 0x40000000) == 0)
    {
LABEL_713:
      v258 = 0;
      v259 = 0;
      v260 = 0;
      v261 = 0;
      v262 = 0;
      goto LABEL_766;
    }
  }
  else
  {
    if ((v253 & 0x20000000) != 0)
      v253 *= 4;
    v263 = *((_DWORD *)v252 + 128);
    if ((v263 & 0x20000000) != 0)
      v255 = 4 * v263;
    else
      v255 = *((_DWORD *)v252 + 128);
    v264 = *((_DWORD *)v252 + 72);
    if ((v264 & 0x20000000) != 0)
      v256 = 4 * v264;
    else
      v256 = *((_DWORD *)v252 + 72);
    v265 = *((_DWORD *)v252 + 136);
    if ((v265 & 0x20000000) != 0)
      v266 = 4 * v265;
    else
      v266 = *((_DWORD *)v252 + 136);
    v267 = *((_DWORD *)v252 + 80);
    if ((v267 & 0x10000000) != 0)
      v268 = 0x40000000;
    else
      v268 = 0x80000000;
    if ((v267 & 0x20000000) != 0)
      v257 = v268;
    else
      v257 = v267 & 0xCFFFFFFF;
    v499 = v266;
    if ((v266 & 0x40000000) == 0)
      goto LABEL_713;
  }
  v269 = *(unsigned int *)(v515 + 16);
  if ((v269 & 0x80000000) != 0)
  {
    v271 = *(_DWORD *)(v517 + 564);
    v272 = **v505;
    if (**v505)
      goto LABEL_739;
  }
  else
  {
    v270 = *(_QWORD *)(v517 + 2328);
    if (v269 >= (*(_QWORD *)(v517 + 2336) - v270) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v270 = *(_QWORD *)(v517 + 2328);
    }
    v271 = *(_DWORD *)(v270 + (v269 << 11) + 284);
    v272 = **v505;
    if (**v505)
    {
LABEL_739:
      v273 = *(unsigned int *)(v515 + 16);
      if ((v273 & 0x80000000) == 0)
        goto LABEL_740;
LABEL_1273:
      v275 = *(_DWORD *)(v517 + 820);
      if (v272)
        goto LABEL_744;
      goto LABEL_1274;
    }
  }
  if ((v271 & 0x10000000) != 0)
    v445 = 0x40000000;
  else
    v445 = 0x80000000;
  if ((v271 & 0x20000000) != 0)
    v271 = v445;
  else
    v271 &= 0xCFFFFFFF;
  v273 = *(unsigned int *)(v515 + 16);
  if ((v273 & 0x80000000) != 0)
    goto LABEL_1273;
LABEL_740:
  v274 = *(_QWORD *)(v517 + 2328);
  if (v273 >= (*(_QWORD *)(v517 + 2336) - v274) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v274 = *(_QWORD *)(v517 + 2328);
    v272 = **v505;
  }
  v275 = *(_DWORD *)(v274 + (v273 << 11) + 540);
  if (v272)
  {
LABEL_744:
    v276 = *(unsigned int *)(v515 + 16);
    if ((v276 & 0x80000000) == 0)
      goto LABEL_745;
LABEL_1281:
    v278 = *(_DWORD *)(v517 + 596);
    if (v272)
      goto LABEL_749;
    goto LABEL_1282;
  }
LABEL_1274:
  if ((v275 & 0x10000000) != 0)
    v446 = 0x40000000;
  else
    v446 = 0x80000000;
  if ((v275 & 0x20000000) != 0)
    v275 = v446;
  else
    v275 &= 0xCFFFFFFF;
  v276 = *(unsigned int *)(v515 + 16);
  if ((v276 & 0x80000000) != 0)
    goto LABEL_1281;
LABEL_745:
  v277 = *(_QWORD *)(v517 + 2328);
  if (v276 >= (*(_QWORD *)(v517 + 2336) - v277) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v277 = *(_QWORD *)(v517 + 2328);
    v272 = **v505;
  }
  v278 = *(_DWORD *)(v277 + (v276 << 11) + 316);
  if (v272)
  {
LABEL_749:
    v279 = *(unsigned int *)(v515 + 16);
    if ((v279 & 0x80000000) == 0)
      goto LABEL_750;
LABEL_1289:
    v281 = *(_DWORD *)(v517 + 852);
    if (v272)
      goto LABEL_754;
    goto LABEL_1290;
  }
LABEL_1282:
  if ((v278 & 0x10000000) != 0)
    v447 = 0x40000000;
  else
    v447 = 0x80000000;
  if ((v278 & 0x20000000) != 0)
    v278 = v447;
  else
    v278 &= 0xCFFFFFFF;
  v279 = *(unsigned int *)(v515 + 16);
  if ((v279 & 0x80000000) != 0)
    goto LABEL_1289;
LABEL_750:
  v280 = *(_QWORD *)(v517 + 2328);
  if (v279 >= (*(_QWORD *)(v517 + 2336) - v280) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v280 = *(_QWORD *)(v517 + 2328);
    v272 = **v505;
  }
  v281 = *(_DWORD *)(v280 + (v279 << 11) + 572);
  if (v272)
  {
LABEL_754:
    v282 = *(unsigned int *)(v515 + 16);
    if ((v282 & 0x80000000) == 0)
      goto LABEL_755;
    goto LABEL_1297;
  }
LABEL_1290:
  if ((v281 & 0x10000000) != 0)
    v448 = 0x40000000;
  else
    v448 = 0x80000000;
  if ((v281 & 0x20000000) != 0)
    v281 = v448;
  else
    v281 &= 0xCFFFFFFF;
  v282 = *(unsigned int *)(v515 + 16);
  if ((v282 & 0x80000000) == 0)
  {
LABEL_755:
    v283 = *(_QWORD *)(v517 + 2328);
    if (v282 >= (*(_QWORD *)(v517 + 2336) - v283) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v283 = *(_QWORD *)(v517 + 2328);
      v272 = **v505;
    }
    v284 = v283 + (v282 << 11);
    v262 = (v271 >> 30) & 1;
    v261 = (v275 >> 30) & 1;
    v260 = (v278 >> 30) & 1;
    v285 = *(_DWORD *)(v284 + 348);
    v259 = (v281 >> 30) & 1;
    if (v272)
      goto LABEL_765;
    goto LABEL_759;
  }
LABEL_1297:
  v262 = (v271 >> 30) & 1;
  v261 = (v275 >> 30) & 1;
  v260 = (v278 >> 30) & 1;
  v285 = *(_DWORD *)(v517 + 628);
  v259 = (v281 >> 30) & 1;
  if (!v272)
  {
LABEL_759:
    if ((v285 & 0x10000000) != 0)
      v286 = 0x40000000;
    else
      v286 = 0x80000000;
    if ((v285 & 0x20000000) != 0)
      v285 = v286;
    else
      v285 &= 0xCFFFFFFF;
  }
LABEL_765:
  v258 = (v285 >> 30) & 1;
  v254 = **v510;
LABEL_766:
  v468 = v253 >> 30;
  v550 = v520;
  v551 = v521;
  v552 = v522;
  v549 = v519;
  v548 = v518;
  v287 = *((_DWORD *)v252 + 65);
  if (v254)
  {
    v288 = *((_DWORD *)v252 + 129);
    v289 = *((_DWORD *)v252 + 73);
    v494 = *((_DWORD *)v252 + 137);
    v290 = *((_DWORD *)v252 + 81);
  }
  else
  {
    if ((v287 & 0x10000000) != 0)
      v291 = 0x40000000;
    else
      v291 = 0x80000000;
    if ((v287 & 0x20000000) != 0)
      v287 = v291;
    else
      v287 &= 0xCFFFFFFF;
    v292 = *((_DWORD *)v252 + 129);
    if ((v292 & 0x10000000) != 0)
      v293 = 0x40000000;
    else
      v293 = 0x80000000;
    if ((v292 & 0x20000000) != 0)
      v288 = v293;
    else
      v288 = v292 & 0xCFFFFFFF;
    v294 = *((_DWORD *)v252 + 73);
    if ((v294 & 0x10000000) != 0)
      v295 = 0x40000000;
    else
      v295 = 0x80000000;
    if ((v294 & 0x20000000) != 0)
      v289 = v295;
    else
      v289 = v294 & 0xCFFFFFFF;
    v296 = *((_DWORD *)v252 + 137);
    if ((v296 & 0x10000000) != 0)
      v297 = 0x40000000;
    else
      v297 = 0x80000000;
    if ((v296 & 0x20000000) != 0)
      v298 = v297;
    else
      v298 = v296 & 0xCFFFFFFF;
    v494 = v298;
    v299 = *((_DWORD *)v252 + 81);
    if ((v299 & 0x10000000) != 0)
      v290 = 0x40000000;
    else
      v290 = 0x80000000;
    if ((v299 & 0x20000000) == 0)
      v290 = v299 & 0xCFFFFFFF;
  }
  v300 = v256 >> 30;
  v301 = v255 >> 30;
  v302 = v257 >> 30;
  v463 = v287 >> 30;
  v484 = v289 >> 30;
  v489 = v288 >> 30;
  v476 = v290 >> 30;
  if ((v499 & 0x40000000) != 0)
  {
    v545 = v520;
    v546 = v521;
    v547 = v522;
    v544 = v519;
    v543 = v518;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224678440;
    v539 = xmmword_224678450;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 0, 1, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xC800000088), xmmword_224678450);
    if (!v259)
    {
      v540 = v520;
      v541 = v521;
      v542 = v522;
      v539 = v519;
      v538 = v518;
      *(_QWORD *)&v593 = 0x4040D0D04040D0DLL;
      v598 = xmmword_224678460;
      v599 = xmmword_224678470;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 0, 1, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xC800000088), xmmword_224678470);
      v303 = (v260 | v300 & 1) == 0;
      if (!(v261 | ((v255 & 0x40000000) != 0)))
      {
        v600 = v520;
        v601 = v521;
        v602 = v522;
        v598 = v518;
        v599 = v519;
        *(_QWORD *)&v588 = 0x40404040D0D0D0DLL;
        v593 = xmmword_224678480;
        v594 = xmmword_224678490;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 0, 1, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xC800000088), xmmword_224678490);
        v304 = (v468 & 1) == 0 && v303;
        if (!v262 && v304)
        {
          v595 = v520;
          v596 = v521;
          v597 = v522;
          v594 = v519;
          v593 = v518;
          *(_QWORD *)&v583 = 0x4040D0D04040D0DLL;
          v588 = xmmword_2246784A0;
          v589 = xmmword_2246784B0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 0, 1, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4800000088), xmmword_2246784B0);
        }
      }
      if (v258)
        v305 = 0;
      else
        v305 = v303;
      if (v305 && (v302 & 1) == 0)
      {
        v590 = v520;
        v591 = v521;
        v592 = v522;
        *(_QWORD *)&v578 = 0x40404040D0D0D0DLL;
        v589 = v519;
        v588 = v518;
        v583 = xmmword_2246784C0;
        v584 = xmmword_2246784D0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 0, 1, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4800000088), xmmword_2246784D0);
      }
    }
    if (((v301 | v489) & 1) == 0)
    {
      v585 = v520;
      v586 = v521;
      v587 = v522;
      v584 = v519;
      v583 = v518;
      *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
      v578 = xmmword_2246784E0;
      v579 = xmmword_2246784F0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 0, 1, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xC800000088), xmmword_2246784F0);
      v306 = (v463 & 1) == 0 && ((v300 | v484) & 1) == 0;
      if ((v468 & 1) == 0 && v306)
      {
        v580 = v520;
        v581 = v521;
        v582 = v522;
        v579 = v519;
        v578 = v518;
        *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
        v573 = xmmword_224678500;
        v574 = xmmword_224678510;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 0, 1, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4800000088), xmmword_224678510);
      }
    }
    v307 = (v302 & 1) == 0 && ((v300 | v484) & 1) == 0;
    if (v307 && (v476 & 1) == 0)
    {
      v575 = v520;
      v576 = v521;
      v577 = v522;
      v574 = v519;
      v573 = v518;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224678520;
      v569 = xmmword_224678530;
      *(_QWORD *)&v558 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 0, 1, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0x4800000088), xmmword_224678530);
    }
  }
  v530 = v550;
  v531 = v551;
  v532 = v552;
  v528 = v548;
  v529 = v549;
  v308 = *((_DWORD *)v252 + 66);
  if (**v510)
  {
    v309 = *((_DWORD *)v252 + 130);
    v310 = *((_DWORD *)v252 + 74);
    v311 = *((_DWORD *)v252 + 138);
    v312 = *((_DWORD *)v252 + 82);
  }
  else
  {
    if ((v308 & 0x10000000) != 0)
      v313 = 0x40000000;
    else
      v313 = 0x80000000;
    if ((v308 & 0x20000000) != 0)
      v308 = v313;
    else
      v308 &= 0xCFFFFFFF;
    v314 = *((_DWORD *)v252 + 130);
    if ((v314 & 0x10000000) != 0)
      v315 = 0x40000000;
    else
      v315 = 0x80000000;
    if ((v314 & 0x20000000) != 0)
      v309 = v315;
    else
      v309 = v314 & 0xCFFFFFFF;
    v316 = *((_DWORD *)v252 + 74);
    if ((v316 & 0x10000000) != 0)
      v317 = 0x40000000;
    else
      v317 = 0x80000000;
    if ((v316 & 0x20000000) != 0)
      v310 = v317;
    else
      v310 = v316 & 0xCFFFFFFF;
    v318 = *((_DWORD *)v252 + 138);
    if ((v318 & 0x10000000) != 0)
      v319 = 0x40000000;
    else
      v319 = 0x80000000;
    if ((v318 & 0x20000000) != 0)
      v311 = v319;
    else
      v311 = v318 & 0xCFFFFFFF;
    v320 = *((_DWORD *)v252 + 82);
    if ((v320 & 0x10000000) != 0)
      v312 = 0x40000000;
    else
      v312 = 0x80000000;
    if ((v320 & 0x20000000) == 0)
      v312 = v320 & 0xCFFFFFFF;
  }
  v321 = v310 >> 30;
  v455 = v308 >> 30;
  v479 = v309 >> 30;
  v473 = v312 >> 30;
  v535 = v550;
  v536 = v551;
  v537 = v552;
  v533 = v548;
  v534 = v549;
  if ((v494 & 0x40000000) != 0)
  {
    v545 = v550;
    v546 = v551;
    v547 = v552;
    v544 = v549;
    v543 = v548;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224678540;
    v539 = xmmword_224678550;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 1, 1, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xC900000089), xmmword_224678550);
    if ((v499 & 0x40000000) == 0)
    {
      v540 = v550;
      v541 = v551;
      v542 = v552;
      v539 = v549;
      v538 = v548;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224678560;
      v599 = xmmword_224678570;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 1, 1, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xC900000089), xmmword_224678570);
      if (((v301 | v489) & 1) == 0)
      {
        v600 = v550;
        v601 = v551;
        v602 = v552;
        v598 = v548;
        v599 = v549;
        *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
        v593 = xmmword_224678580;
        v594 = xmmword_224678590;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 1, 1, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xC900000089), xmmword_224678590);
        v322 = (v463 & 1) == 0 && ((v300 | v484) & 1) == 0;
        if ((v468 & 1) == 0 && v322)
        {
          v595 = v550;
          v596 = v551;
          v597 = v552;
          v594 = v549;
          v593 = v548;
          *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
          v588 = xmmword_2246785A0;
          v589 = xmmword_2246785B0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 1, 1, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4900000089), xmmword_2246785B0);
        }
      }
      v323 = (v302 & 1) == 0 && ((v300 | v484) & 1) == 0;
      if (v323 && (v476 & 1) == 0)
      {
        v590 = v535;
        v591 = v536;
        v592 = v537;
        v589 = v534;
        v588 = v533;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_2246785C0;
        v584 = xmmword_2246785D0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 1, 1, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4900000089), xmmword_2246785D0);
      }
    }
    if (((v489 | v479) & 1) == 0)
    {
      v585 = v535;
      v586 = v536;
      v587 = v537;
      v584 = v534;
      v583 = v533;
      *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
      v578 = xmmword_2246785E0;
      v579 = xmmword_2246785F0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 1, 1, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xC900000089), xmmword_2246785F0);
      v324 = (v455 & 1) == 0 && ((v484 | v321) & 1) == 0;
      if ((v463 & 1) == 0 && v324)
      {
        v580 = v535;
        v581 = v536;
        v582 = v537;
        v579 = v534;
        v578 = v533;
        *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
        v573 = xmmword_224678600;
        v574 = xmmword_224678610;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 1, 1, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4900000089), xmmword_224678610);
      }
    }
    v325 = (v476 & 1) == 0 && ((v484 | v321) & 1) == 0;
    if (v325 && (v473 & 1) == 0)
    {
      v575 = v535;
      v576 = v536;
      v577 = v537;
      v574 = v534;
      v573 = v533;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224678620;
      v569 = xmmword_224678630;
      *(_QWORD *)&v558 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 1, 1, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0x4900000089), xmmword_224678630);
    }
  }
  v326 = *((_DWORD *)v252 + 67);
  if (**v510)
  {
    v327 = *((_DWORD *)v252 + 131);
    v328 = *((_DWORD *)v252 + 75);
    v329 = *((_DWORD *)v252 + 139);
    v330 = *((_DWORD *)v252 + 83);
  }
  else
  {
    if ((v326 & 0x10000000) != 0)
      v331 = 0x40000000;
    else
      v331 = 0x80000000;
    if ((v326 & 0x20000000) != 0)
      v326 = v331;
    else
      v326 &= 0xCFFFFFFF;
    v332 = *((_DWORD *)v252 + 131);
    if ((v332 & 0x10000000) != 0)
      v333 = 0x40000000;
    else
      v333 = 0x80000000;
    if ((v332 & 0x20000000) != 0)
      v327 = v333;
    else
      v327 = v332 & 0xCFFFFFFF;
    v334 = *((_DWORD *)v252 + 75);
    if ((v334 & 0x10000000) != 0)
      v335 = 0x40000000;
    else
      v335 = 0x80000000;
    if ((v334 & 0x20000000) != 0)
      v328 = v335;
    else
      v328 = v334 & 0xCFFFFFFF;
    v336 = *((_DWORD *)v252 + 139);
    if ((v336 & 0x10000000) != 0)
      v337 = 0x40000000;
    else
      v337 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v329 = v337;
    else
      v329 = v336 & 0xCFFFFFFF;
    v338 = *((_DWORD *)v252 + 83);
    if ((v338 & 0x10000000) != 0)
      v330 = 0x40000000;
    else
      v330 = 0x80000000;
    if ((v338 & 0x20000000) == 0)
      v330 = v338 & 0xCFFFFFFF;
  }
  v339 = v328 >> 30;
  v452 = v326 >> 30;
  v340 = v327 >> 30;
  v469 = v330 >> 30;
  if ((v311 & 0x40000000) != 0)
  {
    v545 = v530;
    v546 = v531;
    v547 = v532;
    v544 = v529;
    v543 = v528;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224678640;
    v539 = xmmword_224678650;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 2, 1, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xCA0000008ALL), xmmword_224678650);
    if ((v494 & 0x40000000) == 0)
    {
      v540 = v530;
      v541 = v531;
      v542 = v532;
      v539 = v529;
      v538 = v528;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224678660;
      v599 = xmmword_224678670;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 2, 1, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xCA0000008ALL), xmmword_224678670);
      if (((v489 | v479) & 1) == 0)
      {
        v600 = v530;
        v601 = v531;
        v602 = v532;
        v598 = v528;
        v599 = v529;
        *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
        v593 = xmmword_224678680;
        v594 = xmmword_224678690;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 2, 1, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xCA0000008ALL), xmmword_224678690);
        v341 = (v455 & 1) == 0 && ((v484 | v321) & 1) == 0;
        if ((v463 & 1) == 0 && v341)
        {
          v595 = v530;
          v596 = v531;
          v597 = v532;
          v594 = v529;
          v593 = v528;
          *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
          v588 = xmmword_2246786A0;
          v589 = xmmword_2246786B0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 2, 1, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4A0000008ALL), xmmword_2246786B0);
        }
      }
      v342 = (v476 & 1) == 0 && ((v484 | v321) & 1) == 0;
      if (v342 && (v473 & 1) == 0)
      {
        v590 = v530;
        v591 = v531;
        v592 = v532;
        v589 = v529;
        v588 = v528;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_2246786C0;
        v584 = xmmword_2246786D0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 2, 1, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4A0000008ALL), xmmword_2246786D0);
      }
    }
    if (((v479 | v340) & 1) == 0)
    {
      v585 = v530;
      v586 = v531;
      v587 = v532;
      v584 = v529;
      v583 = v528;
      *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
      v578 = xmmword_2246786E0;
      v579 = xmmword_2246786F0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 2, 1, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xCA0000008ALL), xmmword_2246786F0);
      v343 = (v452 & 1) == 0 && ((v321 | v339) & 1) == 0;
      if ((v455 & 1) == 0 && v343)
      {
        v580 = v530;
        v581 = v531;
        v582 = v532;
        v579 = v529;
        v578 = v528;
        *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
        v573 = xmmword_224678700;
        v574 = xmmword_224678710;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 2, 1, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4A0000008ALL), xmmword_224678710);
      }
    }
    v344 = (v473 & 1) == 0 && ((v321 | v339) & 1) == 0;
    if (v344 && (v469 & 1) == 0)
    {
      v575 = v530;
      v576 = v531;
      v577 = v532;
      v574 = v529;
      v573 = v528;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224678720;
      v569 = xmmword_224678730;
      *(_QWORD *)&v558 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 2, 1, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0x4A0000008ALL), xmmword_224678730);
    }
  }
  v345 = *((_DWORD *)v252 + 68);
  if (**v510)
  {
    v346 = *((_DWORD *)v252 + 132);
    v347 = *((_DWORD *)v252 + 76);
    v348 = *((_DWORD *)v252 + 140);
    v349 = *((_DWORD *)v252 + 84);
  }
  else
  {
    if ((v345 & 0x10000000) != 0)
      v350 = 0x40000000;
    else
      v350 = 0x80000000;
    if ((v345 & 0x20000000) != 0)
      v345 = v350;
    else
      v345 &= 0xCFFFFFFF;
    v351 = *((_DWORD *)v252 + 132);
    if ((v351 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v351 & 0x20000000) != 0)
      v346 = v352;
    else
      v346 = v351 & 0xCFFFFFFF;
    v353 = *((_DWORD *)v252 + 76);
    if ((v353 & 0x10000000) != 0)
      v354 = 0x40000000;
    else
      v354 = 0x80000000;
    if ((v353 & 0x20000000) != 0)
      v347 = v354;
    else
      v347 = v353 & 0xCFFFFFFF;
    v355 = *((_DWORD *)v252 + 140);
    if ((v355 & 0x10000000) != 0)
      v356 = 0x40000000;
    else
      v356 = 0x80000000;
    if ((v355 & 0x20000000) != 0)
      v348 = v356;
    else
      v348 = v355 & 0xCFFFFFFF;
    v357 = *((_DWORD *)v252 + 84);
    if ((v357 & 0x10000000) != 0)
      v349 = 0x40000000;
    else
      v349 = 0x80000000;
    if ((v357 & 0x20000000) == 0)
      v349 = v357 & 0xCFFFFFFF;
  }
  v449 = v345 >> 30;
  v495 = v347 >> 30;
  v500 = v346 >> 30;
  v464 = v349 >> 30;
  if ((v329 & 0x40000000) != 0)
  {
    v545 = v530;
    v546 = v531;
    v547 = v532;
    v544 = v529;
    v543 = v528;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224678740;
    v539 = xmmword_224678750;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 3, 1, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xCB0000008BLL), xmmword_224678750);
    if ((v311 & 0x40000000) == 0)
    {
      v540 = v530;
      v541 = v531;
      v542 = v532;
      v539 = v529;
      v538 = v528;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224678760;
      v599 = xmmword_224678770;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 3, 1, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xCB0000008BLL), xmmword_224678770);
      v358 = ((v321 | v339) & 1) == 0;
      if (((v479 | v340) & 1) == 0)
      {
        v600 = v530;
        v601 = v531;
        v602 = v532;
        v598 = v528;
        v599 = v529;
        *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
        v593 = xmmword_224678780;
        v594 = xmmword_224678790;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 3, 1, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xCB0000008BLL), xmmword_224678790);
        v359 = (v452 & 1) == 0 && v358;
        if ((v455 & 1) == 0 && v359)
        {
          v595 = v530;
          v596 = v531;
          v597 = v532;
          v594 = v529;
          v593 = v528;
          *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
          v588 = xmmword_2246787A0;
          v589 = xmmword_2246787B0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 3, 1, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4B0000008BLL), xmmword_2246787B0);
        }
      }
      v360 = (v473 & 1) == 0 && v358;
      if (v360 && (v469 & 1) == 0)
      {
        v590 = v530;
        v591 = v531;
        v592 = v532;
        v589 = v529;
        v588 = v528;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_2246787C0;
        v584 = xmmword_2246787D0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 3, 1, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4B0000008BLL), xmmword_2246787D0);
      }
    }
    if (((v340 | v500) & 1) == 0)
    {
      v585 = v530;
      v586 = v531;
      v587 = v532;
      v584 = v529;
      v583 = v528;
      *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
      v578 = xmmword_2246787E0;
      v579 = xmmword_2246787F0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 3, 1, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xCB0000008BLL), xmmword_2246787F0);
      v361 = (v449 & 1) == 0 && ((v339 | v495) & 1) == 0;
      if ((v452 & 1) == 0 && v361)
      {
        v580 = v530;
        v581 = v531;
        v582 = v532;
        v579 = v529;
        v578 = v528;
        *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
        v573 = xmmword_224678800;
        v574 = xmmword_224678810;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 3, 1, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4B0000008BLL), xmmword_224678810);
      }
    }
    v362 = (v469 & 1) == 0 && ((v339 | v495) & 1) == 0;
    if (v362 && (v464 & 1) == 0)
    {
      v575 = v530;
      v576 = v531;
      v577 = v532;
      v574 = v529;
      v573 = v528;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224678820;
      v569 = xmmword_224678830;
      *(_QWORD *)&v558 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 3, 1, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0x4B0000008BLL), xmmword_224678830);
    }
  }
  v363 = *((_DWORD *)v252 + 69);
  if (**v510)
  {
    v364 = *((_DWORD *)v252 + 133);
    v365 = *((_DWORD *)v252 + 77);
    v366 = *((_DWORD *)v252 + 141);
    v367 = *((_DWORD *)v252 + 85);
  }
  else
  {
    if ((v363 & 0x10000000) != 0)
      v368 = 0x40000000;
    else
      v368 = 0x80000000;
    if ((v363 & 0x20000000) != 0)
      v363 = v368;
    else
      v363 &= 0xCFFFFFFF;
    v369 = *((_DWORD *)v252 + 133);
    if ((v369 & 0x10000000) != 0)
      v370 = 0x40000000;
    else
      v370 = 0x80000000;
    if ((v369 & 0x20000000) != 0)
      v364 = v370;
    else
      v364 = v369 & 0xCFFFFFFF;
    v371 = *((_DWORD *)v252 + 77);
    if ((v371 & 0x10000000) != 0)
      v372 = 0x40000000;
    else
      v372 = 0x80000000;
    if ((v371 & 0x20000000) != 0)
      v365 = v372;
    else
      v365 = v371 & 0xCFFFFFFF;
    v373 = *((_DWORD *)v252 + 141);
    if ((v373 & 0x10000000) != 0)
      v374 = 0x40000000;
    else
      v374 = 0x80000000;
    if ((v373 & 0x20000000) != 0)
      v366 = v374;
    else
      v366 = v373 & 0xCFFFFFFF;
    v375 = *((_DWORD *)v252 + 85);
    if ((v375 & 0x10000000) != 0)
      v367 = 0x40000000;
    else
      v367 = 0x80000000;
    if ((v375 & 0x20000000) == 0)
      v367 = v375 & 0xCFFFFFFF;
  }
  v376 = v365 >> 30;
  v456 = v363 >> 30;
  v490 = v364 >> 30;
  v377 = v367 >> 30;
  if ((v348 & 0x40000000) != 0)
  {
    v545 = v530;
    v546 = v531;
    v547 = v532;
    v544 = v529;
    v543 = v528;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224678840;
    v539 = xmmword_224678850;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 4, 1, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xCC0000008CLL), xmmword_224678850);
    if ((v329 & 0x40000000) == 0)
    {
      v540 = v530;
      v541 = v531;
      v542 = v532;
      v539 = v529;
      v538 = v528;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224678860;
      v599 = xmmword_224678870;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 4, 1, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xCC0000008CLL), xmmword_224678870);
      if (((v340 | v500) & 1) == 0)
      {
        v600 = v530;
        v601 = v531;
        v602 = v532;
        v598 = v528;
        v599 = v529;
        *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
        v593 = xmmword_224678880;
        v594 = xmmword_224678890;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 4, 1, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xCC0000008CLL), xmmword_224678890);
        v378 = (v449 & 1) == 0 && ((v339 | v495) & 1) == 0;
        if ((v452 & 1) == 0 && v378)
        {
          v595 = v530;
          v596 = v531;
          v597 = v532;
          v594 = v529;
          v593 = v528;
          *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
          v588 = xmmword_2246788A0;
          v589 = xmmword_2246788B0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 4, 1, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4C0000008CLL), xmmword_2246788B0);
        }
      }
      v379 = (v469 & 1) == 0 && ((v339 | v495) & 1) == 0;
      if (v379 && (v464 & 1) == 0)
      {
        v590 = v530;
        v591 = v531;
        v592 = v532;
        v589 = v529;
        v588 = v528;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_2246788C0;
        v584 = xmmword_2246788D0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 4, 1, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4C0000008CLL), xmmword_2246788D0);
      }
    }
    if (((v500 | v490) & 1) == 0)
    {
      v585 = v530;
      v586 = v531;
      v587 = v532;
      v584 = v529;
      v583 = v528;
      *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
      v578 = xmmword_2246788E0;
      v579 = xmmword_2246788F0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 4, 1, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xCC0000008CLL), xmmword_2246788F0);
      v380 = (v456 & 1) == 0 && ((v495 | v376) & 1) == 0;
      if ((v449 & 1) == 0 && v380)
      {
        v580 = v530;
        v581 = v531;
        v582 = v532;
        v579 = v529;
        v578 = v528;
        *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
        v573 = xmmword_224678900;
        v574 = xmmword_224678910;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 4, 1, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4C0000008CLL), xmmword_224678910);
      }
    }
    v381 = (v464 & 1) == 0 && ((v495 | v376) & 1) == 0;
    if (v381 && (v377 & 1) == 0)
    {
      v575 = v530;
      v576 = v531;
      v577 = v532;
      v574 = v529;
      v573 = v528;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224678920;
      v569 = xmmword_224678930;
      *(_QWORD *)&v558 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 4, 1, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0x4C0000008CLL), xmmword_224678930);
    }
  }
  v382 = *((_DWORD *)v252 + 70);
  if (**v510)
  {
    v383 = *((_DWORD *)v252 + 134);
    v384 = *((_DWORD *)v252 + 78);
    v485 = *((_DWORD *)v252 + 142);
    v385 = *((_DWORD *)v252 + 86);
  }
  else
  {
    if ((v382 & 0x10000000) != 0)
      v386 = 0x40000000;
    else
      v386 = 0x80000000;
    if ((v382 & 0x20000000) != 0)
      v382 = v386;
    else
      v382 &= 0xCFFFFFFF;
    v387 = *((_DWORD *)v252 + 134);
    if ((v387 & 0x10000000) != 0)
      v388 = 0x40000000;
    else
      v388 = 0x80000000;
    if ((v387 & 0x20000000) != 0)
      v383 = v388;
    else
      v383 = v387 & 0xCFFFFFFF;
    v389 = *((_DWORD *)v252 + 78);
    if ((v389 & 0x10000000) != 0)
      v390 = 0x40000000;
    else
      v390 = 0x80000000;
    if ((v389 & 0x20000000) != 0)
      v384 = v390;
    else
      v384 = v389 & 0xCFFFFFFF;
    v391 = *((_DWORD *)v252 + 142);
    if ((v391 & 0x10000000) != 0)
      v392 = 0x40000000;
    else
      v392 = 0x80000000;
    if ((v391 & 0x20000000) != 0)
      v393 = v392;
    else
      v393 = v391 & 0xCFFFFFFF;
    v485 = v393;
    v394 = *((_DWORD *)v252 + 86);
    if ((v394 & 0x10000000) != 0)
      v385 = 0x40000000;
    else
      v385 = 0x80000000;
    if ((v394 & 0x20000000) == 0)
      v385 = v394 & 0xCFFFFFFF;
  }
  v470 = v382 >> 30;
  v480 = v383 >> 30;
  v474 = v385 >> 30;
  v477 = v384 >> 30;
  v560 = v530;
  v561 = v531;
  v562 = v532;
  v559 = v529;
  v558 = v528;
  if ((v366 & 0x40000000) != 0)
  {
    v545 = v530;
    v546 = v531;
    v547 = v532;
    v544 = v529;
    v543 = v528;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224678940;
    v539 = xmmword_224678950;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 5, 1, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xCD0000008DLL), xmmword_224678950);
    if ((v348 & 0x40000000) == 0)
    {
      v540 = v530;
      v541 = v531;
      v542 = v532;
      v539 = v529;
      v538 = v528;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224678960;
      v599 = xmmword_224678970;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 5, 1, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xCD0000008DLL), xmmword_224678970);
      if (((v500 | v490) & 1) == 0)
      {
        v600 = v530;
        v601 = v531;
        v602 = v532;
        v598 = v528;
        v599 = v529;
        *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
        v593 = xmmword_224678980;
        v594 = xmmword_224678990;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 5, 1, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xCD0000008DLL), xmmword_224678990);
        v395 = (v456 & 1) == 0 && ((v495 | v376) & 1) == 0;
        if ((v449 & 1) == 0 && v395)
        {
          v595 = v530;
          v596 = v531;
          v597 = v532;
          v594 = v529;
          v593 = v528;
          *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
          v588 = xmmword_2246789A0;
          v589 = xmmword_2246789B0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 5, 1, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4D0000008DLL), xmmword_2246789B0);
        }
      }
      v396 = (v464 & 1) == 0 && ((v495 | v376) & 1) == 0;
      if (v396 && (v377 & 1) == 0)
      {
        v590 = v560;
        v591 = v561;
        v592 = v562;
        v589 = v559;
        v588 = v558;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_2246789C0;
        v584 = xmmword_2246789D0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 5, 1, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4D0000008DLL), xmmword_2246789D0);
      }
    }
    if (((v490 | v480) & 1) == 0)
    {
      v585 = v560;
      v586 = v561;
      v587 = v562;
      v584 = v559;
      v583 = v558;
      *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
      v578 = xmmword_2246789E0;
      v579 = xmmword_2246789F0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 5, 1, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xCD0000008DLL), xmmword_2246789F0);
      v397 = (v470 & 1) == 0 && ((v376 | v477) & 1) == 0;
      if ((v456 & 1) == 0 && v397)
      {
        v580 = v560;
        v581 = v561;
        v582 = v562;
        v579 = v559;
        v578 = v558;
        *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
        v573 = xmmword_224678A00;
        v574 = xmmword_224678A10;
        *(_QWORD *)&v563 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 5, 1, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x4D0000008DLL), xmmword_224678A10);
      }
    }
    v398 = (v377 & 1) == 0 && ((v376 | v477) & 1) == 0;
    if (v398 && (v474 & 1) == 0)
    {
      v575 = v560;
      v576 = v561;
      v577 = v562;
      v574 = v559;
      v573 = v558;
      *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224678A20;
      v569 = xmmword_224678A30;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 5, 1, 2, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v553, COERCE_DOUBLE(0x4D0000008DLL), xmmword_224678A30);
    }
  }
  v555 = v530;
  v556 = v531;
  v557 = v532;
  v554 = v529;
  v553 = v528;
  v399 = *((_DWORD *)v252 + 71);
  if (**v510)
  {
    v400 = *((_DWORD *)v252 + 135);
    v401 = *((_DWORD *)v252 + 79);
    v402 = *((_DWORD *)v252 + 143);
    v403 = *((_DWORD *)v252 + 87);
  }
  else
  {
    if ((v399 & 0x10000000) != 0)
      v404 = 0x40000000;
    else
      v404 = 0x80000000;
    if ((v399 & 0x20000000) != 0)
      v399 = v404;
    else
      v399 &= 0xCFFFFFFF;
    v405 = *((_DWORD *)v252 + 135);
    if ((v405 & 0x10000000) != 0)
      v406 = 0x40000000;
    else
      v406 = 0x80000000;
    if ((v405 & 0x20000000) != 0)
      v400 = v406;
    else
      v400 = v405 & 0xCFFFFFFF;
    v407 = *((_DWORD *)v252 + 79);
    if ((v407 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v407 & 0x20000000) != 0)
      v401 = v408;
    else
      v401 = v407 & 0xCFFFFFFF;
    v409 = *((_DWORD *)v252 + 143);
    if ((v409 & 0x10000000) != 0)
      v410 = 0x40000000;
    else
      v410 = 0x80000000;
    if ((v409 & 0x20000000) != 0)
      v402 = v410;
    else
      v402 = v409 & 0xCFFFFFFF;
    v411 = *((_DWORD *)v252 + 87);
    if ((v411 & 0x10000000) != 0)
      v403 = 0x40000000;
    else
      v403 = 0x80000000;
    if ((v411 & 0x20000000) == 0)
      v403 = v411 & 0xCFFFFFFF;
  }
  v412 = v401 >> 30;
  v511 = v399 >> 30;
  v413 = v400 >> 30;
  v414 = v403 >> 30;
  v565 = v530;
  v566 = v531;
  v567 = v532;
  v564 = v529;
  v563 = v528;
  if ((v485 & 0x40000000) != 0)
  {
    v545 = v530;
    v546 = v531;
    v547 = v532;
    v544 = v529;
    v543 = v528;
    *(_QWORD *)&v598 = 0xD0D0D0D0D0D0D0DLL;
    v538 = xmmword_224678A40;
    v539 = xmmword_224678A50;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 6, 1, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xCE0000008ELL), xmmword_224678A50);
    if ((v366 & 0x40000000) == 0)
    {
      v540 = v530;
      v541 = v531;
      v542 = v532;
      v539 = v529;
      v538 = v528;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224678A60;
      v599 = xmmword_224678A70;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 6, 1, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xCE0000008ELL), xmmword_224678A70);
      if (((v490 | v480) & 1) == 0)
      {
        v600 = v530;
        v601 = v531;
        v602 = v532;
        v598 = v528;
        v599 = v529;
        *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
        v593 = xmmword_224678A80;
        v594 = xmmword_224678A90;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 6, 1, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xCE0000008ELL), xmmword_224678A90);
        v415 = (v470 & 1) == 0 && ((v376 | v477) & 1) == 0;
        if ((v456 & 1) == 0 && v415)
        {
          v595 = v530;
          v596 = v531;
          v597 = v532;
          v594 = v529;
          v593 = v528;
          *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
          v588 = xmmword_224678AA0;
          v589 = xmmword_224678AB0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 6, 1, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4E0000008ELL), xmmword_224678AB0);
        }
      }
      v416 = (v377 & 1) == 0 && ((v376 | v477) & 1) == 0;
      if (v416 && (v474 & 1) == 0)
      {
        v590 = v565;
        v591 = v566;
        v592 = v567;
        v589 = v564;
        v588 = v563;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v583 = xmmword_224678AC0;
        v584 = xmmword_224678AD0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 6, 1, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4E0000008ELL), xmmword_224678AD0);
      }
    }
    if (((v480 | v413) & 1) == 0)
    {
      v585 = v565;
      v586 = v566;
      v587 = v567;
      v584 = v564;
      v583 = v563;
      *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
      v578 = xmmword_224678AE0;
      v579 = xmmword_224678AF0;
      *(_QWORD *)&v568 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 6, 1, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xCE0000008ELL), xmmword_224678AF0);
      v417 = (v511 & 1) == 0 && ((v477 | v412) & 1) == 0;
      if ((v470 & 1) == 0 && v417)
      {
        v580 = v565;
        v581 = v566;
        v582 = v567;
        v579 = v564;
        v578 = v563;
        *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
        v573 = xmmword_224678B00;
        v574 = xmmword_224678B10;
        *(_QWORD *)&v604[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 6, 1, 2, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)v604, COERCE_DOUBLE(0x4E0000008ELL), xmmword_224678B10);
      }
    }
    v418 = (v474 & 1) == 0 && ((v477 | v412) & 1) == 0;
    if (v418 && (v414 & 1) == 0)
    {
      v575 = v565;
      v576 = v566;
      v577 = v567;
      v574 = v564;
      v573 = v563;
      *(_QWORD *)&v604[0] = 0xD0D0D0D0D0D0D0DLL;
      v568 = xmmword_224678B20;
      v569 = xmmword_224678B30;
      v605[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 6, 1, 2, (uint64_t)v604, (uint64_t)&v568, (uint64_t)v605, COERCE_DOUBLE(0x4E0000008ELL), xmmword_224678B30);
    }
  }
  v419 = *(unsigned int *)(v515 + 88);
  if ((v419 & 0x80000000) != 0)
  {
    v422 = *v505;
    v423 = *(_DWORD *)(v517 + 536);
    v424 = **v505;
    if (**v505)
      goto LABEL_1184;
  }
  else
  {
    v420 = *(_QWORD *)(v517 + 2328);
    if (v419 >= (*(_QWORD *)(v517 + 2336) - v420) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v420 = *(_QWORD *)(v517 + 2328);
    }
    v421 = v420 + (v419 << 11);
    v422 = *v505;
    v423 = *(_DWORD *)(v421 + 256);
    v424 = **v505;
    if (**v505)
    {
LABEL_1184:
      v425 = *(unsigned int *)(v515 + 88);
      if ((v425 & 0x80000000) == 0)
        goto LABEL_1185;
LABEL_1204:
      v427 = *(_DWORD *)(v517 + 792);
      if (v424)
        goto LABEL_1189;
      goto LABEL_1205;
    }
  }
  if ((v423 & 0x10000000) != 0)
    v432 = 0x40000000;
  else
    v432 = 0x80000000;
  if ((v423 & 0x20000000) != 0)
    v423 = v432;
  else
    v423 &= 0xCFFFFFFF;
  v425 = *(unsigned int *)(v515 + 88);
  if ((v425 & 0x80000000) != 0)
    goto LABEL_1204;
LABEL_1185:
  v426 = *(_QWORD *)(v517 + 2328);
  if (v425 >= (*(_QWORD *)(v517 + 2336) - v426) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v426 = *(_QWORD *)(v517 + 2328);
    v422 = *v505;
    v424 = **v505;
  }
  v427 = *(_DWORD *)(v426 + (v425 << 11) + 512);
  if (v424)
  {
LABEL_1189:
    v428 = *(unsigned int *)(v515 + 88);
    if ((v428 & 0x80000000) == 0)
      goto LABEL_1190;
LABEL_1212:
    v430 = *(_DWORD *)(v517 + 568);
    if (v424)
      goto LABEL_1194;
    goto LABEL_1213;
  }
LABEL_1205:
  if ((v427 & 0x10000000) != 0)
    v433 = 0x40000000;
  else
    v433 = 0x80000000;
  if ((v427 & 0x20000000) != 0)
    v427 = v433;
  else
    v427 &= 0xCFFFFFFF;
  v428 = *(unsigned int *)(v515 + 88);
  if ((v428 & 0x80000000) != 0)
    goto LABEL_1212;
LABEL_1190:
  v429 = *(_QWORD *)(v517 + 2328);
  if (v428 >= (*(_QWORD *)(v517 + 2336) - v429) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v429 = *(_QWORD *)(v517 + 2328);
    v422 = *v505;
    v424 = **v505;
  }
  v430 = *(_DWORD *)(v429 + (v428 << 11) + 288);
  if (v424)
  {
LABEL_1194:
    v431 = *(unsigned int *)(v515 + 88);
    if ((v431 & 0x80000000) != 0)
      goto LABEL_1263;
    goto LABEL_1220;
  }
LABEL_1213:
  if ((v430 & 0x10000000) != 0)
    v434 = 0x40000000;
  else
    v434 = 0x80000000;
  if ((v430 & 0x20000000) != 0)
    v430 = v434;
  else
    v430 &= 0xCFFFFFFF;
  v431 = *(unsigned int *)(v515 + 88);
  if ((v431 & 0x80000000) != 0)
    goto LABEL_1263;
LABEL_1220:
  v435 = *(_QWORD *)(v517 + 2328);
  v436 = (*(_QWORD *)(v517 + 2336) - v435) >> 11;
  if (v436 > v431)
    goto LABEL_1224;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v422 = *v505;
  v431 = *(unsigned int *)(v515 + 88);
  if ((v431 & 0x80000000) != 0)
  {
LABEL_1263:
    v437 = *(_DWORD *)(v517 + 600);
    if (*v422)
      goto LABEL_1234;
    goto LABEL_1228;
  }
  v435 = *(_QWORD *)(v517 + 2328);
  v436 = (*(_QWORD *)(v517 + 2336) - v435) >> 11;
LABEL_1224:
  if (v436 <= v431)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v435 = *(_QWORD *)(v517 + 2328);
    v422 = *v505;
  }
  v437 = *(_DWORD *)(v435 + (v431 << 11) + 320);
  if (!*v422)
  {
LABEL_1228:
    if ((v437 & 0x10000000) != 0)
      v438 = 0x40000000;
    else
      v438 = 0x80000000;
    if ((v437 & 0x20000000) != 0)
      v437 = v438;
    else
      v437 &= 0xCFFFFFFF;
  }
LABEL_1234:
  v570 = v555;
  v571 = v556;
  v572 = v557;
  v569 = v554;
  v568 = v553;
  if ((v402 & 0x40000000) != 0)
  {
    v545 = v555;
    v546 = v556;
    v547 = v557;
    v544 = v554;
    v543 = v553;
    *(_QWORD *)&v598 = 0x161616160D0D0D0DLL;
    v538 = xmmword_224678B40;
    v539 = xmmword_224678B50;
    *(_QWORD *)&v593 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v543, 7, 1, 2, (uint64_t)&v598, (uint64_t)&v538, (uint64_t)&v593, COERCE_DOUBLE(0xCF0000008FLL), xmmword_224678B50);
    if ((v485 & 0x40000000) == 0)
    {
      v540 = v555;
      v541 = v556;
      v542 = v557;
      v539 = v554;
      v538 = v553;
      *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
      v598 = xmmword_224678B60;
      v599 = xmmword_224678B70;
      *(_QWORD *)&v588 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v538, 7, 1, 2, (uint64_t)&v593, (uint64_t)&v598, (uint64_t)&v588, COERCE_DOUBLE(0xCF0000008FLL), xmmword_224678B70);
      if (((v480 | v413) & 1) == 0)
      {
        v600 = v555;
        v601 = v556;
        v602 = v557;
        v598 = v553;
        v599 = v554;
        *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
        v593 = xmmword_224678B80;
        v594 = xmmword_224678B90;
        *(_QWORD *)&v583 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v598, 7, 1, 2, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0xCF0000008FLL), xmmword_224678B90);
        v439 = (v511 & 1) == 0 && ((v477 | v412) & 1) == 0;
        if ((v470 & 1) == 0 && v439)
        {
          v595 = v555;
          v596 = v556;
          v597 = v557;
          v594 = v554;
          v593 = v553;
          *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
          v588 = xmmword_224678BA0;
          v589 = xmmword_224678BB0;
          *(_QWORD *)&v578 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v593, 7, 1, 2, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x4F0000008FLL), xmmword_224678BB0);
        }
      }
      v440 = (v474 & 1) == 0 && ((v477 | v412) & 1) == 0;
      if (v440 && (v414 & 1) == 0)
      {
        v590 = v570;
        v591 = v571;
        v592 = v572;
        *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
        v589 = v569;
        v588 = v568;
        v583 = xmmword_224678BC0;
        v584 = xmmword_224678BD0;
        *(_QWORD *)&v573 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v588, 7, 1, 2, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0x4F0000008FLL), xmmword_224678BD0);
      }
    }
    v441 = (v430 & 0x40000000 | v412 & 1) == 0;
    if (!(v427 & 0x40000000 | v413 & 1))
    {
      v585 = v570;
      v586 = v571;
      v587 = v572;
      *(_QWORD *)&v573 = 0x16160D0D16160D0DLL;
      v584 = v569;
      v583 = v568;
      v578 = xmmword_224678BE0;
      v579 = xmmword_224678BF0;
      *(_QWORD *)&v604[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v583, 7, 1, 2, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)v604, COERCE_DOUBLE(0xCF0000008FLL), xmmword_224678BF0);
      v442 = (v423 & 0x40000000) == 0 && v441;
      if ((v511 & 1) == 0 && v442)
      {
        v580 = v570;
        v581 = v571;
        v582 = v572;
        *(_QWORD *)&v604[0] = 0x161616160D0D0D0DLL;
        v579 = v569;
        v578 = v568;
        v573 = xmmword_224678C00;
        v574 = xmmword_224678C10;
        v605[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v578, 7, 1, 2, (uint64_t)v604, (uint64_t)&v573, (uint64_t)v605, COERCE_DOUBLE(0x4F0000008FLL), xmmword_224678C10);
      }
    }
    v443 = (v414 & 1) == 0 && v441;
    if (v443 && (v437 & 0x40000000) == 0)
    {
      v575 = v570;
      v576 = v571;
      v577 = v572;
      v605[0] = 0x16160D0D16160D0DLL;
      v574 = v569;
      v573 = v568;
      v604[0] = xmmword_224678C20;
      v604[1] = xmmword_224678C30;
      v603 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v573, 7, 1, 2, (uint64_t)v605, (uint64_t)v604, (uint64_t)&v603, COERCE_DOUBLE(0x4F0000008FLL), xmmword_224678C30);
    }
  }
  v538 = v459;
  v539.i64[0] = (uint64_t)v252;
  *(_QWORD *)&v598 = v517;
  *((_QWORD *)&v598 + 1) = v515;
  v599.i64[0] = (uint64_t)v505;
  v547 = v522;
  v546 = v521;
  v545 = v520;
  v543 = v518;
  v544 = v519;
  return sub_223DCC794((unsigned __int8 ***)&v538, &v598, &v543);
}

unint64_t sub_223DCC794(unsigned __int8 ***a1, _QWORD *a2, __int128 *a3)
{
  unsigned __int8 **v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  _BYTE **v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  _BYTE **v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  _BYTE **v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  _BYTE **v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  _BYTE **v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  __int128 v78;
  __int128 v79;
  _BOOL4 v80;
  _BOOL4 v81;
  _BOOL4 v82;
  _BOOL4 v83;
  _BOOL4 v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  _BOOL4 v98;
  _BOOL4 v99;
  _BOOL4 v100;
  _BOOL4 v101;
  _BOOL4 v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  _BOOL4 v117;
  _BOOL4 v118;
  _BOOL4 v119;
  _BOOL4 v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  _BOOL4 v135;
  _BOOL4 v136;
  _BOOL4 v137;
  _BOOL4 v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  _BOOL4 v153;
  _BOOL4 v154;
  _BOOL4 v155;
  _BOOL4 v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  int v169;
  _BOOL4 v170;
  _BOOL4 v171;
  _BOOL4 v172;
  _BOOL4 v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  _BOOL4 v189;
  _BOOL4 v190;
  _BOOL4 v191;
  _BOOL4 v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _BYTE *v196;
  unsigned int v197;
  int v198;
  unint64_t v199;
  uint64_t v200;
  unsigned int v201;
  unint64_t v202;
  uint64_t v203;
  unsigned int v204;
  unint64_t v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  uint64_t v209;
  unint64_t v210;
  unsigned int v211;
  unsigned int v212;
  _BOOL4 v213;
  _BOOL4 v214;
  _BOOL4 v215;
  _BOOL4 v216;
  unsigned __int8 **v217;
  unsigned int v218;
  int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  unsigned int v234;
  unint64_t v235;
  uint64_t v236;
  unsigned int v237;
  int v238;
  unint64_t v239;
  uint64_t v240;
  unsigned int v241;
  unint64_t v242;
  uint64_t v243;
  unsigned int v244;
  unint64_t v245;
  uint64_t v246;
  unsigned int v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  _BOOL4 v270;
  _BOOL4 v271;
  _BOOL4 v272;
  _BOOL4 v273;
  _BOOL4 v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  _BOOL4 v290;
  _BOOL4 v291;
  _BOOL4 v292;
  _BOOL4 v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  int v300;
  unsigned int v301;
  int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  _BOOL4 v309;
  _BOOL4 v310;
  _BOOL4 v311;
  _BOOL4 v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  int v325;
  _BOOL4 v326;
  _BOOL4 v327;
  _BOOL4 v328;
  _BOOL4 v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  unsigned int v344;
  _BOOL4 v345;
  _BOOL4 v346;
  _BOOL4 v347;
  _BOOL4 v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  _BOOL4 v363;
  _BOOL4 v364;
  _BOOL4 v365;
  _BOOL4 v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  int v379;
  unsigned int v380;
  unsigned int v381;
  _BOOL4 v382;
  _BOOL4 v383;
  _BOOL4 v384;
  _BOOL4 v385;
  unint64_t v386;
  uint64_t v387;
  uint64_t v388;
  _BYTE *v389;
  unsigned int v390;
  int v391;
  unint64_t v392;
  uint64_t v393;
  unsigned int v394;
  unint64_t v395;
  uint64_t v396;
  unsigned int v397;
  unint64_t v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  uint64_t v402;
  unint64_t v403;
  unsigned int v404;
  unsigned int v405;
  _BOOL4 v406;
  _BOOL4 v407;
  _BOOL4 v408;
  _BOOL4 v409;
  _BOOL4 v410;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  __int128 v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned __int8 **v460;
  int v461;
  unsigned int v462;
  unsigned int v463;
  _QWORD *v464;
  _BYTE **v465;
  unsigned int v466;
  uint64_t v467;
  unsigned int v468;
  _BYTE **v469;
  unsigned int v470;
  unsigned int v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  __int128 v475;
  __int128 v476;
  __int128 v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  float32x4_t v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  uint64_t v565;
  _OWORD v566[2];
  _QWORD v567[3];

  v567[1] = *MEMORY[0x24BDAC8D0];
  v4 = a1[2];
  v469 = *a1;
  v5 = *((_DWORD *)v4 + 72);
  v6 = ***a1;
  v464 = a2;
  if (***a1)
  {
    v7 = *((_DWORD *)v4 + 136);
    v8 = *((_DWORD *)v4 + 80);
    v9 = *((_DWORD *)v4 + 144);
    v10 = *((_DWORD *)v4 + 88);
    v473 = *a2;
    v455 = v9;
    if ((v9 & 0x40000000) == 0)
    {
LABEL_3:
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      goto LABEL_91;
    }
  }
  else
  {
    if ((v5 & 0x20000000) != 0)
      v5 *= 4;
    v16 = *((_DWORD *)v4 + 136);
    if ((v16 & 0x20000000) != 0)
      v7 = 4 * v16;
    else
      v7 = *((_DWORD *)v4 + 136);
    v17 = *((_DWORD *)v4 + 80);
    if ((v17 & 0x20000000) != 0)
      v8 = 4 * v17;
    else
      v8 = *((_DWORD *)v4 + 80);
    v18 = *((_DWORD *)v4 + 144);
    if ((v18 & 0x20000000) != 0)
      v9 = 4 * v18;
    else
      v9 = *((_DWORD *)v4 + 144);
    v19 = *((_DWORD *)v4 + 88);
    if ((v19 & 0x10000000) != 0)
      v20 = 0x40000000;
    else
      v20 = 0x80000000;
    if ((v19 & 0x20000000) != 0)
      v10 = v20;
    else
      v10 = v19 & 0xCFFFFFFF;
    v473 = *a2;
    v455 = v9;
    if ((v9 & 0x40000000) == 0)
      goto LABEL_3;
  }
  v466 = v8;
  v21 = (_BYTE **)a2[2];
  v22 = *(unsigned int *)(a2[1] + 16);
  v470 = v7;
  if ((v22 & 0x80000000) != 0)
  {
    v24 = v473 + 280;
  }
  else
  {
    v23 = *(_QWORD *)(v473 + 2328);
    if (v22 >= (*(_QWORD *)(v473 + 2336) - v23) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v23 = *(_QWORD *)(v473 + 2328);
      v9 = v455;
      v7 = v470;
    }
    v24 = v23 + (v22 << 11);
  }
  v25 = *(_DWORD *)(v24 + 316);
  v26 = v25 & 0xCFFFFFFF;
  if ((v25 & 0x10000000) != 0)
    v27 = 0x40000000;
  else
    v27 = 0x80000000;
  if ((v25 & 0x20000000) != 0)
    v26 = v27;
  if (**v21)
    v28 = v25;
  else
    v28 = v26;
  v29 = *v464;
  v30 = (_BYTE **)v464[2];
  v31 = *(unsigned int *)(v464[1] + 16);
  if ((v31 & 0x80000000) != 0)
  {
    v33 = v29 + 280;
  }
  else
  {
    v32 = *(_QWORD *)(v29 + 2328);
    if (v31 >= (*(_QWORD *)(v29 + 2336) - v32) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v32 = *(_QWORD *)(v29 + 2328);
      v9 = v455;
      v7 = v470;
    }
    v33 = v32 + (v31 << 11);
  }
  v34 = *(_DWORD *)(v33 + 572);
  v35 = v34 & 0xCFFFFFFF;
  if ((v34 & 0x10000000) != 0)
    v36 = 0x40000000;
  else
    v36 = 0x80000000;
  if ((v34 & 0x20000000) != 0)
    v35 = v36;
  if (**v30)
    v37 = v34;
  else
    v37 = v35;
  v38 = *v464;
  v39 = (_BYTE **)v464[2];
  v40 = *(unsigned int *)(v464[1] + 16);
  if ((v40 & 0x80000000) != 0)
  {
    v42 = v38 + 280;
  }
  else
  {
    v41 = *(_QWORD *)(v38 + 2328);
    if (v40 >= (*(_QWORD *)(v38 + 2336) - v41) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v41 = *(_QWORD *)(v38 + 2328);
      v9 = v455;
      v7 = v470;
    }
    v42 = v41 + (v40 << 11);
  }
  v43 = *(_DWORD *)(v42 + 348);
  v44 = v43 & 0xCFFFFFFF;
  if ((v43 & 0x10000000) != 0)
    v45 = 0x40000000;
  else
    v45 = 0x80000000;
  if ((v43 & 0x20000000) != 0)
    v44 = v45;
  if (**v39)
    v46 = v43;
  else
    v46 = v44;
  v47 = *v464;
  v48 = (_BYTE **)v464[2];
  v49 = *(unsigned int *)(v464[1] + 16);
  if ((v49 & 0x80000000) != 0)
  {
    v51 = v10;
    v52 = v28;
    v53 = *(_DWORD *)(v47 + 884);
    if (**v48)
      goto LABEL_69;
  }
  else
  {
    v50 = *(_QWORD *)(v47 + 2328);
    if (v49 >= (*(_QWORD *)(v47 + 2336) - v50) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v50 = *(_QWORD *)(v47 + 2328);
      v9 = v455;
      v7 = v470;
    }
    v51 = v10;
    v52 = v28;
    v53 = *(_DWORD *)(v50 + (v49 << 11) + 604);
    if (**v48)
    {
LABEL_69:
      v54 = *v464;
      v55 = (_BYTE **)v464[2];
      v56 = *(unsigned int *)(v464[1] + 16);
      if ((v56 & 0x80000000) == 0)
        goto LABEL_70;
LABEL_82:
      v58 = v54 + 280;
      goto LABEL_83;
    }
  }
  if ((v53 & 0x10000000) != 0)
    v59 = 0x40000000;
  else
    v59 = 0x80000000;
  if ((v53 & 0x20000000) != 0)
    v53 = v59;
  else
    v53 &= 0xCFFFFFFF;
  v54 = *v464;
  v55 = (_BYTE **)v464[2];
  v56 = *(unsigned int *)(v464[1] + 16);
  if ((v56 & 0x80000000) != 0)
    goto LABEL_82;
LABEL_70:
  v57 = *(_QWORD *)(v54 + 2328);
  if (v56 >= (*(_QWORD *)(v54 + 2336) - v57) >> 11)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      v57 = *(_QWORD *)(v54 + 2328);
      v9 = v455;
      v7 = v470;
      goto LABEL_73;
    }
LABEL_1175:
    abort();
  }
LABEL_73:
  v58 = v57 + (v56 << 11);
LABEL_83:
  v15 = (v52 >> 30) & 1;
  v14 = (v37 >> 30) & 1;
  v13 = (v46 >> 30) & 1;
  v12 = (v53 >> 30) & 1;
  v60 = *(_DWORD *)(v58 + 380);
  v8 = v466;
  if (!**v55)
  {
    if ((v60 & 0x10000000) != 0)
      v61 = 0x40000000;
    else
      v61 = 0x80000000;
    if ((v60 & 0x20000000) != 0)
      v60 = v61;
    else
      v60 &= 0xCFFFFFFF;
  }
  v11 = (v60 >> 30) & 1;
  v4 = a1[2];
  a2 = v464;
  v469 = *a1;
  v473 = *v464;
  v6 = ***a1;
  v10 = v51;
LABEL_91:
  v432 = v5 >> 30;
  v467 = a2[1];
  v460 = (unsigned __int8 **)a2[2];
  v482 = a3[2];
  v483 = a3[3];
  v484 = a3[4];
  v480 = *a3;
  v481 = a3[1];
  v62 = *((_DWORD *)v4 + 73);
  if (v6)
  {
    v63 = *((_DWORD *)v4 + 137);
    v64 = *((_DWORD *)v4 + 81);
    v450 = *((_DWORD *)v4 + 145);
    v65 = *((_DWORD *)v4 + 89);
  }
  else
  {
    if ((v62 & 0x10000000) != 0)
      v66 = 0x40000000;
    else
      v66 = 0x80000000;
    if ((v62 & 0x20000000) != 0)
      v62 = v66;
    else
      v62 &= 0xCFFFFFFF;
    v67 = *((_DWORD *)v4 + 137);
    if ((v67 & 0x10000000) != 0)
      v68 = 0x40000000;
    else
      v68 = 0x80000000;
    if ((v67 & 0x20000000) != 0)
      v63 = v68;
    else
      v63 = v67 & 0xCFFFFFFF;
    v69 = *((_DWORD *)v4 + 81);
    if ((v69 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v69 & 0x20000000) != 0)
      v64 = v70;
    else
      v64 = v69 & 0xCFFFFFFF;
    v71 = *((_DWORD *)v4 + 145);
    if ((v71 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v71 & 0x20000000) != 0)
      v73 = v72;
    else
      v73 = v71 & 0xCFFFFFFF;
    v450 = v73;
    v74 = *((_DWORD *)v4 + 89);
    if ((v74 & 0x10000000) != 0)
      v65 = 0x40000000;
    else
      v65 = 0x80000000;
    if ((v74 & 0x20000000) == 0)
      v65 = v74 & 0xCFFFFFFF;
  }
  v75 = v8 >> 30;
  v76 = v7 >> 30;
  v77 = v10 >> 30;
  v418 = v62 >> 30;
  v442 = v64 >> 30;
  v446 = v63 >> 30;
  v426 = v65 >> 30;
  v492 = a3[2];
  v493 = a3[3];
  v494 = a3[4];
  v490 = *a3;
  v491 = a3[1];
  if ((v9 & 0x40000000) != 0)
  {
    v78 = a3[3];
    v507 = a3[2];
    v508 = v78;
    v509 = a3[4];
    v79 = *a3;
    v506 = a3[1];
    v505 = v79;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224678C40;
    v501 = (__int128)xmmword_224678C50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 0, 2, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xD000000090), xmmword_224678C50);
    if (!v12)
    {
      v502 = v492;
      v503 = v493;
      v504 = v494;
      v501 = v491;
      v500 = v490;
      *(_QWORD *)&v555 = 0x4040D0D04040D0DLL;
      v560 = xmmword_224678C60;
      v561 = (__int128)xmmword_224678C70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 0, 2, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xD000000090), xmmword_224678C70);
      v80 = (v13 | v75 & 1) == 0;
      if (!(v14 | v76 & 1))
      {
        v562 = v492;
        v563 = v493;
        v564 = v494;
        v560 = v490;
        v561 = v491;
        *(_QWORD *)&v550 = 0x40404040D0D0D0DLL;
        v555 = xmmword_224678C80;
        v556 = (__int128)xmmword_224678C90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 0, 2, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xD000000090), xmmword_224678C90);
        v81 = (v432 & 1) == 0 && v80;
        if (!v15 && v81)
        {
          v557 = v492;
          v558 = v493;
          v559 = v494;
          v556 = v491;
          v555 = v490;
          *(_QWORD *)&v545 = 0x4040D0D04040D0DLL;
          v550 = xmmword_224678CA0;
          v551 = (__int128)xmmword_224678CB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 0, 2, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5000000090), xmmword_224678CB0);
        }
      }
      if (v11)
        v82 = 0;
      else
        v82 = v80;
      if (v82 && (v77 & 1) == 0)
      {
        v552 = v492;
        v553 = v493;
        v554 = v494;
        *(_QWORD *)&v540 = 0x40404040D0D0D0DLL;
        v551 = v491;
        v550 = v490;
        v545 = xmmword_224678CC0;
        v546 = (__int128)xmmword_224678CD0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 0, 2, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5000000090), xmmword_224678CD0);
      }
    }
    if (((v76 | v446) & 1) == 0)
    {
      v547 = v492;
      v548 = v493;
      v549 = v494;
      v546 = v491;
      v545 = v490;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224678CE0;
      v541 = (__int128)xmmword_224678CF0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 0, 2, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xD000000090), xmmword_224678CF0);
      v83 = (v418 & 1) == 0 && ((v75 | v442) & 1) == 0;
      if ((v432 & 1) == 0 && v83)
      {
        v542 = v492;
        v543 = v493;
        v544 = v494;
        v541 = v491;
        v540 = v490;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224678D00;
        v536 = (__int128)xmmword_224678D10;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 0, 2, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5000000090), xmmword_224678D10);
      }
    }
    v84 = (v77 & 1) == 0 && ((v75 | v442) & 1) == 0;
    v9 = v455;
    if (v84 && (v426 & 1) == 0)
    {
      v537 = v492;
      v538 = v493;
      v539 = v494;
      v536 = v491;
      v535 = v490;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224678D20;
      v531 = xmmword_224678D30;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 0, 2, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0x5000000090), xmmword_224678D30);
      v9 = v455;
    }
  }
  v85 = *((_DWORD *)v4 + 74);
  if (**v469)
  {
    v86 = *((_DWORD *)v4 + 138);
    v87 = *((_DWORD *)v4 + 82);
    v88 = *((_DWORD *)v4 + 146);
    v89 = *((_DWORD *)v4 + 90);
  }
  else
  {
    if ((v85 & 0x10000000) != 0)
      v90 = 0x40000000;
    else
      v90 = 0x80000000;
    if ((v85 & 0x20000000) != 0)
      v85 = v90;
    else
      v85 &= 0xCFFFFFFF;
    v91 = *((_DWORD *)v4 + 138);
    if ((v91 & 0x10000000) != 0)
      v92 = 0x40000000;
    else
      v92 = 0x80000000;
    if ((v91 & 0x20000000) != 0)
      v86 = v92;
    else
      v86 = v91 & 0xCFFFFFFF;
    v93 = *((_DWORD *)v4 + 82);
    if ((v93 & 0x10000000) != 0)
      v94 = 0x40000000;
    else
      v94 = 0x80000000;
    if ((v93 & 0x20000000) != 0)
      v87 = v94;
    else
      v87 = v93 & 0xCFFFFFFF;
    v95 = *((_DWORD *)v4 + 146);
    if ((v95 & 0x10000000) != 0)
      v96 = 0x40000000;
    else
      v96 = 0x80000000;
    if ((v95 & 0x20000000) != 0)
      v88 = v96;
    else
      v88 = v95 & 0xCFFFFFFF;
    v97 = *((_DWORD *)v4 + 90);
    if ((v97 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v97 & 0x20000000) == 0)
      v89 = v97 & 0xCFFFFFFF;
  }
  v437 = v87 >> 30;
  v417 = v85 >> 30;
  v456 = v86 >> 30;
  v423 = v89 >> 30;
  if ((v450 & 0x40000000) != 0)
  {
    v98 = (v9 & 0x40000000) == 0;
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224678D40;
    v501 = (__int128)xmmword_224678D50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 1, 2, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xD100000091), xmmword_224678D50);
    if (v98)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224678D60;
      v561 = (__int128)xmmword_224678D70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 1, 2, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xD100000091), xmmword_224678D70);
      if (((v76 | v446) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224678D80;
        v556 = (__int128)xmmword_224678D90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 1, 2, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xD100000091), xmmword_224678D90);
        v99 = (v418 & 1) == 0 && ((v75 | v442) & 1) == 0;
        if ((v432 & 1) == 0 && v99)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_224678DA0;
          v551 = (__int128)xmmword_224678DB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 1, 2, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5100000091), xmmword_224678DB0);
        }
      }
      v100 = (v77 & 1) == 0 && ((v75 | v442) & 1) == 0;
      if (v100 && (v426 & 1) == 0)
      {
        v552 = v482;
        v553 = v483;
        v554 = v484;
        v551 = v481;
        v550 = v480;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224678DC0;
        v546 = (__int128)xmmword_224678DD0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 1, 2, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5100000091), xmmword_224678DD0);
      }
    }
    if (((v446 | v456) & 1) == 0)
    {
      v547 = v482;
      v548 = v483;
      v549 = v484;
      v546 = v481;
      v545 = v480;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224678DE0;
      v541 = (__int128)xmmword_224678DF0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 1, 2, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xD100000091), xmmword_224678DF0);
      v101 = (v417 & 1) == 0 && ((v442 | v437) & 1) == 0;
      if ((v418 & 1) == 0 && v101)
      {
        v542 = v482;
        v543 = v483;
        v544 = v484;
        v541 = v481;
        v540 = v480;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224678E00;
        v536 = (__int128)xmmword_224678E10;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 1, 2, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5100000091), xmmword_224678E10);
      }
    }
    v102 = (v426 & 1) == 0 && ((v442 | v437) & 1) == 0;
    if (v102 && (v423 & 1) == 0)
    {
      v537 = v482;
      v538 = v483;
      v539 = v484;
      v536 = v481;
      v535 = v480;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224678E20;
      v531 = xmmword_224678E30;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 1, 2, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0x5100000091), xmmword_224678E30);
    }
  }
  v103 = *((_DWORD *)v4 + 75);
  if (**v469)
  {
    v104 = *((_DWORD *)v4 + 139);
    v105 = *((_DWORD *)v4 + 83);
    v106 = *((_DWORD *)v4 + 147);
    v107 = *((_DWORD *)v4 + 91);
  }
  else
  {
    if ((v103 & 0x10000000) != 0)
      v108 = 0x40000000;
    else
      v108 = 0x80000000;
    if ((v103 & 0x20000000) != 0)
      v103 = v108;
    else
      v103 &= 0xCFFFFFFF;
    v109 = *((_DWORD *)v4 + 139);
    if ((v109 & 0x10000000) != 0)
      v110 = 0x40000000;
    else
      v110 = 0x80000000;
    if ((v109 & 0x20000000) != 0)
      v104 = v110;
    else
      v104 = v109 & 0xCFFFFFFF;
    v111 = *((_DWORD *)v4 + 83);
    if ((v111 & 0x10000000) != 0)
      v112 = 0x40000000;
    else
      v112 = 0x80000000;
    if ((v111 & 0x20000000) != 0)
      v105 = v112;
    else
      v105 = v111 & 0xCFFFFFFF;
    v113 = *((_DWORD *)v4 + 147);
    if ((v113 & 0x10000000) != 0)
      v114 = 0x40000000;
    else
      v114 = 0x80000000;
    if ((v113 & 0x20000000) != 0)
      v106 = v114;
    else
      v106 = v113 & 0xCFFFFFFF;
    v115 = *((_DWORD *)v4 + 91);
    if ((v115 & 0x10000000) != 0)
      v107 = 0x40000000;
    else
      v107 = 0x80000000;
    if ((v115 & 0x20000000) == 0)
      v107 = v115 & 0xCFFFFFFF;
  }
  v116 = v105 >> 30;
  v416 = v103 >> 30;
  v433 = v104 >> 30;
  v420 = v107 >> 30;
  if ((v88 & 0x40000000) != 0)
  {
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224678E40;
    v501 = (__int128)xmmword_224678E50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 2, 2, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xD200000092), xmmword_224678E50);
    if ((v450 & 0x40000000) == 0)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224678E60;
      v561 = (__int128)xmmword_224678E70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 2, 2, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xD200000092), xmmword_224678E70);
      if (((v446 | v456) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224678E80;
        v556 = (__int128)xmmword_224678E90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 2, 2, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xD200000092), xmmword_224678E90);
        v117 = (v417 & 1) == 0 && ((v442 | v437) & 1) == 0;
        if ((v418 & 1) == 0 && v117)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_224678EA0;
          v551 = (__int128)xmmword_224678EB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 2, 2, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5200000092), xmmword_224678EB0);
        }
      }
      v118 = (v426 & 1) == 0 && ((v442 | v437) & 1) == 0;
      if (v118 && (v423 & 1) == 0)
      {
        v552 = v482;
        v553 = v483;
        v554 = v484;
        v551 = v481;
        v550 = v480;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224678EC0;
        v546 = (__int128)xmmword_224678ED0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 2, 2, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5200000092), xmmword_224678ED0);
      }
    }
    if (((v456 | v433) & 1) == 0)
    {
      v547 = v482;
      v548 = v483;
      v549 = v484;
      v546 = v481;
      v545 = v480;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224678EE0;
      v541 = (__int128)xmmword_224678EF0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 2, 2, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xD200000092), xmmword_224678EF0);
      v119 = (v416 & 1) == 0 && ((v437 | v116) & 1) == 0;
      if ((v417 & 1) == 0 && v119)
      {
        v542 = v482;
        v543 = v483;
        v544 = v484;
        v541 = v481;
        v540 = v480;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224678F00;
        v536 = (__int128)xmmword_224678F10;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 2, 2, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5200000092), xmmword_224678F10);
      }
    }
    v120 = (v423 & 1) == 0 && ((v437 | v116) & 1) == 0;
    if (v120 && (v420 & 1) == 0)
    {
      v537 = v482;
      v538 = v483;
      v539 = v484;
      v536 = v481;
      v535 = v480;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224678F20;
      v531 = xmmword_224678F30;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 2, 2, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0x5200000092), xmmword_224678F30);
    }
  }
  v121 = *((_DWORD *)v4 + 76);
  if (**v469)
  {
    v122 = *((_DWORD *)v4 + 140);
    v123 = *((_DWORD *)v4 + 84);
    v124 = *((_DWORD *)v4 + 148);
    v125 = *((_DWORD *)v4 + 92);
  }
  else
  {
    if ((v121 & 0x10000000) != 0)
      v126 = 0x40000000;
    else
      v126 = 0x80000000;
    if ((v121 & 0x20000000) != 0)
      v121 = v126;
    else
      v121 &= 0xCFFFFFFF;
    v127 = *((_DWORD *)v4 + 140);
    if ((v127 & 0x10000000) != 0)
      v128 = 0x40000000;
    else
      v128 = 0x80000000;
    if ((v127 & 0x20000000) != 0)
      v122 = v128;
    else
      v122 = v127 & 0xCFFFFFFF;
    v129 = *((_DWORD *)v4 + 84);
    if ((v129 & 0x10000000) != 0)
      v130 = 0x40000000;
    else
      v130 = 0x80000000;
    if ((v129 & 0x20000000) != 0)
      v123 = v130;
    else
      v123 = v129 & 0xCFFFFFFF;
    v131 = *((_DWORD *)v4 + 148);
    if ((v131 & 0x10000000) != 0)
      v132 = 0x40000000;
    else
      v132 = 0x80000000;
    if ((v131 & 0x20000000) != 0)
      v124 = v132;
    else
      v124 = v131 & 0xCFFFFFFF;
    v133 = *((_DWORD *)v4 + 92);
    if ((v133 & 0x10000000) != 0)
      v125 = 0x40000000;
    else
      v125 = 0x80000000;
    if ((v133 & 0x20000000) == 0)
      v125 = v133 & 0xCFFFFFFF;
  }
  v419 = v121 >> 30;
  v447 = v123 >> 30;
  v451 = v122 >> 30;
  v134 = v125 >> 30;
  if ((v106 & 0x40000000) != 0)
  {
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224678F40;
    v501 = (__int128)xmmword_224678F50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 3, 2, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xD300000093), xmmword_224678F50);
    if ((v88 & 0x40000000) == 0)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224678F60;
      v561 = (__int128)xmmword_224678F70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 3, 2, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xD300000093), xmmword_224678F70);
      if (((v456 | v433) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224678F80;
        v556 = (__int128)xmmword_224678F90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 3, 2, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xD300000093), xmmword_224678F90);
        v135 = (v416 & 1) == 0 && ((v437 | v116) & 1) == 0;
        if ((v417 & 1) == 0 && v135)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_224678FA0;
          v551 = (__int128)xmmword_224678FB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 3, 2, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5300000093), xmmword_224678FB0);
        }
      }
      v136 = (v423 & 1) == 0 && ((v437 | v116) & 1) == 0;
      if (v136 && (v420 & 1) == 0)
      {
        v552 = v482;
        v553 = v483;
        v554 = v484;
        v551 = v481;
        v550 = v480;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224678FC0;
        v546 = (__int128)xmmword_224678FD0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 3, 2, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5300000093), xmmword_224678FD0);
      }
    }
    if (((v433 | v451) & 1) == 0)
    {
      v547 = v482;
      v548 = v483;
      v549 = v484;
      v546 = v481;
      v545 = v480;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224678FE0;
      v541 = (__int128)xmmword_224678FF0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 3, 2, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xD300000093), xmmword_224678FF0);
      v137 = (v419 & 1) == 0 && ((v116 | v447) & 1) == 0;
      if ((v416 & 1) == 0 && v137)
      {
        v542 = v482;
        v543 = v483;
        v544 = v484;
        v541 = v481;
        v540 = v480;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224679000;
        v536 = (__int128)xmmword_224679010;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 3, 2, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5300000093), xmmword_224679010);
      }
    }
    v138 = (v420 & 1) == 0 && ((v116 | v447) & 1) == 0;
    if (v138 && (v134 & 1) == 0)
    {
      v537 = v482;
      v538 = v483;
      v539 = v484;
      v536 = v481;
      v535 = v480;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224679020;
      v531 = xmmword_224679030;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 3, 2, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0x5300000093), xmmword_224679030);
    }
  }
  v139 = *((_DWORD *)v4 + 77);
  if (**v469)
  {
    v140 = *((_DWORD *)v4 + 141);
    v141 = *((_DWORD *)v4 + 85);
    v142 = *((_DWORD *)v4 + 149);
    v143 = *((_DWORD *)v4 + 93);
  }
  else
  {
    if ((v139 & 0x10000000) != 0)
      v144 = 0x40000000;
    else
      v144 = 0x80000000;
    if ((v139 & 0x20000000) != 0)
      v139 = v144;
    else
      v139 &= 0xCFFFFFFF;
    v145 = *((_DWORD *)v4 + 141);
    if ((v145 & 0x10000000) != 0)
      v146 = 0x40000000;
    else
      v146 = 0x80000000;
    if ((v145 & 0x20000000) != 0)
      v140 = v146;
    else
      v140 = v145 & 0xCFFFFFFF;
    v147 = *((_DWORD *)v4 + 85);
    if ((v147 & 0x10000000) != 0)
      v148 = 0x40000000;
    else
      v148 = 0x80000000;
    if ((v147 & 0x20000000) != 0)
      v141 = v148;
    else
      v141 = v147 & 0xCFFFFFFF;
    v149 = *((_DWORD *)v4 + 149);
    if ((v149 & 0x10000000) != 0)
      v150 = 0x40000000;
    else
      v150 = 0x80000000;
    if ((v149 & 0x20000000) != 0)
      v142 = v150;
    else
      v142 = v149 & 0xCFFFFFFF;
    v151 = *((_DWORD *)v4 + 93);
    if ((v151 & 0x10000000) != 0)
      v143 = 0x40000000;
    else
      v143 = 0x80000000;
    if ((v151 & 0x20000000) == 0)
      v143 = v151 & 0xCFFFFFFF;
  }
  v152 = v141 >> 30;
  v457 = v140 >> 30;
  v424 = v139 >> 30;
  v427 = v143 >> 30;
  if ((v124 & 0x40000000) != 0)
  {
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224679040;
    v501 = (__int128)xmmword_224679050;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 4, 2, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xD400000094), xmmword_224679050);
    if ((v106 & 0x40000000) == 0)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224679060;
      v561 = (__int128)xmmword_224679070;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 4, 2, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xD400000094), xmmword_224679070);
      if (((v433 | v451) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224679080;
        v556 = (__int128)xmmword_224679090;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 4, 2, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xD400000094), xmmword_224679090);
        v153 = (v419 & 1) == 0 && ((v116 | v447) & 1) == 0;
        if ((v416 & 1) == 0 && v153)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_2246790A0;
          v551 = (__int128)xmmword_2246790B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 4, 2, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5400000094), xmmword_2246790B0);
        }
      }
      v154 = (v420 & 1) == 0 && ((v116 | v447) & 1) == 0;
      if (v154 && (v134 & 1) == 0)
      {
        v552 = v482;
        v553 = v483;
        v554 = v484;
        v551 = v481;
        v550 = v480;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_2246790C0;
        v546 = (__int128)xmmword_2246790D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 4, 2, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5400000094), xmmword_2246790D0);
      }
    }
    if (((v451 | v457) & 1) == 0)
    {
      v547 = v482;
      v548 = v483;
      v549 = v484;
      v546 = v481;
      v545 = v480;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_2246790E0;
      v541 = (__int128)xmmword_2246790F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 4, 2, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xD400000094), xmmword_2246790F0);
      v155 = (v424 & 1) == 0 && ((v447 | v152) & 1) == 0;
      if ((v419 & 1) == 0 && v155)
      {
        v542 = v482;
        v543 = v483;
        v544 = v484;
        v541 = v481;
        v540 = v480;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224679100;
        v536 = (__int128)xmmword_224679110;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 4, 2, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5400000094), xmmword_224679110);
      }
    }
    v156 = (v134 & 1) == 0 && ((v447 | v152) & 1) == 0;
    if (v156 && (v427 & 1) == 0)
    {
      v537 = v482;
      v538 = v483;
      v539 = v484;
      v536 = v481;
      v535 = v480;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224679120;
      v531 = xmmword_224679130;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 4, 2, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0x5400000094), xmmword_224679130);
    }
  }
  v157 = *((_DWORD *)v4 + 78);
  if (**v469)
  {
    v158 = *((_DWORD *)v4 + 142);
    v159 = *((_DWORD *)v4 + 86);
    v160 = *((_DWORD *)v4 + 150);
    v161 = *((_DWORD *)v4 + 94);
  }
  else
  {
    if ((v157 & 0x10000000) != 0)
      v162 = 0x40000000;
    else
      v162 = 0x80000000;
    if ((v157 & 0x20000000) != 0)
      v157 = v162;
    else
      v157 &= 0xCFFFFFFF;
    v163 = *((_DWORD *)v4 + 142);
    if ((v163 & 0x10000000) != 0)
      v164 = 0x40000000;
    else
      v164 = 0x80000000;
    if ((v163 & 0x20000000) != 0)
      v158 = v164;
    else
      v158 = v163 & 0xCFFFFFFF;
    v165 = *((_DWORD *)v4 + 86);
    if ((v165 & 0x10000000) != 0)
      v166 = 0x40000000;
    else
      v166 = 0x80000000;
    if ((v165 & 0x20000000) != 0)
      v159 = v166;
    else
      v159 = v165 & 0xCFFFFFFF;
    v167 = *((_DWORD *)v4 + 150);
    if ((v167 & 0x10000000) != 0)
      v168 = 0x40000000;
    else
      v168 = 0x80000000;
    if ((v167 & 0x20000000) != 0)
      v160 = v168;
    else
      v160 = v167 & 0xCFFFFFFF;
    v169 = *((_DWORD *)v4 + 94);
    if ((v169 & 0x10000000) != 0)
      v161 = 0x40000000;
    else
      v161 = 0x80000000;
    if ((v169 & 0x20000000) == 0)
      v161 = v169 & 0xCFFFFFFF;
  }
  v421 = v157 >> 30;
  v438 = v159 >> 30;
  v443 = v158 >> 30;
  v434 = v161 >> 30;
  v522 = v482;
  v523 = v483;
  v524 = v484;
  v521 = v481;
  v520 = v480;
  if ((v142 & 0x40000000) != 0)
  {
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224679140;
    v501 = (__int128)xmmword_224679150;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 5, 2, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xD500000095), xmmword_224679150);
    if ((v124 & 0x40000000) == 0)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224679160;
      v561 = (__int128)xmmword_224679170;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 5, 2, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xD500000095), xmmword_224679170);
      if (((v451 | v457) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224679180;
        v556 = (__int128)xmmword_224679190;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 5, 2, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xD500000095), xmmword_224679190);
        v170 = (v424 & 1) == 0 && ((v447 | v152) & 1) == 0;
        if ((v419 & 1) == 0 && v170)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_2246791A0;
          v551 = (__int128)xmmword_2246791B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 5, 2, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5500000095), xmmword_2246791B0);
        }
      }
      v171 = (v134 & 1) == 0 && ((v447 | v152) & 1) == 0;
      if (v171 && (v427 & 1) == 0)
      {
        v552 = v522;
        v553 = v523;
        v554 = v524;
        v551 = v521;
        v550 = v520;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_2246791C0;
        v546 = (__int128)xmmword_2246791D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 5, 2, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5500000095), xmmword_2246791D0);
      }
    }
    if (((v457 | v443) & 1) == 0)
    {
      v547 = v522;
      v548 = v523;
      v549 = v524;
      v546 = v521;
      v545 = v520;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_2246791E0;
      v541 = (__int128)xmmword_2246791F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 5, 2, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xD500000095), xmmword_2246791F0);
      v172 = (v421 & 1) == 0 && ((v152 | v438) & 1) == 0;
      if ((v424 & 1) == 0 && v172)
      {
        v542 = v522;
        v543 = v523;
        v544 = v524;
        v541 = v521;
        v540 = v520;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224679200;
        v536 = (__int128)xmmword_224679210;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 5, 2, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5500000095), xmmword_224679210);
      }
    }
    v173 = (v427 & 1) == 0 && ((v152 | v438) & 1) == 0;
    if (v173 && (v434 & 1) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224679220;
      v531 = xmmword_224679230;
      *(_QWORD *)&v515 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 5, 2, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v515, COERCE_DOUBLE(0x5500000095), xmmword_224679230);
    }
  }
  v517 = v482;
  v518 = v483;
  v519 = v484;
  v516 = v481;
  v515 = v480;
  v174 = *((_DWORD *)v4 + 79);
  if (**v469)
  {
    v175 = *((_DWORD *)v4 + 143);
    v176 = *((_DWORD *)v4 + 87);
    v177 = *((_DWORD *)v4 + 151);
    v178 = *((_DWORD *)v4 + 95);
  }
  else
  {
    if ((v174 & 0x10000000) != 0)
      v179 = 0x40000000;
    else
      v179 = 0x80000000;
    if ((v174 & 0x20000000) != 0)
      v174 = v179;
    else
      v174 &= 0xCFFFFFFF;
    v180 = *((_DWORD *)v4 + 143);
    if ((v180 & 0x10000000) != 0)
      v181 = 0x40000000;
    else
      v181 = 0x80000000;
    if ((v180 & 0x20000000) != 0)
      v175 = v181;
    else
      v175 = v180 & 0xCFFFFFFF;
    v182 = *((_DWORD *)v4 + 87);
    if ((v182 & 0x10000000) != 0)
      v183 = 0x40000000;
    else
      v183 = 0x80000000;
    if ((v182 & 0x20000000) != 0)
      v176 = v183;
    else
      v176 = v182 & 0xCFFFFFFF;
    v184 = *((_DWORD *)v4 + 151);
    if ((v184 & 0x10000000) != 0)
      v185 = 0x40000000;
    else
      v185 = 0x80000000;
    if ((v184 & 0x20000000) != 0)
      v177 = v185;
    else
      v177 = v184 & 0xCFFFFFFF;
    v186 = *((_DWORD *)v4 + 95);
    if ((v186 & 0x10000000) != 0)
      v178 = 0x40000000;
    else
      v178 = 0x80000000;
    if ((v186 & 0x20000000) == 0)
      v178 = v186 & 0xCFFFFFFF;
  }
  v187 = v176 >> 30;
  v452 = v174 >> 30;
  v188 = v175 >> 30;
  v471 = v178 >> 30;
  v527 = v482;
  v528 = v483;
  v529 = v484;
  v526 = v481;
  v525 = v480;
  if ((v160 & 0x40000000) != 0)
  {
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224679240;
    v501 = (__int128)xmmword_224679250;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 6, 2, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xD600000096), xmmword_224679250);
    if ((v142 & 0x40000000) == 0)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224679260;
      v561 = (__int128)xmmword_224679270;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 6, 2, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xD600000096), xmmword_224679270);
      if (((v457 | v443) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224679280;
        v556 = (__int128)xmmword_224679290;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 6, 2, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xD600000096), xmmword_224679290);
        v189 = (v421 & 1) == 0 && ((v152 | v438) & 1) == 0;
        if ((v424 & 1) == 0 && v189)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_2246792A0;
          v551 = (__int128)xmmword_2246792B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 6, 2, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5600000096), xmmword_2246792B0);
        }
      }
      v190 = (v427 & 1) == 0 && ((v152 | v438) & 1) == 0;
      if (v190 && (v434 & 1) == 0)
      {
        v552 = v527;
        v553 = v528;
        v554 = v529;
        v551 = v526;
        v550 = v525;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_2246792C0;
        v546 = (__int128)xmmword_2246792D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 6, 2, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5600000096), xmmword_2246792D0);
      }
    }
    if (((v443 | v188) & 1) == 0)
    {
      v547 = v527;
      v548 = v528;
      v549 = v529;
      v546 = v526;
      v545 = v525;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_2246792E0;
      v541 = (__int128)xmmword_2246792F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 6, 2, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xD600000096), xmmword_2246792F0);
      v191 = (v452 & 1) == 0 && ((v438 | v187) & 1) == 0;
      if ((v421 & 1) == 0 && v191)
      {
        v542 = v527;
        v543 = v528;
        v544 = v529;
        v541 = v526;
        v540 = v525;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224679300;
        v536 = (__int128)xmmword_224679310;
        *(_QWORD *)&v510 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 6, 2, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v510, COERCE_DOUBLE(0x5600000096), xmmword_224679310);
      }
    }
    v192 = (v434 & 1) == 0 && ((v438 | v187) & 1) == 0;
    if (v192 && (v471 & 1) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v510 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224679320;
      v531 = xmmword_224679330;
      *(_QWORD *)&v566[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 6, 2, 2, (uint64_t)&v510, (uint64_t)&v530, (uint64_t)v566, COERCE_DOUBLE(0x5600000096), xmmword_224679330);
    }
  }
  v193 = *(unsigned int *)(v467 + 88);
  if ((v193 & 0x80000000) != 0)
  {
    v196 = *v460;
    v197 = *(_DWORD *)(v473 + 568);
    v198 = **v460;
    if (**v460)
      goto LABEL_509;
  }
  else
  {
    v194 = *(_QWORD *)(v473 + 2328);
    if (v193 >= (*(_QWORD *)(v473 + 2336) - v194) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v194 = *(_QWORD *)(v473 + 2328);
    }
    v195 = v194 + (v193 << 11);
    v196 = *v460;
    v197 = *(_DWORD *)(v195 + 288);
    v198 = **v460;
    if (**v460)
    {
LABEL_509:
      v199 = *(unsigned int *)(v467 + 88);
      if ((v199 & 0x80000000) == 0)
        goto LABEL_510;
LABEL_529:
      v201 = *(_DWORD *)(v473 + 824);
      if (v198)
        goto LABEL_514;
      goto LABEL_530;
    }
  }
  if ((v197 & 0x10000000) != 0)
    v206 = 0x40000000;
  else
    v206 = 0x80000000;
  if ((v197 & 0x20000000) != 0)
    v197 = v206;
  else
    v197 &= 0xCFFFFFFF;
  v199 = *(unsigned int *)(v467 + 88);
  if ((v199 & 0x80000000) != 0)
    goto LABEL_529;
LABEL_510:
  v200 = *(_QWORD *)(v473 + 2328);
  if (v199 >= (*(_QWORD *)(v473 + 2336) - v200) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v200 = *(_QWORD *)(v473 + 2328);
    v196 = *v460;
    v198 = **v460;
  }
  v201 = *(_DWORD *)(v200 + (v199 << 11) + 544);
  if (v198)
  {
LABEL_514:
    v202 = *(unsigned int *)(v467 + 88);
    if ((v202 & 0x80000000) == 0)
      goto LABEL_515;
LABEL_537:
    v204 = *(_DWORD *)(v473 + 600);
    if (v198)
      goto LABEL_519;
    goto LABEL_538;
  }
LABEL_530:
  if ((v201 & 0x10000000) != 0)
    v207 = 0x40000000;
  else
    v207 = 0x80000000;
  if ((v201 & 0x20000000) != 0)
    v201 = v207;
  else
    v201 &= 0xCFFFFFFF;
  v202 = *(unsigned int *)(v467 + 88);
  if ((v202 & 0x80000000) != 0)
    goto LABEL_537;
LABEL_515:
  v203 = *(_QWORD *)(v473 + 2328);
  if (v202 >= (*(_QWORD *)(v473 + 2336) - v203) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v203 = *(_QWORD *)(v473 + 2328);
    v196 = *v460;
    v198 = **v460;
  }
  v204 = *(_DWORD *)(v203 + (v202 << 11) + 320);
  if (v198)
  {
LABEL_519:
    v205 = *(unsigned int *)(v467 + 88);
    if ((v205 & 0x80000000) != 0)
      goto LABEL_590;
    goto LABEL_545;
  }
LABEL_538:
  if ((v204 & 0x10000000) != 0)
    v208 = 0x40000000;
  else
    v208 = 0x80000000;
  if ((v204 & 0x20000000) != 0)
    v204 = v208;
  else
    v204 &= 0xCFFFFFFF;
  v205 = *(unsigned int *)(v467 + 88);
  if ((v205 & 0x80000000) != 0)
    goto LABEL_590;
LABEL_545:
  v209 = *(_QWORD *)(v473 + 2328);
  v210 = (*(_QWORD *)(v473 + 2336) - v209) >> 11;
  if (v210 > v205)
    goto LABEL_549;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v196 = *v460;
  v205 = *(unsigned int *)(v467 + 88);
  if ((v205 & 0x80000000) != 0)
  {
LABEL_590:
    v211 = *(_DWORD *)(v473 + 632);
    if (*v196)
      goto LABEL_559;
    goto LABEL_553;
  }
  v209 = *(_QWORD *)(v473 + 2328);
  v210 = (*(_QWORD *)(v473 + 2336) - v209) >> 11;
LABEL_549:
  if (v210 <= v205)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v209 = *(_QWORD *)(v473 + 2328);
    v196 = *v460;
  }
  v211 = *(_DWORD *)(v209 + (v205 << 11) + 352);
  if (!*v196)
  {
LABEL_553:
    if ((v211 & 0x10000000) != 0)
      v212 = 0x40000000;
    else
      v212 = 0x80000000;
    if ((v211 & 0x20000000) != 0)
      v211 = v212;
    else
      v211 &= 0xCFFFFFFF;
  }
LABEL_559:
  v532 = v517;
  v533 = v518;
  v534 = v519;
  v531 = (float32x4_t)v516;
  v530 = v515;
  if ((v177 & 0x40000000) != 0)
  {
    v507 = v517;
    v508 = v518;
    v509 = v519;
    v506 = v516;
    v505 = v515;
    *(_QWORD *)&v560 = 0x161616160D0D0D0DLL;
    v500 = xmmword_224679340;
    v501 = (__int128)xmmword_224679350;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 7, 2, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xD700000097), xmmword_224679350);
    if ((v160 & 0x40000000) == 0)
    {
      v502 = v517;
      v503 = v518;
      v504 = v519;
      v501 = v516;
      v500 = v515;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224679360;
      v561 = (__int128)xmmword_224679370;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 7, 2, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xD700000097), xmmword_224679370);
      if (((v443 | v188) & 1) == 0)
      {
        v562 = v517;
        v563 = v518;
        v564 = v519;
        v560 = v515;
        v561 = v516;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224679380;
        v556 = (__int128)xmmword_224679390;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 7, 2, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xD700000097), xmmword_224679390);
        v213 = (v452 & 1) == 0 && ((v438 | v187) & 1) == 0;
        if ((v421 & 1) == 0 && v213)
        {
          v557 = v517;
          v558 = v518;
          v559 = v519;
          v556 = v516;
          v555 = v515;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_2246793A0;
          v551 = (__int128)xmmword_2246793B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 7, 2, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5700000097), xmmword_2246793B0);
        }
      }
      v214 = (v434 & 1) == 0 && ((v438 | v187) & 1) == 0;
      if (v214 && (v471 & 1) == 0)
      {
        v552 = v532;
        v553 = v533;
        v554 = v534;
        v551 = (__int128)v531;
        v550 = v530;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_2246793C0;
        v546 = (__int128)xmmword_2246793D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 7, 2, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5700000097), xmmword_2246793D0);
      }
    }
    if (!(v201 & 0x40000000 | v188 & 1))
    {
      v547 = v532;
      v548 = v533;
      v549 = v534;
      *(_QWORD *)&v535 = 0x16160D0D16160D0DLL;
      v546 = (__int128)v531;
      v545 = v530;
      v540 = xmmword_2246793E0;
      v541 = (__int128)xmmword_2246793F0;
      *(_QWORD *)&v510 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 7, 2, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v510, COERCE_DOUBLE(0xD700000097), xmmword_2246793F0);
      v215 = (v197 & 0x40000000) == 0 && (v204 & 0x40000000 | v187 & 1) == 0;
      if ((v452 & 1) == 0 && v215)
      {
        v542 = v532;
        v543 = v533;
        v544 = v534;
        *(_QWORD *)&v510 = 0x161616160D0D0D0DLL;
        v541 = (__int128)v531;
        v540 = v530;
        v535 = xmmword_224679400;
        v536 = (__int128)xmmword_224679410;
        *(_QWORD *)&v566[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 7, 2, 2, (uint64_t)&v510, (uint64_t)&v535, (uint64_t)v566, COERCE_DOUBLE(0x5700000097), xmmword_224679410);
      }
    }
    v216 = (v471 & 1) == 0 && (v204 & 0x40000000 | v187 & 1) == 0;
    if (v216 && (v211 & 0x40000000) == 0)
    {
      v537 = v532;
      v538 = v533;
      v539 = v534;
      *(_QWORD *)&v566[0] = 0x16160D0D16160D0DLL;
      v536 = (__int128)v531;
      v535 = v530;
      v510 = xmmword_224679420;
      v511 = (__int128)xmmword_224679430;
      v567[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 7, 2, 2, (uint64_t)v566, (uint64_t)&v510, (uint64_t)v567, COERCE_DOUBLE(0x5700000097), xmmword_224679430);
    }
  }
  v217 = a1[2];
  v472 = v464[1];
  v474 = *v464;
  v478 = a3[3];
  v479 = a3[4];
  v476 = a3[1];
  v477 = a3[2];
  v475 = *a3;
  v431 = *(_OWORD *)a1;
  v465 = (_BYTE **)v464[2];
  v218 = *((_DWORD *)v217 + 80);
  v219 = **(unsigned __int8 **)v431;
  if (**(_BYTE **)v431)
  {
    v220 = *((_DWORD *)v217 + 144);
    v221 = *((_DWORD *)v217 + 88);
    v222 = *((_DWORD *)v217 + 96);
    v461 = *((_DWORD *)v217 + 152);
    if ((v461 & 0x40000000) == 0)
    {
LABEL_589:
      v223 = v220;
      v224 = 0;
      v225 = 0;
      v226 = 0;
      v227 = 0;
      v228 = 0;
      goto LABEL_642;
    }
  }
  else
  {
    if ((v218 & 0x20000000) != 0)
      v218 *= 4;
    v229 = *((_DWORD *)v217 + 144);
    if ((v229 & 0x20000000) != 0)
      v220 = 4 * v229;
    else
      v220 = *((_DWORD *)v217 + 144);
    v230 = *((_DWORD *)v217 + 88);
    if ((v230 & 0x20000000) != 0)
      v221 = 4 * v230;
    else
      v221 = *((_DWORD *)v217 + 88);
    v231 = *((_DWORD *)v217 + 152);
    if ((v231 & 0x20000000) != 0)
      v232 = 4 * v231;
    else
      v232 = *((_DWORD *)v217 + 152);
    v233 = *((_DWORD *)v217 + 96);
    if ((v233 & 0x10000000) != 0)
      v234 = 0x40000000;
    else
      v234 = 0x80000000;
    if ((v233 & 0x20000000) != 0)
      v222 = v234;
    else
      v222 = v233 & 0xCFFFFFFF;
    v461 = v232;
    if ((v232 & 0x40000000) == 0)
      goto LABEL_589;
  }
  v235 = *(unsigned int *)(v472 + 16);
  if ((v235 & 0x80000000) != 0)
  {
    v237 = *(_DWORD *)(v474 + 628);
    v238 = **v465;
    if (**v465)
      goto LABEL_615;
  }
  else
  {
    v236 = *(_QWORD *)(v474 + 2328);
    if (v235 >= (*(_QWORD *)(v474 + 2336) - v236) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v236 = *(_QWORD *)(v474 + 2328);
    }
    v237 = *(_DWORD *)(v236 + (v235 << 11) + 348);
    v238 = **v465;
    if (**v465)
    {
LABEL_615:
      v239 = *(unsigned int *)(v472 + 16);
      if ((v239 & 0x80000000) == 0)
        goto LABEL_616;
LABEL_1149:
      v241 = *(_DWORD *)(v474 + 884);
      if (v238)
        goto LABEL_620;
      goto LABEL_1150;
    }
  }
  if ((v237 & 0x10000000) != 0)
    v412 = 0x40000000;
  else
    v412 = 0x80000000;
  if ((v237 & 0x20000000) != 0)
    v237 = v412;
  else
    v237 &= 0xCFFFFFFF;
  v239 = *(unsigned int *)(v472 + 16);
  if ((v239 & 0x80000000) != 0)
    goto LABEL_1149;
LABEL_616:
  v240 = *(_QWORD *)(v474 + 2328);
  if (v239 >= (*(_QWORD *)(v474 + 2336) - v240) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v240 = *(_QWORD *)(v474 + 2328);
    v238 = **v465;
  }
  v241 = *(_DWORD *)(v240 + (v239 << 11) + 604);
  if (v238)
  {
LABEL_620:
    v242 = *(unsigned int *)(v472 + 16);
    if ((v242 & 0x80000000) == 0)
      goto LABEL_621;
LABEL_1157:
    v244 = *(_DWORD *)(v474 + 660);
    if (v238)
      goto LABEL_625;
    goto LABEL_1158;
  }
LABEL_1150:
  if ((v241 & 0x10000000) != 0)
    v413 = 0x40000000;
  else
    v413 = 0x80000000;
  if ((v241 & 0x20000000) != 0)
    v241 = v413;
  else
    v241 &= 0xCFFFFFFF;
  v242 = *(unsigned int *)(v472 + 16);
  if ((v242 & 0x80000000) != 0)
    goto LABEL_1157;
LABEL_621:
  v243 = *(_QWORD *)(v474 + 2328);
  if (v242 >= (*(_QWORD *)(v474 + 2336) - v243) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v243 = *(_QWORD *)(v474 + 2328);
    v238 = **v465;
  }
  v244 = *(_DWORD *)(v243 + (v242 << 11) + 380);
  if (v238)
  {
LABEL_625:
    v245 = *(unsigned int *)(v472 + 16);
    if ((v245 & 0x80000000) == 0)
      goto LABEL_626;
LABEL_1165:
    v247 = *(_DWORD *)(v474 + 916);
    if (v238)
      goto LABEL_630;
    goto LABEL_1166;
  }
LABEL_1158:
  if ((v244 & 0x10000000) != 0)
    v414 = 0x40000000;
  else
    v414 = 0x80000000;
  if ((v244 & 0x20000000) != 0)
    v244 = v414;
  else
    v244 &= 0xCFFFFFFF;
  v245 = *(unsigned int *)(v472 + 16);
  if ((v245 & 0x80000000) != 0)
    goto LABEL_1165;
LABEL_626:
  v246 = *(_QWORD *)(v474 + 2328);
  if (v245 >= (*(_QWORD *)(v474 + 2336) - v246) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v246 = *(_QWORD *)(v474 + 2328);
    v238 = **v465;
  }
  v247 = *(_DWORD *)(v246 + (v245 << 11) + 636);
  if (v238)
  {
LABEL_630:
    v248 = *(unsigned int *)(v472 + 16);
    if ((v248 & 0x80000000) == 0)
      goto LABEL_631;
    goto LABEL_1173;
  }
LABEL_1166:
  if ((v247 & 0x10000000) != 0)
    v415 = 0x40000000;
  else
    v415 = 0x80000000;
  if ((v247 & 0x20000000) != 0)
    v247 = v415;
  else
    v247 &= 0xCFFFFFFF;
  v248 = *(unsigned int *)(v472 + 16);
  if ((v248 & 0x80000000) == 0)
  {
LABEL_631:
    v249 = *(_QWORD *)(v474 + 2328);
    if (v248 >= (*(_QWORD *)(v474 + 2336) - v249) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v249 = *(_QWORD *)(v474 + 2328);
      v238 = **v465;
    }
    v223 = v220;
    v250 = v249 + (v248 << 11);
    v228 = (v237 >> 30) & 1;
    v227 = (v241 >> 30) & 1;
    v226 = (v244 >> 30) & 1;
    v251 = *(_DWORD *)(v250 + 412);
    v225 = (v247 >> 30) & 1;
    if (v238)
      goto LABEL_641;
    goto LABEL_635;
  }
LABEL_1173:
  v223 = v220;
  v228 = (v237 >> 30) & 1;
  v227 = (v241 >> 30) & 1;
  v226 = (v244 >> 30) & 1;
  v251 = *(_DWORD *)(v474 + 692);
  v225 = (v247 >> 30) & 1;
  if (!v238)
  {
LABEL_635:
    if ((v251 & 0x10000000) != 0)
      v252 = 0x40000000;
    else
      v252 = 0x80000000;
    if ((v251 & 0x20000000) != 0)
      v251 = v252;
    else
      v251 &= 0xCFFFFFFF;
  }
LABEL_641:
  v224 = (v251 >> 30) & 1;
  v219 = **(unsigned __int8 **)v431;
LABEL_642:
  v439 = v218 >> 30;
  v512 = v477;
  v513 = v478;
  v514 = v479;
  v511 = v476;
  v510 = v475;
  v253 = *((_DWORD *)v217 + 81);
  if (v219)
  {
    v254 = *((_DWORD *)v217 + 145);
    v255 = *((_DWORD *)v217 + 89);
    v458 = *((_DWORD *)v217 + 153);
    v256 = *((_DWORD *)v217 + 97);
  }
  else
  {
    if ((v253 & 0x10000000) != 0)
      v257 = 0x40000000;
    else
      v257 = 0x80000000;
    if ((v253 & 0x20000000) != 0)
      v253 = v257;
    else
      v253 &= 0xCFFFFFFF;
    v258 = *((_DWORD *)v217 + 145);
    if ((v258 & 0x10000000) != 0)
      v259 = 0x40000000;
    else
      v259 = 0x80000000;
    if ((v258 & 0x20000000) != 0)
      v254 = v259;
    else
      v254 = v258 & 0xCFFFFFFF;
    v260 = *((_DWORD *)v217 + 89);
    if ((v260 & 0x10000000) != 0)
      v261 = 0x40000000;
    else
      v261 = 0x80000000;
    if ((v260 & 0x20000000) != 0)
      v255 = v261;
    else
      v255 = v260 & 0xCFFFFFFF;
    v262 = *((_DWORD *)v217 + 153);
    if ((v262 & 0x10000000) != 0)
      v263 = 0x40000000;
    else
      v263 = 0x80000000;
    if ((v262 & 0x20000000) != 0)
      v264 = v263;
    else
      v264 = v262 & 0xCFFFFFFF;
    v458 = v264;
    v265 = *((_DWORD *)v217 + 97);
    if ((v265 & 0x10000000) != 0)
      v256 = 0x40000000;
    else
      v256 = 0x80000000;
    if ((v265 & 0x20000000) == 0)
      v256 = v265 & 0xCFFFFFFF;
  }
  v266 = v221 >> 30;
  v267 = v223 >> 30;
  v268 = v222 >> 30;
  v435 = v253 >> 30;
  v448 = v255 >> 30;
  v453 = v254 >> 30;
  v269 = v256 >> 30;
  if ((v461 & 0x40000000) != 0)
  {
    v507 = v477;
    v508 = v478;
    v509 = v479;
    v506 = v476;
    v505 = v475;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224679440;
    v501 = (__int128)xmmword_224679450;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 0, 3, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xD800000098), xmmword_224679450);
    if (!v225)
    {
      v502 = v477;
      v503 = v478;
      v504 = v479;
      v501 = v476;
      v500 = v475;
      *(_QWORD *)&v555 = 0x4040D0D04040D0DLL;
      v560 = xmmword_224679460;
      v561 = (__int128)xmmword_224679470;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 0, 3, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xD800000098), xmmword_224679470);
      v270 = (v226 | v266 & 1) == 0;
      if (!(v227 | v267 & 1))
      {
        v562 = v477;
        v563 = v478;
        v564 = v479;
        v560 = v475;
        v561 = v476;
        *(_QWORD *)&v550 = 0x40404040D0D0D0DLL;
        v555 = xmmword_224679480;
        v556 = (__int128)xmmword_224679490;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 0, 3, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xD800000098), xmmword_224679490);
        v271 = (v439 & 1) == 0 && v270;
        if (!v228 && v271)
        {
          v557 = v477;
          v558 = v478;
          v559 = v479;
          v556 = v476;
          v555 = v475;
          *(_QWORD *)&v545 = 0x4040D0D04040D0DLL;
          v550 = xmmword_2246794A0;
          v551 = (__int128)xmmword_2246794B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 0, 3, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5800000098), xmmword_2246794B0);
        }
      }
      if (v224)
        v272 = 0;
      else
        v272 = v270;
      if (v272 && (v268 & 1) == 0)
      {
        v552 = v477;
        v553 = v478;
        v554 = v479;
        *(_QWORD *)&v540 = 0x40404040D0D0D0DLL;
        v551 = v476;
        v550 = v475;
        v545 = xmmword_2246794C0;
        v546 = (__int128)xmmword_2246794D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 0, 3, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5800000098), xmmword_2246794D0);
      }
    }
    if (((v267 | v453) & 1) == 0)
    {
      v547 = v477;
      v548 = v478;
      v549 = v479;
      v546 = v476;
      v545 = v475;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_2246794E0;
      v541 = (__int128)xmmword_2246794F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 0, 3, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xD800000098), xmmword_2246794F0);
      v273 = (v435 & 1) == 0 && ((v266 | v448) & 1) == 0;
      if ((v439 & 1) == 0 && v273)
      {
        v542 = v477;
        v543 = v478;
        v544 = v479;
        v541 = v476;
        v540 = v475;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224679500;
        v536 = (__int128)xmmword_224679510;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 0, 3, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5800000098), xmmword_224679510);
      }
    }
    v274 = (v268 & 1) == 0 && ((v266 | v448) & 1) == 0;
    if (v274 && (v269 & 1) == 0)
    {
      v537 = v477;
      v538 = v478;
      v539 = v479;
      v536 = v476;
      v535 = v475;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224679520;
      v531 = xmmword_224679530;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 0, 3, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0x5800000098), xmmword_224679530);
    }
  }
  v487 = v512;
  v488 = v513;
  v489 = v514;
  v485 = v510;
  v486 = v511;
  v275 = *((_DWORD *)v217 + 82);
  if (**(_BYTE **)v431)
  {
    v276 = *((_DWORD *)v217 + 146);
    v277 = *((_DWORD *)v217 + 90);
    v278 = *((_DWORD *)v217 + 154);
    v279 = *((_DWORD *)v217 + 98);
  }
  else
  {
    if ((v275 & 0x10000000) != 0)
      v280 = 0x40000000;
    else
      v280 = 0x80000000;
    if ((v275 & 0x20000000) != 0)
      v275 = v280;
    else
      v275 &= 0xCFFFFFFF;
    v281 = *((_DWORD *)v217 + 146);
    if ((v281 & 0x10000000) != 0)
      v282 = 0x40000000;
    else
      v282 = 0x80000000;
    if ((v281 & 0x20000000) != 0)
      v276 = v282;
    else
      v276 = v281 & 0xCFFFFFFF;
    v283 = *((_DWORD *)v217 + 90);
    if ((v283 & 0x10000000) != 0)
      v284 = 0x40000000;
    else
      v284 = 0x80000000;
    if ((v283 & 0x20000000) != 0)
      v277 = v284;
    else
      v277 = v283 & 0xCFFFFFFF;
    v285 = *((_DWORD *)v217 + 154);
    if ((v285 & 0x10000000) != 0)
      v286 = 0x40000000;
    else
      v286 = 0x80000000;
    if ((v285 & 0x20000000) != 0)
      v278 = v286;
    else
      v278 = v285 & 0xCFFFFFFF;
    v287 = *((_DWORD *)v217 + 98);
    if ((v287 & 0x10000000) != 0)
      v279 = 0x40000000;
    else
      v279 = 0x80000000;
    if ((v287 & 0x20000000) == 0)
      v279 = v287 & 0xCFFFFFFF;
  }
  v288 = v277 >> 30;
  v428 = v275 >> 30;
  v444 = v276 >> 30;
  v289 = v279 >> 30;
  v497 = v512;
  v498 = v513;
  v499 = v514;
  v495 = v510;
  v496 = v511;
  if ((v458 & 0x40000000) != 0)
  {
    v507 = v512;
    v508 = v513;
    v509 = v514;
    v506 = v511;
    v505 = v510;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224679540;
    v501 = (__int128)xmmword_224679550;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 1, 3, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xD900000099), xmmword_224679550);
    if ((v461 & 0x40000000) == 0)
    {
      v502 = v512;
      v503 = v513;
      v504 = v514;
      v501 = v511;
      v500 = v510;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224679560;
      v561 = (__int128)xmmword_224679570;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 1, 3, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xD900000099), xmmword_224679570);
      if (((v267 | v453) & 1) == 0)
      {
        v562 = v512;
        v563 = v513;
        v564 = v514;
        v560 = v510;
        v561 = v511;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224679580;
        v556 = (__int128)xmmword_224679590;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 1, 3, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xD900000099), xmmword_224679590);
        v290 = (v435 & 1) == 0 && ((v266 | v448) & 1) == 0;
        if ((v439 & 1) == 0 && v290)
        {
          v557 = v512;
          v558 = v513;
          v559 = v514;
          v556 = v511;
          v555 = v510;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_2246795A0;
          v551 = (__int128)xmmword_2246795B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 1, 3, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5900000099), xmmword_2246795B0);
        }
      }
      v291 = (v268 & 1) == 0 && ((v266 | v448) & 1) == 0;
      if (v291 && (v269 & 1) == 0)
      {
        v552 = v497;
        v553 = v498;
        v554 = v499;
        v551 = v496;
        v550 = v495;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_2246795C0;
        v546 = (__int128)xmmword_2246795D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 1, 3, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5900000099), xmmword_2246795D0);
      }
    }
    if (((v453 | v444) & 1) == 0)
    {
      v547 = v497;
      v548 = v498;
      v549 = v499;
      v546 = v496;
      v545 = v495;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_2246795E0;
      v541 = (__int128)xmmword_2246795F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 1, 3, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xD900000099), xmmword_2246795F0);
      v292 = (v428 & 1) == 0 && ((v448 | v288) & 1) == 0;
      if ((v435 & 1) == 0 && v292)
      {
        v542 = v497;
        v543 = v498;
        v544 = v499;
        v541 = v496;
        v540 = v495;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224679600;
        v536 = (__int128)xmmword_224679610;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 1, 3, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5900000099), xmmword_224679610);
      }
    }
    v293 = (v269 & 1) == 0 && ((v448 | v288) & 1) == 0;
    if (v293 && (v289 & 1) == 0)
    {
      v537 = v497;
      v538 = v498;
      v539 = v499;
      v536 = v496;
      v535 = v495;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224679620;
      v531 = xmmword_224679630;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 1, 3, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0x5900000099), xmmword_224679630);
    }
  }
  v294 = *((_DWORD *)v217 + 83);
  if (**(_BYTE **)v431)
  {
    v295 = *((_DWORD *)v217 + 147);
    v296 = *((_DWORD *)v217 + 91);
    v297 = *((_DWORD *)v217 + 155);
    v298 = *((_DWORD *)v217 + 99);
  }
  else
  {
    if ((v294 & 0x10000000) != 0)
      v299 = 0x40000000;
    else
      v299 = 0x80000000;
    if ((v294 & 0x20000000) != 0)
      v294 = v299;
    else
      v294 &= 0xCFFFFFFF;
    v300 = *((_DWORD *)v217 + 147);
    if ((v300 & 0x10000000) != 0)
      v301 = 0x40000000;
    else
      v301 = 0x80000000;
    if ((v300 & 0x20000000) != 0)
      v295 = v301;
    else
      v295 = v300 & 0xCFFFFFFF;
    v302 = *((_DWORD *)v217 + 91);
    if ((v302 & 0x10000000) != 0)
      v303 = 0x40000000;
    else
      v303 = 0x80000000;
    if ((v302 & 0x20000000) != 0)
      v296 = v303;
    else
      v296 = v302 & 0xCFFFFFFF;
    v304 = *((_DWORD *)v217 + 155);
    if ((v304 & 0x10000000) != 0)
      v305 = 0x40000000;
    else
      v305 = 0x80000000;
    if ((v304 & 0x20000000) != 0)
      v297 = v305;
    else
      v297 = v304 & 0xCFFFFFFF;
    v306 = *((_DWORD *)v217 + 99);
    if ((v306 & 0x10000000) != 0)
      v298 = 0x40000000;
    else
      v298 = 0x80000000;
    if ((v306 & 0x20000000) == 0)
      v298 = v306 & 0xCFFFFFFF;
  }
  v307 = v296 >> 30;
  v425 = v294 >> 30;
  v308 = v295 >> 30;
  v440 = v298 >> 30;
  if ((v278 & 0x40000000) != 0)
  {
    v507 = v487;
    v508 = v488;
    v509 = v489;
    v506 = v486;
    v505 = v485;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224679640;
    v501 = (__int128)xmmword_224679650;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 2, 3, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xDA0000009ALL), xmmword_224679650);
    if ((v458 & 0x40000000) == 0)
    {
      v502 = v487;
      v503 = v488;
      v504 = v489;
      v501 = v486;
      v500 = v485;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224679660;
      v561 = (__int128)xmmword_224679670;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 2, 3, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xDA0000009ALL), xmmword_224679670);
      if (((v453 | v444) & 1) == 0)
      {
        v562 = v487;
        v563 = v488;
        v564 = v489;
        v560 = v485;
        v561 = v486;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224679680;
        v556 = (__int128)xmmword_224679690;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 2, 3, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xDA0000009ALL), xmmword_224679690);
        v309 = (v428 & 1) == 0 && ((v448 | v288) & 1) == 0;
        if ((v435 & 1) == 0 && v309)
        {
          v557 = v487;
          v558 = v488;
          v559 = v489;
          v556 = v486;
          v555 = v485;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_2246796A0;
          v551 = (__int128)xmmword_2246796B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 2, 3, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5A0000009ALL), xmmword_2246796B0);
        }
      }
      v310 = (v269 & 1) == 0 && ((v448 | v288) & 1) == 0;
      if (v310 && (v289 & 1) == 0)
      {
        v552 = v487;
        v553 = v488;
        v554 = v489;
        v551 = v486;
        v550 = v485;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_2246796C0;
        v546 = (__int128)xmmword_2246796D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 2, 3, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5A0000009ALL), xmmword_2246796D0);
      }
    }
    if (((v444 | v308) & 1) == 0)
    {
      v547 = v487;
      v548 = v488;
      v549 = v489;
      v546 = v486;
      v545 = v485;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_2246796E0;
      v541 = (__int128)xmmword_2246796F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 2, 3, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xDA0000009ALL), xmmword_2246796F0);
      v311 = (v425 & 1) == 0 && ((v288 | v307) & 1) == 0;
      if ((v428 & 1) == 0 && v311)
      {
        v542 = v487;
        v543 = v488;
        v544 = v489;
        v541 = v486;
        v540 = v485;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224679700;
        v536 = (__int128)xmmword_224679710;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 2, 3, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5A0000009ALL), xmmword_224679710);
      }
    }
    v312 = (v289 & 1) == 0 && ((v288 | v307) & 1) == 0;
    if (v312 && (v440 & 1) == 0)
    {
      v537 = v487;
      v538 = v488;
      v539 = v489;
      v536 = v486;
      v535 = v485;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224679720;
      v531 = xmmword_224679730;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 2, 3, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0x5A0000009ALL), xmmword_224679730);
    }
  }
  v313 = *((_DWORD *)v217 + 84);
  if (**(_BYTE **)v431)
  {
    v314 = *((_DWORD *)v217 + 148);
    v315 = *((_DWORD *)v217 + 92);
    v316 = *((_DWORD *)v217 + 156);
    v317 = *((_DWORD *)v217 + 100);
  }
  else
  {
    if ((v313 & 0x10000000) != 0)
      v318 = 0x40000000;
    else
      v318 = 0x80000000;
    if ((v313 & 0x20000000) != 0)
      v313 = v318;
    else
      v313 &= 0xCFFFFFFF;
    v319 = *((_DWORD *)v217 + 148);
    if ((v319 & 0x10000000) != 0)
      v320 = 0x40000000;
    else
      v320 = 0x80000000;
    if ((v319 & 0x20000000) != 0)
      v314 = v320;
    else
      v314 = v319 & 0xCFFFFFFF;
    v321 = *((_DWORD *)v217 + 92);
    if ((v321 & 0x10000000) != 0)
      v322 = 0x40000000;
    else
      v322 = 0x80000000;
    if ((v321 & 0x20000000) != 0)
      v315 = v322;
    else
      v315 = v321 & 0xCFFFFFFF;
    v323 = *((_DWORD *)v217 + 156);
    if ((v323 & 0x10000000) != 0)
      v324 = 0x40000000;
    else
      v324 = 0x80000000;
    if ((v323 & 0x20000000) != 0)
      v316 = v324;
    else
      v316 = v323 & 0xCFFFFFFF;
    v325 = *((_DWORD *)v217 + 100);
    if ((v325 & 0x10000000) != 0)
      v317 = 0x40000000;
    else
      v317 = 0x80000000;
    if ((v325 & 0x20000000) == 0)
      v317 = v325 & 0xCFFFFFFF;
  }
  v422 = v313 >> 30;
  v459 = v315 >> 30;
  v462 = v314 >> 30;
  v436 = v317 >> 30;
  if ((v297 & 0x40000000) != 0)
  {
    v507 = v487;
    v508 = v488;
    v509 = v489;
    v506 = v486;
    v505 = v485;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224679740;
    v501 = (__int128)xmmword_224679750;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 3, 3, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xDB0000009BLL), xmmword_224679750);
    if ((v278 & 0x40000000) == 0)
    {
      v502 = v487;
      v503 = v488;
      v504 = v489;
      v501 = v486;
      v500 = v485;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224679760;
      v561 = (__int128)xmmword_224679770;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 3, 3, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xDB0000009BLL), xmmword_224679770);
      if (((v444 | v308) & 1) == 0)
      {
        v562 = v487;
        v563 = v488;
        v564 = v489;
        v560 = v485;
        v561 = v486;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224679780;
        v556 = (__int128)xmmword_224679790;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 3, 3, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xDB0000009BLL), xmmword_224679790);
        v326 = (v425 & 1) == 0 && ((v288 | v307) & 1) == 0;
        if ((v428 & 1) == 0 && v326)
        {
          v557 = v487;
          v558 = v488;
          v559 = v489;
          v556 = v486;
          v555 = v485;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_2246797A0;
          v551 = (__int128)xmmword_2246797B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 3, 3, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5B0000009BLL), xmmword_2246797B0);
        }
      }
      v327 = (v289 & 1) == 0 && ((v288 | v307) & 1) == 0;
      if (v327 && (v440 & 1) == 0)
      {
        v552 = v487;
        v553 = v488;
        v554 = v489;
        v551 = v486;
        v550 = v485;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_2246797C0;
        v546 = (__int128)xmmword_2246797D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 3, 3, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5B0000009BLL), xmmword_2246797D0);
      }
    }
    if (((v308 | v462) & 1) == 0)
    {
      v547 = v487;
      v548 = v488;
      v549 = v489;
      v546 = v486;
      v545 = v485;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_2246797E0;
      v541 = (__int128)xmmword_2246797F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 3, 3, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xDB0000009BLL), xmmword_2246797F0);
      v328 = (v422 & 1) == 0 && ((v307 | v459) & 1) == 0;
      if ((v425 & 1) == 0 && v328)
      {
        v542 = v487;
        v543 = v488;
        v544 = v489;
        v541 = v486;
        v540 = v485;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224679800;
        v536 = (__int128)xmmword_224679810;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 3, 3, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5B0000009BLL), xmmword_224679810);
      }
    }
    v329 = (v440 & 1) == 0 && ((v307 | v459) & 1) == 0;
    if (v329 && (v436 & 1) == 0)
    {
      v537 = v487;
      v538 = v488;
      v539 = v489;
      v536 = v486;
      v535 = v485;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224679820;
      v531 = xmmword_224679830;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 3, 3, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0x5B0000009BLL), xmmword_224679830);
    }
  }
  v330 = *((_DWORD *)v217 + 85);
  if (**(_BYTE **)v431)
  {
    v331 = *((_DWORD *)v217 + 149);
    v332 = *((_DWORD *)v217 + 93);
    v333 = *((_DWORD *)v217 + 157);
    v334 = *((_DWORD *)v217 + 101);
  }
  else
  {
    if ((v330 & 0x10000000) != 0)
      v335 = 0x40000000;
    else
      v335 = 0x80000000;
    if ((v330 & 0x20000000) != 0)
      v330 = v335;
    else
      v330 &= 0xCFFFFFFF;
    v336 = *((_DWORD *)v217 + 149);
    if ((v336 & 0x10000000) != 0)
      v337 = 0x40000000;
    else
      v337 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v331 = v337;
    else
      v331 = v336 & 0xCFFFFFFF;
    v338 = *((_DWORD *)v217 + 93);
    if ((v338 & 0x10000000) != 0)
      v339 = 0x40000000;
    else
      v339 = 0x80000000;
    if ((v338 & 0x20000000) != 0)
      v332 = v339;
    else
      v332 = v338 & 0xCFFFFFFF;
    v340 = *((_DWORD *)v217 + 157);
    if ((v340 & 0x10000000) != 0)
      v341 = 0x40000000;
    else
      v341 = 0x80000000;
    if ((v340 & 0x20000000) != 0)
      v333 = v341;
    else
      v333 = v340 & 0xCFFFFFFF;
    v342 = *((_DWORD *)v217 + 101);
    if ((v342 & 0x10000000) != 0)
      v334 = 0x40000000;
    else
      v334 = 0x80000000;
    if ((v342 & 0x20000000) == 0)
      v334 = v342 & 0xCFFFFFFF;
  }
  v343 = v332 >> 30;
  v429 = v330 >> 30;
  v344 = v331 >> 30;
  v445 = v334 >> 30;
  if ((v316 & 0x40000000) != 0)
  {
    v507 = v487;
    v508 = v488;
    v509 = v489;
    v506 = v486;
    v505 = v485;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224679840;
    v501 = (__int128)xmmword_224679850;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 4, 3, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xDC0000009CLL), xmmword_224679850);
    if ((v297 & 0x40000000) == 0)
    {
      v502 = v487;
      v503 = v488;
      v504 = v489;
      v501 = v486;
      v500 = v485;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224679860;
      v561 = (__int128)xmmword_224679870;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 4, 3, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xDC0000009CLL), xmmword_224679870);
      if (((v308 | v462) & 1) == 0)
      {
        v562 = v487;
        v563 = v488;
        v564 = v489;
        v560 = v485;
        v561 = v486;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224679880;
        v556 = (__int128)xmmword_224679890;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 4, 3, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xDC0000009CLL), xmmword_224679890);
        v345 = (v422 & 1) == 0 && ((v307 | v459) & 1) == 0;
        if ((v425 & 1) == 0 && v345)
        {
          v557 = v487;
          v558 = v488;
          v559 = v489;
          v556 = v486;
          v555 = v485;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_2246798A0;
          v551 = (__int128)xmmword_2246798B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 4, 3, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5C0000009CLL), xmmword_2246798B0);
        }
      }
      v346 = (v440 & 1) == 0 && ((v307 | v459) & 1) == 0;
      if (v346 && (v436 & 1) == 0)
      {
        v552 = v487;
        v553 = v488;
        v554 = v489;
        v551 = v486;
        v550 = v485;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_2246798C0;
        v546 = (__int128)xmmword_2246798D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 4, 3, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5C0000009CLL), xmmword_2246798D0);
      }
    }
    if (((v462 | v344) & 1) == 0)
    {
      v547 = v487;
      v548 = v488;
      v549 = v489;
      v546 = v486;
      v545 = v485;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_2246798E0;
      v541 = (__int128)xmmword_2246798F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 4, 3, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xDC0000009CLL), xmmword_2246798F0);
      v347 = (v429 & 1) == 0 && ((v459 | v343) & 1) == 0;
      if ((v422 & 1) == 0 && v347)
      {
        v542 = v487;
        v543 = v488;
        v544 = v489;
        v541 = v486;
        v540 = v485;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224679900;
        v536 = (__int128)xmmword_224679910;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 4, 3, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5C0000009CLL), xmmword_224679910);
      }
    }
    v348 = (v436 & 1) == 0 && ((v459 | v343) & 1) == 0;
    if (v348 && (v445 & 1) == 0)
    {
      v537 = v487;
      v538 = v488;
      v539 = v489;
      v536 = v486;
      v535 = v485;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224679920;
      v531 = xmmword_224679930;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 4, 3, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0x5C0000009CLL), xmmword_224679930);
    }
  }
  v349 = *((_DWORD *)v217 + 86);
  if (**(_BYTE **)v431)
  {
    v350 = *((_DWORD *)v217 + 150);
    v351 = *((_DWORD *)v217 + 94);
    v352 = *((_DWORD *)v217 + 158);
    v353 = *((_DWORD *)v217 + 102);
  }
  else
  {
    if ((v349 & 0x10000000) != 0)
      v354 = 0x40000000;
    else
      v354 = 0x80000000;
    if ((v349 & 0x20000000) != 0)
      v349 = v354;
    else
      v349 &= 0xCFFFFFFF;
    v355 = *((_DWORD *)v217 + 150);
    if ((v355 & 0x10000000) != 0)
      v356 = 0x40000000;
    else
      v356 = 0x80000000;
    if ((v355 & 0x20000000) != 0)
      v350 = v356;
    else
      v350 = v355 & 0xCFFFFFFF;
    v357 = *((_DWORD *)v217 + 94);
    if ((v357 & 0x10000000) != 0)
      v358 = 0x40000000;
    else
      v358 = 0x80000000;
    if ((v357 & 0x20000000) != 0)
      v351 = v358;
    else
      v351 = v357 & 0xCFFFFFFF;
    v359 = *((_DWORD *)v217 + 158);
    if ((v359 & 0x10000000) != 0)
      v360 = 0x40000000;
    else
      v360 = 0x80000000;
    if ((v359 & 0x20000000) != 0)
      v352 = v360;
    else
      v352 = v359 & 0xCFFFFFFF;
    v361 = *((_DWORD *)v217 + 102);
    if ((v361 & 0x10000000) != 0)
      v353 = 0x40000000;
    else
      v353 = 0x80000000;
    if ((v361 & 0x20000000) == 0)
      v353 = v361 & 0xCFFFFFFF;
  }
  v441 = v349 >> 30;
  v449 = v351 >> 30;
  v454 = v350 >> 30;
  v362 = v353 >> 30;
  v522 = v487;
  v523 = v488;
  v524 = v489;
  v521 = v486;
  v520 = v485;
  if ((v333 & 0x40000000) != 0)
  {
    v507 = v487;
    v508 = v488;
    v509 = v489;
    v506 = v486;
    v505 = v485;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224679940;
    v501 = (__int128)xmmword_224679950;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 5, 3, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xDD0000009DLL), xmmword_224679950);
    if ((v316 & 0x40000000) == 0)
    {
      v502 = v487;
      v503 = v488;
      v504 = v489;
      v501 = v486;
      v500 = v485;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224679960;
      v561 = (__int128)xmmword_224679970;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 5, 3, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xDD0000009DLL), xmmword_224679970);
      if (((v462 | v344) & 1) == 0)
      {
        v562 = v487;
        v563 = v488;
        v564 = v489;
        v560 = v485;
        v561 = v486;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224679980;
        v556 = (__int128)xmmword_224679990;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 5, 3, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xDD0000009DLL), xmmword_224679990);
        v363 = (v429 & 1) == 0 && ((v459 | v343) & 1) == 0;
        if ((v422 & 1) == 0 && v363)
        {
          v557 = v487;
          v558 = v488;
          v559 = v489;
          v556 = v486;
          v555 = v485;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_2246799A0;
          v551 = (__int128)xmmword_2246799B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 5, 3, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5D0000009DLL), xmmword_2246799B0);
        }
      }
      v364 = (v436 & 1) == 0 && ((v459 | v343) & 1) == 0;
      if (v364 && (v445 & 1) == 0)
      {
        v552 = v522;
        v553 = v523;
        v554 = v524;
        v551 = v521;
        v550 = v520;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_2246799C0;
        v546 = (__int128)xmmword_2246799D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 5, 3, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5D0000009DLL), xmmword_2246799D0);
      }
    }
    if (((v344 | v454) & 1) == 0)
    {
      v547 = v522;
      v548 = v523;
      v549 = v524;
      v546 = v521;
      v545 = v520;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_2246799E0;
      v541 = (__int128)xmmword_2246799F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 5, 3, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xDD0000009DLL), xmmword_2246799F0);
      v365 = (v441 & 1) == 0 && ((v343 | v449) & 1) == 0;
      if ((v429 & 1) == 0 && v365)
      {
        v542 = v522;
        v543 = v523;
        v544 = v524;
        v541 = v521;
        v540 = v520;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224679A00;
        v536 = (__int128)xmmword_224679A10;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 5, 3, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0x5D0000009DLL), xmmword_224679A10);
      }
    }
    v366 = (v445 & 1) == 0 && ((v343 | v449) & 1) == 0;
    if (v366 && (v362 & 1) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224679A20;
      v531 = xmmword_224679A30;
      *(_QWORD *)&v515 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 5, 3, 2, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v515, COERCE_DOUBLE(0x5D0000009DLL), xmmword_224679A30);
    }
  }
  v517 = v487;
  v518 = v488;
  v519 = v489;
  v516 = v486;
  v515 = v485;
  v367 = *((_DWORD *)v217 + 87);
  if (**(_BYTE **)v431)
  {
    v368 = *((_DWORD *)v217 + 151);
    v369 = *((_DWORD *)v217 + 95);
    v370 = *((_DWORD *)v217 + 159);
    v371 = *((_DWORD *)v217 + 103);
  }
  else
  {
    if ((v367 & 0x10000000) != 0)
      v372 = 0x40000000;
    else
      v372 = 0x80000000;
    if ((v367 & 0x20000000) != 0)
      v367 = v372;
    else
      v367 &= 0xCFFFFFFF;
    v373 = *((_DWORD *)v217 + 151);
    if ((v373 & 0x10000000) != 0)
      v374 = 0x40000000;
    else
      v374 = 0x80000000;
    if ((v373 & 0x20000000) != 0)
      v368 = v374;
    else
      v368 = v373 & 0xCFFFFFFF;
    v375 = *((_DWORD *)v217 + 95);
    if ((v375 & 0x10000000) != 0)
      v376 = 0x40000000;
    else
      v376 = 0x80000000;
    if ((v375 & 0x20000000) != 0)
      v369 = v376;
    else
      v369 = v375 & 0xCFFFFFFF;
    v377 = *((_DWORD *)v217 + 159);
    if ((v377 & 0x10000000) != 0)
      v378 = 0x40000000;
    else
      v378 = 0x80000000;
    if ((v377 & 0x20000000) != 0)
      v370 = v378;
    else
      v370 = v377 & 0xCFFFFFFF;
    v379 = *((_DWORD *)v217 + 103);
    if ((v379 & 0x10000000) != 0)
      v371 = 0x40000000;
    else
      v371 = 0x80000000;
    if ((v379 & 0x20000000) == 0)
      v371 = v379 & 0xCFFFFFFF;
  }
  v380 = v369 >> 30;
  v463 = v367 >> 30;
  v381 = v368 >> 30;
  v468 = v371 >> 30;
  v527 = v487;
  v528 = v488;
  v529 = v489;
  v526 = v486;
  v525 = v485;
  if ((v352 & 0x40000000) != 0)
  {
    v507 = v487;
    v508 = v488;
    v509 = v489;
    v506 = v486;
    v505 = v485;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_224679A40;
    v501 = (__int128)xmmword_224679A50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 6, 3, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xDE0000009ELL), xmmword_224679A50);
    if ((v333 & 0x40000000) == 0)
    {
      v502 = v487;
      v503 = v488;
      v504 = v489;
      v501 = v486;
      v500 = v485;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224679A60;
      v561 = (__int128)xmmword_224679A70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 6, 3, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xDE0000009ELL), xmmword_224679A70);
      if (((v344 | v454) & 1) == 0)
      {
        v562 = v487;
        v563 = v488;
        v564 = v489;
        v560 = v485;
        v561 = v486;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224679A80;
        v556 = (__int128)xmmword_224679A90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 6, 3, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xDE0000009ELL), xmmword_224679A90);
        v382 = (v441 & 1) == 0 && ((v343 | v449) & 1) == 0;
        if ((v429 & 1) == 0 && v382)
        {
          v557 = v487;
          v558 = v488;
          v559 = v489;
          v556 = v486;
          v555 = v485;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_224679AA0;
          v551 = (__int128)xmmword_224679AB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 6, 3, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5E0000009ELL), xmmword_224679AB0);
        }
      }
      v383 = (v445 & 1) == 0 && ((v343 | v449) & 1) == 0;
      if (v383 && (v362 & 1) == 0)
      {
        v552 = v527;
        v553 = v528;
        v554 = v529;
        v551 = v526;
        v550 = v525;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224679AC0;
        v546 = (__int128)xmmword_224679AD0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 6, 3, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5E0000009ELL), xmmword_224679AD0);
      }
    }
    if (((v454 | v381) & 1) == 0)
    {
      v547 = v527;
      v548 = v528;
      v549 = v529;
      v546 = v526;
      v545 = v525;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224679AE0;
      v541 = (__int128)xmmword_224679AF0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 6, 3, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xDE0000009ELL), xmmword_224679AF0);
      v384 = (v463 & 1) == 0 && ((v449 | v380) & 1) == 0;
      if ((v441 & 1) == 0 && v384)
      {
        v542 = v527;
        v543 = v528;
        v544 = v529;
        v541 = v526;
        v540 = v525;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_224679B00;
        v536 = (__int128)xmmword_224679B10;
        *(_QWORD *)&v566[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 6, 3, 2, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)v566, COERCE_DOUBLE(0x5E0000009ELL), xmmword_224679B10);
      }
    }
    v385 = (v362 & 1) == 0 && ((v449 | v380) & 1) == 0;
    if (v385 && (v468 & 1) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v566[0] = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_224679B20;
      v531 = xmmword_224679B30;
      v567[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 6, 3, 2, (uint64_t)v566, (uint64_t)&v530, (uint64_t)v567, COERCE_DOUBLE(0x5E0000009ELL), xmmword_224679B30);
    }
  }
  v386 = *(unsigned int *)(v472 + 88);
  if ((v386 & 0x80000000) != 0)
  {
    v389 = *v465;
    v390 = *(_DWORD *)(v474 + 600);
    v391 = **v465;
    if (**v465)
      goto LABEL_1060;
  }
  else
  {
    v387 = *(_QWORD *)(v474 + 2328);
    if (v386 >= (*(_QWORD *)(v474 + 2336) - v387) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v387 = *(_QWORD *)(v474 + 2328);
    }
    v388 = v387 + (v386 << 11);
    v389 = *v465;
    v390 = *(_DWORD *)(v388 + 320);
    v391 = **v465;
    if (**v465)
    {
LABEL_1060:
      v392 = *(unsigned int *)(v472 + 88);
      if ((v392 & 0x80000000) == 0)
        goto LABEL_1061;
LABEL_1080:
      v394 = *(_DWORD *)(v474 + 856);
      if (v391)
        goto LABEL_1065;
      goto LABEL_1081;
    }
  }
  if ((v390 & 0x10000000) != 0)
    v399 = 0x40000000;
  else
    v399 = 0x80000000;
  if ((v390 & 0x20000000) != 0)
    v390 = v399;
  else
    v390 &= 0xCFFFFFFF;
  v392 = *(unsigned int *)(v472 + 88);
  if ((v392 & 0x80000000) != 0)
    goto LABEL_1080;
LABEL_1061:
  v393 = *(_QWORD *)(v474 + 2328);
  if (v392 >= (*(_QWORD *)(v474 + 2336) - v393) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v393 = *(_QWORD *)(v474 + 2328);
    v389 = *v465;
    v391 = **v465;
  }
  v394 = *(_DWORD *)(v393 + (v392 << 11) + 576);
  if (v391)
  {
LABEL_1065:
    v395 = *(unsigned int *)(v472 + 88);
    if ((v395 & 0x80000000) == 0)
      goto LABEL_1066;
LABEL_1088:
    v397 = *(_DWORD *)(v474 + 632);
    if (v391)
      goto LABEL_1070;
    goto LABEL_1089;
  }
LABEL_1081:
  if ((v394 & 0x10000000) != 0)
    v400 = 0x40000000;
  else
    v400 = 0x80000000;
  if ((v394 & 0x20000000) != 0)
    v394 = v400;
  else
    v394 &= 0xCFFFFFFF;
  v395 = *(unsigned int *)(v472 + 88);
  if ((v395 & 0x80000000) != 0)
    goto LABEL_1088;
LABEL_1066:
  v396 = *(_QWORD *)(v474 + 2328);
  if (v395 >= (*(_QWORD *)(v474 + 2336) - v396) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v396 = *(_QWORD *)(v474 + 2328);
    v389 = *v465;
    v391 = **v465;
  }
  v397 = *(_DWORD *)(v396 + (v395 << 11) + 352);
  if (v391)
  {
LABEL_1070:
    v398 = *(unsigned int *)(v472 + 88);
    if ((v398 & 0x80000000) != 0)
      goto LABEL_1139;
    goto LABEL_1096;
  }
LABEL_1089:
  if ((v397 & 0x10000000) != 0)
    v401 = 0x40000000;
  else
    v401 = 0x80000000;
  if ((v397 & 0x20000000) != 0)
    v397 = v401;
  else
    v397 &= 0xCFFFFFFF;
  v398 = *(unsigned int *)(v472 + 88);
  if ((v398 & 0x80000000) != 0)
    goto LABEL_1139;
LABEL_1096:
  v402 = *(_QWORD *)(v474 + 2328);
  v403 = (*(_QWORD *)(v474 + 2336) - v402) >> 11;
  if (v403 > v398)
    goto LABEL_1100;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v389 = *v465;
  v398 = *(unsigned int *)(v472 + 88);
  if ((v398 & 0x80000000) != 0)
  {
LABEL_1139:
    v404 = *(_DWORD *)(v474 + 664);
    if (*v389)
      goto LABEL_1110;
    goto LABEL_1104;
  }
  v402 = *(_QWORD *)(v474 + 2328);
  v403 = (*(_QWORD *)(v474 + 2336) - v402) >> 11;
LABEL_1100:
  if (v403 <= v398)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v402 = *(_QWORD *)(v474 + 2328);
    v389 = *v465;
  }
  v404 = *(_DWORD *)(v402 + (v398 << 11) + 384);
  if (!*v389)
  {
LABEL_1104:
    if ((v404 & 0x10000000) != 0)
      v405 = 0x40000000;
    else
      v405 = 0x80000000;
    if ((v404 & 0x20000000) != 0)
      v404 = v405;
    else
      v404 &= 0xCFFFFFFF;
  }
LABEL_1110:
  v532 = v517;
  v533 = v518;
  v534 = v519;
  v531 = (float32x4_t)v516;
  v530 = v515;
  if ((v370 & 0x40000000) != 0)
  {
    v507 = v517;
    v508 = v518;
    v509 = v519;
    v506 = v516;
    v505 = v515;
    *(_QWORD *)&v560 = 0x161616160D0D0D0DLL;
    v500 = xmmword_224679B40;
    v501 = (__int128)xmmword_224679B50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 7, 3, 2, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0xDF0000009FLL), xmmword_224679B50);
    if ((v352 & 0x40000000) == 0)
    {
      v502 = v517;
      v503 = v518;
      v504 = v519;
      v501 = v516;
      v500 = v515;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_224679B60;
      v561 = (__int128)xmmword_224679B70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 7, 3, 2, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xDF0000009FLL), xmmword_224679B70);
      if (((v454 | v381) & 1) == 0)
      {
        v562 = v517;
        v563 = v518;
        v564 = v519;
        v560 = v515;
        v561 = v516;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224679B80;
        v556 = (__int128)xmmword_224679B90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 7, 3, 2, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xDF0000009FLL), xmmword_224679B90);
        v406 = (v463 & 1) == 0 && ((v449 | v380) & 1) == 0;
        if ((v441 & 1) == 0 && v406)
        {
          v557 = v517;
          v558 = v518;
          v559 = v519;
          v556 = v516;
          v555 = v515;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_224679BA0;
          v551 = (__int128)xmmword_224679BB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 7, 3, 2, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x5F0000009FLL), xmmword_224679BB0);
        }
      }
      v407 = (v362 & 1) == 0 && ((v449 | v380) & 1) == 0;
      if (v407 && (v468 & 1) == 0)
      {
        v552 = v532;
        v553 = v533;
        v554 = v534;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v551 = (__int128)v531;
        v550 = v530;
        v545 = xmmword_224679BC0;
        v546 = (__int128)xmmword_224679BD0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 7, 3, 2, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0x5F0000009FLL), xmmword_224679BD0);
      }
    }
    v408 = (v397 & 0x40000000 | v380 & 1) == 0;
    if (!(v394 & 0x40000000 | v381 & 1))
    {
      v547 = v532;
      v548 = v533;
      v549 = v534;
      *(_QWORD *)&v535 = 0x16160D0D16160D0DLL;
      v546 = (__int128)v531;
      v545 = v530;
      v540 = xmmword_224679BE0;
      v541 = (__int128)xmmword_224679BF0;
      *(_QWORD *)&v566[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 7, 3, 2, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)v566, COERCE_DOUBLE(0xDF0000009FLL), xmmword_224679BF0);
      v409 = (v390 & 0x40000000) == 0 && v408;
      if ((v463 & 1) == 0 && v409)
      {
        v542 = v532;
        v543 = v533;
        v544 = v534;
        *(_QWORD *)&v566[0] = 0x161616160D0D0D0DLL;
        v541 = (__int128)v531;
        v540 = v530;
        v535 = xmmword_224679C00;
        v536 = (__int128)xmmword_224679C10;
        v567[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 7, 3, 2, (uint64_t)v566, (uint64_t)&v535, (uint64_t)v567, COERCE_DOUBLE(0x5F0000009FLL), xmmword_224679C10);
      }
    }
    v410 = (v468 & 1) == 0 && v408;
    if (v410 && (v404 & 0x40000000) == 0)
    {
      v537 = v532;
      v538 = v533;
      v539 = v534;
      v567[0] = 0x16160D0D16160D0DLL;
      v536 = (__int128)v531;
      v535 = v530;
      v566[0] = xmmword_224679C20;
      v566[1] = xmmword_224679C30;
      v565 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 7, 3, 2, (uint64_t)v567, (uint64_t)v566, (uint64_t)&v565, COERCE_DOUBLE(0x5F0000009FLL), xmmword_224679C30);
    }
  }
  v500 = v431;
  *(_QWORD *)&v501 = v217;
  *(_QWORD *)&v560 = v474;
  *((_QWORD *)&v560 + 1) = v472;
  *(_QWORD *)&v561 = v465;
  v509 = v479;
  v508 = v478;
  v507 = v477;
  v505 = v475;
  v506 = v476;
  return sub_223DD2B40((unsigned __int8 ***)&v500, &v560, &v505);
}

unint64_t sub_223DD2B40(unsigned __int8 ***a1, _QWORD *a2, __int128 *a3)
{
  unsigned __int8 **v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  _BYTE **v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  _BYTE **v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  _BYTE **v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  _BYTE **v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  _BYTE **v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  __int128 v78;
  __int128 v79;
  _BOOL4 v80;
  _BOOL4 v81;
  _BOOL4 v82;
  _BOOL4 v83;
  _BOOL4 v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  _BOOL4 v99;
  _BOOL4 v100;
  _BOOL4 v101;
  _BOOL4 v102;
  _BOOL4 v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  _BOOL4 v119;
  _BOOL4 v120;
  _BOOL4 v121;
  _BOOL4 v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  _BOOL4 v136;
  _BOOL4 v137;
  _BOOL4 v138;
  _BOOL4 v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  _BOOL4 v154;
  _BOOL4 v155;
  _BOOL4 v156;
  _BOOL4 v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  _BOOL4 v171;
  _BOOL4 v172;
  _BOOL4 v173;
  _BOOL4 v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  _BOOL4 v190;
  _BOOL4 v191;
  _BOOL4 v192;
  _BOOL4 v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _BYTE *v197;
  unsigned int v198;
  int v199;
  unint64_t v200;
  uint64_t v201;
  unsigned int v202;
  unint64_t v203;
  uint64_t v204;
  unsigned int v205;
  unint64_t v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  uint64_t v210;
  unint64_t v211;
  unsigned int v212;
  unsigned int v213;
  _BOOL4 v214;
  _BOOL4 v215;
  _BOOL4 v216;
  _BOOL4 v217;
  unsigned __int8 **v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  unint64_t v236;
  uint64_t v237;
  unsigned int v238;
  int v239;
  unint64_t v240;
  uint64_t v241;
  unsigned int v242;
  unint64_t v243;
  uint64_t v244;
  unsigned int v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  _BOOL4 v271;
  _BOOL4 v272;
  _BOOL4 v273;
  _BOOL4 v274;
  _BOOL4 v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  _BOOL4 v291;
  _BOOL4 v292;
  _BOOL4 v293;
  _BOOL4 v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  int v307;
  unsigned int v308;
  _BOOL4 v309;
  _BOOL4 v310;
  _BOOL4 v311;
  _BOOL4 v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  _BOOL4 v327;
  _BOOL4 v328;
  _BOOL4 v329;
  _BOOL4 v330;
  _BOOL4 v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  int v344;
  unsigned int v345;
  unsigned int v346;
  _BOOL4 v347;
  _BOOL4 v348;
  _BOOL4 v349;
  _BOOL4 v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  _BOOL4 v365;
  _BOOL4 v366;
  _BOOL4 v367;
  _BOOL4 v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  int v379;
  unsigned int v380;
  int v381;
  unsigned int v382;
  unsigned int v383;
  _BOOL4 v384;
  _BOOL4 v385;
  _BOOL4 v386;
  _BOOL4 v387;
  _BOOL4 v388;
  unint64_t v389;
  uint64_t v390;
  uint64_t v391;
  _BYTE *v392;
  unsigned int v393;
  int v394;
  unint64_t v395;
  uint64_t v396;
  unsigned int v397;
  unint64_t v398;
  uint64_t v399;
  unsigned int v400;
  unint64_t v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  uint64_t v405;
  unint64_t v406;
  unsigned int v407;
  unsigned int v408;
  _BOOL4 v409;
  _BOOL4 v410;
  _BOOL4 v411;
  _BOOL4 v412;
  _BOOL4 v413;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  __int128 v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned __int8 **v462;
  int v463;
  unsigned int v464;
  unsigned int v465;
  _QWORD *v466;
  _BYTE **v467;
  unsigned int v468;
  uint64_t v469;
  unsigned int v470;
  _BYTE **v471;
  unsigned int v472;
  unsigned int v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  __int128 v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  float32x4_t v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  uint64_t v567;
  _OWORD v568[2];
  _QWORD v569[3];

  v569[1] = *MEMORY[0x24BDAC8D0];
  v4 = a1[2];
  v471 = *a1;
  v5 = *((_DWORD *)v4 + 88);
  v6 = ***a1;
  v466 = a2;
  if (***a1)
  {
    v7 = *((_DWORD *)v4 + 152);
    v8 = *((_DWORD *)v4 + 96);
    v9 = *((_DWORD *)v4 + 160);
    v10 = *((_DWORD *)v4 + 104);
    v475 = *a2;
    v456 = v9;
    if ((v9 & 0x40000000) == 0)
    {
LABEL_3:
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      goto LABEL_91;
    }
  }
  else
  {
    if ((v5 & 0x20000000) != 0)
      v5 *= 4;
    v16 = *((_DWORD *)v4 + 152);
    if ((v16 & 0x20000000) != 0)
      v7 = 4 * v16;
    else
      v7 = *((_DWORD *)v4 + 152);
    v17 = *((_DWORD *)v4 + 96);
    if ((v17 & 0x20000000) != 0)
      v8 = 4 * v17;
    else
      v8 = *((_DWORD *)v4 + 96);
    v18 = *((_DWORD *)v4 + 160);
    if ((v18 & 0x20000000) != 0)
      v9 = 4 * v18;
    else
      v9 = *((_DWORD *)v4 + 160);
    v19 = *((_DWORD *)v4 + 104);
    if ((v19 & 0x10000000) != 0)
      v20 = 0x40000000;
    else
      v20 = 0x80000000;
    if ((v19 & 0x20000000) != 0)
      v10 = v20;
    else
      v10 = v19 & 0xCFFFFFFF;
    v475 = *a2;
    v456 = v9;
    if ((v9 & 0x40000000) == 0)
      goto LABEL_3;
  }
  v468 = v8;
  v21 = (_BYTE **)a2[2];
  v22 = *(unsigned int *)(a2[1] + 16);
  v472 = v7;
  if ((v22 & 0x80000000) != 0)
  {
    v24 = v475 + 280;
  }
  else
  {
    v23 = *(_QWORD *)(v475 + 2328);
    if (v22 >= (*(_QWORD *)(v475 + 2336) - v23) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v23 = *(_QWORD *)(v475 + 2328);
      v9 = v456;
      v7 = v472;
    }
    v24 = v23 + (v22 << 11);
  }
  v25 = *(_DWORD *)(v24 + 380);
  v26 = v25 & 0xCFFFFFFF;
  if ((v25 & 0x10000000) != 0)
    v27 = 0x40000000;
  else
    v27 = 0x80000000;
  if ((v25 & 0x20000000) != 0)
    v26 = v27;
  if (**v21)
    v28 = v25;
  else
    v28 = v26;
  v29 = *v466;
  v30 = (_BYTE **)v466[2];
  v31 = *(unsigned int *)(v466[1] + 16);
  if ((v31 & 0x80000000) != 0)
  {
    v33 = v29 + 280;
  }
  else
  {
    v32 = *(_QWORD *)(v29 + 2328);
    if (v31 >= (*(_QWORD *)(v29 + 2336) - v32) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v32 = *(_QWORD *)(v29 + 2328);
      v9 = v456;
      v7 = v472;
    }
    v33 = v32 + (v31 << 11);
  }
  v34 = *(_DWORD *)(v33 + 636);
  v35 = v34 & 0xCFFFFFFF;
  if ((v34 & 0x10000000) != 0)
    v36 = 0x40000000;
  else
    v36 = 0x80000000;
  if ((v34 & 0x20000000) != 0)
    v35 = v36;
  if (**v30)
    v37 = v34;
  else
    v37 = v35;
  v38 = *v466;
  v39 = (_BYTE **)v466[2];
  v40 = *(unsigned int *)(v466[1] + 16);
  if ((v40 & 0x80000000) != 0)
  {
    v42 = v38 + 280;
  }
  else
  {
    v41 = *(_QWORD *)(v38 + 2328);
    if (v40 >= (*(_QWORD *)(v38 + 2336) - v41) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v41 = *(_QWORD *)(v38 + 2328);
      v9 = v456;
      v7 = v472;
    }
    v42 = v41 + (v40 << 11);
  }
  v43 = *(_DWORD *)(v42 + 412);
  v44 = v43 & 0xCFFFFFFF;
  if ((v43 & 0x10000000) != 0)
    v45 = 0x40000000;
  else
    v45 = 0x80000000;
  if ((v43 & 0x20000000) != 0)
    v44 = v45;
  if (**v39)
    v46 = v43;
  else
    v46 = v44;
  v47 = *v466;
  v48 = (_BYTE **)v466[2];
  v49 = *(unsigned int *)(v466[1] + 16);
  if ((v49 & 0x80000000) != 0)
  {
    v51 = v10;
    v52 = v28;
    v53 = *(_DWORD *)(v47 + 948);
    if (**v48)
      goto LABEL_69;
  }
  else
  {
    v50 = *(_QWORD *)(v47 + 2328);
    if (v49 >= (*(_QWORD *)(v47 + 2336) - v50) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v50 = *(_QWORD *)(v47 + 2328);
      v9 = v456;
      v7 = v472;
    }
    v51 = v10;
    v52 = v28;
    v53 = *(_DWORD *)(v50 + (v49 << 11) + 668);
    if (**v48)
    {
LABEL_69:
      v54 = *v466;
      v55 = (_BYTE **)v466[2];
      v56 = *(unsigned int *)(v466[1] + 16);
      if ((v56 & 0x80000000) == 0)
        goto LABEL_70;
LABEL_82:
      v58 = v54 + 280;
      goto LABEL_83;
    }
  }
  if ((v53 & 0x10000000) != 0)
    v59 = 0x40000000;
  else
    v59 = 0x80000000;
  if ((v53 & 0x20000000) != 0)
    v53 = v59;
  else
    v53 &= 0xCFFFFFFF;
  v54 = *v466;
  v55 = (_BYTE **)v466[2];
  v56 = *(unsigned int *)(v466[1] + 16);
  if ((v56 & 0x80000000) != 0)
    goto LABEL_82;
LABEL_70:
  v57 = *(_QWORD *)(v54 + 2328);
  if (v56 >= (*(_QWORD *)(v54 + 2336) - v57) >> 11)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      v57 = *(_QWORD *)(v54 + 2328);
      v9 = v456;
      v7 = v472;
      goto LABEL_73;
    }
LABEL_1175:
    abort();
  }
LABEL_73:
  v58 = v57 + (v56 << 11);
LABEL_83:
  v15 = (v52 >> 30) & 1;
  v14 = (v37 >> 30) & 1;
  v13 = (v46 >> 30) & 1;
  v12 = (v53 >> 30) & 1;
  v60 = *(_DWORD *)(v58 + 444);
  v8 = v468;
  if (!**v55)
  {
    if ((v60 & 0x10000000) != 0)
      v61 = 0x40000000;
    else
      v61 = 0x80000000;
    if ((v60 & 0x20000000) != 0)
      v60 = v61;
    else
      v60 &= 0xCFFFFFFF;
  }
  v11 = (v60 >> 30) & 1;
  v4 = a1[2];
  a2 = v466;
  v471 = *a1;
  v475 = *v466;
  v6 = ***a1;
  v10 = v51;
LABEL_91:
  v427 = v5 >> 30;
  v469 = a2[1];
  v462 = (unsigned __int8 **)a2[2];
  v484 = a3[2];
  v485 = a3[3];
  v486 = a3[4];
  v482 = *a3;
  v483 = a3[1];
  v62 = *((_DWORD *)v4 + 89);
  if (v6)
  {
    v63 = *((_DWORD *)v4 + 153);
    v64 = *((_DWORD *)v4 + 97);
    v451 = *((_DWORD *)v4 + 161);
    v65 = *((_DWORD *)v4 + 105);
  }
  else
  {
    if ((v62 & 0x10000000) != 0)
      v66 = 0x40000000;
    else
      v66 = 0x80000000;
    if ((v62 & 0x20000000) != 0)
      v62 = v66;
    else
      v62 &= 0xCFFFFFFF;
    v67 = *((_DWORD *)v4 + 153);
    if ((v67 & 0x10000000) != 0)
      v68 = 0x40000000;
    else
      v68 = 0x80000000;
    if ((v67 & 0x20000000) != 0)
      v63 = v68;
    else
      v63 = v67 & 0xCFFFFFFF;
    v69 = *((_DWORD *)v4 + 97);
    if ((v69 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v69 & 0x20000000) != 0)
      v64 = v70;
    else
      v64 = v69 & 0xCFFFFFFF;
    v71 = *((_DWORD *)v4 + 161);
    if ((v71 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v71 & 0x20000000) != 0)
      v73 = v72;
    else
      v73 = v71 & 0xCFFFFFFF;
    v451 = v73;
    v74 = *((_DWORD *)v4 + 105);
    if ((v74 & 0x10000000) != 0)
      v65 = 0x40000000;
    else
      v65 = 0x80000000;
    if ((v74 & 0x20000000) == 0)
      v65 = v74 & 0xCFFFFFFF;
  }
  v75 = v8 >> 30;
  v76 = v7 >> 30;
  v77 = v10 >> 30;
  v424 = v62 >> 30;
  v443 = v64 >> 30;
  v447 = v63 >> 30;
  v432 = v65 >> 30;
  v494 = a3[2];
  v495 = a3[3];
  v496 = a3[4];
  v492 = *a3;
  v493 = a3[1];
  if ((v9 & 0x40000000) != 0)
  {
    v78 = a3[3];
    v509 = a3[2];
    v510 = v78;
    v511 = a3[4];
    v79 = *a3;
    v508 = a3[1];
    v507 = v79;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_224679C40;
    v503 = (__int128)xmmword_224679C50;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 0, 4, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xE0000000A0), xmmword_224679C50);
    if (!v12)
    {
      v504 = v494;
      v505 = v495;
      v506 = v496;
      v503 = v493;
      v502 = v492;
      *(_QWORD *)&v557 = 0x4040D0D04040D0DLL;
      v562 = xmmword_224679C60;
      v563 = (__int128)xmmword_224679C70;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 0, 4, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xE0000000A0), xmmword_224679C70);
      v80 = (v13 | v75 & 1) == 0;
      if (!(v14 | v76 & 1))
      {
        v564 = v494;
        v565 = v495;
        v566 = v496;
        v562 = v492;
        v563 = v493;
        *(_QWORD *)&v552 = 0x40404040D0D0D0DLL;
        v557 = xmmword_224679C80;
        v558 = (__int128)xmmword_224679C90;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 0, 4, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xE0000000A0), xmmword_224679C90);
        v81 = (v427 & 1) == 0 && v80;
        if (!v15 && v81)
        {
          v559 = v494;
          v560 = v495;
          v561 = v496;
          v558 = v493;
          v557 = v492;
          *(_QWORD *)&v547 = 0x4040D0D04040D0DLL;
          v552 = xmmword_224679CA0;
          v553 = (__int128)xmmword_224679CB0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 0, 4, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x60000000A0), xmmword_224679CB0);
        }
      }
      if (v11)
        v82 = 0;
      else
        v82 = v80;
      if (v82 && (v77 & 1) == 0)
      {
        v554 = v494;
        v555 = v495;
        v556 = v496;
        *(_QWORD *)&v542 = 0x40404040D0D0D0DLL;
        v553 = v493;
        v552 = v492;
        v547 = xmmword_224679CC0;
        v548 = (__int128)xmmword_224679CD0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 0, 4, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x60000000A0), xmmword_224679CD0);
      }
    }
    if (((v76 | v447) & 1) == 0)
    {
      v549 = v494;
      v550 = v495;
      v551 = v496;
      v548 = v493;
      v547 = v492;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_224679CE0;
      v543 = (__int128)xmmword_224679CF0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 0, 4, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xE0000000A0), xmmword_224679CF0);
      v83 = (v424 & 1) == 0 && ((v75 | v443) & 1) == 0;
      if ((v427 & 1) == 0 && v83)
      {
        v544 = v494;
        v545 = v495;
        v546 = v496;
        v543 = v493;
        v542 = v492;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_224679D00;
        v538 = (__int128)xmmword_224679D10;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 0, 4, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x60000000A0), xmmword_224679D10);
      }
    }
    v84 = (v77 & 1) == 0 && ((v75 | v443) & 1) == 0;
    v9 = v456;
    if (v84 && (v432 & 1) == 0)
    {
      v539 = v494;
      v540 = v495;
      v541 = v496;
      v538 = v493;
      v537 = v492;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_224679D20;
      v533 = xmmword_224679D30;
      *(_QWORD *)&v522 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 0, 4, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v522, COERCE_DOUBLE(0x60000000A0), xmmword_224679D30);
      v9 = v456;
    }
  }
  v85 = *((_DWORD *)v4 + 90);
  if (**v471)
  {
    v86 = *((_DWORD *)v4 + 154);
    v87 = *((_DWORD *)v4 + 98);
    v88 = *((_DWORD *)v4 + 162);
    v89 = *((_DWORD *)v4 + 106);
  }
  else
  {
    if ((v85 & 0x10000000) != 0)
      v90 = 0x40000000;
    else
      v90 = 0x80000000;
    if ((v85 & 0x20000000) != 0)
      v85 = v90;
    else
      v85 &= 0xCFFFFFFF;
    v91 = *((_DWORD *)v4 + 154);
    if ((v91 & 0x10000000) != 0)
      v92 = 0x40000000;
    else
      v92 = 0x80000000;
    if ((v91 & 0x20000000) != 0)
      v86 = v92;
    else
      v86 = v91 & 0xCFFFFFFF;
    v93 = *((_DWORD *)v4 + 98);
    if ((v93 & 0x10000000) != 0)
      v94 = 0x40000000;
    else
      v94 = 0x80000000;
    if ((v93 & 0x20000000) != 0)
      v87 = v94;
    else
      v87 = v93 & 0xCFFFFFFF;
    v95 = *((_DWORD *)v4 + 162);
    if ((v95 & 0x10000000) != 0)
      v96 = 0x40000000;
    else
      v96 = 0x80000000;
    if ((v95 & 0x20000000) != 0)
      v88 = v96;
    else
      v88 = v95 & 0xCFFFFFFF;
    v97 = *((_DWORD *)v4 + 106);
    if ((v97 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v97 & 0x20000000) == 0)
      v89 = v97 & 0xCFFFFFFF;
  }
  v438 = v87 >> 30;
  v422 = v85 >> 30;
  v457 = v86 >> 30;
  v98 = v89 >> 30;
  if ((v451 & 0x40000000) != 0)
  {
    v99 = (v9 & 0x40000000) == 0;
    v509 = v484;
    v510 = v485;
    v511 = v486;
    v508 = v483;
    v507 = v482;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_224679D40;
    v503 = (__int128)xmmword_224679D50;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 1, 4, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xE1000000A1), xmmword_224679D50);
    if (v99)
    {
      v504 = v484;
      v505 = v485;
      v506 = v486;
      v503 = v483;
      v502 = v482;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_224679D60;
      v563 = (__int128)xmmword_224679D70;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 1, 4, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xE1000000A1), xmmword_224679D70);
      if (((v76 | v447) & 1) == 0)
      {
        v564 = v484;
        v565 = v485;
        v566 = v486;
        v562 = v482;
        v563 = v483;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_224679D80;
        v558 = (__int128)xmmword_224679D90;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 1, 4, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xE1000000A1), xmmword_224679D90);
        v100 = (v424 & 1) == 0 && ((v75 | v443) & 1) == 0;
        if ((v427 & 1) == 0 && v100)
        {
          v559 = v484;
          v560 = v485;
          v561 = v486;
          v558 = v483;
          v557 = v482;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_224679DA0;
          v553 = (__int128)xmmword_224679DB0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 1, 4, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x61000000A1), xmmword_224679DB0);
        }
      }
      v101 = (v77 & 1) == 0 && ((v75 | v443) & 1) == 0;
      if (v101 && (v432 & 1) == 0)
      {
        v554 = v484;
        v555 = v485;
        v556 = v486;
        v553 = v483;
        v552 = v482;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_224679DC0;
        v548 = (__int128)xmmword_224679DD0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 1, 4, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x61000000A1), xmmword_224679DD0);
      }
    }
    if (((v447 | v457) & 1) == 0)
    {
      v549 = v484;
      v550 = v485;
      v551 = v486;
      v548 = v483;
      v547 = v482;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_224679DE0;
      v543 = (__int128)xmmword_224679DF0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 1, 4, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xE1000000A1), xmmword_224679DF0);
      v102 = (v422 & 1) == 0 && ((v443 | v438) & 1) == 0;
      if ((v424 & 1) == 0 && v102)
      {
        v544 = v484;
        v545 = v485;
        v546 = v486;
        v543 = v483;
        v542 = v482;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_224679E00;
        v538 = (__int128)xmmword_224679E10;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 1, 4, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x61000000A1), xmmword_224679E10);
      }
    }
    v103 = (v432 & 1) == 0 && ((v443 | v438) & 1) == 0;
    if (v103 && (v98 & 1) == 0)
    {
      v539 = v484;
      v540 = v485;
      v541 = v486;
      v538 = v483;
      v537 = v482;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_224679E20;
      v533 = xmmword_224679E30;
      *(_QWORD *)&v522 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 1, 4, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v522, COERCE_DOUBLE(0x61000000A1), xmmword_224679E30);
    }
  }
  v104 = *((_DWORD *)v4 + 91);
  if (**v471)
  {
    v105 = *((_DWORD *)v4 + 155);
    v106 = *((_DWORD *)v4 + 99);
    v107 = *((_DWORD *)v4 + 163);
    v108 = *((_DWORD *)v4 + 107);
  }
  else
  {
    if ((v104 & 0x10000000) != 0)
      v109 = 0x40000000;
    else
      v109 = 0x80000000;
    if ((v104 & 0x20000000) != 0)
      v104 = v109;
    else
      v104 &= 0xCFFFFFFF;
    v110 = *((_DWORD *)v4 + 155);
    if ((v110 & 0x10000000) != 0)
      v111 = 0x40000000;
    else
      v111 = 0x80000000;
    if ((v110 & 0x20000000) != 0)
      v105 = v111;
    else
      v105 = v110 & 0xCFFFFFFF;
    v112 = *((_DWORD *)v4 + 99);
    if ((v112 & 0x10000000) != 0)
      v113 = 0x40000000;
    else
      v113 = 0x80000000;
    if ((v112 & 0x20000000) != 0)
      v106 = v113;
    else
      v106 = v112 & 0xCFFFFFFF;
    v114 = *((_DWORD *)v4 + 163);
    if ((v114 & 0x10000000) != 0)
      v115 = 0x40000000;
    else
      v115 = 0x80000000;
    if ((v114 & 0x20000000) != 0)
      v107 = v115;
    else
      v107 = v114 & 0xCFFFFFFF;
    v116 = *((_DWORD *)v4 + 107);
    if ((v116 & 0x10000000) != 0)
      v108 = 0x40000000;
    else
      v108 = 0x80000000;
    if ((v116 & 0x20000000) == 0)
      v108 = v116 & 0xCFFFFFFF;
  }
  v117 = v106 >> 30;
  v420 = v104 >> 30;
  v118 = v105 >> 30;
  v428 = v108 >> 30;
  if ((v88 & 0x40000000) != 0)
  {
    v509 = v484;
    v510 = v485;
    v511 = v486;
    v508 = v483;
    v507 = v482;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_224679E40;
    v503 = (__int128)xmmword_224679E50;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 2, 4, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xE2000000A2), xmmword_224679E50);
    if ((v451 & 0x40000000) == 0)
    {
      v504 = v484;
      v505 = v485;
      v506 = v486;
      v503 = v483;
      v502 = v482;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_224679E60;
      v563 = (__int128)xmmword_224679E70;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 2, 4, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xE2000000A2), xmmword_224679E70);
      if (((v447 | v457) & 1) == 0)
      {
        v564 = v484;
        v565 = v485;
        v566 = v486;
        v562 = v482;
        v563 = v483;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_224679E80;
        v558 = (__int128)xmmword_224679E90;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 2, 4, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xE2000000A2), xmmword_224679E90);
        v119 = (v422 & 1) == 0 && ((v443 | v438) & 1) == 0;
        if ((v424 & 1) == 0 && v119)
        {
          v559 = v484;
          v560 = v485;
          v561 = v486;
          v558 = v483;
          v557 = v482;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_224679EA0;
          v553 = (__int128)xmmword_224679EB0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 2, 4, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x62000000A2), xmmword_224679EB0);
        }
      }
      v120 = (v432 & 1) == 0 && ((v443 | v438) & 1) == 0;
      if (v120 && (v98 & 1) == 0)
      {
        v554 = v484;
        v555 = v485;
        v556 = v486;
        v553 = v483;
        v552 = v482;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_224679EC0;
        v548 = (__int128)xmmword_224679ED0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 2, 4, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x62000000A2), xmmword_224679ED0);
      }
    }
    if (((v457 | v118) & 1) == 0)
    {
      v549 = v484;
      v550 = v485;
      v551 = v486;
      v548 = v483;
      v547 = v482;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_224679EE0;
      v543 = (__int128)xmmword_224679EF0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 2, 4, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xE2000000A2), xmmword_224679EF0);
      v121 = (v420 & 1) == 0 && ((v438 | v117) & 1) == 0;
      if ((v422 & 1) == 0 && v121)
      {
        v544 = v484;
        v545 = v485;
        v546 = v486;
        v543 = v483;
        v542 = v482;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_224679F00;
        v538 = (__int128)xmmword_224679F10;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 2, 4, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x62000000A2), xmmword_224679F10);
      }
    }
    v122 = (v98 & 1) == 0 && ((v438 | v117) & 1) == 0;
    if (v122 && (v428 & 1) == 0)
    {
      v539 = v484;
      v540 = v485;
      v541 = v486;
      v538 = v483;
      v537 = v482;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_224679F20;
      v533 = xmmword_224679F30;
      *(_QWORD *)&v522 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 2, 4, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v522, COERCE_DOUBLE(0x62000000A2), xmmword_224679F30);
    }
  }
  v123 = *((_DWORD *)v4 + 92);
  if (**v471)
  {
    v124 = *((_DWORD *)v4 + 156);
    v125 = *((_DWORD *)v4 + 100);
    v126 = *((_DWORD *)v4 + 164);
    v127 = *((_DWORD *)v4 + 108);
  }
  else
  {
    if ((v123 & 0x10000000) != 0)
      v128 = 0x40000000;
    else
      v128 = 0x80000000;
    if ((v123 & 0x20000000) != 0)
      v123 = v128;
    else
      v123 &= 0xCFFFFFFF;
    v129 = *((_DWORD *)v4 + 156);
    if ((v129 & 0x10000000) != 0)
      v130 = 0x40000000;
    else
      v130 = 0x80000000;
    if ((v129 & 0x20000000) != 0)
      v124 = v130;
    else
      v124 = v129 & 0xCFFFFFFF;
    v131 = *((_DWORD *)v4 + 100);
    if ((v131 & 0x10000000) != 0)
      v132 = 0x40000000;
    else
      v132 = 0x80000000;
    if ((v131 & 0x20000000) != 0)
      v125 = v132;
    else
      v125 = v131 & 0xCFFFFFFF;
    v133 = *((_DWORD *)v4 + 164);
    if ((v133 & 0x10000000) != 0)
      v134 = 0x40000000;
    else
      v134 = 0x80000000;
    if ((v133 & 0x20000000) != 0)
      v126 = v134;
    else
      v126 = v133 & 0xCFFFFFFF;
    v135 = *((_DWORD *)v4 + 108);
    if ((v135 & 0x10000000) != 0)
      v127 = 0x40000000;
    else
      v127 = 0x80000000;
    if ((v135 & 0x20000000) == 0)
      v127 = v135 & 0xCFFFFFFF;
  }
  v419 = v123 >> 30;
  v448 = v125 >> 30;
  v452 = v124 >> 30;
  v425 = v127 >> 30;
  if ((v107 & 0x40000000) != 0)
  {
    v509 = v484;
    v510 = v485;
    v511 = v486;
    v508 = v483;
    v507 = v482;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_224679F40;
    v503 = (__int128)xmmword_224679F50;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 3, 4, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xE3000000A3), xmmword_224679F50);
    if ((v88 & 0x40000000) == 0)
    {
      v504 = v484;
      v505 = v485;
      v506 = v486;
      v503 = v483;
      v502 = v482;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_224679F60;
      v563 = (__int128)xmmword_224679F70;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 3, 4, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xE3000000A3), xmmword_224679F70);
      if (((v457 | v118) & 1) == 0)
      {
        v564 = v484;
        v565 = v485;
        v566 = v486;
        v562 = v482;
        v563 = v483;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_224679F80;
        v558 = (__int128)xmmword_224679F90;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 3, 4, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xE3000000A3), xmmword_224679F90);
        v136 = (v420 & 1) == 0 && ((v438 | v117) & 1) == 0;
        if ((v422 & 1) == 0 && v136)
        {
          v559 = v484;
          v560 = v485;
          v561 = v486;
          v558 = v483;
          v557 = v482;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_224679FA0;
          v553 = (__int128)xmmword_224679FB0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 3, 4, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x63000000A3), xmmword_224679FB0);
        }
      }
      v137 = (v98 & 1) == 0 && ((v438 | v117) & 1) == 0;
      if (v137 && (v428 & 1) == 0)
      {
        v554 = v484;
        v555 = v485;
        v556 = v486;
        v553 = v483;
        v552 = v482;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_224679FC0;
        v548 = (__int128)xmmword_224679FD0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 3, 4, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x63000000A3), xmmword_224679FD0);
      }
    }
    if (((v118 | v452) & 1) == 0)
    {
      v549 = v484;
      v550 = v485;
      v551 = v486;
      v548 = v483;
      v547 = v482;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_224679FE0;
      v543 = (__int128)xmmword_224679FF0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 3, 4, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xE3000000A3), xmmword_224679FF0);
      v138 = (v419 & 1) == 0 && ((v117 | v448) & 1) == 0;
      if ((v420 & 1) == 0 && v138)
      {
        v544 = v484;
        v545 = v485;
        v546 = v486;
        v543 = v483;
        v542 = v482;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_22467A000;
        v538 = (__int128)xmmword_22467A010;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 3, 4, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x63000000A3), xmmword_22467A010);
      }
    }
    v139 = (v428 & 1) == 0 && ((v117 | v448) & 1) == 0;
    if (v139 && (v425 & 1) == 0)
    {
      v539 = v484;
      v540 = v485;
      v541 = v486;
      v538 = v483;
      v537 = v482;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_22467A020;
      v533 = xmmword_22467A030;
      *(_QWORD *)&v522 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 3, 4, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v522, COERCE_DOUBLE(0x63000000A3), xmmword_22467A030);
    }
  }
  v140 = *((_DWORD *)v4 + 93);
  if (**v471)
  {
    v141 = *((_DWORD *)v4 + 157);
    v142 = *((_DWORD *)v4 + 101);
    v143 = *((_DWORD *)v4 + 165);
    v144 = *((_DWORD *)v4 + 109);
  }
  else
  {
    if ((v140 & 0x10000000) != 0)
      v145 = 0x40000000;
    else
      v145 = 0x80000000;
    if ((v140 & 0x20000000) != 0)
      v140 = v145;
    else
      v140 &= 0xCFFFFFFF;
    v146 = *((_DWORD *)v4 + 157);
    if ((v146 & 0x10000000) != 0)
      v147 = 0x40000000;
    else
      v147 = 0x80000000;
    if ((v146 & 0x20000000) != 0)
      v141 = v147;
    else
      v141 = v146 & 0xCFFFFFFF;
    v148 = *((_DWORD *)v4 + 101);
    if ((v148 & 0x10000000) != 0)
      v149 = 0x40000000;
    else
      v149 = 0x80000000;
    if ((v148 & 0x20000000) != 0)
      v142 = v149;
    else
      v142 = v148 & 0xCFFFFFFF;
    v150 = *((_DWORD *)v4 + 165);
    if ((v150 & 0x10000000) != 0)
      v151 = 0x40000000;
    else
      v151 = 0x80000000;
    if ((v150 & 0x20000000) != 0)
      v143 = v151;
    else
      v143 = v150 & 0xCFFFFFFF;
    v152 = *((_DWORD *)v4 + 109);
    if ((v152 & 0x10000000) != 0)
      v144 = 0x40000000;
    else
      v144 = 0x80000000;
    if ((v152 & 0x20000000) == 0)
      v144 = v152 & 0xCFFFFFFF;
  }
  v444 = v142 >> 30;
  v423 = v140 >> 30;
  v458 = v141 >> 30;
  v153 = v144 >> 30;
  if ((v126 & 0x40000000) != 0)
  {
    v509 = v484;
    v510 = v485;
    v511 = v486;
    v508 = v483;
    v507 = v482;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_22467A040;
    v503 = (__int128)xmmword_22467A050;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 4, 4, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xE4000000A4), xmmword_22467A050);
    if ((v107 & 0x40000000) == 0)
    {
      v504 = v484;
      v505 = v485;
      v506 = v486;
      v503 = v483;
      v502 = v482;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_22467A060;
      v563 = (__int128)xmmword_22467A070;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 4, 4, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xE4000000A4), xmmword_22467A070);
      if (((v118 | v452) & 1) == 0)
      {
        v564 = v484;
        v565 = v485;
        v566 = v486;
        v562 = v482;
        v563 = v483;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_22467A080;
        v558 = (__int128)xmmword_22467A090;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 4, 4, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xE4000000A4), xmmword_22467A090);
        v154 = (v419 & 1) == 0 && ((v117 | v448) & 1) == 0;
        if ((v420 & 1) == 0 && v154)
        {
          v559 = v484;
          v560 = v485;
          v561 = v486;
          v558 = v483;
          v557 = v482;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_22467A0A0;
          v553 = (__int128)xmmword_22467A0B0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 4, 4, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x64000000A4), xmmword_22467A0B0);
        }
      }
      v155 = (v428 & 1) == 0 && ((v117 | v448) & 1) == 0;
      if (v155 && (v425 & 1) == 0)
      {
        v554 = v484;
        v555 = v485;
        v556 = v486;
        v553 = v483;
        v552 = v482;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_22467A0C0;
        v548 = (__int128)xmmword_22467A0D0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 4, 4, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x64000000A4), xmmword_22467A0D0);
      }
    }
    if (((v452 | v458) & 1) == 0)
    {
      v549 = v484;
      v550 = v485;
      v551 = v486;
      v548 = v483;
      v547 = v482;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_22467A0E0;
      v543 = (__int128)xmmword_22467A0F0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 4, 4, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xE4000000A4), xmmword_22467A0F0);
      v156 = (v423 & 1) == 0 && ((v448 | v444) & 1) == 0;
      if ((v419 & 1) == 0 && v156)
      {
        v544 = v484;
        v545 = v485;
        v546 = v486;
        v543 = v483;
        v542 = v482;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_22467A100;
        v538 = (__int128)xmmword_22467A110;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 4, 4, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x64000000A4), xmmword_22467A110);
      }
    }
    v157 = (v425 & 1) == 0 && ((v448 | v444) & 1) == 0;
    if (v157 && (v153 & 1) == 0)
    {
      v539 = v484;
      v540 = v485;
      v541 = v486;
      v538 = v483;
      v537 = v482;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_22467A120;
      v533 = xmmword_22467A130;
      *(_QWORD *)&v522 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 4, 4, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v522, COERCE_DOUBLE(0x64000000A4), xmmword_22467A130);
    }
  }
  v158 = *((_DWORD *)v4 + 94);
  if (**v471)
  {
    v159 = *((_DWORD *)v4 + 158);
    v160 = *((_DWORD *)v4 + 102);
    v161 = *((_DWORD *)v4 + 166);
    v162 = *((_DWORD *)v4 + 110);
  }
  else
  {
    if ((v158 & 0x10000000) != 0)
      v163 = 0x40000000;
    else
      v163 = 0x80000000;
    if ((v158 & 0x20000000) != 0)
      v158 = v163;
    else
      v158 &= 0xCFFFFFFF;
    v164 = *((_DWORD *)v4 + 158);
    if ((v164 & 0x10000000) != 0)
      v165 = 0x40000000;
    else
      v165 = 0x80000000;
    if ((v164 & 0x20000000) != 0)
      v159 = v165;
    else
      v159 = v164 & 0xCFFFFFFF;
    v166 = *((_DWORD *)v4 + 102);
    if ((v166 & 0x10000000) != 0)
      v167 = 0x40000000;
    else
      v167 = 0x80000000;
    if ((v166 & 0x20000000) != 0)
      v160 = v167;
    else
      v160 = v166 & 0xCFFFFFFF;
    v168 = *((_DWORD *)v4 + 166);
    if ((v168 & 0x10000000) != 0)
      v169 = 0x40000000;
    else
      v169 = 0x80000000;
    if ((v168 & 0x20000000) != 0)
      v161 = v169;
    else
      v161 = v168 & 0xCFFFFFFF;
    v170 = *((_DWORD *)v4 + 110);
    if ((v170 & 0x10000000) != 0)
      v162 = 0x40000000;
    else
      v162 = 0x80000000;
    if ((v170 & 0x20000000) == 0)
      v162 = v170 & 0xCFFFFFFF;
  }
  v421 = v158 >> 30;
  v439 = v159 >> 30;
  v429 = v162 >> 30;
  v433 = v160 >> 30;
  v524 = v484;
  v525 = v485;
  v526 = v486;
  v523 = v483;
  v522 = v482;
  if ((v143 & 0x40000000) != 0)
  {
    v509 = v484;
    v510 = v485;
    v511 = v486;
    v508 = v483;
    v507 = v482;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_22467A140;
    v503 = (__int128)xmmword_22467A150;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 5, 4, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xE5000000A5), xmmword_22467A150);
    if ((v126 & 0x40000000) == 0)
    {
      v504 = v484;
      v505 = v485;
      v506 = v486;
      v503 = v483;
      v502 = v482;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_22467A160;
      v563 = (__int128)xmmword_22467A170;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 5, 4, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xE5000000A5), xmmword_22467A170);
      if (((v452 | v458) & 1) == 0)
      {
        v564 = v484;
        v565 = v485;
        v566 = v486;
        v562 = v482;
        v563 = v483;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_22467A180;
        v558 = (__int128)xmmword_22467A190;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 5, 4, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xE5000000A5), xmmword_22467A190);
        v171 = (v423 & 1) == 0 && ((v448 | v444) & 1) == 0;
        if ((v419 & 1) == 0 && v171)
        {
          v559 = v484;
          v560 = v485;
          v561 = v486;
          v558 = v483;
          v557 = v482;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_22467A1A0;
          v553 = (__int128)xmmword_22467A1B0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 5, 4, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x65000000A5), xmmword_22467A1B0);
        }
      }
      v172 = (v425 & 1) == 0 && ((v448 | v444) & 1) == 0;
      if (v172 && (v153 & 1) == 0)
      {
        v554 = v524;
        v555 = v525;
        v556 = v526;
        v553 = v523;
        v552 = v522;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_22467A1C0;
        v548 = (__int128)xmmword_22467A1D0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 5, 4, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x65000000A5), xmmword_22467A1D0);
      }
    }
    if (((v458 | v439) & 1) == 0)
    {
      v549 = v524;
      v550 = v525;
      v551 = v526;
      v548 = v523;
      v547 = v522;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_22467A1E0;
      v543 = (__int128)xmmword_22467A1F0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 5, 4, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xE5000000A5), xmmword_22467A1F0);
      v173 = (v421 & 1) == 0 && ((v444 | v433) & 1) == 0;
      if ((v423 & 1) == 0 && v173)
      {
        v544 = v524;
        v545 = v525;
        v546 = v526;
        v543 = v523;
        v542 = v522;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_22467A200;
        v538 = (__int128)xmmword_22467A210;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 5, 4, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x65000000A5), xmmword_22467A210);
      }
    }
    v174 = (v153 & 1) == 0 && ((v444 | v433) & 1) == 0;
    if (v174 && (v429 & 1) == 0)
    {
      v539 = v524;
      v540 = v525;
      v541 = v526;
      v538 = v523;
      v537 = v522;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_22467A220;
      v533 = xmmword_22467A230;
      *(_QWORD *)&v517 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 5, 4, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v517, COERCE_DOUBLE(0x65000000A5), xmmword_22467A230);
    }
  }
  v519 = v484;
  v520 = v485;
  v521 = v486;
  v518 = v483;
  v517 = v482;
  v175 = *((_DWORD *)v4 + 95);
  if (**v471)
  {
    v176 = *((_DWORD *)v4 + 159);
    v177 = *((_DWORD *)v4 + 103);
    v178 = *((_DWORD *)v4 + 167);
    v179 = *((_DWORD *)v4 + 111);
  }
  else
  {
    if ((v175 & 0x10000000) != 0)
      v180 = 0x40000000;
    else
      v180 = 0x80000000;
    if ((v175 & 0x20000000) != 0)
      v175 = v180;
    else
      v175 &= 0xCFFFFFFF;
    v181 = *((_DWORD *)v4 + 159);
    if ((v181 & 0x10000000) != 0)
      v182 = 0x40000000;
    else
      v182 = 0x80000000;
    if ((v181 & 0x20000000) != 0)
      v176 = v182;
    else
      v176 = v181 & 0xCFFFFFFF;
    v183 = *((_DWORD *)v4 + 103);
    if ((v183 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v183 & 0x20000000) != 0)
      v177 = v184;
    else
      v177 = v183 & 0xCFFFFFFF;
    v185 = *((_DWORD *)v4 + 167);
    if ((v185 & 0x10000000) != 0)
      v186 = 0x40000000;
    else
      v186 = 0x80000000;
    if ((v185 & 0x20000000) != 0)
      v178 = v186;
    else
      v178 = v185 & 0xCFFFFFFF;
    v187 = *((_DWORD *)v4 + 111);
    if ((v187 & 0x10000000) != 0)
      v179 = 0x40000000;
    else
      v179 = 0x80000000;
    if ((v187 & 0x20000000) == 0)
      v179 = v187 & 0xCFFFFFFF;
  }
  v188 = v177 >> 30;
  v453 = v175 >> 30;
  v189 = v176 >> 30;
  v473 = v179 >> 30;
  v529 = v484;
  v530 = v485;
  v531 = v486;
  v528 = v483;
  v527 = v482;
  if ((v161 & 0x40000000) != 0)
  {
    v509 = v484;
    v510 = v485;
    v511 = v486;
    v508 = v483;
    v507 = v482;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_22467A240;
    v503 = (__int128)xmmword_22467A250;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 6, 4, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xE6000000A6), xmmword_22467A250);
    if ((v143 & 0x40000000) == 0)
    {
      v504 = v484;
      v505 = v485;
      v506 = v486;
      v503 = v483;
      v502 = v482;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_22467A260;
      v563 = (__int128)xmmword_22467A270;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 6, 4, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xE6000000A6), xmmword_22467A270);
      if (((v458 | v439) & 1) == 0)
      {
        v564 = v484;
        v565 = v485;
        v566 = v486;
        v562 = v482;
        v563 = v483;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_22467A280;
        v558 = (__int128)xmmword_22467A290;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 6, 4, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xE6000000A6), xmmword_22467A290);
        v190 = (v421 & 1) == 0 && ((v444 | v433) & 1) == 0;
        if ((v423 & 1) == 0 && v190)
        {
          v559 = v484;
          v560 = v485;
          v561 = v486;
          v558 = v483;
          v557 = v482;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_22467A2A0;
          v553 = (__int128)xmmword_22467A2B0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 6, 4, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x66000000A6), xmmword_22467A2B0);
        }
      }
      v191 = (v153 & 1) == 0 && ((v444 | v433) & 1) == 0;
      if (v191 && (v429 & 1) == 0)
      {
        v554 = v529;
        v555 = v530;
        v556 = v531;
        v553 = v528;
        v552 = v527;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_22467A2C0;
        v548 = (__int128)xmmword_22467A2D0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 6, 4, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x66000000A6), xmmword_22467A2D0);
      }
    }
    if (((v439 | v189) & 1) == 0)
    {
      v549 = v529;
      v550 = v530;
      v551 = v531;
      v548 = v528;
      v547 = v527;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_22467A2E0;
      v543 = (__int128)xmmword_22467A2F0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 6, 4, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xE6000000A6), xmmword_22467A2F0);
      v192 = (v453 & 1) == 0 && ((v433 | v188) & 1) == 0;
      if ((v421 & 1) == 0 && v192)
      {
        v544 = v529;
        v545 = v530;
        v546 = v531;
        v543 = v528;
        v542 = v527;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_22467A300;
        v538 = (__int128)xmmword_22467A310;
        *(_QWORD *)&v512 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 6, 4, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v512, COERCE_DOUBLE(0x66000000A6), xmmword_22467A310);
      }
    }
    v193 = (v429 & 1) == 0 && ((v433 | v188) & 1) == 0;
    if (v193 && (v473 & 1) == 0)
    {
      v539 = v529;
      v540 = v530;
      v541 = v531;
      v538 = v528;
      v537 = v527;
      *(_QWORD *)&v512 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_22467A320;
      v533 = xmmword_22467A330;
      *(_QWORD *)&v568[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 6, 4, 2, (uint64_t)&v512, (uint64_t)&v532, (uint64_t)v568, COERCE_DOUBLE(0x66000000A6), xmmword_22467A330);
    }
  }
  v194 = *(unsigned int *)(v469 + 88);
  if ((v194 & 0x80000000) != 0)
  {
    v197 = *v462;
    v198 = *(_DWORD *)(v475 + 632);
    v199 = **v462;
    if (**v462)
      goto LABEL_509;
  }
  else
  {
    v195 = *(_QWORD *)(v475 + 2328);
    if (v194 >= (*(_QWORD *)(v475 + 2336) - v195) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v195 = *(_QWORD *)(v475 + 2328);
    }
    v196 = v195 + (v194 << 11);
    v197 = *v462;
    v198 = *(_DWORD *)(v196 + 352);
    v199 = **v462;
    if (**v462)
    {
LABEL_509:
      v200 = *(unsigned int *)(v469 + 88);
      if ((v200 & 0x80000000) == 0)
        goto LABEL_510;
LABEL_529:
      v202 = *(_DWORD *)(v475 + 888);
      if (v199)
        goto LABEL_514;
      goto LABEL_530;
    }
  }
  if ((v198 & 0x10000000) != 0)
    v207 = 0x40000000;
  else
    v207 = 0x80000000;
  if ((v198 & 0x20000000) != 0)
    v198 = v207;
  else
    v198 &= 0xCFFFFFFF;
  v200 = *(unsigned int *)(v469 + 88);
  if ((v200 & 0x80000000) != 0)
    goto LABEL_529;
LABEL_510:
  v201 = *(_QWORD *)(v475 + 2328);
  if (v200 >= (*(_QWORD *)(v475 + 2336) - v201) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v201 = *(_QWORD *)(v475 + 2328);
    v197 = *v462;
    v199 = **v462;
  }
  v202 = *(_DWORD *)(v201 + (v200 << 11) + 608);
  if (v199)
  {
LABEL_514:
    v203 = *(unsigned int *)(v469 + 88);
    if ((v203 & 0x80000000) == 0)
      goto LABEL_515;
LABEL_537:
    v205 = *(_DWORD *)(v475 + 664);
    if (v199)
      goto LABEL_519;
    goto LABEL_538;
  }
LABEL_530:
  if ((v202 & 0x10000000) != 0)
    v208 = 0x40000000;
  else
    v208 = 0x80000000;
  if ((v202 & 0x20000000) != 0)
    v202 = v208;
  else
    v202 &= 0xCFFFFFFF;
  v203 = *(unsigned int *)(v469 + 88);
  if ((v203 & 0x80000000) != 0)
    goto LABEL_537;
LABEL_515:
  v204 = *(_QWORD *)(v475 + 2328);
  if (v203 >= (*(_QWORD *)(v475 + 2336) - v204) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v204 = *(_QWORD *)(v475 + 2328);
    v197 = *v462;
    v199 = **v462;
  }
  v205 = *(_DWORD *)(v204 + (v203 << 11) + 384);
  if (v199)
  {
LABEL_519:
    v206 = *(unsigned int *)(v469 + 88);
    if ((v206 & 0x80000000) != 0)
      goto LABEL_590;
    goto LABEL_545;
  }
LABEL_538:
  if ((v205 & 0x10000000) != 0)
    v209 = 0x40000000;
  else
    v209 = 0x80000000;
  if ((v205 & 0x20000000) != 0)
    v205 = v209;
  else
    v205 &= 0xCFFFFFFF;
  v206 = *(unsigned int *)(v469 + 88);
  if ((v206 & 0x80000000) != 0)
    goto LABEL_590;
LABEL_545:
  v210 = *(_QWORD *)(v475 + 2328);
  v211 = (*(_QWORD *)(v475 + 2336) - v210) >> 11;
  if (v211 > v206)
    goto LABEL_549;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v197 = *v462;
  v206 = *(unsigned int *)(v469 + 88);
  if ((v206 & 0x80000000) != 0)
  {
LABEL_590:
    v212 = *(_DWORD *)(v475 + 696);
    if (*v197)
      goto LABEL_559;
    goto LABEL_553;
  }
  v210 = *(_QWORD *)(v475 + 2328);
  v211 = (*(_QWORD *)(v475 + 2336) - v210) >> 11;
LABEL_549:
  if (v211 <= v206)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v210 = *(_QWORD *)(v475 + 2328);
    v197 = *v462;
  }
  v212 = *(_DWORD *)(v210 + (v206 << 11) + 416);
  if (!*v197)
  {
LABEL_553:
    if ((v212 & 0x10000000) != 0)
      v213 = 0x40000000;
    else
      v213 = 0x80000000;
    if ((v212 & 0x20000000) != 0)
      v212 = v213;
    else
      v212 &= 0xCFFFFFFF;
  }
LABEL_559:
  v534 = v519;
  v535 = v520;
  v536 = v521;
  v533 = (float32x4_t)v518;
  v532 = v517;
  if ((v178 & 0x40000000) != 0)
  {
    v509 = v519;
    v510 = v520;
    v511 = v521;
    v508 = v518;
    v507 = v517;
    *(_QWORD *)&v562 = 0x161616160D0D0D0DLL;
    v502 = xmmword_22467A340;
    v503 = (__int128)xmmword_22467A350;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 7, 4, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xE7000000A7), xmmword_22467A350);
    if ((v161 & 0x40000000) == 0)
    {
      v504 = v519;
      v505 = v520;
      v506 = v521;
      v503 = v518;
      v502 = v517;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_22467A360;
      v563 = (__int128)xmmword_22467A370;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 7, 4, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xE7000000A7), xmmword_22467A370);
      if (((v439 | v189) & 1) == 0)
      {
        v564 = v519;
        v565 = v520;
        v566 = v521;
        v562 = v517;
        v563 = v518;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_22467A380;
        v558 = (__int128)xmmword_22467A390;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 7, 4, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xE7000000A7), xmmword_22467A390);
        v214 = (v453 & 1) == 0 && ((v433 | v188) & 1) == 0;
        if ((v421 & 1) == 0 && v214)
        {
          v559 = v519;
          v560 = v520;
          v561 = v521;
          v558 = v518;
          v557 = v517;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_22467A3A0;
          v553 = (__int128)xmmword_22467A3B0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 7, 4, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x67000000A7), xmmword_22467A3B0);
        }
      }
      v215 = (v429 & 1) == 0 && ((v433 | v188) & 1) == 0;
      if (v215 && (v473 & 1) == 0)
      {
        v554 = v534;
        v555 = v535;
        v556 = v536;
        v553 = (__int128)v533;
        v552 = v532;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_22467A3C0;
        v548 = (__int128)xmmword_22467A3D0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 7, 4, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x67000000A7), xmmword_22467A3D0);
      }
    }
    if (!(v202 & 0x40000000 | v189 & 1))
    {
      v549 = v534;
      v550 = v535;
      v551 = v536;
      *(_QWORD *)&v537 = 0x16160D0D16160D0DLL;
      v548 = (__int128)v533;
      v547 = v532;
      v542 = xmmword_22467A3E0;
      v543 = (__int128)xmmword_22467A3F0;
      *(_QWORD *)&v512 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 7, 4, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v512, COERCE_DOUBLE(0xE7000000A7), xmmword_22467A3F0);
      v216 = (v198 & 0x40000000) == 0 && (v205 & 0x40000000 | v188 & 1) == 0;
      if ((v453 & 1) == 0 && v216)
      {
        v544 = v534;
        v545 = v535;
        v546 = v536;
        *(_QWORD *)&v512 = 0x161616160D0D0D0DLL;
        v543 = (__int128)v533;
        v542 = v532;
        v537 = xmmword_22467A400;
        v538 = (__int128)xmmword_22467A410;
        *(_QWORD *)&v568[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 7, 4, 2, (uint64_t)&v512, (uint64_t)&v537, (uint64_t)v568, COERCE_DOUBLE(0x67000000A7), xmmword_22467A410);
      }
    }
    v217 = (v473 & 1) == 0 && (v205 & 0x40000000 | v188 & 1) == 0;
    if (v217 && (v212 & 0x40000000) == 0)
    {
      v539 = v534;
      v540 = v535;
      v541 = v536;
      *(_QWORD *)&v568[0] = 0x16160D0D16160D0DLL;
      v538 = (__int128)v533;
      v537 = v532;
      v512 = xmmword_22467A420;
      v513 = (__int128)xmmword_22467A430;
      v569[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 7, 4, 2, (uint64_t)v568, (uint64_t)&v512, (uint64_t)v569, COERCE_DOUBLE(0x67000000A7), xmmword_22467A430);
    }
  }
  v218 = a1[2];
  v474 = v466[1];
  v476 = *v466;
  v480 = a3[3];
  v481 = a3[4];
  v478 = a3[1];
  v479 = a3[2];
  v477 = *a3;
  v437 = *(_OWORD *)a1;
  v467 = (_BYTE **)v466[2];
  v219 = *((_DWORD *)v218 + 96);
  v220 = **(unsigned __int8 **)v437;
  if (**(_BYTE **)v437)
  {
    v221 = *((_DWORD *)v218 + 160);
    v222 = *((_DWORD *)v218 + 104);
    v223 = *((_DWORD *)v218 + 112);
    v463 = *((_DWORD *)v218 + 168);
    if ((v463 & 0x40000000) == 0)
    {
LABEL_589:
      v224 = v221;
      v225 = 0;
      v226 = 0;
      v227 = 0;
      v228 = 0;
      v229 = 0;
      goto LABEL_642;
    }
  }
  else
  {
    if ((v219 & 0x20000000) != 0)
      v219 *= 4;
    v230 = *((_DWORD *)v218 + 160);
    if ((v230 & 0x20000000) != 0)
      v221 = 4 * v230;
    else
      v221 = *((_DWORD *)v218 + 160);
    v231 = *((_DWORD *)v218 + 104);
    if ((v231 & 0x20000000) != 0)
      v222 = 4 * v231;
    else
      v222 = *((_DWORD *)v218 + 104);
    v232 = *((_DWORD *)v218 + 168);
    if ((v232 & 0x20000000) != 0)
      v233 = 4 * v232;
    else
      v233 = *((_DWORD *)v218 + 168);
    v234 = *((_DWORD *)v218 + 112);
    if ((v234 & 0x10000000) != 0)
      v235 = 0x40000000;
    else
      v235 = 0x80000000;
    if ((v234 & 0x20000000) != 0)
      v223 = v235;
    else
      v223 = v234 & 0xCFFFFFFF;
    v463 = v233;
    if ((v233 & 0x40000000) == 0)
      goto LABEL_589;
  }
  v236 = *(unsigned int *)(v474 + 16);
  if ((v236 & 0x80000000) != 0)
  {
    v238 = *(_DWORD *)(v476 + 692);
    v239 = **v467;
    if (**v467)
      goto LABEL_615;
  }
  else
  {
    v237 = *(_QWORD *)(v476 + 2328);
    if (v236 >= (*(_QWORD *)(v476 + 2336) - v237) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v237 = *(_QWORD *)(v476 + 2328);
    }
    v238 = *(_DWORD *)(v237 + (v236 << 11) + 412);
    v239 = **v467;
    if (**v467)
    {
LABEL_615:
      v240 = *(unsigned int *)(v474 + 16);
      if ((v240 & 0x80000000) == 0)
        goto LABEL_616;
LABEL_1149:
      v242 = *(_DWORD *)(v476 + 948);
      if (v239)
        goto LABEL_620;
      goto LABEL_1150;
    }
  }
  if ((v238 & 0x10000000) != 0)
    v415 = 0x40000000;
  else
    v415 = 0x80000000;
  if ((v238 & 0x20000000) != 0)
    v238 = v415;
  else
    v238 &= 0xCFFFFFFF;
  v240 = *(unsigned int *)(v474 + 16);
  if ((v240 & 0x80000000) != 0)
    goto LABEL_1149;
LABEL_616:
  v241 = *(_QWORD *)(v476 + 2328);
  if (v240 >= (*(_QWORD *)(v476 + 2336) - v241) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v241 = *(_QWORD *)(v476 + 2328);
    v239 = **v467;
  }
  v242 = *(_DWORD *)(v241 + (v240 << 11) + 668);
  if (v239)
  {
LABEL_620:
    v243 = *(unsigned int *)(v474 + 16);
    if ((v243 & 0x80000000) == 0)
      goto LABEL_621;
LABEL_1157:
    v245 = *(_DWORD *)(v476 + 724);
    if (v239)
      goto LABEL_625;
    goto LABEL_1158;
  }
LABEL_1150:
  if ((v242 & 0x10000000) != 0)
    v416 = 0x40000000;
  else
    v416 = 0x80000000;
  if ((v242 & 0x20000000) != 0)
    v242 = v416;
  else
    v242 &= 0xCFFFFFFF;
  v243 = *(unsigned int *)(v474 + 16);
  if ((v243 & 0x80000000) != 0)
    goto LABEL_1157;
LABEL_621:
  v244 = *(_QWORD *)(v476 + 2328);
  if (v243 >= (*(_QWORD *)(v476 + 2336) - v244) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v244 = *(_QWORD *)(v476 + 2328);
    v239 = **v467;
  }
  v245 = *(_DWORD *)(v244 + (v243 << 11) + 444);
  if (v239)
  {
LABEL_625:
    v246 = *(unsigned int *)(v474 + 16);
    if ((v246 & 0x80000000) == 0)
      goto LABEL_626;
LABEL_1165:
    v248 = *(_DWORD *)(v476 + 980);
    if (v239)
      goto LABEL_630;
    goto LABEL_1166;
  }
LABEL_1158:
  if ((v245 & 0x10000000) != 0)
    v417 = 0x40000000;
  else
    v417 = 0x80000000;
  if ((v245 & 0x20000000) != 0)
    v245 = v417;
  else
    v245 &= 0xCFFFFFFF;
  v246 = *(unsigned int *)(v474 + 16);
  if ((v246 & 0x80000000) != 0)
    goto LABEL_1165;
LABEL_626:
  v247 = *(_QWORD *)(v476 + 2328);
  if (v246 >= (*(_QWORD *)(v476 + 2336) - v247) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v247 = *(_QWORD *)(v476 + 2328);
    v239 = **v467;
  }
  v248 = *(_DWORD *)(v247 + (v246 << 11) + 700);
  if (v239)
  {
LABEL_630:
    v249 = *(unsigned int *)(v474 + 16);
    if ((v249 & 0x80000000) == 0)
      goto LABEL_631;
    goto LABEL_1173;
  }
LABEL_1166:
  if ((v248 & 0x10000000) != 0)
    v418 = 0x40000000;
  else
    v418 = 0x80000000;
  if ((v248 & 0x20000000) != 0)
    v248 = v418;
  else
    v248 &= 0xCFFFFFFF;
  v249 = *(unsigned int *)(v474 + 16);
  if ((v249 & 0x80000000) == 0)
  {
LABEL_631:
    v250 = *(_QWORD *)(v476 + 2328);
    if (v249 >= (*(_QWORD *)(v476 + 2336) - v250) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v250 = *(_QWORD *)(v476 + 2328);
      v239 = **v467;
    }
    v224 = v221;
    v251 = v250 + (v249 << 11);
    v229 = (v238 >> 30) & 1;
    v228 = (v242 >> 30) & 1;
    v227 = (v245 >> 30) & 1;
    v252 = *(_DWORD *)(v251 + 476);
    v226 = (v248 >> 30) & 1;
    if (v239)
      goto LABEL_641;
    goto LABEL_635;
  }
LABEL_1173:
  v224 = v221;
  v229 = (v238 >> 30) & 1;
  v228 = (v242 >> 30) & 1;
  v227 = (v245 >> 30) & 1;
  v252 = *(_DWORD *)(v476 + 756);
  v226 = (v248 >> 30) & 1;
  if (!v239)
  {
LABEL_635:
    if ((v252 & 0x10000000) != 0)
      v253 = 0x40000000;
    else
      v253 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v252 = v253;
    else
      v252 &= 0xCFFFFFFF;
  }
LABEL_641:
  v225 = (v252 >> 30) & 1;
  v220 = **(unsigned __int8 **)v437;
LABEL_642:
  v440 = v219 >> 30;
  v514 = v479;
  v515 = v480;
  v516 = v481;
  v513 = v478;
  v512 = v477;
  v254 = *((_DWORD *)v218 + 97);
  if (v220)
  {
    v255 = *((_DWORD *)v218 + 161);
    v256 = *((_DWORD *)v218 + 105);
    v459 = *((_DWORD *)v218 + 169);
    v257 = *((_DWORD *)v218 + 113);
  }
  else
  {
    if ((v254 & 0x10000000) != 0)
      v258 = 0x40000000;
    else
      v258 = 0x80000000;
    if ((v254 & 0x20000000) != 0)
      v254 = v258;
    else
      v254 &= 0xCFFFFFFF;
    v259 = *((_DWORD *)v218 + 161);
    if ((v259 & 0x10000000) != 0)
      v260 = 0x40000000;
    else
      v260 = 0x80000000;
    if ((v259 & 0x20000000) != 0)
      v255 = v260;
    else
      v255 = v259 & 0xCFFFFFFF;
    v261 = *((_DWORD *)v218 + 105);
    if ((v261 & 0x10000000) != 0)
      v262 = 0x40000000;
    else
      v262 = 0x80000000;
    if ((v261 & 0x20000000) != 0)
      v256 = v262;
    else
      v256 = v261 & 0xCFFFFFFF;
    v263 = *((_DWORD *)v218 + 169);
    if ((v263 & 0x10000000) != 0)
      v264 = 0x40000000;
    else
      v264 = 0x80000000;
    if ((v263 & 0x20000000) != 0)
      v265 = v264;
    else
      v265 = v263 & 0xCFFFFFFF;
    v459 = v265;
    v266 = *((_DWORD *)v218 + 113);
    if ((v266 & 0x10000000) != 0)
      v257 = 0x40000000;
    else
      v257 = 0x80000000;
    if ((v266 & 0x20000000) == 0)
      v257 = v266 & 0xCFFFFFFF;
  }
  v267 = v222 >> 30;
  v268 = v224 >> 30;
  v269 = v223 >> 30;
  v434 = v254 >> 30;
  v449 = v256 >> 30;
  v454 = v255 >> 30;
  v270 = v257 >> 30;
  if ((v463 & 0x40000000) != 0)
  {
    v509 = v479;
    v510 = v480;
    v511 = v481;
    v508 = v478;
    v507 = v477;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_22467A440;
    v503 = (__int128)xmmword_22467A450;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 0, 5, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xE8000000A8), xmmword_22467A450);
    if (!v226)
    {
      v504 = v479;
      v505 = v480;
      v506 = v481;
      v503 = v478;
      v502 = v477;
      *(_QWORD *)&v557 = 0x4040D0D04040D0DLL;
      v562 = xmmword_22467A460;
      v563 = (__int128)xmmword_22467A470;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 0, 5, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xE8000000A8), xmmword_22467A470);
      v271 = (v227 | v267 & 1) == 0;
      if (!(v228 | v268 & 1))
      {
        v564 = v479;
        v565 = v480;
        v566 = v481;
        v562 = v477;
        v563 = v478;
        *(_QWORD *)&v552 = 0x40404040D0D0D0DLL;
        v557 = xmmword_22467A480;
        v558 = (__int128)xmmword_22467A490;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 0, 5, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xE8000000A8), xmmword_22467A490);
        v272 = (v440 & 1) == 0 && v271;
        if (!v229 && v272)
        {
          v559 = v479;
          v560 = v480;
          v561 = v481;
          v558 = v478;
          v557 = v477;
          *(_QWORD *)&v547 = 0x4040D0D04040D0DLL;
          v552 = xmmword_22467A4A0;
          v553 = (__int128)xmmword_22467A4B0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 0, 5, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x68000000A8), xmmword_22467A4B0);
        }
      }
      if (v225)
        v273 = 0;
      else
        v273 = v271;
      if (v273 && (v269 & 1) == 0)
      {
        v554 = v479;
        v555 = v480;
        v556 = v481;
        *(_QWORD *)&v542 = 0x40404040D0D0D0DLL;
        v553 = v478;
        v552 = v477;
        v547 = xmmword_22467A4C0;
        v548 = (__int128)xmmword_22467A4D0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 0, 5, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x68000000A8), xmmword_22467A4D0);
      }
    }
    if (((v268 | v454) & 1) == 0)
    {
      v549 = v479;
      v550 = v480;
      v551 = v481;
      v548 = v478;
      v547 = v477;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_22467A4E0;
      v543 = (__int128)xmmword_22467A4F0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 0, 5, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xE8000000A8), xmmword_22467A4F0);
      v274 = (v434 & 1) == 0 && ((v267 | v449) & 1) == 0;
      if ((v440 & 1) == 0 && v274)
      {
        v544 = v479;
        v545 = v480;
        v546 = v481;
        v543 = v478;
        v542 = v477;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_22467A500;
        v538 = (__int128)xmmword_22467A510;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 0, 5, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x68000000A8), xmmword_22467A510);
      }
    }
    v275 = (v269 & 1) == 0 && ((v267 | v449) & 1) == 0;
    if (v275 && (v270 & 1) == 0)
    {
      v539 = v479;
      v540 = v480;
      v541 = v481;
      v538 = v478;
      v537 = v477;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_22467A520;
      v533 = xmmword_22467A530;
      *(_QWORD *)&v522 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 0, 5, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v522, COERCE_DOUBLE(0x68000000A8), xmmword_22467A530);
    }
  }
  v489 = v514;
  v490 = v515;
  v491 = v516;
  v487 = v512;
  v488 = v513;
  v276 = *((_DWORD *)v218 + 98);
  if (**(_BYTE **)v437)
  {
    v277 = *((_DWORD *)v218 + 162);
    v278 = *((_DWORD *)v218 + 106);
    v279 = *((_DWORD *)v218 + 170);
    v280 = *((_DWORD *)v218 + 114);
  }
  else
  {
    if ((v276 & 0x10000000) != 0)
      v281 = 0x40000000;
    else
      v281 = 0x80000000;
    if ((v276 & 0x20000000) != 0)
      v276 = v281;
    else
      v276 &= 0xCFFFFFFF;
    v282 = *((_DWORD *)v218 + 162);
    if ((v282 & 0x10000000) != 0)
      v283 = 0x40000000;
    else
      v283 = 0x80000000;
    if ((v282 & 0x20000000) != 0)
      v277 = v283;
    else
      v277 = v282 & 0xCFFFFFFF;
    v284 = *((_DWORD *)v218 + 106);
    if ((v284 & 0x10000000) != 0)
      v285 = 0x40000000;
    else
      v285 = 0x80000000;
    if ((v284 & 0x20000000) != 0)
      v278 = v285;
    else
      v278 = v284 & 0xCFFFFFFF;
    v286 = *((_DWORD *)v218 + 170);
    if ((v286 & 0x10000000) != 0)
      v287 = 0x40000000;
    else
      v287 = 0x80000000;
    if ((v286 & 0x20000000) != 0)
      v279 = v287;
    else
      v279 = v286 & 0xCFFFFFFF;
    v288 = *((_DWORD *)v218 + 114);
    if ((v288 & 0x10000000) != 0)
      v280 = 0x40000000;
    else
      v280 = 0x80000000;
    if ((v288 & 0x20000000) == 0)
      v280 = v288 & 0xCFFFFFFF;
  }
  v289 = v278 >> 30;
  v430 = v276 >> 30;
  v445 = v277 >> 30;
  v290 = v280 >> 30;
  v499 = v514;
  v500 = v515;
  v501 = v516;
  v497 = v512;
  v498 = v513;
  if ((v459 & 0x40000000) != 0)
  {
    v509 = v514;
    v510 = v515;
    v511 = v516;
    v508 = v513;
    v507 = v512;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_22467A540;
    v503 = (__int128)xmmword_22467A550;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 1, 5, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xE9000000A9), xmmword_22467A550);
    if ((v463 & 0x40000000) == 0)
    {
      v504 = v514;
      v505 = v515;
      v506 = v516;
      v503 = v513;
      v502 = v512;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_22467A560;
      v563 = (__int128)xmmword_22467A570;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 1, 5, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xE9000000A9), xmmword_22467A570);
      if (((v268 | v454) & 1) == 0)
      {
        v564 = v514;
        v565 = v515;
        v566 = v516;
        v562 = v512;
        v563 = v513;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_22467A580;
        v558 = (__int128)xmmword_22467A590;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 1, 5, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xE9000000A9), xmmword_22467A590);
        v291 = (v434 & 1) == 0 && ((v267 | v449) & 1) == 0;
        if ((v440 & 1) == 0 && v291)
        {
          v559 = v514;
          v560 = v515;
          v561 = v516;
          v558 = v513;
          v557 = v512;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_22467A5A0;
          v553 = (__int128)xmmword_22467A5B0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 1, 5, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x69000000A9), xmmword_22467A5B0);
        }
      }
      v292 = (v269 & 1) == 0 && ((v267 | v449) & 1) == 0;
      if (v292 && (v270 & 1) == 0)
      {
        v554 = v499;
        v555 = v500;
        v556 = v501;
        v553 = v498;
        v552 = v497;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_22467A5C0;
        v548 = (__int128)xmmword_22467A5D0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 1, 5, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x69000000A9), xmmword_22467A5D0);
      }
    }
    if (((v454 | v445) & 1) == 0)
    {
      v549 = v499;
      v550 = v500;
      v551 = v501;
      v548 = v498;
      v547 = v497;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_22467A5E0;
      v543 = (__int128)xmmword_22467A5F0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 1, 5, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xE9000000A9), xmmword_22467A5F0);
      v293 = (v430 & 1) == 0 && ((v449 | v289) & 1) == 0;
      if ((v434 & 1) == 0 && v293)
      {
        v544 = v499;
        v545 = v500;
        v546 = v501;
        v543 = v498;
        v542 = v497;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_22467A600;
        v538 = (__int128)xmmword_22467A610;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 1, 5, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x69000000A9), xmmword_22467A610);
      }
    }
    v294 = (v270 & 1) == 0 && ((v449 | v289) & 1) == 0;
    if (v294 && (v290 & 1) == 0)
    {
      v539 = v499;
      v540 = v500;
      v541 = v501;
      v538 = v498;
      v537 = v497;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_22467A620;
      v533 = xmmword_22467A630;
      *(_QWORD *)&v522 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 1, 5, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v522, COERCE_DOUBLE(0x69000000A9), xmmword_22467A630);
    }
  }
  v295 = *((_DWORD *)v218 + 99);
  if (**(_BYTE **)v437)
  {
    v296 = *((_DWORD *)v218 + 163);
    v297 = *((_DWORD *)v218 + 107);
    v298 = *((_DWORD *)v218 + 171);
    v299 = *((_DWORD *)v218 + 115);
  }
  else
  {
    if ((v295 & 0x10000000) != 0)
      v300 = 0x40000000;
    else
      v300 = 0x80000000;
    if ((v295 & 0x20000000) != 0)
      v295 = v300;
    else
      v295 &= 0xCFFFFFFF;
    v301 = *((_DWORD *)v218 + 163);
    if ((v301 & 0x10000000) != 0)
      v302 = 0x40000000;
    else
      v302 = 0x80000000;
    if ((v301 & 0x20000000) != 0)
      v296 = v302;
    else
      v296 = v301 & 0xCFFFFFFF;
    v303 = *((_DWORD *)v218 + 107);
    if ((v303 & 0x10000000) != 0)
      v304 = 0x40000000;
    else
      v304 = 0x80000000;
    if ((v303 & 0x20000000) != 0)
      v297 = v304;
    else
      v297 = v303 & 0xCFFFFFFF;
    v305 = *((_DWORD *)v218 + 171);
    if ((v305 & 0x10000000) != 0)
      v306 = 0x40000000;
    else
      v306 = 0x80000000;
    if ((v305 & 0x20000000) != 0)
      v298 = v306;
    else
      v298 = v305 & 0xCFFFFFFF;
    v307 = *((_DWORD *)v218 + 115);
    if ((v307 & 0x10000000) != 0)
      v299 = 0x40000000;
    else
      v299 = 0x80000000;
    if ((v307 & 0x20000000) == 0)
      v299 = v307 & 0xCFFFFFFF;
  }
  v308 = v297 >> 30;
  v426 = v295 >> 30;
  v464 = v296 >> 30;
  v441 = v299 >> 30;
  if ((v279 & 0x40000000) != 0)
  {
    v509 = v489;
    v510 = v490;
    v511 = v491;
    v508 = v488;
    v507 = v487;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_22467A640;
    v503 = (__int128)xmmword_22467A650;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 2, 5, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xEA000000AALL), xmmword_22467A650);
    if ((v459 & 0x40000000) == 0)
    {
      v504 = v489;
      v505 = v490;
      v506 = v491;
      v503 = v488;
      v502 = v487;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_22467A660;
      v563 = (__int128)xmmword_22467A670;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 2, 5, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xEA000000AALL), xmmword_22467A670);
      if (((v454 | v445) & 1) == 0)
      {
        v564 = v489;
        v565 = v490;
        v566 = v491;
        v562 = v487;
        v563 = v488;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_22467A680;
        v558 = (__int128)xmmword_22467A690;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 2, 5, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xEA000000AALL), xmmword_22467A690);
        v309 = (v430 & 1) == 0 && ((v449 | v289) & 1) == 0;
        if ((v434 & 1) == 0 && v309)
        {
          v559 = v489;
          v560 = v490;
          v561 = v491;
          v558 = v488;
          v557 = v487;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_22467A6A0;
          v553 = (__int128)xmmword_22467A6B0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 2, 5, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x6A000000AALL), xmmword_22467A6B0);
        }
      }
      v310 = (v270 & 1) == 0 && ((v449 | v289) & 1) == 0;
      if (v310 && (v290 & 1) == 0)
      {
        v554 = v489;
        v555 = v490;
        v556 = v491;
        v553 = v488;
        v552 = v487;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_22467A6C0;
        v548 = (__int128)xmmword_22467A6D0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 2, 5, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x6A000000AALL), xmmword_22467A6D0);
      }
    }
    if (((v445 | v464) & 1) == 0)
    {
      v549 = v489;
      v550 = v490;
      v551 = v491;
      v548 = v488;
      v547 = v487;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_22467A6E0;
      v543 = (__int128)xmmword_22467A6F0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 2, 5, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xEA000000AALL), xmmword_22467A6F0);
      v311 = (v426 & 1) == 0 && ((v289 | v308) & 1) == 0;
      if ((v430 & 1) == 0 && v311)
      {
        v544 = v489;
        v545 = v490;
        v546 = v491;
        v543 = v488;
        v542 = v487;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_22467A700;
        v538 = (__int128)xmmword_22467A710;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 2, 5, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x6A000000AALL), xmmword_22467A710);
      }
    }
    v312 = (v290 & 1) == 0 && ((v289 | v308) & 1) == 0;
    if (v312 && (v441 & 1) == 0)
    {
      v539 = v489;
      v540 = v490;
      v541 = v491;
      v538 = v488;
      v537 = v487;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_22467A720;
      v533 = xmmword_22467A730;
      *(_QWORD *)&v522 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 2, 5, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v522, COERCE_DOUBLE(0x6A000000AALL), xmmword_22467A730);
    }
  }
  v313 = *((_DWORD *)v218 + 100);
  if (**(_BYTE **)v437)
  {
    v314 = *((_DWORD *)v218 + 164);
    v315 = *((_DWORD *)v218 + 108);
    v316 = *((_DWORD *)v218 + 172);
    v317 = *((_DWORD *)v218 + 116);
  }
  else
  {
    if ((v313 & 0x10000000) != 0)
      v318 = 0x40000000;
    else
      v318 = 0x80000000;
    if ((v313 & 0x20000000) != 0)
      v313 = v318;
    else
      v313 &= 0xCFFFFFFF;
    v319 = *((_DWORD *)v218 + 164);
    if ((v319 & 0x10000000) != 0)
      v320 = 0x40000000;
    else
      v320 = 0x80000000;
    if ((v319 & 0x20000000) != 0)
      v314 = v320;
    else
      v314 = v319 & 0xCFFFFFFF;
    v321 = *((_DWORD *)v218 + 108);
    if ((v321 & 0x10000000) != 0)
      v322 = 0x40000000;
    else
      v322 = 0x80000000;
    if ((v321 & 0x20000000) != 0)
      v315 = v322;
    else
      v315 = v321 & 0xCFFFFFFF;
    v323 = *((_DWORD *)v218 + 172);
    if ((v323 & 0x10000000) != 0)
      v324 = 0x40000000;
    else
      v324 = 0x80000000;
    if ((v323 & 0x20000000) != 0)
      v316 = v324;
    else
      v316 = v323 & 0xCFFFFFFF;
    v325 = *((_DWORD *)v218 + 116);
    if ((v325 & 0x10000000) != 0)
      v317 = 0x40000000;
    else
      v317 = 0x80000000;
    if ((v325 & 0x20000000) == 0)
      v317 = v325 & 0xCFFFFFFF;
  }
  v326 = v315 >> 30;
  v435 = v313 >> 30;
  v460 = v314 >> 30;
  v450 = v317 >> 30;
  if ((v298 & 0x40000000) != 0)
  {
    v509 = v489;
    v510 = v490;
    v511 = v491;
    v508 = v488;
    v507 = v487;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_22467A740;
    v503 = (__int128)xmmword_22467A750;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 3, 5, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xEB000000ABLL), xmmword_22467A750);
    if ((v279 & 0x40000000) == 0)
    {
      v504 = v489;
      v505 = v490;
      v506 = v491;
      v503 = v488;
      v502 = v487;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_22467A760;
      v563 = (__int128)xmmword_22467A770;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 3, 5, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xEB000000ABLL), xmmword_22467A770);
      v327 = ((v289 | v308) & 1) == 0;
      if (((v445 | v464) & 1) == 0)
      {
        v564 = v489;
        v565 = v490;
        v566 = v491;
        v562 = v487;
        v563 = v488;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_22467A780;
        v558 = (__int128)xmmword_22467A790;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 3, 5, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xEB000000ABLL), xmmword_22467A790);
        v328 = (v426 & 1) == 0 && v327;
        if ((v430 & 1) == 0 && v328)
        {
          v559 = v489;
          v560 = v490;
          v561 = v491;
          v558 = v488;
          v557 = v487;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_22467A7A0;
          v553 = (__int128)xmmword_22467A7B0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 3, 5, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x6B000000ABLL), xmmword_22467A7B0);
        }
      }
      v329 = (v290 & 1) == 0 && v327;
      if (v329 && (v441 & 1) == 0)
      {
        v554 = v489;
        v555 = v490;
        v556 = v491;
        v553 = v488;
        v552 = v487;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_22467A7C0;
        v548 = (__int128)xmmword_22467A7D0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 3, 5, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x6B000000ABLL), xmmword_22467A7D0);
      }
    }
    if (((v464 | v460) & 1) == 0)
    {
      v549 = v489;
      v550 = v490;
      v551 = v491;
      v548 = v488;
      v547 = v487;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_22467A7E0;
      v543 = (__int128)xmmword_22467A7F0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 3, 5, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xEB000000ABLL), xmmword_22467A7F0);
      v330 = (v435 & 1) == 0 && ((v308 | v326) & 1) == 0;
      if ((v426 & 1) == 0 && v330)
      {
        v544 = v489;
        v545 = v490;
        v546 = v491;
        v543 = v488;
        v542 = v487;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_22467A800;
        v538 = (__int128)xmmword_22467A810;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 3, 5, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x6B000000ABLL), xmmword_22467A810);
      }
    }
    v331 = (v441 & 1) == 0 && ((v308 | v326) & 1) == 0;
    if (v331 && (v450 & 1) == 0)
    {
      v539 = v489;
      v540 = v490;
      v541 = v491;
      v538 = v488;
      v537 = v487;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_22467A820;
      v533 = xmmword_22467A830;
      *(_QWORD *)&v522 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 3, 5, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v522, COERCE_DOUBLE(0x6B000000ABLL), xmmword_22467A830);
    }
  }
  v332 = *((_DWORD *)v218 + 101);
  if (**(_BYTE **)v437)
  {
    v333 = *((_DWORD *)v218 + 165);
    v334 = *((_DWORD *)v218 + 109);
    v335 = *((_DWORD *)v218 + 173);
    v336 = *((_DWORD *)v218 + 117);
  }
  else
  {
    if ((v332 & 0x10000000) != 0)
      v337 = 0x40000000;
    else
      v337 = 0x80000000;
    if ((v332 & 0x20000000) != 0)
      v332 = v337;
    else
      v332 &= 0xCFFFFFFF;
    v338 = *((_DWORD *)v218 + 165);
    if ((v338 & 0x10000000) != 0)
      v339 = 0x40000000;
    else
      v339 = 0x80000000;
    if ((v338 & 0x20000000) != 0)
      v333 = v339;
    else
      v333 = v338 & 0xCFFFFFFF;
    v340 = *((_DWORD *)v218 + 109);
    if ((v340 & 0x10000000) != 0)
      v341 = 0x40000000;
    else
      v341 = 0x80000000;
    if ((v340 & 0x20000000) != 0)
      v334 = v341;
    else
      v334 = v340 & 0xCFFFFFFF;
    v342 = *((_DWORD *)v218 + 173);
    if ((v342 & 0x10000000) != 0)
      v343 = 0x40000000;
    else
      v343 = 0x80000000;
    if ((v342 & 0x20000000) != 0)
      v335 = v343;
    else
      v335 = v342 & 0xCFFFFFFF;
    v344 = *((_DWORD *)v218 + 117);
    if ((v344 & 0x10000000) != 0)
      v336 = 0x40000000;
    else
      v336 = 0x80000000;
    if ((v344 & 0x20000000) == 0)
      v336 = v344 & 0xCFFFFFFF;
  }
  v345 = v334 >> 30;
  v431 = v332 >> 30;
  v346 = v333 >> 30;
  v446 = v336 >> 30;
  if ((v316 & 0x40000000) != 0)
  {
    v509 = v489;
    v510 = v490;
    v511 = v491;
    v508 = v488;
    v507 = v487;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_22467A840;
    v503 = (__int128)xmmword_22467A850;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 4, 5, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xEC000000ACLL), xmmword_22467A850);
    if ((v298 & 0x40000000) == 0)
    {
      v504 = v489;
      v505 = v490;
      v506 = v491;
      v503 = v488;
      v502 = v487;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_22467A860;
      v563 = (__int128)xmmword_22467A870;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 4, 5, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xEC000000ACLL), xmmword_22467A870);
      if (((v464 | v460) & 1) == 0)
      {
        v564 = v489;
        v565 = v490;
        v566 = v491;
        v562 = v487;
        v563 = v488;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_22467A880;
        v558 = (__int128)xmmword_22467A890;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 4, 5, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xEC000000ACLL), xmmword_22467A890);
        v347 = (v435 & 1) == 0 && ((v308 | v326) & 1) == 0;
        if ((v426 & 1) == 0 && v347)
        {
          v559 = v489;
          v560 = v490;
          v561 = v491;
          v558 = v488;
          v557 = v487;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_22467A8A0;
          v553 = (__int128)xmmword_22467A8B0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 4, 5, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x6C000000ACLL), xmmword_22467A8B0);
        }
      }
      v348 = (v441 & 1) == 0 && ((v308 | v326) & 1) == 0;
      if (v348 && (v450 & 1) == 0)
      {
        v554 = v489;
        v555 = v490;
        v556 = v491;
        v553 = v488;
        v552 = v487;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_22467A8C0;
        v548 = (__int128)xmmword_22467A8D0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 4, 5, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x6C000000ACLL), xmmword_22467A8D0);
      }
    }
    if (((v460 | v346) & 1) == 0)
    {
      v549 = v489;
      v550 = v490;
      v551 = v491;
      v548 = v488;
      v547 = v487;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_22467A8E0;
      v543 = (__int128)xmmword_22467A8F0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 4, 5, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xEC000000ACLL), xmmword_22467A8F0);
      v349 = (v431 & 1) == 0 && ((v326 | v345) & 1) == 0;
      if ((v435 & 1) == 0 && v349)
      {
        v544 = v489;
        v545 = v490;
        v546 = v491;
        v543 = v488;
        v542 = v487;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_22467A900;
        v538 = (__int128)xmmword_22467A910;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 4, 5, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x6C000000ACLL), xmmword_22467A910);
      }
    }
    v350 = (v450 & 1) == 0 && ((v326 | v345) & 1) == 0;
    if (v350 && (v446 & 1) == 0)
    {
      v539 = v489;
      v540 = v490;
      v541 = v491;
      v538 = v488;
      v537 = v487;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_22467A920;
      v533 = xmmword_22467A930;
      *(_QWORD *)&v522 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 4, 5, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v522, COERCE_DOUBLE(0x6C000000ACLL), xmmword_22467A930);
    }
  }
  v351 = *((_DWORD *)v218 + 102);
  if (**(_BYTE **)v437)
  {
    v352 = *((_DWORD *)v218 + 166);
    v353 = *((_DWORD *)v218 + 110);
    v354 = *((_DWORD *)v218 + 174);
    v355 = *((_DWORD *)v218 + 118);
  }
  else
  {
    if ((v351 & 0x10000000) != 0)
      v356 = 0x40000000;
    else
      v356 = 0x80000000;
    if ((v351 & 0x20000000) != 0)
      v351 = v356;
    else
      v351 &= 0xCFFFFFFF;
    v357 = *((_DWORD *)v218 + 166);
    if ((v357 & 0x10000000) != 0)
      v358 = 0x40000000;
    else
      v358 = 0x80000000;
    if ((v357 & 0x20000000) != 0)
      v352 = v358;
    else
      v352 = v357 & 0xCFFFFFFF;
    v359 = *((_DWORD *)v218 + 110);
    if ((v359 & 0x10000000) != 0)
      v360 = 0x40000000;
    else
      v360 = 0x80000000;
    if ((v359 & 0x20000000) != 0)
      v353 = v360;
    else
      v353 = v359 & 0xCFFFFFFF;
    v361 = *((_DWORD *)v218 + 174);
    if ((v361 & 0x10000000) != 0)
      v362 = 0x40000000;
    else
      v362 = 0x80000000;
    if ((v361 & 0x20000000) != 0)
      v354 = v362;
    else
      v354 = v361 & 0xCFFFFFFF;
    v363 = *((_DWORD *)v218 + 118);
    if ((v363 & 0x10000000) != 0)
      v355 = 0x40000000;
    else
      v355 = 0x80000000;
    if ((v363 & 0x20000000) == 0)
      v355 = v363 & 0xCFFFFFFF;
  }
  v455 = v353 >> 30;
  v442 = v351 >> 30;
  v465 = v352 >> 30;
  v364 = v355 >> 30;
  v524 = v489;
  v525 = v490;
  v526 = v491;
  v523 = v488;
  v522 = v487;
  if ((v335 & 0x40000000) != 0)
  {
    v509 = v489;
    v510 = v490;
    v511 = v491;
    v508 = v488;
    v507 = v487;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_22467A940;
    v503 = (__int128)xmmword_22467A950;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 5, 5, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xED000000ADLL), xmmword_22467A950);
    if ((v316 & 0x40000000) == 0)
    {
      v504 = v489;
      v505 = v490;
      v506 = v491;
      v503 = v488;
      v502 = v487;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_22467A960;
      v563 = (__int128)xmmword_22467A970;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 5, 5, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xED000000ADLL), xmmword_22467A970);
      if (((v460 | v346) & 1) == 0)
      {
        v564 = v489;
        v565 = v490;
        v566 = v491;
        v562 = v487;
        v563 = v488;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_22467A980;
        v558 = (__int128)xmmword_22467A990;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 5, 5, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xED000000ADLL), xmmword_22467A990);
        v365 = (v431 & 1) == 0 && ((v326 | v345) & 1) == 0;
        if ((v435 & 1) == 0 && v365)
        {
          v559 = v489;
          v560 = v490;
          v561 = v491;
          v558 = v488;
          v557 = v487;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_22467A9A0;
          v553 = (__int128)xmmword_22467A9B0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 5, 5, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x6D000000ADLL), xmmword_22467A9B0);
        }
      }
      v366 = (v450 & 1) == 0 && ((v326 | v345) & 1) == 0;
      if (v366 && (v446 & 1) == 0)
      {
        v554 = v524;
        v555 = v525;
        v556 = v526;
        v553 = v523;
        v552 = v522;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_22467A9C0;
        v548 = (__int128)xmmword_22467A9D0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 5, 5, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x6D000000ADLL), xmmword_22467A9D0);
      }
    }
    if (((v346 | v465) & 1) == 0)
    {
      v549 = v524;
      v550 = v525;
      v551 = v526;
      v548 = v523;
      v547 = v522;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_22467A9E0;
      v543 = (__int128)xmmword_22467A9F0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 5, 5, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xED000000ADLL), xmmword_22467A9F0);
      v367 = (v442 & 1) == 0 && ((v345 | v455) & 1) == 0;
      if ((v431 & 1) == 0 && v367)
      {
        v544 = v524;
        v545 = v525;
        v546 = v526;
        v543 = v523;
        v542 = v522;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_22467AA00;
        v538 = (__int128)xmmword_22467AA10;
        *(_QWORD *)&v527 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 5, 5, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)&v527, COERCE_DOUBLE(0x6D000000ADLL), xmmword_22467AA10);
      }
    }
    v368 = (v446 & 1) == 0 && ((v345 | v455) & 1) == 0;
    if (v368 && (v364 & 1) == 0)
    {
      v539 = v524;
      v540 = v525;
      v541 = v526;
      v538 = v523;
      v537 = v522;
      *(_QWORD *)&v527 = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_22467AA20;
      v533 = xmmword_22467AA30;
      *(_QWORD *)&v517 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 5, 5, 2, (uint64_t)&v527, (uint64_t)&v532, (uint64_t)&v517, COERCE_DOUBLE(0x6D000000ADLL), xmmword_22467AA30);
    }
  }
  v519 = v489;
  v520 = v490;
  v521 = v491;
  v518 = v488;
  v517 = v487;
  v369 = *((_DWORD *)v218 + 103);
  if (**(_BYTE **)v437)
  {
    v370 = *((_DWORD *)v218 + 167);
    v371 = *((_DWORD *)v218 + 111);
    v372 = *((_DWORD *)v218 + 175);
    v373 = *((_DWORD *)v218 + 119);
  }
  else
  {
    if ((v369 & 0x10000000) != 0)
      v374 = 0x40000000;
    else
      v374 = 0x80000000;
    if ((v369 & 0x20000000) != 0)
      v369 = v374;
    else
      v369 &= 0xCFFFFFFF;
    v375 = *((_DWORD *)v218 + 167);
    if ((v375 & 0x10000000) != 0)
      v376 = 0x40000000;
    else
      v376 = 0x80000000;
    if ((v375 & 0x20000000) != 0)
      v370 = v376;
    else
      v370 = v375 & 0xCFFFFFFF;
    v377 = *((_DWORD *)v218 + 111);
    if ((v377 & 0x10000000) != 0)
      v378 = 0x40000000;
    else
      v378 = 0x80000000;
    if ((v377 & 0x20000000) != 0)
      v371 = v378;
    else
      v371 = v377 & 0xCFFFFFFF;
    v379 = *((_DWORD *)v218 + 175);
    if ((v379 & 0x10000000) != 0)
      v380 = 0x40000000;
    else
      v380 = 0x80000000;
    if ((v379 & 0x20000000) != 0)
      v372 = v380;
    else
      v372 = v379 & 0xCFFFFFFF;
    v381 = *((_DWORD *)v218 + 119);
    if ((v381 & 0x10000000) != 0)
      v373 = 0x40000000;
    else
      v373 = 0x80000000;
    if ((v381 & 0x20000000) == 0)
      v373 = v381 & 0xCFFFFFFF;
  }
  v382 = v371 >> 30;
  v461 = v369 >> 30;
  v383 = v370 >> 30;
  v470 = v373 >> 30;
  v529 = v489;
  v530 = v490;
  v531 = v491;
  v528 = v488;
  v527 = v487;
  if ((v354 & 0x40000000) != 0)
  {
    v509 = v489;
    v510 = v490;
    v511 = v491;
    v508 = v488;
    v507 = v487;
    *(_QWORD *)&v562 = 0xD0D0D0D0D0D0D0DLL;
    v502 = xmmword_22467AA40;
    v503 = (__int128)xmmword_22467AA50;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 6, 5, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xEE000000AELL), xmmword_22467AA50);
    if ((v335 & 0x40000000) == 0)
    {
      v504 = v489;
      v505 = v490;
      v506 = v491;
      v503 = v488;
      v502 = v487;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_22467AA60;
      v563 = (__int128)xmmword_22467AA70;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 6, 5, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xEE000000AELL), xmmword_22467AA70);
      v384 = ((v345 | v455) & 1) == 0;
      if (((v346 | v465) & 1) == 0)
      {
        v564 = v489;
        v565 = v490;
        v566 = v491;
        v562 = v487;
        v563 = v488;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_22467AA80;
        v558 = (__int128)xmmword_22467AA90;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 6, 5, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xEE000000AELL), xmmword_22467AA90);
        v385 = (v442 & 1) == 0 && v384;
        if ((v431 & 1) == 0 && v385)
        {
          v559 = v489;
          v560 = v490;
          v561 = v491;
          v558 = v488;
          v557 = v487;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_22467AAA0;
          v553 = (__int128)xmmword_22467AAB0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 6, 5, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x6E000000AELL), xmmword_22467AAB0);
        }
      }
      v386 = (v446 & 1) == 0 && v384;
      if (v386 && (v364 & 1) == 0)
      {
        v554 = v529;
        v555 = v530;
        v556 = v531;
        v553 = v528;
        v552 = v527;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v547 = xmmword_22467AAC0;
        v548 = (__int128)xmmword_22467AAD0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 6, 5, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x6E000000AELL), xmmword_22467AAD0);
      }
    }
    if (((v465 | v383) & 1) == 0)
    {
      v549 = v529;
      v550 = v530;
      v551 = v531;
      v548 = v528;
      v547 = v527;
      *(_QWORD *)&v537 = 0xD0D0D0D0D0D0D0DLL;
      v542 = xmmword_22467AAE0;
      v543 = (__int128)xmmword_22467AAF0;
      *(_QWORD *)&v532 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 6, 5, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)&v532, COERCE_DOUBLE(0xEE000000AELL), xmmword_22467AAF0);
      v387 = (v461 & 1) == 0 && ((v455 | v382) & 1) == 0;
      if ((v442 & 1) == 0 && v387)
      {
        v544 = v529;
        v545 = v530;
        v546 = v531;
        v543 = v528;
        v542 = v527;
        *(_QWORD *)&v532 = 0xD0D0D0D0D0D0D0DLL;
        v537 = xmmword_22467AB00;
        v538 = (__int128)xmmword_22467AB10;
        *(_QWORD *)&v568[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 6, 5, 2, (uint64_t)&v532, (uint64_t)&v537, (uint64_t)v568, COERCE_DOUBLE(0x6E000000AELL), xmmword_22467AB10);
      }
    }
    v388 = (v364 & 1) == 0 && ((v455 | v382) & 1) == 0;
    if (v388 && (v470 & 1) == 0)
    {
      v539 = v529;
      v540 = v530;
      v541 = v531;
      v538 = v528;
      v537 = v527;
      *(_QWORD *)&v568[0] = 0xD0D0D0D0D0D0D0DLL;
      v532 = xmmword_22467AB20;
      v533 = xmmword_22467AB30;
      v569[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 6, 5, 2, (uint64_t)v568, (uint64_t)&v532, (uint64_t)v569, COERCE_DOUBLE(0x6E000000AELL), xmmword_22467AB30);
    }
  }
  v389 = *(unsigned int *)(v474 + 88);
  if ((v389 & 0x80000000) != 0)
  {
    v392 = *v467;
    v393 = *(_DWORD *)(v476 + 664);
    v394 = **v467;
    if (**v467)
      goto LABEL_1060;
  }
  else
  {
    v390 = *(_QWORD *)(v476 + 2328);
    if (v389 >= (*(_QWORD *)(v476 + 2336) - v390) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v390 = *(_QWORD *)(v476 + 2328);
    }
    v391 = v390 + (v389 << 11);
    v392 = *v467;
    v393 = *(_DWORD *)(v391 + 384);
    v394 = **v467;
    if (**v467)
    {
LABEL_1060:
      v395 = *(unsigned int *)(v474 + 88);
      if ((v395 & 0x80000000) == 0)
        goto LABEL_1061;
LABEL_1080:
      v397 = *(_DWORD *)(v476 + 920);
      if (v394)
        goto LABEL_1065;
      goto LABEL_1081;
    }
  }
  if ((v393 & 0x10000000) != 0)
    v402 = 0x40000000;
  else
    v402 = 0x80000000;
  if ((v393 & 0x20000000) != 0)
    v393 = v402;
  else
    v393 &= 0xCFFFFFFF;
  v395 = *(unsigned int *)(v474 + 88);
  if ((v395 & 0x80000000) != 0)
    goto LABEL_1080;
LABEL_1061:
  v396 = *(_QWORD *)(v476 + 2328);
  if (v395 >= (*(_QWORD *)(v476 + 2336) - v396) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v396 = *(_QWORD *)(v476 + 2328);
    v392 = *v467;
    v394 = **v467;
  }
  v397 = *(_DWORD *)(v396 + (v395 << 11) + 640);
  if (v394)
  {
LABEL_1065:
    v398 = *(unsigned int *)(v474 + 88);
    if ((v398 & 0x80000000) == 0)
      goto LABEL_1066;
LABEL_1088:
    v400 = *(_DWORD *)(v476 + 696);
    if (v394)
      goto LABEL_1070;
    goto LABEL_1089;
  }
LABEL_1081:
  if ((v397 & 0x10000000) != 0)
    v403 = 0x40000000;
  else
    v403 = 0x80000000;
  if ((v397 & 0x20000000) != 0)
    v397 = v403;
  else
    v397 &= 0xCFFFFFFF;
  v398 = *(unsigned int *)(v474 + 88);
  if ((v398 & 0x80000000) != 0)
    goto LABEL_1088;
LABEL_1066:
  v399 = *(_QWORD *)(v476 + 2328);
  if (v398 >= (*(_QWORD *)(v476 + 2336) - v399) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v399 = *(_QWORD *)(v476 + 2328);
    v392 = *v467;
    v394 = **v467;
  }
  v400 = *(_DWORD *)(v399 + (v398 << 11) + 416);
  if (v394)
  {
LABEL_1070:
    v401 = *(unsigned int *)(v474 + 88);
    if ((v401 & 0x80000000) != 0)
      goto LABEL_1139;
    goto LABEL_1096;
  }
LABEL_1089:
  if ((v400 & 0x10000000) != 0)
    v404 = 0x40000000;
  else
    v404 = 0x80000000;
  if ((v400 & 0x20000000) != 0)
    v400 = v404;
  else
    v400 &= 0xCFFFFFFF;
  v401 = *(unsigned int *)(v474 + 88);
  if ((v401 & 0x80000000) != 0)
    goto LABEL_1139;
LABEL_1096:
  v405 = *(_QWORD *)(v476 + 2328);
  v406 = (*(_QWORD *)(v476 + 2336) - v405) >> 11;
  if (v406 > v401)
    goto LABEL_1100;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v392 = *v467;
  v401 = *(unsigned int *)(v474 + 88);
  if ((v401 & 0x80000000) != 0)
  {
LABEL_1139:
    v407 = *(_DWORD *)(v476 + 728);
    if (*v392)
      goto LABEL_1110;
    goto LABEL_1104;
  }
  v405 = *(_QWORD *)(v476 + 2328);
  v406 = (*(_QWORD *)(v476 + 2336) - v405) >> 11;
LABEL_1100:
  if (v406 <= v401)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v405 = *(_QWORD *)(v476 + 2328);
    v392 = *v467;
  }
  v407 = *(_DWORD *)(v405 + (v401 << 11) + 448);
  if (!*v392)
  {
LABEL_1104:
    if ((v407 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v407 & 0x20000000) != 0)
      v407 = v408;
    else
      v407 &= 0xCFFFFFFF;
  }
LABEL_1110:
  v534 = v519;
  v535 = v520;
  v536 = v521;
  v533 = (float32x4_t)v518;
  v532 = v517;
  if ((v372 & 0x40000000) != 0)
  {
    v509 = v519;
    v510 = v520;
    v511 = v521;
    v508 = v518;
    v507 = v517;
    *(_QWORD *)&v562 = 0x161616160D0D0D0DLL;
    v502 = xmmword_22467AB40;
    v503 = (__int128)xmmword_22467AB50;
    *(_QWORD *)&v557 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v507, 7, 5, 2, (uint64_t)&v562, (uint64_t)&v502, (uint64_t)&v557, COERCE_DOUBLE(0xEF000000AFLL), xmmword_22467AB50);
    if ((v354 & 0x40000000) == 0)
    {
      v504 = v519;
      v505 = v520;
      v506 = v521;
      v503 = v518;
      v502 = v517;
      *(_QWORD *)&v557 = 0xD0D0D0D0D0D0D0DLL;
      v562 = xmmword_22467AB60;
      v563 = (__int128)xmmword_22467AB70;
      *(_QWORD *)&v552 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v502, 7, 5, 2, (uint64_t)&v557, (uint64_t)&v562, (uint64_t)&v552, COERCE_DOUBLE(0xEF000000AFLL), xmmword_22467AB70);
      if (((v465 | v383) & 1) == 0)
      {
        v564 = v519;
        v565 = v520;
        v566 = v521;
        v562 = v517;
        v563 = v518;
        *(_QWORD *)&v552 = 0xD0D0D0D0D0D0D0DLL;
        v557 = xmmword_22467AB80;
        v558 = (__int128)xmmword_22467AB90;
        *(_QWORD *)&v547 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v562, 7, 5, 2, (uint64_t)&v552, (uint64_t)&v557, (uint64_t)&v547, COERCE_DOUBLE(0xEF000000AFLL), xmmword_22467AB90);
        v409 = (v461 & 1) == 0 && ((v455 | v382) & 1) == 0;
        if ((v442 & 1) == 0 && v409)
        {
          v559 = v519;
          v560 = v520;
          v561 = v521;
          v558 = v518;
          v557 = v517;
          *(_QWORD *)&v547 = 0xD0D0D0D0D0D0D0DLL;
          v552 = xmmword_22467ABA0;
          v553 = (__int128)xmmword_22467ABB0;
          *(_QWORD *)&v542 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v557, 7, 5, 2, (uint64_t)&v547, (uint64_t)&v552, (uint64_t)&v542, COERCE_DOUBLE(0x6F000000AFLL), xmmword_22467ABB0);
        }
      }
      v410 = (v364 & 1) == 0 && ((v455 | v382) & 1) == 0;
      if (v410 && (v470 & 1) == 0)
      {
        v554 = v534;
        v555 = v535;
        v556 = v536;
        *(_QWORD *)&v542 = 0xD0D0D0D0D0D0D0DLL;
        v553 = (__int128)v533;
        v552 = v532;
        v547 = xmmword_22467ABC0;
        v548 = (__int128)xmmword_22467ABD0;
        *(_QWORD *)&v537 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v552, 7, 5, 2, (uint64_t)&v542, (uint64_t)&v547, (uint64_t)&v537, COERCE_DOUBLE(0x6F000000AFLL), xmmword_22467ABD0);
      }
    }
    v411 = (v400 & 0x40000000 | v382 & 1) == 0;
    if (!(v397 & 0x40000000 | v383 & 1))
    {
      v549 = v534;
      v550 = v535;
      v551 = v536;
      *(_QWORD *)&v537 = 0x16160D0D16160D0DLL;
      v548 = (__int128)v533;
      v547 = v532;
      v542 = xmmword_22467ABE0;
      v543 = (__int128)xmmword_22467ABF0;
      *(_QWORD *)&v568[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v547, 7, 5, 2, (uint64_t)&v537, (uint64_t)&v542, (uint64_t)v568, COERCE_DOUBLE(0xEF000000AFLL), xmmword_22467ABF0);
      v412 = (v393 & 0x40000000) == 0 && v411;
      if ((v461 & 1) == 0 && v412)
      {
        v544 = v534;
        v545 = v535;
        v546 = v536;
        *(_QWORD *)&v568[0] = 0x161616160D0D0D0DLL;
        v543 = (__int128)v533;
        v542 = v532;
        v537 = xmmword_22467AC00;
        v538 = (__int128)xmmword_22467AC10;
        v569[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v542, 7, 5, 2, (uint64_t)v568, (uint64_t)&v537, (uint64_t)v569, COERCE_DOUBLE(0x6F000000AFLL), xmmword_22467AC10);
      }
    }
    v413 = (v470 & 1) == 0 && v411;
    if (v413 && (v407 & 0x40000000) == 0)
    {
      v539 = v534;
      v540 = v535;
      v541 = v536;
      v569[0] = 0x16160D0D16160D0DLL;
      v538 = (__int128)v533;
      v537 = v532;
      v568[0] = xmmword_22467AC20;
      v568[1] = xmmword_22467AC30;
      v567 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v537, 7, 5, 2, (uint64_t)v569, (uint64_t)v568, (uint64_t)&v567, COERCE_DOUBLE(0x6F000000AFLL), xmmword_22467AC30);
    }
  }
  v502 = v437;
  *(_QWORD *)&v503 = v218;
  *(_QWORD *)&v562 = v476;
  *((_QWORD *)&v562 + 1) = v474;
  *(_QWORD *)&v563 = v467;
  v511 = v481;
  v510 = v480;
  v509 = v479;
  v507 = v477;
  v508 = v478;
  return sub_223DD8ECC((unsigned __int8 ***)&v502, &v562, &v507);
}

unint64_t sub_223DD8ECC(unsigned __int8 ***a1, _QWORD *a2, __int128 *a3)
{
  unsigned __int8 **v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  _BYTE **v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  _BYTE **v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  _BYTE **v40;
  unint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  _BYTE **v50;
  unint64_t v51;
  uint64_t v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  _BYTE **v59;
  unint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  __int128 v84;
  __int128 v85;
  _BOOL4 v86;
  _BOOL4 v87;
  _BOOL4 v88;
  _BOOL4 v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  _BOOL4 v104;
  _BOOL4 v105;
  _BOOL4 v106;
  _BOOL4 v107;
  _BOOL4 v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  _BOOL4 v123;
  _BOOL4 v124;
  _BOOL4 v125;
  _BOOL4 v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  _BOOL4 v141;
  _BOOL4 v142;
  _BOOL4 v143;
  _BOOL4 v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  _BOOL4 v160;
  _BOOL4 v161;
  _BOOL4 v162;
  _BOOL4 v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  _BOOL4 v177;
  _BOOL4 v178;
  _BOOL4 v179;
  _BOOL4 v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  int v193;
  uint64_t v194;
  unsigned int v195;
  unsigned int v196;
  _BOOL4 v197;
  _BOOL4 v198;
  _BOOL4 v199;
  _BOOL4 v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _BYTE *v204;
  unsigned int v205;
  int v206;
  unint64_t v207;
  uint64_t v208;
  unsigned int v209;
  unint64_t v210;
  uint64_t v211;
  unsigned int v212;
  unint64_t v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  uint64_t v217;
  unint64_t v218;
  unsigned int v219;
  unsigned int v220;
  _BOOL4 v221;
  _BOOL4 v222;
  _BOOL4 v223;
  _BOOL4 v224;
  unsigned __int8 **v225;
  uint64_t v226;
  unsigned int v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  _BYTE *v231;
  unsigned int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unint64_t v243;
  uint64_t v244;
  unsigned int v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unint64_t v249;
  uint64_t v250;
  unsigned int v251;
  unint64_t v252;
  uint64_t v253;
  unsigned int v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unint64_t v267;
  uint64_t v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  _BOOL4 v275;
  _BOOL4 v276;
  _BOOL4 v277;
  _BOOL4 v278;
  _BOOL4 v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unint64_t v283;
  uint64_t v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  _BOOL4 v289;
  _BOOL4 v290;
  _BOOL4 v291;
  _BOOL4 v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unint64_t v296;
  uint64_t v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  _BOOL4 v302;
  _BOOL4 v303;
  _BOOL4 v304;
  _BOOL4 v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unint64_t v309;
  uint64_t v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  _BOOL4 v314;
  _BOOL4 v315;
  _BOOL4 v316;
  _BOOL4 v317;
  _BOOL4 v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unint64_t v322;
  uint64_t v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  _BOOL4 v328;
  _BOOL4 v329;
  _BOOL4 v330;
  _BOOL4 v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unint64_t v336;
  uint64_t v337;
  unsigned int v338;
  unsigned int v339;
  _BOOL4 v340;
  _BOOL4 v341;
  _BOOL4 v342;
  _BOOL4 v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unint64_t v348;
  uint64_t v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  _BOOL4 v354;
  _BOOL4 v355;
  _BOOL4 v356;
  _BOOL4 v357;
  unint64_t v358;
  uint64_t v359;
  uint64_t v360;
  _BYTE *v361;
  unsigned int v362;
  int v363;
  unint64_t v364;
  uint64_t v365;
  unsigned int v366;
  unint64_t v367;
  uint64_t v368;
  unsigned int v369;
  unint64_t v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  int v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  int v404;
  unsigned int v405;
  int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  unsigned int v413;
  int v414;
  unsigned int v415;
  int v416;
  unsigned int v417;
  unsigned int v418;
  int v419;
  unsigned int v420;
  int v421;
  unsigned int v422;
  int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unint64_t v428;
  uint64_t v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  _BOOL4 v433;
  _BOOL4 v434;
  _BOOL4 v435;
  _BOOL4 v436;
  _BOOL4 v437;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  __int128 v452;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  int v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  uint64_t v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned __int8 **v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  uint64_t v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  _QWORD *v496;
  _BYTE **v497;
  unsigned int v498;
  unsigned int v499;
  uint64_t v500;
  unsigned __int8 **v501;
  _BYTE **v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int *v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  float32x4_t v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  __int128 v578;
  __int128 v579;
  __int128 v580;
  __int128 v581;
  __int128 v582;
  __int128 v583;
  __int128 v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  __int128 v591;
  __int128 v592;
  __int128 v593;
  __int128 v594;
  __int128 v595;
  uint64_t v596;
  _OWORD v597[2];
  _QWORD v598[3];

  v598[1] = *MEMORY[0x24BDAC8D0];
  v4 = a1[2];
  v502 = *a1;
  v5 = *((_DWORD *)v4 + 104);
  v6 = ***a1;
  if (***a1)
  {
    v7 = *((_DWORD *)v4 + 168);
    v8 = *((_DWORD *)v4 + 112);
    v9 = *((_DWORD *)v4 + 176);
    v10 = *((_DWORD *)v4 + 120);
    v11 = *a2;
    v496 = a2;
    v482 = v9;
    if ((v9 & 0x40000000) == 0)
    {
LABEL_3:
      v492 = v11;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      goto LABEL_91;
    }
  }
  else
  {
    if ((v5 & 0x20000000) != 0)
      v5 *= 4;
    v17 = *((_DWORD *)v4 + 168);
    if ((v17 & 0x20000000) != 0)
      v7 = 4 * v17;
    else
      v7 = *((_DWORD *)v4 + 168);
    v18 = *((_DWORD *)v4 + 112);
    if ((v18 & 0x20000000) != 0)
      v8 = 4 * v18;
    else
      v8 = *((_DWORD *)v4 + 112);
    v19 = *((_DWORD *)v4 + 176);
    if ((v19 & 0x20000000) != 0)
      v9 = 4 * v19;
    else
      v9 = *((_DWORD *)v4 + 176);
    v20 = *((_DWORD *)v4 + 120);
    if ((v20 & 0x10000000) != 0)
      v21 = 0x40000000;
    else
      v21 = 0x80000000;
    if ((v20 & 0x20000000) != 0)
      v10 = v21;
    else
      v10 = v20 & 0xCFFFFFFF;
    v11 = *a2;
    v496 = a2;
    v482 = v9;
    if ((v9 & 0x40000000) == 0)
      goto LABEL_3;
  }
  v499 = v7;
  v22 = (_BYTE **)a2[2];
  v23 = *(unsigned int *)(a2[1] + 16);
  if ((v23 & 0x80000000) != 0)
  {
    v25 = v11 + 280;
  }
  else
  {
    v24 = *(_QWORD *)(v11 + 2328);
    if (v23 >= (*(_QWORD *)(v11 + 2336) - v24) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v24 = *(_QWORD *)(v11 + 2328);
      v9 = v482;
    }
    v25 = v24 + (v23 << 11);
  }
  v26 = *(_DWORD *)(v25 + 444);
  v27 = v26 & 0xCFFFFFFF;
  if ((v26 & 0x10000000) != 0)
    v28 = 0x40000000;
  else
    v28 = 0x80000000;
  if ((v26 & 0x20000000) != 0)
    v27 = v28;
  if (**v22)
    v29 = v26;
  else
    v29 = v27;
  v30 = *v496;
  v31 = (_BYTE **)v496[2];
  v32 = *(unsigned int *)(v496[1] + 16);
  if ((v32 & 0x80000000) != 0)
  {
    v34 = v30 + 280;
  }
  else
  {
    v33 = *(_QWORD *)(v30 + 2328);
    if (v32 >= (*(_QWORD *)(v30 + 2336) - v33) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v33 = *(_QWORD *)(v30 + 2328);
      v9 = v482;
    }
    v34 = v33 + (v32 << 11);
  }
  v35 = *(_DWORD *)(v34 + 700);
  v36 = v35 & 0xCFFFFFFF;
  if ((v35 & 0x10000000) != 0)
    v37 = 0x40000000;
  else
    v37 = 0x80000000;
  if ((v35 & 0x20000000) != 0)
    v36 = v37;
  if (**v31)
    v38 = v35;
  else
    v38 = v36;
  v39 = *v496;
  v40 = (_BYTE **)v496[2];
  v41 = *(unsigned int *)(v496[1] + 16);
  if ((v41 & 0x80000000) != 0)
  {
    v44 = v39 + 280;
  }
  else
  {
    v42 = *(_QWORD *)(v39 + 2328);
    if (v41 >= (*(_QWORD *)(v39 + 2336) - v42) >> 11)
    {
      v43 = v38;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v42 = *(_QWORD *)(v39 + 2328);
      v9 = v482;
      v38 = v43;
    }
    v44 = v42 + (v41 << 11);
  }
  v45 = *(_DWORD *)(v44 + 476);
  v46 = v45 & 0xCFFFFFFF;
  if ((v45 & 0x10000000) != 0)
    v47 = 0x40000000;
  else
    v47 = 0x80000000;
  if ((v45 & 0x20000000) != 0)
    v46 = v47;
  if (**v40)
    v48 = v45;
  else
    v48 = v46;
  v49 = *v496;
  v50 = (_BYTE **)v496[2];
  v51 = *(unsigned int *)(v496[1] + 16);
  if ((v51 & 0x80000000) != 0)
  {
    v54 = v10;
    v55 = v8;
    v56 = v29;
    v57 = *(_DWORD *)(v49 + 1012);
    if (**v50)
      goto LABEL_69;
  }
  else
  {
    v52 = *(_QWORD *)(v49 + 2328);
    if (v51 >= (*(_QWORD *)(v49 + 2336) - v52) >> 11)
    {
      v53 = v38;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v52 = *(_QWORD *)(v49 + 2328);
      v9 = v482;
      v38 = v53;
    }
    v54 = v10;
    v55 = v8;
    v56 = v29;
    v57 = *(_DWORD *)(v52 + (v51 << 11) + 732);
    if (**v50)
    {
LABEL_69:
      v58 = *v496;
      v59 = (_BYTE **)v496[2];
      v60 = *(unsigned int *)(v496[1] + 16);
      if ((v60 & 0x80000000) == 0)
        goto LABEL_70;
LABEL_82:
      v63 = v58 + 280;
      goto LABEL_83;
    }
  }
  if ((v57 & 0x10000000) != 0)
    v64 = 0x40000000;
  else
    v64 = 0x80000000;
  if ((v57 & 0x20000000) != 0)
    v57 = v64;
  else
    v57 &= 0xCFFFFFFF;
  v58 = *v496;
  v59 = (_BYTE **)v496[2];
  v60 = *(unsigned int *)(v496[1] + 16);
  if ((v60 & 0x80000000) != 0)
    goto LABEL_82;
LABEL_70:
  v61 = *(_QWORD *)(v58 + 2328);
  if (v60 >= (*(_QWORD *)(v58 + 2336) - v61) >> 11)
  {
    v503 = v48;
    v62 = v38;
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      v61 = *(_QWORD *)(v58 + 2328);
      v9 = v482;
      v38 = v62;
      v48 = v503;
      goto LABEL_73;
    }
LABEL_1240:
    abort();
  }
LABEL_73:
  v63 = v61 + (v60 << 11);
LABEL_83:
  v16 = (v56 >> 30) & 1;
  v15 = (v38 >> 30) & 1;
  v14 = (v48 >> 30) & 1;
  v13 = (v57 >> 30) & 1;
  v65 = *(_DWORD *)(v63 + 508);
  if (!**v59)
  {
    if ((v65 & 0x10000000) != 0)
      v66 = 0x40000000;
    else
      v66 = 0x80000000;
    if ((v65 & 0x20000000) != 0)
      v65 = v66;
    else
      v65 &= 0xCFFFFFFF;
  }
  v12 = (v65 >> 30) & 1;
  v4 = a1[2];
  a2 = v496;
  v492 = *v496;
  v502 = *a1;
  v6 = ***a1;
  v7 = v499;
  v8 = v55;
  v10 = v54;
LABEL_91:
  v445 = v5 >> 30;
  v500 = a2[1];
  v488 = (unsigned __int8 **)a2[2];
  v513 = a3[2];
  v514 = a3[3];
  v515 = a3[4];
  v511 = *a3;
  v512 = a3[1];
  v67 = *((_DWORD *)v4 + 105);
  if (v6)
  {
    v68 = *((_DWORD *)v4 + 169);
    v69 = *((_DWORD *)v4 + 113);
    v476 = *((_DWORD *)v4 + 177);
    v70 = *((_DWORD *)v4 + 121);
  }
  else
  {
    if ((v67 & 0x10000000) != 0)
      v71 = 0x40000000;
    else
      v71 = 0x80000000;
    if ((v67 & 0x20000000) != 0)
      v67 = v71;
    else
      v67 &= 0xCFFFFFFF;
    v72 = *((_DWORD *)v4 + 169);
    if ((v72 & 0x10000000) != 0)
      v73 = 0x40000000;
    else
      v73 = 0x80000000;
    if ((v72 & 0x20000000) != 0)
      v68 = v73;
    else
      v68 = v72 & 0xCFFFFFFF;
    v74 = *((_DWORD *)v4 + 113);
    if ((v74 & 0x10000000) != 0)
      v75 = 0x40000000;
    else
      v75 = 0x80000000;
    if ((v74 & 0x20000000) != 0)
      v69 = v75;
    else
      v69 = v74 & 0xCFFFFFFF;
    v76 = *((_DWORD *)v4 + 177);
    if ((v76 & 0x10000000) != 0)
      v77 = 0x40000000;
    else
      v77 = 0x80000000;
    if ((v76 & 0x20000000) != 0)
      v78 = v77;
    else
      v78 = v76 & 0xCFFFFFFF;
    v476 = v78;
    v79 = *((_DWORD *)v4 + 121);
    if ((v79 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v79 & 0x20000000) == 0)
      v70 = v79 & 0xCFFFFFFF;
  }
  v80 = v8 >> 30;
  v81 = v7 >> 30;
  v456 = v10 >> 30;
  v442 = v67 >> 30;
  v467 = v69 >> 30;
  v472 = v68 >> 30;
  v450 = v70 >> 30;
  v523 = a3[2];
  v524 = a3[3];
  v525 = a3[4];
  v521 = *a3;
  v522 = a3[1];
  if ((v9 & 0x40000000) != 0)
  {
    v82 = v12;
    v83 = v16;
    v84 = a3[3];
    v538 = a3[2];
    v539 = v84;
    v540 = a3[4];
    v85 = *a3;
    v537 = a3[1];
    v536 = v85;
    *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
    v531 = xmmword_22467AC40;
    v532 = (__int128)xmmword_22467AC50;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 0, 6, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xF0000000B0), xmmword_22467AC50);
    if (!v13)
    {
      v533 = v523;
      v534 = v524;
      v535 = v525;
      v532 = v522;
      v531 = v521;
      *(_QWORD *)&v586 = 0x4040D0D04040D0DLL;
      v591 = xmmword_22467AC60;
      v592 = (__int128)xmmword_22467AC70;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 0, 6, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xF0000000B0), xmmword_22467AC70);
      if (!(v15 | v81 & 1))
      {
        v593 = v523;
        v594 = v524;
        v595 = v525;
        *(_QWORD *)&v581 = 0x40404040D0D0D0DLL;
        v591 = v521;
        v592 = v522;
        v586 = xmmword_22467AC80;
        v587 = (__int128)xmmword_22467AC90;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 0, 6, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xF0000000B0), xmmword_22467AC90);
        v86 = (v445 & 1) == 0 && (v14 | v80 & 1) == 0;
        if (!v83 && v86)
        {
          v588 = v523;
          v589 = v524;
          v590 = v525;
          v587 = v522;
          v586 = v521;
          *(_QWORD *)&v576 = 0x4040D0D04040D0DLL;
          v581 = xmmword_22467ACA0;
          v582 = (__int128)xmmword_22467ACB0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 0, 6, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x70000000B0), xmmword_22467ACB0);
        }
      }
      if (v82)
        v87 = 0;
      else
        v87 = (v14 | v80 & 1) == 0;
      if (v87 && (v10 & 0x40000000) == 0)
      {
        v583 = v523;
        v584 = v524;
        v585 = v525;
        *(_QWORD *)&v571 = 0x40404040D0D0D0DLL;
        v582 = v522;
        v581 = v521;
        v576 = xmmword_22467ACC0;
        v577 = (__int128)xmmword_22467ACD0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 0, 6, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x70000000B0), xmmword_22467ACD0);
      }
    }
    if (((v81 | v472) & 1) == 0)
    {
      v578 = v523;
      v579 = v524;
      v580 = v525;
      v577 = v522;
      v576 = v521;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467ACE0;
      v572 = (__int128)xmmword_22467ACF0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 0, 6, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xF0000000B0), xmmword_22467ACF0);
      v88 = (v442 & 1) == 0 && ((v80 | v467) & 1) == 0;
      if ((v445 & 1) == 0 && v88)
      {
        v573 = v523;
        v574 = v524;
        v575 = v525;
        v572 = v522;
        v571 = v521;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467AD00;
        v567 = (__int128)xmmword_22467AD10;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 0, 6, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x70000000B0), xmmword_22467AD10);
      }
    }
    v89 = (v10 & 0x40000000) == 0 && ((v80 | v467) & 1) == 0;
    v9 = v482;
    if (v89 && (v450 & 1) == 0)
    {
      v568 = v523;
      v569 = v524;
      v570 = v525;
      v567 = v522;
      v566 = v521;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_22467AD20;
      v562 = xmmword_22467AD30;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 0, 6, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x70000000B0), xmmword_22467AD30);
      v9 = v482;
    }
  }
  v90 = *((_DWORD *)v4 + 106);
  if (**v502)
  {
    v91 = *((_DWORD *)v4 + 170);
    v92 = *((_DWORD *)v4 + 114);
    v93 = *((_DWORD *)v4 + 178);
    v94 = *((_DWORD *)v4 + 122);
  }
  else
  {
    if ((v90 & 0x10000000) != 0)
      v95 = 0x40000000;
    else
      v95 = 0x80000000;
    if ((v90 & 0x20000000) != 0)
      v90 = v95;
    else
      v90 &= 0xCFFFFFFF;
    v96 = *((_DWORD *)v4 + 170);
    if ((v96 & 0x10000000) != 0)
      v97 = 0x40000000;
    else
      v97 = 0x80000000;
    if ((v96 & 0x20000000) != 0)
      v91 = v97;
    else
      v91 = v96 & 0xCFFFFFFF;
    v98 = *((_DWORD *)v4 + 114);
    if ((v98 & 0x10000000) != 0)
      v99 = 0x40000000;
    else
      v99 = 0x80000000;
    if ((v98 & 0x20000000) != 0)
      v92 = v99;
    else
      v92 = v98 & 0xCFFFFFFF;
    v100 = *((_DWORD *)v4 + 178);
    if ((v100 & 0x10000000) != 0)
      v101 = 0x40000000;
    else
      v101 = 0x80000000;
    if ((v100 & 0x20000000) != 0)
      v93 = v101;
    else
      v93 = v100 & 0xCFFFFFFF;
    v102 = *((_DWORD *)v4 + 122);
    if ((v102 & 0x10000000) != 0)
      v94 = 0x40000000;
    else
      v94 = 0x80000000;
    if ((v102 & 0x20000000) == 0)
      v94 = v102 & 0xCFFFFFFF;
  }
  v462 = v92 >> 30;
  v440 = v90 >> 30;
  v483 = v91 >> 30;
  v103 = v94 >> 30;
  if ((v476 & 0x40000000) != 0)
  {
    v104 = (v9 & 0x40000000) == 0;
    v538 = v513;
    v539 = v514;
    v540 = v515;
    v537 = v512;
    v536 = v511;
    *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
    v531 = xmmword_22467AD40;
    v532 = (__int128)xmmword_22467AD50;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 1, 6, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xF1000000B1), xmmword_22467AD50);
    if (v104)
    {
      v533 = v513;
      v534 = v514;
      v535 = v515;
      v532 = v512;
      v531 = v511;
      *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
      v591 = xmmword_22467AD60;
      v592 = (__int128)xmmword_22467AD70;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 1, 6, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xF1000000B1), xmmword_22467AD70);
      if (((v81 | v472) & 1) == 0)
      {
        v593 = v513;
        v594 = v514;
        v595 = v515;
        v591 = v511;
        v592 = v512;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467AD80;
        v587 = (__int128)xmmword_22467AD90;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 1, 6, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xF1000000B1), xmmword_22467AD90);
        v105 = (v442 & 1) == 0 && ((v80 | v467) & 1) == 0;
        if ((v445 & 1) == 0 && v105)
        {
          v588 = v513;
          v589 = v514;
          v590 = v515;
          v587 = v512;
          v586 = v511;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467ADA0;
          v582 = (__int128)xmmword_22467ADB0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 1, 6, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x71000000B1), xmmword_22467ADB0);
        }
      }
      v106 = (v456 & 1) == 0 && ((v80 | v467) & 1) == 0;
      if (v106 && (v450 & 1) == 0)
      {
        v583 = v513;
        v584 = v514;
        v585 = v515;
        v582 = v512;
        v581 = v511;
        *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
        v576 = xmmword_22467ADC0;
        v577 = (__int128)xmmword_22467ADD0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 1, 6, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x71000000B1), xmmword_22467ADD0);
      }
    }
    if (((v472 | v483) & 1) == 0)
    {
      v578 = v513;
      v579 = v514;
      v580 = v515;
      v577 = v512;
      v576 = v511;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467ADE0;
      v572 = (__int128)xmmword_22467ADF0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 1, 6, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xF1000000B1), xmmword_22467ADF0);
      v107 = (v440 & 1) == 0 && ((v467 | v462) & 1) == 0;
      if ((v442 & 1) == 0 && v107)
      {
        v573 = v513;
        v574 = v514;
        v575 = v515;
        v572 = v512;
        v571 = v511;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467AE00;
        v567 = (__int128)xmmword_22467AE10;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 1, 6, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x71000000B1), xmmword_22467AE10);
      }
    }
    v108 = (v450 & 1) == 0 && ((v467 | v462) & 1) == 0;
    if (v108 && (v103 & 1) == 0)
    {
      v568 = v513;
      v569 = v514;
      v570 = v515;
      v567 = v512;
      v566 = v511;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_22467AE20;
      v562 = xmmword_22467AE30;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 1, 6, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x71000000B1), xmmword_22467AE30);
    }
  }
  v109 = *((_DWORD *)v4 + 107);
  if (**v502)
  {
    v110 = *((_DWORD *)v4 + 171);
    v111 = *((_DWORD *)v4 + 115);
    v112 = *((_DWORD *)v4 + 179);
    v113 = *((_DWORD *)v4 + 123);
  }
  else
  {
    if ((v109 & 0x10000000) != 0)
      v114 = 0x40000000;
    else
      v114 = 0x80000000;
    if ((v109 & 0x20000000) != 0)
      v109 = v114;
    else
      v109 &= 0xCFFFFFFF;
    v115 = *((_DWORD *)v4 + 171);
    if ((v115 & 0x10000000) != 0)
      v116 = 0x40000000;
    else
      v116 = 0x80000000;
    if ((v115 & 0x20000000) != 0)
      v110 = v116;
    else
      v110 = v115 & 0xCFFFFFFF;
    v117 = *((_DWORD *)v4 + 115);
    if ((v117 & 0x10000000) != 0)
      v118 = 0x40000000;
    else
      v118 = 0x80000000;
    if ((v117 & 0x20000000) != 0)
      v111 = v118;
    else
      v111 = v117 & 0xCFFFFFFF;
    v119 = *((_DWORD *)v4 + 179);
    if ((v119 & 0x10000000) != 0)
      v120 = 0x40000000;
    else
      v120 = 0x80000000;
    if ((v119 & 0x20000000) != 0)
      v112 = v120;
    else
      v112 = v119 & 0xCFFFFFFF;
    v121 = *((_DWORD *)v4 + 123);
    if ((v121 & 0x10000000) != 0)
      v113 = 0x40000000;
    else
      v113 = 0x80000000;
    if ((v121 & 0x20000000) == 0)
      v113 = v121 & 0xCFFFFFFF;
  }
  v122 = v111 >> 30;
  v439 = v109 >> 30;
  v457 = v110 >> 30;
  v446 = v113 >> 30;
  if ((v93 & 0x40000000) != 0)
  {
    v538 = v513;
    v539 = v514;
    v540 = v515;
    v537 = v512;
    v536 = v511;
    *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
    v531 = xmmword_22467AE40;
    v532 = (__int128)xmmword_22467AE50;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 2, 6, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xF2000000B2), xmmword_22467AE50);
    if ((v476 & 0x40000000) == 0)
    {
      v533 = v513;
      v534 = v514;
      v535 = v515;
      v532 = v512;
      v531 = v511;
      *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
      v591 = xmmword_22467AE60;
      v592 = (__int128)xmmword_22467AE70;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 2, 6, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xF2000000B2), xmmword_22467AE70);
      if (((v472 | v483) & 1) == 0)
      {
        v593 = v513;
        v594 = v514;
        v595 = v515;
        v591 = v511;
        v592 = v512;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467AE80;
        v587 = (__int128)xmmword_22467AE90;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 2, 6, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xF2000000B2), xmmword_22467AE90);
        v123 = (v440 & 1) == 0 && ((v467 | v462) & 1) == 0;
        if ((v442 & 1) == 0 && v123)
        {
          v588 = v513;
          v589 = v514;
          v590 = v515;
          v587 = v512;
          v586 = v511;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467AEA0;
          v582 = (__int128)xmmword_22467AEB0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 2, 6, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x72000000B2), xmmword_22467AEB0);
        }
      }
      v124 = (v450 & 1) == 0 && ((v467 | v462) & 1) == 0;
      if (v124 && (v103 & 1) == 0)
      {
        v583 = v513;
        v584 = v514;
        v585 = v515;
        v582 = v512;
        v581 = v511;
        *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
        v576 = xmmword_22467AEC0;
        v577 = (__int128)xmmword_22467AED0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 2, 6, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x72000000B2), xmmword_22467AED0);
      }
    }
    if (((v483 | v457) & 1) == 0)
    {
      v578 = v513;
      v579 = v514;
      v580 = v515;
      v577 = v512;
      v576 = v511;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467AEE0;
      v572 = (__int128)xmmword_22467AEF0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 2, 6, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xF2000000B2), xmmword_22467AEF0);
      v125 = (v439 & 1) == 0 && ((v462 | v122) & 1) == 0;
      if ((v440 & 1) == 0 && v125)
      {
        v573 = v513;
        v574 = v514;
        v575 = v515;
        v572 = v512;
        v571 = v511;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467AF00;
        v567 = (__int128)xmmword_22467AF10;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 2, 6, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x72000000B2), xmmword_22467AF10);
      }
    }
    v126 = (v103 & 1) == 0 && ((v462 | v122) & 1) == 0;
    if (v126 && (v446 & 1) == 0)
    {
      v568 = v513;
      v569 = v514;
      v570 = v515;
      v567 = v512;
      v566 = v511;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_22467AF20;
      v562 = xmmword_22467AF30;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 2, 6, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x72000000B2), xmmword_22467AF30);
    }
  }
  v127 = *((_DWORD *)v4 + 108);
  if (**v502)
  {
    v128 = *((_DWORD *)v4 + 172);
    v129 = *((_DWORD *)v4 + 116);
    v130 = *((_DWORD *)v4 + 180);
    v131 = *((_DWORD *)v4 + 124);
  }
  else
  {
    if ((v127 & 0x10000000) != 0)
      v132 = 0x40000000;
    else
      v132 = 0x80000000;
    if ((v127 & 0x20000000) != 0)
      v127 = v132;
    else
      v127 &= 0xCFFFFFFF;
    v133 = *((_DWORD *)v4 + 172);
    if ((v133 & 0x10000000) != 0)
      v134 = 0x40000000;
    else
      v134 = 0x80000000;
    if ((v133 & 0x20000000) != 0)
      v128 = v134;
    else
      v128 = v133 & 0xCFFFFFFF;
    v135 = *((_DWORD *)v4 + 116);
    if ((v135 & 0x10000000) != 0)
      v136 = 0x40000000;
    else
      v136 = 0x80000000;
    if ((v135 & 0x20000000) != 0)
      v129 = v136;
    else
      v129 = v135 & 0xCFFFFFFF;
    v137 = *((_DWORD *)v4 + 180);
    if ((v137 & 0x10000000) != 0)
      v138 = 0x40000000;
    else
      v138 = 0x80000000;
    if ((v137 & 0x20000000) != 0)
      v130 = v138;
    else
      v130 = v137 & 0xCFFFFFFF;
    v139 = *((_DWORD *)v4 + 124);
    if ((v139 & 0x10000000) != 0)
      v131 = 0x40000000;
    else
      v131 = 0x80000000;
    if ((v139 & 0x20000000) == 0)
      v131 = v139 & 0xCFFFFFFF;
  }
  v451 = v127 >> 30;
  v473 = v129 >> 30;
  v477 = v128 >> 30;
  v140 = v131 >> 30;
  if ((v112 & 0x40000000) != 0)
  {
    v538 = v513;
    v539 = v514;
    v540 = v515;
    v537 = v512;
    v536 = v511;
    *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
    v531 = xmmword_22467AF40;
    v532 = (__int128)xmmword_22467AF50;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 3, 6, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xF3000000B3), xmmword_22467AF50);
    if ((v93 & 0x40000000) == 0)
    {
      v533 = v513;
      v534 = v514;
      v535 = v515;
      v532 = v512;
      v531 = v511;
      *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
      v591 = xmmword_22467AF60;
      v592 = (__int128)xmmword_22467AF70;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 3, 6, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xF3000000B3), xmmword_22467AF70);
      if (((v483 | v457) & 1) == 0)
      {
        v593 = v513;
        v594 = v514;
        v595 = v515;
        v591 = v511;
        v592 = v512;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467AF80;
        v587 = (__int128)xmmword_22467AF90;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 3, 6, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xF3000000B3), xmmword_22467AF90);
        v141 = (v439 & 1) == 0 && ((v462 | v122) & 1) == 0;
        if ((v440 & 1) == 0 && v141)
        {
          v588 = v513;
          v589 = v514;
          v590 = v515;
          v587 = v512;
          v586 = v511;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467AFA0;
          v582 = (__int128)xmmword_22467AFB0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 3, 6, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x73000000B3), xmmword_22467AFB0);
        }
      }
      v142 = (v103 & 1) == 0 && ((v462 | v122) & 1) == 0;
      if (v142 && (v446 & 1) == 0)
      {
        v583 = v513;
        v584 = v514;
        v585 = v515;
        v582 = v512;
        v581 = v511;
        *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
        v576 = xmmword_22467AFC0;
        v577 = (__int128)xmmword_22467AFD0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 3, 6, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x73000000B3), xmmword_22467AFD0);
      }
    }
    if (((v457 | v477) & 1) == 0)
    {
      v578 = v513;
      v579 = v514;
      v580 = v515;
      v577 = v512;
      v576 = v511;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467AFE0;
      v572 = (__int128)xmmword_22467AFF0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 3, 6, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xF3000000B3), xmmword_22467AFF0);
      v143 = (v451 & 1) == 0 && ((v122 | v473) & 1) == 0;
      if ((v439 & 1) == 0 && v143)
      {
        v573 = v513;
        v574 = v514;
        v575 = v515;
        v572 = v512;
        v571 = v511;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467B000;
        v567 = (__int128)xmmword_22467B010;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 3, 6, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x73000000B3), xmmword_22467B010);
      }
    }
    v144 = (v446 & 1) == 0 && ((v122 | v473) & 1) == 0;
    if (v144 && (v140 & 1) == 0)
    {
      v568 = v513;
      v569 = v514;
      v570 = v515;
      v567 = v512;
      v566 = v511;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_22467B020;
      v562 = xmmword_22467B030;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 3, 6, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x73000000B3), xmmword_22467B030);
    }
  }
  v145 = *((_DWORD *)v4 + 109);
  if (**v502)
  {
    v146 = *((_DWORD *)v4 + 173);
    v147 = *((_DWORD *)v4 + 117);
    v148 = *((_DWORD *)v4 + 181);
    v149 = *((_DWORD *)v4 + 125);
  }
  else
  {
    if ((v145 & 0x10000000) != 0)
      v150 = 0x40000000;
    else
      v150 = 0x80000000;
    if ((v145 & 0x20000000) != 0)
      v145 = v150;
    else
      v145 &= 0xCFFFFFFF;
    v151 = *((_DWORD *)v4 + 173);
    if ((v151 & 0x10000000) != 0)
      v152 = 0x40000000;
    else
      v152 = 0x80000000;
    if ((v151 & 0x20000000) != 0)
      v146 = v152;
    else
      v146 = v151 & 0xCFFFFFFF;
    v153 = *((_DWORD *)v4 + 117);
    if ((v153 & 0x10000000) != 0)
      v154 = 0x40000000;
    else
      v154 = 0x80000000;
    if ((v153 & 0x20000000) != 0)
      v147 = v154;
    else
      v147 = v153 & 0xCFFFFFFF;
    v155 = *((_DWORD *)v4 + 181);
    if ((v155 & 0x10000000) != 0)
      v156 = 0x40000000;
    else
      v156 = 0x80000000;
    if ((v155 & 0x20000000) != 0)
      v148 = v156;
    else
      v148 = v155 & 0xCFFFFFFF;
    v157 = *((_DWORD *)v4 + 125);
    if ((v157 & 0x10000000) != 0)
      v149 = 0x40000000;
    else
      v149 = 0x80000000;
    if ((v157 & 0x20000000) == 0)
      v149 = v157 & 0xCFFFFFFF;
  }
  v158 = v147 >> 30;
  v443 = v145 >> 30;
  v484 = v146 >> 30;
  v159 = v149 >> 30;
  if ((v130 & 0x40000000) != 0)
  {
    v538 = v513;
    v539 = v514;
    v540 = v515;
    v537 = v512;
    v536 = v511;
    *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
    v531 = xmmword_22467B040;
    v532 = (__int128)xmmword_22467B050;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 4, 6, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xF4000000B4), xmmword_22467B050);
    if ((v112 & 0x40000000) == 0)
    {
      v533 = v513;
      v534 = v514;
      v535 = v515;
      v532 = v512;
      v531 = v511;
      *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
      v591 = xmmword_22467B060;
      v592 = (__int128)xmmword_22467B070;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 4, 6, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xF4000000B4), xmmword_22467B070);
      if (((v457 | v477) & 1) == 0)
      {
        v593 = v513;
        v594 = v514;
        v595 = v515;
        v591 = v511;
        v592 = v512;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467B080;
        v587 = (__int128)xmmword_22467B090;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 4, 6, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xF4000000B4), xmmword_22467B090);
        v160 = (v451 & 1) == 0 && ((v122 | v473) & 1) == 0;
        if ((v439 & 1) == 0 && v160)
        {
          v588 = v513;
          v589 = v514;
          v590 = v515;
          v587 = v512;
          v586 = v511;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467B0A0;
          v582 = (__int128)xmmword_22467B0B0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 4, 6, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x74000000B4), xmmword_22467B0B0);
        }
      }
      v161 = (v446 & 1) == 0 && ((v122 | v473) & 1) == 0;
      if (v161 && (v140 & 1) == 0)
      {
        v583 = v513;
        v584 = v514;
        v585 = v515;
        v582 = v512;
        v581 = v511;
        *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
        v576 = xmmword_22467B0C0;
        v577 = (__int128)xmmword_22467B0D0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 4, 6, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x74000000B4), xmmword_22467B0D0);
      }
    }
    if (((v477 | v484) & 1) == 0)
    {
      v578 = v513;
      v579 = v514;
      v580 = v515;
      v577 = v512;
      v576 = v511;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467B0E0;
      v572 = (__int128)xmmword_22467B0F0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 4, 6, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xF4000000B4), xmmword_22467B0F0);
      v162 = (v443 & 1) == 0 && ((v473 | v158) & 1) == 0;
      if ((v451 & 1) == 0 && v162)
      {
        v573 = v513;
        v574 = v514;
        v575 = v515;
        v572 = v512;
        v571 = v511;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467B100;
        v567 = (__int128)xmmword_22467B110;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 4, 6, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x74000000B4), xmmword_22467B110);
      }
    }
    v163 = (v140 & 1) == 0 && ((v473 | v158) & 1) == 0;
    if (v163 && (v159 & 1) == 0)
    {
      v568 = v513;
      v569 = v514;
      v570 = v515;
      v567 = v512;
      v566 = v511;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_22467B120;
      v562 = xmmword_22467B130;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 4, 6, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x74000000B4), xmmword_22467B130);
    }
  }
  v164 = *((_DWORD *)v4 + 110);
  if (**v502)
  {
    v165 = *((_DWORD *)v4 + 174);
    v166 = *((_DWORD *)v4 + 118);
    v167 = *((_DWORD *)v4 + 182);
    v168 = *((_DWORD *)v4 + 126);
  }
  else
  {
    if ((v164 & 0x10000000) != 0)
      v169 = 0x40000000;
    else
      v169 = 0x80000000;
    if ((v164 & 0x20000000) != 0)
      v164 = v169;
    else
      v164 &= 0xCFFFFFFF;
    v170 = *((_DWORD *)v4 + 174);
    if ((v170 & 0x10000000) != 0)
      v171 = 0x40000000;
    else
      v171 = 0x80000000;
    if ((v170 & 0x20000000) != 0)
      v165 = v171;
    else
      v165 = v170 & 0xCFFFFFFF;
    v172 = *((_DWORD *)v4 + 118);
    if ((v172 & 0x10000000) != 0)
      v173 = 0x40000000;
    else
      v173 = 0x80000000;
    if ((v172 & 0x20000000) != 0)
      v166 = v173;
    else
      v166 = v172 & 0xCFFFFFFF;
    v174 = *((_DWORD *)v4 + 182);
    if ((v174 & 0x10000000) != 0)
      v175 = 0x40000000;
    else
      v175 = 0x80000000;
    if ((v174 & 0x20000000) != 0)
      v167 = v175;
    else
      v167 = v174 & 0xCFFFFFFF;
    v176 = *((_DWORD *)v4 + 126);
    if ((v176 & 0x10000000) != 0)
      v168 = 0x40000000;
    else
      v168 = 0x80000000;
    if ((v176 & 0x20000000) == 0)
      v168 = v176 & 0xCFFFFFFF;
  }
  v447 = v164 >> 30;
  v463 = v166 >> 30;
  v468 = v165 >> 30;
  v458 = v168 >> 30;
  v553 = v513;
  v554 = v514;
  v555 = v515;
  v552 = v512;
  v551 = v511;
  if ((v148 & 0x40000000) != 0)
  {
    v538 = v513;
    v539 = v514;
    v540 = v515;
    v537 = v512;
    v536 = v511;
    *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
    v531 = xmmword_22467B140;
    v532 = (__int128)xmmword_22467B150;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 5, 6, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xF5000000B5), xmmword_22467B150);
    if ((v130 & 0x40000000) == 0)
    {
      v533 = v513;
      v534 = v514;
      v535 = v515;
      v532 = v512;
      v531 = v511;
      *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
      v591 = xmmword_22467B160;
      v592 = (__int128)xmmword_22467B170;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 5, 6, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xF5000000B5), xmmword_22467B170);
      if (((v477 | v484) & 1) == 0)
      {
        v593 = v513;
        v594 = v514;
        v595 = v515;
        v591 = v511;
        v592 = v512;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467B180;
        v587 = (__int128)xmmword_22467B190;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 5, 6, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xF5000000B5), xmmword_22467B190);
        v177 = (v443 & 1) == 0 && ((v473 | v158) & 1) == 0;
        if ((v451 & 1) == 0 && v177)
        {
          v588 = v513;
          v589 = v514;
          v590 = v515;
          v587 = v512;
          v586 = v511;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467B1A0;
          v582 = (__int128)xmmword_22467B1B0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 5, 6, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x75000000B5), xmmword_22467B1B0);
        }
      }
      v178 = (v140 & 1) == 0 && ((v473 | v158) & 1) == 0;
      if (v178 && (v159 & 1) == 0)
      {
        v583 = v553;
        v584 = v554;
        v585 = v555;
        v582 = v552;
        v581 = v551;
        *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
        v576 = xmmword_22467B1C0;
        v577 = (__int128)xmmword_22467B1D0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 5, 6, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x75000000B5), xmmword_22467B1D0);
      }
    }
    if (((v484 | v468) & 1) == 0)
    {
      v578 = v553;
      v579 = v554;
      v580 = v555;
      v577 = v552;
      v576 = v551;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467B1E0;
      v572 = (__int128)xmmword_22467B1F0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 5, 6, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xF5000000B5), xmmword_22467B1F0);
      v179 = (v447 & 1) == 0 && ((v158 | v463) & 1) == 0;
      if ((v443 & 1) == 0 && v179)
      {
        v573 = v553;
        v574 = v554;
        v575 = v555;
        v572 = v552;
        v571 = v551;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467B200;
        v567 = (__int128)xmmword_22467B210;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 5, 6, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x75000000B5), xmmword_22467B210);
      }
    }
    v180 = (v159 & 1) == 0 && ((v158 | v463) & 1) == 0;
    if (v180 && (v458 & 1) == 0)
    {
      v568 = v553;
      v569 = v554;
      v570 = v555;
      v567 = v552;
      v566 = v551;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_22467B220;
      v562 = xmmword_22467B230;
      *(_QWORD *)&v546 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 5, 6, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v546, COERCE_DOUBLE(0x75000000B5), xmmword_22467B230);
    }
  }
  v548 = v513;
  v549 = v514;
  v550 = v515;
  v547 = v512;
  v546 = v511;
  v181 = *((_DWORD *)v4 + 111);
  if (**v502)
  {
    v182 = *((_DWORD *)v4 + 175);
    v183 = *((_DWORD *)v4 + 119);
    v184 = *((_DWORD *)v4 + 183);
    v185 = *((_DWORD *)v4 + 127);
  }
  else
  {
    if ((v181 & 0x10000000) != 0)
      v186 = 0x40000000;
    else
      v186 = 0x80000000;
    if ((v181 & 0x20000000) != 0)
      v181 = v186;
    else
      v181 &= 0xCFFFFFFF;
    v187 = *((_DWORD *)v4 + 175);
    if ((v187 & 0x10000000) != 0)
      v188 = 0x40000000;
    else
      v188 = 0x80000000;
    if ((v187 & 0x20000000) != 0)
      v182 = v188;
    else
      v182 = v187 & 0xCFFFFFFF;
    v189 = *((_DWORD *)v4 + 119);
    if ((v189 & 0x10000000) != 0)
      v190 = 0x40000000;
    else
      v190 = 0x80000000;
    if ((v189 & 0x20000000) != 0)
      v183 = v190;
    else
      v183 = v189 & 0xCFFFFFFF;
    v191 = *((_DWORD *)v4 + 183);
    if ((v191 & 0x10000000) != 0)
      v192 = 0x40000000;
    else
      v192 = 0x80000000;
    if ((v191 & 0x20000000) != 0)
      v184 = v192;
    else
      v184 = v191 & 0xCFFFFFFF;
    v193 = *((_DWORD *)v4 + 127);
    if ((v193 & 0x10000000) != 0)
      v185 = 0x40000000;
    else
      v185 = 0x80000000;
    if ((v193 & 0x20000000) == 0)
      v185 = v193 & 0xCFFFFFFF;
  }
  v194 = v492;
  v195 = v183 >> 30;
  v478 = v181 >> 30;
  v196 = v182 >> 30;
  v504 = v185 >> 30;
  v558 = v513;
  v559 = v514;
  v560 = v515;
  v557 = v512;
  v556 = v511;
  if ((v167 & 0x40000000) != 0)
  {
    v538 = v513;
    v539 = v514;
    v540 = v515;
    v537 = v512;
    v536 = v511;
    *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
    v531 = xmmword_22467B240;
    v532 = (__int128)xmmword_22467B250;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 6, 6, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xF6000000B6), xmmword_22467B250);
    if ((v148 & 0x40000000) == 0)
    {
      v533 = v513;
      v534 = v514;
      v535 = v515;
      v532 = v512;
      v531 = v511;
      *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
      v591 = xmmword_22467B260;
      v592 = (__int128)xmmword_22467B270;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 6, 6, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xF6000000B6), xmmword_22467B270);
      if (((v484 | v468) & 1) == 0)
      {
        v593 = v513;
        v594 = v514;
        v595 = v515;
        v591 = v511;
        v592 = v512;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467B280;
        v587 = (__int128)xmmword_22467B290;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 6, 6, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xF6000000B6), xmmword_22467B290);
        v197 = (v447 & 1) == 0 && ((v158 | v463) & 1) == 0;
        if ((v443 & 1) == 0 && v197)
        {
          v588 = v513;
          v589 = v514;
          v590 = v515;
          v587 = v512;
          v586 = v511;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467B2A0;
          v582 = (__int128)xmmword_22467B2B0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 6, 6, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x76000000B6), xmmword_22467B2B0);
        }
      }
      v198 = (v159 & 1) == 0 && ((v158 | v463) & 1) == 0;
      if (v198 && (v458 & 1) == 0)
      {
        v583 = v558;
        v584 = v559;
        v585 = v560;
        v582 = v557;
        v581 = v556;
        *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
        v576 = xmmword_22467B2C0;
        v577 = (__int128)xmmword_22467B2D0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 6, 6, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x76000000B6), xmmword_22467B2D0);
      }
    }
    if (((v468 | v196) & 1) == 0)
    {
      v578 = v558;
      v579 = v559;
      v580 = v560;
      v577 = v557;
      v576 = v556;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467B2E0;
      v572 = (__int128)xmmword_22467B2F0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 6, 6, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xF6000000B6), xmmword_22467B2F0);
      v199 = (v478 & 1) == 0 && ((v463 | v195) & 1) == 0;
      if ((v447 & 1) == 0 && v199)
      {
        v573 = v558;
        v574 = v559;
        v575 = v560;
        v572 = v557;
        v571 = v556;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467B300;
        v567 = (__int128)xmmword_22467B310;
        *(_QWORD *)&v541 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 6, 6, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v541, COERCE_DOUBLE(0x76000000B6), xmmword_22467B310);
      }
    }
    v200 = (v458 & 1) == 0 && ((v463 | v195) & 1) == 0;
    v194 = v492;
    if (v200 && (v504 & 1) == 0)
    {
      v568 = v558;
      v569 = v559;
      v570 = v560;
      v567 = v557;
      v566 = v556;
      *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_22467B320;
      v562 = xmmword_22467B330;
      *(_QWORD *)&v597[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 6, 6, 2, (uint64_t)&v541, (uint64_t)&v561, (uint64_t)v597, COERCE_DOUBLE(0x76000000B6), xmmword_22467B330);
      v194 = v492;
    }
  }
  v201 = *(unsigned int *)(v500 + 88);
  if ((v201 & 0x80000000) != 0)
  {
    v204 = *v488;
    v205 = *(_DWORD *)(v194 + 696);
    v206 = **v488;
    if (**v488)
      goto LABEL_509;
  }
  else
  {
    v202 = *(_QWORD *)(v194 + 2328);
    if (v201 >= (*(_QWORD *)(v194 + 2336) - v202) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v194 = v492;
      v202 = *(_QWORD *)(v492 + 2328);
    }
    v203 = v202 + (v201 << 11);
    v204 = *v488;
    v205 = *(_DWORD *)(v203 + 416);
    v206 = **v488;
    if (**v488)
    {
LABEL_509:
      v207 = *(unsigned int *)(v500 + 88);
      if ((v207 & 0x80000000) == 0)
        goto LABEL_510;
LABEL_529:
      v209 = *(_DWORD *)(v194 + 952);
      if (v206)
        goto LABEL_514;
      goto LABEL_530;
    }
  }
  if ((v205 & 0x10000000) != 0)
    v214 = 0x40000000;
  else
    v214 = 0x80000000;
  if ((v205 & 0x20000000) != 0)
    v205 = v214;
  else
    v205 &= 0xCFFFFFFF;
  v207 = *(unsigned int *)(v500 + 88);
  if ((v207 & 0x80000000) != 0)
    goto LABEL_529;
LABEL_510:
  v208 = *(_QWORD *)(v194 + 2328);
  if (v207 >= (*(_QWORD *)(v194 + 2336) - v208) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v194 = v492;
    v208 = *(_QWORD *)(v492 + 2328);
    v204 = *v488;
    v206 = **v488;
  }
  v209 = *(_DWORD *)(v208 + (v207 << 11) + 672);
  if (v206)
  {
LABEL_514:
    v210 = *(unsigned int *)(v500 + 88);
    if ((v210 & 0x80000000) == 0)
      goto LABEL_515;
LABEL_537:
    v212 = *(_DWORD *)(v194 + 728);
    if (v206)
      goto LABEL_519;
    goto LABEL_538;
  }
LABEL_530:
  if ((v209 & 0x10000000) != 0)
    v215 = 0x40000000;
  else
    v215 = 0x80000000;
  if ((v209 & 0x20000000) != 0)
    v209 = v215;
  else
    v209 &= 0xCFFFFFFF;
  v210 = *(unsigned int *)(v500 + 88);
  if ((v210 & 0x80000000) != 0)
    goto LABEL_537;
LABEL_515:
  v211 = *(_QWORD *)(v194 + 2328);
  if (v210 >= (*(_QWORD *)(v194 + 2336) - v211) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v194 = v492;
    v211 = *(_QWORD *)(v492 + 2328);
    v204 = *v488;
    v206 = **v488;
  }
  v212 = *(_DWORD *)(v211 + (v210 << 11) + 448);
  if (v206)
  {
LABEL_519:
    v213 = *(unsigned int *)(v500 + 88);
    if ((v213 & 0x80000000) != 0)
      goto LABEL_595;
    goto LABEL_545;
  }
LABEL_538:
  if ((v212 & 0x10000000) != 0)
    v216 = 0x40000000;
  else
    v216 = 0x80000000;
  if ((v212 & 0x20000000) != 0)
    v212 = v216;
  else
    v212 &= 0xCFFFFFFF;
  v213 = *(unsigned int *)(v500 + 88);
  if ((v213 & 0x80000000) != 0)
    goto LABEL_595;
LABEL_545:
  v217 = *(_QWORD *)(v194 + 2328);
  v218 = (*(_QWORD *)(v194 + 2336) - v217) >> 11;
  if (v218 > v213)
    goto LABEL_549;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v194 = v492;
  v204 = *v488;
  v213 = *(unsigned int *)(v500 + 88);
  if ((v213 & 0x80000000) != 0)
  {
LABEL_595:
    v219 = *(_DWORD *)(v194 + 760);
    if (*v204)
      goto LABEL_559;
    goto LABEL_553;
  }
  v217 = *(_QWORD *)(v492 + 2328);
  v218 = (*(_QWORD *)(v492 + 2336) - v217) >> 11;
LABEL_549:
  if (v218 <= v213)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v217 = *(_QWORD *)(v492 + 2328);
    v204 = *v488;
  }
  v219 = *(_DWORD *)(v217 + (v213 << 11) + 480);
  if (!*v204)
  {
LABEL_553:
    if ((v219 & 0x10000000) != 0)
      v220 = 0x40000000;
    else
      v220 = 0x80000000;
    if ((v219 & 0x20000000) != 0)
      v219 = v220;
    else
      v219 &= 0xCFFFFFFF;
  }
LABEL_559:
  v563 = v548;
  v564 = v549;
  v565 = v550;
  v562 = (float32x4_t)v547;
  v561 = v546;
  if ((v184 & 0x40000000) != 0)
  {
    v538 = v548;
    v539 = v549;
    v540 = v550;
    v537 = v547;
    v536 = v546;
    *(_QWORD *)&v591 = 0x161616160D0D0D0DLL;
    v531 = xmmword_22467B340;
    v532 = (__int128)xmmword_22467B350;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 7, 6, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xF7000000B7), xmmword_22467B350);
    if ((v167 & 0x40000000) == 0)
    {
      v533 = v548;
      v534 = v549;
      v535 = v550;
      v532 = v547;
      v531 = v546;
      *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
      v591 = xmmword_22467B360;
      v592 = (__int128)xmmword_22467B370;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 7, 6, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xF7000000B7), xmmword_22467B370);
      if (((v468 | v196) & 1) == 0)
      {
        v593 = v548;
        v594 = v549;
        v595 = v550;
        v591 = v546;
        v592 = v547;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467B380;
        v587 = (__int128)xmmword_22467B390;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 7, 6, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xF7000000B7), xmmword_22467B390);
        v221 = (v478 & 1) == 0 && ((v463 | v195) & 1) == 0;
        if ((v447 & 1) == 0 && v221)
        {
          v588 = v548;
          v589 = v549;
          v590 = v550;
          v587 = v547;
          v586 = v546;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467B3A0;
          v582 = (__int128)xmmword_22467B3B0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 7, 6, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x77000000B7), xmmword_22467B3B0);
        }
      }
      v222 = (v458 & 1) == 0 && ((v463 | v195) & 1) == 0;
      if (v222 && (v504 & 1) == 0)
      {
        v583 = v563;
        v584 = v564;
        v585 = v565;
        v582 = (__int128)v562;
        v581 = v561;
        *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
        v576 = xmmword_22467B3C0;
        v577 = (__int128)xmmword_22467B3D0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 7, 6, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x77000000B7), xmmword_22467B3D0);
      }
    }
    if (!(v209 & 0x40000000 | v196 & 1))
    {
      v578 = v563;
      v579 = v564;
      v580 = v565;
      *(_QWORD *)&v566 = 0x16160D0D16160D0DLL;
      v577 = (__int128)v562;
      v576 = v561;
      v571 = xmmword_22467B3E0;
      v572 = (__int128)xmmword_22467B3F0;
      *(_QWORD *)&v541 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 7, 6, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v541, COERCE_DOUBLE(0xF7000000B7), xmmword_22467B3F0);
      v223 = (v205 & 0x40000000) == 0 && (v212 & 0x40000000 | v195 & 1) == 0;
      if ((v478 & 1) == 0 && v223)
      {
        v573 = v563;
        v574 = v564;
        v575 = v565;
        *(_QWORD *)&v541 = 0x161616160D0D0D0DLL;
        v572 = (__int128)v562;
        v571 = v561;
        v566 = xmmword_22467B400;
        v567 = (__int128)xmmword_22467B410;
        *(_QWORD *)&v597[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 7, 6, 2, (uint64_t)&v541, (uint64_t)&v566, (uint64_t)v597, COERCE_DOUBLE(0x77000000B7), xmmword_22467B410);
      }
    }
    v224 = (v504 & 1) == 0 && (v212 & 0x40000000 | v195 & 1) == 0;
    if (v224 && (v219 & 0x40000000) == 0)
    {
      v568 = v563;
      v569 = v564;
      v570 = v565;
      *(_QWORD *)&v597[0] = 0x16160D0D16160D0DLL;
      v567 = (__int128)v562;
      v566 = v561;
      v541 = xmmword_22467B420;
      v542 = (__int128)xmmword_22467B430;
      v598[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 7, 6, 2, (uint64_t)v597, (uint64_t)&v541, (uint64_t)v598, COERCE_DOUBLE(0x77000000B7), xmmword_22467B430);
    }
  }
  v225 = a1[2];
  v226 = *v496;
  v501 = (unsigned __int8 **)v496[2];
  v505 = (unsigned int *)v496[1];
  v509 = a3[3];
  v510 = a3[4];
  v507 = a3[1];
  v508 = a3[2];
  v506 = *a3;
  v452 = *(_OWORD *)a1;
  v497 = *a1;
  v227 = *((_DWORD *)v225 + 112);
  if (***a1)
  {
    v479 = *((_DWORD *)v225 + 120);
    v485 = *((_DWORD *)v225 + 176);
    v493 = *((_DWORD *)v225 + 184);
    v228 = v505[16];
    if ((v228 & 0x80000000) == 0)
      goto LABEL_589;
LABEL_611:
    v231 = *v501;
    v232 = *(_DWORD *)(v226 + 536);
    v233 = **v501;
    if (**v501)
      goto LABEL_593;
LABEL_612:
    if ((v232 & 0x10000000) != 0)
      v242 = 0x40000000;
    else
      v242 = 0x80000000;
    if ((v232 & 0x20000000) != 0)
      v232 = v242;
    else
      v232 &= 0xCFFFFFFF;
    if ((v493 & 0x40000000) == 0)
      goto LABEL_594;
    goto LABEL_619;
  }
  if ((v227 & 0x20000000) != 0)
    v227 *= 4;
  v236 = *((_DWORD *)v225 + 176);
  if ((v236 & 0x20000000) != 0)
    v237 = 4 * v236;
  else
    v237 = *((_DWORD *)v225 + 176);
  v238 = *((_DWORD *)v225 + 120);
  if ((v238 & 0x20000000) != 0)
    v238 *= 4;
  v479 = v238;
  v485 = v237;
  v239 = *((_DWORD *)v225 + 184);
  if ((v239 & 0x10000000) != 0)
    v240 = 0x40000000;
  else
    v240 = 0x80000000;
  if ((v239 & 0x20000000) != 0)
    v241 = v240;
  else
    v241 = v239 & 0xCFFFFFFF;
  v493 = v241;
  v228 = v505[16];
  if ((v228 & 0x80000000) != 0)
    goto LABEL_611;
LABEL_589:
  v229 = *(_QWORD *)(v226 + 2328);
  if (v228 >= (*(_QWORD *)(v226 + 2336) - v229) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v229 = *(_QWORD *)(v226 + 2328);
  }
  v230 = v229 + (v228 << 11);
  v231 = *v501;
  v232 = *(_DWORD *)(v230 + 256);
  v233 = **v501;
  if (!**v501)
    goto LABEL_612;
LABEL_593:
  if ((v493 & 0x40000000) == 0)
  {
LABEL_594:
    v469 = 0;
    v234 = 0;
    v235 = 0;
    v464 = 0;
    goto LABEL_685;
  }
LABEL_619:
  v243 = v505[4];
  if ((v243 & 0x80000000) != 0)
  {
    v245 = *(_DWORD *)(v226 + 756);
    if (v233)
      goto LABEL_624;
  }
  else
  {
    v244 = *(_QWORD *)(v226 + 2328);
    if (v243 >= (*(_QWORD *)(v226 + 2336) - v244) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v244 = *(_QWORD *)(v226 + 2328);
      v231 = *v501;
      v233 = **v501;
    }
    v245 = *(_DWORD *)(v244 + (v243 << 11) + 476);
    if (v233)
    {
LABEL_624:
      v246 = v505[4];
      if ((v246 & 0x80000000) == 0)
        goto LABEL_625;
LABEL_652:
      v248 = *(_DWORD *)(v226 + 1012);
      if (v233)
        goto LABEL_629;
      goto LABEL_653;
    }
  }
  if ((v245 & 0x10000000) != 0)
    v258 = 0x40000000;
  else
    v258 = 0x80000000;
  if ((v245 & 0x20000000) != 0)
    v245 = v258;
  else
    v245 &= 0xCFFFFFFF;
  v246 = v505[4];
  if ((v246 & 0x80000000) != 0)
    goto LABEL_652;
LABEL_625:
  v247 = *(_QWORD *)(v226 + 2328);
  if (v246 >= (*(_QWORD *)(v226 + 2336) - v247) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v247 = *(_QWORD *)(v226 + 2328);
    v231 = *v501;
    v233 = **v501;
  }
  v248 = *(_DWORD *)(v247 + (v246 << 11) + 732);
  if (v233)
  {
LABEL_629:
    v249 = v505[4];
    if ((v249 & 0x80000000) == 0)
      goto LABEL_630;
LABEL_660:
    v251 = *(_DWORD *)(v226 + 788);
    if (v233)
      goto LABEL_634;
    goto LABEL_661;
  }
LABEL_653:
  if ((v248 & 0x10000000) != 0)
    v259 = 0x40000000;
  else
    v259 = 0x80000000;
  if ((v248 & 0x20000000) != 0)
    v248 = v259;
  else
    v248 &= 0xCFFFFFFF;
  v249 = v505[4];
  if ((v249 & 0x80000000) != 0)
    goto LABEL_660;
LABEL_630:
  v250 = *(_QWORD *)(v226 + 2328);
  if (v249 >= (*(_QWORD *)(v226 + 2336) - v250) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v250 = *(_QWORD *)(v226 + 2328);
    v231 = *v501;
    v233 = **v501;
  }
  v251 = *(_DWORD *)(v250 + (v249 << 11) + 508);
  if (v233)
  {
LABEL_634:
    v252 = v505[4];
    if ((v252 & 0x80000000) == 0)
      goto LABEL_635;
LABEL_668:
    v254 = *(_DWORD *)(v226 + 1044);
    if (v233)
      goto LABEL_639;
LABEL_669:
    if ((v254 & 0x10000000) != 0)
      v261 = 0x40000000;
    else
      v261 = 0x80000000;
    if ((v254 & 0x20000000) != 0)
      v254 = v261;
    else
      v254 &= 0xCFFFFFFF;
    v255 = v505[7];
    if ((v255 & 0x80000000) == 0)
      goto LABEL_640;
    goto LABEL_676;
  }
LABEL_661:
  if ((v251 & 0x10000000) != 0)
    v260 = 0x40000000;
  else
    v260 = 0x80000000;
  if ((v251 & 0x20000000) != 0)
    v251 = v260;
  else
    v251 &= 0xCFFFFFFF;
  v252 = v505[4];
  if ((v252 & 0x80000000) != 0)
    goto LABEL_668;
LABEL_635:
  v253 = *(_QWORD *)(v226 + 2328);
  if (v252 >= (*(_QWORD *)(v226 + 2336) - v253) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v253 = *(_QWORD *)(v226 + 2328);
    v231 = *v501;
    v233 = **v501;
  }
  v254 = *(_DWORD *)(v253 + (v252 << 11) + 764);
  if (!v233)
    goto LABEL_669;
LABEL_639:
  v255 = v505[7];
  if ((v255 & 0x80000000) == 0)
  {
LABEL_640:
    v256 = *(_QWORD *)(v226 + 2328);
    if (v255 >= (*(_QWORD *)(v226 + 2336) - v256) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v256 = *(_QWORD *)(v226 + 2328);
      v231 = *v501;
      v233 = **v501;
    }
    v257 = v256 + (v255 << 11);
    goto LABEL_677;
  }
LABEL_676:
  v257 = v226 + 280;
LABEL_677:
  v464 = (v245 >> 30) & 1;
  HIDWORD(v469) = (v248 >> 30) & 1;
  v235 = (v251 >> 30) & 1;
  v262 = *(_DWORD *)(v257 + 284);
  v234 = (v254 >> 30) & 1;
  if (!v233)
  {
    if ((v262 & 0x10000000) != 0)
      v263 = 0x40000000;
    else
      v263 = 0x80000000;
    if ((v262 & 0x20000000) != 0)
      v262 = v263;
    else
      v262 &= 0xCFFFFFFF;
  }
  LODWORD(v469) = (v262 >> 30) & 1;
LABEL_685:
  v543 = v508;
  v544 = v509;
  v545 = v510;
  v542 = v507;
  v541 = v506;
  v264 = *((_DWORD *)v225 + 113);
  if (**v497)
  {
    v265 = *((_DWORD *)v225 + 177);
    v266 = *((_DWORD *)v225 + 121);
    v489 = *((_DWORD *)v225 + 185);
    v267 = v505[16];
    if ((v267 & 0x80000000) == 0)
      goto LABEL_687;
LABEL_1007:
    v459 = v227 >> 30;
    v269 = *(_DWORD *)(v226 + 540);
    if (*v231)
      goto LABEL_697;
    goto LABEL_691;
  }
  if ((v264 & 0x10000000) != 0)
    v371 = 0x40000000;
  else
    v371 = 0x80000000;
  if ((v264 & 0x20000000) != 0)
    v264 = v371;
  else
    v264 &= 0xCFFFFFFF;
  v372 = *((_DWORD *)v225 + 177);
  if ((v372 & 0x10000000) != 0)
    v373 = 0x40000000;
  else
    v373 = 0x80000000;
  if ((v372 & 0x20000000) != 0)
    v265 = v373;
  else
    v265 = v372 & 0xCFFFFFFF;
  v374 = *((_DWORD *)v225 + 121);
  if ((v374 & 0x10000000) != 0)
    v375 = 0x40000000;
  else
    v375 = 0x80000000;
  if ((v374 & 0x20000000) != 0)
    v266 = v375;
  else
    v266 = v374 & 0xCFFFFFFF;
  v376 = *((_DWORD *)v225 + 185);
  if ((v376 & 0x10000000) != 0)
    v377 = 0x40000000;
  else
    v377 = 0x80000000;
  if ((v376 & 0x20000000) != 0)
    v378 = v377;
  else
    v378 = v376 & 0xCFFFFFFF;
  v489 = v378;
  v267 = v505[16];
  if ((v267 & 0x80000000) != 0)
    goto LABEL_1007;
LABEL_687:
  v268 = *(_QWORD *)(v226 + 2328);
  if (v267 >= (*(_QWORD *)(v226 + 2336) - v268) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v268 = *(_QWORD *)(v226 + 2328);
    v231 = *v501;
  }
  v459 = v227 >> 30;
  v269 = *(_DWORD *)(v268 + (v267 << 11) + 260);
  if (!*v231)
  {
LABEL_691:
    if ((v269 & 0x10000000) != 0)
      v270 = 0x40000000;
    else
      v270 = 0x80000000;
    if ((v269 & 0x20000000) != 0)
      v269 = v270;
    else
      v269 &= 0xCFFFFFFF;
  }
LABEL_697:
  v454 = v264 >> 30;
  v271 = v479 >> 30;
  v272 = v485 >> 30;
  v273 = v232 >> 30;
  v480 = v266 >> 30;
  v486 = v265 >> 30;
  v274 = v269 >> 30;
  if ((v493 & 0x40000000) != 0)
  {
    v538 = v508;
    v539 = v509;
    v540 = v510;
    v537 = v507;
    v536 = v506;
    *(_QWORD *)&v591 = 0x10100D0D10100D0DLL;
    v531 = xmmword_22467B440;
    v532 = (__int128)xmmword_22467B450;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 0, 7, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xF8000000B8), xmmword_22467B450);
    if (!v234)
    {
      v533 = v508;
      v534 = v509;
      v535 = v510;
      *(_QWORD *)&v586 = 0x707101004040D0DLL;
      v532 = v507;
      v531 = v506;
      v591 = xmmword_22467B460;
      v592 = (__int128)xmmword_22467B470;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 0, 7, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xF8000000B8), xmmword_22467B470);
      v275 = (v235 | v271 & 1) == 0;
      if (!(HIDWORD(v469) | v272 & 1))
      {
        v593 = v508;
        v594 = v509;
        v595 = v510;
        *(_QWORD *)&v581 = 0x40404040D0D0D0DLL;
        v591 = v506;
        v592 = v507;
        v586 = xmmword_22467B480;
        v587 = (__int128)xmmword_22467B490;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 0, 7, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xF8000000B8), xmmword_22467B490);
        v276 = (v459 & 1) == 0 && v275;
        if (!v464 && v276)
        {
          v588 = v508;
          v589 = v509;
          v590 = v510;
          v587 = v507;
          v586 = v506;
          *(_QWORD *)&v576 = 0x4040D0D04040D0DLL;
          v581 = xmmword_22467B4A0;
          v582 = (__int128)xmmword_22467B4B0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 0, 7, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x78000000B8), xmmword_22467B4B0);
        }
      }
      if ((_DWORD)v469)
        v277 = 0;
      else
        v277 = v275;
      if (v277 && (v273 & 1) == 0)
      {
        v583 = v508;
        v584 = v509;
        v585 = v510;
        *(_QWORD *)&v571 = 0x707040410100D0DLL;
        v582 = v507;
        v581 = v506;
        v576 = xmmword_22467B4C0;
        v577 = (__int128)xmmword_22467B4D0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 0, 7, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x78000000B8), xmmword_22467B4D0);
      }
    }
    if (((v272 | v486) & 1) == 0)
    {
      v578 = v508;
      v579 = v509;
      v580 = v510;
      v577 = v507;
      v576 = v506;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467B4E0;
      v572 = (__int128)xmmword_22467B4F0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 0, 7, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xF8000000B8), xmmword_22467B4F0);
      v278 = (v454 & 1) == 0 && ((v271 | v480) & 1) == 0;
      if ((v459 & 1) == 0 && v278)
      {
        v573 = v508;
        v574 = v509;
        v575 = v510;
        v572 = v507;
        v571 = v506;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467B500;
        v567 = (__int128)xmmword_22467B510;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 0, 7, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x78000000B8), xmmword_22467B510);
      }
    }
    v279 = (v273 & 1) == 0 && ((v271 | v480) & 1) == 0;
    if (v279 && (v274 & 1) == 0)
    {
      v568 = v508;
      v569 = v509;
      v570 = v510;
      v567 = v507;
      v566 = v506;
      *(_QWORD *)&v556 = 0x101010100D0D0D0DLL;
      v561 = xmmword_22467B520;
      v562 = xmmword_22467B530;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 0, 7, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x78000000B8), xmmword_22467B530);
    }
  }
  v518 = v543;
  v519 = v544;
  v520 = v545;
  v516 = v541;
  v517 = v542;
  v280 = *((_DWORD *)v225 + 114);
  if (**v497)
  {
    v281 = *((_DWORD *)v225 + 178);
    v282 = *((_DWORD *)v225 + 122);
    v474 = *((_DWORD *)v225 + 186);
    v283 = v505[16];
    if ((v283 & 0x80000000) == 0)
      goto LABEL_727;
LABEL_1034:
    v285 = *(_DWORD *)(v226 + 544);
    if (**v501)
      goto LABEL_737;
    goto LABEL_731;
  }
  if ((v280 & 0x10000000) != 0)
    v379 = 0x40000000;
  else
    v379 = 0x80000000;
  if ((v280 & 0x20000000) != 0)
    v280 = v379;
  else
    v280 &= 0xCFFFFFFF;
  v380 = *((_DWORD *)v225 + 178);
  if ((v380 & 0x10000000) != 0)
    v381 = 0x40000000;
  else
    v381 = 0x80000000;
  if ((v380 & 0x20000000) != 0)
    v281 = v381;
  else
    v281 = v380 & 0xCFFFFFFF;
  v382 = *((_DWORD *)v225 + 122);
  if ((v382 & 0x10000000) != 0)
    v383 = 0x40000000;
  else
    v383 = 0x80000000;
  if ((v382 & 0x20000000) != 0)
    v282 = v383;
  else
    v282 = v382 & 0xCFFFFFFF;
  v384 = *((_DWORD *)v225 + 186);
  if ((v384 & 0x10000000) != 0)
    v385 = 0x40000000;
  else
    v385 = 0x80000000;
  if ((v384 & 0x20000000) != 0)
    v386 = v385;
  else
    v386 = v384 & 0xCFFFFFFF;
  v474 = v386;
  v283 = v505[16];
  if ((v283 & 0x80000000) != 0)
    goto LABEL_1034;
LABEL_727:
  v284 = *(_QWORD *)(v226 + 2328);
  if (v283 >= (*(_QWORD *)(v226 + 2336) - v284) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v284 = *(_QWORD *)(v226 + 2328);
  }
  v285 = *(_DWORD *)(v284 + (v283 << 11) + 264);
  if (!**v501)
  {
LABEL_731:
    if ((v285 & 0x10000000) != 0)
      v286 = 0x40000000;
    else
      v286 = 0x80000000;
    if ((v285 & 0x20000000) != 0)
      v285 = v286;
    else
      v285 &= 0xCFFFFFFF;
  }
LABEL_737:
  v448 = v280 >> 30;
  v287 = v281 >> 30;
  v288 = v282 >> 30;
  v465 = v285 >> 30;
  v470 = v287;
  v528 = v543;
  v529 = v544;
  v530 = v545;
  v526 = v541;
  v527 = v542;
  if ((v489 & 0x40000000) != 0)
  {
    v538 = v543;
    v539 = v544;
    v540 = v545;
    v537 = v542;
    v536 = v541;
    *(_QWORD *)&v591 = 0x10100D0D10100D0DLL;
    v531 = xmmword_22467B540;
    v532 = (__int128)xmmword_22467B550;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 1, 7, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xF9000000B9), xmmword_22467B550);
    if ((v493 & 0x40000000) == 0)
    {
      v533 = v543;
      v534 = v544;
      v535 = v545;
      v532 = v542;
      v531 = v541;
      *(_QWORD *)&v586 = 0x101010100D0D0D0DLL;
      v591 = xmmword_22467B560;
      v592 = (__int128)xmmword_22467B570;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 1, 7, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xF9000000B9), xmmword_22467B570);
      if (((v272 | v486) & 1) == 0)
      {
        v593 = v543;
        v594 = v544;
        v595 = v545;
        v591 = v541;
        v592 = v542;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467B580;
        v587 = (__int128)xmmword_22467B590;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 1, 7, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xF9000000B9), xmmword_22467B590);
        v289 = (v454 & 1) == 0 && ((v271 | v480) & 1) == 0;
        if ((v459 & 1) == 0 && v289)
        {
          v588 = v543;
          v589 = v544;
          v590 = v545;
          v587 = v542;
          v586 = v541;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467B5A0;
          v582 = (__int128)xmmword_22467B5B0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 1, 7, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x79000000B9), xmmword_22467B5B0);
        }
      }
      v290 = (v273 & 1) == 0 && ((v271 | v480) & 1) == 0;
      if (v290 && (v274 & 1) == 0)
      {
        v583 = v528;
        v584 = v529;
        v585 = v530;
        v582 = v527;
        v581 = v526;
        *(_QWORD *)&v571 = 0x10100D0D10100D0DLL;
        v576 = xmmword_22467B5C0;
        v577 = (__int128)xmmword_22467B5D0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 1, 7, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x79000000B9), xmmword_22467B5D0);
      }
    }
    if (((v486 | v470) & 1) == 0)
    {
      v578 = v528;
      v579 = v529;
      v580 = v530;
      v577 = v527;
      v576 = v526;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467B5E0;
      v572 = (__int128)xmmword_22467B5F0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 1, 7, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xF9000000B9), xmmword_22467B5F0);
      v291 = (v280 & 0x40000000) == 0 && ((v480 | v288) & 1) == 0;
      if ((v454 & 1) == 0 && v291)
      {
        v573 = v528;
        v574 = v529;
        v575 = v530;
        v572 = v527;
        v571 = v526;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467B600;
        v567 = (__int128)xmmword_22467B610;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 1, 7, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x79000000B9), xmmword_22467B610);
      }
    }
    v292 = (v274 & 1) == 0 && ((v480 | v288) & 1) == 0;
    if (v292 && (v465 & 1) == 0)
    {
      v568 = v528;
      v569 = v529;
      v570 = v530;
      v567 = v527;
      v566 = v526;
      *(_QWORD *)&v556 = 0x101010100D0D0D0DLL;
      v561 = xmmword_22467B620;
      v562 = xmmword_22467B630;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 1, 7, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x79000000B9), xmmword_22467B630);
    }
  }
  v293 = *((_DWORD *)v225 + 115);
  if (**v497)
  {
    v294 = *((_DWORD *)v225 + 179);
    v295 = *((_DWORD *)v225 + 123);
    v494 = *((_DWORD *)v225 + 187);
    v296 = v505[16];
    if ((v296 & 0x80000000) == 0)
      goto LABEL_767;
LABEL_1061:
    v298 = *(_DWORD *)(v226 + 548);
    if (**v501)
      goto LABEL_777;
    goto LABEL_771;
  }
  if ((v293 & 0x10000000) != 0)
    v387 = 0x40000000;
  else
    v387 = 0x80000000;
  if ((v293 & 0x20000000) != 0)
    v293 = v387;
  else
    v293 &= 0xCFFFFFFF;
  v388 = *((_DWORD *)v225 + 179);
  if ((v388 & 0x10000000) != 0)
    v389 = 0x40000000;
  else
    v389 = 0x80000000;
  if ((v388 & 0x20000000) != 0)
    v294 = v389;
  else
    v294 = v388 & 0xCFFFFFFF;
  v390 = *((_DWORD *)v225 + 123);
  if ((v390 & 0x10000000) != 0)
    v391 = 0x40000000;
  else
    v391 = 0x80000000;
  if ((v390 & 0x20000000) != 0)
    v295 = v391;
  else
    v295 = v390 & 0xCFFFFFFF;
  v392 = *((_DWORD *)v225 + 187);
  if ((v392 & 0x10000000) != 0)
    v393 = 0x40000000;
  else
    v393 = 0x80000000;
  if ((v392 & 0x20000000) != 0)
    v394 = v393;
  else
    v394 = v392 & 0xCFFFFFFF;
  v494 = v394;
  v296 = v505[16];
  if ((v296 & 0x80000000) != 0)
    goto LABEL_1061;
LABEL_767:
  v297 = *(_QWORD *)(v226 + 2328);
  if (v296 >= (*(_QWORD *)(v226 + 2336) - v297) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v297 = *(_QWORD *)(v226 + 2328);
  }
  v298 = *(_DWORD *)(v297 + (v296 << 11) + 268);
  if (!**v501)
  {
LABEL_771:
    if ((v298 & 0x10000000) != 0)
      v299 = 0x40000000;
    else
      v299 = 0x80000000;
    if ((v298 & 0x20000000) != 0)
      v298 = v299;
    else
      v298 &= 0xCFFFFFFF;
  }
LABEL_777:
  v444 = v293 >> 30;
  v300 = v294 >> 30;
  v301 = v295 >> 30;
  v460 = v298 >> 30;
  if ((v474 & 0x40000000) != 0)
  {
    v538 = v518;
    v539 = v519;
    v540 = v520;
    v537 = v517;
    v536 = v516;
    *(_QWORD *)&v591 = 0x10100D0D10100D0DLL;
    v531 = xmmword_22467B640;
    v532 = (__int128)xmmword_22467B650;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 2, 7, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xFA000000BALL), xmmword_22467B650);
    if ((v489 & 0x40000000) == 0)
    {
      v533 = v518;
      v534 = v519;
      v535 = v520;
      v532 = v517;
      v531 = v516;
      *(_QWORD *)&v586 = 0x101010100D0D0D0DLL;
      v591 = xmmword_22467B660;
      v592 = (__int128)xmmword_22467B670;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 2, 7, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xFA000000BALL), xmmword_22467B670);
      if (((v486 | v470) & 1) == 0)
      {
        v593 = v518;
        v594 = v519;
        v595 = v520;
        v591 = v516;
        v592 = v517;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467B680;
        v587 = (__int128)xmmword_22467B690;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 2, 7, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xFA000000BALL), xmmword_22467B690);
        v302 = (v448 & 1) == 0 && ((v480 | v288) & 1) == 0;
        if ((v454 & 1) == 0 && v302)
        {
          v588 = v518;
          v589 = v519;
          v590 = v520;
          v587 = v517;
          v586 = v516;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467B6A0;
          v582 = (__int128)xmmword_22467B6B0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 2, 7, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x7A000000BALL), xmmword_22467B6B0);
        }
      }
      v303 = (v274 & 1) == 0 && ((v480 | v288) & 1) == 0;
      if (v303 && (v465 & 1) == 0)
      {
        v583 = v518;
        v584 = v519;
        v585 = v520;
        v582 = v517;
        v581 = v516;
        *(_QWORD *)&v571 = 0x10100D0D10100D0DLL;
        v576 = xmmword_22467B6C0;
        v577 = (__int128)xmmword_22467B6D0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 2, 7, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x7A000000BALL), xmmword_22467B6D0);
      }
    }
    if (((v470 | v300) & 1) == 0)
    {
      v578 = v518;
      v579 = v519;
      v580 = v520;
      v577 = v517;
      v576 = v516;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467B6E0;
      v572 = (__int128)xmmword_22467B6F0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 2, 7, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xFA000000BALL), xmmword_22467B6F0);
      v304 = (v444 & 1) == 0 && ((v288 | v301) & 1) == 0;
      if ((v448 & 1) == 0 && v304)
      {
        v573 = v518;
        v574 = v519;
        v575 = v520;
        v572 = v517;
        v571 = v516;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467B700;
        v567 = (__int128)xmmword_22467B710;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 2, 7, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x7A000000BALL), xmmword_22467B710);
      }
    }
    v305 = (v465 & 1) == 0 && ((v288 | v301) & 1) == 0;
    if (v305 && (v460 & 1) == 0)
    {
      v568 = v518;
      v569 = v519;
      v570 = v520;
      v567 = v517;
      v566 = v516;
      *(_QWORD *)&v556 = 0x101010100D0D0D0DLL;
      v561 = xmmword_22467B720;
      v562 = xmmword_22467B730;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 2, 7, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x7A000000BALL), xmmword_22467B730);
    }
  }
  v306 = *((_DWORD *)v225 + 116);
  if (**v497)
  {
    v307 = *((_DWORD *)v225 + 180);
    v308 = *((_DWORD *)v225 + 124);
    v490 = *((_DWORD *)v225 + 188);
    v309 = v505[16];
    if ((v309 & 0x80000000) == 0)
      goto LABEL_807;
LABEL_1088:
    v311 = *(_DWORD *)(v226 + 552);
    if (**v501)
      goto LABEL_817;
    goto LABEL_811;
  }
  if ((v306 & 0x10000000) != 0)
    v395 = 0x40000000;
  else
    v395 = 0x80000000;
  if ((v306 & 0x20000000) != 0)
    v306 = v395;
  else
    v306 &= 0xCFFFFFFF;
  v396 = *((_DWORD *)v225 + 180);
  if ((v396 & 0x10000000) != 0)
    v397 = 0x40000000;
  else
    v397 = 0x80000000;
  if ((v396 & 0x20000000) != 0)
    v307 = v397;
  else
    v307 = v396 & 0xCFFFFFFF;
  v398 = *((_DWORD *)v225 + 124);
  if ((v398 & 0x10000000) != 0)
    v399 = 0x40000000;
  else
    v399 = 0x80000000;
  if ((v398 & 0x20000000) != 0)
    v308 = v399;
  else
    v308 = v398 & 0xCFFFFFFF;
  v400 = *((_DWORD *)v225 + 188);
  if ((v400 & 0x10000000) != 0)
    v401 = 0x40000000;
  else
    v401 = 0x80000000;
  if ((v400 & 0x20000000) != 0)
    v402 = v401;
  else
    v402 = v400 & 0xCFFFFFFF;
  v490 = v402;
  v309 = v505[16];
  if ((v309 & 0x80000000) != 0)
    goto LABEL_1088;
LABEL_807:
  v310 = *(_QWORD *)(v226 + 2328);
  if (v309 >= (*(_QWORD *)(v226 + 2336) - v310) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v310 = *(_QWORD *)(v226 + 2328);
  }
  v311 = *(_DWORD *)(v310 + (v309 << 11) + 272);
  if (!**v501)
  {
LABEL_811:
    if ((v311 & 0x10000000) != 0)
      v312 = 0x40000000;
    else
      v312 = 0x80000000;
    if ((v311 & 0x20000000) != 0)
      v311 = v312;
    else
      v311 &= 0xCFFFFFFF;
  }
LABEL_817:
  v441 = v306 >> 30;
  v487 = v307 >> 30;
  v313 = v308 >> 30;
  v455 = v311 >> 30;
  if ((v494 & 0x40000000) != 0)
  {
    v538 = v518;
    v539 = v519;
    v540 = v520;
    v537 = v517;
    v536 = v516;
    *(_QWORD *)&v591 = 0x10100D0D10100D0DLL;
    v531 = xmmword_22467B740;
    v532 = (__int128)xmmword_22467B750;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 3, 7, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xFB000000BBLL), xmmword_22467B750);
    if ((v474 & 0x40000000) == 0)
    {
      v533 = v518;
      v534 = v519;
      v535 = v520;
      v532 = v517;
      v531 = v516;
      *(_QWORD *)&v586 = 0x101010100D0D0D0DLL;
      v591 = xmmword_22467B760;
      v592 = (__int128)xmmword_22467B770;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 3, 7, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xFB000000BBLL), xmmword_22467B770);
      v314 = ((v288 | v301) & 1) == 0;
      if (((v470 | v300) & 1) == 0)
      {
        v593 = v518;
        v594 = v519;
        v595 = v520;
        v591 = v516;
        v592 = v517;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467B780;
        v587 = (__int128)xmmword_22467B790;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 3, 7, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xFB000000BBLL), xmmword_22467B790);
        v315 = (v444 & 1) == 0 && v314;
        if ((v448 & 1) == 0 && v315)
        {
          v588 = v518;
          v589 = v519;
          v590 = v520;
          v587 = v517;
          v586 = v516;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467B7A0;
          v582 = (__int128)xmmword_22467B7B0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 3, 7, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x7B000000BBLL), xmmword_22467B7B0);
        }
      }
      v316 = (v465 & 1) == 0 && v314;
      if (v316 && (v460 & 1) == 0)
      {
        v583 = v518;
        v584 = v519;
        v585 = v520;
        v582 = v517;
        v581 = v516;
        *(_QWORD *)&v571 = 0x10100D0D10100D0DLL;
        v576 = xmmword_22467B7C0;
        v577 = (__int128)xmmword_22467B7D0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 3, 7, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x7B000000BBLL), xmmword_22467B7D0);
      }
    }
    if (((v300 | v487) & 1) == 0)
    {
      v578 = v518;
      v579 = v519;
      v580 = v520;
      v577 = v517;
      v576 = v516;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467B7E0;
      v572 = (__int128)xmmword_22467B7F0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 3, 7, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xFB000000BBLL), xmmword_22467B7F0);
      v317 = (v441 & 1) == 0 && ((v301 | v313) & 1) == 0;
      if ((v444 & 1) == 0 && v317)
      {
        v573 = v518;
        v574 = v519;
        v575 = v520;
        v572 = v517;
        v571 = v516;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467B800;
        v567 = (__int128)xmmword_22467B810;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 3, 7, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x7B000000BBLL), xmmword_22467B810);
      }
    }
    v318 = (v460 & 1) == 0 && ((v301 | v313) & 1) == 0;
    if (v318 && (v455 & 1) == 0)
    {
      v568 = v518;
      v569 = v519;
      v570 = v520;
      v567 = v517;
      v566 = v516;
      *(_QWORD *)&v556 = 0x101010100D0D0D0DLL;
      v561 = xmmword_22467B820;
      v562 = xmmword_22467B830;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 3, 7, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x7B000000BBLL), xmmword_22467B830);
    }
  }
  v319 = *((_DWORD *)v225 + 117);
  if (**v497)
  {
    v320 = *((_DWORD *)v225 + 181);
    v321 = *((_DWORD *)v225 + 125);
    v481 = *((_DWORD *)v225 + 189);
    v322 = v505[16];
    if ((v322 & 0x80000000) == 0)
      goto LABEL_847;
LABEL_1115:
    v324 = *(_DWORD *)(v226 + 556);
    if (**v501)
      goto LABEL_857;
    goto LABEL_851;
  }
  if ((v319 & 0x10000000) != 0)
    v403 = 0x40000000;
  else
    v403 = 0x80000000;
  if ((v319 & 0x20000000) != 0)
    v319 = v403;
  else
    v319 &= 0xCFFFFFFF;
  v404 = *((_DWORD *)v225 + 181);
  if ((v404 & 0x10000000) != 0)
    v405 = 0x40000000;
  else
    v405 = 0x80000000;
  if ((v404 & 0x20000000) != 0)
    v320 = v405;
  else
    v320 = v404 & 0xCFFFFFFF;
  v406 = *((_DWORD *)v225 + 125);
  if ((v406 & 0x10000000) != 0)
    v407 = 0x40000000;
  else
    v407 = 0x80000000;
  if ((v406 & 0x20000000) != 0)
    v321 = v407;
  else
    v321 = v406 & 0xCFFFFFFF;
  v408 = *((_DWORD *)v225 + 189);
  if ((v408 & 0x10000000) != 0)
    v409 = 0x40000000;
  else
    v409 = 0x80000000;
  if ((v408 & 0x20000000) != 0)
    v410 = v409;
  else
    v410 = v408 & 0xCFFFFFFF;
  v481 = v410;
  v322 = v505[16];
  if ((v322 & 0x80000000) != 0)
    goto LABEL_1115;
LABEL_847:
  v323 = *(_QWORD *)(v226 + 2328);
  if (v322 >= (*(_QWORD *)(v226 + 2336) - v323) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v323 = *(_QWORD *)(v226 + 2328);
  }
  v324 = *(_DWORD *)(v323 + (v322 << 11) + 276);
  if (!**v501)
  {
LABEL_851:
    if ((v324 & 0x10000000) != 0)
      v325 = 0x40000000;
    else
      v325 = 0x80000000;
    if ((v324 & 0x20000000) != 0)
      v324 = v325;
    else
      v324 &= 0xCFFFFFFF;
  }
LABEL_857:
  v449 = v319 >> 30;
  v326 = v320 >> 30;
  v327 = v321 >> 30;
  v471 = v324 >> 30;
  if ((v490 & 0x40000000) != 0)
  {
    v538 = v518;
    v539 = v519;
    v540 = v520;
    v537 = v517;
    v536 = v516;
    *(_QWORD *)&v591 = 0x10100D0D10100D0DLL;
    v531 = xmmword_22467B840;
    v532 = (__int128)xmmword_22467B850;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 4, 7, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xFC000000BCLL), xmmword_22467B850);
    if ((v494 & 0x40000000) == 0)
    {
      v533 = v518;
      v534 = v519;
      v535 = v520;
      v532 = v517;
      v531 = v516;
      *(_QWORD *)&v586 = 0x101010100D0D0D0DLL;
      v591 = xmmword_22467B860;
      v592 = (__int128)xmmword_22467B870;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 4, 7, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xFC000000BCLL), xmmword_22467B870);
      if (((v300 | v487) & 1) == 0)
      {
        v593 = v518;
        v594 = v519;
        v595 = v520;
        v591 = v516;
        v592 = v517;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467B880;
        v587 = (__int128)xmmword_22467B890;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 4, 7, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xFC000000BCLL), xmmword_22467B890);
        v328 = (v441 & 1) == 0 && ((v301 | v313) & 1) == 0;
        if ((v444 & 1) == 0 && v328)
        {
          v588 = v518;
          v589 = v519;
          v590 = v520;
          v587 = v517;
          v586 = v516;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467B8A0;
          v582 = (__int128)xmmword_22467B8B0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 4, 7, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x7C000000BCLL), xmmword_22467B8B0);
        }
      }
      v329 = (v460 & 1) == 0 && ((v301 | v313) & 1) == 0;
      if (v329 && (v455 & 1) == 0)
      {
        v583 = v518;
        v584 = v519;
        v585 = v520;
        v582 = v517;
        v581 = v516;
        *(_QWORD *)&v571 = 0x10100D0D10100D0DLL;
        v576 = xmmword_22467B8C0;
        v577 = (__int128)xmmword_22467B8D0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 4, 7, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x7C000000BCLL), xmmword_22467B8D0);
      }
    }
    if (((v487 | v326) & 1) == 0)
    {
      v578 = v518;
      v579 = v519;
      v580 = v520;
      v577 = v517;
      v576 = v516;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467B8E0;
      v572 = (__int128)xmmword_22467B8F0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 4, 7, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xFC000000BCLL), xmmword_22467B8F0);
      v330 = (v319 & 0x40000000) == 0 && ((v313 | v327) & 1) == 0;
      if ((v441 & 1) == 0 && v330)
      {
        v573 = v518;
        v574 = v519;
        v575 = v520;
        v572 = v517;
        v571 = v516;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467B900;
        v567 = (__int128)xmmword_22467B910;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 4, 7, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x7C000000BCLL), xmmword_22467B910);
      }
    }
    v331 = (v455 & 1) == 0 && ((v313 | v327) & 1) == 0;
    if (v331 && (v471 & 1) == 0)
    {
      v568 = v518;
      v569 = v519;
      v570 = v520;
      v567 = v517;
      v566 = v516;
      *(_QWORD *)&v556 = 0x101010100D0D0D0DLL;
      v561 = xmmword_22467B920;
      v562 = xmmword_22467B930;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 4, 7, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x7C000000BCLL), xmmword_22467B930);
    }
  }
  v332 = *((_DWORD *)v225 + 118);
  if (**v497)
  {
    v333 = *((_DWORD *)v225 + 182);
    v334 = *((_DWORD *)v225 + 126);
    v335 = *((_DWORD *)v225 + 190);
    v336 = v505[16];
    if ((v336 & 0x80000000) == 0)
      goto LABEL_887;
LABEL_1142:
    v338 = *(_DWORD *)(v226 + 560);
    if (**v501)
      goto LABEL_897;
    goto LABEL_891;
  }
  if ((v332 & 0x10000000) != 0)
    v411 = 0x40000000;
  else
    v411 = 0x80000000;
  if ((v332 & 0x20000000) != 0)
    v332 = v411;
  else
    v332 &= 0xCFFFFFFF;
  v412 = *((_DWORD *)v225 + 182);
  if ((v412 & 0x10000000) != 0)
    v413 = 0x40000000;
  else
    v413 = 0x80000000;
  if ((v412 & 0x20000000) != 0)
    v333 = v413;
  else
    v333 = v412 & 0xCFFFFFFF;
  v414 = *((_DWORD *)v225 + 126);
  if ((v414 & 0x10000000) != 0)
    v415 = 0x40000000;
  else
    v415 = 0x80000000;
  if ((v414 & 0x20000000) != 0)
    v334 = v415;
  else
    v334 = v414 & 0xCFFFFFFF;
  v416 = *((_DWORD *)v225 + 190);
  if ((v416 & 0x10000000) != 0)
    v417 = 0x40000000;
  else
    v417 = 0x80000000;
  if ((v416 & 0x20000000) != 0)
    v335 = v417;
  else
    v335 = v416 & 0xCFFFFFFF;
  v336 = v505[16];
  if ((v336 & 0x80000000) != 0)
    goto LABEL_1142;
LABEL_887:
  v337 = *(_QWORD *)(v226 + 2328);
  if (v336 >= (*(_QWORD *)(v226 + 2336) - v337) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v337 = *(_QWORD *)(v226 + 2328);
  }
  v338 = *(_DWORD *)(v337 + (v336 << 11) + 280);
  if (!**v501)
  {
LABEL_891:
    if ((v338 & 0x10000000) != 0)
      v339 = 0x40000000;
    else
      v339 = 0x80000000;
    if ((v338 & 0x20000000) != 0)
      v338 = v339;
    else
      v338 &= 0xCFFFFFFF;
  }
LABEL_897:
  v495 = v333 >> 30;
  v475 = v334 >> 30;
  v461 = v332 >> 30;
  v466 = v338 >> 30;
  v553 = v518;
  v554 = v519;
  v555 = v520;
  v552 = v517;
  v551 = v516;
  if ((v481 & 0x40000000) != 0)
  {
    v538 = v518;
    v539 = v519;
    v540 = v520;
    v537 = v517;
    v536 = v516;
    *(_QWORD *)&v591 = 0x10100D0D10100D0DLL;
    v531 = xmmword_22467B940;
    v532 = (__int128)xmmword_22467B950;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 5, 7, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xFD000000BDLL), xmmword_22467B950);
    if ((v490 & 0x40000000) == 0)
    {
      v533 = v518;
      v534 = v519;
      v535 = v520;
      v532 = v517;
      v531 = v516;
      *(_QWORD *)&v586 = 0x101010100D0D0D0DLL;
      v591 = xmmword_22467B960;
      v592 = (__int128)xmmword_22467B970;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 5, 7, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xFD000000BDLL), xmmword_22467B970);
      if (((v487 | v326) & 1) == 0)
      {
        v593 = v518;
        v594 = v519;
        v595 = v520;
        v591 = v516;
        v592 = v517;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467B980;
        v587 = (__int128)xmmword_22467B990;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 5, 7, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xFD000000BDLL), xmmword_22467B990);
        v340 = (v449 & 1) == 0 && ((v313 | v327) & 1) == 0;
        if ((v441 & 1) == 0 && v340)
        {
          v588 = v518;
          v589 = v519;
          v590 = v520;
          v587 = v517;
          v586 = v516;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467B9A0;
          v582 = (__int128)xmmword_22467B9B0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 5, 7, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x7D000000BDLL), xmmword_22467B9B0);
        }
      }
      v341 = (v455 & 1) == 0 && ((v313 | v327) & 1) == 0;
      if (v341 && (v471 & 1) == 0)
      {
        v583 = v553;
        v584 = v554;
        v585 = v555;
        v582 = v552;
        v581 = v551;
        *(_QWORD *)&v571 = 0x10100D0D10100D0DLL;
        v576 = xmmword_22467B9C0;
        v577 = (__int128)xmmword_22467B9D0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 5, 7, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x7D000000BDLL), xmmword_22467B9D0);
      }
    }
    if (((v326 | v495) & 1) == 0)
    {
      v578 = v553;
      v579 = v554;
      v580 = v555;
      v577 = v552;
      v576 = v551;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467B9E0;
      v572 = (__int128)xmmword_22467B9F0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 5, 7, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xFD000000BDLL), xmmword_22467B9F0);
      v342 = (v332 & 0x40000000) == 0 && ((v327 | v475) & 1) == 0;
      if ((v449 & 1) == 0 && v342)
      {
        v573 = v553;
        v574 = v554;
        v575 = v555;
        v572 = v552;
        v571 = v551;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467BA00;
        v567 = (__int128)xmmword_22467BA10;
        *(_QWORD *)&v556 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 5, 7, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0x7D000000BDLL), xmmword_22467BA10);
      }
    }
    v343 = (v471 & 1) == 0 && ((v327 | v475) & 1) == 0;
    if (v343 && (v466 & 1) == 0)
    {
      v568 = v553;
      v569 = v554;
      v570 = v555;
      v567 = v552;
      v566 = v551;
      *(_QWORD *)&v556 = 0x101010100D0D0D0DLL;
      v561 = xmmword_22467BA20;
      v562 = xmmword_22467BA30;
      *(_QWORD *)&v546 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 5, 7, 2, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v546, COERCE_DOUBLE(0x7D000000BDLL), xmmword_22467BA30);
    }
  }
  v548 = v518;
  v549 = v519;
  v550 = v520;
  v547 = v517;
  v546 = v516;
  v344 = *((_DWORD *)v225 + 119);
  if (**v497)
  {
    v345 = *((_DWORD *)v225 + 183);
    v346 = *((_DWORD *)v225 + 127);
    v347 = *((_DWORD *)v225 + 191);
    v348 = v505[16];
    if ((v348 & 0x80000000) == 0)
      goto LABEL_927;
LABEL_1169:
    v350 = *(_DWORD *)(v226 + 564);
    if (**v501)
      goto LABEL_937;
    goto LABEL_931;
  }
  if ((v344 & 0x10000000) != 0)
    v418 = 0x40000000;
  else
    v418 = 0x80000000;
  if ((v344 & 0x20000000) != 0)
    v344 = v418;
  else
    v344 &= 0xCFFFFFFF;
  v419 = *((_DWORD *)v225 + 183);
  if ((v419 & 0x10000000) != 0)
    v420 = 0x40000000;
  else
    v420 = 0x80000000;
  if ((v419 & 0x20000000) != 0)
    v345 = v420;
  else
    v345 = v419 & 0xCFFFFFFF;
  v421 = *((_DWORD *)v225 + 127);
  if ((v421 & 0x10000000) != 0)
    v422 = 0x40000000;
  else
    v422 = 0x80000000;
  if ((v421 & 0x20000000) != 0)
    v346 = v422;
  else
    v346 = v421 & 0xCFFFFFFF;
  v423 = *((_DWORD *)v225 + 191);
  if ((v423 & 0x10000000) != 0)
    v424 = 0x40000000;
  else
    v424 = 0x80000000;
  if ((v423 & 0x20000000) != 0)
    v347 = v424;
  else
    v347 = v423 & 0xCFFFFFFF;
  v348 = v505[16];
  if ((v348 & 0x80000000) != 0)
    goto LABEL_1169;
LABEL_927:
  v349 = *(_QWORD *)(v226 + 2328);
  if (v348 >= (*(_QWORD *)(v226 + 2336) - v349) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v349 = *(_QWORD *)(v226 + 2328);
  }
  v350 = *(_DWORD *)(v349 + (v348 << 11) + 284);
  if (!**v501)
  {
LABEL_931:
    if ((v350 & 0x10000000) != 0)
      v351 = 0x40000000;
    else
      v351 = 0x80000000;
    if ((v350 & 0x20000000) != 0)
      v350 = v351;
    else
      v350 &= 0xCFFFFFFF;
  }
LABEL_937:
  v491 = v344 >> 30;
  v498 = v345 >> 30;
  v352 = v346 >> 30;
  v353 = v350 >> 30;
  v558 = v518;
  v559 = v519;
  v560 = v520;
  v557 = v517;
  v556 = v516;
  if ((v335 & 0x40000000) != 0)
  {
    v538 = v518;
    v539 = v519;
    v540 = v520;
    v537 = v517;
    v536 = v516;
    *(_QWORD *)&v591 = 0x10100D0D10100D0DLL;
    v531 = xmmword_22467BA40;
    v532 = (__int128)xmmword_22467BA50;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 6, 7, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xFE000000BELL), xmmword_22467BA50);
    if ((v481 & 0x40000000) == 0)
    {
      v533 = v518;
      v534 = v519;
      v535 = v520;
      v532 = v517;
      v531 = v516;
      *(_QWORD *)&v586 = 0x101010100D0D0D0DLL;
      v591 = xmmword_22467BA60;
      v592 = (__int128)xmmword_22467BA70;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 6, 7, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xFE000000BELL), xmmword_22467BA70);
      if (((v326 | v495) & 1) == 0)
      {
        v593 = v518;
        v594 = v519;
        v595 = v520;
        v591 = v516;
        v592 = v517;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467BA80;
        v587 = (__int128)xmmword_22467BA90;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 6, 7, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xFE000000BELL), xmmword_22467BA90);
        v354 = (v461 & 1) == 0 && ((v327 | v475) & 1) == 0;
        if ((v449 & 1) == 0 && v354)
        {
          v588 = v518;
          v589 = v519;
          v590 = v520;
          v587 = v517;
          v586 = v516;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467BAA0;
          v582 = (__int128)xmmword_22467BAB0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 6, 7, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x7E000000BELL), xmmword_22467BAB0);
        }
      }
      v355 = (v471 & 1) == 0 && ((v327 | v475) & 1) == 0;
      if (v355 && (v466 & 1) == 0)
      {
        v583 = v558;
        v584 = v559;
        v585 = v560;
        v582 = v557;
        v581 = v556;
        *(_QWORD *)&v571 = 0x10100D0D10100D0DLL;
        v576 = xmmword_22467BAC0;
        v577 = (__int128)xmmword_22467BAD0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 6, 7, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x7E000000BELL), xmmword_22467BAD0);
      }
    }
    if (((v495 | v498) & 1) == 0)
    {
      v578 = v558;
      v579 = v559;
      v580 = v560;
      v577 = v557;
      v576 = v556;
      *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
      v571 = xmmword_22467BAE0;
      v572 = (__int128)xmmword_22467BAF0;
      *(_QWORD *)&v561 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 6, 7, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xFE000000BELL), xmmword_22467BAF0);
      v356 = (v344 & 0x40000000) == 0 && ((v475 | v352) & 1) == 0;
      if ((v461 & 1) == 0 && v356)
      {
        v573 = v558;
        v574 = v559;
        v575 = v560;
        v572 = v557;
        v571 = v556;
        *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
        v566 = xmmword_22467BB00;
        v567 = (__int128)xmmword_22467BB10;
        *(_QWORD *)&v597[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 6, 7, 2, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)v597, COERCE_DOUBLE(0x7E000000BELL), xmmword_22467BB10);
      }
    }
    v357 = (v466 & 1) == 0 && ((v475 | v352) & 1) == 0;
    if (v357 && (v353 & 1) == 0)
    {
      v568 = v558;
      v569 = v559;
      v570 = v560;
      v567 = v557;
      v566 = v556;
      *(_QWORD *)&v597[0] = 0x101010100D0D0D0DLL;
      v561 = xmmword_22467BB20;
      v562 = xmmword_22467BB30;
      v598[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 6, 7, 2, (uint64_t)v597, (uint64_t)&v561, (uint64_t)v598, COERCE_DOUBLE(0x7E000000BELL), xmmword_22467BB30);
    }
  }
  v358 = v505[22];
  if ((v358 & 0x80000000) != 0)
  {
    v361 = *v501;
    v362 = *(_DWORD *)(v226 + 728);
    v363 = **v501;
    if (**v501)
      goto LABEL_970;
  }
  else
  {
    v359 = *(_QWORD *)(v226 + 2328);
    if (v358 >= (*(_QWORD *)(v226 + 2336) - v359) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v359 = *(_QWORD *)(v226 + 2328);
    }
    v360 = v359 + (v358 << 11);
    v361 = *v501;
    v362 = *(_DWORD *)(v360 + 448);
    v363 = **v501;
    if (**v501)
    {
LABEL_970:
      v364 = v505[22];
      if ((v364 & 0x80000000) == 0)
        goto LABEL_971;
LABEL_1179:
      v366 = *(_DWORD *)(v226 + 984);
      if (v363)
        goto LABEL_975;
      goto LABEL_1180;
    }
  }
  if ((v362 & 0x10000000) != 0)
    v425 = 0x40000000;
  else
    v425 = 0x80000000;
  if ((v362 & 0x20000000) != 0)
    v362 = v425;
  else
    v362 &= 0xCFFFFFFF;
  v364 = v505[22];
  if ((v364 & 0x80000000) != 0)
    goto LABEL_1179;
LABEL_971:
  v365 = *(_QWORD *)(v226 + 2328);
  if (v364 >= (*(_QWORD *)(v226 + 2336) - v365) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v365 = *(_QWORD *)(v226 + 2328);
    v361 = *v501;
    v363 = **v501;
  }
  v366 = *(_DWORD *)(v365 + (v364 << 11) + 704);
  if (v363)
  {
LABEL_975:
    v367 = v505[22];
    if ((v367 & 0x80000000) == 0)
      goto LABEL_976;
LABEL_1187:
    v369 = *(_DWORD *)(v226 + 760);
    if (v363)
      goto LABEL_980;
LABEL_1188:
    if ((v369 & 0x10000000) != 0)
      v427 = 0x40000000;
    else
      v427 = 0x80000000;
    if ((v369 & 0x20000000) != 0)
      v369 = v427;
    else
      v369 &= 0xCFFFFFFF;
    v370 = v505[22];
    if ((v370 & 0x80000000) != 0)
      goto LABEL_1198;
    goto LABEL_1195;
  }
LABEL_1180:
  if ((v366 & 0x10000000) != 0)
    v426 = 0x40000000;
  else
    v426 = 0x80000000;
  if ((v366 & 0x20000000) != 0)
    v366 = v426;
  else
    v366 &= 0xCFFFFFFF;
  v367 = v505[22];
  if ((v367 & 0x80000000) != 0)
    goto LABEL_1187;
LABEL_976:
  v368 = *(_QWORD *)(v226 + 2328);
  if (v367 >= (*(_QWORD *)(v226 + 2336) - v368) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v368 = *(_QWORD *)(v226 + 2328);
    v361 = *v501;
    v363 = **v501;
  }
  v369 = *(_DWORD *)(v368 + (v367 << 11) + 480);
  if (!v363)
    goto LABEL_1188;
LABEL_980:
  v370 = v505[22];
  if ((v370 & 0x80000000) != 0)
    goto LABEL_1198;
LABEL_1195:
  if (v370 >= (uint64_t)(*(_QWORD *)(v226 + 2336) - *(_QWORD *)(v226 + 2328)) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v361 = *v501;
  }
LABEL_1198:
  v428 = v505[25];
  if ((v428 & 0x80000000) != 0)
  {
    v430 = v335;
    v431 = *(_DWORD *)(v226 + 536);
    if (*v361)
      goto LABEL_1209;
    goto LABEL_1203;
  }
  v429 = *(_QWORD *)(v226 + 2328);
  if (v428 >= (*(_QWORD *)(v226 + 2336) - v429) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v429 = *(_QWORD *)(v226 + 2328);
    v361 = *v501;
  }
  v430 = v335;
  v431 = *(_DWORD *)(v429 + (v428 << 11) + 256);
  if (!*v361)
  {
LABEL_1203:
    if ((v431 & 0x10000000) != 0)
      v432 = 0x40000000;
    else
      v432 = 0x80000000;
    if ((v431 & 0x20000000) != 0)
      v431 = v432;
    else
      v431 &= 0xCFFFFFFF;
  }
LABEL_1209:
  v563 = v548;
  v564 = v549;
  v565 = v550;
  v562 = (float32x4_t)v547;
  v561 = v546;
  if ((v347 & 0x40000000) != 0)
  {
    v433 = (v430 & 0x40000000) == 0;
    v538 = v548;
    v539 = v549;
    v540 = v550;
    *(_QWORD *)&v591 = 0x1919161610100D0DLL;
    v537 = v547;
    v536 = v546;
    v531 = xmmword_22467BB40;
    v532 = (__int128)xmmword_22467BB50;
    *(_QWORD *)&v586 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v536, 7, 7, 2, (uint64_t)&v591, (uint64_t)&v531, (uint64_t)&v586, COERCE_DOUBLE(0xFF000000BFLL), xmmword_22467BB50);
    if (v433)
    {
      v533 = v548;
      v534 = v549;
      v535 = v550;
      *(_QWORD *)&v586 = 0x101010100D0D0D0DLL;
      v532 = v547;
      v531 = v546;
      v591 = xmmword_22467BB60;
      v592 = (__int128)xmmword_22467BB70;
      *(_QWORD *)&v581 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v531, 7, 7, 2, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0xFF000000BFLL), xmmword_22467BB70);
      if (((v495 | v498) & 1) == 0)
      {
        v593 = v548;
        v594 = v549;
        v595 = v550;
        v591 = v546;
        v592 = v547;
        *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
        v586 = xmmword_22467BB80;
        v587 = (__int128)xmmword_22467BB90;
        *(_QWORD *)&v576 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v591, 7, 7, 2, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xFF000000BFLL), xmmword_22467BB90);
        v434 = (v491 & 1) == 0 && ((v475 | v352) & 1) == 0;
        if ((v461 & 1) == 0 && v434)
        {
          v588 = v548;
          v589 = v549;
          v590 = v550;
          v587 = v547;
          v586 = v546;
          *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
          v581 = xmmword_22467BBA0;
          v582 = (__int128)xmmword_22467BBB0;
          *(_QWORD *)&v571 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v586, 7, 7, 2, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0x7F000000BFLL), xmmword_22467BBB0);
        }
      }
      v435 = (v466 & 1) == 0 && ((v475 | v352) & 1) == 0;
      if (v435 && (v353 & 1) == 0)
      {
        v583 = v563;
        v584 = v564;
        v585 = v565;
        *(_QWORD *)&v571 = 0x10100D0D10100D0DLL;
        v582 = (__int128)v562;
        v581 = v561;
        v576 = xmmword_22467BBC0;
        v577 = (__int128)xmmword_22467BBD0;
        *(_QWORD *)&v566 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v581, 7, 7, 2, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x7F000000BFLL), xmmword_22467BBD0);
      }
    }
    if (!(v366 & 0x40000000 | v498 & 1))
    {
      v578 = v563;
      v579 = v564;
      v580 = v565;
      *(_QWORD *)&v566 = 0x16160D0D16160D0DLL;
      v577 = (__int128)v562;
      v576 = v561;
      v571 = xmmword_22467BBE0;
      v572 = (__int128)xmmword_22467BBF0;
      *(_QWORD *)&v597[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v576, 7, 7, 2, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)v597, COERCE_DOUBLE(0xFF000000BFLL), xmmword_22467BBF0);
      v436 = (v362 & 0x40000000) == 0 && (v369 & 0x40000000 | v352 & 1) == 0;
      if ((v491 & 1) == 0 && v436)
      {
        v573 = v563;
        v574 = v564;
        v575 = v565;
        *(_QWORD *)&v597[0] = 0x161616160D0D0D0DLL;
        v572 = (__int128)v562;
        v571 = v561;
        v566 = xmmword_22467BC00;
        v567 = (__int128)xmmword_22467BC10;
        v598[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v571, 7, 7, 2, (uint64_t)v597, (uint64_t)&v566, (uint64_t)v598, COERCE_DOUBLE(0x7F000000BFLL), xmmword_22467BC10);
      }
    }
    v437 = (v353 & 1) == 0 && (v369 & 0x40000000 | v352 & 1) == 0;
    if (v437 && (v431 & 0x40000000) == 0)
    {
      v568 = v563;
      v569 = v564;
      v570 = v565;
      v598[0] = 0x1919101016160D0DLL;
      v567 = (__int128)v562;
      v566 = v561;
      v597[0] = xmmword_22467BC20;
      v597[1] = xmmword_22467BC30;
      v596 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v566, 7, 7, 2, (uint64_t)v598, (uint64_t)v597, (uint64_t)&v596, COERCE_DOUBLE(0x7F000000BFLL), xmmword_22467BC30);
    }
  }
  v531 = v452;
  *(_QWORD *)&v532 = v225;
  *(_QWORD *)&v591 = v226;
  *((_QWORD *)&v591 + 1) = v505;
  *(_QWORD *)&v592 = v501;
  v540 = v510;
  v539 = v509;
  v538 = v508;
  v536 = v506;
  v537 = v507;
  return sub_223DDF79C((unsigned __int8 ***)&v531, (uint64_t *)&v591, &v536);
}

unint64_t sub_223DDF79C(unsigned __int8 ***a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v6;
  _BYTE **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  _BYTE **v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned __int8 **v23;
  unsigned __int8 **v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int *v32;
  int v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  _BYTE **v43;
  unint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  unsigned int v47;
  uint64_t v48;
  _BYTE **v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  unsigned int v53;
  uint64_t v54;
  _BYTE **v55;
  unint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  unsigned int v59;
  uint64_t v60;
  _BYTE **v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  unsigned int v66;
  _BYTE *v67;
  unsigned int v68;
  _BYTE *v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unint64_t v73;
  uint64_t v74;
  unsigned int v75;
  int v76;
  unint64_t v77;
  uint64_t v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned __int8 **v92;
  _BOOL4 v93;
  _BOOL4 v94;
  _BOOL4 v95;
  _BOOL4 v96;
  unint64_t v97;
  uint64_t v98;
  unsigned int v99;
  int v100;
  unint64_t v101;
  uint64_t v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  _BOOL4 v114;
  _BOOL4 v115;
  _BOOL4 v116;
  _BOOL4 v117;
  unint64_t v118;
  uint64_t v119;
  unsigned int v120;
  int v121;
  unint64_t v122;
  uint64_t v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  _BOOL4 v136;
  _BOOL4 v137;
  _BOOL4 v138;
  _BOOL4 v139;
  unint64_t v140;
  uint64_t v141;
  unsigned int v142;
  int v143;
  unint64_t v144;
  uint64_t v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  _BOOL4 v157;
  _BOOL4 v158;
  _BOOL4 v159;
  _BOOL4 v160;
  unint64_t v161;
  uint64_t v162;
  unsigned int v163;
  int v164;
  unint64_t v165;
  uint64_t v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  _BOOL4 v178;
  _BOOL4 v179;
  _BOOL4 v180;
  _BOOL4 v181;
  unint64_t v182;
  uint64_t v183;
  unsigned int v184;
  int v185;
  unint64_t v186;
  uint64_t v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  _BOOL4 v199;
  _BOOL4 v200;
  _BOOL4 v201;
  _BOOL4 v202;
  unint64_t v203;
  uint64_t v204;
  unsigned int v205;
  int v206;
  unint64_t v207;
  uint64_t v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  _BOOL4 v222;
  _BOOL4 v223;
  _BOOL4 v224;
  _BOOL4 v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _BYTE *v229;
  unsigned int v230;
  int v231;
  unint64_t v232;
  uint64_t v233;
  unsigned int v234;
  unint64_t v235;
  uint64_t v236;
  unsigned int v237;
  unint64_t v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  uint64_t v242;
  unint64_t v243;
  unsigned int v244;
  unsigned int v245;
  _BOOL4 v246;
  _BOOL4 v247;
  _BOOL4 v248;
  _BOOL4 v249;
  _BOOL4 v250;
  unsigned __int8 **v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  unsigned int v267;
  unint64_t v268;
  uint64_t v269;
  unsigned int v270;
  int v271;
  unint64_t v272;
  uint64_t v273;
  unsigned int v274;
  unint64_t v275;
  uint64_t v276;
  unsigned int v277;
  unint64_t v278;
  uint64_t v279;
  unsigned int v280;
  unint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  _BOOL4 v302;
  _BOOL4 v303;
  _BOOL4 v304;
  _BOOL4 v305;
  _BOOL4 v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  _BOOL4 v321;
  _BOOL4 v322;
  _BOOL4 v323;
  _BOOL4 v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  int v331;
  unsigned int v332;
  int v333;
  unsigned int v334;
  int v335;
  unsigned int v336;
  int v337;
  unsigned int v338;
  _BOOL4 v339;
  _BOOL4 v340;
  _BOOL4 v341;
  _BOOL4 v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  int v355;
  _BOOL4 v356;
  _BOOL4 v357;
  _BOOL4 v358;
  _BOOL4 v359;
  _BOOL4 v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  int v373;
  unsigned int v374;
  unsigned int v375;
  _BOOL4 v376;
  _BOOL4 v377;
  _BOOL4 v378;
  _BOOL4 v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  int v386;
  unsigned int v387;
  int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  _BOOL4 v393;
  _BOOL4 v394;
  _BOOL4 v395;
  _BOOL4 v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  int v403;
  unsigned int v404;
  int v405;
  unsigned int v406;
  int v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  unsigned int v411;
  _BOOL4 v412;
  _BOOL4 v413;
  _BOOL4 v414;
  _BOOL4 v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  _BYTE *v419;
  unsigned int v420;
  int v421;
  unint64_t v422;
  uint64_t v423;
  unsigned int v424;
  unint64_t v425;
  uint64_t v426;
  unsigned int v427;
  unint64_t v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  uint64_t v432;
  unint64_t v433;
  unsigned int v434;
  unsigned int v435;
  _BOOL4 v436;
  _BOOL4 v437;
  _BOOL4 v438;
  _BOOL4 v439;
  _BOOL4 v440;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  __int128 v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned __int8 ***v466;
  unsigned int v467;
  unsigned int v468;
  _OWORD *v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  uint64_t v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned int v493;
  unsigned int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  _BYTE **v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  unsigned __int8 **v507;
  unsigned int v508;
  int v509;
  unsigned int v510;
  unsigned int v511;
  uint64_t v512;
  _BYTE **v513;
  uint64_t v514;
  __int128 v515;
  float32x4_t v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  float32x4_t v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  float32x4_t v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  float32x4_t v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  float32x4_t v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  float32x4_t v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  float32x4_t v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  float32x4_t v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  float32x4_t v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  float32x4_t v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  float32x4_t v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  float32x4_t v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  float32x4_t v576;
  __int128 v577;
  __int128 v578;
  __int128 v579;
  __int128 v580;
  float32x4_t v581;
  __int128 v582;
  __int128 v583;
  __int128 v584;
  __int128 v585;
  float32x4_t v586;
  __int128 v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  float32x4_t v591;
  __int128 v592;
  __int128 v593;
  __int128 v594;
  __int128 v595;
  float32x4_t v596;
  __int128 v597;
  __int128 v598;
  __int128 v599;
  uint64_t v600;
  _OWORD v601[2];
  _QWORD v602[3];

  v602[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v7 = (_BYTE **)a2[2];
  v8 = *(unsigned int *)(a2[1] + 40);
  if ((v8 & 0x80000000) != 0)
  {
    v10 = v6 + 280;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 2328);
    if (v8 >= (*(_QWORD *)(v6 + 2336) - v9) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v9 = *(_QWORD *)(v6 + 2328);
    }
    v10 = v9 + (v8 << 11);
  }
  v11 = *(_DWORD *)(v10 + 736);
  v12 = v11 & 0xCFFFFFFF;
  if ((v11 & 0x10000000) != 0)
    v13 = 0x40000000;
  else
    v13 = 0x80000000;
  if ((v11 & 0x20000000) != 0)
    v12 = v13;
  if (**v7)
    v14 = v11;
  else
    v14 = v12;
  v15 = *a2;
  v16 = (_BYTE **)a2[2];
  v17 = *(unsigned int *)(a2[1] + 40);
  v503 = v14;
  if ((v17 & 0x80000000) != 0)
  {
    v19 = v15 + 280;
  }
  else
  {
    v18 = *(_QWORD *)(v15 + 2328);
    if (v17 >= (*(_QWORD *)(v15 + 2336) - v18) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v18 = *(_QWORD *)(v15 + 2328);
    }
    v19 = v18 + (v17 << 11);
  }
  v20 = *(_DWORD *)(v19 + 992);
  v21 = v20 & 0xCFFFFFFF;
  if ((v20 & 0x10000000) != 0)
    v22 = 0x40000000;
  else
    v22 = 0x80000000;
  if ((v20 & 0x20000000) != 0)
    v21 = v22;
  if (!**v16)
    v20 = v21;
  v498 = v20;
  v23 = a1[2];
  v24 = *a1;
  v25 = *((_DWORD *)v23 + 128);
  if (***a1)
  {
    v26 = *((_DWORD *)v23 + 192);
    v27 = *((_DWORD *)v23 + 136);
  }
  else
  {
    if ((v25 & 0x20000000) != 0)
      v25 *= 4;
    v28 = *((_DWORD *)v23 + 192);
    if ((v28 & 0x20000000) != 0)
      v26 = 4 * v28;
    else
      v26 = *((_DWORD *)v23 + 192);
    v29 = *((_DWORD *)v23 + 136);
    if ((v29 & 0x10000000) != 0)
      v30 = 0x40000000;
    else
      v30 = 0x80000000;
    if ((v29 & 0x20000000) != 0)
      v27 = v30;
    else
      v27 = v29 & 0xCFFFFFFF;
  }
  v31 = *a2;
  v32 = (unsigned int *)a2[1];
  v513 = (_BYTE **)a2[2];
  v466 = a1;
  v469 = a3;
  v509 = v26;
  v492 = v27;
  if ((v26 & 0x40000000) == 0)
  {
    v477 = 0;
    v33 = 0;
    v34 = 0;
    v486 = 0;
    goto LABEL_110;
  }
  v35 = v32[1];
  if ((v35 & 0x80000000) != 0)
  {
    v37 = v31 + 280;
  }
  else
  {
    v36 = *(_QWORD *)(v31 + 2328);
    if (v35 >= (*(_QWORD *)(v31 + 2336) - v36) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v36 = *(_QWORD *)(v31 + 2328);
    }
    v37 = v36 + (v35 << 11);
  }
  v38 = *(_DWORD *)(v37 + 764);
  v39 = v38 & 0xCFFFFFFF;
  if ((v38 & 0x10000000) != 0)
    v40 = 0x40000000;
  else
    v40 = 0x80000000;
  if ((v38 & 0x20000000) != 0)
    v39 = v40;
  if (**v513)
    v41 = v38;
  else
    v41 = v39;
  v42 = *a2;
  v43 = (_BYTE **)a2[2];
  v44 = *(unsigned int *)(a2[1] + 4);
  if ((v44 & 0x80000000) != 0)
  {
    v65 = *v43;
    v47 = *(_DWORD *)(v42 + 1300);
    if (*v65)
      goto LABEL_62;
  }
  else
  {
    v45 = *(_QWORD *)(v42 + 2328);
    if (v44 >= (*(_QWORD *)(v42 + 2336) - v45) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v45 = *(_QWORD *)(v42 + 2328);
    }
    v46 = *v43;
    v47 = *(_DWORD *)(v45 + (v44 << 11) + 1020);
    if (*v46)
    {
LABEL_62:
      v48 = *a2;
      v49 = (_BYTE **)a2[2];
      v50 = *(unsigned int *)(a2[1] + 16);
      if ((v50 & 0x80000000) == 0)
        goto LABEL_63;
LABEL_85:
      v67 = *v49;
      v53 = *(_DWORD *)(v48 + 820);
      if (*v67)
        goto LABEL_67;
      goto LABEL_86;
    }
  }
  if ((v47 & 0x10000000) != 0)
    v66 = 0x40000000;
  else
    v66 = 0x80000000;
  if ((v47 & 0x20000000) != 0)
    v47 = v66;
  else
    v47 &= 0xCFFFFFFF;
  v48 = *a2;
  v49 = (_BYTE **)a2[2];
  v50 = *(unsigned int *)(a2[1] + 16);
  if ((v50 & 0x80000000) != 0)
    goto LABEL_85;
LABEL_63:
  v51 = *(_QWORD *)(v48 + 2328);
  if (v50 >= (*(_QWORD *)(v48 + 2336) - v51) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_1299;
    }
    v51 = *(_QWORD *)(v48 + 2328);
  }
  v52 = *v49;
  v53 = *(_DWORD *)(v51 + (v50 << 11) + 540);
  if (*v52)
  {
LABEL_67:
    v54 = *a2;
    v55 = (_BYTE **)a2[2];
    v56 = *(unsigned int *)(a2[1] + 16);
    if ((v56 & 0x80000000) == 0)
      goto LABEL_68;
LABEL_93:
    v69 = *v55;
    v59 = *(_DWORD *)(v54 + 1076);
    if (*v69)
      goto LABEL_72;
LABEL_94:
    if ((v59 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v59 & 0x20000000) != 0)
      v59 = v70;
    else
      v59 &= 0xCFFFFFFF;
    v60 = *a2;
    v61 = (_BYTE **)a2[2];
    v62 = *(unsigned int *)(a2[1] + 16);
    if ((v62 & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_101;
  }
LABEL_86:
  if ((v53 & 0x10000000) != 0)
    v68 = 0x40000000;
  else
    v68 = 0x80000000;
  if ((v53 & 0x20000000) != 0)
    v53 = v68;
  else
    v53 &= 0xCFFFFFFF;
  v54 = *a2;
  v55 = (_BYTE **)a2[2];
  v56 = *(unsigned int *)(a2[1] + 16);
  if ((v56 & 0x80000000) != 0)
    goto LABEL_93;
LABEL_68:
  v57 = *(_QWORD *)(v54 + 2328);
  if (v56 >= (*(_QWORD *)(v54 + 2336) - v57) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_1299;
    }
    v57 = *(_QWORD *)(v54 + 2328);
  }
  v58 = *v55;
  v59 = *(_DWORD *)(v57 + (v56 << 11) + 796);
  if (!*v58)
    goto LABEL_94;
LABEL_72:
  v60 = *a2;
  v61 = (_BYTE **)a2[2];
  v62 = *(unsigned int *)(a2[1] + 16);
  if ((v62 & 0x80000000) == 0)
  {
LABEL_73:
    v63 = *(_QWORD *)(v60 + 2328);
    if (v62 >= (*(_QWORD *)(v60 + 2336) - v63) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v63 = *(_QWORD *)(v60 + 2328);
    }
    v64 = v63 + (v62 << 11);
    goto LABEL_102;
  }
LABEL_101:
  v64 = v60 + 280;
LABEL_102:
  LODWORD(v477) = (v41 >> 30) & 1;
  v486 = (v47 >> 30) & 1;
  v34 = (v53 >> 30) & 1;
  v33 = (v59 >> 30) & 1;
  v71 = *(_DWORD *)(v64 + 572);
  if (!**v61)
  {
    if ((v71 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v71 & 0x20000000) != 0)
      v71 = v72;
    else
      v71 &= 0xCFFFFFFF;
  }
  HIDWORD(v477) = (v71 >> 30) & 1;
  a3 = v469;
  v24 = *v466;
  v23 = v466[2];
  v31 = *a2;
  v32 = (unsigned int *)a2[1];
  v513 = (_BYTE **)a2[2];
LABEL_110:
  v522 = a3[2];
  v523 = a3[3];
  v524 = a3[4];
  v520 = *a3;
  v521 = *((float32x4_t *)a3 + 1);
  v73 = v32[10];
  if ((v73 & 0x80000000) != 0)
  {
    v75 = *(_DWORD *)(v31 + 1020);
    v76 = **v513;
    if (**v513)
      goto LABEL_115;
  }
  else
  {
    v74 = *(_QWORD *)(v31 + 2328);
    if (v73 >= (*(_QWORD *)(v31 + 2336) - v74) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v74 = *(_QWORD *)(v31 + 2328);
    }
    v75 = *(_DWORD *)(v74 + (v73 << 11) + 740);
    v76 = **v513;
    if (**v513)
    {
LABEL_115:
      v77 = v32[10];
      if ((v77 & 0x80000000) == 0)
        goto LABEL_116;
LABEL_136:
      v79 = *(_DWORD *)(v31 + 1276);
      if (!v76)
        goto LABEL_120;
      goto LABEL_126;
    }
  }
  if ((v75 & 0x10000000) != 0)
    v83 = 0x40000000;
  else
    v83 = 0x80000000;
  if ((v75 & 0x20000000) != 0)
    v75 = v83;
  else
    v75 &= 0xCFFFFFFF;
  v77 = v32[10];
  if ((v77 & 0x80000000) != 0)
    goto LABEL_136;
LABEL_116:
  v78 = *(_QWORD *)(v31 + 2328);
  if (v77 < (*(_QWORD *)(v31 + 2336) - v78) >> 11)
    goto LABEL_119;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
LABEL_1299:
    abort();
  }
  v78 = *(_QWORD *)(v31 + 2328);
  v76 = **v513;
LABEL_119:
  v79 = *(_DWORD *)(v78 + (v77 << 11) + 996);
  if (!v76)
  {
LABEL_120:
    if ((v79 & 0x10000000) != 0)
      v80 = 0x40000000;
    else
      v80 = 0x80000000;
    if ((v79 & 0x20000000) != 0)
      v79 = v80;
    else
      v79 &= 0xCFFFFFFF;
  }
LABEL_126:
  v446 = v503 >> 30;
  v81 = *((_DWORD *)v23 + 129);
  if (**v24)
  {
    v504 = *((_DWORD *)v23 + 193);
    v82 = *((_DWORD *)v23 + 137);
  }
  else
  {
    if ((v81 & 0x10000000) != 0)
      v84 = 0x40000000;
    else
      v84 = 0x80000000;
    if ((v81 & 0x20000000) != 0)
      v81 = v84;
    else
      v81 &= 0xCFFFFFFF;
    v85 = *((_DWORD *)v23 + 193);
    if ((v85 & 0x10000000) != 0)
      v86 = 0x40000000;
    else
      v86 = 0x80000000;
    if ((v85 & 0x20000000) != 0)
      v87 = v86;
    else
      v87 = v85 & 0xCFFFFFFF;
    v504 = v87;
    v88 = *((_DWORD *)v23 + 137);
    if ((v88 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v88 & 0x20000000) != 0)
      v82 = v89;
    else
      v82 = v88 & 0xCFFFFFFF;
  }
  v454 = v75 >> 30;
  v472 = v498 >> 30;
  v90 = v25 >> 30;
  v91 = v492 >> 30;
  v493 = v81 >> 30;
  v499 = v79 >> 30;
  v461 = v82 >> 30;
  v92 = v24;
  if ((v509 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467BC40;
    v536 = xmmword_22467BC50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 0, 0, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x100000000C0), xmmword_22467BC50);
    if (!v33)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      *(_QWORD *)&v590 = 0x4040D0D04040D0DLL;
      v536 = v521;
      v535 = v520;
      v595 = xmmword_22467BC60;
      v596 = xmmword_22467BC70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 0, 0, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x100000000C0), xmmword_22467BC70);
      if (!(v486 | v472 & 1))
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        *(_QWORD *)&v585 = 0x10104040A0A0D0DLL;
        v595 = v520;
        v596 = v521;
        v590 = xmmword_22467BC80;
        v591 = xmmword_22467BC90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 0, 0, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x100000000C0), xmmword_22467BC90);
        v93 = (v446 & 1) == 0 && (v34 | v90 & 1) == 0;
        if (!(_DWORD)v477 && v93)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0x1010A0A04040D0DLL;
          v585 = xmmword_22467BCA0;
          v586 = xmmword_22467BCB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 0, 0, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x80000000C0), xmmword_22467BCB0);
        }
      }
      if (HIDWORD(v477))
        v94 = 0;
      else
        v94 = (v34 | v90 & 1) == 0;
      if (v94 && (v91 & 1) == 0)
      {
        v587 = v522;
        v588 = v523;
        v589 = v524;
        *(_QWORD *)&v575 = 0x40404040D0D0D0DLL;
        v586 = v521;
        v585 = v520;
        v580 = xmmword_22467BCC0;
        v581 = xmmword_22467BCD0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 0, 0, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x80000000C0), xmmword_22467BCD0);
      }
    }
    if (((v472 | v499) & 1) == 0)
    {
      v582 = v522;
      v583 = v523;
      v584 = v524;
      v581 = v521;
      v580 = v520;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_22467BCE0;
      v576 = xmmword_22467BCF0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 0, 0, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x100000000C0), xmmword_22467BCF0);
      v95 = (v454 & 1) == 0 && ((v90 | v493) & 1) == 0;
      if ((v446 & 1) == 0 && v95)
      {
        v577 = v522;
        v578 = v523;
        v579 = v524;
        v576 = v521;
        v575 = v520;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_22467BD00;
        v571 = xmmword_22467BD10;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 0, 0, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x80000000C0), xmmword_22467BD10);
      }
    }
    v96 = (v91 & 1) == 0 && ((v90 | v493) & 1) == 0;
    if (v96 && (v461 & 1) == 0)
    {
      v572 = v522;
      v573 = v523;
      v574 = v524;
      v571 = v521;
      v570 = v520;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467BD20;
      v566 = xmmword_22467BD30;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 0, 0, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x80000000C0), xmmword_22467BD30);
    }
  }
  v97 = v32[10];
  if ((v97 & 0x80000000) != 0)
  {
    v99 = *(_DWORD *)(v31 + 1024);
    v100 = **v513;
    if (**v513)
      goto LABEL_189;
  }
  else
  {
    v98 = *(_QWORD *)(v31 + 2328);
    if (v97 >= (*(_QWORD *)(v31 + 2336) - v98) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v98 = *(_QWORD *)(v31 + 2328);
    }
    v99 = *(_DWORD *)(v98 + (v97 << 11) + 744);
    v100 = **v513;
    if (**v513)
    {
LABEL_189:
      v101 = v32[10];
      if ((v101 & 0x80000000) == 0)
        goto LABEL_190;
LABEL_204:
      v103 = *(_DWORD *)(v31 + 1280);
      if (v100)
        goto LABEL_194;
LABEL_205:
      if ((v103 & 0x10000000) != 0)
        v107 = 0x40000000;
      else
        v107 = 0x80000000;
      if ((v103 & 0x20000000) != 0)
        v103 = v107;
      else
        v103 &= 0xCFFFFFFF;
      v104 = *((_DWORD *)v23 + 130);
      if (**v92)
        goto LABEL_195;
      goto LABEL_212;
    }
  }
  if ((v99 & 0x10000000) != 0)
    v106 = 0x40000000;
  else
    v106 = 0x80000000;
  if ((v99 & 0x20000000) != 0)
    v99 = v106;
  else
    v99 &= 0xCFFFFFFF;
  v101 = v32[10];
  if ((v101 & 0x80000000) != 0)
    goto LABEL_204;
LABEL_190:
  v102 = *(_QWORD *)(v31 + 2328);
  if (v101 >= (*(_QWORD *)(v31 + 2336) - v102) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v102 = *(_QWORD *)(v31 + 2328);
    v100 = **v513;
  }
  v103 = *(_DWORD *)(v102 + (v101 << 11) + 1000);
  if (!v100)
    goto LABEL_205;
LABEL_194:
  v104 = *((_DWORD *)v23 + 130);
  if (**v92)
  {
LABEL_195:
    v487 = *((_DWORD *)v23 + 194);
    v105 = *((_DWORD *)v23 + 138);
    goto LABEL_230;
  }
LABEL_212:
  if ((v104 & 0x10000000) != 0)
    v108 = 0x40000000;
  else
    v108 = 0x80000000;
  if ((v104 & 0x20000000) != 0)
    v104 = v108;
  else
    v104 &= 0xCFFFFFFF;
  v109 = *((_DWORD *)v23 + 194);
  if ((v109 & 0x10000000) != 0)
    v110 = 0x40000000;
  else
    v110 = 0x80000000;
  if ((v109 & 0x20000000) != 0)
    v111 = v110;
  else
    v111 = v109 & 0xCFFFFFFF;
  v487 = v111;
  v112 = *((_DWORD *)v23 + 138);
  if ((v112 & 0x10000000) != 0)
    v113 = 0x40000000;
  else
    v113 = 0x80000000;
  if ((v112 & 0x20000000) != 0)
    v105 = v113;
  else
    v105 = v112 & 0xCFFFFFFF;
LABEL_230:
  v450 = v99 >> 30;
  v478 = v104 >> 30;
  v482 = v103 >> 30;
  v458 = v105 >> 30;
  if ((v504 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467BD40;
    v536 = xmmword_22467BD50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 1, 0, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x101000000C1), xmmword_22467BD50);
    if ((v509 & 0x40000000) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467BD60;
      v596 = xmmword_22467BD70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 1, 0, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x101000000C1), xmmword_22467BD70);
      if (((v472 | v499) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_22467BD80;
        v591 = xmmword_22467BD90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 1, 0, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x101000000C1), xmmword_22467BD90);
        v114 = (v454 & 1) == 0 && ((v90 | v493) & 1) == 0;
        if ((v446 & 1) == 0 && v114)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_22467BDA0;
          v586 = xmmword_22467BDB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 1, 0, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x81000000C1), xmmword_22467BDB0);
        }
      }
      v115 = (v91 & 1) == 0 && ((v90 | v493) & 1) == 0;
      if (v115 && (v461 & 1) == 0)
      {
        v587 = v522;
        v588 = v523;
        v589 = v524;
        v586 = v521;
        v585 = v520;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467BDC0;
        v581 = xmmword_22467BDD0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 1, 0, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x81000000C1), xmmword_22467BDD0);
      }
    }
    if (((v499 | v482) & 1) == 0)
    {
      v582 = v522;
      v583 = v523;
      v584 = v524;
      v581 = v521;
      v580 = v520;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_22467BDE0;
      v576 = xmmword_22467BDF0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 1, 0, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x101000000C1), xmmword_22467BDF0);
      v116 = (v99 & 0x40000000) == 0 && ((v493 | v478) & 1) == 0;
      if ((v454 & 1) == 0 && v116)
      {
        v577 = v522;
        v578 = v523;
        v579 = v524;
        v576 = v521;
        v575 = v520;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_22467BE00;
        v571 = xmmword_22467BE10;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 1, 0, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x81000000C1), xmmword_22467BE10);
      }
    }
    v117 = (v461 & 1) == 0 && ((v493 | v478) & 1) == 0;
    if (v117 && (v458 & 1) == 0)
    {
      v572 = v522;
      v573 = v523;
      v574 = v524;
      v571 = v521;
      v570 = v520;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467BE20;
      v566 = xmmword_22467BE30;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 1, 0, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x81000000C1), xmmword_22467BE30);
    }
  }
  v118 = v32[10];
  if ((v118 & 0x80000000) != 0)
  {
    v120 = *(_DWORD *)(v31 + 1028);
    v121 = **v513;
    if (**v513)
      goto LABEL_263;
  }
  else
  {
    v119 = *(_QWORD *)(v31 + 2328);
    if (v118 >= (*(_QWORD *)(v31 + 2336) - v119) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v119 = *(_QWORD *)(v31 + 2328);
    }
    v120 = *(_DWORD *)(v119 + (v118 << 11) + 748);
    v121 = **v513;
    if (**v513)
    {
LABEL_263:
      v122 = v32[10];
      if ((v122 & 0x80000000) == 0)
        goto LABEL_264;
LABEL_278:
      v124 = *(_DWORD *)(v31 + 1284);
      if (v121)
        goto LABEL_268;
LABEL_279:
      if ((v124 & 0x10000000) != 0)
        v129 = 0x40000000;
      else
        v129 = 0x80000000;
      if ((v124 & 0x20000000) != 0)
        v124 = v129;
      else
        v124 &= 0xCFFFFFFF;
      v125 = *((_DWORD *)v23 + 131);
      if (**v92)
        goto LABEL_269;
      goto LABEL_286;
    }
  }
  if ((v120 & 0x10000000) != 0)
    v128 = 0x40000000;
  else
    v128 = 0x80000000;
  if ((v120 & 0x20000000) != 0)
    v120 = v128;
  else
    v120 &= 0xCFFFFFFF;
  v122 = v32[10];
  if ((v122 & 0x80000000) != 0)
    goto LABEL_278;
LABEL_264:
  v123 = *(_QWORD *)(v31 + 2328);
  if (v122 >= (*(_QWORD *)(v31 + 2336) - v123) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v123 = *(_QWORD *)(v31 + 2328);
    v121 = **v513;
  }
  v124 = *(_DWORD *)(v123 + (v122 << 11) + 1004);
  if (!v121)
    goto LABEL_279;
LABEL_268:
  v125 = *((_DWORD *)v23 + 131);
  if (**v92)
  {
LABEL_269:
    v126 = *((_DWORD *)v23 + 195);
    v127 = *((_DWORD *)v23 + 139);
    goto LABEL_304;
  }
LABEL_286:
  if ((v125 & 0x10000000) != 0)
    v130 = 0x40000000;
  else
    v130 = 0x80000000;
  if ((v125 & 0x20000000) != 0)
    v125 = v130;
  else
    v125 &= 0xCFFFFFFF;
  v131 = *((_DWORD *)v23 + 195);
  if ((v131 & 0x10000000) != 0)
    v132 = 0x40000000;
  else
    v132 = 0x80000000;
  if ((v131 & 0x20000000) != 0)
    v126 = v132;
  else
    v126 = v131 & 0xCFFFFFFF;
  v133 = *((_DWORD *)v23 + 139);
  if ((v133 & 0x10000000) != 0)
    v134 = 0x40000000;
  else
    v134 = 0x80000000;
  if ((v133 & 0x20000000) != 0)
    v127 = v134;
  else
    v127 = v133 & 0xCFFFFFFF;
LABEL_304:
  v447 = v120 >> 30;
  v510 = v124 >> 30;
  v473 = v125 >> 30;
  v135 = v127 >> 30;
  if ((v487 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467BE40;
    v536 = xmmword_22467BE50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 2, 0, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x102000000C2), xmmword_22467BE50);
    if ((v504 & 0x40000000) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467BE60;
      v596 = xmmword_22467BE70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 2, 0, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x102000000C2), xmmword_22467BE70);
      if (((v499 | v482) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_22467BE80;
        v591 = xmmword_22467BE90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 2, 0, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x102000000C2), xmmword_22467BE90);
        v136 = (v450 & 1) == 0 && ((v493 | v478) & 1) == 0;
        if ((v454 & 1) == 0 && v136)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_22467BEA0;
          v586 = xmmword_22467BEB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 2, 0, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x82000000C2), xmmword_22467BEB0);
        }
      }
      v137 = (v461 & 1) == 0 && ((v493 | v478) & 1) == 0;
      if (v137 && (v458 & 1) == 0)
      {
        v587 = v522;
        v588 = v523;
        v589 = v524;
        v586 = v521;
        v585 = v520;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467BEC0;
        v581 = xmmword_22467BED0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 2, 0, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x82000000C2), xmmword_22467BED0);
      }
    }
    if (((v482 | v510) & 1) == 0)
    {
      v582 = v522;
      v583 = v523;
      v584 = v524;
      v581 = v521;
      v580 = v520;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_22467BEE0;
      v576 = xmmword_22467BEF0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 2, 0, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x102000000C2), xmmword_22467BEF0);
      v138 = (v120 & 0x40000000) == 0 && ((v478 | v473) & 1) == 0;
      if ((v450 & 1) == 0 && v138)
      {
        v577 = v522;
        v578 = v523;
        v579 = v524;
        v576 = v521;
        v575 = v520;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_22467BF00;
        v571 = xmmword_22467BF10;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 2, 0, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x82000000C2), xmmword_22467BF10);
      }
    }
    v139 = (v458 & 1) == 0 && ((v478 | v473) & 1) == 0;
    if (v139 && (v135 & 1) == 0)
    {
      v572 = v522;
      v573 = v523;
      v574 = v524;
      v571 = v521;
      v570 = v520;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467BF20;
      v566 = xmmword_22467BF30;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 2, 0, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x82000000C2), xmmword_22467BF30);
    }
  }
  v140 = v32[10];
  if ((v140 & 0x80000000) != 0)
  {
    v142 = *(_DWORD *)(v31 + 1032);
    v143 = **v513;
    if (**v513)
      goto LABEL_337;
  }
  else
  {
    v141 = *(_QWORD *)(v31 + 2328);
    if (v140 >= (*(_QWORD *)(v31 + 2336) - v141) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v141 = *(_QWORD *)(v31 + 2328);
    }
    v142 = *(_DWORD *)(v141 + (v140 << 11) + 752);
    v143 = **v513;
    if (**v513)
    {
LABEL_337:
      v144 = v32[10];
      if ((v144 & 0x80000000) == 0)
        goto LABEL_338;
LABEL_352:
      v146 = *(_DWORD *)(v31 + 1288);
      if (v143)
        goto LABEL_342;
LABEL_353:
      if ((v146 & 0x10000000) != 0)
        v151 = 0x40000000;
      else
        v151 = 0x80000000;
      if ((v146 & 0x20000000) != 0)
        v146 = v151;
      else
        v146 &= 0xCFFFFFFF;
      v147 = *((_DWORD *)v23 + 132);
      if (**v92)
        goto LABEL_343;
      goto LABEL_360;
    }
  }
  if ((v142 & 0x10000000) != 0)
    v150 = 0x40000000;
  else
    v150 = 0x80000000;
  if ((v142 & 0x20000000) != 0)
    v142 = v150;
  else
    v142 &= 0xCFFFFFFF;
  v144 = v32[10];
  if ((v144 & 0x80000000) != 0)
    goto LABEL_352;
LABEL_338:
  v145 = *(_QWORD *)(v31 + 2328);
  if (v144 >= (*(_QWORD *)(v31 + 2336) - v145) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v145 = *(_QWORD *)(v31 + 2328);
    v143 = **v513;
  }
  v146 = *(_DWORD *)(v145 + (v144 << 11) + 1008);
  if (!v143)
    goto LABEL_353;
LABEL_342:
  v147 = *((_DWORD *)v23 + 132);
  if (**v92)
  {
LABEL_343:
    v148 = *((_DWORD *)v23 + 196);
    v149 = *((_DWORD *)v23 + 140);
    goto LABEL_378;
  }
LABEL_360:
  if ((v147 & 0x10000000) != 0)
    v152 = 0x40000000;
  else
    v152 = 0x80000000;
  if ((v147 & 0x20000000) != 0)
    v147 = v152;
  else
    v147 &= 0xCFFFFFFF;
  v153 = *((_DWORD *)v23 + 196);
  if ((v153 & 0x10000000) != 0)
    v154 = 0x40000000;
  else
    v154 = 0x80000000;
  if ((v153 & 0x20000000) != 0)
    v148 = v154;
  else
    v148 = v153 & 0xCFFFFFFF;
  v155 = *((_DWORD *)v23 + 140);
  if ((v155 & 0x10000000) != 0)
    v156 = 0x40000000;
  else
    v156 = 0x80000000;
  if ((v155 & 0x20000000) != 0)
    v149 = v156;
  else
    v149 = v155 & 0xCFFFFFFF;
LABEL_378:
  v455 = v142 >> 30;
  v505 = v146 >> 30;
  v500 = v147 >> 30;
  v462 = v149 >> 30;
  if ((v126 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467BF40;
    v536 = xmmword_22467BF50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 3, 0, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x103000000C3), xmmword_22467BF50);
    if ((v487 & 0x40000000) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467BF60;
      v596 = xmmword_22467BF70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 3, 0, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x103000000C3), xmmword_22467BF70);
      if (((v482 | v510) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_22467BF80;
        v591 = xmmword_22467BF90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 3, 0, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x103000000C3), xmmword_22467BF90);
        v157 = (v447 & 1) == 0 && ((v478 | v473) & 1) == 0;
        if ((v450 & 1) == 0 && v157)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_22467BFA0;
          v586 = xmmword_22467BFB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 3, 0, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x83000000C3), xmmword_22467BFB0);
        }
      }
      v158 = (v458 & 1) == 0 && ((v478 | v473) & 1) == 0;
      if (v158 && (v135 & 1) == 0)
      {
        v587 = v522;
        v588 = v523;
        v589 = v524;
        v586 = v521;
        v585 = v520;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467BFC0;
        v581 = xmmword_22467BFD0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 3, 0, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x83000000C3), xmmword_22467BFD0);
      }
    }
    if (((v510 | v505) & 1) == 0)
    {
      v582 = v522;
      v583 = v523;
      v584 = v524;
      v581 = v521;
      v580 = v520;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_22467BFE0;
      v576 = xmmword_22467BFF0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 3, 0, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x103000000C3), xmmword_22467BFF0);
      v159 = (v142 & 0x40000000) == 0 && ((v473 | v500) & 1) == 0;
      if ((v447 & 1) == 0 && v159)
      {
        v577 = v522;
        v578 = v523;
        v579 = v524;
        v576 = v521;
        v575 = v520;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_22467C000;
        v571 = xmmword_22467C010;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 3, 0, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x83000000C3), xmmword_22467C010);
      }
    }
    v160 = (v135 & 1) == 0 && ((v473 | v500) & 1) == 0;
    if (v160 && (v462 & 1) == 0)
    {
      v572 = v522;
      v573 = v523;
      v574 = v524;
      v571 = v521;
      v570 = v520;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467C020;
      v566 = xmmword_22467C030;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 3, 0, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x83000000C3), xmmword_22467C030);
    }
  }
  v161 = v32[10];
  if ((v161 & 0x80000000) != 0)
  {
    v163 = *(_DWORD *)(v31 + 1036);
    v164 = **v513;
    if (**v513)
      goto LABEL_411;
  }
  else
  {
    v162 = *(_QWORD *)(v31 + 2328);
    if (v161 >= (*(_QWORD *)(v31 + 2336) - v162) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v162 = *(_QWORD *)(v31 + 2328);
    }
    v163 = *(_DWORD *)(v162 + (v161 << 11) + 756);
    v164 = **v513;
    if (**v513)
    {
LABEL_411:
      v165 = v32[10];
      if ((v165 & 0x80000000) == 0)
        goto LABEL_412;
LABEL_426:
      v167 = *(_DWORD *)(v31 + 1292);
      if (v164)
        goto LABEL_416;
LABEL_427:
      if ((v167 & 0x10000000) != 0)
        v172 = 0x40000000;
      else
        v172 = 0x80000000;
      if ((v167 & 0x20000000) != 0)
        v167 = v172;
      else
        v167 &= 0xCFFFFFFF;
      v168 = *((_DWORD *)v23 + 133);
      if (**v92)
        goto LABEL_417;
      goto LABEL_434;
    }
  }
  if ((v163 & 0x10000000) != 0)
    v171 = 0x40000000;
  else
    v171 = 0x80000000;
  if ((v163 & 0x20000000) != 0)
    v163 = v171;
  else
    v163 &= 0xCFFFFFFF;
  v165 = v32[10];
  if ((v165 & 0x80000000) != 0)
    goto LABEL_426;
LABEL_412:
  v166 = *(_QWORD *)(v31 + 2328);
  if (v165 >= (*(_QWORD *)(v31 + 2336) - v166) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v166 = *(_QWORD *)(v31 + 2328);
    v164 = **v513;
  }
  v167 = *(_DWORD *)(v166 + (v165 << 11) + 1012);
  if (!v164)
    goto LABEL_427;
LABEL_416:
  v168 = *((_DWORD *)v23 + 133);
  if (**v92)
  {
LABEL_417:
    v169 = *((_DWORD *)v23 + 197);
    v170 = *((_DWORD *)v23 + 141);
    goto LABEL_452;
  }
LABEL_434:
  if ((v168 & 0x10000000) != 0)
    v173 = 0x40000000;
  else
    v173 = 0x80000000;
  if ((v168 & 0x20000000) != 0)
    v168 = v173;
  else
    v168 &= 0xCFFFFFFF;
  v174 = *((_DWORD *)v23 + 197);
  if ((v174 & 0x10000000) != 0)
    v175 = 0x40000000;
  else
    v175 = 0x80000000;
  if ((v174 & 0x20000000) != 0)
    v169 = v175;
  else
    v169 = v174 & 0xCFFFFFFF;
  v176 = *((_DWORD *)v23 + 141);
  if ((v176 & 0x10000000) != 0)
    v177 = 0x40000000;
  else
    v177 = 0x80000000;
  if ((v176 & 0x20000000) != 0)
    v170 = v177;
  else
    v170 = v176 & 0xCFFFFFFF;
LABEL_452:
  v451 = v163 >> 30;
  v488 = v168 >> 30;
  v494 = v167 >> 30;
  v459 = v170 >> 30;
  if ((v148 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467C040;
    v536 = xmmword_22467C050;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 4, 0, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x104000000C4), xmmword_22467C050);
    if ((v126 & 0x40000000) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467C060;
      v596 = xmmword_22467C070;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 4, 0, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x104000000C4), xmmword_22467C070);
      if (((v510 | v505) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_22467C080;
        v591 = xmmword_22467C090;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 4, 0, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x104000000C4), xmmword_22467C090);
        v178 = (v455 & 1) == 0 && ((v473 | v500) & 1) == 0;
        if ((v447 & 1) == 0 && v178)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_22467C0A0;
          v586 = xmmword_22467C0B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 4, 0, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x84000000C4), xmmword_22467C0B0);
        }
      }
      v179 = (v135 & 1) == 0 && ((v473 | v500) & 1) == 0;
      if (v179 && (v462 & 1) == 0)
      {
        v587 = v522;
        v588 = v523;
        v589 = v524;
        v586 = v521;
        v585 = v520;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467C0C0;
        v581 = xmmword_22467C0D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 4, 0, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x84000000C4), xmmword_22467C0D0);
      }
    }
    if (((v505 | v494) & 1) == 0)
    {
      v582 = v522;
      v583 = v523;
      v584 = v524;
      v581 = v521;
      v580 = v520;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_22467C0E0;
      v576 = xmmword_22467C0F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 4, 0, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x104000000C4), xmmword_22467C0F0);
      v180 = (v163 & 0x40000000) == 0 && ((v500 | v488) & 1) == 0;
      if ((v455 & 1) == 0 && v180)
      {
        v577 = v522;
        v578 = v523;
        v579 = v524;
        v576 = v521;
        v575 = v520;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_22467C100;
        v571 = xmmword_22467C110;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 4, 0, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x84000000C4), xmmword_22467C110);
      }
    }
    v181 = (v462 & 1) == 0 && ((v500 | v488) & 1) == 0;
    if (v181 && (v459 & 1) == 0)
    {
      v572 = v522;
      v573 = v523;
      v574 = v524;
      v571 = v521;
      v570 = v520;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467C120;
      v566 = xmmword_22467C130;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 4, 0, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x84000000C4), xmmword_22467C130);
    }
  }
  v182 = v32[10];
  if ((v182 & 0x80000000) != 0)
  {
    v184 = *(_DWORD *)(v31 + 1040);
    v185 = **v513;
    if (**v513)
      goto LABEL_485;
  }
  else
  {
    v183 = *(_QWORD *)(v31 + 2328);
    if (v182 >= (*(_QWORD *)(v31 + 2336) - v183) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v183 = *(_QWORD *)(v31 + 2328);
    }
    v184 = *(_DWORD *)(v183 + (v182 << 11) + 760);
    v185 = **v513;
    if (**v513)
    {
LABEL_485:
      v186 = v32[10];
      if ((v186 & 0x80000000) == 0)
        goto LABEL_486;
LABEL_500:
      v188 = *(_DWORD *)(v31 + 1296);
      if (v185)
        goto LABEL_490;
LABEL_501:
      if ((v188 & 0x10000000) != 0)
        v192 = 0x40000000;
      else
        v192 = 0x80000000;
      if ((v188 & 0x20000000) != 0)
        v188 = v192;
      else
        v188 &= 0xCFFFFFFF;
      v189 = *((_DWORD *)v23 + 134);
      if (**v92)
        goto LABEL_491;
      goto LABEL_508;
    }
  }
  if ((v184 & 0x10000000) != 0)
    v191 = 0x40000000;
  else
    v191 = 0x80000000;
  if ((v184 & 0x20000000) != 0)
    v184 = v191;
  else
    v184 &= 0xCFFFFFFF;
  v186 = v32[10];
  if ((v186 & 0x80000000) != 0)
    goto LABEL_500;
LABEL_486:
  v187 = *(_QWORD *)(v31 + 2328);
  if (v186 >= (*(_QWORD *)(v31 + 2336) - v187) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v187 = *(_QWORD *)(v31 + 2328);
    v185 = **v513;
  }
  v188 = *(_DWORD *)(v187 + (v186 << 11) + 1016);
  if (!v185)
    goto LABEL_501;
LABEL_490:
  v189 = *((_DWORD *)v23 + 134);
  if (**v92)
  {
LABEL_491:
    v511 = *((_DWORD *)v23 + 198);
    v190 = *((_DWORD *)v23 + 142);
    goto LABEL_526;
  }
LABEL_508:
  if ((v189 & 0x10000000) != 0)
    v193 = 0x40000000;
  else
    v193 = 0x80000000;
  if ((v189 & 0x20000000) != 0)
    v189 = v193;
  else
    v189 &= 0xCFFFFFFF;
  v194 = *((_DWORD *)v23 + 198);
  if ((v194 & 0x10000000) != 0)
    v195 = 0x40000000;
  else
    v195 = 0x80000000;
  if ((v194 & 0x20000000) != 0)
    v196 = v195;
  else
    v196 = v194 & 0xCFFFFFFF;
  v511 = v196;
  v197 = *((_DWORD *)v23 + 142);
  if ((v197 & 0x10000000) != 0)
    v198 = 0x40000000;
  else
    v198 = 0x80000000;
  if ((v197 & 0x20000000) != 0)
    v190 = v198;
  else
    v190 = v197 & 0xCFFFFFFF;
LABEL_526:
  v448 = v184 >> 30;
  v479 = v189 >> 30;
  v483 = v188 >> 30;
  v474 = v190 >> 30;
  v557 = v522;
  v558 = v523;
  v559 = v524;
  v556 = v521;
  v555 = v520;
  if ((v169 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467C140;
    v536 = xmmword_22467C150;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 5, 0, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x105000000C5), xmmword_22467C150);
    if ((v148 & 0x40000000) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467C160;
      v596 = xmmword_22467C170;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 5, 0, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x105000000C5), xmmword_22467C170);
      if (((v505 | v494) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_22467C180;
        v591 = xmmword_22467C190;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 5, 0, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x105000000C5), xmmword_22467C190);
        v199 = (v451 & 1) == 0 && ((v500 | v488) & 1) == 0;
        if ((v455 & 1) == 0 && v199)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_22467C1A0;
          v586 = xmmword_22467C1B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 5, 0, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x85000000C5), xmmword_22467C1B0);
        }
      }
      v200 = (v462 & 1) == 0 && ((v500 | v488) & 1) == 0;
      if (v200 && (v459 & 1) == 0)
      {
        v587 = v557;
        v588 = v558;
        v589 = v559;
        v586 = v556;
        v585 = v555;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467C1C0;
        v581 = xmmword_22467C1D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 5, 0, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x85000000C5), xmmword_22467C1D0);
      }
    }
    if (((v494 | v483) & 1) == 0)
    {
      v582 = v557;
      v583 = v558;
      v584 = v559;
      v581 = v556;
      v580 = v555;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_22467C1E0;
      v576 = xmmword_22467C1F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 5, 0, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x105000000C5), xmmword_22467C1F0);
      v201 = (v184 & 0x40000000) == 0 && ((v488 | v479) & 1) == 0;
      if ((v451 & 1) == 0 && v201)
      {
        v577 = v557;
        v578 = v558;
        v579 = v559;
        v576 = v556;
        v575 = v555;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_22467C200;
        v571 = xmmword_22467C210;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 5, 0, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x85000000C5), xmmword_22467C210);
      }
    }
    v202 = (v459 & 1) == 0 && ((v488 | v479) & 1) == 0;
    if (v202 && (v474 & 1) == 0)
    {
      v572 = v557;
      v573 = v558;
      v574 = v559;
      v571 = v556;
      v570 = v555;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467C220;
      v566 = xmmword_22467C230;
      *(_QWORD *)&v550 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 5, 0, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v550, COERCE_DOUBLE(0x85000000C5), xmmword_22467C230);
    }
  }
  v552 = v522;
  v553 = v523;
  v554 = v524;
  v551 = v521;
  v550 = v520;
  v203 = v32[10];
  if ((v203 & 0x80000000) != 0)
  {
    v205 = *(_DWORD *)(v31 + 1044);
    v206 = **v513;
    if (**v513)
      goto LABEL_559;
  }
  else
  {
    v204 = *(_QWORD *)(v31 + 2328);
    if (v203 >= (*(_QWORD *)(v31 + 2336) - v204) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v204 = *(_QWORD *)(v31 + 2328);
    }
    v205 = *(_DWORD *)(v204 + (v203 << 11) + 764);
    v206 = **v513;
    if (**v513)
    {
LABEL_559:
      v207 = v32[10];
      if ((v207 & 0x80000000) == 0)
        goto LABEL_560;
LABEL_574:
      v209 = *(_DWORD *)(v31 + 1300);
      if (v206)
        goto LABEL_564;
LABEL_575:
      if ((v209 & 0x10000000) != 0)
        v214 = 0x40000000;
      else
        v214 = 0x80000000;
      if ((v209 & 0x20000000) != 0)
        v209 = v214;
      else
        v209 &= 0xCFFFFFFF;
      v210 = *((_DWORD *)v23 + 135);
      if (**v92)
        goto LABEL_565;
      goto LABEL_582;
    }
  }
  if ((v205 & 0x10000000) != 0)
    v213 = 0x40000000;
  else
    v213 = 0x80000000;
  if ((v205 & 0x20000000) != 0)
    v205 = v213;
  else
    v205 &= 0xCFFFFFFF;
  v207 = v32[10];
  if ((v207 & 0x80000000) != 0)
    goto LABEL_574;
LABEL_560:
  v208 = *(_QWORD *)(v31 + 2328);
  if (v207 >= (*(_QWORD *)(v31 + 2336) - v208) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v208 = *(_QWORD *)(v31 + 2328);
    v206 = **v513;
  }
  v209 = *(_DWORD *)(v208 + (v207 << 11) + 1020);
  if (!v206)
    goto LABEL_575;
LABEL_564:
  v210 = *((_DWORD *)v23 + 135);
  if (**v92)
  {
LABEL_565:
    v211 = *((_DWORD *)v23 + 199);
    v212 = *((_DWORD *)v23 + 143);
    goto LABEL_600;
  }
LABEL_582:
  if ((v210 & 0x10000000) != 0)
    v215 = 0x40000000;
  else
    v215 = 0x80000000;
  if ((v210 & 0x20000000) != 0)
    v210 = v215;
  else
    v210 &= 0xCFFFFFFF;
  v216 = *((_DWORD *)v23 + 199);
  if ((v216 & 0x10000000) != 0)
    v217 = 0x40000000;
  else
    v217 = 0x80000000;
  if ((v216 & 0x20000000) != 0)
    v211 = v217;
  else
    v211 = v216 & 0xCFFFFFFF;
  v218 = *((_DWORD *)v23 + 143);
  if ((v218 & 0x10000000) != 0)
    v219 = 0x40000000;
  else
    v219 = 0x80000000;
  if ((v218 & 0x20000000) != 0)
    v212 = v219;
  else
    v212 = v218 & 0xCFFFFFFF;
LABEL_600:
  v501 = v205 >> 30;
  v220 = v209 >> 30;
  v221 = v210 >> 30;
  v506 = v212 >> 30;
  v562 = v522;
  v563 = v523;
  v564 = v524;
  v561 = v521;
  v560 = v520;
  if ((v511 & 0x40000000) != 0)
  {
    v542 = v522;
    v543 = v523;
    v544 = v524;
    v541 = v521;
    v540 = v520;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467C240;
    v536 = xmmword_22467C250;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 6, 0, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x106000000C6), xmmword_22467C250);
    if ((v169 & 0x40000000) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467C260;
      v596 = xmmword_22467C270;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 6, 0, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x106000000C6), xmmword_22467C270);
      if (((v494 | v483) & 1) == 0)
      {
        v597 = v522;
        v598 = v523;
        v599 = v524;
        v595 = v520;
        v596 = v521;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v590 = xmmword_22467C280;
        v591 = xmmword_22467C290;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 6, 0, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x106000000C6), xmmword_22467C290);
        v222 = (v448 & 1) == 0 && ((v488 | v479) & 1) == 0;
        if ((v451 & 1) == 0 && v222)
        {
          v592 = v522;
          v593 = v523;
          v594 = v524;
          v591 = v521;
          v590 = v520;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_22467C2A0;
          v586 = xmmword_22467C2B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 6, 0, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x86000000C6), xmmword_22467C2B0);
        }
      }
      v223 = (v459 & 1) == 0 && ((v488 | v479) & 1) == 0;
      if (v223 && (v474 & 1) == 0)
      {
        v587 = v562;
        v588 = v563;
        v589 = v564;
        v586 = v561;
        v585 = v560;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467C2C0;
        v581 = xmmword_22467C2D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 6, 0, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x86000000C6), xmmword_22467C2D0);
      }
    }
    if (((v483 | v220) & 1) == 0)
    {
      v582 = v562;
      v583 = v563;
      v584 = v564;
      v581 = v561;
      v580 = v560;
      *(_QWORD *)&v570 = 0xA0A0A0A0D0D0D0DLL;
      v575 = xmmword_22467C2E0;
      v576 = xmmword_22467C2F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 6, 0, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x106000000C6), xmmword_22467C2F0);
      v224 = (v205 & 0x40000000) == 0 && ((v479 | v221) & 1) == 0;
      if ((v448 & 1) == 0 && v224)
      {
        v577 = v562;
        v578 = v563;
        v579 = v564;
        v576 = v561;
        v575 = v560;
        *(_QWORD *)&v565 = 0xA0A0D0D0A0A0D0DLL;
        v570 = xmmword_22467C300;
        v571 = xmmword_22467C310;
        *(_QWORD *)&v545 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 6, 0, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v545, COERCE_DOUBLE(0x86000000C6), xmmword_22467C310);
      }
    }
    v225 = (v474 & 1) == 0 && ((v479 | v221) & 1) == 0;
    if (v225 && (v506 & 1) == 0)
    {
      v572 = v562;
      v573 = v563;
      v574 = v564;
      v571 = v561;
      v570 = v560;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467C320;
      v566 = xmmword_22467C330;
      *(_QWORD *)&v601[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 6, 0, 3, (uint64_t)&v545, (uint64_t)&v565, (uint64_t)v601, COERCE_DOUBLE(0x86000000C6), xmmword_22467C330);
    }
  }
  v226 = v32[19];
  if ((v226 & 0x80000000) != 0)
  {
    v229 = *v513;
    v230 = *(_DWORD *)(v31 + 1016);
    v231 = **v513;
    if (**v513)
      goto LABEL_633;
  }
  else
  {
    v227 = *(_QWORD *)(v31 + 2328);
    if (v226 >= (*(_QWORD *)(v31 + 2336) - v227) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v227 = *(_QWORD *)(v31 + 2328);
    }
    v228 = v227 + (v226 << 11);
    v229 = *v513;
    v230 = *(_DWORD *)(v228 + 736);
    v231 = **v513;
    if (**v513)
    {
LABEL_633:
      v232 = v32[19];
      if ((v232 & 0x80000000) == 0)
        goto LABEL_634;
LABEL_653:
      v234 = *(_DWORD *)(v31 + 1272);
      if (v231)
        goto LABEL_638;
      goto LABEL_654;
    }
  }
  if ((v230 & 0x10000000) != 0)
    v239 = 0x40000000;
  else
    v239 = 0x80000000;
  if ((v230 & 0x20000000) != 0)
    v230 = v239;
  else
    v230 &= 0xCFFFFFFF;
  v232 = v32[19];
  if ((v232 & 0x80000000) != 0)
    goto LABEL_653;
LABEL_634:
  v233 = *(_QWORD *)(v31 + 2328);
  if (v232 >= (*(_QWORD *)(v31 + 2336) - v233) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v233 = *(_QWORD *)(v31 + 2328);
    v229 = *v513;
    v231 = **v513;
  }
  v234 = *(_DWORD *)(v233 + (v232 << 11) + 992);
  if (v231)
  {
LABEL_638:
    v235 = v32[22];
    if ((v235 & 0x80000000) == 0)
      goto LABEL_639;
LABEL_661:
    v237 = *(_DWORD *)(v31 + 792);
    if (v231)
      goto LABEL_643;
    goto LABEL_662;
  }
LABEL_654:
  if ((v234 & 0x10000000) != 0)
    v240 = 0x40000000;
  else
    v240 = 0x80000000;
  if ((v234 & 0x20000000) != 0)
    v234 = v240;
  else
    v234 &= 0xCFFFFFFF;
  v235 = v32[22];
  if ((v235 & 0x80000000) != 0)
    goto LABEL_661;
LABEL_639:
  v236 = *(_QWORD *)(v31 + 2328);
  if (v235 >= (*(_QWORD *)(v31 + 2336) - v236) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v236 = *(_QWORD *)(v31 + 2328);
    v229 = *v513;
    v231 = **v513;
  }
  v237 = *(_DWORD *)(v236 + (v235 << 11) + 512);
  if (v231)
  {
LABEL_643:
    v238 = v32[22];
    if ((v238 & 0x80000000) != 0)
      goto LABEL_714;
    goto LABEL_669;
  }
LABEL_662:
  if ((v237 & 0x10000000) != 0)
    v241 = 0x40000000;
  else
    v241 = 0x80000000;
  if ((v237 & 0x20000000) != 0)
    v237 = v241;
  else
    v237 &= 0xCFFFFFFF;
  v238 = v32[22];
  if ((v238 & 0x80000000) != 0)
    goto LABEL_714;
LABEL_669:
  v242 = *(_QWORD *)(v31 + 2328);
  v243 = (*(_QWORD *)(v31 + 2336) - v242) >> 11;
  if (v243 > v238)
    goto LABEL_673;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v229 = *v513;
  v238 = v32[22];
  if ((v238 & 0x80000000) != 0)
  {
LABEL_714:
    v244 = *(_DWORD *)(v31 + 824);
    if (*v229)
      goto LABEL_683;
    goto LABEL_677;
  }
  v242 = *(_QWORD *)(v31 + 2328);
  v243 = (*(_QWORD *)(v31 + 2336) - v242) >> 11;
LABEL_673:
  if (v243 <= v238)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v242 = *(_QWORD *)(v31 + 2328);
    v229 = *v513;
  }
  v244 = *(_DWORD *)(v242 + (v238 << 11) + 544);
  if (!*v229)
  {
LABEL_677:
    if ((v244 & 0x10000000) != 0)
      v245 = 0x40000000;
    else
      v245 = 0x80000000;
    if ((v244 & 0x20000000) != 0)
      v244 = v245;
    else
      v244 &= 0xCFFFFFFF;
  }
LABEL_683:
  v567 = v552;
  v568 = v553;
  v569 = v554;
  v566 = v551;
  v565 = v550;
  if ((v211 & 0x40000000) != 0)
  {
    v542 = v552;
    v543 = v553;
    v544 = v554;
    *(_QWORD *)&v595 = 0x161616160D0D0D0DLL;
    v541 = v551;
    v540 = v550;
    v535 = xmmword_22467C340;
    v536 = xmmword_22467C350;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 7, 0, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x107000000C7), xmmword_22467C350);
    if ((v511 & 0x40000000) == 0)
    {
      v537 = v552;
      v538 = v553;
      v539 = v554;
      v536 = v551;
      v535 = v550;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467C360;
      v596 = xmmword_22467C370;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 7, 0, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x107000000C7), xmmword_22467C370);
      if (((v483 | v220) & 1) == 0)
      {
        v597 = v552;
        v598 = v553;
        v599 = v554;
        *(_QWORD *)&v585 = 0xA0A0D0D0A0A0D0DLL;
        v595 = v550;
        v596 = v551;
        v590 = xmmword_22467C380;
        v591 = xmmword_22467C390;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 7, 0, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x107000000C7), xmmword_22467C390);
        v246 = (v501 & 1) == 0 && ((v479 | v221) & 1) == 0;
        if ((v448 & 1) == 0 && v246)
        {
          v592 = v552;
          v593 = v553;
          v594 = v554;
          v591 = v551;
          v590 = v550;
          *(_QWORD *)&v580 = 0xA0A0A0A0D0D0D0DLL;
          v585 = xmmword_22467C3A0;
          v586 = xmmword_22467C3B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 7, 0, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x87000000C7), xmmword_22467C3B0);
        }
      }
      v247 = (v474 & 1) == 0 && ((v479 | v221) & 1) == 0;
      if (v247 && (v506 & 1) == 0)
      {
        v587 = v567;
        v588 = v568;
        v589 = v569;
        v586 = v566;
        v585 = v565;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467C3C0;
        v581 = xmmword_22467C3D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 7, 0, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x87000000C7), xmmword_22467C3D0);
      }
    }
    v248 = (v237 & 0x40000000 | v221 & 1) == 0;
    if (!(v234 & 0x40000000 | v220 & 1))
    {
      v582 = v567;
      v583 = v568;
      v584 = v569;
      *(_QWORD *)&v570 = 0x13130A0A16160D0DLL;
      v581 = v566;
      v580 = v565;
      v575 = xmmword_22467C3E0;
      v576 = xmmword_22467C3F0;
      *(_QWORD *)&v545 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 7, 0, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v545, COERCE_DOUBLE(0x107000000C7), xmmword_22467C3F0);
      v249 = (v230 & 0x40000000) == 0 && v248;
      if ((v501 & 1) == 0 && v249)
      {
        v577 = v567;
        v578 = v568;
        v579 = v569;
        *(_QWORD *)&v545 = 0x131316160A0A0D0DLL;
        v576 = v566;
        v575 = v565;
        v570 = xmmword_22467C400;
        v571 = xmmword_22467C410;
        *(_QWORD *)&v601[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 7, 0, 3, (uint64_t)&v545, (uint64_t)&v570, (uint64_t)v601, COERCE_DOUBLE(0x87000000C7), xmmword_22467C410);
      }
    }
    v250 = (v506 & 1) == 0 && v248;
    if (v250 && (v244 & 0x40000000) == 0)
    {
      v572 = v567;
      v573 = v568;
      v574 = v569;
      *(_QWORD *)&v601[0] = 0x16160D0D16160D0DLL;
      v571 = v566;
      v570 = v565;
      v545 = xmmword_22467C420;
      v546 = xmmword_22467C430;
      v602[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 7, 0, 3, (uint64_t)v601, (uint64_t)&v545, (uint64_t)v602, COERCE_DOUBLE(0x87000000C7), xmmword_22467C430);
    }
  }
  v251 = v466[2];
  v512 = a2[1];
  v514 = *a2;
  v518 = v469[3];
  v519 = v469[4];
  v516 = *((float32x4_t *)v469 + 1);
  v517 = v469[2];
  v515 = *v469;
  v460 = *(_OWORD *)v466;
  v502 = (_BYTE **)a2[2];
  v507 = *v466;
  v252 = *((_DWORD *)v251 + 128);
  v253 = ***v466;
  if (***v466)
  {
    v254 = *((_DWORD *)v251 + 192);
    v255 = *((_DWORD *)v251 + 136);
    v256 = *((_DWORD *)v251 + 144);
    v495 = *((_DWORD *)v251 + 200);
    if ((v495 & 0x40000000) == 0)
    {
LABEL_713:
      v257 = 0;
      v258 = 0;
      v259 = 0;
      v260 = 0;
      v261 = 0;
      goto LABEL_766;
    }
  }
  else
  {
    if ((v252 & 0x20000000) != 0)
      v252 *= 4;
    v262 = *((_DWORD *)v251 + 192);
    if ((v262 & 0x20000000) != 0)
      v254 = 4 * v262;
    else
      v254 = *((_DWORD *)v251 + 192);
    v263 = *((_DWORD *)v251 + 136);
    if ((v263 & 0x20000000) != 0)
      v255 = 4 * v263;
    else
      v255 = *((_DWORD *)v251 + 136);
    v264 = *((_DWORD *)v251 + 200);
    if ((v264 & 0x20000000) != 0)
      v265 = 4 * v264;
    else
      v265 = *((_DWORD *)v251 + 200);
    v266 = *((_DWORD *)v251 + 144);
    if ((v266 & 0x10000000) != 0)
      v267 = 0x40000000;
    else
      v267 = 0x80000000;
    if ((v266 & 0x20000000) != 0)
      v256 = v267;
    else
      v256 = v266 & 0xCFFFFFFF;
    v495 = v265;
    if ((v265 & 0x40000000) == 0)
      goto LABEL_713;
  }
  v268 = *(unsigned int *)(v512 + 16);
  if ((v268 & 0x80000000) != 0)
  {
    v270 = *(_DWORD *)(v514 + 820);
    v271 = **v502;
    if (**v502)
      goto LABEL_739;
  }
  else
  {
    v269 = *(_QWORD *)(v514 + 2328);
    if (v268 >= (*(_QWORD *)(v514 + 2336) - v269) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v269 = *(_QWORD *)(v514 + 2328);
    }
    v270 = *(_DWORD *)(v269 + (v268 << 11) + 540);
    v271 = **v502;
    if (**v502)
    {
LABEL_739:
      v272 = *(unsigned int *)(v512 + 16);
      if ((v272 & 0x80000000) == 0)
        goto LABEL_740;
LABEL_1273:
      v274 = *(_DWORD *)(v514 + 1076);
      if (v271)
        goto LABEL_744;
      goto LABEL_1274;
    }
  }
  if ((v270 & 0x10000000) != 0)
    v442 = 0x40000000;
  else
    v442 = 0x80000000;
  if ((v270 & 0x20000000) != 0)
    v270 = v442;
  else
    v270 &= 0xCFFFFFFF;
  v272 = *(unsigned int *)(v512 + 16);
  if ((v272 & 0x80000000) != 0)
    goto LABEL_1273;
LABEL_740:
  v273 = *(_QWORD *)(v514 + 2328);
  if (v272 >= (*(_QWORD *)(v514 + 2336) - v273) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v273 = *(_QWORD *)(v514 + 2328);
    v271 = **v502;
  }
  v274 = *(_DWORD *)(v273 + (v272 << 11) + 796);
  if (v271)
  {
LABEL_744:
    v275 = *(unsigned int *)(v512 + 16);
    if ((v275 & 0x80000000) == 0)
      goto LABEL_745;
LABEL_1281:
    v277 = *(_DWORD *)(v514 + 852);
    if (v271)
      goto LABEL_749;
    goto LABEL_1282;
  }
LABEL_1274:
  if ((v274 & 0x10000000) != 0)
    v443 = 0x40000000;
  else
    v443 = 0x80000000;
  if ((v274 & 0x20000000) != 0)
    v274 = v443;
  else
    v274 &= 0xCFFFFFFF;
  v275 = *(unsigned int *)(v512 + 16);
  if ((v275 & 0x80000000) != 0)
    goto LABEL_1281;
LABEL_745:
  v276 = *(_QWORD *)(v514 + 2328);
  if (v275 >= (*(_QWORD *)(v514 + 2336) - v276) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v276 = *(_QWORD *)(v514 + 2328);
    v271 = **v502;
  }
  v277 = *(_DWORD *)(v276 + (v275 << 11) + 572);
  if (v271)
  {
LABEL_749:
    v278 = *(unsigned int *)(v512 + 16);
    if ((v278 & 0x80000000) == 0)
      goto LABEL_750;
LABEL_1289:
    v280 = *(_DWORD *)(v514 + 1108);
    if (v271)
      goto LABEL_754;
    goto LABEL_1290;
  }
LABEL_1282:
  if ((v277 & 0x10000000) != 0)
    v444 = 0x40000000;
  else
    v444 = 0x80000000;
  if ((v277 & 0x20000000) != 0)
    v277 = v444;
  else
    v277 &= 0xCFFFFFFF;
  v278 = *(unsigned int *)(v512 + 16);
  if ((v278 & 0x80000000) != 0)
    goto LABEL_1289;
LABEL_750:
  v279 = *(_QWORD *)(v514 + 2328);
  if (v278 >= (*(_QWORD *)(v514 + 2336) - v279) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v279 = *(_QWORD *)(v514 + 2328);
    v271 = **v502;
  }
  v280 = *(_DWORD *)(v279 + (v278 << 11) + 828);
  if (v271)
  {
LABEL_754:
    v281 = *(unsigned int *)(v512 + 16);
    if ((v281 & 0x80000000) == 0)
      goto LABEL_755;
    goto LABEL_1297;
  }
LABEL_1290:
  if ((v280 & 0x10000000) != 0)
    v445 = 0x40000000;
  else
    v445 = 0x80000000;
  if ((v280 & 0x20000000) != 0)
    v280 = v445;
  else
    v280 &= 0xCFFFFFFF;
  v281 = *(unsigned int *)(v512 + 16);
  if ((v281 & 0x80000000) == 0)
  {
LABEL_755:
    v282 = *(_QWORD *)(v514 + 2328);
    if (v281 >= (*(_QWORD *)(v514 + 2336) - v282) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v282 = *(_QWORD *)(v514 + 2328);
      v271 = **v502;
    }
    v283 = v282 + (v281 << 11);
    v261 = (v270 >> 30) & 1;
    v260 = (v274 >> 30) & 1;
    v259 = (v277 >> 30) & 1;
    v284 = *(_DWORD *)(v283 + 604);
    v258 = (v280 >> 30) & 1;
    if (v271)
      goto LABEL_765;
    goto LABEL_759;
  }
LABEL_1297:
  v261 = (v270 >> 30) & 1;
  v260 = (v274 >> 30) & 1;
  v259 = (v277 >> 30) & 1;
  v284 = *(_DWORD *)(v514 + 884);
  v258 = (v280 >> 30) & 1;
  if (!v271)
  {
LABEL_759:
    if ((v284 & 0x10000000) != 0)
      v285 = 0x40000000;
    else
      v285 = 0x80000000;
    if ((v284 & 0x20000000) != 0)
      v284 = v285;
    else
      v284 &= 0xCFFFFFFF;
  }
LABEL_765:
  v257 = (v284 >> 30) & 1;
  v253 = **v507;
LABEL_766:
  v463 = v252 >> 30;
  v547 = v517;
  v548 = v518;
  v549 = v519;
  v546 = v516;
  v545 = v515;
  v286 = *((_DWORD *)v251 + 129);
  if (v253)
  {
    v287 = *((_DWORD *)v251 + 193);
    v288 = *((_DWORD *)v251 + 137);
    v489 = *((_DWORD *)v251 + 201);
    v289 = *((_DWORD *)v251 + 145);
  }
  else
  {
    if ((v286 & 0x10000000) != 0)
      v290 = 0x40000000;
    else
      v290 = 0x80000000;
    if ((v286 & 0x20000000) != 0)
      v286 = v290;
    else
      v286 &= 0xCFFFFFFF;
    v291 = *((_DWORD *)v251 + 193);
    if ((v291 & 0x10000000) != 0)
      v292 = 0x40000000;
    else
      v292 = 0x80000000;
    if ((v291 & 0x20000000) != 0)
      v287 = v292;
    else
      v287 = v291 & 0xCFFFFFFF;
    v293 = *((_DWORD *)v251 + 137);
    if ((v293 & 0x10000000) != 0)
      v294 = 0x40000000;
    else
      v294 = 0x80000000;
    if ((v293 & 0x20000000) != 0)
      v288 = v294;
    else
      v288 = v293 & 0xCFFFFFFF;
    v295 = *((_DWORD *)v251 + 201);
    if ((v295 & 0x10000000) != 0)
      v296 = 0x40000000;
    else
      v296 = 0x80000000;
    if ((v295 & 0x20000000) != 0)
      v297 = v296;
    else
      v297 = v295 & 0xCFFFFFFF;
    v489 = v297;
    v298 = *((_DWORD *)v251 + 145);
    if ((v298 & 0x10000000) != 0)
      v289 = 0x40000000;
    else
      v289 = 0x80000000;
    if ((v298 & 0x20000000) == 0)
      v289 = v298 & 0xCFFFFFFF;
  }
  v299 = v255 >> 30;
  v300 = v254 >> 30;
  v301 = v256 >> 30;
  v456 = v286 >> 30;
  v480 = v288 >> 30;
  v484 = v287 >> 30;
  v470 = v289 >> 30;
  if ((v495 & 0x40000000) != 0)
  {
    v542 = v517;
    v543 = v518;
    v544 = v519;
    v541 = v516;
    v540 = v515;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467C440;
    v536 = xmmword_22467C450;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 0, 1, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x108000000C8), xmmword_22467C450);
    if (!v258)
    {
      v537 = v517;
      v538 = v518;
      v539 = v519;
      v536 = v516;
      v535 = v515;
      *(_QWORD *)&v590 = 0x4040D0D04040D0DLL;
      v595 = xmmword_22467C460;
      v596 = xmmword_22467C470;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 0, 1, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x108000000C8), xmmword_22467C470);
      v302 = (v259 | v299 & 1) == 0;
      if (!(v260 | ((v254 & 0x40000000) != 0)))
      {
        v597 = v517;
        v598 = v518;
        v599 = v519;
        v595 = v515;
        v596 = v516;
        *(_QWORD *)&v585 = 0x40404040D0D0D0DLL;
        v590 = xmmword_22467C480;
        v591 = xmmword_22467C490;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 0, 1, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x108000000C8), xmmword_22467C490);
        v303 = (v463 & 1) == 0 && v302;
        if (!v261 && v303)
        {
          v592 = v517;
          v593 = v518;
          v594 = v519;
          v591 = v516;
          v590 = v515;
          *(_QWORD *)&v580 = 0x4040D0D04040D0DLL;
          v585 = xmmword_22467C4A0;
          v586 = xmmword_22467C4B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 0, 1, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x88000000C8), xmmword_22467C4B0);
        }
      }
      if (v257)
        v304 = 0;
      else
        v304 = v302;
      if (v304 && (v301 & 1) == 0)
      {
        v587 = v517;
        v588 = v518;
        v589 = v519;
        *(_QWORD *)&v575 = 0x40404040D0D0D0DLL;
        v586 = v516;
        v585 = v515;
        v580 = xmmword_22467C4C0;
        v581 = xmmword_22467C4D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 0, 1, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x88000000C8), xmmword_22467C4D0);
      }
    }
    if (((v300 | v484) & 1) == 0)
    {
      v582 = v517;
      v583 = v518;
      v584 = v519;
      v581 = v516;
      v580 = v515;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_22467C4E0;
      v576 = xmmword_22467C4F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 0, 1, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x108000000C8), xmmword_22467C4F0);
      v305 = (v456 & 1) == 0 && ((v299 | v480) & 1) == 0;
      if ((v463 & 1) == 0 && v305)
      {
        v577 = v517;
        v578 = v518;
        v579 = v519;
        v576 = v516;
        v575 = v515;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_22467C500;
        v571 = xmmword_22467C510;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 0, 1, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x88000000C8), xmmword_22467C510);
      }
    }
    v306 = (v301 & 1) == 0 && ((v299 | v480) & 1) == 0;
    if (v306 && (v470 & 1) == 0)
    {
      v572 = v517;
      v573 = v518;
      v574 = v519;
      v571 = v516;
      v570 = v515;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467C520;
      v566 = xmmword_22467C530;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 0, 1, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x88000000C8), xmmword_22467C530);
    }
  }
  v527 = v547;
  v528 = v548;
  v529 = v549;
  v525 = v545;
  v526 = v546;
  v307 = *((_DWORD *)v251 + 130);
  if (**v507)
  {
    v308 = *((_DWORD *)v251 + 194);
    v309 = *((_DWORD *)v251 + 138);
    v310 = *((_DWORD *)v251 + 202);
    v311 = *((_DWORD *)v251 + 146);
  }
  else
  {
    if ((v307 & 0x10000000) != 0)
      v312 = 0x40000000;
    else
      v312 = 0x80000000;
    if ((v307 & 0x20000000) != 0)
      v307 = v312;
    else
      v307 &= 0xCFFFFFFF;
    v313 = *((_DWORD *)v251 + 194);
    if ((v313 & 0x10000000) != 0)
      v314 = 0x40000000;
    else
      v314 = 0x80000000;
    if ((v313 & 0x20000000) != 0)
      v308 = v314;
    else
      v308 = v313 & 0xCFFFFFFF;
    v315 = *((_DWORD *)v251 + 138);
    if ((v315 & 0x10000000) != 0)
      v316 = 0x40000000;
    else
      v316 = 0x80000000;
    if ((v315 & 0x20000000) != 0)
      v309 = v316;
    else
      v309 = v315 & 0xCFFFFFFF;
    v317 = *((_DWORD *)v251 + 202);
    if ((v317 & 0x10000000) != 0)
      v318 = 0x40000000;
    else
      v318 = 0x80000000;
    if ((v317 & 0x20000000) != 0)
      v310 = v318;
    else
      v310 = v317 & 0xCFFFFFFF;
    v319 = *((_DWORD *)v251 + 146);
    if ((v319 & 0x10000000) != 0)
      v311 = 0x40000000;
    else
      v311 = 0x80000000;
    if ((v319 & 0x20000000) == 0)
      v311 = v319 & 0xCFFFFFFF;
  }
  v320 = v309 >> 30;
  v452 = v307 >> 30;
  v475 = v308 >> 30;
  v467 = v311 >> 30;
  v532 = v547;
  v533 = v548;
  v534 = v549;
  v530 = v545;
  v531 = v546;
  if ((v489 & 0x40000000) != 0)
  {
    v542 = v547;
    v543 = v548;
    v544 = v549;
    v541 = v546;
    v540 = v545;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467C540;
    v536 = xmmword_22467C550;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 1, 1, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x109000000C9), xmmword_22467C550);
    if ((v495 & 0x40000000) == 0)
    {
      v537 = v547;
      v538 = v548;
      v539 = v549;
      v536 = v546;
      v535 = v545;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467C560;
      v596 = xmmword_22467C570;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 1, 1, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x109000000C9), xmmword_22467C570);
      if (((v300 | v484) & 1) == 0)
      {
        v597 = v547;
        v598 = v548;
        v599 = v549;
        v595 = v545;
        v596 = v546;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_22467C580;
        v591 = xmmword_22467C590;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 1, 1, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x109000000C9), xmmword_22467C590);
        v321 = (v456 & 1) == 0 && ((v299 | v480) & 1) == 0;
        if ((v463 & 1) == 0 && v321)
        {
          v592 = v547;
          v593 = v548;
          v594 = v549;
          v591 = v546;
          v590 = v545;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_22467C5A0;
          v586 = xmmword_22467C5B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 1, 1, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x89000000C9), xmmword_22467C5B0);
        }
      }
      v322 = (v301 & 1) == 0 && ((v299 | v480) & 1) == 0;
      if (v322 && (v470 & 1) == 0)
      {
        v587 = v532;
        v588 = v533;
        v589 = v534;
        v586 = v531;
        v585 = v530;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467C5C0;
        v581 = xmmword_22467C5D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 1, 1, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x89000000C9), xmmword_22467C5D0);
      }
    }
    if (((v484 | v475) & 1) == 0)
    {
      v582 = v532;
      v583 = v533;
      v584 = v534;
      v581 = v531;
      v580 = v530;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_22467C5E0;
      v576 = xmmword_22467C5F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 1, 1, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x109000000C9), xmmword_22467C5F0);
      v323 = (v452 & 1) == 0 && ((v480 | v320) & 1) == 0;
      if ((v456 & 1) == 0 && v323)
      {
        v577 = v532;
        v578 = v533;
        v579 = v534;
        v576 = v531;
        v575 = v530;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_22467C600;
        v571 = xmmword_22467C610;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 1, 1, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x89000000C9), xmmword_22467C610);
      }
    }
    v324 = (v470 & 1) == 0 && ((v480 | v320) & 1) == 0;
    if (v324 && (v467 & 1) == 0)
    {
      v572 = v532;
      v573 = v533;
      v574 = v534;
      v571 = v531;
      v570 = v530;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467C620;
      v566 = xmmword_22467C630;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 1, 1, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x89000000C9), xmmword_22467C630);
    }
  }
  v325 = *((_DWORD *)v251 + 131);
  if (**v507)
  {
    v326 = *((_DWORD *)v251 + 195);
    v327 = *((_DWORD *)v251 + 139);
    v328 = *((_DWORD *)v251 + 203);
    v329 = *((_DWORD *)v251 + 147);
  }
  else
  {
    if ((v325 & 0x10000000) != 0)
      v330 = 0x40000000;
    else
      v330 = 0x80000000;
    if ((v325 & 0x20000000) != 0)
      v325 = v330;
    else
      v325 &= 0xCFFFFFFF;
    v331 = *((_DWORD *)v251 + 195);
    if ((v331 & 0x10000000) != 0)
      v332 = 0x40000000;
    else
      v332 = 0x80000000;
    if ((v331 & 0x20000000) != 0)
      v326 = v332;
    else
      v326 = v331 & 0xCFFFFFFF;
    v333 = *((_DWORD *)v251 + 139);
    if ((v333 & 0x10000000) != 0)
      v334 = 0x40000000;
    else
      v334 = 0x80000000;
    if ((v333 & 0x20000000) != 0)
      v327 = v334;
    else
      v327 = v333 & 0xCFFFFFFF;
    v335 = *((_DWORD *)v251 + 203);
    if ((v335 & 0x10000000) != 0)
      v336 = 0x40000000;
    else
      v336 = 0x80000000;
    if ((v335 & 0x20000000) != 0)
      v328 = v336;
    else
      v328 = v335 & 0xCFFFFFFF;
    v337 = *((_DWORD *)v251 + 147);
    if ((v337 & 0x10000000) != 0)
      v329 = 0x40000000;
    else
      v329 = 0x80000000;
    if ((v337 & 0x20000000) == 0)
      v329 = v337 & 0xCFFFFFFF;
  }
  v338 = v327 >> 30;
  v449 = v325 >> 30;
  v496 = v326 >> 30;
  v464 = v329 >> 30;
  if ((v310 & 0x40000000) != 0)
  {
    v542 = v527;
    v543 = v528;
    v544 = v529;
    v541 = v526;
    v540 = v525;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467C640;
    v536 = xmmword_22467C650;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 2, 1, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x10A000000CALL), xmmword_22467C650);
    if ((v489 & 0x40000000) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467C660;
      v596 = xmmword_22467C670;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 2, 1, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x10A000000CALL), xmmword_22467C670);
      if (((v484 | v475) & 1) == 0)
      {
        v597 = v527;
        v598 = v528;
        v599 = v529;
        v595 = v525;
        v596 = v526;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_22467C680;
        v591 = xmmword_22467C690;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 2, 1, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x10A000000CALL), xmmword_22467C690);
        v339 = (v452 & 1) == 0 && ((v480 | v320) & 1) == 0;
        if ((v456 & 1) == 0 && v339)
        {
          v592 = v527;
          v593 = v528;
          v594 = v529;
          v591 = v526;
          v590 = v525;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_22467C6A0;
          v586 = xmmword_22467C6B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 2, 1, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x8A000000CALL), xmmword_22467C6B0);
        }
      }
      v340 = (v470 & 1) == 0 && ((v480 | v320) & 1) == 0;
      if (v340 && (v467 & 1) == 0)
      {
        v587 = v527;
        v588 = v528;
        v589 = v529;
        v586 = v526;
        v585 = v525;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467C6C0;
        v581 = xmmword_22467C6D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 2, 1, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x8A000000CALL), xmmword_22467C6D0);
      }
    }
    if (((v475 | v496) & 1) == 0)
    {
      v582 = v527;
      v583 = v528;
      v584 = v529;
      v581 = v526;
      v580 = v525;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_22467C6E0;
      v576 = xmmword_22467C6F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 2, 1, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x10A000000CALL), xmmword_22467C6F0);
      v341 = (v449 & 1) == 0 && ((v320 | v338) & 1) == 0;
      if ((v452 & 1) == 0 && v341)
      {
        v577 = v527;
        v578 = v528;
        v579 = v529;
        v576 = v526;
        v575 = v525;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_22467C700;
        v571 = xmmword_22467C710;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 2, 1, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x8A000000CALL), xmmword_22467C710);
      }
    }
    v342 = (v467 & 1) == 0 && ((v320 | v338) & 1) == 0;
    if (v342 && (v464 & 1) == 0)
    {
      v572 = v527;
      v573 = v528;
      v574 = v529;
      v571 = v526;
      v570 = v525;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467C720;
      v566 = xmmword_22467C730;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 2, 1, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x8A000000CALL), xmmword_22467C730);
    }
  }
  v343 = *((_DWORD *)v251 + 132);
  if (**v507)
  {
    v344 = *((_DWORD *)v251 + 196);
    v345 = *((_DWORD *)v251 + 140);
    v346 = *((_DWORD *)v251 + 204);
    v347 = *((_DWORD *)v251 + 148);
  }
  else
  {
    if ((v343 & 0x10000000) != 0)
      v348 = 0x40000000;
    else
      v348 = 0x80000000;
    if ((v343 & 0x20000000) != 0)
      v343 = v348;
    else
      v343 &= 0xCFFFFFFF;
    v349 = *((_DWORD *)v251 + 196);
    if ((v349 & 0x10000000) != 0)
      v350 = 0x40000000;
    else
      v350 = 0x80000000;
    if ((v349 & 0x20000000) != 0)
      v344 = v350;
    else
      v344 = v349 & 0xCFFFFFFF;
    v351 = *((_DWORD *)v251 + 140);
    if ((v351 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v351 & 0x20000000) != 0)
      v345 = v352;
    else
      v345 = v351 & 0xCFFFFFFF;
    v353 = *((_DWORD *)v251 + 204);
    if ((v353 & 0x10000000) != 0)
      v354 = 0x40000000;
    else
      v354 = 0x80000000;
    if ((v353 & 0x20000000) != 0)
      v346 = v354;
    else
      v346 = v353 & 0xCFFFFFFF;
    v355 = *((_DWORD *)v251 + 148);
    if ((v355 & 0x10000000) != 0)
      v347 = 0x40000000;
    else
      v347 = 0x80000000;
    if ((v355 & 0x20000000) == 0)
      v347 = v355 & 0xCFFFFFFF;
  }
  v457 = v343 >> 30;
  v485 = v345 >> 30;
  v490 = v344 >> 30;
  v471 = v347 >> 30;
  if ((v328 & 0x40000000) != 0)
  {
    v542 = v527;
    v543 = v528;
    v544 = v529;
    v541 = v526;
    v540 = v525;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467C740;
    v536 = xmmword_22467C750;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 3, 1, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x10B000000CBLL), xmmword_22467C750);
    if ((v310 & 0x40000000) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467C760;
      v596 = xmmword_22467C770;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 3, 1, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x10B000000CBLL), xmmword_22467C770);
      v356 = ((v320 | v338) & 1) == 0;
      if (((v475 | v496) & 1) == 0)
      {
        v597 = v527;
        v598 = v528;
        v599 = v529;
        v595 = v525;
        v596 = v526;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_22467C780;
        v591 = xmmword_22467C790;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 3, 1, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x10B000000CBLL), xmmword_22467C790);
        v357 = (v449 & 1) == 0 && v356;
        if ((v452 & 1) == 0 && v357)
        {
          v592 = v527;
          v593 = v528;
          v594 = v529;
          v591 = v526;
          v590 = v525;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_22467C7A0;
          v586 = xmmword_22467C7B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 3, 1, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x8B000000CBLL), xmmword_22467C7B0);
        }
      }
      v358 = (v467 & 1) == 0 && v356;
      if (v358 && (v464 & 1) == 0)
      {
        v587 = v527;
        v588 = v528;
        v589 = v529;
        v586 = v526;
        v585 = v525;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467C7C0;
        v581 = xmmword_22467C7D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 3, 1, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x8B000000CBLL), xmmword_22467C7D0);
      }
    }
    if (((v496 | v490) & 1) == 0)
    {
      v582 = v527;
      v583 = v528;
      v584 = v529;
      v581 = v526;
      v580 = v525;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_22467C7E0;
      v576 = xmmword_22467C7F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 3, 1, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x10B000000CBLL), xmmword_22467C7F0);
      v359 = (v457 & 1) == 0 && ((v338 | v485) & 1) == 0;
      if ((v449 & 1) == 0 && v359)
      {
        v577 = v527;
        v578 = v528;
        v579 = v529;
        v576 = v526;
        v575 = v525;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_22467C800;
        v571 = xmmword_22467C810;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 3, 1, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x8B000000CBLL), xmmword_22467C810);
      }
    }
    v360 = (v464 & 1) == 0 && ((v338 | v485) & 1) == 0;
    if (v360 && (v471 & 1) == 0)
    {
      v572 = v527;
      v573 = v528;
      v574 = v529;
      v571 = v526;
      v570 = v525;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467C820;
      v566 = xmmword_22467C830;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 3, 1, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x8B000000CBLL), xmmword_22467C830);
    }
  }
  v361 = *((_DWORD *)v251 + 133);
  if (**v507)
  {
    v362 = *((_DWORD *)v251 + 197);
    v363 = *((_DWORD *)v251 + 141);
    v364 = *((_DWORD *)v251 + 205);
    v365 = *((_DWORD *)v251 + 149);
  }
  else
  {
    if ((v361 & 0x10000000) != 0)
      v366 = 0x40000000;
    else
      v366 = 0x80000000;
    if ((v361 & 0x20000000) != 0)
      v361 = v366;
    else
      v361 &= 0xCFFFFFFF;
    v367 = *((_DWORD *)v251 + 197);
    if ((v367 & 0x10000000) != 0)
      v368 = 0x40000000;
    else
      v368 = 0x80000000;
    if ((v367 & 0x20000000) != 0)
      v362 = v368;
    else
      v362 = v367 & 0xCFFFFFFF;
    v369 = *((_DWORD *)v251 + 141);
    if ((v369 & 0x10000000) != 0)
      v370 = 0x40000000;
    else
      v370 = 0x80000000;
    if ((v369 & 0x20000000) != 0)
      v363 = v370;
    else
      v363 = v369 & 0xCFFFFFFF;
    v371 = *((_DWORD *)v251 + 205);
    if ((v371 & 0x10000000) != 0)
      v372 = 0x40000000;
    else
      v372 = 0x80000000;
    if ((v371 & 0x20000000) != 0)
      v364 = v372;
    else
      v364 = v371 & 0xCFFFFFFF;
    v373 = *((_DWORD *)v251 + 149);
    if ((v373 & 0x10000000) != 0)
      v365 = 0x40000000;
    else
      v365 = 0x80000000;
    if ((v373 & 0x20000000) == 0)
      v365 = v373 & 0xCFFFFFFF;
  }
  v374 = v363 >> 30;
  v453 = v361 >> 30;
  v375 = v362 >> 30;
  v476 = v365 >> 30;
  if ((v346 & 0x40000000) != 0)
  {
    v542 = v527;
    v543 = v528;
    v544 = v529;
    v541 = v526;
    v540 = v525;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467C840;
    v536 = xmmword_22467C850;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 4, 1, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x10C000000CCLL), xmmword_22467C850);
    if ((v328 & 0x40000000) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467C860;
      v596 = xmmword_22467C870;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 4, 1, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x10C000000CCLL), xmmword_22467C870);
      if (((v496 | v490) & 1) == 0)
      {
        v597 = v527;
        v598 = v528;
        v599 = v529;
        v595 = v525;
        v596 = v526;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_22467C880;
        v591 = xmmword_22467C890;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 4, 1, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x10C000000CCLL), xmmword_22467C890);
        v376 = (v457 & 1) == 0 && ((v338 | v485) & 1) == 0;
        if ((v449 & 1) == 0 && v376)
        {
          v592 = v527;
          v593 = v528;
          v594 = v529;
          v591 = v526;
          v590 = v525;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_22467C8A0;
          v586 = xmmword_22467C8B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 4, 1, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x8C000000CCLL), xmmword_22467C8B0);
        }
      }
      v377 = (v464 & 1) == 0 && ((v338 | v485) & 1) == 0;
      if (v377 && (v471 & 1) == 0)
      {
        v587 = v527;
        v588 = v528;
        v589 = v529;
        v586 = v526;
        v585 = v525;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467C8C0;
        v581 = xmmword_22467C8D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 4, 1, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x8C000000CCLL), xmmword_22467C8D0);
      }
    }
    if (((v490 | v375) & 1) == 0)
    {
      v582 = v527;
      v583 = v528;
      v584 = v529;
      v581 = v526;
      v580 = v525;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_22467C8E0;
      v576 = xmmword_22467C8F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 4, 1, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x10C000000CCLL), xmmword_22467C8F0);
      v378 = (v453 & 1) == 0 && ((v485 | v374) & 1) == 0;
      if ((v457 & 1) == 0 && v378)
      {
        v577 = v527;
        v578 = v528;
        v579 = v529;
        v576 = v526;
        v575 = v525;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_22467C900;
        v571 = xmmword_22467C910;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 4, 1, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x8C000000CCLL), xmmword_22467C910);
      }
    }
    v379 = (v471 & 1) == 0 && ((v485 | v374) & 1) == 0;
    if (v379 && (v476 & 1) == 0)
    {
      v572 = v527;
      v573 = v528;
      v574 = v529;
      v571 = v526;
      v570 = v525;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467C920;
      v566 = xmmword_22467C930;
      *(_QWORD *)&v555 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 4, 1, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x8C000000CCLL), xmmword_22467C930);
    }
  }
  v380 = *((_DWORD *)v251 + 134);
  if (**v507)
  {
    v381 = *((_DWORD *)v251 + 198);
    v382 = *((_DWORD *)v251 + 142);
    v383 = *((_DWORD *)v251 + 206);
    v384 = *((_DWORD *)v251 + 150);
  }
  else
  {
    if ((v380 & 0x10000000) != 0)
      v385 = 0x40000000;
    else
      v385 = 0x80000000;
    if ((v380 & 0x20000000) != 0)
      v380 = v385;
    else
      v380 &= 0xCFFFFFFF;
    v386 = *((_DWORD *)v251 + 198);
    if ((v386 & 0x10000000) != 0)
      v387 = 0x40000000;
    else
      v387 = 0x80000000;
    if ((v386 & 0x20000000) != 0)
      v381 = v387;
    else
      v381 = v386 & 0xCFFFFFFF;
    v388 = *((_DWORD *)v251 + 142);
    if ((v388 & 0x10000000) != 0)
      v389 = 0x40000000;
    else
      v389 = 0x80000000;
    if ((v388 & 0x20000000) != 0)
      v382 = v389;
    else
      v382 = v388 & 0xCFFFFFFF;
    v390 = *((_DWORD *)v251 + 206);
    if ((v390 & 0x10000000) != 0)
      v391 = 0x40000000;
    else
      v391 = 0x80000000;
    if ((v390 & 0x20000000) != 0)
      v383 = v391;
    else
      v383 = v390 & 0xCFFFFFFF;
    v392 = *((_DWORD *)v251 + 150);
    if ((v392 & 0x10000000) != 0)
      v384 = 0x40000000;
    else
      v384 = 0x80000000;
    if ((v392 & 0x20000000) == 0)
      v384 = v392 & 0xCFFFFFFF;
  }
  v481 = v382 >> 30;
  v497 = v381 >> 30;
  v465 = v380 >> 30;
  v468 = v384 >> 30;
  v557 = v527;
  v558 = v528;
  v559 = v529;
  v556 = v526;
  v555 = v525;
  if ((v364 & 0x40000000) != 0)
  {
    v542 = v527;
    v543 = v528;
    v544 = v529;
    v541 = v526;
    v540 = v525;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467C940;
    v536 = xmmword_22467C950;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 5, 1, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x10D000000CDLL), xmmword_22467C950);
    if ((v346 & 0x40000000) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467C960;
      v596 = xmmword_22467C970;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 5, 1, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x10D000000CDLL), xmmword_22467C970);
      if (((v490 | v375) & 1) == 0)
      {
        v597 = v527;
        v598 = v528;
        v599 = v529;
        v595 = v525;
        v596 = v526;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_22467C980;
        v591 = xmmword_22467C990;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 5, 1, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x10D000000CDLL), xmmword_22467C990);
        v393 = (v453 & 1) == 0 && ((v485 | v374) & 1) == 0;
        if ((v457 & 1) == 0 && v393)
        {
          v592 = v527;
          v593 = v528;
          v594 = v529;
          v591 = v526;
          v590 = v525;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_22467C9A0;
          v586 = xmmword_22467C9B0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 5, 1, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x8D000000CDLL), xmmword_22467C9B0);
        }
      }
      v394 = (v471 & 1) == 0 && ((v485 | v374) & 1) == 0;
      if (v394 && (v476 & 1) == 0)
      {
        v587 = v557;
        v588 = v558;
        v589 = v559;
        v586 = v556;
        v585 = v555;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467C9C0;
        v581 = xmmword_22467C9D0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 5, 1, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x8D000000CDLL), xmmword_22467C9D0);
      }
    }
    if (((v375 | v497) & 1) == 0)
    {
      v582 = v557;
      v583 = v558;
      v584 = v559;
      v581 = v556;
      v580 = v555;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_22467C9E0;
      v576 = xmmword_22467C9F0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 5, 1, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x10D000000CDLL), xmmword_22467C9F0);
      v395 = (v465 & 1) == 0 && ((v374 | v481) & 1) == 0;
      if ((v453 & 1) == 0 && v395)
      {
        v577 = v557;
        v578 = v558;
        v579 = v559;
        v576 = v556;
        v575 = v555;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_22467CA00;
        v571 = xmmword_22467CA10;
        *(_QWORD *)&v560 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 5, 1, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x8D000000CDLL), xmmword_22467CA10);
      }
    }
    v396 = (v476 & 1) == 0 && ((v374 | v481) & 1) == 0;
    if (v396 && (v468 & 1) == 0)
    {
      v572 = v557;
      v573 = v558;
      v574 = v559;
      v571 = v556;
      v570 = v555;
      *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467CA20;
      v566 = xmmword_22467CA30;
      *(_QWORD *)&v550 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 5, 1, 3, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v550, COERCE_DOUBLE(0x8D000000CDLL), xmmword_22467CA30);
    }
  }
  v552 = v527;
  v553 = v528;
  v554 = v529;
  v551 = v526;
  v550 = v525;
  v397 = *((_DWORD *)v251 + 135);
  if (**v507)
  {
    v398 = *((_DWORD *)v251 + 199);
    v399 = *((_DWORD *)v251 + 143);
    v400 = *((_DWORD *)v251 + 207);
    v401 = *((_DWORD *)v251 + 151);
  }
  else
  {
    if ((v397 & 0x10000000) != 0)
      v402 = 0x40000000;
    else
      v402 = 0x80000000;
    if ((v397 & 0x20000000) != 0)
      v397 = v402;
    else
      v397 &= 0xCFFFFFFF;
    v403 = *((_DWORD *)v251 + 199);
    if ((v403 & 0x10000000) != 0)
      v404 = 0x40000000;
    else
      v404 = 0x80000000;
    if ((v403 & 0x20000000) != 0)
      v398 = v404;
    else
      v398 = v403 & 0xCFFFFFFF;
    v405 = *((_DWORD *)v251 + 143);
    if ((v405 & 0x10000000) != 0)
      v406 = 0x40000000;
    else
      v406 = 0x80000000;
    if ((v405 & 0x20000000) != 0)
      v399 = v406;
    else
      v399 = v405 & 0xCFFFFFFF;
    v407 = *((_DWORD *)v251 + 207);
    if ((v407 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v407 & 0x20000000) != 0)
      v400 = v408;
    else
      v400 = v407 & 0xCFFFFFFF;
    v409 = *((_DWORD *)v251 + 151);
    if ((v409 & 0x10000000) != 0)
      v401 = 0x40000000;
    else
      v401 = 0x80000000;
    if ((v409 & 0x20000000) == 0)
      v401 = v409 & 0xCFFFFFFF;
  }
  v410 = v399 >> 30;
  v491 = v397 >> 30;
  v411 = v398 >> 30;
  v508 = v401 >> 30;
  v562 = v527;
  v563 = v528;
  v564 = v529;
  v561 = v526;
  v560 = v525;
  if ((v383 & 0x40000000) != 0)
  {
    v542 = v527;
    v543 = v528;
    v544 = v529;
    v541 = v526;
    v540 = v525;
    *(_QWORD *)&v595 = 0xD0D0D0D0D0D0D0DLL;
    v535 = xmmword_22467CA40;
    v536 = xmmword_22467CA50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 6, 1, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x10E000000CELL), xmmword_22467CA50);
    if ((v364 & 0x40000000) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467CA60;
      v596 = xmmword_22467CA70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 6, 1, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x10E000000CELL), xmmword_22467CA70);
      if (((v375 | v497) & 1) == 0)
      {
        v597 = v527;
        v598 = v528;
        v599 = v529;
        v595 = v525;
        v596 = v526;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_22467CA80;
        v591 = xmmword_22467CA90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 6, 1, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x10E000000CELL), xmmword_22467CA90);
        v412 = (v465 & 1) == 0 && ((v374 | v481) & 1) == 0;
        if ((v453 & 1) == 0 && v412)
        {
          v592 = v527;
          v593 = v528;
          v594 = v529;
          v591 = v526;
          v590 = v525;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_22467CAA0;
          v586 = xmmword_22467CAB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 6, 1, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x8E000000CELL), xmmword_22467CAB0);
        }
      }
      v413 = (v476 & 1) == 0 && ((v374 | v481) & 1) == 0;
      if (v413 && (v468 & 1) == 0)
      {
        v587 = v562;
        v588 = v563;
        v589 = v564;
        v586 = v561;
        v585 = v560;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v580 = xmmword_22467CAC0;
        v581 = xmmword_22467CAD0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 6, 1, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x8E000000CELL), xmmword_22467CAD0);
      }
    }
    if (((v497 | v411) & 1) == 0)
    {
      v582 = v562;
      v583 = v563;
      v584 = v564;
      v581 = v561;
      v580 = v560;
      *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
      v575 = xmmword_22467CAE0;
      v576 = xmmword_22467CAF0;
      *(_QWORD *)&v565 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 6, 1, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)&v565, COERCE_DOUBLE(0x10E000000CELL), xmmword_22467CAF0);
      v414 = (v491 & 1) == 0 && ((v481 | v410) & 1) == 0;
      if ((v465 & 1) == 0 && v414)
      {
        v577 = v562;
        v578 = v563;
        v579 = v564;
        v576 = v561;
        v575 = v560;
        *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
        v570 = xmmword_22467CB00;
        v571 = xmmword_22467CB10;
        *(_QWORD *)&v601[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 6, 1, 3, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)v601, COERCE_DOUBLE(0x8E000000CELL), xmmword_22467CB10);
      }
    }
    v415 = (v468 & 1) == 0 && ((v481 | v410) & 1) == 0;
    if (v415 && (v508 & 1) == 0)
    {
      v572 = v562;
      v573 = v563;
      v574 = v564;
      v571 = v561;
      v570 = v560;
      *(_QWORD *)&v601[0] = 0xD0D0D0D0D0D0D0DLL;
      v565 = xmmword_22467CB20;
      v566 = xmmword_22467CB30;
      v602[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 6, 1, 3, (uint64_t)v601, (uint64_t)&v565, (uint64_t)v602, COERCE_DOUBLE(0x8E000000CELL), xmmword_22467CB30);
    }
  }
  v416 = *(unsigned int *)(v512 + 88);
  if ((v416 & 0x80000000) != 0)
  {
    v419 = *v502;
    v420 = *(_DWORD *)(v514 + 792);
    v421 = **v502;
    if (**v502)
      goto LABEL_1184;
  }
  else
  {
    v417 = *(_QWORD *)(v514 + 2328);
    if (v416 >= (*(_QWORD *)(v514 + 2336) - v417) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v417 = *(_QWORD *)(v514 + 2328);
    }
    v418 = v417 + (v416 << 11);
    v419 = *v502;
    v420 = *(_DWORD *)(v418 + 512);
    v421 = **v502;
    if (**v502)
    {
LABEL_1184:
      v422 = *(unsigned int *)(v512 + 88);
      if ((v422 & 0x80000000) == 0)
        goto LABEL_1185;
LABEL_1204:
      v424 = *(_DWORD *)(v514 + 1048);
      if (v421)
        goto LABEL_1189;
      goto LABEL_1205;
    }
  }
  if ((v420 & 0x10000000) != 0)
    v429 = 0x40000000;
  else
    v429 = 0x80000000;
  if ((v420 & 0x20000000) != 0)
    v420 = v429;
  else
    v420 &= 0xCFFFFFFF;
  v422 = *(unsigned int *)(v512 + 88);
  if ((v422 & 0x80000000) != 0)
    goto LABEL_1204;
LABEL_1185:
  v423 = *(_QWORD *)(v514 + 2328);
  if (v422 >= (*(_QWORD *)(v514 + 2336) - v423) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v423 = *(_QWORD *)(v514 + 2328);
    v419 = *v502;
    v421 = **v502;
  }
  v424 = *(_DWORD *)(v423 + (v422 << 11) + 768);
  if (v421)
  {
LABEL_1189:
    v425 = *(unsigned int *)(v512 + 88);
    if ((v425 & 0x80000000) == 0)
      goto LABEL_1190;
LABEL_1212:
    v427 = *(_DWORD *)(v514 + 824);
    if (v421)
      goto LABEL_1194;
    goto LABEL_1213;
  }
LABEL_1205:
  if ((v424 & 0x10000000) != 0)
    v430 = 0x40000000;
  else
    v430 = 0x80000000;
  if ((v424 & 0x20000000) != 0)
    v424 = v430;
  else
    v424 &= 0xCFFFFFFF;
  v425 = *(unsigned int *)(v512 + 88);
  if ((v425 & 0x80000000) != 0)
    goto LABEL_1212;
LABEL_1190:
  v426 = *(_QWORD *)(v514 + 2328);
  if (v425 >= (*(_QWORD *)(v514 + 2336) - v426) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v426 = *(_QWORD *)(v514 + 2328);
    v419 = *v502;
    v421 = **v502;
  }
  v427 = *(_DWORD *)(v426 + (v425 << 11) + 544);
  if (v421)
  {
LABEL_1194:
    v428 = *(unsigned int *)(v512 + 88);
    if ((v428 & 0x80000000) != 0)
      goto LABEL_1263;
    goto LABEL_1220;
  }
LABEL_1213:
  if ((v427 & 0x10000000) != 0)
    v431 = 0x40000000;
  else
    v431 = 0x80000000;
  if ((v427 & 0x20000000) != 0)
    v427 = v431;
  else
    v427 &= 0xCFFFFFFF;
  v428 = *(unsigned int *)(v512 + 88);
  if ((v428 & 0x80000000) != 0)
    goto LABEL_1263;
LABEL_1220:
  v432 = *(_QWORD *)(v514 + 2328);
  v433 = (*(_QWORD *)(v514 + 2336) - v432) >> 11;
  if (v433 > v428)
    goto LABEL_1224;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v419 = *v502;
  v428 = *(unsigned int *)(v512 + 88);
  if ((v428 & 0x80000000) != 0)
  {
LABEL_1263:
    v434 = *(_DWORD *)(v514 + 856);
    if (*v419)
      goto LABEL_1234;
    goto LABEL_1228;
  }
  v432 = *(_QWORD *)(v514 + 2328);
  v433 = (*(_QWORD *)(v514 + 2336) - v432) >> 11;
LABEL_1224:
  if (v433 <= v428)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v432 = *(_QWORD *)(v514 + 2328);
    v419 = *v502;
  }
  v434 = *(_DWORD *)(v432 + (v428 << 11) + 576);
  if (!*v419)
  {
LABEL_1228:
    if ((v434 & 0x10000000) != 0)
      v435 = 0x40000000;
    else
      v435 = 0x80000000;
    if ((v434 & 0x20000000) != 0)
      v434 = v435;
    else
      v434 &= 0xCFFFFFFF;
  }
LABEL_1234:
  v567 = v552;
  v568 = v553;
  v569 = v554;
  v566 = v551;
  v565 = v550;
  if ((v400 & 0x40000000) != 0)
  {
    v542 = v552;
    v543 = v553;
    v544 = v554;
    v541 = v551;
    v540 = v550;
    *(_QWORD *)&v595 = 0x161616160D0D0D0DLL;
    v535 = xmmword_22467CB40;
    v536 = xmmword_22467CB50;
    *(_QWORD *)&v590 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v540, 7, 1, 3, (uint64_t)&v595, (uint64_t)&v535, (uint64_t)&v590, COERCE_DOUBLE(0x10F000000CFLL), xmmword_22467CB50);
    if ((v383 & 0x40000000) == 0)
    {
      v537 = v552;
      v538 = v553;
      v539 = v554;
      v536 = v551;
      v535 = v550;
      *(_QWORD *)&v590 = 0xD0D0D0D0D0D0D0DLL;
      v595 = xmmword_22467CB60;
      v596 = xmmword_22467CB70;
      *(_QWORD *)&v585 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v535, 7, 1, 3, (uint64_t)&v590, (uint64_t)&v595, (uint64_t)&v585, COERCE_DOUBLE(0x10F000000CFLL), xmmword_22467CB70);
      if (((v497 | v411) & 1) == 0)
      {
        v597 = v552;
        v598 = v553;
        v599 = v554;
        v595 = v550;
        v596 = v551;
        *(_QWORD *)&v585 = 0xD0D0D0D0D0D0D0DLL;
        v590 = xmmword_22467CB80;
        v591 = xmmword_22467CB90;
        *(_QWORD *)&v580 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v595, 7, 1, 3, (uint64_t)&v585, (uint64_t)&v590, (uint64_t)&v580, COERCE_DOUBLE(0x10F000000CFLL), xmmword_22467CB90);
        v436 = (v491 & 1) == 0 && ((v481 | v410) & 1) == 0;
        if ((v465 & 1) == 0 && v436)
        {
          v592 = v552;
          v593 = v553;
          v594 = v554;
          v591 = v551;
          v590 = v550;
          *(_QWORD *)&v580 = 0xD0D0D0D0D0D0D0DLL;
          v585 = xmmword_22467CBA0;
          v586 = xmmword_22467CBB0;
          *(_QWORD *)&v575 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v590, 7, 1, 3, (uint64_t)&v580, (uint64_t)&v585, (uint64_t)&v575, COERCE_DOUBLE(0x8F000000CFLL), xmmword_22467CBB0);
        }
      }
      v437 = (v468 & 1) == 0 && ((v481 | v410) & 1) == 0;
      if (v437 && (v508 & 1) == 0)
      {
        v587 = v567;
        v588 = v568;
        v589 = v569;
        *(_QWORD *)&v575 = 0xD0D0D0D0D0D0D0DLL;
        v586 = v566;
        v585 = v565;
        v580 = xmmword_22467CBC0;
        v581 = xmmword_22467CBD0;
        *(_QWORD *)&v570 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v585, 7, 1, 3, (uint64_t)&v575, (uint64_t)&v580, (uint64_t)&v570, COERCE_DOUBLE(0x8F000000CFLL), xmmword_22467CBD0);
      }
    }
    v438 = (v427 & 0x40000000 | v410 & 1) == 0;
    if (!(v424 & 0x40000000 | v411 & 1))
    {
      v582 = v567;
      v583 = v568;
      v584 = v569;
      *(_QWORD *)&v570 = 0x16160D0D16160D0DLL;
      v581 = v566;
      v580 = v565;
      v575 = xmmword_22467CBE0;
      v576 = xmmword_22467CBF0;
      *(_QWORD *)&v601[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v580, 7, 1, 3, (uint64_t)&v570, (uint64_t)&v575, (uint64_t)v601, COERCE_DOUBLE(0x10F000000CFLL), xmmword_22467CBF0);
      v439 = (v420 & 0x40000000) == 0 && v438;
      if ((v491 & 1) == 0 && v439)
      {
        v577 = v567;
        v578 = v568;
        v579 = v569;
        *(_QWORD *)&v601[0] = 0x161616160D0D0D0DLL;
        v576 = v566;
        v575 = v565;
        v570 = xmmword_22467CC00;
        v571 = xmmword_22467CC10;
        v602[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v575, 7, 1, 3, (uint64_t)v601, (uint64_t)&v570, (uint64_t)v602, COERCE_DOUBLE(0x8F000000CFLL), xmmword_22467CC10);
      }
    }
    v440 = (v508 & 1) == 0 && v438;
    if (v440 && (v434 & 0x40000000) == 0)
    {
      v572 = v567;
      v573 = v568;
      v574 = v569;
      v602[0] = 0x16160D0D16160D0DLL;
      v571 = v566;
      v570 = v565;
      v601[0] = xmmword_22467CC20;
      v601[1] = xmmword_22467CC30;
      v600 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v570, 7, 1, 3, (uint64_t)v602, (uint64_t)v601, (uint64_t)&v600, COERCE_DOUBLE(0x8F000000CFLL), xmmword_22467CC30);
    }
  }
  v535 = v460;
  v536.i64[0] = (uint64_t)v251;
  *(_QWORD *)&v595 = v514;
  *((_QWORD *)&v595 + 1) = v512;
  v596.i64[0] = (uint64_t)v502;
  v544 = v519;
  v543 = v518;
  v542 = v517;
  v540 = v515;
  v541 = v516;
  return sub_223DE6518((unsigned __int8 ***)&v535, &v595, &v540);
}

unint64_t sub_223DE6518(unsigned __int8 ***a1, _QWORD *a2, __int128 *a3)
{
  unsigned __int8 **v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  _BYTE **v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  _BYTE **v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  _BYTE **v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  _BYTE **v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  _BYTE **v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  __int128 v78;
  __int128 v79;
  _BOOL4 v80;
  _BOOL4 v81;
  _BOOL4 v82;
  _BOOL4 v83;
  _BOOL4 v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  _BOOL4 v99;
  _BOOL4 v100;
  _BOOL4 v101;
  _BOOL4 v102;
  _BOOL4 v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  _BOOL4 v118;
  _BOOL4 v119;
  _BOOL4 v120;
  _BOOL4 v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  _BOOL4 v135;
  _BOOL4 v136;
  _BOOL4 v137;
  _BOOL4 v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  _BOOL4 v154;
  _BOOL4 v155;
  _BOOL4 v156;
  _BOOL4 v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  _BOOL4 v171;
  _BOOL4 v172;
  _BOOL4 v173;
  _BOOL4 v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  _BOOL4 v190;
  _BOOL4 v191;
  _BOOL4 v192;
  _BOOL4 v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _BYTE *v197;
  unsigned int v198;
  int v199;
  unint64_t v200;
  uint64_t v201;
  unsigned int v202;
  unint64_t v203;
  uint64_t v204;
  unsigned int v205;
  unint64_t v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  uint64_t v210;
  unint64_t v211;
  unsigned int v212;
  unsigned int v213;
  _BOOL4 v214;
  _BOOL4 v215;
  _BOOL4 v216;
  _BOOL4 v217;
  unsigned __int8 **v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  unint64_t v236;
  uint64_t v237;
  unsigned int v238;
  int v239;
  unint64_t v240;
  uint64_t v241;
  unsigned int v242;
  unint64_t v243;
  uint64_t v244;
  unsigned int v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  _BOOL4 v270;
  _BOOL4 v271;
  _BOOL4 v272;
  _BOOL4 v273;
  _BOOL4 v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  int v287;
  int v288;
  _BOOL4 v289;
  _BOOL4 v290;
  _BOOL4 v291;
  _BOOL4 v292;
  _BOOL4 v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  int v300;
  unsigned int v301;
  int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  _BOOL4 v309;
  _BOOL4 v310;
  _BOOL4 v311;
  _BOOL4 v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  _BOOL4 v327;
  _BOOL4 v328;
  _BOOL4 v329;
  _BOOL4 v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  _BOOL4 v345;
  _BOOL4 v346;
  _BOOL4 v347;
  _BOOL4 v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  int v361;
  _BOOL4 v362;
  _BOOL4 v363;
  _BOOL4 v364;
  _BOOL4 v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  _BOOL4 v381;
  _BOOL4 v382;
  _BOOL4 v383;
  _BOOL4 v384;
  unint64_t v385;
  uint64_t v386;
  uint64_t v387;
  _BYTE *v388;
  unsigned int v389;
  int v390;
  unint64_t v391;
  uint64_t v392;
  unsigned int v393;
  unint64_t v394;
  uint64_t v395;
  unsigned int v396;
  unint64_t v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  uint64_t v401;
  unint64_t v402;
  unsigned int v403;
  unsigned int v404;
  _BOOL4 v405;
  _BOOL4 v406;
  _BOOL4 v407;
  _BOOL4 v408;
  _BOOL4 v409;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  __int128 v429;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned __int8 **v462;
  int v463;
  unsigned int v464;
  unsigned int v465;
  _QWORD *v466;
  _BYTE **v467;
  unsigned int v468;
  uint64_t v469;
  _BYTE **v470;
  unsigned int v471;
  _BYTE **v472;
  unsigned int v473;
  unsigned int v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  float32x4_t v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  uint64_t v568;
  _OWORD v569[2];
  _QWORD v570[3];

  v570[1] = *MEMORY[0x24BDAC8D0];
  v4 = a1[2];
  v472 = *a1;
  v5 = *((_DWORD *)v4 + 136);
  v6 = ***a1;
  v466 = a2;
  if (***a1)
  {
    v7 = *((_DWORD *)v4 + 200);
    v8 = *((_DWORD *)v4 + 144);
    v9 = *((_DWORD *)v4 + 208);
    v10 = *((_DWORD *)v4 + 152);
    v476 = *a2;
    v456 = v9;
    if ((v9 & 0x40000000) == 0)
    {
LABEL_3:
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      goto LABEL_91;
    }
  }
  else
  {
    if ((v5 & 0x20000000) != 0)
      v5 *= 4;
    v16 = *((_DWORD *)v4 + 200);
    if ((v16 & 0x20000000) != 0)
      v7 = 4 * v16;
    else
      v7 = *((_DWORD *)v4 + 200);
    v17 = *((_DWORD *)v4 + 144);
    if ((v17 & 0x20000000) != 0)
      v8 = 4 * v17;
    else
      v8 = *((_DWORD *)v4 + 144);
    v18 = *((_DWORD *)v4 + 208);
    if ((v18 & 0x20000000) != 0)
      v9 = 4 * v18;
    else
      v9 = *((_DWORD *)v4 + 208);
    v19 = *((_DWORD *)v4 + 152);
    if ((v19 & 0x10000000) != 0)
      v20 = 0x40000000;
    else
      v20 = 0x80000000;
    if ((v19 & 0x20000000) != 0)
      v10 = v20;
    else
      v10 = v19 & 0xCFFFFFFF;
    v476 = *a2;
    v456 = v9;
    if ((v9 & 0x40000000) == 0)
      goto LABEL_3;
  }
  v468 = v8;
  v21 = (_BYTE **)a2[2];
  v22 = *(unsigned int *)(a2[1] + 16);
  v473 = v7;
  if ((v22 & 0x80000000) != 0)
  {
    v24 = v476 + 280;
  }
  else
  {
    v23 = *(_QWORD *)(v476 + 2328);
    if (v22 >= (*(_QWORD *)(v476 + 2336) - v23) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v23 = *(_QWORD *)(v476 + 2328);
      v9 = v456;
      v7 = v473;
    }
    v24 = v23 + (v22 << 11);
  }
  v25 = *(_DWORD *)(v24 + 572);
  v26 = v25 & 0xCFFFFFFF;
  if ((v25 & 0x10000000) != 0)
    v27 = 0x40000000;
  else
    v27 = 0x80000000;
  if ((v25 & 0x20000000) != 0)
    v26 = v27;
  if (**v21)
    v28 = v25;
  else
    v28 = v26;
  v29 = *v466;
  v30 = (_BYTE **)v466[2];
  v31 = *(unsigned int *)(v466[1] + 16);
  if ((v31 & 0x80000000) != 0)
  {
    v33 = v29 + 280;
  }
  else
  {
    v32 = *(_QWORD *)(v29 + 2328);
    if (v31 >= (*(_QWORD *)(v29 + 2336) - v32) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v32 = *(_QWORD *)(v29 + 2328);
      v9 = v456;
      v7 = v473;
    }
    v33 = v32 + (v31 << 11);
  }
  v34 = *(_DWORD *)(v33 + 828);
  v35 = v34 & 0xCFFFFFFF;
  if ((v34 & 0x10000000) != 0)
    v36 = 0x40000000;
  else
    v36 = 0x80000000;
  if ((v34 & 0x20000000) != 0)
    v35 = v36;
  if (**v30)
    v37 = v34;
  else
    v37 = v35;
  v38 = *v466;
  v39 = (_BYTE **)v466[2];
  v40 = *(unsigned int *)(v466[1] + 16);
  if ((v40 & 0x80000000) != 0)
  {
    v42 = v38 + 280;
  }
  else
  {
    v41 = *(_QWORD *)(v38 + 2328);
    if (v40 >= (*(_QWORD *)(v38 + 2336) - v41) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v41 = *(_QWORD *)(v38 + 2328);
      v9 = v456;
      v7 = v473;
    }
    v42 = v41 + (v40 << 11);
  }
  v43 = *(_DWORD *)(v42 + 604);
  v44 = v43 & 0xCFFFFFFF;
  if ((v43 & 0x10000000) != 0)
    v45 = 0x40000000;
  else
    v45 = 0x80000000;
  if ((v43 & 0x20000000) != 0)
    v44 = v45;
  if (**v39)
    v46 = v43;
  else
    v46 = v44;
  v47 = *v466;
  v48 = (_BYTE **)v466[2];
  v49 = *(unsigned int *)(v466[1] + 16);
  if ((v49 & 0x80000000) != 0)
  {
    v51 = v10;
    v52 = v28;
    v53 = *(_DWORD *)(v47 + 1140);
    if (**v48)
      goto LABEL_69;
  }
  else
  {
    v50 = *(_QWORD *)(v47 + 2328);
    if (v49 >= (*(_QWORD *)(v47 + 2336) - v50) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v50 = *(_QWORD *)(v47 + 2328);
      v9 = v456;
      v7 = v473;
    }
    v51 = v10;
    v52 = v28;
    v53 = *(_DWORD *)(v50 + (v49 << 11) + 860);
    if (**v48)
    {
LABEL_69:
      v54 = *v466;
      v55 = (_BYTE **)v466[2];
      v56 = *(unsigned int *)(v466[1] + 16);
      if ((v56 & 0x80000000) == 0)
        goto LABEL_70;
LABEL_82:
      v58 = v54 + 280;
      goto LABEL_83;
    }
  }
  if ((v53 & 0x10000000) != 0)
    v59 = 0x40000000;
  else
    v59 = 0x80000000;
  if ((v53 & 0x20000000) != 0)
    v53 = v59;
  else
    v53 &= 0xCFFFFFFF;
  v54 = *v466;
  v55 = (_BYTE **)v466[2];
  v56 = *(unsigned int *)(v466[1] + 16);
  if ((v56 & 0x80000000) != 0)
    goto LABEL_82;
LABEL_70:
  v57 = *(_QWORD *)(v54 + 2328);
  if (v56 >= (*(_QWORD *)(v54 + 2336) - v57) >> 11)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      v57 = *(_QWORD *)(v54 + 2328);
      v9 = v456;
      v7 = v473;
      goto LABEL_73;
    }
LABEL_1175:
    abort();
  }
LABEL_73:
  v58 = v57 + (v56 << 11);
LABEL_83:
  v15 = (v52 >> 30) & 1;
  v14 = (v37 >> 30) & 1;
  v13 = (v46 >> 30) & 1;
  v12 = (v53 >> 30) & 1;
  v60 = *(_DWORD *)(v58 + 636);
  v8 = v468;
  if (!**v55)
  {
    if ((v60 & 0x10000000) != 0)
      v61 = 0x40000000;
    else
      v61 = 0x80000000;
    if ((v60 & 0x20000000) != 0)
      v60 = v61;
    else
      v60 &= 0xCFFFFFFF;
  }
  v11 = (v60 >> 30) & 1;
  v4 = a1[2];
  a2 = v466;
  v472 = *a1;
  v476 = *v466;
  v6 = ***a1;
  v10 = v51;
LABEL_91:
  v434 = v5 >> 30;
  v469 = a2[1];
  v462 = (unsigned __int8 **)a2[2];
  v485 = a3[2];
  v486 = a3[3];
  v487 = a3[4];
  v483 = *a3;
  v484 = a3[1];
  v62 = *((_DWORD *)v4 + 137);
  if (v6)
  {
    v63 = *((_DWORD *)v4 + 201);
    v64 = *((_DWORD *)v4 + 145);
    v451 = *((_DWORD *)v4 + 209);
    v65 = *((_DWORD *)v4 + 153);
  }
  else
  {
    if ((v62 & 0x10000000) != 0)
      v66 = 0x40000000;
    else
      v66 = 0x80000000;
    if ((v62 & 0x20000000) != 0)
      v62 = v66;
    else
      v62 &= 0xCFFFFFFF;
    v67 = *((_DWORD *)v4 + 201);
    if ((v67 & 0x10000000) != 0)
      v68 = 0x40000000;
    else
      v68 = 0x80000000;
    if ((v67 & 0x20000000) != 0)
      v63 = v68;
    else
      v63 = v67 & 0xCFFFFFFF;
    v69 = *((_DWORD *)v4 + 145);
    if ((v69 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v69 & 0x20000000) != 0)
      v64 = v70;
    else
      v64 = v69 & 0xCFFFFFFF;
    v71 = *((_DWORD *)v4 + 209);
    if ((v71 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v71 & 0x20000000) != 0)
      v73 = v72;
    else
      v73 = v71 & 0xCFFFFFFF;
    v451 = v73;
    v74 = *((_DWORD *)v4 + 153);
    if ((v74 & 0x10000000) != 0)
      v65 = 0x40000000;
    else
      v65 = 0x80000000;
    if ((v74 & 0x20000000) == 0)
      v65 = v74 & 0xCFFFFFFF;
  }
  v75 = v8 >> 30;
  v76 = v7 >> 30;
  v77 = v10 >> 30;
  v419 = v62 >> 30;
  v443 = v64 >> 30;
  v447 = v63 >> 30;
  v427 = v65 >> 30;
  v495 = a3[2];
  v496 = a3[3];
  v497 = a3[4];
  v493 = *a3;
  v494 = a3[1];
  if ((v9 & 0x40000000) != 0)
  {
    v78 = a3[3];
    v510 = a3[2];
    v511 = v78;
    v512 = a3[4];
    v79 = *a3;
    v509 = a3[1];
    v508 = v79;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467CC40;
    v504 = (__int128)xmmword_22467CC50;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 0, 2, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x110000000D0), xmmword_22467CC50);
    if (!v12)
    {
      v505 = v495;
      v506 = v496;
      v507 = v497;
      v504 = v494;
      v503 = v493;
      *(_QWORD *)&v558 = 0x4040D0D04040D0DLL;
      v563 = xmmword_22467CC60;
      v564 = (__int128)xmmword_22467CC70;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 0, 2, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x110000000D0), xmmword_22467CC70);
      v80 = (v13 | v75 & 1) == 0;
      if (!(v14 | v76 & 1))
      {
        v565 = v495;
        v566 = v496;
        v567 = v497;
        v563 = v493;
        v564 = v494;
        *(_QWORD *)&v553 = 0x40404040D0D0D0DLL;
        v558 = xmmword_22467CC80;
        v559 = (__int128)xmmword_22467CC90;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 0, 2, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x110000000D0), xmmword_22467CC90);
        v81 = (v434 & 1) == 0 && v80;
        if (!v15 && v81)
        {
          v560 = v495;
          v561 = v496;
          v562 = v497;
          v559 = v494;
          v558 = v493;
          *(_QWORD *)&v548 = 0x4040D0D04040D0DLL;
          v553 = xmmword_22467CCA0;
          v554 = (__int128)xmmword_22467CCB0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 0, 2, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x90000000D0), xmmword_22467CCB0);
        }
      }
      if (v11)
        v82 = 0;
      else
        v82 = v80;
      if (v82 && (v77 & 1) == 0)
      {
        v555 = v495;
        v556 = v496;
        v557 = v497;
        *(_QWORD *)&v543 = 0x40404040D0D0D0DLL;
        v554 = v494;
        v553 = v493;
        v548 = xmmword_22467CCC0;
        v549 = (__int128)xmmword_22467CCD0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 0, 2, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x90000000D0), xmmword_22467CCD0);
      }
    }
    if (((v76 | v447) & 1) == 0)
    {
      v550 = v495;
      v551 = v496;
      v552 = v497;
      v549 = v494;
      v548 = v493;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467CCE0;
      v544 = (__int128)xmmword_22467CCF0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 0, 2, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x110000000D0), xmmword_22467CCF0);
      v83 = (v419 & 1) == 0 && ((v75 | v443) & 1) == 0;
      if ((v434 & 1) == 0 && v83)
      {
        v545 = v495;
        v546 = v496;
        v547 = v497;
        v544 = v494;
        v543 = v493;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467CD00;
        v539 = (__int128)xmmword_22467CD10;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 0, 2, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x90000000D0), xmmword_22467CD10);
      }
    }
    v84 = (v77 & 1) == 0 && ((v75 | v443) & 1) == 0;
    v9 = v456;
    if (v84 && (v427 & 1) == 0)
    {
      v540 = v495;
      v541 = v496;
      v542 = v497;
      v539 = v494;
      v538 = v493;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467CD20;
      v534 = xmmword_22467CD30;
      *(_QWORD *)&v523 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 0, 2, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v523, COERCE_DOUBLE(0x90000000D0), xmmword_22467CD30);
      v9 = v456;
    }
  }
  v85 = *((_DWORD *)v4 + 138);
  if (**v472)
  {
    v86 = *((_DWORD *)v4 + 202);
    v87 = *((_DWORD *)v4 + 146);
    v88 = *((_DWORD *)v4 + 210);
    v89 = *((_DWORD *)v4 + 154);
  }
  else
  {
    if ((v85 & 0x10000000) != 0)
      v90 = 0x40000000;
    else
      v90 = 0x80000000;
    if ((v85 & 0x20000000) != 0)
      v85 = v90;
    else
      v85 &= 0xCFFFFFFF;
    v91 = *((_DWORD *)v4 + 202);
    if ((v91 & 0x10000000) != 0)
      v92 = 0x40000000;
    else
      v92 = 0x80000000;
    if ((v91 & 0x20000000) != 0)
      v86 = v92;
    else
      v86 = v91 & 0xCFFFFFFF;
    v93 = *((_DWORD *)v4 + 146);
    if ((v93 & 0x10000000) != 0)
      v94 = 0x40000000;
    else
      v94 = 0x80000000;
    if ((v93 & 0x20000000) != 0)
      v87 = v94;
    else
      v87 = v93 & 0xCFFFFFFF;
    v95 = *((_DWORD *)v4 + 210);
    if ((v95 & 0x10000000) != 0)
      v96 = 0x40000000;
    else
      v96 = 0x80000000;
    if ((v95 & 0x20000000) != 0)
      v88 = v96;
    else
      v88 = v95 & 0xCFFFFFFF;
    v97 = *((_DWORD *)v4 + 154);
    if ((v97 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v97 & 0x20000000) == 0)
      v89 = v97 & 0xCFFFFFFF;
  }
  v439 = v87 >> 30;
  v416 = v85 >> 30;
  v457 = v86 >> 30;
  v98 = v89 >> 30;
  if ((v451 & 0x40000000) != 0)
  {
    v99 = (v9 & 0x40000000) == 0;
    v510 = v485;
    v511 = v486;
    v512 = v487;
    v509 = v484;
    v508 = v483;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467CD40;
    v504 = (__int128)xmmword_22467CD50;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 1, 2, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x111000000D1), xmmword_22467CD50);
    if (v99)
    {
      v505 = v485;
      v506 = v486;
      v507 = v487;
      v504 = v484;
      v503 = v483;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467CD60;
      v564 = (__int128)xmmword_22467CD70;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 1, 2, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x111000000D1), xmmword_22467CD70);
      if (((v76 | v447) & 1) == 0)
      {
        v565 = v485;
        v566 = v486;
        v567 = v487;
        v563 = v483;
        v564 = v484;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467CD80;
        v559 = (__int128)xmmword_22467CD90;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 1, 2, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x111000000D1), xmmword_22467CD90);
        v100 = (v419 & 1) == 0 && ((v75 | v443) & 1) == 0;
        if ((v434 & 1) == 0 && v100)
        {
          v560 = v485;
          v561 = v486;
          v562 = v487;
          v559 = v484;
          v558 = v483;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467CDA0;
          v554 = (__int128)xmmword_22467CDB0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 1, 2, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x91000000D1), xmmword_22467CDB0);
        }
      }
      v101 = (v77 & 1) == 0 && ((v75 | v443) & 1) == 0;
      if (v101 && (v427 & 1) == 0)
      {
        v555 = v485;
        v556 = v486;
        v557 = v487;
        v554 = v484;
        v553 = v483;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467CDC0;
        v549 = (__int128)xmmword_22467CDD0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 1, 2, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x91000000D1), xmmword_22467CDD0);
      }
    }
    if (((v447 | v457) & 1) == 0)
    {
      v550 = v485;
      v551 = v486;
      v552 = v487;
      v549 = v484;
      v548 = v483;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467CDE0;
      v544 = (__int128)xmmword_22467CDF0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 1, 2, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x111000000D1), xmmword_22467CDF0);
      v102 = (v416 & 1) == 0 && ((v443 | v439) & 1) == 0;
      if ((v419 & 1) == 0 && v102)
      {
        v545 = v485;
        v546 = v486;
        v547 = v487;
        v544 = v484;
        v543 = v483;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467CE00;
        v539 = (__int128)xmmword_22467CE10;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 1, 2, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x91000000D1), xmmword_22467CE10);
      }
    }
    v103 = (v427 & 1) == 0 && ((v443 | v439) & 1) == 0;
    if (v103 && (v98 & 1) == 0)
    {
      v540 = v485;
      v541 = v486;
      v542 = v487;
      v539 = v484;
      v538 = v483;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467CE20;
      v534 = xmmword_22467CE30;
      *(_QWORD *)&v523 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 1, 2, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v523, COERCE_DOUBLE(0x91000000D1), xmmword_22467CE30);
    }
  }
  v104 = *((_DWORD *)v4 + 139);
  if (**v472)
  {
    v105 = *((_DWORD *)v4 + 203);
    v106 = *((_DWORD *)v4 + 147);
    v107 = *((_DWORD *)v4 + 211);
    v108 = *((_DWORD *)v4 + 155);
  }
  else
  {
    if ((v104 & 0x10000000) != 0)
      v109 = 0x40000000;
    else
      v109 = 0x80000000;
    if ((v104 & 0x20000000) != 0)
      v104 = v109;
    else
      v104 &= 0xCFFFFFFF;
    v110 = *((_DWORD *)v4 + 203);
    if ((v110 & 0x10000000) != 0)
      v111 = 0x40000000;
    else
      v111 = 0x80000000;
    if ((v110 & 0x20000000) != 0)
      v105 = v111;
    else
      v105 = v110 & 0xCFFFFFFF;
    v112 = *((_DWORD *)v4 + 147);
    if ((v112 & 0x10000000) != 0)
      v113 = 0x40000000;
    else
      v113 = 0x80000000;
    if ((v112 & 0x20000000) != 0)
      v106 = v113;
    else
      v106 = v112 & 0xCFFFFFFF;
    v114 = *((_DWORD *)v4 + 211);
    if ((v114 & 0x10000000) != 0)
      v115 = 0x40000000;
    else
      v115 = 0x80000000;
    if ((v114 & 0x20000000) != 0)
      v107 = v115;
    else
      v107 = v114 & 0xCFFFFFFF;
    v116 = *((_DWORD *)v4 + 155);
    if ((v116 & 0x10000000) != 0)
      v108 = 0x40000000;
    else
      v108 = 0x80000000;
    if ((v116 & 0x20000000) == 0)
      v108 = v116 & 0xCFFFFFFF;
  }
  v117 = v106 >> 30;
  v415 = v104 >> 30;
  v435 = v105 >> 30;
  v423 = v108 >> 30;
  if ((v88 & 0x40000000) != 0)
  {
    v510 = v485;
    v511 = v486;
    v512 = v487;
    v509 = v484;
    v508 = v483;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467CE40;
    v504 = (__int128)xmmword_22467CE50;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 2, 2, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x112000000D2), xmmword_22467CE50);
    if ((v451 & 0x40000000) == 0)
    {
      v505 = v485;
      v506 = v486;
      v507 = v487;
      v504 = v484;
      v503 = v483;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467CE60;
      v564 = (__int128)xmmword_22467CE70;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 2, 2, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x112000000D2), xmmword_22467CE70);
      if (((v447 | v457) & 1) == 0)
      {
        v565 = v485;
        v566 = v486;
        v567 = v487;
        v563 = v483;
        v564 = v484;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467CE80;
        v559 = (__int128)xmmword_22467CE90;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 2, 2, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x112000000D2), xmmword_22467CE90);
        v118 = (v416 & 1) == 0 && ((v443 | v439) & 1) == 0;
        if ((v419 & 1) == 0 && v118)
        {
          v560 = v485;
          v561 = v486;
          v562 = v487;
          v559 = v484;
          v558 = v483;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467CEA0;
          v554 = (__int128)xmmword_22467CEB0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 2, 2, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x92000000D2), xmmword_22467CEB0);
        }
      }
      v119 = (v427 & 1) == 0 && ((v443 | v439) & 1) == 0;
      if (v119 && (v98 & 1) == 0)
      {
        v555 = v485;
        v556 = v486;
        v557 = v487;
        v554 = v484;
        v553 = v483;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467CEC0;
        v549 = (__int128)xmmword_22467CED0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 2, 2, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x92000000D2), xmmword_22467CED0);
      }
    }
    if (((v457 | v435) & 1) == 0)
    {
      v550 = v485;
      v551 = v486;
      v552 = v487;
      v549 = v484;
      v548 = v483;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467CEE0;
      v544 = (__int128)xmmword_22467CEF0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 2, 2, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x112000000D2), xmmword_22467CEF0);
      v120 = (v415 & 1) == 0 && ((v439 | v117) & 1) == 0;
      if ((v416 & 1) == 0 && v120)
      {
        v545 = v485;
        v546 = v486;
        v547 = v487;
        v544 = v484;
        v543 = v483;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467CF00;
        v539 = (__int128)xmmword_22467CF10;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 2, 2, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x92000000D2), xmmword_22467CF10);
      }
    }
    v121 = (v98 & 1) == 0 && ((v439 | v117) & 1) == 0;
    if (v121 && (v423 & 1) == 0)
    {
      v540 = v485;
      v541 = v486;
      v542 = v487;
      v539 = v484;
      v538 = v483;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467CF20;
      v534 = xmmword_22467CF30;
      *(_QWORD *)&v523 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 2, 2, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v523, COERCE_DOUBLE(0x92000000D2), xmmword_22467CF30);
    }
  }
  v122 = *((_DWORD *)v4 + 140);
  if (**v472)
  {
    v123 = *((_DWORD *)v4 + 204);
    v124 = *((_DWORD *)v4 + 148);
    v125 = *((_DWORD *)v4 + 212);
    v126 = *((_DWORD *)v4 + 156);
  }
  else
  {
    if ((v122 & 0x10000000) != 0)
      v127 = 0x40000000;
    else
      v127 = 0x80000000;
    if ((v122 & 0x20000000) != 0)
      v122 = v127;
    else
      v122 &= 0xCFFFFFFF;
    v128 = *((_DWORD *)v4 + 204);
    if ((v128 & 0x10000000) != 0)
      v129 = 0x40000000;
    else
      v129 = 0x80000000;
    if ((v128 & 0x20000000) != 0)
      v123 = v129;
    else
      v123 = v128 & 0xCFFFFFFF;
    v130 = *((_DWORD *)v4 + 148);
    if ((v130 & 0x10000000) != 0)
      v131 = 0x40000000;
    else
      v131 = 0x80000000;
    if ((v130 & 0x20000000) != 0)
      v124 = v131;
    else
      v124 = v130 & 0xCFFFFFFF;
    v132 = *((_DWORD *)v4 + 212);
    if ((v132 & 0x10000000) != 0)
      v133 = 0x40000000;
    else
      v133 = 0x80000000;
    if ((v132 & 0x20000000) != 0)
      v125 = v133;
    else
      v125 = v132 & 0xCFFFFFFF;
    v134 = *((_DWORD *)v4 + 156);
    if ((v134 & 0x10000000) != 0)
      v126 = 0x40000000;
    else
      v126 = 0x80000000;
    if ((v134 & 0x20000000) == 0)
      v126 = v134 & 0xCFFFFFFF;
  }
  v420 = v122 >> 30;
  v448 = v124 >> 30;
  v452 = v123 >> 30;
  v428 = v126 >> 30;
  if ((v107 & 0x40000000) != 0)
  {
    v510 = v485;
    v511 = v486;
    v512 = v487;
    v509 = v484;
    v508 = v483;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467CF40;
    v504 = (__int128)xmmword_22467CF50;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 3, 2, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x113000000D3), xmmword_22467CF50);
    if ((v88 & 0x40000000) == 0)
    {
      v505 = v485;
      v506 = v486;
      v507 = v487;
      v504 = v484;
      v503 = v483;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467CF60;
      v564 = (__int128)xmmword_22467CF70;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 3, 2, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x113000000D3), xmmword_22467CF70);
      if (((v457 | v435) & 1) == 0)
      {
        v565 = v485;
        v566 = v486;
        v567 = v487;
        v563 = v483;
        v564 = v484;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467CF80;
        v559 = (__int128)xmmword_22467CF90;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 3, 2, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x113000000D3), xmmword_22467CF90);
        v135 = (v415 & 1) == 0 && ((v439 | v117) & 1) == 0;
        if ((v416 & 1) == 0 && v135)
        {
          v560 = v485;
          v561 = v486;
          v562 = v487;
          v559 = v484;
          v558 = v483;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467CFA0;
          v554 = (__int128)xmmword_22467CFB0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 3, 2, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x93000000D3), xmmword_22467CFB0);
        }
      }
      v136 = (v98 & 1) == 0 && ((v439 | v117) & 1) == 0;
      if (v136 && (v423 & 1) == 0)
      {
        v555 = v485;
        v556 = v486;
        v557 = v487;
        v554 = v484;
        v553 = v483;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467CFC0;
        v549 = (__int128)xmmword_22467CFD0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 3, 2, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x93000000D3), xmmword_22467CFD0);
      }
    }
    if (((v435 | v452) & 1) == 0)
    {
      v550 = v485;
      v551 = v486;
      v552 = v487;
      v549 = v484;
      v548 = v483;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467CFE0;
      v544 = (__int128)xmmword_22467CFF0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 3, 2, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x113000000D3), xmmword_22467CFF0);
      v137 = (v420 & 1) == 0 && ((v117 | v448) & 1) == 0;
      if ((v415 & 1) == 0 && v137)
      {
        v545 = v485;
        v546 = v486;
        v547 = v487;
        v544 = v484;
        v543 = v483;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467D000;
        v539 = (__int128)xmmword_22467D010;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 3, 2, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x93000000D3), xmmword_22467D010);
      }
    }
    v138 = (v423 & 1) == 0 && ((v117 | v448) & 1) == 0;
    if (v138 && (v428 & 1) == 0)
    {
      v540 = v485;
      v541 = v486;
      v542 = v487;
      v539 = v484;
      v538 = v483;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467D020;
      v534 = xmmword_22467D030;
      *(_QWORD *)&v523 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 3, 2, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v523, COERCE_DOUBLE(0x93000000D3), xmmword_22467D030);
    }
  }
  v139 = *((_DWORD *)v4 + 141);
  if (**v472)
  {
    v140 = *((_DWORD *)v4 + 205);
    v141 = *((_DWORD *)v4 + 149);
    v142 = *((_DWORD *)v4 + 213);
    v143 = *((_DWORD *)v4 + 157);
  }
  else
  {
    if ((v139 & 0x10000000) != 0)
      v144 = 0x40000000;
    else
      v144 = 0x80000000;
    if ((v139 & 0x20000000) != 0)
      v139 = v144;
    else
      v139 &= 0xCFFFFFFF;
    v145 = *((_DWORD *)v4 + 205);
    if ((v145 & 0x10000000) != 0)
      v146 = 0x40000000;
    else
      v146 = 0x80000000;
    if ((v145 & 0x20000000) != 0)
      v140 = v146;
    else
      v140 = v145 & 0xCFFFFFFF;
    v147 = *((_DWORD *)v4 + 149);
    if ((v147 & 0x10000000) != 0)
      v148 = 0x40000000;
    else
      v148 = 0x80000000;
    if ((v147 & 0x20000000) != 0)
      v141 = v148;
    else
      v141 = v147 & 0xCFFFFFFF;
    v149 = *((_DWORD *)v4 + 213);
    if ((v149 & 0x10000000) != 0)
      v150 = 0x40000000;
    else
      v150 = 0x80000000;
    if ((v149 & 0x20000000) != 0)
      v142 = v150;
    else
      v142 = v149 & 0xCFFFFFFF;
    v151 = *((_DWORD *)v4 + 157);
    if ((v151 & 0x10000000) != 0)
      v143 = 0x40000000;
    else
      v143 = 0x80000000;
    if ((v151 & 0x20000000) == 0)
      v143 = v151 & 0xCFFFFFFF;
  }
  v152 = v141 >> 30;
  v417 = v139 >> 30;
  v458 = v140 >> 30;
  v153 = v143 >> 30;
  if ((v125 & 0x40000000) != 0)
  {
    v510 = v485;
    v511 = v486;
    v512 = v487;
    v509 = v484;
    v508 = v483;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467D040;
    v504 = (__int128)xmmword_22467D050;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 4, 2, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x114000000D4), xmmword_22467D050);
    if ((v107 & 0x40000000) == 0)
    {
      v505 = v485;
      v506 = v486;
      v507 = v487;
      v504 = v484;
      v503 = v483;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467D060;
      v564 = (__int128)xmmword_22467D070;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 4, 2, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x114000000D4), xmmword_22467D070);
      if (((v435 | v452) & 1) == 0)
      {
        v565 = v485;
        v566 = v486;
        v567 = v487;
        v563 = v483;
        v564 = v484;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467D080;
        v559 = (__int128)xmmword_22467D090;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 4, 2, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x114000000D4), xmmword_22467D090);
        v154 = (v420 & 1) == 0 && ((v117 | v448) & 1) == 0;
        if ((v415 & 1) == 0 && v154)
        {
          v560 = v485;
          v561 = v486;
          v562 = v487;
          v559 = v484;
          v558 = v483;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467D0A0;
          v554 = (__int128)xmmword_22467D0B0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 4, 2, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x94000000D4), xmmword_22467D0B0);
        }
      }
      v155 = (v423 & 1) == 0 && ((v117 | v448) & 1) == 0;
      if (v155 && (v428 & 1) == 0)
      {
        v555 = v485;
        v556 = v486;
        v557 = v487;
        v554 = v484;
        v553 = v483;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467D0C0;
        v549 = (__int128)xmmword_22467D0D0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 4, 2, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x94000000D4), xmmword_22467D0D0);
      }
    }
    if (((v452 | v458) & 1) == 0)
    {
      v550 = v485;
      v551 = v486;
      v552 = v487;
      v549 = v484;
      v548 = v483;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467D0E0;
      v544 = (__int128)xmmword_22467D0F0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 4, 2, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x114000000D4), xmmword_22467D0F0);
      v156 = (v417 & 1) == 0 && ((v448 | v152) & 1) == 0;
      if ((v420 & 1) == 0 && v156)
      {
        v545 = v485;
        v546 = v486;
        v547 = v487;
        v544 = v484;
        v543 = v483;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467D100;
        v539 = (__int128)xmmword_22467D110;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 4, 2, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x94000000D4), xmmword_22467D110);
      }
    }
    v157 = (v428 & 1) == 0 && ((v448 | v152) & 1) == 0;
    if (v157 && (v153 & 1) == 0)
    {
      v540 = v485;
      v541 = v486;
      v542 = v487;
      v539 = v484;
      v538 = v483;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467D120;
      v534 = xmmword_22467D130;
      *(_QWORD *)&v523 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 4, 2, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v523, COERCE_DOUBLE(0x94000000D4), xmmword_22467D130);
    }
  }
  v158 = *((_DWORD *)v4 + 142);
  if (**v472)
  {
    v159 = *((_DWORD *)v4 + 206);
    v160 = *((_DWORD *)v4 + 150);
    v161 = *((_DWORD *)v4 + 214);
    v162 = *((_DWORD *)v4 + 158);
  }
  else
  {
    if ((v158 & 0x10000000) != 0)
      v163 = 0x40000000;
    else
      v163 = 0x80000000;
    if ((v158 & 0x20000000) != 0)
      v158 = v163;
    else
      v158 &= 0xCFFFFFFF;
    v164 = *((_DWORD *)v4 + 206);
    if ((v164 & 0x10000000) != 0)
      v165 = 0x40000000;
    else
      v165 = 0x80000000;
    if ((v164 & 0x20000000) != 0)
      v159 = v165;
    else
      v159 = v164 & 0xCFFFFFFF;
    v166 = *((_DWORD *)v4 + 150);
    if ((v166 & 0x10000000) != 0)
      v167 = 0x40000000;
    else
      v167 = 0x80000000;
    if ((v166 & 0x20000000) != 0)
      v160 = v167;
    else
      v160 = v166 & 0xCFFFFFFF;
    v168 = *((_DWORD *)v4 + 214);
    if ((v168 & 0x10000000) != 0)
      v169 = 0x40000000;
    else
      v169 = 0x80000000;
    if ((v168 & 0x20000000) != 0)
      v161 = v169;
    else
      v161 = v168 & 0xCFFFFFFF;
    v170 = *((_DWORD *)v4 + 158);
    if ((v170 & 0x10000000) != 0)
      v162 = 0x40000000;
    else
      v162 = 0x80000000;
    if ((v170 & 0x20000000) == 0)
      v162 = v170 & 0xCFFFFFFF;
  }
  v424 = v158 >> 30;
  v440 = v160 >> 30;
  v444 = v159 >> 30;
  v436 = v162 >> 30;
  v525 = v485;
  v526 = v486;
  v527 = v487;
  v524 = v484;
  v523 = v483;
  if ((v142 & 0x40000000) != 0)
  {
    v510 = v485;
    v511 = v486;
    v512 = v487;
    v509 = v484;
    v508 = v483;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467D140;
    v504 = (__int128)xmmword_22467D150;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 5, 2, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x115000000D5), xmmword_22467D150);
    if ((v125 & 0x40000000) == 0)
    {
      v505 = v485;
      v506 = v486;
      v507 = v487;
      v504 = v484;
      v503 = v483;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467D160;
      v564 = (__int128)xmmword_22467D170;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 5, 2, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x115000000D5), xmmword_22467D170);
      if (((v452 | v458) & 1) == 0)
      {
        v565 = v485;
        v566 = v486;
        v567 = v487;
        v563 = v483;
        v564 = v484;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467D180;
        v559 = (__int128)xmmword_22467D190;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 5, 2, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x115000000D5), xmmword_22467D190);
        v171 = (v417 & 1) == 0 && ((v448 | v152) & 1) == 0;
        if ((v420 & 1) == 0 && v171)
        {
          v560 = v485;
          v561 = v486;
          v562 = v487;
          v559 = v484;
          v558 = v483;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467D1A0;
          v554 = (__int128)xmmword_22467D1B0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 5, 2, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x95000000D5), xmmword_22467D1B0);
        }
      }
      v172 = (v428 & 1) == 0 && ((v448 | v152) & 1) == 0;
      if (v172 && (v153 & 1) == 0)
      {
        v555 = v525;
        v556 = v526;
        v557 = v527;
        v554 = v524;
        v553 = v523;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467D1C0;
        v549 = (__int128)xmmword_22467D1D0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 5, 2, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x95000000D5), xmmword_22467D1D0);
      }
    }
    if (((v458 | v444) & 1) == 0)
    {
      v550 = v525;
      v551 = v526;
      v552 = v527;
      v549 = v524;
      v548 = v523;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467D1E0;
      v544 = (__int128)xmmword_22467D1F0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 5, 2, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x115000000D5), xmmword_22467D1F0);
      v173 = (v424 & 1) == 0 && ((v152 | v440) & 1) == 0;
      if ((v417 & 1) == 0 && v173)
      {
        v545 = v525;
        v546 = v526;
        v547 = v527;
        v544 = v524;
        v543 = v523;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467D200;
        v539 = (__int128)xmmword_22467D210;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 5, 2, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x95000000D5), xmmword_22467D210);
      }
    }
    v174 = (v153 & 1) == 0 && ((v152 | v440) & 1) == 0;
    if (v174 && (v436 & 1) == 0)
    {
      v540 = v525;
      v541 = v526;
      v542 = v527;
      v539 = v524;
      v538 = v523;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467D220;
      v534 = xmmword_22467D230;
      *(_QWORD *)&v518 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 5, 2, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v518, COERCE_DOUBLE(0x95000000D5), xmmword_22467D230);
    }
  }
  v520 = v485;
  v521 = v486;
  v522 = v487;
  v519 = v484;
  v518 = v483;
  v175 = *((_DWORD *)v4 + 143);
  if (**v472)
  {
    v176 = *((_DWORD *)v4 + 207);
    v177 = *((_DWORD *)v4 + 151);
    v178 = *((_DWORD *)v4 + 215);
    v179 = *((_DWORD *)v4 + 159);
  }
  else
  {
    if ((v175 & 0x10000000) != 0)
      v180 = 0x40000000;
    else
      v180 = 0x80000000;
    if ((v175 & 0x20000000) != 0)
      v175 = v180;
    else
      v175 &= 0xCFFFFFFF;
    v181 = *((_DWORD *)v4 + 207);
    if ((v181 & 0x10000000) != 0)
      v182 = 0x40000000;
    else
      v182 = 0x80000000;
    if ((v181 & 0x20000000) != 0)
      v176 = v182;
    else
      v176 = v181 & 0xCFFFFFFF;
    v183 = *((_DWORD *)v4 + 151);
    if ((v183 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v183 & 0x20000000) != 0)
      v177 = v184;
    else
      v177 = v183 & 0xCFFFFFFF;
    v185 = *((_DWORD *)v4 + 215);
    if ((v185 & 0x10000000) != 0)
      v186 = 0x40000000;
    else
      v186 = 0x80000000;
    if ((v185 & 0x20000000) != 0)
      v178 = v186;
    else
      v178 = v185 & 0xCFFFFFFF;
    v187 = *((_DWORD *)v4 + 159);
    if ((v187 & 0x10000000) != 0)
      v179 = 0x40000000;
    else
      v179 = 0x80000000;
    if ((v187 & 0x20000000) == 0)
      v179 = v187 & 0xCFFFFFFF;
  }
  v188 = v177 >> 30;
  v453 = v175 >> 30;
  v189 = v176 >> 30;
  v474 = v179 >> 30;
  v530 = v485;
  v531 = v486;
  v532 = v487;
  v529 = v484;
  v528 = v483;
  if ((v161 & 0x40000000) != 0)
  {
    v510 = v485;
    v511 = v486;
    v512 = v487;
    v509 = v484;
    v508 = v483;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467D240;
    v504 = (__int128)xmmword_22467D250;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 6, 2, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x116000000D6), xmmword_22467D250);
    if ((v142 & 0x40000000) == 0)
    {
      v505 = v485;
      v506 = v486;
      v507 = v487;
      v504 = v484;
      v503 = v483;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467D260;
      v564 = (__int128)xmmword_22467D270;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 6, 2, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x116000000D6), xmmword_22467D270);
      if (((v458 | v444) & 1) == 0)
      {
        v565 = v485;
        v566 = v486;
        v567 = v487;
        v563 = v483;
        v564 = v484;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467D280;
        v559 = (__int128)xmmword_22467D290;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 6, 2, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x116000000D6), xmmword_22467D290);
        v190 = (v424 & 1) == 0 && ((v152 | v440) & 1) == 0;
        if ((v417 & 1) == 0 && v190)
        {
          v560 = v485;
          v561 = v486;
          v562 = v487;
          v559 = v484;
          v558 = v483;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467D2A0;
          v554 = (__int128)xmmword_22467D2B0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 6, 2, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x96000000D6), xmmword_22467D2B0);
        }
      }
      v191 = (v153 & 1) == 0 && ((v152 | v440) & 1) == 0;
      if (v191 && (v436 & 1) == 0)
      {
        v555 = v530;
        v556 = v531;
        v557 = v532;
        v554 = v529;
        v553 = v528;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467D2C0;
        v549 = (__int128)xmmword_22467D2D0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 6, 2, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x96000000D6), xmmword_22467D2D0);
      }
    }
    if (((v444 | v189) & 1) == 0)
    {
      v550 = v530;
      v551 = v531;
      v552 = v532;
      v549 = v529;
      v548 = v528;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467D2E0;
      v544 = (__int128)xmmword_22467D2F0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 6, 2, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x116000000D6), xmmword_22467D2F0);
      v192 = (v453 & 1) == 0 && ((v440 | v188) & 1) == 0;
      if ((v424 & 1) == 0 && v192)
      {
        v545 = v530;
        v546 = v531;
        v547 = v532;
        v544 = v529;
        v543 = v528;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467D300;
        v539 = (__int128)xmmword_22467D310;
        *(_QWORD *)&v513 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 6, 2, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v513, COERCE_DOUBLE(0x96000000D6), xmmword_22467D310);
      }
    }
    v193 = (v436 & 1) == 0 && ((v440 | v188) & 1) == 0;
    if (v193 && (v474 & 1) == 0)
    {
      v540 = v530;
      v541 = v531;
      v542 = v532;
      v539 = v529;
      v538 = v528;
      *(_QWORD *)&v513 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467D320;
      v534 = xmmword_22467D330;
      *(_QWORD *)&v569[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 6, 2, 3, (uint64_t)&v513, (uint64_t)&v533, (uint64_t)v569, COERCE_DOUBLE(0x96000000D6), xmmword_22467D330);
    }
  }
  v194 = *(unsigned int *)(v469 + 88);
  if ((v194 & 0x80000000) != 0)
  {
    v197 = *v462;
    v198 = *(_DWORD *)(v476 + 824);
    v199 = **v462;
    if (**v462)
      goto LABEL_509;
  }
  else
  {
    v195 = *(_QWORD *)(v476 + 2328);
    if (v194 >= (*(_QWORD *)(v476 + 2336) - v195) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v195 = *(_QWORD *)(v476 + 2328);
    }
    v196 = v195 + (v194 << 11);
    v197 = *v462;
    v198 = *(_DWORD *)(v196 + 544);
    v199 = **v462;
    if (**v462)
    {
LABEL_509:
      v200 = *(unsigned int *)(v469 + 88);
      if ((v200 & 0x80000000) == 0)
        goto LABEL_510;
LABEL_529:
      v202 = *(_DWORD *)(v476 + 1080);
      if (v199)
        goto LABEL_514;
      goto LABEL_530;
    }
  }
  if ((v198 & 0x10000000) != 0)
    v207 = 0x40000000;
  else
    v207 = 0x80000000;
  if ((v198 & 0x20000000) != 0)
    v198 = v207;
  else
    v198 &= 0xCFFFFFFF;
  v200 = *(unsigned int *)(v469 + 88);
  if ((v200 & 0x80000000) != 0)
    goto LABEL_529;
LABEL_510:
  v201 = *(_QWORD *)(v476 + 2328);
  if (v200 >= (*(_QWORD *)(v476 + 2336) - v201) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v201 = *(_QWORD *)(v476 + 2328);
    v197 = *v462;
    v199 = **v462;
  }
  v202 = *(_DWORD *)(v201 + (v200 << 11) + 800);
  if (v199)
  {
LABEL_514:
    v203 = *(unsigned int *)(v469 + 88);
    if ((v203 & 0x80000000) == 0)
      goto LABEL_515;
LABEL_537:
    v205 = *(_DWORD *)(v476 + 856);
    if (v199)
      goto LABEL_519;
    goto LABEL_538;
  }
LABEL_530:
  if ((v202 & 0x10000000) != 0)
    v208 = 0x40000000;
  else
    v208 = 0x80000000;
  if ((v202 & 0x20000000) != 0)
    v202 = v208;
  else
    v202 &= 0xCFFFFFFF;
  v203 = *(unsigned int *)(v469 + 88);
  if ((v203 & 0x80000000) != 0)
    goto LABEL_537;
LABEL_515:
  v204 = *(_QWORD *)(v476 + 2328);
  if (v203 >= (*(_QWORD *)(v476 + 2336) - v204) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v204 = *(_QWORD *)(v476 + 2328);
    v197 = *v462;
    v199 = **v462;
  }
  v205 = *(_DWORD *)(v204 + (v203 << 11) + 576);
  if (v199)
  {
LABEL_519:
    v206 = *(unsigned int *)(v469 + 88);
    if ((v206 & 0x80000000) != 0)
      goto LABEL_590;
    goto LABEL_545;
  }
LABEL_538:
  if ((v205 & 0x10000000) != 0)
    v209 = 0x40000000;
  else
    v209 = 0x80000000;
  if ((v205 & 0x20000000) != 0)
    v205 = v209;
  else
    v205 &= 0xCFFFFFFF;
  v206 = *(unsigned int *)(v469 + 88);
  if ((v206 & 0x80000000) != 0)
    goto LABEL_590;
LABEL_545:
  v210 = *(_QWORD *)(v476 + 2328);
  v211 = (*(_QWORD *)(v476 + 2336) - v210) >> 11;
  if (v211 > v206)
    goto LABEL_549;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v197 = *v462;
  v206 = *(unsigned int *)(v469 + 88);
  if ((v206 & 0x80000000) != 0)
  {
LABEL_590:
    v212 = *(_DWORD *)(v476 + 888);
    if (*v197)
      goto LABEL_559;
    goto LABEL_553;
  }
  v210 = *(_QWORD *)(v476 + 2328);
  v211 = (*(_QWORD *)(v476 + 2336) - v210) >> 11;
LABEL_549:
  if (v211 <= v206)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v210 = *(_QWORD *)(v476 + 2328);
    v197 = *v462;
  }
  v212 = *(_DWORD *)(v210 + (v206 << 11) + 608);
  if (!*v197)
  {
LABEL_553:
    if ((v212 & 0x10000000) != 0)
      v213 = 0x40000000;
    else
      v213 = 0x80000000;
    if ((v212 & 0x20000000) != 0)
      v212 = v213;
    else
      v212 &= 0xCFFFFFFF;
  }
LABEL_559:
  v535 = v520;
  v536 = v521;
  v537 = v522;
  v534 = (float32x4_t)v519;
  v533 = v518;
  if ((v178 & 0x40000000) != 0)
  {
    v510 = v520;
    v511 = v521;
    v512 = v522;
    v509 = v519;
    v508 = v518;
    *(_QWORD *)&v563 = 0x161616160D0D0D0DLL;
    v503 = xmmword_22467D340;
    v504 = (__int128)xmmword_22467D350;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 7, 2, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x117000000D7), xmmword_22467D350);
    if ((v161 & 0x40000000) == 0)
    {
      v505 = v520;
      v506 = v521;
      v507 = v522;
      v504 = v519;
      v503 = v518;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467D360;
      v564 = (__int128)xmmword_22467D370;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 7, 2, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x117000000D7), xmmword_22467D370);
      if (((v444 | v189) & 1) == 0)
      {
        v565 = v520;
        v566 = v521;
        v567 = v522;
        v563 = v518;
        v564 = v519;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467D380;
        v559 = (__int128)xmmword_22467D390;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 7, 2, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x117000000D7), xmmword_22467D390);
        v214 = (v453 & 1) == 0 && ((v440 | v188) & 1) == 0;
        if ((v424 & 1) == 0 && v214)
        {
          v560 = v520;
          v561 = v521;
          v562 = v522;
          v559 = v519;
          v558 = v518;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467D3A0;
          v554 = (__int128)xmmword_22467D3B0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 7, 2, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x97000000D7), xmmword_22467D3B0);
        }
      }
      v215 = (v436 & 1) == 0 && ((v440 | v188) & 1) == 0;
      if (v215 && (v474 & 1) == 0)
      {
        v555 = v535;
        v556 = v536;
        v557 = v537;
        v554 = (__int128)v534;
        v553 = v533;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467D3C0;
        v549 = (__int128)xmmword_22467D3D0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 7, 2, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x97000000D7), xmmword_22467D3D0);
      }
    }
    if (!(v202 & 0x40000000 | v189 & 1))
    {
      v550 = v535;
      v551 = v536;
      v552 = v537;
      *(_QWORD *)&v538 = 0x16160D0D16160D0DLL;
      v549 = (__int128)v534;
      v548 = v533;
      v543 = xmmword_22467D3E0;
      v544 = (__int128)xmmword_22467D3F0;
      *(_QWORD *)&v513 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 7, 2, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v513, COERCE_DOUBLE(0x117000000D7), xmmword_22467D3F0);
      v216 = (v198 & 0x40000000) == 0 && (v205 & 0x40000000 | v188 & 1) == 0;
      if ((v453 & 1) == 0 && v216)
      {
        v545 = v535;
        v546 = v536;
        v547 = v537;
        *(_QWORD *)&v513 = 0x161616160D0D0D0DLL;
        v544 = (__int128)v534;
        v543 = v533;
        v538 = xmmword_22467D400;
        v539 = (__int128)xmmword_22467D410;
        *(_QWORD *)&v569[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 7, 2, 3, (uint64_t)&v513, (uint64_t)&v538, (uint64_t)v569, COERCE_DOUBLE(0x97000000D7), xmmword_22467D410);
      }
    }
    v217 = (v474 & 1) == 0 && (v205 & 0x40000000 | v188 & 1) == 0;
    if (v217 && (v212 & 0x40000000) == 0)
    {
      v540 = v535;
      v541 = v536;
      v542 = v537;
      *(_QWORD *)&v569[0] = 0x16160D0D16160D0DLL;
      v539 = (__int128)v534;
      v538 = v533;
      v513 = xmmword_22467D420;
      v514 = (__int128)xmmword_22467D430;
      v570[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 7, 2, 3, (uint64_t)v569, (uint64_t)&v513, (uint64_t)v570, COERCE_DOUBLE(0x97000000D7), xmmword_22467D430);
    }
  }
  v218 = a1[2];
  v475 = v466[1];
  v477 = *v466;
  v481 = a3[3];
  v482 = a3[4];
  v479 = a3[1];
  v480 = a3[2];
  v478 = *a3;
  v429 = *(_OWORD *)a1;
  v467 = (_BYTE **)v466[2];
  v470 = *a1;
  v219 = *((_DWORD *)v218 + 144);
  v220 = ***a1;
  if (***a1)
  {
    v221 = *((_DWORD *)v218 + 208);
    v222 = *((_DWORD *)v218 + 152);
    v223 = *((_DWORD *)v218 + 160);
    v463 = *((_DWORD *)v218 + 216);
    if ((v463 & 0x40000000) == 0)
    {
LABEL_589:
      v224 = v221;
      v225 = 0;
      v226 = 0;
      v227 = 0;
      v228 = 0;
      v229 = 0;
      goto LABEL_642;
    }
  }
  else
  {
    if ((v219 & 0x20000000) != 0)
      v219 *= 4;
    v230 = *((_DWORD *)v218 + 208);
    if ((v230 & 0x20000000) != 0)
      v221 = 4 * v230;
    else
      v221 = *((_DWORD *)v218 + 208);
    v231 = *((_DWORD *)v218 + 152);
    if ((v231 & 0x20000000) != 0)
      v222 = 4 * v231;
    else
      v222 = *((_DWORD *)v218 + 152);
    v232 = *((_DWORD *)v218 + 216);
    if ((v232 & 0x20000000) != 0)
      v233 = 4 * v232;
    else
      v233 = *((_DWORD *)v218 + 216);
    v234 = *((_DWORD *)v218 + 160);
    if ((v234 & 0x10000000) != 0)
      v235 = 0x40000000;
    else
      v235 = 0x80000000;
    if ((v234 & 0x20000000) != 0)
      v223 = v235;
    else
      v223 = v234 & 0xCFFFFFFF;
    v463 = v233;
    if ((v233 & 0x40000000) == 0)
      goto LABEL_589;
  }
  v236 = *(unsigned int *)(v475 + 16);
  if ((v236 & 0x80000000) != 0)
  {
    v238 = *(_DWORD *)(v477 + 884);
    v239 = **v467;
    if (**v467)
      goto LABEL_615;
  }
  else
  {
    v237 = *(_QWORD *)(v477 + 2328);
    if (v236 >= (*(_QWORD *)(v477 + 2336) - v237) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v237 = *(_QWORD *)(v477 + 2328);
    }
    v238 = *(_DWORD *)(v237 + (v236 << 11) + 604);
    v239 = **v467;
    if (**v467)
    {
LABEL_615:
      v240 = *(unsigned int *)(v475 + 16);
      if ((v240 & 0x80000000) == 0)
        goto LABEL_616;
LABEL_1149:
      v242 = *(_DWORD *)(v477 + 1140);
      if (v239)
        goto LABEL_620;
      goto LABEL_1150;
    }
  }
  if ((v238 & 0x10000000) != 0)
    v411 = 0x40000000;
  else
    v411 = 0x80000000;
  if ((v238 & 0x20000000) != 0)
    v238 = v411;
  else
    v238 &= 0xCFFFFFFF;
  v240 = *(unsigned int *)(v475 + 16);
  if ((v240 & 0x80000000) != 0)
    goto LABEL_1149;
LABEL_616:
  v241 = *(_QWORD *)(v477 + 2328);
  if (v240 >= (*(_QWORD *)(v477 + 2336) - v241) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v241 = *(_QWORD *)(v477 + 2328);
    v239 = **v467;
  }
  v242 = *(_DWORD *)(v241 + (v240 << 11) + 860);
  if (v239)
  {
LABEL_620:
    v243 = *(unsigned int *)(v475 + 16);
    if ((v243 & 0x80000000) == 0)
      goto LABEL_621;
LABEL_1157:
    v245 = *(_DWORD *)(v477 + 916);
    if (v239)
      goto LABEL_625;
    goto LABEL_1158;
  }
LABEL_1150:
  if ((v242 & 0x10000000) != 0)
    v412 = 0x40000000;
  else
    v412 = 0x80000000;
  if ((v242 & 0x20000000) != 0)
    v242 = v412;
  else
    v242 &= 0xCFFFFFFF;
  v243 = *(unsigned int *)(v475 + 16);
  if ((v243 & 0x80000000) != 0)
    goto LABEL_1157;
LABEL_621:
  v244 = *(_QWORD *)(v477 + 2328);
  if (v243 >= (*(_QWORD *)(v477 + 2336) - v244) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v244 = *(_QWORD *)(v477 + 2328);
    v239 = **v467;
  }
  v245 = *(_DWORD *)(v244 + (v243 << 11) + 636);
  if (v239)
  {
LABEL_625:
    v246 = *(unsigned int *)(v475 + 16);
    if ((v246 & 0x80000000) == 0)
      goto LABEL_626;
LABEL_1165:
    v248 = *(_DWORD *)(v477 + 1172);
    if (v239)
      goto LABEL_630;
    goto LABEL_1166;
  }
LABEL_1158:
  if ((v245 & 0x10000000) != 0)
    v413 = 0x40000000;
  else
    v413 = 0x80000000;
  if ((v245 & 0x20000000) != 0)
    v245 = v413;
  else
    v245 &= 0xCFFFFFFF;
  v246 = *(unsigned int *)(v475 + 16);
  if ((v246 & 0x80000000) != 0)
    goto LABEL_1165;
LABEL_626:
  v247 = *(_QWORD *)(v477 + 2328);
  if (v246 >= (*(_QWORD *)(v477 + 2336) - v247) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v247 = *(_QWORD *)(v477 + 2328);
    v239 = **v467;
  }
  v248 = *(_DWORD *)(v247 + (v246 << 11) + 892);
  if (v239)
  {
LABEL_630:
    v249 = *(unsigned int *)(v475 + 16);
    if ((v249 & 0x80000000) == 0)
      goto LABEL_631;
    goto LABEL_1173;
  }
LABEL_1166:
  if ((v248 & 0x10000000) != 0)
    v414 = 0x40000000;
  else
    v414 = 0x80000000;
  if ((v248 & 0x20000000) != 0)
    v248 = v414;
  else
    v248 &= 0xCFFFFFFF;
  v249 = *(unsigned int *)(v475 + 16);
  if ((v249 & 0x80000000) == 0)
  {
LABEL_631:
    v250 = *(_QWORD *)(v477 + 2328);
    if (v249 >= (*(_QWORD *)(v477 + 2336) - v250) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v250 = *(_QWORD *)(v477 + 2328);
      v239 = **v467;
    }
    v224 = v221;
    v251 = v250 + (v249 << 11);
    v229 = (v238 >> 30) & 1;
    v228 = (v242 >> 30) & 1;
    v227 = (v245 >> 30) & 1;
    v252 = *(_DWORD *)(v251 + 668);
    v226 = (v248 >> 30) & 1;
    if (v239)
      goto LABEL_641;
    goto LABEL_635;
  }
LABEL_1173:
  v224 = v221;
  v229 = (v238 >> 30) & 1;
  v228 = (v242 >> 30) & 1;
  v227 = (v245 >> 30) & 1;
  v252 = *(_DWORD *)(v477 + 948);
  v226 = (v248 >> 30) & 1;
  if (!v239)
  {
LABEL_635:
    if ((v252 & 0x10000000) != 0)
      v253 = 0x40000000;
    else
      v253 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v252 = v253;
    else
      v252 &= 0xCFFFFFFF;
  }
LABEL_641:
  v225 = (v252 >> 30) & 1;
  v220 = **v470;
LABEL_642:
  v431 = v219 >> 30;
  v515 = v480;
  v516 = v481;
  v517 = v482;
  v514 = v479;
  v513 = v478;
  v254 = *((_DWORD *)v218 + 145);
  if (v220)
  {
    v255 = *((_DWORD *)v218 + 209);
    v256 = *((_DWORD *)v218 + 153);
    v459 = *((_DWORD *)v218 + 217);
    v257 = *((_DWORD *)v218 + 161);
  }
  else
  {
    if ((v254 & 0x10000000) != 0)
      v258 = 0x40000000;
    else
      v258 = 0x80000000;
    if ((v254 & 0x20000000) != 0)
      v254 = v258;
    else
      v254 &= 0xCFFFFFFF;
    v259 = *((_DWORD *)v218 + 209);
    if ((v259 & 0x10000000) != 0)
      v260 = 0x40000000;
    else
      v260 = 0x80000000;
    if ((v259 & 0x20000000) != 0)
      v255 = v260;
    else
      v255 = v259 & 0xCFFFFFFF;
    v261 = *((_DWORD *)v218 + 153);
    if ((v261 & 0x10000000) != 0)
      v262 = 0x40000000;
    else
      v262 = 0x80000000;
    if ((v261 & 0x20000000) != 0)
      v256 = v262;
    else
      v256 = v261 & 0xCFFFFFFF;
    v263 = *((_DWORD *)v218 + 217);
    if ((v263 & 0x10000000) != 0)
      v264 = 0x40000000;
    else
      v264 = 0x80000000;
    if ((v263 & 0x20000000) != 0)
      v265 = v264;
    else
      v265 = v263 & 0xCFFFFFFF;
    v459 = v265;
    v266 = *((_DWORD *)v218 + 161);
    if ((v266 & 0x10000000) != 0)
      v257 = 0x40000000;
    else
      v257 = 0x80000000;
    if ((v266 & 0x20000000) == 0)
      v257 = v266 & 0xCFFFFFFF;
  }
  v267 = v222 >> 30;
  v268 = v224 >> 30;
  v269 = v223 >> 30;
  v425 = v254 >> 30;
  v449 = v256 >> 30;
  v454 = v255 >> 30;
  v441 = v257 >> 30;
  if ((v463 & 0x40000000) != 0)
  {
    v510 = v480;
    v511 = v481;
    v512 = v482;
    v509 = v479;
    v508 = v478;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467D440;
    v504 = (__int128)xmmword_22467D450;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 0, 3, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x118000000D8), xmmword_22467D450);
    if (!v226)
    {
      v505 = v480;
      v506 = v481;
      v507 = v482;
      v504 = v479;
      v503 = v478;
      *(_QWORD *)&v558 = 0x4040D0D04040D0DLL;
      v563 = xmmword_22467D460;
      v564 = (__int128)xmmword_22467D470;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 0, 3, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x118000000D8), xmmword_22467D470);
      v270 = (v227 | ((v222 & 0x40000000) != 0)) == 0;
      if (!(v228 | v268 & 1))
      {
        v565 = v480;
        v566 = v481;
        v567 = v482;
        v563 = v478;
        v564 = v479;
        *(_QWORD *)&v553 = 0x40404040D0D0D0DLL;
        v558 = xmmword_22467D480;
        v559 = (__int128)xmmword_22467D490;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 0, 3, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x118000000D8), xmmword_22467D490);
        v271 = (v431 & 1) == 0 && v270;
        if (!v229 && v271)
        {
          v560 = v480;
          v561 = v481;
          v562 = v482;
          v559 = v479;
          v558 = v478;
          *(_QWORD *)&v548 = 0x4040D0D04040D0DLL;
          v553 = xmmword_22467D4A0;
          v554 = (__int128)xmmword_22467D4B0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 0, 3, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x98000000D8), xmmword_22467D4B0);
        }
      }
      if (v225)
        v272 = 0;
      else
        v272 = v270;
      if (v272 && (v269 & 1) == 0)
      {
        v555 = v480;
        v556 = v481;
        v557 = v482;
        *(_QWORD *)&v543 = 0x40404040D0D0D0DLL;
        v554 = v479;
        v553 = v478;
        v548 = xmmword_22467D4C0;
        v549 = (__int128)xmmword_22467D4D0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 0, 3, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x98000000D8), xmmword_22467D4D0);
      }
    }
    if (((v268 | v454) & 1) == 0)
    {
      v550 = v480;
      v551 = v481;
      v552 = v482;
      v549 = v479;
      v548 = v478;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467D4E0;
      v544 = (__int128)xmmword_22467D4F0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 0, 3, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x118000000D8), xmmword_22467D4F0);
      v273 = (v425 & 1) == 0 && ((v267 | v449) & 1) == 0;
      if ((v431 & 1) == 0 && v273)
      {
        v545 = v480;
        v546 = v481;
        v547 = v482;
        v544 = v479;
        v543 = v478;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467D500;
        v539 = (__int128)xmmword_22467D510;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 0, 3, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x98000000D8), xmmword_22467D510);
      }
    }
    v274 = (v269 & 1) == 0 && ((v267 | v449) & 1) == 0;
    if (v274 && (v441 & 1) == 0)
    {
      v540 = v480;
      v541 = v481;
      v542 = v482;
      v539 = v479;
      v538 = v478;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467D520;
      v534 = xmmword_22467D530;
      *(_QWORD *)&v523 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 0, 3, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v523, COERCE_DOUBLE(0x98000000D8), xmmword_22467D530);
    }
  }
  v490 = v515;
  v491 = v516;
  v492 = v517;
  v488 = v513;
  v489 = v514;
  v275 = *((_DWORD *)v218 + 146);
  if (**v470)
  {
    v276 = *((_DWORD *)v218 + 210);
    v277 = *((_DWORD *)v218 + 154);
    v278 = *((_DWORD *)v218 + 218);
    v279 = *((_DWORD *)v218 + 162);
  }
  else
  {
    if ((v275 & 0x10000000) != 0)
      v280 = 0x40000000;
    else
      v280 = 0x80000000;
    if ((v275 & 0x20000000) != 0)
      v275 = v280;
    else
      v275 &= 0xCFFFFFFF;
    v281 = *((_DWORD *)v218 + 210);
    if ((v281 & 0x10000000) != 0)
      v282 = 0x40000000;
    else
      v282 = 0x80000000;
    if ((v281 & 0x20000000) != 0)
      v276 = v282;
    else
      v276 = v281 & 0xCFFFFFFF;
    v283 = *((_DWORD *)v218 + 154);
    if ((v283 & 0x10000000) != 0)
      v284 = 0x40000000;
    else
      v284 = 0x80000000;
    if ((v283 & 0x20000000) != 0)
      v277 = v284;
    else
      v277 = v283 & 0xCFFFFFFF;
    v285 = *((_DWORD *)v218 + 218);
    if ((v285 & 0x10000000) != 0)
      v286 = 0x40000000;
    else
      v286 = 0x80000000;
    if ((v285 & 0x20000000) != 0)
      v278 = v286;
    else
      v278 = v285 & 0xCFFFFFFF;
    v287 = *((_DWORD *)v218 + 162);
    if ((v287 & 0x10000000) != 0)
      v279 = 0x40000000;
    else
      v279 = 0x80000000;
    if ((v287 & 0x20000000) == 0)
      v279 = v287 & 0xCFFFFFFF;
  }
  v288 = v463;
  v445 = v277 >> 30;
  v421 = v275 >> 30;
  v464 = v276 >> 30;
  v437 = v279 >> 30;
  v500 = v515;
  v501 = v516;
  v502 = v517;
  v498 = v513;
  v499 = v514;
  if ((v459 & 0x40000000) != 0)
  {
    v289 = (v288 & 0x40000000) == 0;
    v510 = v515;
    v511 = v516;
    v512 = v517;
    v509 = v514;
    v508 = v513;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467D540;
    v504 = (__int128)xmmword_22467D550;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 1, 3, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x119000000D9), xmmword_22467D550);
    if (v289)
    {
      v505 = v515;
      v506 = v516;
      v507 = v517;
      v504 = v514;
      v503 = v513;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467D560;
      v564 = (__int128)xmmword_22467D570;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 1, 3, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x119000000D9), xmmword_22467D570);
      if (((v268 | v454) & 1) == 0)
      {
        v565 = v515;
        v566 = v516;
        v567 = v517;
        v563 = v513;
        v564 = v514;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467D580;
        v559 = (__int128)xmmword_22467D590;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 1, 3, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x119000000D9), xmmword_22467D590);
        v290 = (v425 & 1) == 0 && ((v267 | v449) & 1) == 0;
        if ((v431 & 1) == 0 && v290)
        {
          v560 = v515;
          v561 = v516;
          v562 = v517;
          v559 = v514;
          v558 = v513;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467D5A0;
          v554 = (__int128)xmmword_22467D5B0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 1, 3, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x99000000D9), xmmword_22467D5B0);
        }
      }
      v291 = (v269 & 1) == 0 && ((v267 | v449) & 1) == 0;
      if (v291 && (v441 & 1) == 0)
      {
        v555 = v500;
        v556 = v501;
        v557 = v502;
        v554 = v499;
        v553 = v498;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467D5C0;
        v549 = (__int128)xmmword_22467D5D0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 1, 3, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x99000000D9), xmmword_22467D5D0);
      }
    }
    if (((v454 | v464) & 1) == 0)
    {
      v550 = v500;
      v551 = v501;
      v552 = v502;
      v549 = v499;
      v548 = v498;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467D5E0;
      v544 = (__int128)xmmword_22467D5F0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 1, 3, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x119000000D9), xmmword_22467D5F0);
      v292 = (v421 & 1) == 0 && ((v449 | v445) & 1) == 0;
      if ((v425 & 1) == 0 && v292)
      {
        v545 = v500;
        v546 = v501;
        v547 = v502;
        v544 = v499;
        v543 = v498;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467D600;
        v539 = (__int128)xmmword_22467D610;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 1, 3, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x99000000D9), xmmword_22467D610);
      }
    }
    v293 = (v441 & 1) == 0 && ((v449 | v445) & 1) == 0;
    if (v293 && (v437 & 1) == 0)
    {
      v540 = v500;
      v541 = v501;
      v542 = v502;
      v539 = v499;
      v538 = v498;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467D620;
      v534 = xmmword_22467D630;
      *(_QWORD *)&v523 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 1, 3, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v523, COERCE_DOUBLE(0x99000000D9), xmmword_22467D630);
    }
  }
  v294 = *((_DWORD *)v218 + 147);
  if (**v470)
  {
    v295 = *((_DWORD *)v218 + 211);
    v296 = *((_DWORD *)v218 + 155);
    v297 = *((_DWORD *)v218 + 219);
    v298 = *((_DWORD *)v218 + 163);
  }
  else
  {
    if ((v294 & 0x10000000) != 0)
      v299 = 0x40000000;
    else
      v299 = 0x80000000;
    if ((v294 & 0x20000000) != 0)
      v294 = v299;
    else
      v294 &= 0xCFFFFFFF;
    v300 = *((_DWORD *)v218 + 211);
    if ((v300 & 0x10000000) != 0)
      v301 = 0x40000000;
    else
      v301 = 0x80000000;
    if ((v300 & 0x20000000) != 0)
      v295 = v301;
    else
      v295 = v300 & 0xCFFFFFFF;
    v302 = *((_DWORD *)v218 + 155);
    if ((v302 & 0x10000000) != 0)
      v303 = 0x40000000;
    else
      v303 = 0x80000000;
    if ((v302 & 0x20000000) != 0)
      v296 = v303;
    else
      v296 = v302 & 0xCFFFFFFF;
    v304 = *((_DWORD *)v218 + 219);
    if ((v304 & 0x10000000) != 0)
      v305 = 0x40000000;
    else
      v305 = 0x80000000;
    if ((v304 & 0x20000000) != 0)
      v297 = v305;
    else
      v297 = v304 & 0xCFFFFFFF;
    v306 = *((_DWORD *)v218 + 163);
    if ((v306 & 0x10000000) != 0)
      v298 = 0x40000000;
    else
      v298 = 0x80000000;
    if ((v306 & 0x20000000) == 0)
      v298 = v306 & 0xCFFFFFFF;
  }
  v307 = v296 >> 30;
  v418 = v294 >> 30;
  v308 = v295 >> 30;
  v432 = v298 >> 30;
  if ((v278 & 0x40000000) != 0)
  {
    v510 = v490;
    v511 = v491;
    v512 = v492;
    v509 = v489;
    v508 = v488;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467D640;
    v504 = (__int128)xmmword_22467D650;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 2, 3, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x11A000000DALL), xmmword_22467D650);
    if ((v459 & 0x40000000) == 0)
    {
      v505 = v490;
      v506 = v491;
      v507 = v492;
      v504 = v489;
      v503 = v488;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467D660;
      v564 = (__int128)xmmword_22467D670;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 2, 3, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x11A000000DALL), xmmword_22467D670);
      if (((v454 | v464) & 1) == 0)
      {
        v565 = v490;
        v566 = v491;
        v567 = v492;
        v563 = v488;
        v564 = v489;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467D680;
        v559 = (__int128)xmmword_22467D690;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 2, 3, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x11A000000DALL), xmmword_22467D690);
        v309 = (v421 & 1) == 0 && ((v449 | v445) & 1) == 0;
        if ((v425 & 1) == 0 && v309)
        {
          v560 = v490;
          v561 = v491;
          v562 = v492;
          v559 = v489;
          v558 = v488;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467D6A0;
          v554 = (__int128)xmmword_22467D6B0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 2, 3, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x9A000000DALL), xmmword_22467D6B0);
        }
      }
      v310 = (v441 & 1) == 0 && ((v449 | v445) & 1) == 0;
      if (v310 && (v437 & 1) == 0)
      {
        v555 = v490;
        v556 = v491;
        v557 = v492;
        v554 = v489;
        v553 = v488;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467D6C0;
        v549 = (__int128)xmmword_22467D6D0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 2, 3, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x9A000000DALL), xmmword_22467D6D0);
      }
    }
    if (((v464 | v308) & 1) == 0)
    {
      v550 = v490;
      v551 = v491;
      v552 = v492;
      v549 = v489;
      v548 = v488;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467D6E0;
      v544 = (__int128)xmmword_22467D6F0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 2, 3, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x11A000000DALL), xmmword_22467D6F0);
      v311 = (v418 & 1) == 0 && ((v445 | v307) & 1) == 0;
      if ((v421 & 1) == 0 && v311)
      {
        v545 = v490;
        v546 = v491;
        v547 = v492;
        v544 = v489;
        v543 = v488;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467D700;
        v539 = (__int128)xmmword_22467D710;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 2, 3, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x9A000000DALL), xmmword_22467D710);
      }
    }
    v312 = (v437 & 1) == 0 && ((v445 | v307) & 1) == 0;
    if (v312 && (v432 & 1) == 0)
    {
      v540 = v490;
      v541 = v491;
      v542 = v492;
      v539 = v489;
      v538 = v488;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467D720;
      v534 = xmmword_22467D730;
      *(_QWORD *)&v523 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 2, 3, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v523, COERCE_DOUBLE(0x9A000000DALL), xmmword_22467D730);
    }
  }
  v313 = *((_DWORD *)v218 + 148);
  if (**v470)
  {
    v314 = *((_DWORD *)v218 + 212);
    v315 = *((_DWORD *)v218 + 156);
    v316 = *((_DWORD *)v218 + 220);
    v317 = *((_DWORD *)v218 + 164);
  }
  else
  {
    if ((v313 & 0x10000000) != 0)
      v318 = 0x40000000;
    else
      v318 = 0x80000000;
    if ((v313 & 0x20000000) != 0)
      v313 = v318;
    else
      v313 &= 0xCFFFFFFF;
    v319 = *((_DWORD *)v218 + 212);
    if ((v319 & 0x10000000) != 0)
      v320 = 0x40000000;
    else
      v320 = 0x80000000;
    if ((v319 & 0x20000000) != 0)
      v314 = v320;
    else
      v314 = v319 & 0xCFFFFFFF;
    v321 = *((_DWORD *)v218 + 156);
    if ((v321 & 0x10000000) != 0)
      v322 = 0x40000000;
    else
      v322 = 0x80000000;
    if ((v321 & 0x20000000) != 0)
      v315 = v322;
    else
      v315 = v321 & 0xCFFFFFFF;
    v323 = *((_DWORD *)v218 + 220);
    if ((v323 & 0x10000000) != 0)
      v324 = 0x40000000;
    else
      v324 = 0x80000000;
    if ((v323 & 0x20000000) != 0)
      v316 = v324;
    else
      v316 = v323 & 0xCFFFFFFF;
    v325 = *((_DWORD *)v218 + 164);
    if ((v325 & 0x10000000) != 0)
      v317 = 0x40000000;
    else
      v317 = 0x80000000;
    if ((v325 & 0x20000000) == 0)
      v317 = v325 & 0xCFFFFFFF;
  }
  v326 = v315 >> 30;
  v426 = v313 >> 30;
  v460 = v314 >> 30;
  v442 = v317 >> 30;
  if ((v297 & 0x40000000) != 0)
  {
    v510 = v490;
    v511 = v491;
    v512 = v492;
    v509 = v489;
    v508 = v488;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467D740;
    v504 = (__int128)xmmword_22467D750;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 3, 3, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x11B000000DBLL), xmmword_22467D750);
    if ((v278 & 0x40000000) == 0)
    {
      v505 = v490;
      v506 = v491;
      v507 = v492;
      v504 = v489;
      v503 = v488;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467D760;
      v564 = (__int128)xmmword_22467D770;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 3, 3, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x11B000000DBLL), xmmword_22467D770);
      if (((v464 | v308) & 1) == 0)
      {
        v565 = v490;
        v566 = v491;
        v567 = v492;
        v563 = v488;
        v564 = v489;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467D780;
        v559 = (__int128)xmmword_22467D790;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 3, 3, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x11B000000DBLL), xmmword_22467D790);
        v327 = (v418 & 1) == 0 && ((v445 | v307) & 1) == 0;
        if ((v421 & 1) == 0 && v327)
        {
          v560 = v490;
          v561 = v491;
          v562 = v492;
          v559 = v489;
          v558 = v488;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467D7A0;
          v554 = (__int128)xmmword_22467D7B0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 3, 3, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x9B000000DBLL), xmmword_22467D7B0);
        }
      }
      v328 = (v437 & 1) == 0 && ((v445 | v307) & 1) == 0;
      if (v328 && (v432 & 1) == 0)
      {
        v555 = v490;
        v556 = v491;
        v557 = v492;
        v554 = v489;
        v553 = v488;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467D7C0;
        v549 = (__int128)xmmword_22467D7D0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 3, 3, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x9B000000DBLL), xmmword_22467D7D0);
      }
    }
    if (((v308 | v460) & 1) == 0)
    {
      v550 = v490;
      v551 = v491;
      v552 = v492;
      v549 = v489;
      v548 = v488;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467D7E0;
      v544 = (__int128)xmmword_22467D7F0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 3, 3, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x11B000000DBLL), xmmword_22467D7F0);
      v329 = (v426 & 1) == 0 && ((v307 | v326) & 1) == 0;
      if ((v418 & 1) == 0 && v329)
      {
        v545 = v490;
        v546 = v491;
        v547 = v492;
        v544 = v489;
        v543 = v488;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467D800;
        v539 = (__int128)xmmword_22467D810;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 3, 3, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x9B000000DBLL), xmmword_22467D810);
      }
    }
    v330 = (v432 & 1) == 0 && ((v307 | v326) & 1) == 0;
    if (v330 && (v442 & 1) == 0)
    {
      v540 = v490;
      v541 = v491;
      v542 = v492;
      v539 = v489;
      v538 = v488;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467D820;
      v534 = xmmword_22467D830;
      *(_QWORD *)&v523 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 3, 3, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v523, COERCE_DOUBLE(0x9B000000DBLL), xmmword_22467D830);
    }
  }
  v331 = *((_DWORD *)v218 + 149);
  if (**v470)
  {
    v332 = *((_DWORD *)v218 + 213);
    v333 = *((_DWORD *)v218 + 157);
    v334 = *((_DWORD *)v218 + 221);
    v335 = *((_DWORD *)v218 + 165);
  }
  else
  {
    if ((v331 & 0x10000000) != 0)
      v336 = 0x40000000;
    else
      v336 = 0x80000000;
    if ((v331 & 0x20000000) != 0)
      v331 = v336;
    else
      v331 &= 0xCFFFFFFF;
    v337 = *((_DWORD *)v218 + 213);
    if ((v337 & 0x10000000) != 0)
      v338 = 0x40000000;
    else
      v338 = 0x80000000;
    if ((v337 & 0x20000000) != 0)
      v332 = v338;
    else
      v332 = v337 & 0xCFFFFFFF;
    v339 = *((_DWORD *)v218 + 157);
    if ((v339 & 0x10000000) != 0)
      v340 = 0x40000000;
    else
      v340 = 0x80000000;
    if ((v339 & 0x20000000) != 0)
      v333 = v340;
    else
      v333 = v339 & 0xCFFFFFFF;
    v341 = *((_DWORD *)v218 + 221);
    if ((v341 & 0x10000000) != 0)
      v342 = 0x40000000;
    else
      v342 = 0x80000000;
    if ((v341 & 0x20000000) != 0)
      v334 = v342;
    else
      v334 = v341 & 0xCFFFFFFF;
    v343 = *((_DWORD *)v218 + 165);
    if ((v343 & 0x10000000) != 0)
      v335 = 0x40000000;
    else
      v335 = 0x80000000;
    if ((v343 & 0x20000000) == 0)
      v335 = v343 & 0xCFFFFFFF;
  }
  v344 = v333 >> 30;
  v422 = v331 >> 30;
  v465 = v332 >> 30;
  v446 = v335 >> 30;
  if ((v316 & 0x40000000) != 0)
  {
    v510 = v490;
    v511 = v491;
    v512 = v492;
    v509 = v489;
    v508 = v488;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467D840;
    v504 = (__int128)xmmword_22467D850;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 4, 3, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x11C000000DCLL), xmmword_22467D850);
    if ((v297 & 0x40000000) == 0)
    {
      v505 = v490;
      v506 = v491;
      v507 = v492;
      v504 = v489;
      v503 = v488;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467D860;
      v564 = (__int128)xmmword_22467D870;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 4, 3, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x11C000000DCLL), xmmword_22467D870);
      if (((v308 | v460) & 1) == 0)
      {
        v565 = v490;
        v566 = v491;
        v567 = v492;
        v563 = v488;
        v564 = v489;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467D880;
        v559 = (__int128)xmmword_22467D890;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 4, 3, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x11C000000DCLL), xmmword_22467D890);
        v345 = (v426 & 1) == 0 && ((v307 | v326) & 1) == 0;
        if ((v418 & 1) == 0 && v345)
        {
          v560 = v490;
          v561 = v491;
          v562 = v492;
          v559 = v489;
          v558 = v488;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467D8A0;
          v554 = (__int128)xmmword_22467D8B0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 4, 3, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x9C000000DCLL), xmmword_22467D8B0);
        }
      }
      v346 = (v432 & 1) == 0 && ((v307 | v326) & 1) == 0;
      if (v346 && (v442 & 1) == 0)
      {
        v555 = v490;
        v556 = v491;
        v557 = v492;
        v554 = v489;
        v553 = v488;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467D8C0;
        v549 = (__int128)xmmword_22467D8D0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 4, 3, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x9C000000DCLL), xmmword_22467D8D0);
      }
    }
    if (((v460 | v465) & 1) == 0)
    {
      v550 = v490;
      v551 = v491;
      v552 = v492;
      v549 = v489;
      v548 = v488;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467D8E0;
      v544 = (__int128)xmmword_22467D8F0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 4, 3, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x11C000000DCLL), xmmword_22467D8F0);
      v347 = (v422 & 1) == 0 && ((v326 | v344) & 1) == 0;
      if ((v426 & 1) == 0 && v347)
      {
        v545 = v490;
        v546 = v491;
        v547 = v492;
        v544 = v489;
        v543 = v488;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467D900;
        v539 = (__int128)xmmword_22467D910;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 4, 3, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x9C000000DCLL), xmmword_22467D910);
      }
    }
    v348 = (v442 & 1) == 0 && ((v326 | v344) & 1) == 0;
    if (v348 && (v446 & 1) == 0)
    {
      v540 = v490;
      v541 = v491;
      v542 = v492;
      v539 = v489;
      v538 = v488;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467D920;
      v534 = xmmword_22467D930;
      *(_QWORD *)&v523 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 4, 3, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v523, COERCE_DOUBLE(0x9C000000DCLL), xmmword_22467D930);
    }
  }
  v349 = *((_DWORD *)v218 + 150);
  if (**v470)
  {
    v350 = *((_DWORD *)v218 + 214);
    v351 = *((_DWORD *)v218 + 158);
    v352 = *((_DWORD *)v218 + 222);
    v353 = *((_DWORD *)v218 + 166);
  }
  else
  {
    if ((v349 & 0x10000000) != 0)
      v354 = 0x40000000;
    else
      v354 = 0x80000000;
    if ((v349 & 0x20000000) != 0)
      v349 = v354;
    else
      v349 &= 0xCFFFFFFF;
    v355 = *((_DWORD *)v218 + 214);
    if ((v355 & 0x10000000) != 0)
      v356 = 0x40000000;
    else
      v356 = 0x80000000;
    if ((v355 & 0x20000000) != 0)
      v350 = v356;
    else
      v350 = v355 & 0xCFFFFFFF;
    v357 = *((_DWORD *)v218 + 158);
    if ((v357 & 0x10000000) != 0)
      v358 = 0x40000000;
    else
      v358 = 0x80000000;
    if ((v357 & 0x20000000) != 0)
      v351 = v358;
    else
      v351 = v357 & 0xCFFFFFFF;
    v359 = *((_DWORD *)v218 + 222);
    if ((v359 & 0x10000000) != 0)
      v360 = 0x40000000;
    else
      v360 = 0x80000000;
    if ((v359 & 0x20000000) != 0)
      v352 = v360;
    else
      v352 = v359 & 0xCFFFFFFF;
    v361 = *((_DWORD *)v218 + 166);
    if ((v361 & 0x10000000) != 0)
      v353 = 0x40000000;
    else
      v353 = 0x80000000;
    if ((v361 & 0x20000000) == 0)
      v353 = v361 & 0xCFFFFFFF;
  }
  v433 = v349 >> 30;
  v450 = v351 >> 30;
  v455 = v350 >> 30;
  v438 = v353 >> 30;
  v525 = v490;
  v526 = v491;
  v527 = v492;
  v524 = v489;
  v523 = v488;
  if ((v334 & 0x40000000) != 0)
  {
    v510 = v490;
    v511 = v491;
    v512 = v492;
    v509 = v489;
    v508 = v488;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467D940;
    v504 = (__int128)xmmword_22467D950;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 5, 3, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x11D000000DDLL), xmmword_22467D950);
    if ((v316 & 0x40000000) == 0)
    {
      v505 = v490;
      v506 = v491;
      v507 = v492;
      v504 = v489;
      v503 = v488;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467D960;
      v564 = (__int128)xmmword_22467D970;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 5, 3, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x11D000000DDLL), xmmword_22467D970);
      if (((v460 | v465) & 1) == 0)
      {
        v565 = v490;
        v566 = v491;
        v567 = v492;
        v563 = v488;
        v564 = v489;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467D980;
        v559 = (__int128)xmmword_22467D990;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 5, 3, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x11D000000DDLL), xmmword_22467D990);
        v362 = (v422 & 1) == 0 && ((v326 | v344) & 1) == 0;
        if ((v426 & 1) == 0 && v362)
        {
          v560 = v490;
          v561 = v491;
          v562 = v492;
          v559 = v489;
          v558 = v488;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467D9A0;
          v554 = (__int128)xmmword_22467D9B0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 5, 3, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x9D000000DDLL), xmmword_22467D9B0);
        }
      }
      v363 = (v442 & 1) == 0 && ((v326 | v344) & 1) == 0;
      if (v363 && (v446 & 1) == 0)
      {
        v555 = v525;
        v556 = v526;
        v557 = v527;
        v554 = v524;
        v553 = v523;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467D9C0;
        v549 = (__int128)xmmword_22467D9D0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 5, 3, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x9D000000DDLL), xmmword_22467D9D0);
      }
    }
    if (((v465 | v455) & 1) == 0)
    {
      v550 = v525;
      v551 = v526;
      v552 = v527;
      v549 = v524;
      v548 = v523;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467D9E0;
      v544 = (__int128)xmmword_22467D9F0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 5, 3, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x11D000000DDLL), xmmword_22467D9F0);
      v364 = (v433 & 1) == 0 && ((v344 | v450) & 1) == 0;
      if ((v422 & 1) == 0 && v364)
      {
        v545 = v525;
        v546 = v526;
        v547 = v527;
        v544 = v524;
        v543 = v523;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467DA00;
        v539 = (__int128)xmmword_22467DA10;
        *(_QWORD *)&v528 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 5, 3, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)&v528, COERCE_DOUBLE(0x9D000000DDLL), xmmword_22467DA10);
      }
    }
    v365 = (v446 & 1) == 0 && ((v344 | v450) & 1) == 0;
    if (v365 && (v438 & 1) == 0)
    {
      v540 = v525;
      v541 = v526;
      v542 = v527;
      v539 = v524;
      v538 = v523;
      *(_QWORD *)&v528 = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467DA20;
      v534 = xmmword_22467DA30;
      *(_QWORD *)&v518 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 5, 3, 3, (uint64_t)&v528, (uint64_t)&v533, (uint64_t)&v518, COERCE_DOUBLE(0x9D000000DDLL), xmmword_22467DA30);
    }
  }
  v520 = v490;
  v521 = v491;
  v522 = v492;
  v519 = v489;
  v518 = v488;
  v366 = *((_DWORD *)v218 + 151);
  if (**v470)
  {
    v367 = *((_DWORD *)v218 + 215);
    v368 = *((_DWORD *)v218 + 159);
    v369 = *((_DWORD *)v218 + 223);
    v370 = *((_DWORD *)v218 + 167);
  }
  else
  {
    if ((v366 & 0x10000000) != 0)
      v371 = 0x40000000;
    else
      v371 = 0x80000000;
    if ((v366 & 0x20000000) != 0)
      v366 = v371;
    else
      v366 &= 0xCFFFFFFF;
    v372 = *((_DWORD *)v218 + 215);
    if ((v372 & 0x10000000) != 0)
      v373 = 0x40000000;
    else
      v373 = 0x80000000;
    if ((v372 & 0x20000000) != 0)
      v367 = v373;
    else
      v367 = v372 & 0xCFFFFFFF;
    v374 = *((_DWORD *)v218 + 159);
    if ((v374 & 0x10000000) != 0)
      v375 = 0x40000000;
    else
      v375 = 0x80000000;
    if ((v374 & 0x20000000) != 0)
      v368 = v375;
    else
      v368 = v374 & 0xCFFFFFFF;
    v376 = *((_DWORD *)v218 + 223);
    if ((v376 & 0x10000000) != 0)
      v377 = 0x40000000;
    else
      v377 = 0x80000000;
    if ((v376 & 0x20000000) != 0)
      v369 = v377;
    else
      v369 = v376 & 0xCFFFFFFF;
    v378 = *((_DWORD *)v218 + 167);
    if ((v378 & 0x10000000) != 0)
      v370 = 0x40000000;
    else
      v370 = 0x80000000;
    if ((v378 & 0x20000000) == 0)
      v370 = v378 & 0xCFFFFFFF;
  }
  v379 = v368 >> 30;
  v461 = v366 >> 30;
  v380 = v367 >> 30;
  v471 = v370 >> 30;
  v530 = v490;
  v531 = v491;
  v532 = v492;
  v529 = v489;
  v528 = v488;
  if ((v352 & 0x40000000) != 0)
  {
    v510 = v490;
    v511 = v491;
    v512 = v492;
    v509 = v489;
    v508 = v488;
    *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
    v503 = xmmword_22467DA40;
    v504 = (__int128)xmmword_22467DA50;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 6, 3, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x11E000000DELL), xmmword_22467DA50);
    if ((v334 & 0x40000000) == 0)
    {
      v505 = v490;
      v506 = v491;
      v507 = v492;
      v504 = v489;
      v503 = v488;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467DA60;
      v564 = (__int128)xmmword_22467DA70;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 6, 3, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x11E000000DELL), xmmword_22467DA70);
      if (((v465 | v455) & 1) == 0)
      {
        v565 = v490;
        v566 = v491;
        v567 = v492;
        v563 = v488;
        v564 = v489;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467DA80;
        v559 = (__int128)xmmword_22467DA90;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 6, 3, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x11E000000DELL), xmmword_22467DA90);
        v381 = (v433 & 1) == 0 && ((v344 | v450) & 1) == 0;
        if ((v422 & 1) == 0 && v381)
        {
          v560 = v490;
          v561 = v491;
          v562 = v492;
          v559 = v489;
          v558 = v488;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467DAA0;
          v554 = (__int128)xmmword_22467DAB0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 6, 3, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x9E000000DELL), xmmword_22467DAB0);
        }
      }
      v382 = (v446 & 1) == 0 && ((v344 | v450) & 1) == 0;
      if (v382 && (v438 & 1) == 0)
      {
        v555 = v530;
        v556 = v531;
        v557 = v532;
        v554 = v529;
        v553 = v528;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v548 = xmmword_22467DAC0;
        v549 = (__int128)xmmword_22467DAD0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 6, 3, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x9E000000DELL), xmmword_22467DAD0);
      }
    }
    if (((v455 | v380) & 1) == 0)
    {
      v550 = v530;
      v551 = v531;
      v552 = v532;
      v549 = v529;
      v548 = v528;
      *(_QWORD *)&v538 = 0xD0D0D0D0D0D0D0DLL;
      v543 = xmmword_22467DAE0;
      v544 = (__int128)xmmword_22467DAF0;
      *(_QWORD *)&v533 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 6, 3, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)&v533, COERCE_DOUBLE(0x11E000000DELL), xmmword_22467DAF0);
      v383 = (v461 & 1) == 0 && ((v450 | v379) & 1) == 0;
      if ((v433 & 1) == 0 && v383)
      {
        v545 = v530;
        v546 = v531;
        v547 = v532;
        v544 = v529;
        v543 = v528;
        *(_QWORD *)&v533 = 0xD0D0D0D0D0D0D0DLL;
        v538 = xmmword_22467DB00;
        v539 = (__int128)xmmword_22467DB10;
        *(_QWORD *)&v569[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 6, 3, 3, (uint64_t)&v533, (uint64_t)&v538, (uint64_t)v569, COERCE_DOUBLE(0x9E000000DELL), xmmword_22467DB10);
      }
    }
    v384 = (v438 & 1) == 0 && ((v450 | v379) & 1) == 0;
    if (v384 && (v471 & 1) == 0)
    {
      v540 = v530;
      v541 = v531;
      v542 = v532;
      v539 = v529;
      v538 = v528;
      *(_QWORD *)&v569[0] = 0xD0D0D0D0D0D0D0DLL;
      v533 = xmmword_22467DB20;
      v534 = xmmword_22467DB30;
      v570[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 6, 3, 3, (uint64_t)v569, (uint64_t)&v533, (uint64_t)v570, COERCE_DOUBLE(0x9E000000DELL), xmmword_22467DB30);
    }
  }
  v385 = *(unsigned int *)(v475 + 88);
  if ((v385 & 0x80000000) != 0)
  {
    v388 = *v467;
    v389 = *(_DWORD *)(v477 + 856);
    v390 = **v467;
    if (**v467)
      goto LABEL_1060;
  }
  else
  {
    v386 = *(_QWORD *)(v477 + 2328);
    if (v385 >= (*(_QWORD *)(v477 + 2336) - v386) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v386 = *(_QWORD *)(v477 + 2328);
    }
    v387 = v386 + (v385 << 11);
    v388 = *v467;
    v389 = *(_DWORD *)(v387 + 576);
    v390 = **v467;
    if (**v467)
    {
LABEL_1060:
      v391 = *(unsigned int *)(v475 + 88);
      if ((v391 & 0x80000000) == 0)
        goto LABEL_1061;
LABEL_1080:
      v393 = *(_DWORD *)(v477 + 1112);
      if (v390)
        goto LABEL_1065;
      goto LABEL_1081;
    }
  }
  if ((v389 & 0x10000000) != 0)
    v398 = 0x40000000;
  else
    v398 = 0x80000000;
  if ((v389 & 0x20000000) != 0)
    v389 = v398;
  else
    v389 &= 0xCFFFFFFF;
  v391 = *(unsigned int *)(v475 + 88);
  if ((v391 & 0x80000000) != 0)
    goto LABEL_1080;
LABEL_1061:
  v392 = *(_QWORD *)(v477 + 2328);
  if (v391 >= (*(_QWORD *)(v477 + 2336) - v392) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v392 = *(_QWORD *)(v477 + 2328);
    v388 = *v467;
    v390 = **v467;
  }
  v393 = *(_DWORD *)(v392 + (v391 << 11) + 832);
  if (v390)
  {
LABEL_1065:
    v394 = *(unsigned int *)(v475 + 88);
    if ((v394 & 0x80000000) == 0)
      goto LABEL_1066;
LABEL_1088:
    v396 = *(_DWORD *)(v477 + 888);
    if (v390)
      goto LABEL_1070;
    goto LABEL_1089;
  }
LABEL_1081:
  if ((v393 & 0x10000000) != 0)
    v399 = 0x40000000;
  else
    v399 = 0x80000000;
  if ((v393 & 0x20000000) != 0)
    v393 = v399;
  else
    v393 &= 0xCFFFFFFF;
  v394 = *(unsigned int *)(v475 + 88);
  if ((v394 & 0x80000000) != 0)
    goto LABEL_1088;
LABEL_1066:
  v395 = *(_QWORD *)(v477 + 2328);
  if (v394 >= (*(_QWORD *)(v477 + 2336) - v395) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v395 = *(_QWORD *)(v477 + 2328);
    v388 = *v467;
    v390 = **v467;
  }
  v396 = *(_DWORD *)(v395 + (v394 << 11) + 608);
  if (v390)
  {
LABEL_1070:
    v397 = *(unsigned int *)(v475 + 88);
    if ((v397 & 0x80000000) != 0)
      goto LABEL_1139;
    goto LABEL_1096;
  }
LABEL_1089:
  if ((v396 & 0x10000000) != 0)
    v400 = 0x40000000;
  else
    v400 = 0x80000000;
  if ((v396 & 0x20000000) != 0)
    v396 = v400;
  else
    v396 &= 0xCFFFFFFF;
  v397 = *(unsigned int *)(v475 + 88);
  if ((v397 & 0x80000000) != 0)
    goto LABEL_1139;
LABEL_1096:
  v401 = *(_QWORD *)(v477 + 2328);
  v402 = (*(_QWORD *)(v477 + 2336) - v401) >> 11;
  if (v402 > v397)
    goto LABEL_1100;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v388 = *v467;
  v397 = *(unsigned int *)(v475 + 88);
  if ((v397 & 0x80000000) != 0)
  {
LABEL_1139:
    v403 = *(_DWORD *)(v477 + 920);
    if (*v388)
      goto LABEL_1110;
    goto LABEL_1104;
  }
  v401 = *(_QWORD *)(v477 + 2328);
  v402 = (*(_QWORD *)(v477 + 2336) - v401) >> 11;
LABEL_1100:
  if (v402 <= v397)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v401 = *(_QWORD *)(v477 + 2328);
    v388 = *v467;
  }
  v403 = *(_DWORD *)(v401 + (v397 << 11) + 640);
  if (!*v388)
  {
LABEL_1104:
    if ((v403 & 0x10000000) != 0)
      v404 = 0x40000000;
    else
      v404 = 0x80000000;
    if ((v403 & 0x20000000) != 0)
      v403 = v404;
    else
      v403 &= 0xCFFFFFFF;
  }
LABEL_1110:
  v535 = v520;
  v536 = v521;
  v537 = v522;
  v534 = (float32x4_t)v519;
  v533 = v518;
  if ((v369 & 0x40000000) != 0)
  {
    v510 = v520;
    v511 = v521;
    v512 = v522;
    v509 = v519;
    v508 = v518;
    *(_QWORD *)&v563 = 0x161616160D0D0D0DLL;
    v503 = xmmword_22467DB40;
    v504 = (__int128)xmmword_22467DB50;
    *(_QWORD *)&v558 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v508, 7, 3, 3, (uint64_t)&v563, (uint64_t)&v503, (uint64_t)&v558, COERCE_DOUBLE(0x11F000000DFLL), xmmword_22467DB50);
    if ((v352 & 0x40000000) == 0)
    {
      v505 = v520;
      v506 = v521;
      v507 = v522;
      v504 = v519;
      v503 = v518;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467DB60;
      v564 = (__int128)xmmword_22467DB70;
      *(_QWORD *)&v553 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v503, 7, 3, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0x11F000000DFLL), xmmword_22467DB70);
      if (((v455 | v380) & 1) == 0)
      {
        v565 = v520;
        v566 = v521;
        v567 = v522;
        v563 = v518;
        v564 = v519;
        *(_QWORD *)&v553 = 0xD0D0D0D0D0D0D0DLL;
        v558 = xmmword_22467DB80;
        v559 = (__int128)xmmword_22467DB90;
        *(_QWORD *)&v548 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v563, 7, 3, 3, (uint64_t)&v553, (uint64_t)&v558, (uint64_t)&v548, COERCE_DOUBLE(0x11F000000DFLL), xmmword_22467DB90);
        v405 = (v461 & 1) == 0 && ((v450 | v379) & 1) == 0;
        if ((v433 & 1) == 0 && v405)
        {
          v560 = v520;
          v561 = v521;
          v562 = v522;
          v559 = v519;
          v558 = v518;
          *(_QWORD *)&v548 = 0xD0D0D0D0D0D0D0DLL;
          v553 = xmmword_22467DBA0;
          v554 = (__int128)xmmword_22467DBB0;
          *(_QWORD *)&v543 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v558, 7, 3, 3, (uint64_t)&v548, (uint64_t)&v553, (uint64_t)&v543, COERCE_DOUBLE(0x9F000000DFLL), xmmword_22467DBB0);
        }
      }
      v406 = (v438 & 1) == 0 && ((v450 | v379) & 1) == 0;
      if (v406 && (v471 & 1) == 0)
      {
        v555 = v535;
        v556 = v536;
        v557 = v537;
        *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
        v554 = (__int128)v534;
        v553 = v533;
        v548 = xmmword_22467DBC0;
        v549 = (__int128)xmmword_22467DBD0;
        *(_QWORD *)&v538 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v553, 7, 3, 3, (uint64_t)&v543, (uint64_t)&v548, (uint64_t)&v538, COERCE_DOUBLE(0x9F000000DFLL), xmmword_22467DBD0);
      }
    }
    v407 = (v396 & 0x40000000 | v379 & 1) == 0;
    if (!(v393 & 0x40000000 | v380 & 1))
    {
      v550 = v535;
      v551 = v536;
      v552 = v537;
      *(_QWORD *)&v538 = 0x16160D0D16160D0DLL;
      v549 = (__int128)v534;
      v548 = v533;
      v543 = xmmword_22467DBE0;
      v544 = (__int128)xmmword_22467DBF0;
      *(_QWORD *)&v569[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v548, 7, 3, 3, (uint64_t)&v538, (uint64_t)&v543, (uint64_t)v569, COERCE_DOUBLE(0x11F000000DFLL), xmmword_22467DBF0);
      v408 = (v389 & 0x40000000) == 0 && v407;
      if ((v461 & 1) == 0 && v408)
      {
        v545 = v535;
        v546 = v536;
        v547 = v537;
        *(_QWORD *)&v569[0] = 0x161616160D0D0D0DLL;
        v544 = (__int128)v534;
        v543 = v533;
        v538 = xmmword_22467DC00;
        v539 = (__int128)xmmword_22467DC10;
        v570[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v543, 7, 3, 3, (uint64_t)v569, (uint64_t)&v538, (uint64_t)v570, COERCE_DOUBLE(0x9F000000DFLL), xmmword_22467DC10);
      }
    }
    v409 = (v471 & 1) == 0 && v407;
    if (v409 && (v403 & 0x40000000) == 0)
    {
      v540 = v535;
      v541 = v536;
      v542 = v537;
      v570[0] = 0x16160D0D16160D0DLL;
      v539 = (__int128)v534;
      v538 = v533;
      v569[0] = xmmword_22467DC20;
      v569[1] = xmmword_22467DC30;
      v568 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v538, 7, 3, 3, (uint64_t)v570, (uint64_t)v569, (uint64_t)&v568, COERCE_DOUBLE(0x9F000000DFLL), xmmword_22467DC30);
    }
  }
  v503 = v429;
  *(_QWORD *)&v504 = v218;
  *(_QWORD *)&v563 = v477;
  *((_QWORD *)&v563 + 1) = v475;
  *(_QWORD *)&v564 = v467;
  v512 = v482;
  v511 = v481;
  v510 = v480;
  v508 = v478;
  v509 = v479;
  return sub_223DEC8E8((unsigned __int8 ***)&v503, &v563, &v508);
}

unint64_t sub_223DEC8E8(unsigned __int8 ***a1, _QWORD *a2, __int128 *a3)
{
  unsigned __int8 **v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  _BYTE **v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  _BYTE **v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  _BYTE **v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  _BYTE **v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  _BYTE **v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  __int128 v78;
  __int128 v79;
  _BOOL4 v80;
  _BOOL4 v81;
  _BOOL4 v82;
  _BOOL4 v83;
  _BOOL4 v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  _BOOL4 v99;
  _BOOL4 v100;
  _BOOL4 v101;
  _BOOL4 v102;
  _BOOL4 v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  _BOOL4 v117;
  _BOOL4 v118;
  _BOOL4 v119;
  _BOOL4 v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  _BOOL4 v136;
  _BOOL4 v137;
  _BOOL4 v138;
  _BOOL4 v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  _BOOL4 v154;
  _BOOL4 v155;
  _BOOL4 v156;
  _BOOL4 v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  _BOOL4 v171;
  _BOOL4 v172;
  _BOOL4 v173;
  _BOOL4 v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  _BOOL4 v190;
  _BOOL4 v191;
  _BOOL4 v192;
  _BOOL4 v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _BYTE *v197;
  unsigned int v198;
  int v199;
  unint64_t v200;
  uint64_t v201;
  unsigned int v202;
  unint64_t v203;
  uint64_t v204;
  unsigned int v205;
  unint64_t v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  uint64_t v210;
  unint64_t v211;
  unsigned int v212;
  unsigned int v213;
  _BOOL4 v214;
  _BOOL4 v215;
  _BOOL4 v216;
  _BOOL4 v217;
  unsigned __int8 **v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  unint64_t v236;
  uint64_t v237;
  unsigned int v238;
  int v239;
  unint64_t v240;
  uint64_t v241;
  unsigned int v242;
  unint64_t v243;
  uint64_t v244;
  unsigned int v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  _BOOL4 v271;
  _BOOL4 v272;
  _BOOL4 v273;
  _BOOL4 v274;
  _BOOL4 v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  int v288;
  _BOOL4 v289;
  _BOOL4 v290;
  _BOOL4 v291;
  _BOOL4 v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  _BOOL4 v307;
  _BOOL4 v308;
  _BOOL4 v309;
  _BOOL4 v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  unsigned int v325;
  _BOOL4 v326;
  _BOOL4 v327;
  _BOOL4 v328;
  _BOOL4 v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  _BOOL4 v344;
  _BOOL4 v345;
  _BOOL4 v346;
  _BOOL4 v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  _BOOL4 v362;
  _BOOL4 v363;
  _BOOL4 v364;
  _BOOL4 v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  _BOOL4 v381;
  _BOOL4 v382;
  _BOOL4 v383;
  _BOOL4 v384;
  unint64_t v385;
  uint64_t v386;
  uint64_t v387;
  _BYTE *v388;
  unsigned int v389;
  int v390;
  unint64_t v391;
  uint64_t v392;
  unsigned int v393;
  unint64_t v394;
  uint64_t v395;
  unsigned int v396;
  unint64_t v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  uint64_t v401;
  unint64_t v402;
  unsigned int v403;
  unsigned int v404;
  _BOOL4 v405;
  _BOOL4 v406;
  _BOOL4 v407;
  _BOOL4 v408;
  _BOOL4 v409;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  __int128 v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned __int8 **v460;
  int v461;
  unsigned int v462;
  unsigned int v463;
  _QWORD *v464;
  _BYTE **v465;
  unsigned int v466;
  uint64_t v467;
  unsigned int v468;
  _BYTE **v469;
  unsigned int v470;
  unsigned int v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  __int128 v475;
  __int128 v476;
  __int128 v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  float32x4_t v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  uint64_t v565;
  _OWORD v566[2];
  _QWORD v567[3];

  v567[1] = *MEMORY[0x24BDAC8D0];
  v4 = a1[2];
  v469 = *a1;
  v5 = *((_DWORD *)v4 + 152);
  v6 = ***a1;
  v464 = a2;
  if (***a1)
  {
    v7 = *((_DWORD *)v4 + 216);
    v8 = *((_DWORD *)v4 + 160);
    v9 = *((_DWORD *)v4 + 224);
    v10 = *((_DWORD *)v4 + 168);
    v473 = *a2;
    v455 = v9;
    if ((v9 & 0x40000000) == 0)
    {
LABEL_3:
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      goto LABEL_91;
    }
  }
  else
  {
    if ((v5 & 0x20000000) != 0)
      v5 *= 4;
    v16 = *((_DWORD *)v4 + 216);
    if ((v16 & 0x20000000) != 0)
      v7 = 4 * v16;
    else
      v7 = *((_DWORD *)v4 + 216);
    v17 = *((_DWORD *)v4 + 160);
    if ((v17 & 0x20000000) != 0)
      v8 = 4 * v17;
    else
      v8 = *((_DWORD *)v4 + 160);
    v18 = *((_DWORD *)v4 + 224);
    if ((v18 & 0x20000000) != 0)
      v9 = 4 * v18;
    else
      v9 = *((_DWORD *)v4 + 224);
    v19 = *((_DWORD *)v4 + 168);
    if ((v19 & 0x10000000) != 0)
      v20 = 0x40000000;
    else
      v20 = 0x80000000;
    if ((v19 & 0x20000000) != 0)
      v10 = v20;
    else
      v10 = v19 & 0xCFFFFFFF;
    v473 = *a2;
    v455 = v9;
    if ((v9 & 0x40000000) == 0)
      goto LABEL_3;
  }
  v466 = v8;
  v21 = (_BYTE **)a2[2];
  v22 = *(unsigned int *)(a2[1] + 16);
  v470 = v7;
  if ((v22 & 0x80000000) != 0)
  {
    v24 = v473 + 280;
  }
  else
  {
    v23 = *(_QWORD *)(v473 + 2328);
    if (v22 >= (*(_QWORD *)(v473 + 2336) - v23) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v23 = *(_QWORD *)(v473 + 2328);
      v9 = v455;
      v7 = v470;
    }
    v24 = v23 + (v22 << 11);
  }
  v25 = *(_DWORD *)(v24 + 636);
  v26 = v25 & 0xCFFFFFFF;
  if ((v25 & 0x10000000) != 0)
    v27 = 0x40000000;
  else
    v27 = 0x80000000;
  if ((v25 & 0x20000000) != 0)
    v26 = v27;
  if (**v21)
    v28 = v25;
  else
    v28 = v26;
  v29 = *v464;
  v30 = (_BYTE **)v464[2];
  v31 = *(unsigned int *)(v464[1] + 16);
  if ((v31 & 0x80000000) != 0)
  {
    v33 = v29 + 280;
  }
  else
  {
    v32 = *(_QWORD *)(v29 + 2328);
    if (v31 >= (*(_QWORD *)(v29 + 2336) - v32) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v32 = *(_QWORD *)(v29 + 2328);
      v9 = v455;
      v7 = v470;
    }
    v33 = v32 + (v31 << 11);
  }
  v34 = *(_DWORD *)(v33 + 892);
  v35 = v34 & 0xCFFFFFFF;
  if ((v34 & 0x10000000) != 0)
    v36 = 0x40000000;
  else
    v36 = 0x80000000;
  if ((v34 & 0x20000000) != 0)
    v35 = v36;
  if (**v30)
    v37 = v34;
  else
    v37 = v35;
  v38 = *v464;
  v39 = (_BYTE **)v464[2];
  v40 = *(unsigned int *)(v464[1] + 16);
  if ((v40 & 0x80000000) != 0)
  {
    v42 = v38 + 280;
  }
  else
  {
    v41 = *(_QWORD *)(v38 + 2328);
    if (v40 >= (*(_QWORD *)(v38 + 2336) - v41) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v41 = *(_QWORD *)(v38 + 2328);
      v9 = v455;
      v7 = v470;
    }
    v42 = v41 + (v40 << 11);
  }
  v43 = *(_DWORD *)(v42 + 668);
  v44 = v43 & 0xCFFFFFFF;
  if ((v43 & 0x10000000) != 0)
    v45 = 0x40000000;
  else
    v45 = 0x80000000;
  if ((v43 & 0x20000000) != 0)
    v44 = v45;
  if (**v39)
    v46 = v43;
  else
    v46 = v44;
  v47 = *v464;
  v48 = (_BYTE **)v464[2];
  v49 = *(unsigned int *)(v464[1] + 16);
  if ((v49 & 0x80000000) != 0)
  {
    v51 = v10;
    v52 = v28;
    v53 = *(_DWORD *)(v47 + 1204);
    if (**v48)
      goto LABEL_69;
  }
  else
  {
    v50 = *(_QWORD *)(v47 + 2328);
    if (v49 >= (*(_QWORD *)(v47 + 2336) - v50) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v50 = *(_QWORD *)(v47 + 2328);
      v9 = v455;
      v7 = v470;
    }
    v51 = v10;
    v52 = v28;
    v53 = *(_DWORD *)(v50 + (v49 << 11) + 924);
    if (**v48)
    {
LABEL_69:
      v54 = *v464;
      v55 = (_BYTE **)v464[2];
      v56 = *(unsigned int *)(v464[1] + 16);
      if ((v56 & 0x80000000) == 0)
        goto LABEL_70;
LABEL_82:
      v58 = v54 + 280;
      goto LABEL_83;
    }
  }
  if ((v53 & 0x10000000) != 0)
    v59 = 0x40000000;
  else
    v59 = 0x80000000;
  if ((v53 & 0x20000000) != 0)
    v53 = v59;
  else
    v53 &= 0xCFFFFFFF;
  v54 = *v464;
  v55 = (_BYTE **)v464[2];
  v56 = *(unsigned int *)(v464[1] + 16);
  if ((v56 & 0x80000000) != 0)
    goto LABEL_82;
LABEL_70:
  v57 = *(_QWORD *)(v54 + 2328);
  if (v56 >= (*(_QWORD *)(v54 + 2336) - v57) >> 11)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      v57 = *(_QWORD *)(v54 + 2328);
      v9 = v455;
      v7 = v470;
      goto LABEL_73;
    }
LABEL_1175:
    abort();
  }
LABEL_73:
  v58 = v57 + (v56 << 11);
LABEL_83:
  v15 = (v52 >> 30) & 1;
  v14 = (v37 >> 30) & 1;
  v13 = (v46 >> 30) & 1;
  v12 = (v53 >> 30) & 1;
  v60 = *(_DWORD *)(v58 + 700);
  v8 = v466;
  if (!**v55)
  {
    if ((v60 & 0x10000000) != 0)
      v61 = 0x40000000;
    else
      v61 = 0x80000000;
    if ((v60 & 0x20000000) != 0)
      v60 = v61;
    else
      v60 &= 0xCFFFFFFF;
  }
  v11 = (v60 >> 30) & 1;
  v4 = a1[2];
  a2 = v464;
  v469 = *a1;
  v473 = *v464;
  v6 = ***a1;
  v10 = v51;
LABEL_91:
  v433 = v5 >> 30;
  v467 = a2[1];
  v460 = (unsigned __int8 **)a2[2];
  v482 = a3[2];
  v483 = a3[3];
  v484 = a3[4];
  v480 = *a3;
  v481 = a3[1];
  v62 = *((_DWORD *)v4 + 153);
  if (v6)
  {
    v63 = *((_DWORD *)v4 + 217);
    v64 = *((_DWORD *)v4 + 161);
    v451 = *((_DWORD *)v4 + 225);
    v65 = *((_DWORD *)v4 + 169);
  }
  else
  {
    if ((v62 & 0x10000000) != 0)
      v66 = 0x40000000;
    else
      v66 = 0x80000000;
    if ((v62 & 0x20000000) != 0)
      v62 = v66;
    else
      v62 &= 0xCFFFFFFF;
    v67 = *((_DWORD *)v4 + 217);
    if ((v67 & 0x10000000) != 0)
      v68 = 0x40000000;
    else
      v68 = 0x80000000;
    if ((v67 & 0x20000000) != 0)
      v63 = v68;
    else
      v63 = v67 & 0xCFFFFFFF;
    v69 = *((_DWORD *)v4 + 161);
    if ((v69 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v69 & 0x20000000) != 0)
      v64 = v70;
    else
      v64 = v69 & 0xCFFFFFFF;
    v71 = *((_DWORD *)v4 + 225);
    if ((v71 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v71 & 0x20000000) != 0)
      v73 = v72;
    else
      v73 = v71 & 0xCFFFFFFF;
    v451 = v73;
    v74 = *((_DWORD *)v4 + 169);
    if ((v74 & 0x10000000) != 0)
      v65 = 0x40000000;
    else
      v65 = 0x80000000;
    if ((v74 & 0x20000000) == 0)
      v65 = v74 & 0xCFFFFFFF;
  }
  v75 = v8 >> 30;
  v76 = v7 >> 30;
  v77 = v10 >> 30;
  v418 = v62 >> 30;
  v442 = v64 >> 30;
  v446 = v63 >> 30;
  v423 = v65 >> 30;
  v492 = a3[2];
  v493 = a3[3];
  v494 = a3[4];
  v490 = *a3;
  v491 = a3[1];
  if ((v9 & 0x40000000) != 0)
  {
    v78 = a3[3];
    v507 = a3[2];
    v508 = v78;
    v509 = a3[4];
    v79 = *a3;
    v506 = a3[1];
    v505 = v79;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467DC40;
    v501 = (__int128)xmmword_22467DC50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 0, 4, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x120000000E0), xmmword_22467DC50);
    if (!v12)
    {
      v502 = v492;
      v503 = v493;
      v504 = v494;
      v501 = v491;
      v500 = v490;
      *(_QWORD *)&v555 = 0x4040D0D04040D0DLL;
      v560 = xmmword_22467DC60;
      v561 = (__int128)xmmword_22467DC70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 0, 4, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x120000000E0), xmmword_22467DC70);
      v80 = (v13 | v75 & 1) == 0;
      if (!(v14 | v76 & 1))
      {
        v562 = v492;
        v563 = v493;
        v564 = v494;
        v560 = v490;
        v561 = v491;
        *(_QWORD *)&v550 = 0x40404040D0D0D0DLL;
        v555 = xmmword_22467DC80;
        v556 = (__int128)xmmword_22467DC90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 0, 4, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x120000000E0), xmmword_22467DC90);
        v81 = (v433 & 1) == 0 && v80;
        if (!v15 && v81)
        {
          v557 = v492;
          v558 = v493;
          v559 = v494;
          v556 = v491;
          v555 = v490;
          *(_QWORD *)&v545 = 0x4040D0D04040D0DLL;
          v550 = xmmword_22467DCA0;
          v551 = (__int128)xmmword_22467DCB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 0, 4, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xA0000000E0), xmmword_22467DCB0);
        }
      }
      if (v11)
        v82 = 0;
      else
        v82 = v80;
      if (v82 && (v77 & 1) == 0)
      {
        v552 = v492;
        v553 = v493;
        v554 = v494;
        *(_QWORD *)&v540 = 0x40404040D0D0D0DLL;
        v551 = v491;
        v550 = v490;
        v545 = xmmword_22467DCC0;
        v546 = (__int128)xmmword_22467DCD0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 0, 4, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xA0000000E0), xmmword_22467DCD0);
      }
    }
    if (((v76 | v446) & 1) == 0)
    {
      v547 = v492;
      v548 = v493;
      v549 = v494;
      v546 = v491;
      v545 = v490;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467DCE0;
      v541 = (__int128)xmmword_22467DCF0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 0, 4, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x120000000E0), xmmword_22467DCF0);
      v83 = (v418 & 1) == 0 && ((v75 | v442) & 1) == 0;
      if ((v433 & 1) == 0 && v83)
      {
        v542 = v492;
        v543 = v493;
        v544 = v494;
        v541 = v491;
        v540 = v490;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467DD00;
        v536 = (__int128)xmmword_22467DD10;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 0, 4, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xA0000000E0), xmmword_22467DD10);
      }
    }
    v84 = (v77 & 1) == 0 && ((v75 | v442) & 1) == 0;
    v9 = v455;
    if (v84 && (v423 & 1) == 0)
    {
      v537 = v492;
      v538 = v493;
      v539 = v494;
      v536 = v491;
      v535 = v490;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467DD20;
      v531 = xmmword_22467DD30;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 0, 4, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0xA0000000E0), xmmword_22467DD30);
      v9 = v455;
    }
  }
  v85 = *((_DWORD *)v4 + 154);
  if (**v469)
  {
    v86 = *((_DWORD *)v4 + 218);
    v87 = *((_DWORD *)v4 + 162);
    v88 = *((_DWORD *)v4 + 226);
    v89 = *((_DWORD *)v4 + 170);
  }
  else
  {
    if ((v85 & 0x10000000) != 0)
      v90 = 0x40000000;
    else
      v90 = 0x80000000;
    if ((v85 & 0x20000000) != 0)
      v85 = v90;
    else
      v85 &= 0xCFFFFFFF;
    v91 = *((_DWORD *)v4 + 218);
    if ((v91 & 0x10000000) != 0)
      v92 = 0x40000000;
    else
      v92 = 0x80000000;
    if ((v91 & 0x20000000) != 0)
      v86 = v92;
    else
      v86 = v91 & 0xCFFFFFFF;
    v93 = *((_DWORD *)v4 + 162);
    if ((v93 & 0x10000000) != 0)
      v94 = 0x40000000;
    else
      v94 = 0x80000000;
    if ((v93 & 0x20000000) != 0)
      v87 = v94;
    else
      v87 = v93 & 0xCFFFFFFF;
    v95 = *((_DWORD *)v4 + 226);
    if ((v95 & 0x10000000) != 0)
      v96 = 0x40000000;
    else
      v96 = 0x80000000;
    if ((v95 & 0x20000000) != 0)
      v88 = v96;
    else
      v88 = v95 & 0xCFFFFFFF;
    v97 = *((_DWORD *)v4 + 170);
    if ((v97 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v97 & 0x20000000) == 0)
      v89 = v97 & 0xCFFFFFFF;
  }
  v438 = v87 >> 30;
  v416 = v85 >> 30;
  v456 = v86 >> 30;
  v98 = v89 >> 30;
  if ((v451 & 0x40000000) != 0)
  {
    v99 = (v9 & 0x40000000) == 0;
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467DD40;
    v501 = (__int128)xmmword_22467DD50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 1, 4, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x121000000E1), xmmword_22467DD50);
    if (v99)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467DD60;
      v561 = (__int128)xmmword_22467DD70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 1, 4, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x121000000E1), xmmword_22467DD70);
      if (((v76 | v446) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467DD80;
        v556 = (__int128)xmmword_22467DD90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 1, 4, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x121000000E1), xmmword_22467DD90);
        v100 = (v418 & 1) == 0 && ((v75 | v442) & 1) == 0;
        if ((v433 & 1) == 0 && v100)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467DDA0;
          v551 = (__int128)xmmword_22467DDB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 1, 4, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xA1000000E1), xmmword_22467DDB0);
        }
      }
      v101 = (v77 & 1) == 0 && ((v75 | v442) & 1) == 0;
      if (v101 && (v423 & 1) == 0)
      {
        v552 = v482;
        v553 = v483;
        v554 = v484;
        v551 = v481;
        v550 = v480;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467DDC0;
        v546 = (__int128)xmmword_22467DDD0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 1, 4, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xA1000000E1), xmmword_22467DDD0);
      }
    }
    if (((v446 | v456) & 1) == 0)
    {
      v547 = v482;
      v548 = v483;
      v549 = v484;
      v546 = v481;
      v545 = v480;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467DDE0;
      v541 = (__int128)xmmword_22467DDF0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 1, 4, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x121000000E1), xmmword_22467DDF0);
      v102 = (v416 & 1) == 0 && ((v442 | v438) & 1) == 0;
      if ((v418 & 1) == 0 && v102)
      {
        v542 = v482;
        v543 = v483;
        v544 = v484;
        v541 = v481;
        v540 = v480;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467DE00;
        v536 = (__int128)xmmword_22467DE10;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 1, 4, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xA1000000E1), xmmword_22467DE10);
      }
    }
    v103 = (v423 & 1) == 0 && ((v442 | v438) & 1) == 0;
    if (v103 && (v98 & 1) == 0)
    {
      v537 = v482;
      v538 = v483;
      v539 = v484;
      v536 = v481;
      v535 = v480;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467DE20;
      v531 = xmmword_22467DE30;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 1, 4, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0xA1000000E1), xmmword_22467DE30);
    }
  }
  v104 = *((_DWORD *)v4 + 155);
  if (**v469)
  {
    v105 = *((_DWORD *)v4 + 219);
    v106 = *((_DWORD *)v4 + 163);
    v107 = *((_DWORD *)v4 + 227);
    v108 = *((_DWORD *)v4 + 171);
  }
  else
  {
    if ((v104 & 0x10000000) != 0)
      v109 = 0x40000000;
    else
      v109 = 0x80000000;
    if ((v104 & 0x20000000) != 0)
      v104 = v109;
    else
      v104 &= 0xCFFFFFFF;
    v110 = *((_DWORD *)v4 + 219);
    if ((v110 & 0x10000000) != 0)
      v111 = 0x40000000;
    else
      v111 = 0x80000000;
    if ((v110 & 0x20000000) != 0)
      v105 = v111;
    else
      v105 = v110 & 0xCFFFFFFF;
    v112 = *((_DWORD *)v4 + 163);
    if ((v112 & 0x10000000) != 0)
      v113 = 0x40000000;
    else
      v113 = 0x80000000;
    if ((v112 & 0x20000000) != 0)
      v106 = v113;
    else
      v106 = v112 & 0xCFFFFFFF;
    v114 = *((_DWORD *)v4 + 227);
    if ((v114 & 0x10000000) != 0)
      v115 = 0x40000000;
    else
      v115 = 0x80000000;
    if ((v114 & 0x20000000) != 0)
      v107 = v115;
    else
      v107 = v114 & 0xCFFFFFFF;
    v116 = *((_DWORD *)v4 + 171);
    if ((v116 & 0x10000000) != 0)
      v108 = 0x40000000;
    else
      v108 = 0x80000000;
    if ((v116 & 0x20000000) == 0)
      v108 = v116 & 0xCFFFFFFF;
  }
  v415 = v104 >> 30;
  v429 = v106 >> 30;
  v434 = v105 >> 30;
  v421 = v108 >> 30;
  if ((v88 & 0x40000000) != 0)
  {
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467DE40;
    v501 = (__int128)xmmword_22467DE50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 2, 4, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x122000000E2), xmmword_22467DE50);
    if ((v451 & 0x40000000) == 0)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467DE60;
      v561 = (__int128)xmmword_22467DE70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 2, 4, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x122000000E2), xmmword_22467DE70);
      if (((v446 | v456) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467DE80;
        v556 = (__int128)xmmword_22467DE90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 2, 4, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x122000000E2), xmmword_22467DE90);
        v117 = (v416 & 1) == 0 && ((v442 | v438) & 1) == 0;
        if ((v418 & 1) == 0 && v117)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467DEA0;
          v551 = (__int128)xmmword_22467DEB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 2, 4, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xA2000000E2), xmmword_22467DEB0);
        }
      }
      v118 = (v423 & 1) == 0 && ((v442 | v438) & 1) == 0;
      if (v118 && (v98 & 1) == 0)
      {
        v552 = v482;
        v553 = v483;
        v554 = v484;
        v551 = v481;
        v550 = v480;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467DEC0;
        v546 = (__int128)xmmword_22467DED0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 2, 4, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xA2000000E2), xmmword_22467DED0);
      }
    }
    if (((v456 | v434) & 1) == 0)
    {
      v547 = v482;
      v548 = v483;
      v549 = v484;
      v546 = v481;
      v545 = v480;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467DEE0;
      v541 = (__int128)xmmword_22467DEF0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 2, 4, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x122000000E2), xmmword_22467DEF0);
      v119 = (v415 & 1) == 0 && ((v438 | v429) & 1) == 0;
      if ((v416 & 1) == 0 && v119)
      {
        v542 = v482;
        v543 = v483;
        v544 = v484;
        v541 = v481;
        v540 = v480;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467DF00;
        v536 = (__int128)xmmword_22467DF10;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 2, 4, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xA2000000E2), xmmword_22467DF10);
      }
    }
    v120 = (v98 & 1) == 0 && ((v438 | v429) & 1) == 0;
    if (v120 && (v421 & 1) == 0)
    {
      v537 = v482;
      v538 = v483;
      v539 = v484;
      v536 = v481;
      v535 = v480;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467DF20;
      v531 = xmmword_22467DF30;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 2, 4, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0xA2000000E2), xmmword_22467DF30);
    }
  }
  v121 = *((_DWORD *)v4 + 156);
  if (**v469)
  {
    v122 = *((_DWORD *)v4 + 220);
    v123 = *((_DWORD *)v4 + 164);
    v124 = *((_DWORD *)v4 + 228);
    v125 = *((_DWORD *)v4 + 172);
  }
  else
  {
    if ((v121 & 0x10000000) != 0)
      v126 = 0x40000000;
    else
      v126 = 0x80000000;
    if ((v121 & 0x20000000) != 0)
      v121 = v126;
    else
      v121 &= 0xCFFFFFFF;
    v127 = *((_DWORD *)v4 + 220);
    if ((v127 & 0x10000000) != 0)
      v128 = 0x40000000;
    else
      v128 = 0x80000000;
    if ((v127 & 0x20000000) != 0)
      v122 = v128;
    else
      v122 = v127 & 0xCFFFFFFF;
    v129 = *((_DWORD *)v4 + 164);
    if ((v129 & 0x10000000) != 0)
      v130 = 0x40000000;
    else
      v130 = 0x80000000;
    if ((v129 & 0x20000000) != 0)
      v123 = v130;
    else
      v123 = v129 & 0xCFFFFFFF;
    v131 = *((_DWORD *)v4 + 228);
    if ((v131 & 0x10000000) != 0)
      v132 = 0x40000000;
    else
      v132 = 0x80000000;
    if ((v131 & 0x20000000) != 0)
      v124 = v132;
    else
      v124 = v131 & 0xCFFFFFFF;
    v133 = *((_DWORD *)v4 + 172);
    if ((v133 & 0x10000000) != 0)
      v125 = 0x40000000;
    else
      v125 = 0x80000000;
    if ((v133 & 0x20000000) == 0)
      v125 = v133 & 0xCFFFFFFF;
  }
  v134 = v123 >> 30;
  v419 = v121 >> 30;
  v135 = v122 >> 30;
  v424 = v125 >> 30;
  if ((v107 & 0x40000000) != 0)
  {
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467DF40;
    v501 = (__int128)xmmword_22467DF50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 3, 4, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x123000000E3), xmmword_22467DF50);
    if ((v88 & 0x40000000) == 0)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467DF60;
      v561 = (__int128)xmmword_22467DF70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 3, 4, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x123000000E3), xmmword_22467DF70);
      if (((v456 | v434) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467DF80;
        v556 = (__int128)xmmword_22467DF90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 3, 4, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x123000000E3), xmmword_22467DF90);
        v136 = (v415 & 1) == 0 && ((v438 | v429) & 1) == 0;
        if ((v416 & 1) == 0 && v136)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467DFA0;
          v551 = (__int128)xmmword_22467DFB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 3, 4, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xA3000000E3), xmmword_22467DFB0);
        }
      }
      v137 = (v98 & 1) == 0 && ((v438 | v429) & 1) == 0;
      if (v137 && (v421 & 1) == 0)
      {
        v552 = v482;
        v553 = v483;
        v554 = v484;
        v551 = v481;
        v550 = v480;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467DFC0;
        v546 = (__int128)xmmword_22467DFD0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 3, 4, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xA3000000E3), xmmword_22467DFD0);
      }
    }
    if (((v434 | v135) & 1) == 0)
    {
      v547 = v482;
      v548 = v483;
      v549 = v484;
      v546 = v481;
      v545 = v480;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467DFE0;
      v541 = (__int128)xmmword_22467DFF0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 3, 4, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x123000000E3), xmmword_22467DFF0);
      v138 = (v419 & 1) == 0 && ((v429 | v134) & 1) == 0;
      if ((v415 & 1) == 0 && v138)
      {
        v542 = v482;
        v543 = v483;
        v544 = v484;
        v541 = v481;
        v540 = v480;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467E000;
        v536 = (__int128)xmmword_22467E010;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 3, 4, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xA3000000E3), xmmword_22467E010);
      }
    }
    v139 = (v421 & 1) == 0 && ((v429 | v134) & 1) == 0;
    if (v139 && (v424 & 1) == 0)
    {
      v537 = v482;
      v538 = v483;
      v539 = v484;
      v536 = v481;
      v535 = v480;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467E020;
      v531 = xmmword_22467E030;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 3, 4, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0xA3000000E3), xmmword_22467E030);
    }
  }
  v140 = *((_DWORD *)v4 + 157);
  if (**v469)
  {
    v141 = *((_DWORD *)v4 + 221);
    v142 = *((_DWORD *)v4 + 165);
    v143 = *((_DWORD *)v4 + 229);
    v144 = *((_DWORD *)v4 + 173);
  }
  else
  {
    if ((v140 & 0x10000000) != 0)
      v145 = 0x40000000;
    else
      v145 = 0x80000000;
    if ((v140 & 0x20000000) != 0)
      v140 = v145;
    else
      v140 &= 0xCFFFFFFF;
    v146 = *((_DWORD *)v4 + 221);
    if ((v146 & 0x10000000) != 0)
      v147 = 0x40000000;
    else
      v147 = 0x80000000;
    if ((v146 & 0x20000000) != 0)
      v141 = v147;
    else
      v141 = v146 & 0xCFFFFFFF;
    v148 = *((_DWORD *)v4 + 165);
    if ((v148 & 0x10000000) != 0)
      v149 = 0x40000000;
    else
      v149 = 0x80000000;
    if ((v148 & 0x20000000) != 0)
      v142 = v149;
    else
      v142 = v148 & 0xCFFFFFFF;
    v150 = *((_DWORD *)v4 + 229);
    if ((v150 & 0x10000000) != 0)
      v151 = 0x40000000;
    else
      v151 = 0x80000000;
    if ((v150 & 0x20000000) != 0)
      v143 = v151;
    else
      v143 = v150 & 0xCFFFFFFF;
    v152 = *((_DWORD *)v4 + 173);
    if ((v152 & 0x10000000) != 0)
      v144 = 0x40000000;
    else
      v144 = 0x80000000;
    if ((v152 & 0x20000000) == 0)
      v144 = v152 & 0xCFFFFFFF;
  }
  v417 = v140 >> 30;
  v452 = v142 >> 30;
  v457 = v141 >> 30;
  v153 = v144 >> 30;
  if ((v124 & 0x40000000) != 0)
  {
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467E040;
    v501 = (__int128)xmmword_22467E050;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 4, 4, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x124000000E4), xmmword_22467E050);
    if ((v107 & 0x40000000) == 0)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467E060;
      v561 = (__int128)xmmword_22467E070;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 4, 4, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x124000000E4), xmmword_22467E070);
      if (((v434 | v135) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467E080;
        v556 = (__int128)xmmword_22467E090;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 4, 4, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x124000000E4), xmmword_22467E090);
        v154 = (v419 & 1) == 0 && ((v429 | v134) & 1) == 0;
        if ((v415 & 1) == 0 && v154)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467E0A0;
          v551 = (__int128)xmmword_22467E0B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 4, 4, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xA4000000E4), xmmword_22467E0B0);
        }
      }
      v155 = (v421 & 1) == 0 && ((v429 | v134) & 1) == 0;
      if (v155 && (v424 & 1) == 0)
      {
        v552 = v482;
        v553 = v483;
        v554 = v484;
        v551 = v481;
        v550 = v480;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467E0C0;
        v546 = (__int128)xmmword_22467E0D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 4, 4, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xA4000000E4), xmmword_22467E0D0);
      }
    }
    if (((v135 | v457) & 1) == 0)
    {
      v547 = v482;
      v548 = v483;
      v549 = v484;
      v546 = v481;
      v545 = v480;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467E0E0;
      v541 = (__int128)xmmword_22467E0F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 4, 4, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x124000000E4), xmmword_22467E0F0);
      v156 = (v417 & 1) == 0 && ((v134 | v452) & 1) == 0;
      if ((v419 & 1) == 0 && v156)
      {
        v542 = v482;
        v543 = v483;
        v544 = v484;
        v541 = v481;
        v540 = v480;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467E100;
        v536 = (__int128)xmmword_22467E110;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 4, 4, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xA4000000E4), xmmword_22467E110);
      }
    }
    v157 = (v424 & 1) == 0 && ((v134 | v452) & 1) == 0;
    if (v157 && (v153 & 1) == 0)
    {
      v537 = v482;
      v538 = v483;
      v539 = v484;
      v536 = v481;
      v535 = v480;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467E120;
      v531 = xmmword_22467E130;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 4, 4, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0xA4000000E4), xmmword_22467E130);
    }
  }
  v158 = *((_DWORD *)v4 + 158);
  if (**v469)
  {
    v159 = *((_DWORD *)v4 + 222);
    v160 = *((_DWORD *)v4 + 166);
    v161 = *((_DWORD *)v4 + 230);
    v162 = *((_DWORD *)v4 + 174);
  }
  else
  {
    if ((v158 & 0x10000000) != 0)
      v163 = 0x40000000;
    else
      v163 = 0x80000000;
    if ((v158 & 0x20000000) != 0)
      v158 = v163;
    else
      v158 &= 0xCFFFFFFF;
    v164 = *((_DWORD *)v4 + 222);
    if ((v164 & 0x10000000) != 0)
      v165 = 0x40000000;
    else
      v165 = 0x80000000;
    if ((v164 & 0x20000000) != 0)
      v159 = v165;
    else
      v159 = v164 & 0xCFFFFFFF;
    v166 = *((_DWORD *)v4 + 166);
    if ((v166 & 0x10000000) != 0)
      v167 = 0x40000000;
    else
      v167 = 0x80000000;
    if ((v166 & 0x20000000) != 0)
      v160 = v167;
    else
      v160 = v166 & 0xCFFFFFFF;
    v168 = *((_DWORD *)v4 + 230);
    if ((v168 & 0x10000000) != 0)
      v169 = 0x40000000;
    else
      v169 = 0x80000000;
    if ((v168 & 0x20000000) != 0)
      v161 = v169;
    else
      v161 = v168 & 0xCFFFFFFF;
    v170 = *((_DWORD *)v4 + 174);
    if ((v170 & 0x10000000) != 0)
      v162 = 0x40000000;
    else
      v162 = 0x80000000;
    if ((v170 & 0x20000000) == 0)
      v162 = v170 & 0xCFFFFFFF;
  }
  v435 = v158 >> 30;
  v443 = v160 >> 30;
  v447 = v159 >> 30;
  v439 = v162 >> 30;
  v522 = v482;
  v523 = v483;
  v524 = v484;
  v521 = v481;
  v520 = v480;
  if ((v143 & 0x40000000) != 0)
  {
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467E140;
    v501 = (__int128)xmmword_22467E150;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 5, 4, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x125000000E5), xmmword_22467E150);
    if ((v124 & 0x40000000) == 0)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467E160;
      v561 = (__int128)xmmword_22467E170;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 5, 4, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x125000000E5), xmmword_22467E170);
      if (((v135 | v457) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467E180;
        v556 = (__int128)xmmword_22467E190;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 5, 4, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x125000000E5), xmmword_22467E190);
        v171 = (v417 & 1) == 0 && ((v134 | v452) & 1) == 0;
        if ((v419 & 1) == 0 && v171)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467E1A0;
          v551 = (__int128)xmmword_22467E1B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 5, 4, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xA5000000E5), xmmword_22467E1B0);
        }
      }
      v172 = (v424 & 1) == 0 && ((v134 | v452) & 1) == 0;
      if (v172 && (v153 & 1) == 0)
      {
        v552 = v522;
        v553 = v523;
        v554 = v524;
        v551 = v521;
        v550 = v520;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467E1C0;
        v546 = (__int128)xmmword_22467E1D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 5, 4, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xA5000000E5), xmmword_22467E1D0);
      }
    }
    if (((v457 | v447) & 1) == 0)
    {
      v547 = v522;
      v548 = v523;
      v549 = v524;
      v546 = v521;
      v545 = v520;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467E1E0;
      v541 = (__int128)xmmword_22467E1F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 5, 4, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x125000000E5), xmmword_22467E1F0);
      v173 = (v435 & 1) == 0 && ((v452 | v443) & 1) == 0;
      if ((v417 & 1) == 0 && v173)
      {
        v542 = v522;
        v543 = v523;
        v544 = v524;
        v541 = v521;
        v540 = v520;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467E200;
        v536 = (__int128)xmmword_22467E210;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 5, 4, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xA5000000E5), xmmword_22467E210);
      }
    }
    v174 = (v153 & 1) == 0 && ((v452 | v443) & 1) == 0;
    if (v174 && (v439 & 1) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467E220;
      v531 = xmmword_22467E230;
      *(_QWORD *)&v515 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 5, 4, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v515, COERCE_DOUBLE(0xA5000000E5), xmmword_22467E230);
    }
  }
  v517 = v482;
  v518 = v483;
  v519 = v484;
  v516 = v481;
  v515 = v480;
  v175 = *((_DWORD *)v4 + 159);
  if (**v469)
  {
    v176 = *((_DWORD *)v4 + 223);
    v177 = *((_DWORD *)v4 + 167);
    v178 = *((_DWORD *)v4 + 231);
    v179 = *((_DWORD *)v4 + 175);
  }
  else
  {
    if ((v175 & 0x10000000) != 0)
      v180 = 0x40000000;
    else
      v180 = 0x80000000;
    if ((v175 & 0x20000000) != 0)
      v175 = v180;
    else
      v175 &= 0xCFFFFFFF;
    v181 = *((_DWORD *)v4 + 223);
    if ((v181 & 0x10000000) != 0)
      v182 = 0x40000000;
    else
      v182 = 0x80000000;
    if ((v181 & 0x20000000) != 0)
      v176 = v182;
    else
      v176 = v181 & 0xCFFFFFFF;
    v183 = *((_DWORD *)v4 + 167);
    if ((v183 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v183 & 0x20000000) != 0)
      v177 = v184;
    else
      v177 = v183 & 0xCFFFFFFF;
    v185 = *((_DWORD *)v4 + 231);
    if ((v185 & 0x10000000) != 0)
      v186 = 0x40000000;
    else
      v186 = 0x80000000;
    if ((v185 & 0x20000000) != 0)
      v178 = v186;
    else
      v178 = v185 & 0xCFFFFFFF;
    v187 = *((_DWORD *)v4 + 175);
    if ((v187 & 0x10000000) != 0)
      v179 = 0x40000000;
    else
      v179 = 0x80000000;
    if ((v187 & 0x20000000) == 0)
      v179 = v187 & 0xCFFFFFFF;
  }
  v188 = v177 >> 30;
  v430 = v175 >> 30;
  v189 = v176 >> 30;
  v471 = v179 >> 30;
  v527 = v482;
  v528 = v483;
  v529 = v484;
  v526 = v481;
  v525 = v480;
  if ((v161 & 0x40000000) != 0)
  {
    v507 = v482;
    v508 = v483;
    v509 = v484;
    v506 = v481;
    v505 = v480;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467E240;
    v501 = (__int128)xmmword_22467E250;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 6, 4, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x126000000E6), xmmword_22467E250);
    if ((v143 & 0x40000000) == 0)
    {
      v502 = v482;
      v503 = v483;
      v504 = v484;
      v501 = v481;
      v500 = v480;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467E260;
      v561 = (__int128)xmmword_22467E270;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 6, 4, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x126000000E6), xmmword_22467E270);
      if (((v457 | v447) & 1) == 0)
      {
        v562 = v482;
        v563 = v483;
        v564 = v484;
        v560 = v480;
        v561 = v481;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467E280;
        v556 = (__int128)xmmword_22467E290;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 6, 4, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x126000000E6), xmmword_22467E290);
        v190 = (v435 & 1) == 0 && ((v452 | v443) & 1) == 0;
        if ((v417 & 1) == 0 && v190)
        {
          v557 = v482;
          v558 = v483;
          v559 = v484;
          v556 = v481;
          v555 = v480;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467E2A0;
          v551 = (__int128)xmmword_22467E2B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 6, 4, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xA6000000E6), xmmword_22467E2B0);
        }
      }
      v191 = (v153 & 1) == 0 && ((v452 | v443) & 1) == 0;
      if (v191 && (v439 & 1) == 0)
      {
        v552 = v527;
        v553 = v528;
        v554 = v529;
        v551 = v526;
        v550 = v525;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467E2C0;
        v546 = (__int128)xmmword_22467E2D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 6, 4, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xA6000000E6), xmmword_22467E2D0);
      }
    }
    if (((v447 | v189) & 1) == 0)
    {
      v547 = v527;
      v548 = v528;
      v549 = v529;
      v546 = v526;
      v545 = v525;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467E2E0;
      v541 = (__int128)xmmword_22467E2F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 6, 4, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x126000000E6), xmmword_22467E2F0);
      v192 = (v430 & 1) == 0 && ((v443 | v188) & 1) == 0;
      if ((v435 & 1) == 0 && v192)
      {
        v542 = v527;
        v543 = v528;
        v544 = v529;
        v541 = v526;
        v540 = v525;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467E300;
        v536 = (__int128)xmmword_22467E310;
        *(_QWORD *)&v510 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 6, 4, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v510, COERCE_DOUBLE(0xA6000000E6), xmmword_22467E310);
      }
    }
    v193 = (v439 & 1) == 0 && ((v443 | v188) & 1) == 0;
    if (v193 && (v471 & 1) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v510 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467E320;
      v531 = xmmword_22467E330;
      *(_QWORD *)&v566[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 6, 4, 3, (uint64_t)&v510, (uint64_t)&v530, (uint64_t)v566, COERCE_DOUBLE(0xA6000000E6), xmmword_22467E330);
    }
  }
  v194 = *(unsigned int *)(v467 + 88);
  if ((v194 & 0x80000000) != 0)
  {
    v197 = *v460;
    v198 = *(_DWORD *)(v473 + 888);
    v199 = **v460;
    if (**v460)
      goto LABEL_509;
  }
  else
  {
    v195 = *(_QWORD *)(v473 + 2328);
    if (v194 >= (*(_QWORD *)(v473 + 2336) - v195) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v195 = *(_QWORD *)(v473 + 2328);
    }
    v196 = v195 + (v194 << 11);
    v197 = *v460;
    v198 = *(_DWORD *)(v196 + 608);
    v199 = **v460;
    if (**v460)
    {
LABEL_509:
      v200 = *(unsigned int *)(v467 + 88);
      if ((v200 & 0x80000000) == 0)
        goto LABEL_510;
LABEL_529:
      v202 = *(_DWORD *)(v473 + 1144);
      if (v199)
        goto LABEL_514;
      goto LABEL_530;
    }
  }
  if ((v198 & 0x10000000) != 0)
    v207 = 0x40000000;
  else
    v207 = 0x80000000;
  if ((v198 & 0x20000000) != 0)
    v198 = v207;
  else
    v198 &= 0xCFFFFFFF;
  v200 = *(unsigned int *)(v467 + 88);
  if ((v200 & 0x80000000) != 0)
    goto LABEL_529;
LABEL_510:
  v201 = *(_QWORD *)(v473 + 2328);
  if (v200 >= (*(_QWORD *)(v473 + 2336) - v201) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v201 = *(_QWORD *)(v473 + 2328);
    v197 = *v460;
    v199 = **v460;
  }
  v202 = *(_DWORD *)(v201 + (v200 << 11) + 864);
  if (v199)
  {
LABEL_514:
    v203 = *(unsigned int *)(v467 + 88);
    if ((v203 & 0x80000000) == 0)
      goto LABEL_515;
LABEL_537:
    v205 = *(_DWORD *)(v473 + 920);
    if (v199)
      goto LABEL_519;
    goto LABEL_538;
  }
LABEL_530:
  if ((v202 & 0x10000000) != 0)
    v208 = 0x40000000;
  else
    v208 = 0x80000000;
  if ((v202 & 0x20000000) != 0)
    v202 = v208;
  else
    v202 &= 0xCFFFFFFF;
  v203 = *(unsigned int *)(v467 + 88);
  if ((v203 & 0x80000000) != 0)
    goto LABEL_537;
LABEL_515:
  v204 = *(_QWORD *)(v473 + 2328);
  if (v203 >= (*(_QWORD *)(v473 + 2336) - v204) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v204 = *(_QWORD *)(v473 + 2328);
    v197 = *v460;
    v199 = **v460;
  }
  v205 = *(_DWORD *)(v204 + (v203 << 11) + 640);
  if (v199)
  {
LABEL_519:
    v206 = *(unsigned int *)(v467 + 88);
    if ((v206 & 0x80000000) != 0)
      goto LABEL_590;
    goto LABEL_545;
  }
LABEL_538:
  if ((v205 & 0x10000000) != 0)
    v209 = 0x40000000;
  else
    v209 = 0x80000000;
  if ((v205 & 0x20000000) != 0)
    v205 = v209;
  else
    v205 &= 0xCFFFFFFF;
  v206 = *(unsigned int *)(v467 + 88);
  if ((v206 & 0x80000000) != 0)
    goto LABEL_590;
LABEL_545:
  v210 = *(_QWORD *)(v473 + 2328);
  v211 = (*(_QWORD *)(v473 + 2336) - v210) >> 11;
  if (v211 > v206)
    goto LABEL_549;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v197 = *v460;
  v206 = *(unsigned int *)(v467 + 88);
  if ((v206 & 0x80000000) != 0)
  {
LABEL_590:
    v212 = *(_DWORD *)(v473 + 952);
    if (*v197)
      goto LABEL_559;
    goto LABEL_553;
  }
  v210 = *(_QWORD *)(v473 + 2328);
  v211 = (*(_QWORD *)(v473 + 2336) - v210) >> 11;
LABEL_549:
  if (v211 <= v206)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v210 = *(_QWORD *)(v473 + 2328);
    v197 = *v460;
  }
  v212 = *(_DWORD *)(v210 + (v206 << 11) + 672);
  if (!*v197)
  {
LABEL_553:
    if ((v212 & 0x10000000) != 0)
      v213 = 0x40000000;
    else
      v213 = 0x80000000;
    if ((v212 & 0x20000000) != 0)
      v212 = v213;
    else
      v212 &= 0xCFFFFFFF;
  }
LABEL_559:
  v532 = v517;
  v533 = v518;
  v534 = v519;
  v531 = (float32x4_t)v516;
  v530 = v515;
  if ((v178 & 0x40000000) != 0)
  {
    v507 = v517;
    v508 = v518;
    v509 = v519;
    v506 = v516;
    v505 = v515;
    *(_QWORD *)&v560 = 0x161616160D0D0D0DLL;
    v500 = xmmword_22467E340;
    v501 = (__int128)xmmword_22467E350;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 7, 4, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x127000000E7), xmmword_22467E350);
    if ((v161 & 0x40000000) == 0)
    {
      v502 = v517;
      v503 = v518;
      v504 = v519;
      v501 = v516;
      v500 = v515;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467E360;
      v561 = (__int128)xmmword_22467E370;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 7, 4, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x127000000E7), xmmword_22467E370);
      if (((v447 | v189) & 1) == 0)
      {
        v562 = v517;
        v563 = v518;
        v564 = v519;
        v560 = v515;
        v561 = v516;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467E380;
        v556 = (__int128)xmmword_22467E390;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 7, 4, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x127000000E7), xmmword_22467E390);
        v214 = (v430 & 1) == 0 && ((v443 | v188) & 1) == 0;
        if ((v435 & 1) == 0 && v214)
        {
          v557 = v517;
          v558 = v518;
          v559 = v519;
          v556 = v516;
          v555 = v515;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467E3A0;
          v551 = (__int128)xmmword_22467E3B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 7, 4, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xA7000000E7), xmmword_22467E3B0);
        }
      }
      v215 = (v439 & 1) == 0 && ((v443 | v188) & 1) == 0;
      if (v215 && (v471 & 1) == 0)
      {
        v552 = v532;
        v553 = v533;
        v554 = v534;
        v551 = (__int128)v531;
        v550 = v530;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467E3C0;
        v546 = (__int128)xmmword_22467E3D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 7, 4, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xA7000000E7), xmmword_22467E3D0);
      }
    }
    if (!(v202 & 0x40000000 | v189 & 1))
    {
      v547 = v532;
      v548 = v533;
      v549 = v534;
      *(_QWORD *)&v535 = 0x16160D0D16160D0DLL;
      v546 = (__int128)v531;
      v545 = v530;
      v540 = xmmword_22467E3E0;
      v541 = (__int128)xmmword_22467E3F0;
      *(_QWORD *)&v510 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 7, 4, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v510, COERCE_DOUBLE(0x127000000E7), xmmword_22467E3F0);
      v216 = (v198 & 0x40000000) == 0 && (v205 & 0x40000000 | v188 & 1) == 0;
      if ((v430 & 1) == 0 && v216)
      {
        v542 = v532;
        v543 = v533;
        v544 = v534;
        *(_QWORD *)&v510 = 0x161616160D0D0D0DLL;
        v541 = (__int128)v531;
        v540 = v530;
        v535 = xmmword_22467E400;
        v536 = (__int128)xmmword_22467E410;
        *(_QWORD *)&v566[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 7, 4, 3, (uint64_t)&v510, (uint64_t)&v535, (uint64_t)v566, COERCE_DOUBLE(0xA7000000E7), xmmword_22467E410);
      }
    }
    v217 = (v471 & 1) == 0 && (v205 & 0x40000000 | v188 & 1) == 0;
    if (v217 && (v212 & 0x40000000) == 0)
    {
      v537 = v532;
      v538 = v533;
      v539 = v534;
      *(_QWORD *)&v566[0] = 0x16160D0D16160D0DLL;
      v536 = (__int128)v531;
      v535 = v530;
      v510 = xmmword_22467E420;
      v511 = (__int128)xmmword_22467E430;
      v567[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 7, 4, 3, (uint64_t)v566, (uint64_t)&v510, (uint64_t)v567, COERCE_DOUBLE(0xA7000000E7), xmmword_22467E430);
    }
  }
  v218 = a1[2];
  v472 = v464[1];
  v474 = *v464;
  v478 = a3[3];
  v479 = a3[4];
  v476 = a3[1];
  v477 = a3[2];
  v475 = *a3;
  v428 = *(_OWORD *)a1;
  v465 = (_BYTE **)v464[2];
  v219 = *((_DWORD *)v218 + 160);
  v220 = **(unsigned __int8 **)v428;
  if (**(_BYTE **)v428)
  {
    v221 = *((_DWORD *)v218 + 224);
    v222 = *((_DWORD *)v218 + 168);
    v223 = *((_DWORD *)v218 + 176);
    v461 = *((_DWORD *)v218 + 232);
    if ((v461 & 0x40000000) == 0)
    {
LABEL_589:
      v224 = v221;
      v225 = 0;
      v226 = 0;
      v227 = 0;
      v228 = 0;
      v229 = 0;
      goto LABEL_642;
    }
  }
  else
  {
    if ((v219 & 0x20000000) != 0)
      v219 *= 4;
    v230 = *((_DWORD *)v218 + 224);
    if ((v230 & 0x20000000) != 0)
      v221 = 4 * v230;
    else
      v221 = *((_DWORD *)v218 + 224);
    v231 = *((_DWORD *)v218 + 168);
    if ((v231 & 0x20000000) != 0)
      v222 = 4 * v231;
    else
      v222 = *((_DWORD *)v218 + 168);
    v232 = *((_DWORD *)v218 + 232);
    if ((v232 & 0x20000000) != 0)
      v233 = 4 * v232;
    else
      v233 = *((_DWORD *)v218 + 232);
    v234 = *((_DWORD *)v218 + 176);
    if ((v234 & 0x10000000) != 0)
      v235 = 0x40000000;
    else
      v235 = 0x80000000;
    if ((v234 & 0x20000000) != 0)
      v223 = v235;
    else
      v223 = v234 & 0xCFFFFFFF;
    v461 = v233;
    if ((v233 & 0x40000000) == 0)
      goto LABEL_589;
  }
  v236 = *(unsigned int *)(v472 + 16);
  if ((v236 & 0x80000000) != 0)
  {
    v238 = *(_DWORD *)(v474 + 948);
    v239 = **v465;
    if (**v465)
      goto LABEL_615;
  }
  else
  {
    v237 = *(_QWORD *)(v474 + 2328);
    if (v236 >= (*(_QWORD *)(v474 + 2336) - v237) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v237 = *(_QWORD *)(v474 + 2328);
    }
    v238 = *(_DWORD *)(v237 + (v236 << 11) + 668);
    v239 = **v465;
    if (**v465)
    {
LABEL_615:
      v240 = *(unsigned int *)(v472 + 16);
      if ((v240 & 0x80000000) == 0)
        goto LABEL_616;
LABEL_1149:
      v242 = *(_DWORD *)(v474 + 1204);
      if (v239)
        goto LABEL_620;
      goto LABEL_1150;
    }
  }
  if ((v238 & 0x10000000) != 0)
    v411 = 0x40000000;
  else
    v411 = 0x80000000;
  if ((v238 & 0x20000000) != 0)
    v238 = v411;
  else
    v238 &= 0xCFFFFFFF;
  v240 = *(unsigned int *)(v472 + 16);
  if ((v240 & 0x80000000) != 0)
    goto LABEL_1149;
LABEL_616:
  v241 = *(_QWORD *)(v474 + 2328);
  if (v240 >= (*(_QWORD *)(v474 + 2336) - v241) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v241 = *(_QWORD *)(v474 + 2328);
    v239 = **v465;
  }
  v242 = *(_DWORD *)(v241 + (v240 << 11) + 924);
  if (v239)
  {
LABEL_620:
    v243 = *(unsigned int *)(v472 + 16);
    if ((v243 & 0x80000000) == 0)
      goto LABEL_621;
LABEL_1157:
    v245 = *(_DWORD *)(v474 + 980);
    if (v239)
      goto LABEL_625;
    goto LABEL_1158;
  }
LABEL_1150:
  if ((v242 & 0x10000000) != 0)
    v412 = 0x40000000;
  else
    v412 = 0x80000000;
  if ((v242 & 0x20000000) != 0)
    v242 = v412;
  else
    v242 &= 0xCFFFFFFF;
  v243 = *(unsigned int *)(v472 + 16);
  if ((v243 & 0x80000000) != 0)
    goto LABEL_1157;
LABEL_621:
  v244 = *(_QWORD *)(v474 + 2328);
  if (v243 >= (*(_QWORD *)(v474 + 2336) - v244) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v244 = *(_QWORD *)(v474 + 2328);
    v239 = **v465;
  }
  v245 = *(_DWORD *)(v244 + (v243 << 11) + 700);
  if (v239)
  {
LABEL_625:
    v246 = *(unsigned int *)(v472 + 16);
    if ((v246 & 0x80000000) == 0)
      goto LABEL_626;
LABEL_1165:
    v248 = *(_DWORD *)(v474 + 1236);
    if (v239)
      goto LABEL_630;
    goto LABEL_1166;
  }
LABEL_1158:
  if ((v245 & 0x10000000) != 0)
    v413 = 0x40000000;
  else
    v413 = 0x80000000;
  if ((v245 & 0x20000000) != 0)
    v245 = v413;
  else
    v245 &= 0xCFFFFFFF;
  v246 = *(unsigned int *)(v472 + 16);
  if ((v246 & 0x80000000) != 0)
    goto LABEL_1165;
LABEL_626:
  v247 = *(_QWORD *)(v474 + 2328);
  if (v246 >= (*(_QWORD *)(v474 + 2336) - v247) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v247 = *(_QWORD *)(v474 + 2328);
    v239 = **v465;
  }
  v248 = *(_DWORD *)(v247 + (v246 << 11) + 956);
  if (v239)
  {
LABEL_630:
    v249 = *(unsigned int *)(v472 + 16);
    if ((v249 & 0x80000000) == 0)
      goto LABEL_631;
    goto LABEL_1173;
  }
LABEL_1166:
  if ((v248 & 0x10000000) != 0)
    v414 = 0x40000000;
  else
    v414 = 0x80000000;
  if ((v248 & 0x20000000) != 0)
    v248 = v414;
  else
    v248 &= 0xCFFFFFFF;
  v249 = *(unsigned int *)(v472 + 16);
  if ((v249 & 0x80000000) == 0)
  {
LABEL_631:
    v250 = *(_QWORD *)(v474 + 2328);
    if (v249 >= (*(_QWORD *)(v474 + 2336) - v250) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v250 = *(_QWORD *)(v474 + 2328);
      v239 = **v465;
    }
    v224 = v221;
    v251 = v250 + (v249 << 11);
    v229 = (v238 >> 30) & 1;
    v228 = (v242 >> 30) & 1;
    v227 = (v245 >> 30) & 1;
    v252 = *(_DWORD *)(v251 + 732);
    v226 = (v248 >> 30) & 1;
    if (v239)
      goto LABEL_641;
    goto LABEL_635;
  }
LABEL_1173:
  v224 = v221;
  v229 = (v238 >> 30) & 1;
  v228 = (v242 >> 30) & 1;
  v227 = (v245 >> 30) & 1;
  v252 = *(_DWORD *)(v474 + 1012);
  v226 = (v248 >> 30) & 1;
  if (!v239)
  {
LABEL_635:
    if ((v252 & 0x10000000) != 0)
      v253 = 0x40000000;
    else
      v253 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v252 = v253;
    else
      v252 &= 0xCFFFFFFF;
  }
LABEL_641:
  v225 = (v252 >> 30) & 1;
  v220 = **(unsigned __int8 **)v428;
LABEL_642:
  v431 = v219 >> 30;
  v512 = v477;
  v513 = v478;
  v514 = v479;
  v511 = v476;
  v510 = v475;
  v254 = *((_DWORD *)v218 + 161);
  if (v220)
  {
    v255 = *((_DWORD *)v218 + 225);
    v256 = *((_DWORD *)v218 + 169);
    v458 = *((_DWORD *)v218 + 233);
    v257 = *((_DWORD *)v218 + 177);
  }
  else
  {
    if ((v254 & 0x10000000) != 0)
      v258 = 0x40000000;
    else
      v258 = 0x80000000;
    if ((v254 & 0x20000000) != 0)
      v254 = v258;
    else
      v254 &= 0xCFFFFFFF;
    v259 = *((_DWORD *)v218 + 225);
    if ((v259 & 0x10000000) != 0)
      v260 = 0x40000000;
    else
      v260 = 0x80000000;
    if ((v259 & 0x20000000) != 0)
      v255 = v260;
    else
      v255 = v259 & 0xCFFFFFFF;
    v261 = *((_DWORD *)v218 + 169);
    if ((v261 & 0x10000000) != 0)
      v262 = 0x40000000;
    else
      v262 = 0x80000000;
    if ((v261 & 0x20000000) != 0)
      v256 = v262;
    else
      v256 = v261 & 0xCFFFFFFF;
    v263 = *((_DWORD *)v218 + 233);
    if ((v263 & 0x10000000) != 0)
      v264 = 0x40000000;
    else
      v264 = 0x80000000;
    if ((v263 & 0x20000000) != 0)
      v265 = v264;
    else
      v265 = v263 & 0xCFFFFFFF;
    v458 = v265;
    v266 = *((_DWORD *)v218 + 177);
    if ((v266 & 0x10000000) != 0)
      v257 = 0x40000000;
    else
      v257 = 0x80000000;
    if ((v266 & 0x20000000) == 0)
      v257 = v266 & 0xCFFFFFFF;
  }
  v267 = v222 >> 30;
  v268 = v224 >> 30;
  v269 = v223 >> 30;
  v425 = v254 >> 30;
  v448 = v256 >> 30;
  v453 = v255 >> 30;
  v270 = v257 >> 30;
  if ((v461 & 0x40000000) != 0)
  {
    v507 = v477;
    v508 = v478;
    v509 = v479;
    v506 = v476;
    v505 = v475;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467E440;
    v501 = (__int128)xmmword_22467E450;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 0, 5, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x128000000E8), xmmword_22467E450);
    if (!v226)
    {
      v502 = v477;
      v503 = v478;
      v504 = v479;
      v501 = v476;
      v500 = v475;
      *(_QWORD *)&v555 = 0x4040D0D04040D0DLL;
      v560 = xmmword_22467E460;
      v561 = (__int128)xmmword_22467E470;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 0, 5, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x128000000E8), xmmword_22467E470);
      v271 = (v227 | v267 & 1) == 0;
      if (!(v228 | v268 & 1))
      {
        v562 = v477;
        v563 = v478;
        v564 = v479;
        v560 = v475;
        v561 = v476;
        *(_QWORD *)&v550 = 0x40404040D0D0D0DLL;
        v555 = xmmword_22467E480;
        v556 = (__int128)xmmword_22467E490;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 0, 5, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x128000000E8), xmmword_22467E490);
        v272 = (v431 & 1) == 0 && v271;
        if (!v229 && v272)
        {
          v557 = v477;
          v558 = v478;
          v559 = v479;
          v556 = v476;
          v555 = v475;
          *(_QWORD *)&v545 = 0x4040D0D04040D0DLL;
          v550 = xmmword_22467E4A0;
          v551 = (__int128)xmmword_22467E4B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 0, 5, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xA8000000E8), xmmword_22467E4B0);
        }
      }
      if (v225)
        v273 = 0;
      else
        v273 = v271;
      if (v273 && (v269 & 1) == 0)
      {
        v552 = v477;
        v553 = v478;
        v554 = v479;
        *(_QWORD *)&v540 = 0x40404040D0D0D0DLL;
        v551 = v476;
        v550 = v475;
        v545 = xmmword_22467E4C0;
        v546 = (__int128)xmmword_22467E4D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 0, 5, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xA8000000E8), xmmword_22467E4D0);
      }
    }
    if (((v268 | v453) & 1) == 0)
    {
      v547 = v477;
      v548 = v478;
      v549 = v479;
      v546 = v476;
      v545 = v475;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467E4E0;
      v541 = (__int128)xmmword_22467E4F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 0, 5, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x128000000E8), xmmword_22467E4F0);
      v274 = (v425 & 1) == 0 && ((v267 | v448) & 1) == 0;
      if ((v431 & 1) == 0 && v274)
      {
        v542 = v477;
        v543 = v478;
        v544 = v479;
        v541 = v476;
        v540 = v475;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467E500;
        v536 = (__int128)xmmword_22467E510;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 0, 5, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xA8000000E8), xmmword_22467E510);
      }
    }
    v275 = (v269 & 1) == 0 && ((v267 | v448) & 1) == 0;
    if (v275 && (v270 & 1) == 0)
    {
      v537 = v477;
      v538 = v478;
      v539 = v479;
      v536 = v476;
      v535 = v475;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467E520;
      v531 = xmmword_22467E530;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 0, 5, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0xA8000000E8), xmmword_22467E530);
    }
  }
  v487 = v512;
  v488 = v513;
  v489 = v514;
  v485 = v510;
  v486 = v511;
  v276 = *((_DWORD *)v218 + 162);
  if (**(_BYTE **)v428)
  {
    v277 = *((_DWORD *)v218 + 226);
    v278 = *((_DWORD *)v218 + 170);
    v279 = *((_DWORD *)v218 + 234);
    v280 = *((_DWORD *)v218 + 178);
  }
  else
  {
    if ((v276 & 0x10000000) != 0)
      v281 = 0x40000000;
    else
      v281 = 0x80000000;
    if ((v276 & 0x20000000) != 0)
      v276 = v281;
    else
      v276 &= 0xCFFFFFFF;
    v282 = *((_DWORD *)v218 + 226);
    if ((v282 & 0x10000000) != 0)
      v283 = 0x40000000;
    else
      v283 = 0x80000000;
    if ((v282 & 0x20000000) != 0)
      v277 = v283;
    else
      v277 = v282 & 0xCFFFFFFF;
    v284 = *((_DWORD *)v218 + 170);
    if ((v284 & 0x10000000) != 0)
      v285 = 0x40000000;
    else
      v285 = 0x80000000;
    if ((v284 & 0x20000000) != 0)
      v278 = v285;
    else
      v278 = v284 & 0xCFFFFFFF;
    v286 = *((_DWORD *)v218 + 234);
    if ((v286 & 0x10000000) != 0)
      v287 = 0x40000000;
    else
      v287 = 0x80000000;
    if ((v286 & 0x20000000) != 0)
      v279 = v287;
    else
      v279 = v286 & 0xCFFFFFFF;
    v288 = *((_DWORD *)v218 + 178);
    if ((v288 & 0x10000000) != 0)
      v280 = 0x40000000;
    else
      v280 = 0x80000000;
    if ((v288 & 0x20000000) == 0)
      v280 = v288 & 0xCFFFFFFF;
  }
  v422 = v276 >> 30;
  v440 = v278 >> 30;
  v444 = v277 >> 30;
  v436 = v280 >> 30;
  v497 = v512;
  v498 = v513;
  v499 = v514;
  v495 = v510;
  v496 = v511;
  if ((v458 & 0x40000000) != 0)
  {
    v507 = v512;
    v508 = v513;
    v509 = v514;
    v506 = v511;
    v505 = v510;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467E540;
    v501 = (__int128)xmmword_22467E550;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 1, 5, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x129000000E9), xmmword_22467E550);
    if ((v461 & 0x40000000) == 0)
    {
      v502 = v512;
      v503 = v513;
      v504 = v514;
      v501 = v511;
      v500 = v510;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467E560;
      v561 = (__int128)xmmword_22467E570;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 1, 5, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x129000000E9), xmmword_22467E570);
      if (((v268 | v453) & 1) == 0)
      {
        v562 = v512;
        v563 = v513;
        v564 = v514;
        v560 = v510;
        v561 = v511;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467E580;
        v556 = (__int128)xmmword_22467E590;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 1, 5, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x129000000E9), xmmword_22467E590);
        v289 = (v425 & 1) == 0 && ((v267 | v448) & 1) == 0;
        if ((v431 & 1) == 0 && v289)
        {
          v557 = v512;
          v558 = v513;
          v559 = v514;
          v556 = v511;
          v555 = v510;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467E5A0;
          v551 = (__int128)xmmword_22467E5B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 1, 5, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xA9000000E9), xmmword_22467E5B0);
        }
      }
      v290 = (v269 & 1) == 0 && ((v267 | v448) & 1) == 0;
      if (v290 && (v270 & 1) == 0)
      {
        v552 = v497;
        v553 = v498;
        v554 = v499;
        v551 = v496;
        v550 = v495;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467E5C0;
        v546 = (__int128)xmmword_22467E5D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 1, 5, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xA9000000E9), xmmword_22467E5D0);
      }
    }
    if (((v453 | v444) & 1) == 0)
    {
      v547 = v497;
      v548 = v498;
      v549 = v499;
      v546 = v496;
      v545 = v495;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467E5E0;
      v541 = (__int128)xmmword_22467E5F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 1, 5, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x129000000E9), xmmword_22467E5F0);
      v291 = (v422 & 1) == 0 && ((v448 | v440) & 1) == 0;
      if ((v425 & 1) == 0 && v291)
      {
        v542 = v497;
        v543 = v498;
        v544 = v499;
        v541 = v496;
        v540 = v495;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467E600;
        v536 = (__int128)xmmword_22467E610;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 1, 5, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xA9000000E9), xmmword_22467E610);
      }
    }
    v292 = (v270 & 1) == 0 && ((v448 | v440) & 1) == 0;
    if (v292 && (v436 & 1) == 0)
    {
      v537 = v497;
      v538 = v498;
      v539 = v499;
      v536 = v496;
      v535 = v495;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467E620;
      v531 = xmmword_22467E630;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 1, 5, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0xA9000000E9), xmmword_22467E630);
    }
  }
  v293 = *((_DWORD *)v218 + 163);
  if (**(_BYTE **)v428)
  {
    v294 = *((_DWORD *)v218 + 227);
    v295 = *((_DWORD *)v218 + 171);
    v296 = *((_DWORD *)v218 + 235);
    v297 = *((_DWORD *)v218 + 179);
  }
  else
  {
    if ((v293 & 0x10000000) != 0)
      v298 = 0x40000000;
    else
      v298 = 0x80000000;
    if ((v293 & 0x20000000) != 0)
      v293 = v298;
    else
      v293 &= 0xCFFFFFFF;
    v299 = *((_DWORD *)v218 + 227);
    if ((v299 & 0x10000000) != 0)
      v300 = 0x40000000;
    else
      v300 = 0x80000000;
    if ((v299 & 0x20000000) != 0)
      v294 = v300;
    else
      v294 = v299 & 0xCFFFFFFF;
    v301 = *((_DWORD *)v218 + 171);
    if ((v301 & 0x10000000) != 0)
      v302 = 0x40000000;
    else
      v302 = 0x80000000;
    if ((v301 & 0x20000000) != 0)
      v295 = v302;
    else
      v295 = v301 & 0xCFFFFFFF;
    v303 = *((_DWORD *)v218 + 235);
    if ((v303 & 0x10000000) != 0)
      v304 = 0x40000000;
    else
      v304 = 0x80000000;
    if ((v303 & 0x20000000) != 0)
      v296 = v304;
    else
      v296 = v303 & 0xCFFFFFFF;
    v305 = *((_DWORD *)v218 + 179);
    if ((v305 & 0x10000000) != 0)
      v297 = 0x40000000;
    else
      v297 = 0x80000000;
    if ((v305 & 0x20000000) == 0)
      v297 = v305 & 0xCFFFFFFF;
  }
  v306 = v295 >> 30;
  v420 = v293 >> 30;
  v462 = v294 >> 30;
  v432 = v297 >> 30;
  if ((v279 & 0x40000000) != 0)
  {
    v507 = v487;
    v508 = v488;
    v509 = v489;
    v506 = v486;
    v505 = v485;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467E640;
    v501 = (__int128)xmmword_22467E650;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 2, 5, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x12A000000EALL), xmmword_22467E650);
    if ((v458 & 0x40000000) == 0)
    {
      v502 = v487;
      v503 = v488;
      v504 = v489;
      v501 = v486;
      v500 = v485;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467E660;
      v561 = (__int128)xmmword_22467E670;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 2, 5, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x12A000000EALL), xmmword_22467E670);
      if (((v453 | v444) & 1) == 0)
      {
        v562 = v487;
        v563 = v488;
        v564 = v489;
        v560 = v485;
        v561 = v486;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467E680;
        v556 = (__int128)xmmword_22467E690;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 2, 5, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x12A000000EALL), xmmword_22467E690);
        v307 = (v422 & 1) == 0 && ((v448 | v440) & 1) == 0;
        if ((v425 & 1) == 0 && v307)
        {
          v557 = v487;
          v558 = v488;
          v559 = v489;
          v556 = v486;
          v555 = v485;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467E6A0;
          v551 = (__int128)xmmword_22467E6B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 2, 5, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xAA000000EALL), xmmword_22467E6B0);
        }
      }
      v308 = (v270 & 1) == 0 && ((v448 | v440) & 1) == 0;
      if (v308 && (v436 & 1) == 0)
      {
        v552 = v487;
        v553 = v488;
        v554 = v489;
        v551 = v486;
        v550 = v485;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467E6C0;
        v546 = (__int128)xmmword_22467E6D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 2, 5, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xAA000000EALL), xmmword_22467E6D0);
      }
    }
    if (((v444 | v462) & 1) == 0)
    {
      v547 = v487;
      v548 = v488;
      v549 = v489;
      v546 = v486;
      v545 = v485;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467E6E0;
      v541 = (__int128)xmmword_22467E6F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 2, 5, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x12A000000EALL), xmmword_22467E6F0);
      v309 = (v420 & 1) == 0 && ((v440 | v306) & 1) == 0;
      if ((v422 & 1) == 0 && v309)
      {
        v542 = v487;
        v543 = v488;
        v544 = v489;
        v541 = v486;
        v540 = v485;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467E700;
        v536 = (__int128)xmmword_22467E710;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 2, 5, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xAA000000EALL), xmmword_22467E710);
      }
    }
    v310 = (v436 & 1) == 0 && ((v440 | v306) & 1) == 0;
    if (v310 && (v432 & 1) == 0)
    {
      v537 = v487;
      v538 = v488;
      v539 = v489;
      v536 = v486;
      v535 = v485;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467E720;
      v531 = xmmword_22467E730;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 2, 5, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0xAA000000EALL), xmmword_22467E730);
    }
  }
  v311 = *((_DWORD *)v218 + 164);
  if (**(_BYTE **)v428)
  {
    v312 = *((_DWORD *)v218 + 228);
    v313 = *((_DWORD *)v218 + 172);
    v314 = *((_DWORD *)v218 + 236);
    v315 = *((_DWORD *)v218 + 180);
  }
  else
  {
    if ((v311 & 0x10000000) != 0)
      v316 = 0x40000000;
    else
      v316 = 0x80000000;
    if ((v311 & 0x20000000) != 0)
      v311 = v316;
    else
      v311 &= 0xCFFFFFFF;
    v317 = *((_DWORD *)v218 + 228);
    if ((v317 & 0x10000000) != 0)
      v318 = 0x40000000;
    else
      v318 = 0x80000000;
    if ((v317 & 0x20000000) != 0)
      v312 = v318;
    else
      v312 = v317 & 0xCFFFFFFF;
    v319 = *((_DWORD *)v218 + 172);
    if ((v319 & 0x10000000) != 0)
      v320 = 0x40000000;
    else
      v320 = 0x80000000;
    if ((v319 & 0x20000000) != 0)
      v313 = v320;
    else
      v313 = v319 & 0xCFFFFFFF;
    v321 = *((_DWORD *)v218 + 236);
    if ((v321 & 0x10000000) != 0)
      v322 = 0x40000000;
    else
      v322 = 0x80000000;
    if ((v321 & 0x20000000) != 0)
      v314 = v322;
    else
      v314 = v321 & 0xCFFFFFFF;
    v323 = *((_DWORD *)v218 + 180);
    if ((v323 & 0x10000000) != 0)
      v315 = 0x40000000;
    else
      v315 = 0x80000000;
    if ((v323 & 0x20000000) == 0)
      v315 = v323 & 0xCFFFFFFF;
  }
  v324 = v313 >> 30;
  v426 = v311 >> 30;
  v325 = v312 >> 30;
  v449 = v315 >> 30;
  if ((v296 & 0x40000000) != 0)
  {
    v507 = v487;
    v508 = v488;
    v509 = v489;
    v506 = v486;
    v505 = v485;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467E740;
    v501 = (__int128)xmmword_22467E750;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 3, 5, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x12B000000EBLL), xmmword_22467E750);
    if ((v279 & 0x40000000) == 0)
    {
      v502 = v487;
      v503 = v488;
      v504 = v489;
      v501 = v486;
      v500 = v485;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467E760;
      v561 = (__int128)xmmword_22467E770;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 3, 5, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x12B000000EBLL), xmmword_22467E770);
      if (((v444 | v462) & 1) == 0)
      {
        v562 = v487;
        v563 = v488;
        v564 = v489;
        v560 = v485;
        v561 = v486;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467E780;
        v556 = (__int128)xmmword_22467E790;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 3, 5, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x12B000000EBLL), xmmword_22467E790);
        v326 = (v420 & 1) == 0 && ((v440 | v306) & 1) == 0;
        if ((v422 & 1) == 0 && v326)
        {
          v557 = v487;
          v558 = v488;
          v559 = v489;
          v556 = v486;
          v555 = v485;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467E7A0;
          v551 = (__int128)xmmword_22467E7B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 3, 5, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xAB000000EBLL), xmmword_22467E7B0);
        }
      }
      v327 = (v436 & 1) == 0 && ((v440 | v306) & 1) == 0;
      if (v327 && (v432 & 1) == 0)
      {
        v552 = v487;
        v553 = v488;
        v554 = v489;
        v551 = v486;
        v550 = v485;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467E7C0;
        v546 = (__int128)xmmword_22467E7D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 3, 5, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xAB000000EBLL), xmmword_22467E7D0);
      }
    }
    if (((v462 | v325) & 1) == 0)
    {
      v547 = v487;
      v548 = v488;
      v549 = v489;
      v546 = v486;
      v545 = v485;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467E7E0;
      v541 = (__int128)xmmword_22467E7F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 3, 5, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x12B000000EBLL), xmmword_22467E7F0);
      v328 = (v426 & 1) == 0 && ((v306 | v324) & 1) == 0;
      if ((v420 & 1) == 0 && v328)
      {
        v542 = v487;
        v543 = v488;
        v544 = v489;
        v541 = v486;
        v540 = v485;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467E800;
        v536 = (__int128)xmmword_22467E810;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 3, 5, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xAB000000EBLL), xmmword_22467E810);
      }
    }
    v329 = (v432 & 1) == 0 && ((v306 | v324) & 1) == 0;
    if (v329 && (v449 & 1) == 0)
    {
      v537 = v487;
      v538 = v488;
      v539 = v489;
      v536 = v486;
      v535 = v485;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467E820;
      v531 = xmmword_22467E830;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 3, 5, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0xAB000000EBLL), xmmword_22467E830);
    }
  }
  v330 = *((_DWORD *)v218 + 165);
  if (**(_BYTE **)v428)
  {
    v331 = *((_DWORD *)v218 + 229);
    v332 = *((_DWORD *)v218 + 173);
    v333 = *((_DWORD *)v218 + 237);
    v334 = *((_DWORD *)v218 + 181);
  }
  else
  {
    if ((v330 & 0x10000000) != 0)
      v335 = 0x40000000;
    else
      v335 = 0x80000000;
    if ((v330 & 0x20000000) != 0)
      v330 = v335;
    else
      v330 &= 0xCFFFFFFF;
    v336 = *((_DWORD *)v218 + 229);
    if ((v336 & 0x10000000) != 0)
      v337 = 0x40000000;
    else
      v337 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v331 = v337;
    else
      v331 = v336 & 0xCFFFFFFF;
    v338 = *((_DWORD *)v218 + 173);
    if ((v338 & 0x10000000) != 0)
      v339 = 0x40000000;
    else
      v339 = 0x80000000;
    if ((v338 & 0x20000000) != 0)
      v332 = v339;
    else
      v332 = v338 & 0xCFFFFFFF;
    v340 = *((_DWORD *)v218 + 237);
    if ((v340 & 0x10000000) != 0)
      v341 = 0x40000000;
    else
      v341 = 0x80000000;
    if ((v340 & 0x20000000) != 0)
      v333 = v341;
    else
      v333 = v340 & 0xCFFFFFFF;
    v342 = *((_DWORD *)v218 + 181);
    if ((v342 & 0x10000000) != 0)
      v334 = 0x40000000;
    else
      v334 = 0x80000000;
    if ((v342 & 0x20000000) == 0)
      v334 = v342 & 0xCFFFFFFF;
  }
  v343 = v332 >> 30;
  v459 = v331 >> 30;
  v441 = v330 >> 30;
  v445 = v334 >> 30;
  if ((v314 & 0x40000000) != 0)
  {
    v507 = v487;
    v508 = v488;
    v509 = v489;
    v506 = v486;
    v505 = v485;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467E840;
    v501 = (__int128)xmmword_22467E850;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 4, 5, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x12C000000ECLL), xmmword_22467E850);
    if ((v296 & 0x40000000) == 0)
    {
      v502 = v487;
      v503 = v488;
      v504 = v489;
      v501 = v486;
      v500 = v485;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467E860;
      v561 = (__int128)xmmword_22467E870;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 4, 5, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x12C000000ECLL), xmmword_22467E870);
      if (((v462 | v325) & 1) == 0)
      {
        v562 = v487;
        v563 = v488;
        v564 = v489;
        v560 = v485;
        v561 = v486;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467E880;
        v556 = (__int128)xmmword_22467E890;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 4, 5, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x12C000000ECLL), xmmword_22467E890);
        v344 = (v426 & 1) == 0 && ((v306 | v324) & 1) == 0;
        if ((v420 & 1) == 0 && v344)
        {
          v557 = v487;
          v558 = v488;
          v559 = v489;
          v556 = v486;
          v555 = v485;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467E8A0;
          v551 = (__int128)xmmword_22467E8B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 4, 5, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xAC000000ECLL), xmmword_22467E8B0);
        }
      }
      v345 = (v432 & 1) == 0 && ((v306 | v324) & 1) == 0;
      if (v345 && (v449 & 1) == 0)
      {
        v552 = v487;
        v553 = v488;
        v554 = v489;
        v551 = v486;
        v550 = v485;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467E8C0;
        v546 = (__int128)xmmword_22467E8D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 4, 5, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xAC000000ECLL), xmmword_22467E8D0);
      }
    }
    if (((v325 | v459) & 1) == 0)
    {
      v547 = v487;
      v548 = v488;
      v549 = v489;
      v546 = v486;
      v545 = v485;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467E8E0;
      v541 = (__int128)xmmword_22467E8F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 4, 5, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x12C000000ECLL), xmmword_22467E8F0);
      v346 = (v441 & 1) == 0 && ((v324 | v343) & 1) == 0;
      if ((v426 & 1) == 0 && v346)
      {
        v542 = v487;
        v543 = v488;
        v544 = v489;
        v541 = v486;
        v540 = v485;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467E900;
        v536 = (__int128)xmmword_22467E910;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 4, 5, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xAC000000ECLL), xmmword_22467E910);
      }
    }
    v347 = (v449 & 1) == 0 && ((v324 | v343) & 1) == 0;
    if (v347 && (v445 & 1) == 0)
    {
      v537 = v487;
      v538 = v488;
      v539 = v489;
      v536 = v486;
      v535 = v485;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467E920;
      v531 = xmmword_22467E930;
      *(_QWORD *)&v520 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 4, 5, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v520, COERCE_DOUBLE(0xAC000000ECLL), xmmword_22467E930);
    }
  }
  v348 = *((_DWORD *)v218 + 166);
  if (**(_BYTE **)v428)
  {
    v349 = *((_DWORD *)v218 + 230);
    v350 = *((_DWORD *)v218 + 174);
    v351 = *((_DWORD *)v218 + 238);
    v352 = *((_DWORD *)v218 + 182);
  }
  else
  {
    if ((v348 & 0x10000000) != 0)
      v353 = 0x40000000;
    else
      v353 = 0x80000000;
    if ((v348 & 0x20000000) != 0)
      v348 = v353;
    else
      v348 &= 0xCFFFFFFF;
    v354 = *((_DWORD *)v218 + 230);
    if ((v354 & 0x10000000) != 0)
      v355 = 0x40000000;
    else
      v355 = 0x80000000;
    if ((v354 & 0x20000000) != 0)
      v349 = v355;
    else
      v349 = v354 & 0xCFFFFFFF;
    v356 = *((_DWORD *)v218 + 174);
    if ((v356 & 0x10000000) != 0)
      v357 = 0x40000000;
    else
      v357 = 0x80000000;
    if ((v356 & 0x20000000) != 0)
      v350 = v357;
    else
      v350 = v356 & 0xCFFFFFFF;
    v358 = *((_DWORD *)v218 + 238);
    if ((v358 & 0x10000000) != 0)
      v359 = 0x40000000;
    else
      v359 = 0x80000000;
    if ((v358 & 0x20000000) != 0)
      v351 = v359;
    else
      v351 = v358 & 0xCFFFFFFF;
    v360 = *((_DWORD *)v218 + 182);
    if ((v360 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v360 & 0x20000000) == 0)
      v352 = v360 & 0xCFFFFFFF;
  }
  v454 = v350 >> 30;
  v437 = v348 >> 30;
  v463 = v349 >> 30;
  v361 = v352 >> 30;
  v522 = v487;
  v523 = v488;
  v524 = v489;
  v521 = v486;
  v520 = v485;
  if ((v333 & 0x40000000) != 0)
  {
    v507 = v487;
    v508 = v488;
    v509 = v489;
    v506 = v486;
    v505 = v485;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467E940;
    v501 = (__int128)xmmword_22467E950;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 5, 5, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x12D000000EDLL), xmmword_22467E950);
    if ((v314 & 0x40000000) == 0)
    {
      v502 = v487;
      v503 = v488;
      v504 = v489;
      v501 = v486;
      v500 = v485;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467E960;
      v561 = (__int128)xmmword_22467E970;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 5, 5, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x12D000000EDLL), xmmword_22467E970);
      if (((v325 | v459) & 1) == 0)
      {
        v562 = v487;
        v563 = v488;
        v564 = v489;
        v560 = v485;
        v561 = v486;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467E980;
        v556 = (__int128)xmmword_22467E990;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 5, 5, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x12D000000EDLL), xmmword_22467E990);
        v362 = (v441 & 1) == 0 && ((v324 | v343) & 1) == 0;
        if ((v426 & 1) == 0 && v362)
        {
          v557 = v487;
          v558 = v488;
          v559 = v489;
          v556 = v486;
          v555 = v485;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467E9A0;
          v551 = (__int128)xmmword_22467E9B0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 5, 5, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xAD000000EDLL), xmmword_22467E9B0);
        }
      }
      v363 = (v449 & 1) == 0 && ((v324 | v343) & 1) == 0;
      if (v363 && (v445 & 1) == 0)
      {
        v552 = v522;
        v553 = v523;
        v554 = v524;
        v551 = v521;
        v550 = v520;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467E9C0;
        v546 = (__int128)xmmword_22467E9D0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 5, 5, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xAD000000EDLL), xmmword_22467E9D0);
      }
    }
    if (((v459 | v463) & 1) == 0)
    {
      v547 = v522;
      v548 = v523;
      v549 = v524;
      v546 = v521;
      v545 = v520;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467E9E0;
      v541 = (__int128)xmmword_22467E9F0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 5, 5, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x12D000000EDLL), xmmword_22467E9F0);
      v364 = (v437 & 1) == 0 && ((v343 | v454) & 1) == 0;
      if ((v441 & 1) == 0 && v364)
      {
        v542 = v522;
        v543 = v523;
        v544 = v524;
        v541 = v521;
        v540 = v520;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467EA00;
        v536 = (__int128)xmmword_22467EA10;
        *(_QWORD *)&v525 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 5, 5, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)&v525, COERCE_DOUBLE(0xAD000000EDLL), xmmword_22467EA10);
      }
    }
    v365 = (v445 & 1) == 0 && ((v343 | v454) & 1) == 0;
    if (v365 && (v361 & 1) == 0)
    {
      v537 = v522;
      v538 = v523;
      v539 = v524;
      v536 = v521;
      v535 = v520;
      *(_QWORD *)&v525 = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467EA20;
      v531 = xmmword_22467EA30;
      *(_QWORD *)&v515 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 5, 5, 3, (uint64_t)&v525, (uint64_t)&v530, (uint64_t)&v515, COERCE_DOUBLE(0xAD000000EDLL), xmmword_22467EA30);
    }
  }
  v517 = v487;
  v518 = v488;
  v519 = v489;
  v516 = v486;
  v515 = v485;
  v366 = *((_DWORD *)v218 + 167);
  if (**(_BYTE **)v428)
  {
    v367 = *((_DWORD *)v218 + 231);
    v368 = *((_DWORD *)v218 + 175);
    v369 = *((_DWORD *)v218 + 239);
    v370 = *((_DWORD *)v218 + 183);
  }
  else
  {
    if ((v366 & 0x10000000) != 0)
      v371 = 0x40000000;
    else
      v371 = 0x80000000;
    if ((v366 & 0x20000000) != 0)
      v366 = v371;
    else
      v366 &= 0xCFFFFFFF;
    v372 = *((_DWORD *)v218 + 231);
    if ((v372 & 0x10000000) != 0)
      v373 = 0x40000000;
    else
      v373 = 0x80000000;
    if ((v372 & 0x20000000) != 0)
      v367 = v373;
    else
      v367 = v372 & 0xCFFFFFFF;
    v374 = *((_DWORD *)v218 + 175);
    if ((v374 & 0x10000000) != 0)
      v375 = 0x40000000;
    else
      v375 = 0x80000000;
    if ((v374 & 0x20000000) != 0)
      v368 = v375;
    else
      v368 = v374 & 0xCFFFFFFF;
    v376 = *((_DWORD *)v218 + 239);
    if ((v376 & 0x10000000) != 0)
      v377 = 0x40000000;
    else
      v377 = 0x80000000;
    if ((v376 & 0x20000000) != 0)
      v369 = v377;
    else
      v369 = v376 & 0xCFFFFFFF;
    v378 = *((_DWORD *)v218 + 183);
    if ((v378 & 0x10000000) != 0)
      v370 = 0x40000000;
    else
      v370 = 0x80000000;
    if ((v378 & 0x20000000) == 0)
      v370 = v378 & 0xCFFFFFFF;
  }
  v379 = v368 >> 30;
  v450 = v366 >> 30;
  v380 = v367 >> 30;
  v468 = v370 >> 30;
  v527 = v487;
  v528 = v488;
  v529 = v489;
  v526 = v486;
  v525 = v485;
  if ((v351 & 0x40000000) != 0)
  {
    v507 = v487;
    v508 = v488;
    v509 = v489;
    v506 = v486;
    v505 = v485;
    *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
    v500 = xmmword_22467EA40;
    v501 = (__int128)xmmword_22467EA50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 6, 5, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x12E000000EELL), xmmword_22467EA50);
    if ((v333 & 0x40000000) == 0)
    {
      v502 = v487;
      v503 = v488;
      v504 = v489;
      v501 = v486;
      v500 = v485;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467EA60;
      v561 = (__int128)xmmword_22467EA70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 6, 5, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x12E000000EELL), xmmword_22467EA70);
      if (((v459 | v463) & 1) == 0)
      {
        v562 = v487;
        v563 = v488;
        v564 = v489;
        v560 = v485;
        v561 = v486;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467EA80;
        v556 = (__int128)xmmword_22467EA90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 6, 5, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x12E000000EELL), xmmword_22467EA90);
        v381 = (v437 & 1) == 0 && ((v343 | v454) & 1) == 0;
        if ((v441 & 1) == 0 && v381)
        {
          v557 = v487;
          v558 = v488;
          v559 = v489;
          v556 = v486;
          v555 = v485;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467EAA0;
          v551 = (__int128)xmmword_22467EAB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 6, 5, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xAE000000EELL), xmmword_22467EAB0);
        }
      }
      v382 = (v445 & 1) == 0 && ((v343 | v454) & 1) == 0;
      if (v382 && (v361 & 1) == 0)
      {
        v552 = v527;
        v553 = v528;
        v554 = v529;
        v551 = v526;
        v550 = v525;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_22467EAC0;
        v546 = (__int128)xmmword_22467EAD0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 6, 5, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xAE000000EELL), xmmword_22467EAD0);
      }
    }
    if (((v463 | v380) & 1) == 0)
    {
      v547 = v527;
      v548 = v528;
      v549 = v529;
      v546 = v526;
      v545 = v525;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_22467EAE0;
      v541 = (__int128)xmmword_22467EAF0;
      *(_QWORD *)&v530 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 6, 5, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0x12E000000EELL), xmmword_22467EAF0);
      v383 = (v450 & 1) == 0 && ((v454 | v379) & 1) == 0;
      if ((v437 & 1) == 0 && v383)
      {
        v542 = v527;
        v543 = v528;
        v544 = v529;
        v541 = v526;
        v540 = v525;
        *(_QWORD *)&v530 = 0xD0D0D0D0D0D0D0DLL;
        v535 = xmmword_22467EB00;
        v536 = (__int128)xmmword_22467EB10;
        *(_QWORD *)&v566[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 6, 5, 3, (uint64_t)&v530, (uint64_t)&v535, (uint64_t)v566, COERCE_DOUBLE(0xAE000000EELL), xmmword_22467EB10);
      }
    }
    v384 = (v361 & 1) == 0 && ((v454 | v379) & 1) == 0;
    if (v384 && (v468 & 1) == 0)
    {
      v537 = v527;
      v538 = v528;
      v539 = v529;
      v536 = v526;
      v535 = v525;
      *(_QWORD *)&v566[0] = 0xD0D0D0D0D0D0D0DLL;
      v530 = xmmword_22467EB20;
      v531 = xmmword_22467EB30;
      v567[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 6, 5, 3, (uint64_t)v566, (uint64_t)&v530, (uint64_t)v567, COERCE_DOUBLE(0xAE000000EELL), xmmword_22467EB30);
    }
  }
  v385 = *(unsigned int *)(v472 + 88);
  if ((v385 & 0x80000000) != 0)
  {
    v388 = *v465;
    v389 = *(_DWORD *)(v474 + 920);
    v390 = **v465;
    if (**v465)
      goto LABEL_1060;
  }
  else
  {
    v386 = *(_QWORD *)(v474 + 2328);
    if (v385 >= (*(_QWORD *)(v474 + 2336) - v386) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v386 = *(_QWORD *)(v474 + 2328);
    }
    v387 = v386 + (v385 << 11);
    v388 = *v465;
    v389 = *(_DWORD *)(v387 + 640);
    v390 = **v465;
    if (**v465)
    {
LABEL_1060:
      v391 = *(unsigned int *)(v472 + 88);
      if ((v391 & 0x80000000) == 0)
        goto LABEL_1061;
LABEL_1080:
      v393 = *(_DWORD *)(v474 + 1176);
      if (v390)
        goto LABEL_1065;
      goto LABEL_1081;
    }
  }
  if ((v389 & 0x10000000) != 0)
    v398 = 0x40000000;
  else
    v398 = 0x80000000;
  if ((v389 & 0x20000000) != 0)
    v389 = v398;
  else
    v389 &= 0xCFFFFFFF;
  v391 = *(unsigned int *)(v472 + 88);
  if ((v391 & 0x80000000) != 0)
    goto LABEL_1080;
LABEL_1061:
  v392 = *(_QWORD *)(v474 + 2328);
  if (v391 >= (*(_QWORD *)(v474 + 2336) - v392) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v392 = *(_QWORD *)(v474 + 2328);
    v388 = *v465;
    v390 = **v465;
  }
  v393 = *(_DWORD *)(v392 + (v391 << 11) + 896);
  if (v390)
  {
LABEL_1065:
    v394 = *(unsigned int *)(v472 + 88);
    if ((v394 & 0x80000000) == 0)
      goto LABEL_1066;
LABEL_1088:
    v396 = *(_DWORD *)(v474 + 952);
    if (v390)
      goto LABEL_1070;
    goto LABEL_1089;
  }
LABEL_1081:
  if ((v393 & 0x10000000) != 0)
    v399 = 0x40000000;
  else
    v399 = 0x80000000;
  if ((v393 & 0x20000000) != 0)
    v393 = v399;
  else
    v393 &= 0xCFFFFFFF;
  v394 = *(unsigned int *)(v472 + 88);
  if ((v394 & 0x80000000) != 0)
    goto LABEL_1088;
LABEL_1066:
  v395 = *(_QWORD *)(v474 + 2328);
  if (v394 >= (*(_QWORD *)(v474 + 2336) - v395) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v395 = *(_QWORD *)(v474 + 2328);
    v388 = *v465;
    v390 = **v465;
  }
  v396 = *(_DWORD *)(v395 + (v394 << 11) + 672);
  if (v390)
  {
LABEL_1070:
    v397 = *(unsigned int *)(v472 + 88);
    if ((v397 & 0x80000000) != 0)
      goto LABEL_1139;
    goto LABEL_1096;
  }
LABEL_1089:
  if ((v396 & 0x10000000) != 0)
    v400 = 0x40000000;
  else
    v400 = 0x80000000;
  if ((v396 & 0x20000000) != 0)
    v396 = v400;
  else
    v396 &= 0xCFFFFFFF;
  v397 = *(unsigned int *)(v472 + 88);
  if ((v397 & 0x80000000) != 0)
    goto LABEL_1139;
LABEL_1096:
  v401 = *(_QWORD *)(v474 + 2328);
  v402 = (*(_QWORD *)(v474 + 2336) - v401) >> 11;
  if (v402 > v397)
    goto LABEL_1100;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v388 = *v465;
  v397 = *(unsigned int *)(v472 + 88);
  if ((v397 & 0x80000000) != 0)
  {
LABEL_1139:
    v403 = *(_DWORD *)(v474 + 984);
    if (*v388)
      goto LABEL_1110;
    goto LABEL_1104;
  }
  v401 = *(_QWORD *)(v474 + 2328);
  v402 = (*(_QWORD *)(v474 + 2336) - v401) >> 11;
LABEL_1100:
  if (v402 <= v397)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v401 = *(_QWORD *)(v474 + 2328);
    v388 = *v465;
  }
  v403 = *(_DWORD *)(v401 + (v397 << 11) + 704);
  if (!*v388)
  {
LABEL_1104:
    if ((v403 & 0x10000000) != 0)
      v404 = 0x40000000;
    else
      v404 = 0x80000000;
    if ((v403 & 0x20000000) != 0)
      v403 = v404;
    else
      v403 &= 0xCFFFFFFF;
  }
LABEL_1110:
  v532 = v517;
  v533 = v518;
  v534 = v519;
  v531 = (float32x4_t)v516;
  v530 = v515;
  if ((v369 & 0x40000000) != 0)
  {
    v507 = v517;
    v508 = v518;
    v509 = v519;
    v506 = v516;
    v505 = v515;
    *(_QWORD *)&v560 = 0x161616160D0D0D0DLL;
    v500 = xmmword_22467EB40;
    v501 = (__int128)xmmword_22467EB50;
    *(_QWORD *)&v555 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v505, 7, 5, 3, (uint64_t)&v560, (uint64_t)&v500, (uint64_t)&v555, COERCE_DOUBLE(0x12F000000EFLL), xmmword_22467EB50);
    if ((v351 & 0x40000000) == 0)
    {
      v502 = v517;
      v503 = v518;
      v504 = v519;
      v501 = v516;
      v500 = v515;
      *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
      v560 = xmmword_22467EB60;
      v561 = (__int128)xmmword_22467EB70;
      *(_QWORD *)&v550 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v500, 7, 5, 3, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0x12F000000EFLL), xmmword_22467EB70);
      if (((v463 | v380) & 1) == 0)
      {
        v562 = v517;
        v563 = v518;
        v564 = v519;
        v560 = v515;
        v561 = v516;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_22467EB80;
        v556 = (__int128)xmmword_22467EB90;
        *(_QWORD *)&v545 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v560, 7, 5, 3, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0x12F000000EFLL), xmmword_22467EB90);
        v405 = (v450 & 1) == 0 && ((v454 | v379) & 1) == 0;
        if ((v437 & 1) == 0 && v405)
        {
          v557 = v517;
          v558 = v518;
          v559 = v519;
          v556 = v516;
          v555 = v515;
          *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
          v550 = xmmword_22467EBA0;
          v551 = (__int128)xmmword_22467EBB0;
          *(_QWORD *)&v540 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v555, 7, 5, 3, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0xAF000000EFLL), xmmword_22467EBB0);
        }
      }
      v406 = (v361 & 1) == 0 && ((v454 | v379) & 1) == 0;
      if (v406 && (v468 & 1) == 0)
      {
        v552 = v532;
        v553 = v533;
        v554 = v534;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v551 = (__int128)v531;
        v550 = v530;
        v545 = xmmword_22467EBC0;
        v546 = (__int128)xmmword_22467EBD0;
        *(_QWORD *)&v535 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v550, 7, 5, 3, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xAF000000EFLL), xmmword_22467EBD0);
      }
    }
    v407 = (v396 & 0x40000000 | v379 & 1) == 0;
    if (!(v393 & 0x40000000 | v380 & 1))
    {
      v547 = v532;
      v548 = v533;
      v549 = v534;
      *(_QWORD *)&v535 = 0x16160D0D16160D0DLL;
      v546 = (__int128)v531;
      v545 = v530;
      v540 = xmmword_22467EBE0;
      v541 = (__int128)xmmword_22467EBF0;
      *(_QWORD *)&v566[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v545, 7, 5, 3, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)v566, COERCE_DOUBLE(0x12F000000EFLL), xmmword_22467EBF0);
      v408 = (v389 & 0x40000000) == 0 && v407;
      if ((v450 & 1) == 0 && v408)
      {
        v542 = v532;
        v543 = v533;
        v544 = v534;
        *(_QWORD *)&v566[0] = 0x161616160D0D0D0DLL;
        v541 = (__int128)v531;
        v540 = v530;
        v535 = xmmword_22467EC00;
        v536 = (__int128)xmmword_22467EC10;
        v567[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v540, 7, 5, 3, (uint64_t)v566, (uint64_t)&v535, (uint64_t)v567, COERCE_DOUBLE(0xAF000000EFLL), xmmword_22467EC10);
      }
    }
    v409 = (v468 & 1) == 0 && v407;
    if (v409 && (v403 & 0x40000000) == 0)
    {
      v537 = v532;
      v538 = v533;
      v539 = v534;
      v567[0] = 0x16160D0D16160D0DLL;
      v536 = (__int128)v531;
      v535 = v530;
      v566[0] = xmmword_22467EC20;
      v566[1] = xmmword_22467EC30;
      v565 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v535, 7, 5, 3, (uint64_t)v567, (uint64_t)v566, (uint64_t)&v565, COERCE_DOUBLE(0xAF000000EFLL), xmmword_22467EC30);
    }
  }
  v500 = v428;
  *(_QWORD *)&v501 = v218;
  *(_QWORD *)&v560 = v474;
  *((_QWORD *)&v560 + 1) = v472;
  *(_QWORD *)&v561 = v465;
  v509 = v479;
  v508 = v478;
  v507 = v477;
  v505 = v475;
  v506 = v476;
  return sub_223DF2CB0((unsigned __int8 ***)&v500, &v560, &v505);
}

unint64_t sub_223DF2CB0(unsigned __int8 ***a1, _QWORD *a2, __int128 *a3)
{
  _QWORD *v4;
  unsigned __int8 **v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  _BYTE **v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  _BYTE **v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  _BYTE **v40;
  unint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  _BYTE **v50;
  unint64_t v51;
  uint64_t v52;
  unsigned int v53;
  __int128 *v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  _QWORD *v58;
  uint64_t v59;
  _BYTE **v60;
  _QWORD *v61;
  unint64_t v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  unsigned int v66;
  _QWORD *v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  __int128 v88;
  __int128 v89;
  _BOOL4 v90;
  _BOOL4 v91;
  _BOOL4 v92;
  _BOOL4 v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  _BOOL4 v108;
  _BOOL4 v109;
  _BOOL4 v110;
  _BOOL4 v111;
  _BOOL4 v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  _BOOL4 v128;
  _BOOL4 v129;
  _BOOL4 v130;
  _BOOL4 v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  _BOOL4 v146;
  _BOOL4 v147;
  _BOOL4 v148;
  _BOOL4 v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  _BOOL4 v164;
  _BOOL4 v165;
  _BOOL4 v166;
  _BOOL4 v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  int v180;
  _BOOL4 v181;
  _BOOL4 v182;
  _BOOL4 v183;
  _BOOL4 v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  _BOOL4 v200;
  _BOOL4 v201;
  _BOOL4 v202;
  _BOOL4 v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _BYTE *v207;
  unsigned int v208;
  int v209;
  unint64_t v210;
  uint64_t v211;
  unsigned int v212;
  unint64_t v213;
  uint64_t v214;
  unsigned int v215;
  unint64_t v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  uint64_t v220;
  unint64_t v221;
  unsigned int v222;
  unsigned int v223;
  _BOOL4 v224;
  _BOOL4 v225;
  _BOOL4 v226;
  _BOOL4 v227;
  unsigned __int8 **v228;
  uint64_t v229;
  unsigned int v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _BYTE *v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  unsigned int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unint64_t v249;
  uint64_t v250;
  unsigned int v251;
  unint64_t v252;
  uint64_t v253;
  unsigned int v254;
  unint64_t v255;
  uint64_t v256;
  unsigned int v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unint64_t v270;
  uint64_t v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  _BOOL4 v278;
  _BOOL4 v279;
  _BOOL4 v280;
  _BOOL4 v281;
  _BOOL4 v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unint64_t v286;
  uint64_t v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  _BOOL4 v291;
  _BOOL4 v292;
  _BOOL4 v293;
  _BOOL4 v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unint64_t v298;
  uint64_t v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  _BOOL4 v304;
  _BOOL4 v305;
  _BOOL4 v306;
  _BOOL4 v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unint64_t v311;
  uint64_t v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  _BOOL4 v317;
  _BOOL4 v318;
  _BOOL4 v319;
  _BOOL4 v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unint64_t v324;
  uint64_t v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  _BOOL4 v329;
  _BOOL4 v330;
  _BOOL4 v331;
  _BOOL4 v332;
  _BOOL4 v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unint64_t v337;
  uint64_t v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  _BOOL4 v342;
  _BOOL4 v343;
  _BOOL4 v344;
  _BOOL4 v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unint64_t v350;
  uint64_t v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  _BOOL4 v356;
  _BOOL4 v357;
  _BOOL4 v358;
  _BOOL4 v359;
  unint64_t v360;
  uint64_t v361;
  uint64_t v362;
  _BYTE *v363;
  unsigned int v364;
  int v365;
  unint64_t v366;
  uint64_t v367;
  unsigned int v368;
  unint64_t v369;
  uint64_t v370;
  unsigned int v371;
  unint64_t v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  int v414;
  unsigned int v415;
  int v416;
  unsigned int v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  int v422;
  unsigned int v423;
  int v424;
  unsigned int v425;
  int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  unint64_t v431;
  uint64_t v432;
  unsigned int v433;
  unsigned int v434;
  _BOOL4 v435;
  _BOOL4 v436;
  _BOOL4 v437;
  _BOOL4 v438;
  _BOOL4 v439;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  uint64_t *v451;
  __int128 v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  uint64_t v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned __int8 **v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  uint64_t v498;
  _BYTE **v499;
  unsigned int v500;
  _BYTE **v501;
  unsigned int v502;
  unsigned int v503;
  unsigned __int8 **v504;
  uint64_t v505;
  unsigned int v506;
  unsigned int *v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  float32x4_t v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  __int128 v578;
  __int128 v579;
  __int128 v580;
  __int128 v581;
  __int128 v582;
  __int128 v583;
  __int128 v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  __int128 v591;
  __int128 v592;
  __int128 v593;
  __int128 v594;
  __int128 v595;
  __int128 v596;
  __int128 v597;
  uint64_t v598;
  _OWORD v599[2];
  _QWORD v600[3];

  v4 = a2;
  v600[1] = *MEMORY[0x24BDAC8D0];
  v5 = a1[2];
  v501 = *a1;
  v6 = *((_DWORD *)v5 + 168);
  v7 = ***a1;
  if (***a1)
  {
    v8 = *((_DWORD *)v5 + 232);
    v9 = *((_DWORD *)v5 + 176);
    v10 = *((_DWORD *)v5 + 240);
    v11 = *((_DWORD *)v5 + 184);
    v505 = *a2;
    v487 = v10;
    if ((v10 & 0x40000000) == 0)
    {
LABEL_3:
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      goto LABEL_91;
    }
  }
  else
  {
    if ((v6 & 0x20000000) != 0)
      v6 *= 4;
    v17 = *((_DWORD *)v5 + 232);
    if ((v17 & 0x20000000) != 0)
      v8 = 4 * v17;
    else
      v8 = *((_DWORD *)v5 + 232);
    v18 = *((_DWORD *)v5 + 176);
    if ((v18 & 0x20000000) != 0)
      v9 = 4 * v18;
    else
      v9 = *((_DWORD *)v5 + 176);
    v19 = *((_DWORD *)v5 + 240);
    if ((v19 & 0x20000000) != 0)
      v10 = 4 * v19;
    else
      v10 = *((_DWORD *)v5 + 240);
    v20 = *((_DWORD *)v5 + 184);
    if ((v20 & 0x10000000) != 0)
      v21 = 0x40000000;
    else
      v21 = 0x80000000;
    if ((v20 & 0x20000000) != 0)
      v11 = v21;
    else
      v11 = v20 & 0xCFFFFFFF;
    v505 = *a2;
    v487 = v10;
    if ((v10 & 0x40000000) == 0)
      goto LABEL_3;
  }
  v22 = (_BYTE **)a2[2];
  v23 = *(unsigned int *)(a2[1] + 16);
  v502 = v8;
  if ((v23 & 0x80000000) != 0)
  {
    v25 = v505 + 280;
  }
  else
  {
    v24 = *(_QWORD *)(v505 + 2328);
    if (v23 >= (*(_QWORD *)(v505 + 2336) - v24) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v24 = *(_QWORD *)(v505 + 2328);
      v10 = v487;
      v8 = v502;
    }
    v25 = v24 + (v23 << 11);
  }
  v26 = *(_DWORD *)(v25 + 700);
  v27 = v26 & 0xCFFFFFFF;
  if ((v26 & 0x10000000) != 0)
    v28 = 0x40000000;
  else
    v28 = 0x80000000;
  if ((v26 & 0x20000000) != 0)
    v27 = v28;
  if (**v22)
    v29 = v26;
  else
    v29 = v27;
  v30 = *v4;
  v31 = (_BYTE **)v4[2];
  v32 = *(unsigned int *)(v4[1] + 16);
  if ((v32 & 0x80000000) != 0)
  {
    v34 = v30 + 280;
  }
  else
  {
    v33 = *(_QWORD *)(v30 + 2328);
    if (v32 >= (*(_QWORD *)(v30 + 2336) - v33) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v33 = *(_QWORD *)(v30 + 2328);
      v10 = v487;
      v8 = v502;
    }
    v34 = v33 + (v32 << 11);
  }
  v35 = *(_DWORD *)(v34 + 956);
  v36 = v35 & 0xCFFFFFFF;
  if ((v35 & 0x10000000) != 0)
    v37 = 0x40000000;
  else
    v37 = 0x80000000;
  if ((v35 & 0x20000000) != 0)
    v36 = v37;
  if (**v31)
    v38 = v35;
  else
    v38 = v36;
  v39 = *v4;
  v40 = (_BYTE **)v4[2];
  v41 = *(unsigned int *)(v4[1] + 16);
  v506 = v29;
  if ((v41 & 0x80000000) != 0)
  {
    v44 = v39 + 280;
  }
  else
  {
    v42 = *(_QWORD *)(v39 + 2328);
    if (v41 >= (*(_QWORD *)(v39 + 2336) - v42) >> 11)
    {
      v43 = v38;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v42 = *(_QWORD *)(v39 + 2328);
      v10 = v487;
      v8 = v502;
      v38 = v43;
    }
    v44 = v42 + (v41 << 11);
  }
  v45 = *(_DWORD *)(v44 + 732);
  v46 = v45 & 0xCFFFFFFF;
  if ((v45 & 0x10000000) != 0)
    v47 = 0x40000000;
  else
    v47 = 0x80000000;
  if ((v45 & 0x20000000) != 0)
    v46 = v47;
  if (**v40)
    v48 = v45;
  else
    v48 = v46;
  v49 = *v4;
  v50 = (_BYTE **)v4[2];
  v51 = *(unsigned int *)(v4[1] + 16);
  if ((v51 & 0x80000000) != 0)
  {
    v54 = a3;
    v55 = v11;
    v56 = v9;
    v57 = *(_DWORD *)(v49 + 1268);
    if (**v50)
      goto LABEL_69;
  }
  else
  {
    v52 = *(_QWORD *)(v49 + 2328);
    if (v51 >= (*(_QWORD *)(v49 + 2336) - v52) >> 11)
    {
      v53 = v38;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1240;
      }
      v52 = *(_QWORD *)(v49 + 2328);
      v10 = v487;
      v8 = v502;
      v38 = v53;
    }
    v54 = a3;
    v55 = v11;
    v56 = v9;
    v57 = *(_DWORD *)(v52 + (v51 << 11) + 988);
    if (**v50)
    {
LABEL_69:
      v58 = v4;
      v59 = *v4;
      v60 = (_BYTE **)v58[2];
      v61 = v58;
      v62 = *(unsigned int *)(v58[1] + 16);
      if ((v62 & 0x80000000) == 0)
        goto LABEL_70;
LABEL_82:
      v65 = v59 + 280;
      goto LABEL_83;
    }
  }
  if ((v57 & 0x10000000) != 0)
    v66 = 0x40000000;
  else
    v66 = 0x80000000;
  if ((v57 & 0x20000000) != 0)
    v57 = v66;
  else
    v57 &= 0xCFFFFFFF;
  v67 = v4;
  v59 = *v4;
  v60 = (_BYTE **)v67[2];
  v61 = v67;
  v62 = *(unsigned int *)(v67[1] + 16);
  if ((v62 & 0x80000000) != 0)
    goto LABEL_82;
LABEL_70:
  v63 = *(_QWORD *)(v59 + 2328);
  if (v62 >= (*(_QWORD *)(v59 + 2336) - v63) >> 11)
  {
    v497 = v48;
    v64 = v38;
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      v63 = *(_QWORD *)(v59 + 2328);
      v10 = v487;
      v8 = v502;
      v38 = v64;
      v48 = v497;
      goto LABEL_73;
    }
LABEL_1240:
    abort();
  }
LABEL_73:
  v65 = v63 + (v62 << 11);
LABEL_83:
  v16 = (v506 >> 30) & 1;
  v15 = (v38 >> 30) & 1;
  v14 = (v48 >> 30) & 1;
  v13 = (v57 >> 30) & 1;
  v68 = *(_DWORD *)(v65 + 764);
  v4 = v61;
  if (!**v60)
  {
    if ((v68 & 0x10000000) != 0)
      v69 = 0x40000000;
    else
      v69 = 0x80000000;
    if ((v68 & 0x20000000) != 0)
      v68 = v69;
    else
      v68 &= 0xCFFFFFFF;
  }
  v12 = (v68 >> 30) & 1;
  v5 = a1[2];
  v501 = *a1;
  v505 = *v61;
  v7 = ***a1;
  v9 = v56;
  v11 = v55;
  a3 = v54;
LABEL_91:
  v461 = v6 >> 30;
  v493 = (unsigned __int8 **)v4[2];
  v498 = v4[1];
  v515 = a3[2];
  v516 = a3[3];
  v517 = a3[4];
  v513 = *a3;
  v514 = a3[1];
  v70 = *((_DWORD *)v5 + 169);
  v451 = v4;
  if (v7)
  {
    v71 = *((_DWORD *)v5 + 233);
    v72 = *((_DWORD *)v5 + 177);
    v481 = *((_DWORD *)v5 + 241);
    v73 = *((_DWORD *)v5 + 185);
  }
  else
  {
    if ((v70 & 0x10000000) != 0)
      v74 = 0x40000000;
    else
      v74 = 0x80000000;
    if ((v70 & 0x20000000) != 0)
      v70 = v74;
    else
      v70 &= 0xCFFFFFFF;
    v75 = *((_DWORD *)v5 + 233);
    if ((v75 & 0x10000000) != 0)
      v76 = 0x40000000;
    else
      v76 = 0x80000000;
    if ((v75 & 0x20000000) != 0)
      v71 = v76;
    else
      v71 = v75 & 0xCFFFFFFF;
    v77 = *((_DWORD *)v5 + 177);
    if ((v77 & 0x10000000) != 0)
      v78 = 0x40000000;
    else
      v78 = 0x80000000;
    if ((v77 & 0x20000000) != 0)
      v72 = v78;
    else
      v72 = v77 & 0xCFFFFFFF;
    v79 = *((_DWORD *)v5 + 241);
    if ((v79 & 0x10000000) != 0)
      v80 = 0x40000000;
    else
      v80 = 0x80000000;
    if ((v79 & 0x20000000) != 0)
      v81 = v80;
    else
      v81 = v79 & 0xCFFFFFFF;
    v481 = v81;
    v82 = *((_DWORD *)v5 + 185);
    if ((v82 & 0x10000000) != 0)
      v73 = 0x40000000;
    else
      v73 = 0x80000000;
    if ((v82 & 0x20000000) == 0)
      v73 = v82 & 0xCFFFFFFF;
  }
  v83 = v9 >> 30;
  v84 = v8 >> 30;
  v85 = v11 >> 30;
  v447 = v70 >> 30;
  v471 = v72 >> 30;
  v476 = v71 >> 30;
  v453 = v73 >> 30;
  v525 = a3[2];
  v526 = a3[3];
  v527 = a3[4];
  v523 = *a3;
  v524 = a3[1];
  if ((v10 & 0x40000000) != 0)
  {
    v86 = v15;
    v87 = v16;
    v88 = a3[3];
    v540 = a3[2];
    v541 = v88;
    v542 = a3[4];
    v89 = *a3;
    v539 = a3[1];
    v538 = v89;
    *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
    v533 = xmmword_22467EC40;
    v534 = (__int128)xmmword_22467EC50;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 0, 6, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x130000000F0), xmmword_22467EC50);
    if (!v13)
    {
      v535 = v525;
      v536 = v526;
      v537 = v527;
      v534 = v524;
      v533 = v523;
      *(_QWORD *)&v588 = 0x4040D0D04040D0DLL;
      v593 = xmmword_22467EC60;
      v594 = (__int128)xmmword_22467EC70;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 0, 6, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x130000000F0), xmmword_22467EC70);
      if (!(v86 | v84 & 1))
      {
        v595 = v525;
        v596 = v526;
        v597 = v527;
        *(_QWORD *)&v583 = 0x40404040D0D0D0DLL;
        v593 = v523;
        v594 = v524;
        v588 = xmmword_22467EC80;
        v589 = (__int128)xmmword_22467EC90;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 0, 6, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x130000000F0), xmmword_22467EC90);
        v90 = (v461 & 1) == 0 && (v14 | v83 & 1) == 0;
        if (!v87 && v90)
        {
          v590 = v525;
          v591 = v526;
          v592 = v527;
          v589 = v524;
          v588 = v523;
          *(_QWORD *)&v578 = 0x4040D0D04040D0DLL;
          v583 = xmmword_22467ECA0;
          v584 = (__int128)xmmword_22467ECB0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 0, 6, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xB0000000F0), xmmword_22467ECB0);
        }
      }
      if (v12)
        v91 = 0;
      else
        v91 = (v14 | v83 & 1) == 0;
      if (v91 && (v85 & 1) == 0)
      {
        v585 = v525;
        v586 = v526;
        v587 = v527;
        *(_QWORD *)&v573 = 0x40404040D0D0D0DLL;
        v584 = v524;
        v583 = v523;
        v578 = xmmword_22467ECC0;
        v579 = (__int128)xmmword_22467ECD0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 0, 6, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xB0000000F0), xmmword_22467ECD0);
      }
    }
    if (((v84 | v476) & 1) == 0)
    {
      v580 = v525;
      v581 = v526;
      v582 = v527;
      v579 = v524;
      v578 = v523;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467ECE0;
      v574 = (__int128)xmmword_22467ECF0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 0, 6, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x130000000F0), xmmword_22467ECF0);
      v92 = (v447 & 1) == 0 && ((v83 | v471) & 1) == 0;
      if ((v461 & 1) == 0 && v92)
      {
        v575 = v525;
        v576 = v526;
        v577 = v527;
        v574 = v524;
        v573 = v523;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467ED00;
        v569 = (__int128)xmmword_22467ED10;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 0, 6, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xB0000000F0), xmmword_22467ED10);
      }
    }
    v93 = (v85 & 1) == 0 && ((v83 | v471) & 1) == 0;
    v10 = v487;
    if (v93 && (v453 & 1) == 0)
    {
      v570 = v525;
      v571 = v526;
      v572 = v527;
      v569 = v524;
      v568 = v523;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467ED20;
      v564 = xmmword_22467ED30;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 0, 6, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0xB0000000F0), xmmword_22467ED30);
      v10 = v487;
    }
  }
  v94 = *((_DWORD *)v5 + 170);
  if (**v501)
  {
    v95 = *((_DWORD *)v5 + 234);
    v96 = *((_DWORD *)v5 + 178);
    v97 = *((_DWORD *)v5 + 242);
    v98 = *((_DWORD *)v5 + 186);
  }
  else
  {
    if ((v94 & 0x10000000) != 0)
      v99 = 0x40000000;
    else
      v99 = 0x80000000;
    if ((v94 & 0x20000000) != 0)
      v94 = v99;
    else
      v94 &= 0xCFFFFFFF;
    v100 = *((_DWORD *)v5 + 234);
    if ((v100 & 0x10000000) != 0)
      v101 = 0x40000000;
    else
      v101 = 0x80000000;
    if ((v100 & 0x20000000) != 0)
      v95 = v101;
    else
      v95 = v100 & 0xCFFFFFFF;
    v102 = *((_DWORD *)v5 + 178);
    if ((v102 & 0x10000000) != 0)
      v103 = 0x40000000;
    else
      v103 = 0x80000000;
    if ((v102 & 0x20000000) != 0)
      v96 = v103;
    else
      v96 = v102 & 0xCFFFFFFF;
    v104 = *((_DWORD *)v5 + 242);
    if ((v104 & 0x10000000) != 0)
      v105 = 0x40000000;
    else
      v105 = 0x80000000;
    if ((v104 & 0x20000000) != 0)
      v97 = v105;
    else
      v97 = v104 & 0xCFFFFFFF;
    v106 = *((_DWORD *)v5 + 186);
    if ((v106 & 0x10000000) != 0)
      v98 = 0x40000000;
    else
      v98 = 0x80000000;
    if ((v106 & 0x20000000) == 0)
      v98 = v106 & 0xCFFFFFFF;
  }
  v467 = v96 >> 30;
  v444 = v94 >> 30;
  v488 = v95 >> 30;
  v107 = v98 >> 30;
  if ((v481 & 0x40000000) != 0)
  {
    v108 = (v10 & 0x40000000) == 0;
    v540 = v515;
    v541 = v516;
    v542 = v517;
    v539 = v514;
    v538 = v513;
    *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
    v533 = xmmword_22467ED40;
    v534 = (__int128)xmmword_22467ED50;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 1, 6, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x131000000F1), xmmword_22467ED50);
    if (v108)
    {
      v535 = v515;
      v536 = v516;
      v537 = v517;
      v534 = v514;
      v533 = v513;
      *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
      v593 = xmmword_22467ED60;
      v594 = (__int128)xmmword_22467ED70;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 1, 6, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x131000000F1), xmmword_22467ED70);
      if (((v84 | v476) & 1) == 0)
      {
        v595 = v515;
        v596 = v516;
        v597 = v517;
        v593 = v513;
        v594 = v514;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467ED80;
        v589 = (__int128)xmmword_22467ED90;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 1, 6, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x131000000F1), xmmword_22467ED90);
        v109 = (v447 & 1) == 0 && ((v83 | v471) & 1) == 0;
        if ((v461 & 1) == 0 && v109)
        {
          v590 = v515;
          v591 = v516;
          v592 = v517;
          v589 = v514;
          v588 = v513;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467EDA0;
          v584 = (__int128)xmmword_22467EDB0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 1, 6, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xB1000000F1), xmmword_22467EDB0);
        }
      }
      v110 = (v85 & 1) == 0 && ((v83 | v471) & 1) == 0;
      if (v110 && (v453 & 1) == 0)
      {
        v585 = v515;
        v586 = v516;
        v587 = v517;
        v584 = v514;
        v583 = v513;
        *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
        v578 = xmmword_22467EDC0;
        v579 = (__int128)xmmword_22467EDD0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 1, 6, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xB1000000F1), xmmword_22467EDD0);
      }
    }
    if (((v476 | v488) & 1) == 0)
    {
      v580 = v515;
      v581 = v516;
      v582 = v517;
      v579 = v514;
      v578 = v513;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467EDE0;
      v574 = (__int128)xmmword_22467EDF0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 1, 6, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x131000000F1), xmmword_22467EDF0);
      v111 = (v444 & 1) == 0 && ((v471 | v467) & 1) == 0;
      if ((v447 & 1) == 0 && v111)
      {
        v575 = v515;
        v576 = v516;
        v577 = v517;
        v574 = v514;
        v573 = v513;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467EE00;
        v569 = (__int128)xmmword_22467EE10;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 1, 6, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xB1000000F1), xmmword_22467EE10);
      }
    }
    v112 = (v453 & 1) == 0 && ((v471 | v467) & 1) == 0;
    if (v112 && (v107 & 1) == 0)
    {
      v570 = v515;
      v571 = v516;
      v572 = v517;
      v569 = v514;
      v568 = v513;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467EE20;
      v564 = xmmword_22467EE30;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 1, 6, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0xB1000000F1), xmmword_22467EE30);
    }
  }
  v113 = *((_DWORD *)v5 + 171);
  if (**v501)
  {
    v114 = *((_DWORD *)v5 + 235);
    v115 = *((_DWORD *)v5 + 179);
    v116 = *((_DWORD *)v5 + 243);
    v117 = *((_DWORD *)v5 + 187);
  }
  else
  {
    if ((v113 & 0x10000000) != 0)
      v118 = 0x40000000;
    else
      v118 = 0x80000000;
    if ((v113 & 0x20000000) != 0)
      v113 = v118;
    else
      v113 &= 0xCFFFFFFF;
    v119 = *((_DWORD *)v5 + 235);
    if ((v119 & 0x10000000) != 0)
      v120 = 0x40000000;
    else
      v120 = 0x80000000;
    if ((v119 & 0x20000000) != 0)
      v114 = v120;
    else
      v114 = v119 & 0xCFFFFFFF;
    v121 = *((_DWORD *)v5 + 179);
    if ((v121 & 0x10000000) != 0)
      v122 = 0x40000000;
    else
      v122 = 0x80000000;
    if ((v121 & 0x20000000) != 0)
      v115 = v122;
    else
      v115 = v121 & 0xCFFFFFFF;
    v123 = *((_DWORD *)v5 + 243);
    if ((v123 & 0x10000000) != 0)
      v124 = 0x40000000;
    else
      v124 = 0x80000000;
    if ((v123 & 0x20000000) != 0)
      v116 = v124;
    else
      v116 = v123 & 0xCFFFFFFF;
    v125 = *((_DWORD *)v5 + 187);
    if ((v125 & 0x10000000) != 0)
      v117 = 0x40000000;
    else
      v117 = 0x80000000;
    if ((v125 & 0x20000000) == 0)
      v117 = v125 & 0xCFFFFFFF;
  }
  v126 = v115 >> 30;
  v441 = v113 >> 30;
  v462 = v114 >> 30;
  v127 = v117 >> 30;
  if ((v97 & 0x40000000) != 0)
  {
    v540 = v515;
    v541 = v516;
    v542 = v517;
    v539 = v514;
    v538 = v513;
    *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
    v533 = xmmword_22467EE40;
    v534 = (__int128)xmmword_22467EE50;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 2, 6, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x132000000F2), xmmword_22467EE50);
    if ((v481 & 0x40000000) == 0)
    {
      v535 = v515;
      v536 = v516;
      v537 = v517;
      v534 = v514;
      v533 = v513;
      *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
      v593 = xmmword_22467EE60;
      v594 = (__int128)xmmword_22467EE70;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 2, 6, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x132000000F2), xmmword_22467EE70);
      if (((v476 | v488) & 1) == 0)
      {
        v595 = v515;
        v596 = v516;
        v597 = v517;
        v593 = v513;
        v594 = v514;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467EE80;
        v589 = (__int128)xmmword_22467EE90;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 2, 6, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x132000000F2), xmmword_22467EE90);
        v128 = (v444 & 1) == 0 && ((v471 | v467) & 1) == 0;
        if ((v447 & 1) == 0 && v128)
        {
          v590 = v515;
          v591 = v516;
          v592 = v517;
          v589 = v514;
          v588 = v513;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467EEA0;
          v584 = (__int128)xmmword_22467EEB0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 2, 6, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xB2000000F2), xmmword_22467EEB0);
        }
      }
      v129 = (v453 & 1) == 0 && ((v471 | v467) & 1) == 0;
      if (v129 && (v107 & 1) == 0)
      {
        v585 = v515;
        v586 = v516;
        v587 = v517;
        v584 = v514;
        v583 = v513;
        *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
        v578 = xmmword_22467EEC0;
        v579 = (__int128)xmmword_22467EED0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 2, 6, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xB2000000F2), xmmword_22467EED0);
      }
    }
    if (((v488 | v462) & 1) == 0)
    {
      v580 = v515;
      v581 = v516;
      v582 = v517;
      v579 = v514;
      v578 = v513;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467EEE0;
      v574 = (__int128)xmmword_22467EEF0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 2, 6, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x132000000F2), xmmword_22467EEF0);
      v130 = (v441 & 1) == 0 && ((v467 | v126) & 1) == 0;
      if ((v444 & 1) == 0 && v130)
      {
        v575 = v515;
        v576 = v516;
        v577 = v517;
        v574 = v514;
        v573 = v513;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467EF00;
        v569 = (__int128)xmmword_22467EF10;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 2, 6, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xB2000000F2), xmmword_22467EF10);
      }
    }
    v131 = (v107 & 1) == 0 && ((v467 | v126) & 1) == 0;
    if (v131 && (v127 & 1) == 0)
    {
      v570 = v515;
      v571 = v516;
      v572 = v517;
      v569 = v514;
      v568 = v513;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467EF20;
      v564 = xmmword_22467EF30;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 2, 6, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0xB2000000F2), xmmword_22467EF30);
    }
  }
  v132 = *((_DWORD *)v5 + 172);
  if (**v501)
  {
    v133 = *((_DWORD *)v5 + 236);
    v134 = *((_DWORD *)v5 + 180);
    v135 = *((_DWORD *)v5 + 244);
    v136 = *((_DWORD *)v5 + 188);
  }
  else
  {
    if ((v132 & 0x10000000) != 0)
      v137 = 0x40000000;
    else
      v137 = 0x80000000;
    if ((v132 & 0x20000000) != 0)
      v132 = v137;
    else
      v132 &= 0xCFFFFFFF;
    v138 = *((_DWORD *)v5 + 236);
    if ((v138 & 0x10000000) != 0)
      v139 = 0x40000000;
    else
      v139 = 0x80000000;
    if ((v138 & 0x20000000) != 0)
      v133 = v139;
    else
      v133 = v138 & 0xCFFFFFFF;
    v140 = *((_DWORD *)v5 + 180);
    if ((v140 & 0x10000000) != 0)
      v141 = 0x40000000;
    else
      v141 = 0x80000000;
    if ((v140 & 0x20000000) != 0)
      v134 = v141;
    else
      v134 = v140 & 0xCFFFFFFF;
    v142 = *((_DWORD *)v5 + 244);
    if ((v142 & 0x10000000) != 0)
      v143 = 0x40000000;
    else
      v143 = 0x80000000;
    if ((v142 & 0x20000000) != 0)
      v135 = v143;
    else
      v135 = v142 & 0xCFFFFFFF;
    v144 = *((_DWORD *)v5 + 188);
    if ((v144 & 0x10000000) != 0)
      v136 = 0x40000000;
    else
      v136 = 0x80000000;
    if ((v144 & 0x20000000) == 0)
      v136 = v144 & 0xCFFFFFFF;
  }
  v145 = v134 >> 30;
  v448 = v132 >> 30;
  v482 = v133 >> 30;
  v454 = v136 >> 30;
  if ((v116 & 0x40000000) != 0)
  {
    v540 = v515;
    v541 = v516;
    v542 = v517;
    v539 = v514;
    v538 = v513;
    *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
    v533 = xmmword_22467EF40;
    v534 = (__int128)xmmword_22467EF50;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 3, 6, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x133000000F3), xmmword_22467EF50);
    if ((v97 & 0x40000000) == 0)
    {
      v535 = v515;
      v536 = v516;
      v537 = v517;
      v534 = v514;
      v533 = v513;
      *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
      v593 = xmmword_22467EF60;
      v594 = (__int128)xmmword_22467EF70;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 3, 6, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x133000000F3), xmmword_22467EF70);
      if (((v488 | v462) & 1) == 0)
      {
        v595 = v515;
        v596 = v516;
        v597 = v517;
        v593 = v513;
        v594 = v514;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467EF80;
        v589 = (__int128)xmmword_22467EF90;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 3, 6, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x133000000F3), xmmword_22467EF90);
        v146 = (v441 & 1) == 0 && ((v467 | v126) & 1) == 0;
        if ((v444 & 1) == 0 && v146)
        {
          v590 = v515;
          v591 = v516;
          v592 = v517;
          v589 = v514;
          v588 = v513;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467EFA0;
          v584 = (__int128)xmmword_22467EFB0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 3, 6, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xB3000000F3), xmmword_22467EFB0);
        }
      }
      v147 = (v107 & 1) == 0 && ((v467 | v126) & 1) == 0;
      if (v147 && (v127 & 1) == 0)
      {
        v585 = v515;
        v586 = v516;
        v587 = v517;
        v584 = v514;
        v583 = v513;
        *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
        v578 = xmmword_22467EFC0;
        v579 = (__int128)xmmword_22467EFD0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 3, 6, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xB3000000F3), xmmword_22467EFD0);
      }
    }
    if (((v462 | v482) & 1) == 0)
    {
      v580 = v515;
      v581 = v516;
      v582 = v517;
      v579 = v514;
      v578 = v513;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467EFE0;
      v574 = (__int128)xmmword_22467EFF0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 3, 6, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x133000000F3), xmmword_22467EFF0);
      v148 = (v448 & 1) == 0 && ((v126 | v145) & 1) == 0;
      if ((v441 & 1) == 0 && v148)
      {
        v575 = v515;
        v576 = v516;
        v577 = v517;
        v574 = v514;
        v573 = v513;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467F000;
        v569 = (__int128)xmmword_22467F010;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 3, 6, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xB3000000F3), xmmword_22467F010);
      }
    }
    v149 = (v127 & 1) == 0 && ((v126 | v145) & 1) == 0;
    if (v149 && (v454 & 1) == 0)
    {
      v570 = v515;
      v571 = v516;
      v572 = v517;
      v569 = v514;
      v568 = v513;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467F020;
      v564 = xmmword_22467F030;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 3, 6, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0xB3000000F3), xmmword_22467F030);
    }
  }
  v150 = *((_DWORD *)v5 + 173);
  if (**v501)
  {
    v151 = *((_DWORD *)v5 + 237);
    v152 = *((_DWORD *)v5 + 181);
    v153 = *((_DWORD *)v5 + 245);
    v154 = *((_DWORD *)v5 + 189);
  }
  else
  {
    if ((v150 & 0x10000000) != 0)
      v155 = 0x40000000;
    else
      v155 = 0x80000000;
    if ((v150 & 0x20000000) != 0)
      v150 = v155;
    else
      v150 &= 0xCFFFFFFF;
    v156 = *((_DWORD *)v5 + 237);
    if ((v156 & 0x10000000) != 0)
      v157 = 0x40000000;
    else
      v157 = 0x80000000;
    if ((v156 & 0x20000000) != 0)
      v151 = v157;
    else
      v151 = v156 & 0xCFFFFFFF;
    v158 = *((_DWORD *)v5 + 181);
    if ((v158 & 0x10000000) != 0)
      v159 = 0x40000000;
    else
      v159 = 0x80000000;
    if ((v158 & 0x20000000) != 0)
      v152 = v159;
    else
      v152 = v158 & 0xCFFFFFFF;
    v160 = *((_DWORD *)v5 + 245);
    if ((v160 & 0x10000000) != 0)
      v161 = 0x40000000;
    else
      v161 = 0x80000000;
    if ((v160 & 0x20000000) != 0)
      v153 = v161;
    else
      v153 = v160 & 0xCFFFFFFF;
    v162 = *((_DWORD *)v5 + 189);
    if ((v162 & 0x10000000) != 0)
      v154 = 0x40000000;
    else
      v154 = 0x80000000;
    if ((v162 & 0x20000000) == 0)
      v154 = v162 & 0xCFFFFFFF;
  }
  v477 = v152 >> 30;
  v445 = v150 >> 30;
  v489 = v151 >> 30;
  v163 = v154 >> 30;
  if ((v135 & 0x40000000) != 0)
  {
    v540 = v515;
    v541 = v516;
    v542 = v517;
    v539 = v514;
    v538 = v513;
    *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
    v533 = xmmword_22467F040;
    v534 = (__int128)xmmword_22467F050;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 4, 6, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x134000000F4), xmmword_22467F050);
    if ((v116 & 0x40000000) == 0)
    {
      v535 = v515;
      v536 = v516;
      v537 = v517;
      v534 = v514;
      v533 = v513;
      *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
      v593 = xmmword_22467F060;
      v594 = (__int128)xmmword_22467F070;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 4, 6, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x134000000F4), xmmword_22467F070);
      if (((v462 | v482) & 1) == 0)
      {
        v595 = v515;
        v596 = v516;
        v597 = v517;
        v593 = v513;
        v594 = v514;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467F080;
        v589 = (__int128)xmmword_22467F090;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 4, 6, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x134000000F4), xmmword_22467F090);
        v164 = (v448 & 1) == 0 && ((v126 | v145) & 1) == 0;
        if ((v441 & 1) == 0 && v164)
        {
          v590 = v515;
          v591 = v516;
          v592 = v517;
          v589 = v514;
          v588 = v513;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467F0A0;
          v584 = (__int128)xmmword_22467F0B0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 4, 6, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xB4000000F4), xmmword_22467F0B0);
        }
      }
      v165 = (v127 & 1) == 0 && ((v126 | v145) & 1) == 0;
      if (v165 && (v454 & 1) == 0)
      {
        v585 = v515;
        v586 = v516;
        v587 = v517;
        v584 = v514;
        v583 = v513;
        *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
        v578 = xmmword_22467F0C0;
        v579 = (__int128)xmmword_22467F0D0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 4, 6, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xB4000000F4), xmmword_22467F0D0);
      }
    }
    if (((v482 | v489) & 1) == 0)
    {
      v580 = v515;
      v581 = v516;
      v582 = v517;
      v579 = v514;
      v578 = v513;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467F0E0;
      v574 = (__int128)xmmword_22467F0F0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 4, 6, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x134000000F4), xmmword_22467F0F0);
      v166 = (v445 & 1) == 0 && ((v145 | v477) & 1) == 0;
      if ((v448 & 1) == 0 && v166)
      {
        v575 = v515;
        v576 = v516;
        v577 = v517;
        v574 = v514;
        v573 = v513;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467F100;
        v569 = (__int128)xmmword_22467F110;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 4, 6, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xB4000000F4), xmmword_22467F110);
      }
    }
    v167 = (v454 & 1) == 0 && ((v145 | v477) & 1) == 0;
    if (v167 && (v163 & 1) == 0)
    {
      v570 = v515;
      v571 = v516;
      v572 = v517;
      v569 = v514;
      v568 = v513;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467F120;
      v564 = xmmword_22467F130;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 4, 6, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0xB4000000F4), xmmword_22467F130);
    }
  }
  v168 = *((_DWORD *)v5 + 174);
  if (**v501)
  {
    v169 = *((_DWORD *)v5 + 238);
    v170 = *((_DWORD *)v5 + 182);
    v171 = *((_DWORD *)v5 + 246);
    v172 = *((_DWORD *)v5 + 190);
  }
  else
  {
    if ((v168 & 0x10000000) != 0)
      v173 = 0x40000000;
    else
      v173 = 0x80000000;
    if ((v168 & 0x20000000) != 0)
      v168 = v173;
    else
      v168 &= 0xCFFFFFFF;
    v174 = *((_DWORD *)v5 + 238);
    if ((v174 & 0x10000000) != 0)
      v175 = 0x40000000;
    else
      v175 = 0x80000000;
    if ((v174 & 0x20000000) != 0)
      v169 = v175;
    else
      v169 = v174 & 0xCFFFFFFF;
    v176 = *((_DWORD *)v5 + 182);
    if ((v176 & 0x10000000) != 0)
      v177 = 0x40000000;
    else
      v177 = 0x80000000;
    if ((v176 & 0x20000000) != 0)
      v170 = v177;
    else
      v170 = v176 & 0xCFFFFFFF;
    v178 = *((_DWORD *)v5 + 246);
    if ((v178 & 0x10000000) != 0)
      v179 = 0x40000000;
    else
      v179 = 0x80000000;
    if ((v178 & 0x20000000) != 0)
      v171 = v179;
    else
      v171 = v178 & 0xCFFFFFFF;
    v180 = *((_DWORD *)v5 + 190);
    if ((v180 & 0x10000000) != 0)
      v172 = 0x40000000;
    else
      v172 = 0x80000000;
    if ((v180 & 0x20000000) == 0)
      v172 = v180 & 0xCFFFFFFF;
  }
  v442 = v168 >> 30;
  v468 = v170 >> 30;
  v472 = v169 >> 30;
  v463 = v172 >> 30;
  v555 = v515;
  v556 = v516;
  v557 = v517;
  v554 = v514;
  v553 = v513;
  if ((v153 & 0x40000000) != 0)
  {
    v540 = v515;
    v541 = v516;
    v542 = v517;
    v539 = v514;
    v538 = v513;
    *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
    v533 = xmmword_22467F140;
    v534 = (__int128)xmmword_22467F150;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 5, 6, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x135000000F5), xmmword_22467F150);
    if ((v135 & 0x40000000) == 0)
    {
      v535 = v515;
      v536 = v516;
      v537 = v517;
      v534 = v514;
      v533 = v513;
      *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
      v593 = xmmword_22467F160;
      v594 = (__int128)xmmword_22467F170;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 5, 6, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x135000000F5), xmmword_22467F170);
      if (((v482 | v489) & 1) == 0)
      {
        v595 = v515;
        v596 = v516;
        v597 = v517;
        v593 = v513;
        v594 = v514;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467F180;
        v589 = (__int128)xmmword_22467F190;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 5, 6, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x135000000F5), xmmword_22467F190);
        v181 = (v445 & 1) == 0 && ((v145 | v477) & 1) == 0;
        if ((v448 & 1) == 0 && v181)
        {
          v590 = v515;
          v591 = v516;
          v592 = v517;
          v589 = v514;
          v588 = v513;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467F1A0;
          v584 = (__int128)xmmword_22467F1B0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 5, 6, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xB5000000F5), xmmword_22467F1B0);
        }
      }
      v182 = (v454 & 1) == 0 && ((v145 | v477) & 1) == 0;
      if (v182 && (v163 & 1) == 0)
      {
        v585 = v555;
        v586 = v556;
        v587 = v557;
        v584 = v554;
        v583 = v553;
        *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
        v578 = xmmword_22467F1C0;
        v579 = (__int128)xmmword_22467F1D0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 5, 6, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xB5000000F5), xmmword_22467F1D0);
      }
    }
    if (((v489 | v472) & 1) == 0)
    {
      v580 = v555;
      v581 = v556;
      v582 = v557;
      v579 = v554;
      v578 = v553;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467F1E0;
      v574 = (__int128)xmmword_22467F1F0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 5, 6, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x135000000F5), xmmword_22467F1F0);
      v183 = (v442 & 1) == 0 && ((v477 | v468) & 1) == 0;
      if ((v445 & 1) == 0 && v183)
      {
        v575 = v555;
        v576 = v556;
        v577 = v557;
        v574 = v554;
        v573 = v553;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467F200;
        v569 = (__int128)xmmword_22467F210;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 5, 6, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xB5000000F5), xmmword_22467F210);
      }
    }
    v184 = (v163 & 1) == 0 && ((v477 | v468) & 1) == 0;
    if (v184 && (v463 & 1) == 0)
    {
      v570 = v555;
      v571 = v556;
      v572 = v557;
      v569 = v554;
      v568 = v553;
      *(_QWORD *)&v558 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467F220;
      v564 = xmmword_22467F230;
      *(_QWORD *)&v548 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 5, 6, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v548, COERCE_DOUBLE(0xB5000000F5), xmmword_22467F230);
    }
  }
  v550 = v515;
  v551 = v516;
  v552 = v517;
  v549 = v514;
  v548 = v513;
  v185 = *((_DWORD *)v5 + 175);
  if (**v501)
  {
    v186 = *((_DWORD *)v5 + 239);
    v187 = *((_DWORD *)v5 + 183);
    v188 = *((_DWORD *)v5 + 247);
    v189 = *((_DWORD *)v5 + 191);
  }
  else
  {
    if ((v185 & 0x10000000) != 0)
      v190 = 0x40000000;
    else
      v190 = 0x80000000;
    if ((v185 & 0x20000000) != 0)
      v185 = v190;
    else
      v185 &= 0xCFFFFFFF;
    v191 = *((_DWORD *)v5 + 239);
    if ((v191 & 0x10000000) != 0)
      v192 = 0x40000000;
    else
      v192 = 0x80000000;
    if ((v191 & 0x20000000) != 0)
      v186 = v192;
    else
      v186 = v191 & 0xCFFFFFFF;
    v193 = *((_DWORD *)v5 + 183);
    if ((v193 & 0x10000000) != 0)
      v194 = 0x40000000;
    else
      v194 = 0x80000000;
    if ((v193 & 0x20000000) != 0)
      v187 = v194;
    else
      v187 = v193 & 0xCFFFFFFF;
    v195 = *((_DWORD *)v5 + 247);
    if ((v195 & 0x10000000) != 0)
      v196 = 0x40000000;
    else
      v196 = 0x80000000;
    if ((v195 & 0x20000000) != 0)
      v188 = v196;
    else
      v188 = v195 & 0xCFFFFFFF;
    v197 = *((_DWORD *)v5 + 191);
    if ((v197 & 0x10000000) != 0)
      v189 = 0x40000000;
    else
      v189 = 0x80000000;
    if ((v197 & 0x20000000) == 0)
      v189 = v197 & 0xCFFFFFFF;
  }
  v198 = v187 >> 30;
  v483 = v185 >> 30;
  v199 = v186 >> 30;
  v503 = v189 >> 30;
  v560 = v515;
  v561 = v516;
  v562 = v517;
  v559 = v514;
  v558 = v513;
  if ((v171 & 0x40000000) != 0)
  {
    v540 = v515;
    v541 = v516;
    v542 = v517;
    v539 = v514;
    v538 = v513;
    *(_QWORD *)&v593 = 0xD0D0D0D0D0D0D0DLL;
    v533 = xmmword_22467F240;
    v534 = (__int128)xmmword_22467F250;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 6, 6, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x136000000F6), xmmword_22467F250);
    if ((v153 & 0x40000000) == 0)
    {
      v535 = v515;
      v536 = v516;
      v537 = v517;
      v534 = v514;
      v533 = v513;
      *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
      v593 = xmmword_22467F260;
      v594 = (__int128)xmmword_22467F270;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 6, 6, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x136000000F6), xmmword_22467F270);
      if (((v489 | v472) & 1) == 0)
      {
        v595 = v515;
        v596 = v516;
        v597 = v517;
        v593 = v513;
        v594 = v514;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467F280;
        v589 = (__int128)xmmword_22467F290;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 6, 6, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x136000000F6), xmmword_22467F290);
        v200 = (v442 & 1) == 0 && ((v477 | v468) & 1) == 0;
        if ((v445 & 1) == 0 && v200)
        {
          v590 = v515;
          v591 = v516;
          v592 = v517;
          v589 = v514;
          v588 = v513;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467F2A0;
          v584 = (__int128)xmmword_22467F2B0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 6, 6, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xB6000000F6), xmmword_22467F2B0);
        }
      }
      v201 = (v163 & 1) == 0 && ((v477 | v468) & 1) == 0;
      if (v201 && (v463 & 1) == 0)
      {
        v585 = v560;
        v586 = v561;
        v587 = v562;
        v584 = v559;
        v583 = v558;
        *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
        v578 = xmmword_22467F2C0;
        v579 = (__int128)xmmword_22467F2D0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 6, 6, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xB6000000F6), xmmword_22467F2D0);
      }
    }
    if (((v472 | v199) & 1) == 0)
    {
      v580 = v560;
      v581 = v561;
      v582 = v562;
      v579 = v559;
      v578 = v558;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467F2E0;
      v574 = (__int128)xmmword_22467F2F0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 6, 6, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x136000000F6), xmmword_22467F2F0);
      v202 = (v483 & 1) == 0 && ((v468 | v198) & 1) == 0;
      if ((v442 & 1) == 0 && v202)
      {
        v575 = v560;
        v576 = v561;
        v577 = v562;
        v574 = v559;
        v573 = v558;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467F300;
        v569 = (__int128)xmmword_22467F310;
        *(_QWORD *)&v543 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 6, 6, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v543, COERCE_DOUBLE(0xB6000000F6), xmmword_22467F310);
      }
    }
    v203 = (v463 & 1) == 0 && ((v468 | v198) & 1) == 0;
    if (v203 && (v503 & 1) == 0)
    {
      v570 = v560;
      v571 = v561;
      v572 = v562;
      v569 = v559;
      v568 = v558;
      *(_QWORD *)&v543 = 0xD0D0D0D0D0D0D0DLL;
      v563 = xmmword_22467F320;
      v564 = xmmword_22467F330;
      *(_QWORD *)&v599[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 6, 6, 3, (uint64_t)&v543, (uint64_t)&v563, (uint64_t)v599, COERCE_DOUBLE(0xB6000000F6), xmmword_22467F330);
    }
  }
  v204 = *(unsigned int *)(v498 + 88);
  if ((v204 & 0x80000000) != 0)
  {
    v207 = *v493;
    v208 = *(_DWORD *)(v505 + 952);
    v209 = **v493;
    if (**v493)
      goto LABEL_509;
  }
  else
  {
    v205 = *(_QWORD *)(v505 + 2328);
    if (v204 >= (*(_QWORD *)(v505 + 2336) - v205) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v205 = *(_QWORD *)(v505 + 2328);
    }
    v206 = v205 + (v204 << 11);
    v207 = *v493;
    v208 = *(_DWORD *)(v206 + 672);
    v209 = **v493;
    if (**v493)
    {
LABEL_509:
      v210 = *(unsigned int *)(v498 + 88);
      if ((v210 & 0x80000000) == 0)
        goto LABEL_510;
LABEL_529:
      v212 = *(_DWORD *)(v505 + 1208);
      if (v209)
        goto LABEL_514;
      goto LABEL_530;
    }
  }
  if ((v208 & 0x10000000) != 0)
    v217 = 0x40000000;
  else
    v217 = 0x80000000;
  if ((v208 & 0x20000000) != 0)
    v208 = v217;
  else
    v208 &= 0xCFFFFFFF;
  v210 = *(unsigned int *)(v498 + 88);
  if ((v210 & 0x80000000) != 0)
    goto LABEL_529;
LABEL_510:
  v211 = *(_QWORD *)(v505 + 2328);
  if (v210 >= (*(_QWORD *)(v505 + 2336) - v211) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v211 = *(_QWORD *)(v505 + 2328);
    v207 = *v493;
    v209 = **v493;
  }
  v212 = *(_DWORD *)(v211 + (v210 << 11) + 928);
  if (v209)
  {
LABEL_514:
    v213 = *(unsigned int *)(v498 + 88);
    if ((v213 & 0x80000000) == 0)
      goto LABEL_515;
LABEL_537:
    v215 = *(_DWORD *)(v505 + 984);
    if (v209)
      goto LABEL_519;
    goto LABEL_538;
  }
LABEL_530:
  if ((v212 & 0x10000000) != 0)
    v218 = 0x40000000;
  else
    v218 = 0x80000000;
  if ((v212 & 0x20000000) != 0)
    v212 = v218;
  else
    v212 &= 0xCFFFFFFF;
  v213 = *(unsigned int *)(v498 + 88);
  if ((v213 & 0x80000000) != 0)
    goto LABEL_537;
LABEL_515:
  v214 = *(_QWORD *)(v505 + 2328);
  if (v213 >= (*(_QWORD *)(v505 + 2336) - v214) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v214 = *(_QWORD *)(v505 + 2328);
    v207 = *v493;
    v209 = **v493;
  }
  v215 = *(_DWORD *)(v214 + (v213 << 11) + 704);
  if (v209)
  {
LABEL_519:
    v216 = *(unsigned int *)(v498 + 88);
    if ((v216 & 0x80000000) != 0)
      goto LABEL_595;
    goto LABEL_545;
  }
LABEL_538:
  if ((v215 & 0x10000000) != 0)
    v219 = 0x40000000;
  else
    v219 = 0x80000000;
  if ((v215 & 0x20000000) != 0)
    v215 = v219;
  else
    v215 &= 0xCFFFFFFF;
  v216 = *(unsigned int *)(v498 + 88);
  if ((v216 & 0x80000000) != 0)
    goto LABEL_595;
LABEL_545:
  v220 = *(_QWORD *)(v505 + 2328);
  v221 = (*(_QWORD *)(v505 + 2336) - v220) >> 11;
  if (v221 > v216)
    goto LABEL_549;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v207 = *v493;
  v216 = *(unsigned int *)(v498 + 88);
  if ((v216 & 0x80000000) != 0)
  {
LABEL_595:
    v222 = *(_DWORD *)(v505 + 1016);
    if (*v207)
      goto LABEL_559;
    goto LABEL_553;
  }
  v220 = *(_QWORD *)(v505 + 2328);
  v221 = (*(_QWORD *)(v505 + 2336) - v220) >> 11;
LABEL_549:
  if (v221 <= v216)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v220 = *(_QWORD *)(v505 + 2328);
    v207 = *v493;
  }
  v222 = *(_DWORD *)(v220 + (v216 << 11) + 736);
  if (!*v207)
  {
LABEL_553:
    if ((v222 & 0x10000000) != 0)
      v223 = 0x40000000;
    else
      v223 = 0x80000000;
    if ((v222 & 0x20000000) != 0)
      v222 = v223;
    else
      v222 &= 0xCFFFFFFF;
  }
LABEL_559:
  v565 = v550;
  v566 = v551;
  v567 = v552;
  v564 = (float32x4_t)v549;
  v563 = v548;
  if ((v188 & 0x40000000) != 0)
  {
    v540 = v550;
    v541 = v551;
    v542 = v552;
    v539 = v549;
    v538 = v548;
    *(_QWORD *)&v593 = 0x161616160D0D0D0DLL;
    v533 = xmmword_22467F340;
    v534 = (__int128)xmmword_22467F350;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 7, 6, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x137000000F7), xmmword_22467F350);
    if ((v171 & 0x40000000) == 0)
    {
      v535 = v550;
      v536 = v551;
      v537 = v552;
      v534 = v549;
      v533 = v548;
      *(_QWORD *)&v588 = 0xD0D0D0D0D0D0D0DLL;
      v593 = xmmword_22467F360;
      v594 = (__int128)xmmword_22467F370;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 7, 6, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x137000000F7), xmmword_22467F370);
      if (((v472 | v199) & 1) == 0)
      {
        v595 = v550;
        v596 = v551;
        v597 = v552;
        v593 = v548;
        v594 = v549;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467F380;
        v589 = (__int128)xmmword_22467F390;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 7, 6, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x137000000F7), xmmword_22467F390);
        v224 = (v483 & 1) == 0 && ((v468 | v198) & 1) == 0;
        if ((v442 & 1) == 0 && v224)
        {
          v590 = v550;
          v591 = v551;
          v592 = v552;
          v589 = v549;
          v588 = v548;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467F3A0;
          v584 = (__int128)xmmword_22467F3B0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 7, 6, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xB7000000F7), xmmword_22467F3B0);
        }
      }
      v225 = (v463 & 1) == 0 && ((v468 | v198) & 1) == 0;
      if (v225 && (v503 & 1) == 0)
      {
        v585 = v565;
        v586 = v566;
        v587 = v567;
        v584 = (__int128)v564;
        v583 = v563;
        *(_QWORD *)&v573 = 0xD0D0D0D0D0D0D0DLL;
        v578 = xmmword_22467F3C0;
        v579 = (__int128)xmmword_22467F3D0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 7, 6, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xB7000000F7), xmmword_22467F3D0);
      }
    }
    if (!(v212 & 0x40000000 | v199 & 1))
    {
      v580 = v565;
      v581 = v566;
      v582 = v567;
      *(_QWORD *)&v568 = 0x16160D0D16160D0DLL;
      v579 = (__int128)v564;
      v578 = v563;
      v573 = xmmword_22467F3E0;
      v574 = (__int128)xmmword_22467F3F0;
      *(_QWORD *)&v543 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 7, 6, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v543, COERCE_DOUBLE(0x137000000F7), xmmword_22467F3F0);
      v226 = (v208 & 0x40000000) == 0 && (v215 & 0x40000000 | v198 & 1) == 0;
      if ((v483 & 1) == 0 && v226)
      {
        v575 = v565;
        v576 = v566;
        v577 = v567;
        *(_QWORD *)&v543 = 0x161616160D0D0D0DLL;
        v574 = (__int128)v564;
        v573 = v563;
        v568 = xmmword_22467F400;
        v569 = (__int128)xmmword_22467F410;
        *(_QWORD *)&v599[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 7, 6, 3, (uint64_t)&v543, (uint64_t)&v568, (uint64_t)v599, COERCE_DOUBLE(0xB7000000F7), xmmword_22467F410);
      }
    }
    v227 = (v503 & 1) == 0 && (v215 & 0x40000000 | v198 & 1) == 0;
    if (v227 && (v222 & 0x40000000) == 0)
    {
      v570 = v565;
      v571 = v566;
      v572 = v567;
      *(_QWORD *)&v599[0] = 0x16160D0D16160D0DLL;
      v569 = (__int128)v564;
      v568 = v563;
      v543 = xmmword_22467F420;
      v544 = (__int128)xmmword_22467F430;
      v600[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 7, 6, 3, (uint64_t)v599, (uint64_t)&v543, (uint64_t)v600, COERCE_DOUBLE(0xB7000000F7), xmmword_22467F430);
    }
  }
  v228 = a1[2];
  v229 = *v451;
  v504 = (unsigned __int8 **)v451[2];
  v507 = (unsigned int *)v451[1];
  v511 = a3[3];
  v512 = a3[4];
  v509 = a3[1];
  v510 = a3[2];
  v508 = *a3;
  v452 = *(_OWORD *)a1;
  v499 = *a1;
  v230 = *((_DWORD *)v228 + 176);
  if (***a1)
  {
    v478 = *((_DWORD *)v228 + 184);
    v484 = *((_DWORD *)v228 + 240);
    v494 = *((_DWORD *)v228 + 248);
    v231 = v507[16];
    if ((v231 & 0x80000000) == 0)
      goto LABEL_589;
LABEL_611:
    v234 = *v504;
    v235 = *(_DWORD *)(v229 + 792);
    v236 = **v504;
    if (**v504)
      goto LABEL_593;
LABEL_612:
    if ((v235 & 0x10000000) != 0)
      v245 = 0x40000000;
    else
      v245 = 0x80000000;
    if ((v235 & 0x20000000) != 0)
      v235 = v245;
    else
      v235 &= 0xCFFFFFFF;
    if ((v494 & 0x40000000) == 0)
      goto LABEL_594;
    goto LABEL_619;
  }
  if ((v230 & 0x20000000) != 0)
    v230 *= 4;
  v239 = *((_DWORD *)v228 + 240);
  if ((v239 & 0x20000000) != 0)
    v240 = 4 * v239;
  else
    v240 = *((_DWORD *)v228 + 240);
  v241 = *((_DWORD *)v228 + 184);
  if ((v241 & 0x20000000) != 0)
    v241 *= 4;
  v478 = v241;
  v484 = v240;
  v242 = *((_DWORD *)v228 + 248);
  if ((v242 & 0x10000000) != 0)
    v243 = 0x40000000;
  else
    v243 = 0x80000000;
  if ((v242 & 0x20000000) != 0)
    v244 = v243;
  else
    v244 = v242 & 0xCFFFFFFF;
  v494 = v244;
  v231 = v507[16];
  if ((v231 & 0x80000000) != 0)
    goto LABEL_611;
LABEL_589:
  v232 = *(_QWORD *)(v229 + 2328);
  if (v231 >= (*(_QWORD *)(v229 + 2336) - v232) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v232 = *(_QWORD *)(v229 + 2328);
  }
  v233 = v232 + (v231 << 11);
  v234 = *v504;
  v235 = *(_DWORD *)(v233 + 512);
  v236 = **v504;
  if (!**v504)
    goto LABEL_612;
LABEL_593:
  if ((v494 & 0x40000000) == 0)
  {
LABEL_594:
    v464 = 0;
    v237 = 0;
    v238 = 0;
    v473 = 0;
    goto LABEL_685;
  }
LABEL_619:
  v246 = v507[4];
  if ((v246 & 0x80000000) != 0)
  {
    v248 = *(_DWORD *)(v229 + 1012);
    if (v236)
      goto LABEL_624;
  }
  else
  {
    v247 = *(_QWORD *)(v229 + 2328);
    if (v246 >= (*(_QWORD *)(v229 + 2336) - v247) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v247 = *(_QWORD *)(v229 + 2328);
      v234 = *v504;
      v236 = **v504;
    }
    v248 = *(_DWORD *)(v247 + (v246 << 11) + 732);
    if (v236)
    {
LABEL_624:
      v249 = v507[4];
      if ((v249 & 0x80000000) == 0)
        goto LABEL_625;
LABEL_652:
      v251 = *(_DWORD *)(v229 + 1268);
      if (v236)
        goto LABEL_629;
      goto LABEL_653;
    }
  }
  if ((v248 & 0x10000000) != 0)
    v261 = 0x40000000;
  else
    v261 = 0x80000000;
  if ((v248 & 0x20000000) != 0)
    v248 = v261;
  else
    v248 &= 0xCFFFFFFF;
  v249 = v507[4];
  if ((v249 & 0x80000000) != 0)
    goto LABEL_652;
LABEL_625:
  v250 = *(_QWORD *)(v229 + 2328);
  if (v249 >= (*(_QWORD *)(v229 + 2336) - v250) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v250 = *(_QWORD *)(v229 + 2328);
    v234 = *v504;
    v236 = **v504;
  }
  v251 = *(_DWORD *)(v250 + (v249 << 11) + 988);
  if (v236)
  {
LABEL_629:
    v252 = v507[4];
    if ((v252 & 0x80000000) == 0)
      goto LABEL_630;
LABEL_660:
    v254 = *(_DWORD *)(v229 + 1044);
    if (v236)
      goto LABEL_634;
    goto LABEL_661;
  }
LABEL_653:
  if ((v251 & 0x10000000) != 0)
    v262 = 0x40000000;
  else
    v262 = 0x80000000;
  if ((v251 & 0x20000000) != 0)
    v251 = v262;
  else
    v251 &= 0xCFFFFFFF;
  v252 = v507[4];
  if ((v252 & 0x80000000) != 0)
    goto LABEL_660;
LABEL_630:
  v253 = *(_QWORD *)(v229 + 2328);
  if (v252 >= (*(_QWORD *)(v229 + 2336) - v253) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v253 = *(_QWORD *)(v229 + 2328);
    v234 = *v504;
    v236 = **v504;
  }
  v254 = *(_DWORD *)(v253 + (v252 << 11) + 764);
  if (v236)
  {
LABEL_634:
    v255 = v507[4];
    if ((v255 & 0x80000000) == 0)
      goto LABEL_635;
LABEL_668:
    v257 = *(_DWORD *)(v229 + 1300);
    if (v236)
      goto LABEL_639;
LABEL_669:
    if ((v257 & 0x10000000) != 0)
      v264 = 0x40000000;
    else
      v264 = 0x80000000;
    if ((v257 & 0x20000000) != 0)
      v257 = v264;
    else
      v257 &= 0xCFFFFFFF;
    v258 = v507[7];
    if ((v258 & 0x80000000) == 0)
      goto LABEL_640;
    goto LABEL_676;
  }
LABEL_661:
  if ((v254 & 0x10000000) != 0)
    v263 = 0x40000000;
  else
    v263 = 0x80000000;
  if ((v254 & 0x20000000) != 0)
    v254 = v263;
  else
    v254 &= 0xCFFFFFFF;
  v255 = v507[4];
  if ((v255 & 0x80000000) != 0)
    goto LABEL_668;
LABEL_635:
  v256 = *(_QWORD *)(v229 + 2328);
  if (v255 >= (*(_QWORD *)(v229 + 2336) - v256) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v256 = *(_QWORD *)(v229 + 2328);
    v234 = *v504;
    v236 = **v504;
  }
  v257 = *(_DWORD *)(v256 + (v255 << 11) + 1020);
  if (!v236)
    goto LABEL_669;
LABEL_639:
  v258 = v507[7];
  if ((v258 & 0x80000000) == 0)
  {
LABEL_640:
    v259 = *(_QWORD *)(v229 + 2328);
    if (v258 >= (*(_QWORD *)(v229 + 2336) - v259) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v259 = *(_QWORD *)(v229 + 2328);
      v234 = *v504;
      v236 = **v504;
    }
    v260 = v259 + (v258 << 11);
    goto LABEL_677;
  }
LABEL_676:
  v260 = v229 + 280;
LABEL_677:
  LODWORD(v464) = (v248 >> 30) & 1;
  v473 = (v251 >> 30) & 1;
  v238 = (v254 >> 30) & 1;
  v265 = *(_DWORD *)(v260 + 540);
  v237 = (v257 >> 30) & 1;
  if (!v236)
  {
    if ((v265 & 0x10000000) != 0)
      v266 = 0x40000000;
    else
      v266 = 0x80000000;
    if ((v265 & 0x20000000) != 0)
      v265 = v266;
    else
      v265 &= 0xCFFFFFFF;
  }
  HIDWORD(v464) = (v265 >> 30) & 1;
LABEL_685:
  v545 = v510;
  v546 = v511;
  v547 = v512;
  v544 = v509;
  v543 = v508;
  v267 = *((_DWORD *)v228 + 177);
  if (**v499)
  {
    v268 = *((_DWORD *)v228 + 241);
    v269 = *((_DWORD *)v228 + 185);
    v490 = *((_DWORD *)v228 + 249);
    v270 = v507[16];
    if ((v270 & 0x80000000) == 0)
      goto LABEL_687;
LABEL_1007:
    v458 = v230 >> 30;
    v272 = *(_DWORD *)(v229 + 796);
    if (*v234)
      goto LABEL_697;
    goto LABEL_691;
  }
  if ((v267 & 0x10000000) != 0)
    v373 = 0x40000000;
  else
    v373 = 0x80000000;
  if ((v267 & 0x20000000) != 0)
    v267 = v373;
  else
    v267 &= 0xCFFFFFFF;
  v374 = *((_DWORD *)v228 + 241);
  if ((v374 & 0x10000000) != 0)
    v375 = 0x40000000;
  else
    v375 = 0x80000000;
  if ((v374 & 0x20000000) != 0)
    v268 = v375;
  else
    v268 = v374 & 0xCFFFFFFF;
  v376 = *((_DWORD *)v228 + 185);
  if ((v376 & 0x10000000) != 0)
    v377 = 0x40000000;
  else
    v377 = 0x80000000;
  if ((v376 & 0x20000000) != 0)
    v269 = v377;
  else
    v269 = v376 & 0xCFFFFFFF;
  v378 = *((_DWORD *)v228 + 249);
  if ((v378 & 0x10000000) != 0)
    v379 = 0x40000000;
  else
    v379 = 0x80000000;
  if ((v378 & 0x20000000) != 0)
    v380 = v379;
  else
    v380 = v378 & 0xCFFFFFFF;
  v490 = v380;
  v270 = v507[16];
  if ((v270 & 0x80000000) != 0)
    goto LABEL_1007;
LABEL_687:
  v271 = *(_QWORD *)(v229 + 2328);
  if (v270 >= (*(_QWORD *)(v229 + 2336) - v271) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v271 = *(_QWORD *)(v229 + 2328);
    v234 = *v504;
  }
  v458 = v230 >> 30;
  v272 = *(_DWORD *)(v271 + (v270 << 11) + 516);
  if (!*v234)
  {
LABEL_691:
    if ((v272 & 0x10000000) != 0)
      v273 = 0x40000000;
    else
      v273 = 0x80000000;
    if ((v272 & 0x20000000) != 0)
      v272 = v273;
    else
      v272 &= 0xCFFFFFFF;
  }
LABEL_697:
  v455 = v267 >> 30;
  v274 = v478 >> 30;
  v275 = v484 >> 30;
  v276 = v235 >> 30;
  v479 = v269 >> 30;
  v485 = v268 >> 30;
  v277 = v272 >> 30;
  if ((v494 & 0x40000000) != 0)
  {
    v540 = v510;
    v541 = v511;
    v542 = v512;
    v539 = v509;
    v538 = v508;
    *(_QWORD *)&v593 = 0x10100D0D10100D0DLL;
    v533 = xmmword_22467F440;
    v534 = (__int128)xmmword_22467F450;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 0, 7, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x138000000F8), xmmword_22467F450);
    if (!v237)
    {
      v535 = v510;
      v536 = v511;
      v537 = v512;
      *(_QWORD *)&v588 = 0x707101004040D0DLL;
      v534 = v509;
      v533 = v508;
      v593 = xmmword_22467F460;
      v594 = (__int128)xmmword_22467F470;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 0, 7, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x138000000F8), xmmword_22467F470);
      v278 = (v238 | v274 & 1) == 0;
      if (!(v473 | v275 & 1))
      {
        v595 = v510;
        v596 = v511;
        v597 = v512;
        *(_QWORD *)&v583 = 0x40404040D0D0D0DLL;
        v593 = v508;
        v594 = v509;
        v588 = xmmword_22467F480;
        v589 = (__int128)xmmword_22467F490;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 0, 7, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x138000000F8), xmmword_22467F490);
        v279 = (v458 & 1) == 0 && v278;
        if (!(_DWORD)v464 && v279)
        {
          v590 = v510;
          v591 = v511;
          v592 = v512;
          v589 = v509;
          v588 = v508;
          *(_QWORD *)&v578 = 0x4040D0D04040D0DLL;
          v583 = xmmword_22467F4A0;
          v584 = (__int128)xmmword_22467F4B0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 0, 7, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xB8000000F8), xmmword_22467F4B0);
        }
      }
      if (HIDWORD(v464))
        v280 = 0;
      else
        v280 = v278;
      if (v280 && (v276 & 1) == 0)
      {
        v585 = v510;
        v586 = v511;
        v587 = v512;
        *(_QWORD *)&v573 = 0x707040410100D0DLL;
        v584 = v509;
        v583 = v508;
        v578 = xmmword_22467F4C0;
        v579 = (__int128)xmmword_22467F4D0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 0, 7, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xB8000000F8), xmmword_22467F4D0);
      }
    }
    if (((v275 | v485) & 1) == 0)
    {
      v580 = v510;
      v581 = v511;
      v582 = v512;
      v579 = v509;
      v578 = v508;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467F4E0;
      v574 = (__int128)xmmword_22467F4F0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 0, 7, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x138000000F8), xmmword_22467F4F0);
      v281 = (v455 & 1) == 0 && ((v274 | v479) & 1) == 0;
      if ((v458 & 1) == 0 && v281)
      {
        v575 = v510;
        v576 = v511;
        v577 = v512;
        v574 = v509;
        v573 = v508;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467F500;
        v569 = (__int128)xmmword_22467F510;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 0, 7, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xB8000000F8), xmmword_22467F510);
      }
    }
    v282 = (v276 & 1) == 0 && ((v274 | v479) & 1) == 0;
    if (v282 && (v277 & 1) == 0)
    {
      v570 = v510;
      v571 = v511;
      v572 = v512;
      v569 = v509;
      v568 = v508;
      *(_QWORD *)&v558 = 0x101010100D0D0D0DLL;
      v563 = xmmword_22467F520;
      v564 = xmmword_22467F530;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 0, 7, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0xB8000000F8), xmmword_22467F530);
    }
  }
  v520 = v545;
  v521 = v546;
  v522 = v547;
  v518 = v543;
  v519 = v544;
  v283 = *((_DWORD *)v228 + 178);
  if (**v499)
  {
    v284 = *((_DWORD *)v228 + 242);
    v285 = *((_DWORD *)v228 + 186);
    v474 = *((_DWORD *)v228 + 250);
    v286 = v507[16];
    if ((v286 & 0x80000000) == 0)
      goto LABEL_727;
LABEL_1034:
    v288 = *(_DWORD *)(v229 + 800);
    if (**v504)
      goto LABEL_737;
    goto LABEL_731;
  }
  if ((v283 & 0x10000000) != 0)
    v381 = 0x40000000;
  else
    v381 = 0x80000000;
  if ((v283 & 0x20000000) != 0)
    v283 = v381;
  else
    v283 &= 0xCFFFFFFF;
  v382 = *((_DWORD *)v228 + 242);
  if ((v382 & 0x10000000) != 0)
    v383 = 0x40000000;
  else
    v383 = 0x80000000;
  if ((v382 & 0x20000000) != 0)
    v284 = v383;
  else
    v284 = v382 & 0xCFFFFFFF;
  v384 = *((_DWORD *)v228 + 186);
  if ((v384 & 0x10000000) != 0)
    v385 = 0x40000000;
  else
    v385 = 0x80000000;
  if ((v384 & 0x20000000) != 0)
    v285 = v385;
  else
    v285 = v384 & 0xCFFFFFFF;
  v386 = *((_DWORD *)v228 + 250);
  if ((v386 & 0x10000000) != 0)
    v387 = 0x40000000;
  else
    v387 = 0x80000000;
  if ((v386 & 0x20000000) != 0)
    v388 = v387;
  else
    v388 = v386 & 0xCFFFFFFF;
  v474 = v388;
  v286 = v507[16];
  if ((v286 & 0x80000000) != 0)
    goto LABEL_1034;
LABEL_727:
  v287 = *(_QWORD *)(v229 + 2328);
  if (v286 >= (*(_QWORD *)(v229 + 2336) - v287) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v287 = *(_QWORD *)(v229 + 2328);
  }
  v288 = *(_DWORD *)(v287 + (v286 << 11) + 520);
  if (!**v504)
  {
LABEL_731:
    if ((v288 & 0x10000000) != 0)
      v289 = 0x40000000;
    else
      v289 = 0x80000000;
    if ((v288 & 0x20000000) != 0)
      v288 = v289;
    else
      v288 &= 0xCFFFFFFF;
  }
LABEL_737:
  v449 = v283 >> 30;
  v290 = v285 >> 30;
  v465 = v288 >> 30;
  v469 = v284 >> 30;
  v530 = v545;
  v531 = v546;
  v532 = v547;
  v528 = v543;
  v529 = v544;
  if ((v490 & 0x40000000) != 0)
  {
    v540 = v545;
    v541 = v546;
    v542 = v547;
    v539 = v544;
    v538 = v543;
    *(_QWORD *)&v593 = 0x10100D0D10100D0DLL;
    v533 = xmmword_22467F540;
    v534 = (__int128)xmmword_22467F550;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 1, 7, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x139000000F9), xmmword_22467F550);
    if ((v494 & 0x40000000) == 0)
    {
      v535 = v545;
      v536 = v546;
      v537 = v547;
      v534 = v544;
      v533 = v543;
      *(_QWORD *)&v588 = 0x101010100D0D0D0DLL;
      v593 = xmmword_22467F560;
      v594 = (__int128)xmmword_22467F570;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 1, 7, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x139000000F9), xmmword_22467F570);
      if (((v275 | v485) & 1) == 0)
      {
        v595 = v545;
        v596 = v546;
        v597 = v547;
        v593 = v543;
        v594 = v544;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467F580;
        v589 = (__int128)xmmword_22467F590;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 1, 7, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x139000000F9), xmmword_22467F590);
        v291 = (v455 & 1) == 0 && ((v274 | v479) & 1) == 0;
        if ((v458 & 1) == 0 && v291)
        {
          v590 = v545;
          v591 = v546;
          v592 = v547;
          v589 = v544;
          v588 = v543;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467F5A0;
          v584 = (__int128)xmmword_22467F5B0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 1, 7, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xB9000000F9), xmmword_22467F5B0);
        }
      }
      v292 = (v276 & 1) == 0 && ((v274 | v479) & 1) == 0;
      if (v292 && (v277 & 1) == 0)
      {
        v585 = v530;
        v586 = v531;
        v587 = v532;
        v584 = v529;
        v583 = v528;
        *(_QWORD *)&v573 = 0x10100D0D10100D0DLL;
        v578 = xmmword_22467F5C0;
        v579 = (__int128)xmmword_22467F5D0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 1, 7, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xB9000000F9), xmmword_22467F5D0);
      }
    }
    if (((v485 | v469) & 1) == 0)
    {
      v580 = v530;
      v581 = v531;
      v582 = v532;
      v579 = v529;
      v578 = v528;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467F5E0;
      v574 = (__int128)xmmword_22467F5F0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 1, 7, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x139000000F9), xmmword_22467F5F0);
      v293 = (v283 & 0x40000000) == 0 && ((v479 | v290) & 1) == 0;
      if ((v455 & 1) == 0 && v293)
      {
        v575 = v530;
        v576 = v531;
        v577 = v532;
        v574 = v529;
        v573 = v528;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467F600;
        v569 = (__int128)xmmword_22467F610;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 1, 7, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xB9000000F9), xmmword_22467F610);
      }
    }
    v294 = (v277 & 1) == 0 && ((v479 | v290) & 1) == 0;
    if (v294 && (v465 & 1) == 0)
    {
      v570 = v530;
      v571 = v531;
      v572 = v532;
      v569 = v529;
      v568 = v528;
      *(_QWORD *)&v558 = 0x101010100D0D0D0DLL;
      v563 = xmmword_22467F620;
      v564 = xmmword_22467F630;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 1, 7, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0xB9000000F9), xmmword_22467F630);
    }
  }
  v295 = *((_DWORD *)v228 + 179);
  if (**v499)
  {
    v296 = *((_DWORD *)v228 + 243);
    v297 = *((_DWORD *)v228 + 187);
    v495 = *((_DWORD *)v228 + 251);
    v298 = v507[16];
    if ((v298 & 0x80000000) == 0)
      goto LABEL_767;
LABEL_1061:
    v300 = *(_DWORD *)(v229 + 804);
    if (**v504)
      goto LABEL_777;
    goto LABEL_771;
  }
  if ((v295 & 0x10000000) != 0)
    v389 = 0x40000000;
  else
    v389 = 0x80000000;
  if ((v295 & 0x20000000) != 0)
    v295 = v389;
  else
    v295 &= 0xCFFFFFFF;
  v390 = *((_DWORD *)v228 + 243);
  if ((v390 & 0x10000000) != 0)
    v391 = 0x40000000;
  else
    v391 = 0x80000000;
  if ((v390 & 0x20000000) != 0)
    v296 = v391;
  else
    v296 = v390 & 0xCFFFFFFF;
  v392 = *((_DWORD *)v228 + 187);
  if ((v392 & 0x10000000) != 0)
    v393 = 0x40000000;
  else
    v393 = 0x80000000;
  if ((v392 & 0x20000000) != 0)
    v297 = v393;
  else
    v297 = v392 & 0xCFFFFFFF;
  v394 = *((_DWORD *)v228 + 251);
  if ((v394 & 0x10000000) != 0)
    v395 = 0x40000000;
  else
    v395 = 0x80000000;
  if ((v394 & 0x20000000) != 0)
    v396 = v395;
  else
    v396 = v394 & 0xCFFFFFFF;
  v495 = v396;
  v298 = v507[16];
  if ((v298 & 0x80000000) != 0)
    goto LABEL_1061;
LABEL_767:
  v299 = *(_QWORD *)(v229 + 2328);
  if (v298 >= (*(_QWORD *)(v229 + 2336) - v299) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v299 = *(_QWORD *)(v229 + 2328);
  }
  v300 = *(_DWORD *)(v299 + (v298 << 11) + 524);
  if (!**v504)
  {
LABEL_771:
    if ((v300 & 0x10000000) != 0)
      v301 = 0x40000000;
    else
      v301 = 0x80000000;
    if ((v300 & 0x20000000) != 0)
      v300 = v301;
    else
      v300 &= 0xCFFFFFFF;
  }
LABEL_777:
  v446 = v295 >> 30;
  v302 = v296 >> 30;
  v303 = v297 >> 30;
  v459 = v300 >> 30;
  if ((v474 & 0x40000000) != 0)
  {
    v540 = v520;
    v541 = v521;
    v542 = v522;
    v539 = v519;
    v538 = v518;
    *(_QWORD *)&v593 = 0x10100D0D10100D0DLL;
    v533 = xmmword_22467F640;
    v534 = (__int128)xmmword_22467F650;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 2, 7, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x13A000000FALL), xmmword_22467F650);
    if ((v490 & 0x40000000) == 0)
    {
      v535 = v520;
      v536 = v521;
      v537 = v522;
      v534 = v519;
      v533 = v518;
      *(_QWORD *)&v588 = 0x101010100D0D0D0DLL;
      v593 = xmmword_22467F660;
      v594 = (__int128)xmmword_22467F670;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 2, 7, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x13A000000FALL), xmmword_22467F670);
      if (((v485 | v469) & 1) == 0)
      {
        v595 = v520;
        v596 = v521;
        v597 = v522;
        v593 = v518;
        v594 = v519;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467F680;
        v589 = (__int128)xmmword_22467F690;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 2, 7, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x13A000000FALL), xmmword_22467F690);
        v304 = (v449 & 1) == 0 && ((v479 | v290) & 1) == 0;
        if ((v455 & 1) == 0 && v304)
        {
          v590 = v520;
          v591 = v521;
          v592 = v522;
          v589 = v519;
          v588 = v518;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467F6A0;
          v584 = (__int128)xmmword_22467F6B0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 2, 7, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xBA000000FALL), xmmword_22467F6B0);
        }
      }
      v305 = (v277 & 1) == 0 && ((v479 | v290) & 1) == 0;
      if (v305 && (v465 & 1) == 0)
      {
        v585 = v520;
        v586 = v521;
        v587 = v522;
        v584 = v519;
        v583 = v518;
        *(_QWORD *)&v573 = 0x10100D0D10100D0DLL;
        v578 = xmmword_22467F6C0;
        v579 = (__int128)xmmword_22467F6D0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 2, 7, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xBA000000FALL), xmmword_22467F6D0);
      }
    }
    if (((v469 | v302) & 1) == 0)
    {
      v580 = v520;
      v581 = v521;
      v582 = v522;
      v579 = v519;
      v578 = v518;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467F6E0;
      v574 = (__int128)xmmword_22467F6F0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 2, 7, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x13A000000FALL), xmmword_22467F6F0);
      v306 = (v446 & 1) == 0 && ((v290 | v303) & 1) == 0;
      if ((v449 & 1) == 0 && v306)
      {
        v575 = v520;
        v576 = v521;
        v577 = v522;
        v574 = v519;
        v573 = v518;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467F700;
        v569 = (__int128)xmmword_22467F710;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 2, 7, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xBA000000FALL), xmmword_22467F710);
      }
    }
    v307 = (v465 & 1) == 0 && ((v290 | v303) & 1) == 0;
    if (v307 && (v459 & 1) == 0)
    {
      v570 = v520;
      v571 = v521;
      v572 = v522;
      v569 = v519;
      v568 = v518;
      *(_QWORD *)&v558 = 0x101010100D0D0D0DLL;
      v563 = xmmword_22467F720;
      v564 = xmmword_22467F730;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 2, 7, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0xBA000000FALL), xmmword_22467F730);
    }
  }
  v308 = *((_DWORD *)v228 + 180);
  if (**v499)
  {
    v309 = *((_DWORD *)v228 + 244);
    v310 = *((_DWORD *)v228 + 188);
    v491 = *((_DWORD *)v228 + 252);
    v311 = v507[16];
    if ((v311 & 0x80000000) == 0)
      goto LABEL_807;
LABEL_1088:
    v313 = *(_DWORD *)(v229 + 808);
    if (**v504)
      goto LABEL_817;
    goto LABEL_811;
  }
  if ((v308 & 0x10000000) != 0)
    v397 = 0x40000000;
  else
    v397 = 0x80000000;
  if ((v308 & 0x20000000) != 0)
    v308 = v397;
  else
    v308 &= 0xCFFFFFFF;
  v398 = *((_DWORD *)v228 + 244);
  if ((v398 & 0x10000000) != 0)
    v399 = 0x40000000;
  else
    v399 = 0x80000000;
  if ((v398 & 0x20000000) != 0)
    v309 = v399;
  else
    v309 = v398 & 0xCFFFFFFF;
  v400 = *((_DWORD *)v228 + 188);
  if ((v400 & 0x10000000) != 0)
    v401 = 0x40000000;
  else
    v401 = 0x80000000;
  if ((v400 & 0x20000000) != 0)
    v310 = v401;
  else
    v310 = v400 & 0xCFFFFFFF;
  v402 = *((_DWORD *)v228 + 252);
  if ((v402 & 0x10000000) != 0)
    v403 = 0x40000000;
  else
    v403 = 0x80000000;
  if ((v402 & 0x20000000) != 0)
    v404 = v403;
  else
    v404 = v402 & 0xCFFFFFFF;
  v491 = v404;
  v311 = v507[16];
  if ((v311 & 0x80000000) != 0)
    goto LABEL_1088;
LABEL_807:
  v312 = *(_QWORD *)(v229 + 2328);
  if (v311 >= (*(_QWORD *)(v229 + 2336) - v312) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v312 = *(_QWORD *)(v229 + 2328);
  }
  v313 = *(_DWORD *)(v312 + (v311 << 11) + 528);
  if (!**v504)
  {
LABEL_811:
    if ((v313 & 0x10000000) != 0)
      v314 = 0x40000000;
    else
      v314 = 0x80000000;
    if ((v313 & 0x20000000) != 0)
      v313 = v314;
    else
      v313 &= 0xCFFFFFFF;
  }
LABEL_817:
  v443 = v308 >> 30;
  v315 = v309 >> 30;
  v316 = v310 >> 30;
  v456 = v313 >> 30;
  if ((v495 & 0x40000000) != 0)
  {
    v540 = v520;
    v541 = v521;
    v542 = v522;
    v539 = v519;
    v538 = v518;
    *(_QWORD *)&v593 = 0x10100D0D10100D0DLL;
    v533 = xmmword_22467F740;
    v534 = (__int128)xmmword_22467F750;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 3, 7, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x13B000000FBLL), xmmword_22467F750);
    if ((v474 & 0x40000000) == 0)
    {
      v535 = v520;
      v536 = v521;
      v537 = v522;
      v534 = v519;
      v533 = v518;
      *(_QWORD *)&v588 = 0x101010100D0D0D0DLL;
      v593 = xmmword_22467F760;
      v594 = (__int128)xmmword_22467F770;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 3, 7, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x13B000000FBLL), xmmword_22467F770);
      if (((v469 | v302) & 1) == 0)
      {
        v595 = v520;
        v596 = v521;
        v597 = v522;
        v593 = v518;
        v594 = v519;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467F780;
        v589 = (__int128)xmmword_22467F790;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 3, 7, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x13B000000FBLL), xmmword_22467F790);
        v317 = (v446 & 1) == 0 && ((v290 | v303) & 1) == 0;
        if ((v449 & 1) == 0 && v317)
        {
          v590 = v520;
          v591 = v521;
          v592 = v522;
          v589 = v519;
          v588 = v518;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467F7A0;
          v584 = (__int128)xmmword_22467F7B0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 3, 7, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xBB000000FBLL), xmmword_22467F7B0);
        }
      }
      v318 = (v465 & 1) == 0 && ((v290 | v303) & 1) == 0;
      if (v318 && (v459 & 1) == 0)
      {
        v585 = v520;
        v586 = v521;
        v587 = v522;
        v584 = v519;
        v583 = v518;
        *(_QWORD *)&v573 = 0x10100D0D10100D0DLL;
        v578 = xmmword_22467F7C0;
        v579 = (__int128)xmmword_22467F7D0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 3, 7, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xBB000000FBLL), xmmword_22467F7D0);
      }
    }
    if (((v302 | v315) & 1) == 0)
    {
      v580 = v520;
      v581 = v521;
      v582 = v522;
      v579 = v519;
      v578 = v518;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467F7E0;
      v574 = (__int128)xmmword_22467F7F0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 3, 7, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x13B000000FBLL), xmmword_22467F7F0);
      v319 = (v308 & 0x40000000) == 0 && ((v303 | v316) & 1) == 0;
      if ((v446 & 1) == 0 && v319)
      {
        v575 = v520;
        v576 = v521;
        v577 = v522;
        v574 = v519;
        v573 = v518;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467F800;
        v569 = (__int128)xmmword_22467F810;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 3, 7, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xBB000000FBLL), xmmword_22467F810);
      }
    }
    v320 = (v459 & 1) == 0 && ((v303 | v316) & 1) == 0;
    if (v320 && (v456 & 1) == 0)
    {
      v570 = v520;
      v571 = v521;
      v572 = v522;
      v569 = v519;
      v568 = v518;
      *(_QWORD *)&v558 = 0x101010100D0D0D0DLL;
      v563 = xmmword_22467F820;
      v564 = xmmword_22467F830;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 3, 7, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0xBB000000FBLL), xmmword_22467F830);
    }
  }
  v321 = *((_DWORD *)v228 + 181);
  if (**v499)
  {
    v322 = *((_DWORD *)v228 + 245);
    v323 = *((_DWORD *)v228 + 189);
    v486 = *((_DWORD *)v228 + 253);
    v324 = v507[16];
    if ((v324 & 0x80000000) == 0)
      goto LABEL_847;
LABEL_1115:
    v326 = *(_DWORD *)(v229 + 812);
    if (**v504)
      goto LABEL_857;
    goto LABEL_851;
  }
  if ((v321 & 0x10000000) != 0)
    v405 = 0x40000000;
  else
    v405 = 0x80000000;
  if ((v321 & 0x20000000) != 0)
    v321 = v405;
  else
    v321 &= 0xCFFFFFFF;
  v406 = *((_DWORD *)v228 + 245);
  if ((v406 & 0x10000000) != 0)
    v407 = 0x40000000;
  else
    v407 = 0x80000000;
  if ((v406 & 0x20000000) != 0)
    v322 = v407;
  else
    v322 = v406 & 0xCFFFFFFF;
  v408 = *((_DWORD *)v228 + 189);
  if ((v408 & 0x10000000) != 0)
    v409 = 0x40000000;
  else
    v409 = 0x80000000;
  if ((v408 & 0x20000000) != 0)
    v323 = v409;
  else
    v323 = v408 & 0xCFFFFFFF;
  v410 = *((_DWORD *)v228 + 253);
  if ((v410 & 0x10000000) != 0)
    v411 = 0x40000000;
  else
    v411 = 0x80000000;
  if ((v410 & 0x20000000) != 0)
    v412 = v411;
  else
    v412 = v410 & 0xCFFFFFFF;
  v486 = v412;
  v324 = v507[16];
  if ((v324 & 0x80000000) != 0)
    goto LABEL_1115;
LABEL_847:
  v325 = *(_QWORD *)(v229 + 2328);
  if (v324 >= (*(_QWORD *)(v229 + 2336) - v325) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v325 = *(_QWORD *)(v229 + 2328);
  }
  v326 = *(_DWORD *)(v325 + (v324 << 11) + 532);
  if (!**v504)
  {
LABEL_851:
    if ((v326 & 0x10000000) != 0)
      v327 = 0x40000000;
    else
      v327 = 0x80000000;
    if ((v326 & 0x20000000) != 0)
      v326 = v327;
    else
      v326 &= 0xCFFFFFFF;
  }
LABEL_857:
  v450 = v321 >> 30;
  v480 = v322 >> 30;
  v328 = v323 >> 30;
  v466 = v326 >> 30;
  if ((v491 & 0x40000000) != 0)
  {
    v540 = v520;
    v541 = v521;
    v542 = v522;
    v539 = v519;
    v538 = v518;
    *(_QWORD *)&v593 = 0x10100D0D10100D0DLL;
    v533 = xmmword_22467F840;
    v534 = (__int128)xmmword_22467F850;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 4, 7, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x13C000000FCLL), xmmword_22467F850);
    if ((v495 & 0x40000000) == 0)
    {
      v535 = v520;
      v536 = v521;
      v537 = v522;
      v534 = v519;
      v533 = v518;
      *(_QWORD *)&v588 = 0x101010100D0D0D0DLL;
      v593 = xmmword_22467F860;
      v594 = (__int128)xmmword_22467F870;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 4, 7, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x13C000000FCLL), xmmword_22467F870);
      v329 = ((v303 | v316) & 1) == 0;
      if (((v302 | v315) & 1) == 0)
      {
        v595 = v520;
        v596 = v521;
        v597 = v522;
        v593 = v518;
        v594 = v519;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467F880;
        v589 = (__int128)xmmword_22467F890;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 4, 7, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x13C000000FCLL), xmmword_22467F890);
        v330 = (v443 & 1) == 0 && v329;
        if ((v446 & 1) == 0 && v330)
        {
          v590 = v520;
          v591 = v521;
          v592 = v522;
          v589 = v519;
          v588 = v518;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467F8A0;
          v584 = (__int128)xmmword_22467F8B0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 4, 7, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xBC000000FCLL), xmmword_22467F8B0);
        }
      }
      v331 = (v459 & 1) == 0 && v329;
      if (v331 && (v456 & 1) == 0)
      {
        v585 = v520;
        v586 = v521;
        v587 = v522;
        v584 = v519;
        v583 = v518;
        *(_QWORD *)&v573 = 0x10100D0D10100D0DLL;
        v578 = xmmword_22467F8C0;
        v579 = (__int128)xmmword_22467F8D0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 4, 7, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xBC000000FCLL), xmmword_22467F8D0);
      }
    }
    if (((v315 | v480) & 1) == 0)
    {
      v580 = v520;
      v581 = v521;
      v582 = v522;
      v579 = v519;
      v578 = v518;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467F8E0;
      v574 = (__int128)xmmword_22467F8F0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 4, 7, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x13C000000FCLL), xmmword_22467F8F0);
      v332 = (v321 & 0x40000000) == 0 && ((v316 | v328) & 1) == 0;
      if ((v443 & 1) == 0 && v332)
      {
        v575 = v520;
        v576 = v521;
        v577 = v522;
        v574 = v519;
        v573 = v518;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467F900;
        v569 = (__int128)xmmword_22467F910;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 4, 7, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xBC000000FCLL), xmmword_22467F910);
      }
    }
    v333 = (v456 & 1) == 0 && ((v316 | v328) & 1) == 0;
    if (v333 && (v466 & 1) == 0)
    {
      v570 = v520;
      v571 = v521;
      v572 = v522;
      v569 = v519;
      v568 = v518;
      *(_QWORD *)&v558 = 0x101010100D0D0D0DLL;
      v563 = xmmword_22467F920;
      v564 = xmmword_22467F930;
      *(_QWORD *)&v553 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 4, 7, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v553, COERCE_DOUBLE(0xBC000000FCLL), xmmword_22467F930);
    }
  }
  v334 = *((_DWORD *)v228 + 182);
  if (**v499)
  {
    v335 = *((_DWORD *)v228 + 246);
    v336 = *((_DWORD *)v228 + 190);
    v496 = *((_DWORD *)v228 + 254);
    v337 = v507[16];
    if ((v337 & 0x80000000) == 0)
      goto LABEL_887;
LABEL_1142:
    v339 = *(_DWORD *)(v229 + 816);
    if (**v504)
      goto LABEL_897;
    goto LABEL_891;
  }
  if ((v334 & 0x10000000) != 0)
    v413 = 0x40000000;
  else
    v413 = 0x80000000;
  if ((v334 & 0x20000000) != 0)
    v334 = v413;
  else
    v334 &= 0xCFFFFFFF;
  v414 = *((_DWORD *)v228 + 246);
  if ((v414 & 0x10000000) != 0)
    v415 = 0x40000000;
  else
    v415 = 0x80000000;
  if ((v414 & 0x20000000) != 0)
    v335 = v415;
  else
    v335 = v414 & 0xCFFFFFFF;
  v416 = *((_DWORD *)v228 + 190);
  if ((v416 & 0x10000000) != 0)
    v417 = 0x40000000;
  else
    v417 = 0x80000000;
  if ((v416 & 0x20000000) != 0)
    v336 = v417;
  else
    v336 = v416 & 0xCFFFFFFF;
  v418 = *((_DWORD *)v228 + 254);
  if ((v418 & 0x10000000) != 0)
    v419 = 0x40000000;
  else
    v419 = 0x80000000;
  if ((v418 & 0x20000000) != 0)
    v420 = v419;
  else
    v420 = v418 & 0xCFFFFFFF;
  v496 = v420;
  v337 = v507[16];
  if ((v337 & 0x80000000) != 0)
    goto LABEL_1142;
LABEL_887:
  v338 = *(_QWORD *)(v229 + 2328);
  if (v337 >= (*(_QWORD *)(v229 + 2336) - v338) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v338 = *(_QWORD *)(v229 + 2328);
  }
  v339 = *(_DWORD *)(v338 + (v337 << 11) + 536);
  if (!**v504)
  {
LABEL_891:
    if ((v339 & 0x10000000) != 0)
      v340 = 0x40000000;
    else
      v340 = 0x80000000;
    if ((v339 & 0x20000000) != 0)
      v339 = v340;
    else
      v339 &= 0xCFFFFFFF;
  }
LABEL_897:
  v460 = v334 >> 30;
  v470 = v336 >> 30;
  v475 = v335 >> 30;
  v341 = v339 >> 30;
  v555 = v520;
  v556 = v521;
  v557 = v522;
  v554 = v519;
  v553 = v518;
  if ((v486 & 0x40000000) != 0)
  {
    v540 = v520;
    v541 = v521;
    v542 = v522;
    v539 = v519;
    v538 = v518;
    *(_QWORD *)&v593 = 0x10100D0D10100D0DLL;
    v533 = xmmword_22467F940;
    v534 = (__int128)xmmword_22467F950;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 5, 7, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x13D000000FDLL), xmmword_22467F950);
    if ((v491 & 0x40000000) == 0)
    {
      v535 = v520;
      v536 = v521;
      v537 = v522;
      v534 = v519;
      v533 = v518;
      *(_QWORD *)&v588 = 0x101010100D0D0D0DLL;
      v593 = xmmword_22467F960;
      v594 = (__int128)xmmword_22467F970;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 5, 7, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x13D000000FDLL), xmmword_22467F970);
      if (((v315 | v480) & 1) == 0)
      {
        v595 = v520;
        v596 = v521;
        v597 = v522;
        v593 = v518;
        v594 = v519;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467F980;
        v589 = (__int128)xmmword_22467F990;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 5, 7, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x13D000000FDLL), xmmword_22467F990);
        v342 = (v450 & 1) == 0 && ((v316 | v328) & 1) == 0;
        if ((v443 & 1) == 0 && v342)
        {
          v590 = v520;
          v591 = v521;
          v592 = v522;
          v589 = v519;
          v588 = v518;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467F9A0;
          v584 = (__int128)xmmword_22467F9B0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 5, 7, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xBD000000FDLL), xmmword_22467F9B0);
        }
      }
      v343 = (v456 & 1) == 0 && ((v316 | v328) & 1) == 0;
      if (v343 && (v466 & 1) == 0)
      {
        v585 = v555;
        v586 = v556;
        v587 = v557;
        v584 = v554;
        v583 = v553;
        *(_QWORD *)&v573 = 0x10100D0D10100D0DLL;
        v578 = xmmword_22467F9C0;
        v579 = (__int128)xmmword_22467F9D0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 5, 7, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xBD000000FDLL), xmmword_22467F9D0);
      }
    }
    if (((v480 | v475) & 1) == 0)
    {
      v580 = v555;
      v581 = v556;
      v582 = v557;
      v579 = v554;
      v578 = v553;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467F9E0;
      v574 = (__int128)xmmword_22467F9F0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 5, 7, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x13D000000FDLL), xmmword_22467F9F0);
      v344 = (v334 & 0x40000000) == 0 && ((v328 | v470) & 1) == 0;
      if ((v450 & 1) == 0 && v344)
      {
        v575 = v555;
        v576 = v556;
        v577 = v557;
        v574 = v554;
        v573 = v553;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467FA00;
        v569 = (__int128)xmmword_22467FA10;
        *(_QWORD *)&v558 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 5, 7, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)&v558, COERCE_DOUBLE(0xBD000000FDLL), xmmword_22467FA10);
      }
    }
    v345 = (v466 & 1) == 0 && ((v328 | v470) & 1) == 0;
    if (v345 && (v341 & 1) == 0)
    {
      v570 = v555;
      v571 = v556;
      v572 = v557;
      v569 = v554;
      v568 = v553;
      *(_QWORD *)&v558 = 0x101010100D0D0D0DLL;
      v563 = xmmword_22467FA20;
      v564 = xmmword_22467FA30;
      *(_QWORD *)&v548 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 5, 7, 3, (uint64_t)&v558, (uint64_t)&v563, (uint64_t)&v548, COERCE_DOUBLE(0xBD000000FDLL), xmmword_22467FA30);
    }
  }
  v550 = v520;
  v551 = v521;
  v552 = v522;
  v549 = v519;
  v548 = v518;
  v346 = *((_DWORD *)v228 + 183);
  if (**v499)
  {
    v347 = *((_DWORD *)v228 + 247);
    v348 = *((_DWORD *)v228 + 191);
    v349 = *((_DWORD *)v228 + 255);
    v350 = v507[16];
    if ((v350 & 0x80000000) == 0)
      goto LABEL_927;
LABEL_1169:
    v352 = *(_DWORD *)(v229 + 820);
    if (**v504)
      goto LABEL_937;
    goto LABEL_931;
  }
  if ((v346 & 0x10000000) != 0)
    v421 = 0x40000000;
  else
    v421 = 0x80000000;
  if ((v346 & 0x20000000) != 0)
    v346 = v421;
  else
    v346 &= 0xCFFFFFFF;
  v422 = *((_DWORD *)v228 + 247);
  if ((v422 & 0x10000000) != 0)
    v423 = 0x40000000;
  else
    v423 = 0x80000000;
  if ((v422 & 0x20000000) != 0)
    v347 = v423;
  else
    v347 = v422 & 0xCFFFFFFF;
  v424 = *((_DWORD *)v228 + 191);
  if ((v424 & 0x10000000) != 0)
    v425 = 0x40000000;
  else
    v425 = 0x80000000;
  if ((v424 & 0x20000000) != 0)
    v348 = v425;
  else
    v348 = v424 & 0xCFFFFFFF;
  v426 = *((_DWORD *)v228 + 255);
  if ((v426 & 0x10000000) != 0)
    v427 = 0x40000000;
  else
    v427 = 0x80000000;
  if ((v426 & 0x20000000) != 0)
    v349 = v427;
  else
    v349 = v426 & 0xCFFFFFFF;
  v350 = v507[16];
  if ((v350 & 0x80000000) != 0)
    goto LABEL_1169;
LABEL_927:
  v351 = *(_QWORD *)(v229 + 2328);
  if (v350 >= (*(_QWORD *)(v229 + 2336) - v351) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v351 = *(_QWORD *)(v229 + 2328);
  }
  v352 = *(_DWORD *)(v351 + (v350 << 11) + 540);
  if (!**v504)
  {
LABEL_931:
    if ((v352 & 0x10000000) != 0)
      v353 = 0x40000000;
    else
      v353 = 0x80000000;
    if ((v352 & 0x20000000) != 0)
      v352 = v353;
    else
      v352 &= 0xCFFFFFFF;
  }
LABEL_937:
  v492 = v346 >> 30;
  v354 = v347 >> 30;
  v355 = v348 >> 30;
  v500 = v352 >> 30;
  v560 = v520;
  v561 = v521;
  v562 = v522;
  v559 = v519;
  v558 = v518;
  if ((v496 & 0x40000000) != 0)
  {
    v540 = v520;
    v541 = v521;
    v542 = v522;
    v539 = v519;
    v538 = v518;
    *(_QWORD *)&v593 = 0x10100D0D10100D0DLL;
    v533 = xmmword_22467FA40;
    v534 = (__int128)xmmword_22467FA50;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 6, 7, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x13E000000FELL), xmmword_22467FA50);
    if ((v486 & 0x40000000) == 0)
    {
      v535 = v520;
      v536 = v521;
      v537 = v522;
      v534 = v519;
      v533 = v518;
      *(_QWORD *)&v588 = 0x101010100D0D0D0DLL;
      v593 = xmmword_22467FA60;
      v594 = (__int128)xmmword_22467FA70;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 6, 7, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x13E000000FELL), xmmword_22467FA70);
      if (((v480 | v475) & 1) == 0)
      {
        v595 = v520;
        v596 = v521;
        v597 = v522;
        v593 = v518;
        v594 = v519;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467FA80;
        v589 = (__int128)xmmword_22467FA90;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 6, 7, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x13E000000FELL), xmmword_22467FA90);
        v356 = (v460 & 1) == 0 && ((v328 | v470) & 1) == 0;
        if ((v450 & 1) == 0 && v356)
        {
          v590 = v520;
          v591 = v521;
          v592 = v522;
          v589 = v519;
          v588 = v518;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467FAA0;
          v584 = (__int128)xmmword_22467FAB0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 6, 7, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xBE000000FELL), xmmword_22467FAB0);
        }
      }
      v357 = (v466 & 1) == 0 && ((v328 | v470) & 1) == 0;
      if (v357 && (v341 & 1) == 0)
      {
        v585 = v560;
        v586 = v561;
        v587 = v562;
        v584 = v559;
        v583 = v558;
        *(_QWORD *)&v573 = 0x10100D0D10100D0DLL;
        v578 = xmmword_22467FAC0;
        v579 = (__int128)xmmword_22467FAD0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 6, 7, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xBE000000FELL), xmmword_22467FAD0);
      }
    }
    if (((v475 | v354) & 1) == 0)
    {
      v580 = v560;
      v581 = v561;
      v582 = v562;
      v579 = v559;
      v578 = v558;
      *(_QWORD *)&v568 = 0xD0D0D0D0D0D0D0DLL;
      v573 = xmmword_22467FAE0;
      v574 = (__int128)xmmword_22467FAF0;
      *(_QWORD *)&v563 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 6, 7, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)&v563, COERCE_DOUBLE(0x13E000000FELL), xmmword_22467FAF0);
      v358 = (v346 & 0x40000000) == 0 && ((v470 | v355) & 1) == 0;
      if ((v460 & 1) == 0 && v358)
      {
        v575 = v560;
        v576 = v561;
        v577 = v562;
        v574 = v559;
        v573 = v558;
        *(_QWORD *)&v563 = 0xD0D0D0D0D0D0D0DLL;
        v568 = xmmword_22467FB00;
        v569 = (__int128)xmmword_22467FB10;
        *(_QWORD *)&v599[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 6, 7, 3, (uint64_t)&v563, (uint64_t)&v568, (uint64_t)v599, COERCE_DOUBLE(0xBE000000FELL), xmmword_22467FB10);
      }
    }
    v359 = (v341 & 1) == 0 && ((v470 | v355) & 1) == 0;
    if (v359 && (v500 & 1) == 0)
    {
      v570 = v560;
      v571 = v561;
      v572 = v562;
      v569 = v559;
      v568 = v558;
      *(_QWORD *)&v599[0] = 0x101010100D0D0D0DLL;
      v563 = xmmword_22467FB20;
      v564 = xmmword_22467FB30;
      v600[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 6, 7, 3, (uint64_t)v599, (uint64_t)&v563, (uint64_t)v600, COERCE_DOUBLE(0xBE000000FELL), xmmword_22467FB30);
    }
  }
  v360 = v507[22];
  if ((v360 & 0x80000000) != 0)
  {
    v363 = *v504;
    v364 = *(_DWORD *)(v229 + 984);
    v365 = **v504;
    if (**v504)
      goto LABEL_970;
  }
  else
  {
    v361 = *(_QWORD *)(v229 + 2328);
    if (v360 >= (*(_QWORD *)(v229 + 2336) - v361) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v361 = *(_QWORD *)(v229 + 2328);
    }
    v362 = v361 + (v360 << 11);
    v363 = *v504;
    v364 = *(_DWORD *)(v362 + 704);
    v365 = **v504;
    if (**v504)
    {
LABEL_970:
      v366 = v507[22];
      if ((v366 & 0x80000000) == 0)
        goto LABEL_971;
LABEL_1179:
      v368 = *(_DWORD *)(v229 + 1240);
      if (v365)
        goto LABEL_975;
      goto LABEL_1180;
    }
  }
  if ((v364 & 0x10000000) != 0)
    v428 = 0x40000000;
  else
    v428 = 0x80000000;
  if ((v364 & 0x20000000) != 0)
    v364 = v428;
  else
    v364 &= 0xCFFFFFFF;
  v366 = v507[22];
  if ((v366 & 0x80000000) != 0)
    goto LABEL_1179;
LABEL_971:
  v367 = *(_QWORD *)(v229 + 2328);
  if (v366 >= (*(_QWORD *)(v229 + 2336) - v367) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v367 = *(_QWORD *)(v229 + 2328);
    v363 = *v504;
    v365 = **v504;
  }
  v368 = *(_DWORD *)(v367 + (v366 << 11) + 960);
  if (v365)
  {
LABEL_975:
    v369 = v507[22];
    if ((v369 & 0x80000000) == 0)
      goto LABEL_976;
LABEL_1187:
    v371 = *(_DWORD *)(v229 + 1016);
    if (v365)
      goto LABEL_980;
LABEL_1188:
    if ((v371 & 0x10000000) != 0)
      v430 = 0x40000000;
    else
      v430 = 0x80000000;
    if ((v371 & 0x20000000) != 0)
      v371 = v430;
    else
      v371 &= 0xCFFFFFFF;
    v372 = v507[22];
    if ((v372 & 0x80000000) != 0)
      goto LABEL_1198;
    goto LABEL_1195;
  }
LABEL_1180:
  if ((v368 & 0x10000000) != 0)
    v429 = 0x40000000;
  else
    v429 = 0x80000000;
  if ((v368 & 0x20000000) != 0)
    v368 = v429;
  else
    v368 &= 0xCFFFFFFF;
  v369 = v507[22];
  if ((v369 & 0x80000000) != 0)
    goto LABEL_1187;
LABEL_976:
  v370 = *(_QWORD *)(v229 + 2328);
  if (v369 >= (*(_QWORD *)(v229 + 2336) - v370) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v370 = *(_QWORD *)(v229 + 2328);
    v363 = *v504;
    v365 = **v504;
  }
  v371 = *(_DWORD *)(v370 + (v369 << 11) + 736);
  if (!v365)
    goto LABEL_1188;
LABEL_980:
  v372 = v507[22];
  if ((v372 & 0x80000000) != 0)
    goto LABEL_1198;
LABEL_1195:
  if (v372 >= (uint64_t)(*(_QWORD *)(v229 + 2336) - *(_QWORD *)(v229 + 2328)) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v363 = *v504;
  }
LABEL_1198:
  v431 = v507[25];
  if ((v431 & 0x80000000) != 0)
  {
    v433 = *(_DWORD *)(v229 + 792);
    if (*v363)
      goto LABEL_1209;
    goto LABEL_1203;
  }
  v432 = *(_QWORD *)(v229 + 2328);
  if (v431 >= (*(_QWORD *)(v229 + 2336) - v432) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v432 = *(_QWORD *)(v229 + 2328);
    v363 = *v504;
  }
  v433 = *(_DWORD *)(v432 + (v431 << 11) + 512);
  if (!*v363)
  {
LABEL_1203:
    if ((v433 & 0x10000000) != 0)
      v434 = 0x40000000;
    else
      v434 = 0x80000000;
    if ((v433 & 0x20000000) != 0)
      v433 = v434;
    else
      v433 &= 0xCFFFFFFF;
  }
LABEL_1209:
  v565 = v550;
  v566 = v551;
  v567 = v552;
  v564 = (float32x4_t)v549;
  v563 = v548;
  if ((v349 & 0x40000000) != 0)
  {
    v540 = v550;
    v541 = v551;
    v542 = v552;
    *(_QWORD *)&v593 = 0x1919161610100D0DLL;
    v539 = v549;
    v538 = v548;
    v533 = xmmword_22467FB40;
    v534 = (__int128)xmmword_22467FB50;
    *(_QWORD *)&v588 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v538, 7, 7, 3, (uint64_t)&v593, (uint64_t)&v533, (uint64_t)&v588, COERCE_DOUBLE(0x13F000000FFLL), xmmword_22467FB50);
    if ((v496 & 0x40000000) == 0)
    {
      v535 = v550;
      v536 = v551;
      v537 = v552;
      *(_QWORD *)&v588 = 0x101010100D0D0D0DLL;
      v534 = v549;
      v533 = v548;
      v593 = xmmword_22467FB60;
      v594 = (__int128)xmmword_22467FB70;
      *(_QWORD *)&v583 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v533, 7, 7, 3, (uint64_t)&v588, (uint64_t)&v593, (uint64_t)&v583, COERCE_DOUBLE(0x13F000000FFLL), xmmword_22467FB70);
      if (((v475 | v354) & 1) == 0)
      {
        v595 = v550;
        v596 = v551;
        v597 = v552;
        v593 = v548;
        v594 = v549;
        *(_QWORD *)&v583 = 0xD0D0D0D0D0D0D0DLL;
        v588 = xmmword_22467FB80;
        v589 = (__int128)xmmword_22467FB90;
        *(_QWORD *)&v578 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v593, 7, 7, 3, (uint64_t)&v583, (uint64_t)&v588, (uint64_t)&v578, COERCE_DOUBLE(0x13F000000FFLL), xmmword_22467FB90);
        v435 = (v492 & 1) == 0 && ((v470 | v355) & 1) == 0;
        if ((v460 & 1) == 0 && v435)
        {
          v590 = v550;
          v591 = v551;
          v592 = v552;
          v589 = v549;
          v588 = v548;
          *(_QWORD *)&v578 = 0xD0D0D0D0D0D0D0DLL;
          v583 = xmmword_22467FBA0;
          v584 = (__int128)xmmword_22467FBB0;
          *(_QWORD *)&v573 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v588, 7, 7, 3, (uint64_t)&v578, (uint64_t)&v583, (uint64_t)&v573, COERCE_DOUBLE(0xBF000000FFLL), xmmword_22467FBB0);
        }
      }
      v436 = (v341 & 1) == 0 && ((v470 | v355) & 1) == 0;
      if (v436 && (v500 & 1) == 0)
      {
        v585 = v565;
        v586 = v566;
        v587 = v567;
        *(_QWORD *)&v573 = 0x10100D0D10100D0DLL;
        v584 = (__int128)v564;
        v583 = v563;
        v578 = xmmword_22467FBC0;
        v579 = (__int128)xmmword_22467FBD0;
        *(_QWORD *)&v568 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v583, 7, 7, 3, (uint64_t)&v573, (uint64_t)&v578, (uint64_t)&v568, COERCE_DOUBLE(0xBF000000FFLL), xmmword_22467FBD0);
      }
    }
    v437 = (v371 & 0x40000000 | v355 & 1) == 0;
    if (!(v368 & 0x40000000 | v354 & 1))
    {
      v580 = v565;
      v581 = v566;
      v582 = v567;
      *(_QWORD *)&v568 = 0x16160D0D16160D0DLL;
      v579 = (__int128)v564;
      v578 = v563;
      v573 = xmmword_22467FBE0;
      v574 = (__int128)xmmword_22467FBF0;
      *(_QWORD *)&v599[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v578, 7, 7, 3, (uint64_t)&v568, (uint64_t)&v573, (uint64_t)v599, COERCE_DOUBLE(0x13F000000FFLL), xmmword_22467FBF0);
      v438 = (v364 & 0x40000000) == 0 && v437;
      if ((v492 & 1) == 0 && v438)
      {
        v575 = v565;
        v576 = v566;
        v577 = v567;
        *(_QWORD *)&v599[0] = 0x161616160D0D0D0DLL;
        v574 = (__int128)v564;
        v573 = v563;
        v568 = xmmword_22467FC00;
        v569 = (__int128)xmmword_22467FC10;
        v600[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v573, 7, 7, 3, (uint64_t)v599, (uint64_t)&v568, (uint64_t)v600, COERCE_DOUBLE(0xBF000000FFLL), xmmword_22467FC10);
      }
    }
    v439 = (v500 & 1) == 0 && v437;
    if (v439 && (v433 & 0x40000000) == 0)
    {
      v570 = v565;
      v571 = v566;
      v572 = v567;
      v600[0] = 0x1919101016160D0DLL;
      v569 = (__int128)v564;
      v568 = v563;
      v599[0] = xmmword_22467FC20;
      v599[1] = xmmword_22467FC30;
      v598 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v568, 7, 7, 3, (uint64_t)v600, (uint64_t)v599, (uint64_t)&v598, COERCE_DOUBLE(0xBF000000FFLL), xmmword_22467FC30);
    }
  }
  v533 = v452;
  *(_QWORD *)&v534 = v228;
  *(_QWORD *)&v593 = v229;
  *((_QWORD *)&v593 + 1) = v507;
  *(_QWORD *)&v594 = v504;
  v542 = v512;
  v541 = v511;
  v540 = v510;
  v538 = v508;
  v539 = v509;
  return sub_223DF95A0((unsigned __int8 ***)&v533, (uint64_t *)&v593, &v538);
}

unint64_t sub_223DF95A0(unsigned __int8 ***a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v6;
  _BYTE **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  _BYTE **v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned __int8 **v23;
  unsigned __int8 **v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int *v32;
  int v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  _BYTE **v43;
  unint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  unsigned int v47;
  uint64_t v48;
  _BYTE **v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  unsigned int v53;
  uint64_t v54;
  _BYTE **v55;
  unint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  unsigned int v59;
  uint64_t v60;
  _BYTE **v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  unsigned int v66;
  _BYTE *v67;
  unsigned int v68;
  _BYTE *v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unint64_t v73;
  uint64_t v74;
  unsigned int v75;
  int v76;
  unint64_t v77;
  uint64_t v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned __int8 **v92;
  _BOOL4 v93;
  _BOOL4 v94;
  _BOOL4 v95;
  _BOOL4 v96;
  unint64_t v97;
  uint64_t v98;
  unsigned int v99;
  int v100;
  unint64_t v101;
  uint64_t v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  _BOOL4 v114;
  _BOOL4 v115;
  _BOOL4 v116;
  _BOOL4 v117;
  unint64_t v118;
  uint64_t v119;
  unsigned int v120;
  int v121;
  unint64_t v122;
  uint64_t v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  _BOOL4 v136;
  _BOOL4 v137;
  _BOOL4 v138;
  _BOOL4 v139;
  unint64_t v140;
  uint64_t v141;
  unsigned int v142;
  int v143;
  unint64_t v144;
  uint64_t v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  _BOOL4 v157;
  _BOOL4 v158;
  _BOOL4 v159;
  _BOOL4 v160;
  unint64_t v161;
  uint64_t v162;
  unsigned int v163;
  int v164;
  unint64_t v165;
  uint64_t v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  _BOOL4 v178;
  _BOOL4 v179;
  _BOOL4 v180;
  _BOOL4 v181;
  unint64_t v182;
  uint64_t v183;
  unsigned int v184;
  int v185;
  unint64_t v186;
  uint64_t v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  _BOOL4 v199;
  _BOOL4 v200;
  _BOOL4 v201;
  _BOOL4 v202;
  unint64_t v203;
  uint64_t v204;
  unsigned int v205;
  int v206;
  unint64_t v207;
  uint64_t v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  _BOOL4 v222;
  _BOOL4 v223;
  _BOOL4 v224;
  _BOOL4 v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _BYTE *v229;
  unsigned int v230;
  int v231;
  unint64_t v232;
  uint64_t v233;
  unsigned int v234;
  unint64_t v235;
  uint64_t v236;
  unsigned int v237;
  unint64_t v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  uint64_t v242;
  unint64_t v243;
  unsigned int v244;
  unsigned int v245;
  _BOOL4 v246;
  _BOOL4 v247;
  _BOOL4 v248;
  _BOOL4 v249;
  unsigned __int8 **v250;
  unsigned int v251;
  int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  unsigned int v267;
  unint64_t v268;
  uint64_t v269;
  unsigned int v270;
  int v271;
  unint64_t v272;
  uint64_t v273;
  unsigned int v274;
  unint64_t v275;
  uint64_t v276;
  unsigned int v277;
  unint64_t v278;
  uint64_t v279;
  unsigned int v280;
  unint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  _BOOL4 v302;
  _BOOL4 v303;
  _BOOL4 v304;
  _BOOL4 v305;
  _BOOL4 v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  _BOOL4 v321;
  _BOOL4 v322;
  _BOOL4 v323;
  _BOOL4 v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  _BOOL4 v340;
  _BOOL4 v341;
  _BOOL4 v342;
  _BOOL4 v343;
  _BOOL4 v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  unsigned int v359;
  _BOOL4 v360;
  _BOOL4 v361;
  _BOOL4 v362;
  _BOOL4 v363;
  _BOOL4 v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  _BOOL4 v380;
  _BOOL4 v381;
  _BOOL4 v382;
  _BOOL4 v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  int v396;
  _BOOL4 v397;
  _BOOL4 v398;
  _BOOL4 v399;
  _BOOL4 v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  int v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  int v411;
  unsigned int v412;
  int v413;
  unsigned int v414;
  unsigned int v415;
  _BOOL4 v416;
  _BOOL4 v417;
  _BOOL4 v418;
  _BOOL4 v419;
  unint64_t v420;
  uint64_t v421;
  uint64_t v422;
  _BYTE *v423;
  unsigned int v424;
  int v425;
  unint64_t v426;
  uint64_t v427;
  unsigned int v428;
  unint64_t v429;
  uint64_t v430;
  unsigned int v431;
  unint64_t v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  uint64_t v436;
  unint64_t v437;
  unsigned int v438;
  unsigned int v439;
  _BOOL4 v440;
  _BOOL4 v441;
  _BOOL4 v442;
  _BOOL4 v443;
  _BOOL4 v444;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  __int128 v465;
  unsigned __int8 ***v466;
  unsigned int v467;
  unsigned int v468;
  _OWORD *v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  uint64_t v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  int v496;
  unsigned int v497;
  unsigned int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  _BYTE **v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  unsigned int v507;
  unsigned __int8 **v508;
  unsigned int v509;
  int v510;
  unsigned int v511;
  unsigned int v512;
  uint64_t v513;
  _BYTE **v514;
  uint64_t v515;
  __int128 v516;
  float32x4_t v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  float32x4_t v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  float32x4_t v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  float32x4_t v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  float32x4_t v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  float32x4_t v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  float32x4_t v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  float32x4_t v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  float32x4_t v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  float32x4_t v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  float32x4_t v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  float32x4_t v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  float32x4_t v577;
  __int128 v578;
  __int128 v579;
  __int128 v580;
  __int128 v581;
  float32x4_t v582;
  __int128 v583;
  __int128 v584;
  __int128 v585;
  __int128 v586;
  float32x4_t v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  __int128 v591;
  float32x4_t v592;
  __int128 v593;
  __int128 v594;
  __int128 v595;
  __int128 v596;
  float32x4_t v597;
  __int128 v598;
  __int128 v599;
  __int128 v600;
  uint64_t v601;
  _OWORD v602[2];
  _QWORD v603[3];

  v603[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v7 = (_BYTE **)a2[2];
  v8 = *(unsigned int *)(a2[1] + 40);
  if ((v8 & 0x80000000) != 0)
  {
    v10 = v6 + 280;
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 2328);
    if (v8 >= (*(_QWORD *)(v6 + 2336) - v9) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v9 = *(_QWORD *)(v6 + 2328);
    }
    v10 = v9 + (v8 << 11);
  }
  v11 = *(_DWORD *)(v10 + 992);
  v12 = v11 & 0xCFFFFFFF;
  if ((v11 & 0x10000000) != 0)
    v13 = 0x40000000;
  else
    v13 = 0x80000000;
  if ((v11 & 0x20000000) != 0)
    v12 = v13;
  if (**v7)
    v14 = v11;
  else
    v14 = v12;
  v15 = *a2;
  v16 = (_BYTE **)a2[2];
  v17 = *(unsigned int *)(a2[1] + 40);
  v504 = v14;
  if ((v17 & 0x80000000) != 0)
  {
    v19 = v15 + 280;
  }
  else
  {
    v18 = *(_QWORD *)(v15 + 2328);
    if (v17 >= (*(_QWORD *)(v15 + 2336) - v18) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v18 = *(_QWORD *)(v15 + 2328);
    }
    v19 = v18 + (v17 << 11);
  }
  v20 = *(_DWORD *)(v19 + 1248);
  v21 = v20 & 0xCFFFFFFF;
  if ((v20 & 0x10000000) != 0)
    v22 = 0x40000000;
  else
    v22 = 0x80000000;
  if ((v20 & 0x20000000) != 0)
    v21 = v22;
  if (!**v16)
    v20 = v21;
  v499 = v20;
  v23 = a1[2];
  v24 = *a1;
  v25 = *((_DWORD *)v23 + 192);
  if (***a1)
  {
    v26 = *((_DWORD *)v23 + 256);
    v27 = *((_DWORD *)v23 + 200);
  }
  else
  {
    if ((v25 & 0x20000000) != 0)
      v25 *= 4;
    v28 = *((_DWORD *)v23 + 256);
    if ((v28 & 0x20000000) != 0)
      v26 = 4 * v28;
    else
      v26 = *((_DWORD *)v23 + 256);
    v29 = *((_DWORD *)v23 + 200);
    if ((v29 & 0x10000000) != 0)
      v30 = 0x40000000;
    else
      v30 = 0x80000000;
    if ((v29 & 0x20000000) != 0)
      v27 = v30;
    else
      v27 = v29 & 0xCFFFFFFF;
  }
  v31 = *a2;
  v32 = (unsigned int *)a2[1];
  v514 = (_BYTE **)a2[2];
  v466 = a1;
  v469 = a3;
  v510 = v26;
  v493 = v27;
  if ((v26 & 0x40000000) == 0)
  {
    v478 = 0;
    v33 = 0;
    v34 = 0;
    v488 = 0;
    goto LABEL_110;
  }
  v35 = v32[1];
  if ((v35 & 0x80000000) != 0)
  {
    v37 = v31 + 280;
  }
  else
  {
    v36 = *(_QWORD *)(v31 + 2328);
    if (v35 >= (*(_QWORD *)(v31 + 2336) - v36) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v36 = *(_QWORD *)(v31 + 2328);
    }
    v37 = v36 + (v35 << 11);
  }
  v38 = *(_DWORD *)(v37 + 1020);
  v39 = v38 & 0xCFFFFFFF;
  if ((v38 & 0x10000000) != 0)
    v40 = 0x40000000;
  else
    v40 = 0x80000000;
  if ((v38 & 0x20000000) != 0)
    v39 = v40;
  if (**v514)
    v41 = v38;
  else
    v41 = v39;
  v42 = *a2;
  v43 = (_BYTE **)a2[2];
  v44 = *(unsigned int *)(a2[1] + 4);
  if ((v44 & 0x80000000) != 0)
  {
    v65 = *v43;
    v47 = *(_DWORD *)(v42 + 1556);
    if (*v65)
      goto LABEL_62;
  }
  else
  {
    v45 = *(_QWORD *)(v42 + 2328);
    if (v44 >= (*(_QWORD *)(v42 + 2336) - v45) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v45 = *(_QWORD *)(v42 + 2328);
    }
    v46 = *v43;
    v47 = *(_DWORD *)(v45 + (v44 << 11) + 1276);
    if (*v46)
    {
LABEL_62:
      v48 = *a2;
      v49 = (_BYTE **)a2[2];
      v50 = *(unsigned int *)(a2[1] + 16);
      if ((v50 & 0x80000000) == 0)
        goto LABEL_63;
LABEL_85:
      v67 = *v49;
      v53 = *(_DWORD *)(v48 + 1076);
      if (*v67)
        goto LABEL_67;
      goto LABEL_86;
    }
  }
  if ((v47 & 0x10000000) != 0)
    v66 = 0x40000000;
  else
    v66 = 0x80000000;
  if ((v47 & 0x20000000) != 0)
    v47 = v66;
  else
    v47 &= 0xCFFFFFFF;
  v48 = *a2;
  v49 = (_BYTE **)a2[2];
  v50 = *(unsigned int *)(a2[1] + 16);
  if ((v50 & 0x80000000) != 0)
    goto LABEL_85;
LABEL_63:
  v51 = *(_QWORD *)(v48 + 2328);
  if (v50 >= (*(_QWORD *)(v48 + 2336) - v51) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_1299;
    }
    v51 = *(_QWORD *)(v48 + 2328);
  }
  v52 = *v49;
  v53 = *(_DWORD *)(v51 + (v50 << 11) + 796);
  if (*v52)
  {
LABEL_67:
    v54 = *a2;
    v55 = (_BYTE **)a2[2];
    v56 = *(unsigned int *)(a2[1] + 16);
    if ((v56 & 0x80000000) == 0)
      goto LABEL_68;
LABEL_93:
    v69 = *v55;
    v59 = *(_DWORD *)(v54 + 1332);
    if (*v69)
      goto LABEL_72;
LABEL_94:
    if ((v59 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v59 & 0x20000000) != 0)
      v59 = v70;
    else
      v59 &= 0xCFFFFFFF;
    v60 = *a2;
    v61 = (_BYTE **)a2[2];
    v62 = *(unsigned int *)(a2[1] + 16);
    if ((v62 & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_101;
  }
LABEL_86:
  if ((v53 & 0x10000000) != 0)
    v68 = 0x40000000;
  else
    v68 = 0x80000000;
  if ((v53 & 0x20000000) != 0)
    v53 = v68;
  else
    v53 &= 0xCFFFFFFF;
  v54 = *a2;
  v55 = (_BYTE **)a2[2];
  v56 = *(unsigned int *)(a2[1] + 16);
  if ((v56 & 0x80000000) != 0)
    goto LABEL_93;
LABEL_68:
  v57 = *(_QWORD *)(v54 + 2328);
  if (v56 >= (*(_QWORD *)(v54 + 2336) - v57) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_1299;
    }
    v57 = *(_QWORD *)(v54 + 2328);
  }
  v58 = *v55;
  v59 = *(_DWORD *)(v57 + (v56 << 11) + 1052);
  if (!*v58)
    goto LABEL_94;
LABEL_72:
  v60 = *a2;
  v61 = (_BYTE **)a2[2];
  v62 = *(unsigned int *)(a2[1] + 16);
  if ((v62 & 0x80000000) == 0)
  {
LABEL_73:
    v63 = *(_QWORD *)(v60 + 2328);
    if (v62 >= (*(_QWORD *)(v60 + 2336) - v63) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v63 = *(_QWORD *)(v60 + 2328);
    }
    v64 = v63 + (v62 << 11);
    goto LABEL_102;
  }
LABEL_101:
  v64 = v60 + 280;
LABEL_102:
  LODWORD(v478) = (v41 >> 30) & 1;
  v488 = (v47 >> 30) & 1;
  v34 = (v53 >> 30) & 1;
  v33 = (v59 >> 30) & 1;
  v71 = *(_DWORD *)(v64 + 828);
  if (!**v61)
  {
    if ((v71 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v71 & 0x20000000) != 0)
      v71 = v72;
    else
      v71 &= 0xCFFFFFFF;
  }
  HIDWORD(v478) = (v71 >> 30) & 1;
  a3 = v469;
  v24 = *v466;
  v23 = v466[2];
  v31 = *a2;
  v32 = (unsigned int *)a2[1];
  v514 = (_BYTE **)a2[2];
LABEL_110:
  v523 = a3[2];
  v524 = a3[3];
  v525 = a3[4];
  v521 = *a3;
  v522 = *((float32x4_t *)a3 + 1);
  v73 = v32[10];
  if ((v73 & 0x80000000) != 0)
  {
    v75 = *(_DWORD *)(v31 + 1276);
    v76 = **v514;
    if (**v514)
      goto LABEL_115;
  }
  else
  {
    v74 = *(_QWORD *)(v31 + 2328);
    if (v73 >= (*(_QWORD *)(v31 + 2336) - v74) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1299;
      }
      v74 = *(_QWORD *)(v31 + 2328);
    }
    v75 = *(_DWORD *)(v74 + (v73 << 11) + 996);
    v76 = **v514;
    if (**v514)
    {
LABEL_115:
      v77 = v32[10];
      if ((v77 & 0x80000000) == 0)
        goto LABEL_116;
LABEL_136:
      v79 = *(_DWORD *)(v31 + 1532);
      if (!v76)
        goto LABEL_120;
      goto LABEL_126;
    }
  }
  if ((v75 & 0x10000000) != 0)
    v83 = 0x40000000;
  else
    v83 = 0x80000000;
  if ((v75 & 0x20000000) != 0)
    v75 = v83;
  else
    v75 &= 0xCFFFFFFF;
  v77 = v32[10];
  if ((v77 & 0x80000000) != 0)
    goto LABEL_136;
LABEL_116:
  v78 = *(_QWORD *)(v31 + 2328);
  if (v77 < (*(_QWORD *)(v31 + 2336) - v78) >> 11)
    goto LABEL_119;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
LABEL_1299:
    abort();
  }
  v78 = *(_QWORD *)(v31 + 2328);
  v76 = **v514;
LABEL_119:
  v79 = *(_DWORD *)(v78 + (v77 << 11) + 1252);
  if (!v76)
  {
LABEL_120:
    if ((v79 & 0x10000000) != 0)
      v80 = 0x40000000;
    else
      v80 = 0x80000000;
    if ((v79 & 0x20000000) != 0)
      v79 = v80;
    else
      v79 &= 0xCFFFFFFF;
  }
LABEL_126:
  v450 = v504 >> 30;
  v81 = *((_DWORD *)v23 + 193);
  if (**v24)
  {
    v505 = *((_DWORD *)v23 + 257);
    v82 = *((_DWORD *)v23 + 201);
  }
  else
  {
    if ((v81 & 0x10000000) != 0)
      v84 = 0x40000000;
    else
      v84 = 0x80000000;
    if ((v81 & 0x20000000) != 0)
      v81 = v84;
    else
      v81 &= 0xCFFFFFFF;
    v85 = *((_DWORD *)v23 + 257);
    if ((v85 & 0x10000000) != 0)
      v86 = 0x40000000;
    else
      v86 = 0x80000000;
    if ((v85 & 0x20000000) != 0)
      v87 = v86;
    else
      v87 = v85 & 0xCFFFFFFF;
    v505 = v87;
    v88 = *((_DWORD *)v23 + 201);
    if ((v88 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v88 & 0x20000000) != 0)
      v82 = v89;
    else
      v82 = v88 & 0xCFFFFFFF;
  }
  v456 = v75 >> 30;
  v472 = v499 >> 30;
  v90 = v25 >> 30;
  v91 = v493 >> 30;
  v494 = v81 >> 30;
  v500 = v79 >> 30;
  v463 = v82 >> 30;
  v92 = v24;
  if ((v510 & 0x40000000) != 0)
  {
    v543 = v523;
    v544 = v524;
    v545 = v525;
    v542 = v522;
    v541 = v521;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_22467FC40;
    v537 = xmmword_22467FC50;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 0, 0, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14000000100), xmmword_22467FC50);
    if (!v33)
    {
      v538 = v523;
      v539 = v524;
      v540 = v525;
      *(_QWORD *)&v591 = 0x4040D0D04040D0DLL;
      v537 = v522;
      v536 = v521;
      v596 = xmmword_22467FC60;
      v597 = xmmword_22467FC70;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 0, 0, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14000000100), xmmword_22467FC70);
      if (!(v488 | v472 & 1))
      {
        v598 = v523;
        v599 = v524;
        v600 = v525;
        *(_QWORD *)&v586 = 0x10104040A0A0D0DLL;
        v596 = v521;
        v597 = v522;
        v591 = xmmword_22467FC80;
        v592 = xmmword_22467FC90;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 0, 0, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14000000100), xmmword_22467FC90);
        v93 = (v450 & 1) == 0 && (v34 | v90 & 1) == 0;
        if (!(_DWORD)v478 && v93)
        {
          v593 = v523;
          v594 = v524;
          v595 = v525;
          v592 = v522;
          v591 = v521;
          *(_QWORD *)&v581 = 0x1010A0A04040D0DLL;
          v586 = xmmword_22467FCA0;
          v587 = xmmword_22467FCB0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 0, 0, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xC000000100), xmmword_22467FCB0);
        }
      }
      if (HIDWORD(v478))
        v94 = 0;
      else
        v94 = (v34 | v90 & 1) == 0;
      if (v94 && (v91 & 1) == 0)
      {
        v588 = v523;
        v589 = v524;
        v590 = v525;
        *(_QWORD *)&v576 = 0x40404040D0D0D0DLL;
        v587 = v522;
        v586 = v521;
        v581 = xmmword_22467FCC0;
        v582 = xmmword_22467FCD0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 0, 0, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xC000000100), xmmword_22467FCD0);
      }
    }
    if (((v472 | v500) & 1) == 0)
    {
      v583 = v523;
      v584 = v524;
      v585 = v525;
      v582 = v522;
      v581 = v521;
      *(_QWORD *)&v571 = 0xA0A0A0A0D0D0D0DLL;
      v576 = xmmword_22467FCE0;
      v577 = xmmword_22467FCF0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 0, 0, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14000000100), xmmword_22467FCF0);
      v95 = (v456 & 1) == 0 && ((v90 | v494) & 1) == 0;
      if ((v450 & 1) == 0 && v95)
      {
        v578 = v523;
        v579 = v524;
        v580 = v525;
        v577 = v522;
        v576 = v521;
        *(_QWORD *)&v566 = 0xA0A0D0D0A0A0D0DLL;
        v571 = xmmword_22467FD00;
        v572 = xmmword_22467FD10;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 0, 0, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xC000000100), xmmword_22467FD10);
      }
    }
    v96 = (v91 & 1) == 0 && ((v90 | v494) & 1) == 0;
    if (v96 && (v463 & 1) == 0)
    {
      v573 = v523;
      v574 = v524;
      v575 = v525;
      v572 = v522;
      v571 = v521;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_22467FD20;
      v567 = xmmword_22467FD30;
      *(_QWORD *)&v556 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 0, 0, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0xC000000100), xmmword_22467FD30);
    }
  }
  v97 = v32[10];
  if ((v97 & 0x80000000) != 0)
  {
    v99 = *(_DWORD *)(v31 + 1280);
    v100 = **v514;
    if (**v514)
      goto LABEL_189;
  }
  else
  {
    v98 = *(_QWORD *)(v31 + 2328);
    if (v97 >= (*(_QWORD *)(v31 + 2336) - v98) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v98 = *(_QWORD *)(v31 + 2328);
    }
    v99 = *(_DWORD *)(v98 + (v97 << 11) + 1000);
    v100 = **v514;
    if (**v514)
    {
LABEL_189:
      v101 = v32[10];
      if ((v101 & 0x80000000) == 0)
        goto LABEL_190;
LABEL_204:
      v103 = *(_DWORD *)(v31 + 1536);
      if (v100)
        goto LABEL_194;
LABEL_205:
      if ((v103 & 0x10000000) != 0)
        v107 = 0x40000000;
      else
        v107 = 0x80000000;
      if ((v103 & 0x20000000) != 0)
        v103 = v107;
      else
        v103 &= 0xCFFFFFFF;
      v104 = *((_DWORD *)v23 + 194);
      if (**v92)
        goto LABEL_195;
      goto LABEL_212;
    }
  }
  if ((v99 & 0x10000000) != 0)
    v106 = 0x40000000;
  else
    v106 = 0x80000000;
  if ((v99 & 0x20000000) != 0)
    v99 = v106;
  else
    v99 &= 0xCFFFFFFF;
  v101 = v32[10];
  if ((v101 & 0x80000000) != 0)
    goto LABEL_204;
LABEL_190:
  v102 = *(_QWORD *)(v31 + 2328);
  if (v101 >= (*(_QWORD *)(v31 + 2336) - v102) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v102 = *(_QWORD *)(v31 + 2328);
    v100 = **v514;
  }
  v103 = *(_DWORD *)(v102 + (v101 << 11) + 1256);
  if (!v100)
    goto LABEL_205;
LABEL_194:
  v104 = *((_DWORD *)v23 + 194);
  if (**v92)
  {
LABEL_195:
    v489 = *((_DWORD *)v23 + 258);
    v105 = *((_DWORD *)v23 + 202);
    goto LABEL_230;
  }
LABEL_212:
  if ((v104 & 0x10000000) != 0)
    v108 = 0x40000000;
  else
    v108 = 0x80000000;
  if ((v104 & 0x20000000) != 0)
    v104 = v108;
  else
    v104 &= 0xCFFFFFFF;
  v109 = *((_DWORD *)v23 + 258);
  if ((v109 & 0x10000000) != 0)
    v110 = 0x40000000;
  else
    v110 = 0x80000000;
  if ((v109 & 0x20000000) != 0)
    v111 = v110;
  else
    v111 = v109 & 0xCFFFFFFF;
  v489 = v111;
  v112 = *((_DWORD *)v23 + 202);
  if ((v112 & 0x10000000) != 0)
    v113 = 0x40000000;
  else
    v113 = 0x80000000;
  if ((v112 & 0x20000000) != 0)
    v105 = v113;
  else
    v105 = v112 & 0xCFFFFFFF;
LABEL_230:
  v453 = v99 >> 30;
  v479 = v104 >> 30;
  v483 = v103 >> 30;
  v459 = v105 >> 30;
  if ((v505 & 0x40000000) != 0)
  {
    v543 = v523;
    v544 = v524;
    v545 = v525;
    v542 = v522;
    v541 = v521;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_22467FD40;
    v537 = xmmword_22467FD50;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 1, 0, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14100000101), xmmword_22467FD50);
    if ((v510 & 0x40000000) == 0)
    {
      v538 = v523;
      v539 = v524;
      v540 = v525;
      v537 = v522;
      v536 = v521;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_22467FD60;
      v597 = xmmword_22467FD70;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 1, 0, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14100000101), xmmword_22467FD70);
      if (((v472 | v500) & 1) == 0)
      {
        v598 = v523;
        v599 = v524;
        v600 = v525;
        v596 = v521;
        v597 = v522;
        *(_QWORD *)&v586 = 0xA0A0D0D0A0A0D0DLL;
        v591 = xmmword_22467FD80;
        v592 = xmmword_22467FD90;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 1, 0, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14100000101), xmmword_22467FD90);
        v114 = (v456 & 1) == 0 && ((v90 | v494) & 1) == 0;
        if ((v450 & 1) == 0 && v114)
        {
          v593 = v523;
          v594 = v524;
          v595 = v525;
          v592 = v522;
          v591 = v521;
          *(_QWORD *)&v581 = 0xA0A0A0A0D0D0D0DLL;
          v586 = xmmword_22467FDA0;
          v587 = xmmword_22467FDB0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 1, 0, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xC100000101), xmmword_22467FDB0);
        }
      }
      v115 = (v91 & 1) == 0 && ((v90 | v494) & 1) == 0;
      if (v115 && (v463 & 1) == 0)
      {
        v588 = v523;
        v589 = v524;
        v590 = v525;
        v587 = v522;
        v586 = v521;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_22467FDC0;
        v582 = xmmword_22467FDD0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 1, 0, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xC100000101), xmmword_22467FDD0);
      }
    }
    if (((v500 | v483) & 1) == 0)
    {
      v583 = v523;
      v584 = v524;
      v585 = v525;
      v582 = v522;
      v581 = v521;
      *(_QWORD *)&v571 = 0xA0A0A0A0D0D0D0DLL;
      v576 = xmmword_22467FDE0;
      v577 = xmmword_22467FDF0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 1, 0, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14100000101), xmmword_22467FDF0);
      v116 = (v99 & 0x40000000) == 0 && ((v494 | v479) & 1) == 0;
      if ((v456 & 1) == 0 && v116)
      {
        v578 = v523;
        v579 = v524;
        v580 = v525;
        v577 = v522;
        v576 = v521;
        *(_QWORD *)&v566 = 0xA0A0D0D0A0A0D0DLL;
        v571 = xmmword_22467FE00;
        v572 = xmmword_22467FE10;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 1, 0, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xC100000101), xmmword_22467FE10);
      }
    }
    v117 = (v463 & 1) == 0 && ((v494 | v479) & 1) == 0;
    if (v117 && (v459 & 1) == 0)
    {
      v573 = v523;
      v574 = v524;
      v575 = v525;
      v572 = v522;
      v571 = v521;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_22467FE20;
      v567 = xmmword_22467FE30;
      *(_QWORD *)&v556 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 1, 0, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0xC100000101), xmmword_22467FE30);
    }
  }
  v118 = v32[10];
  if ((v118 & 0x80000000) != 0)
  {
    v120 = *(_DWORD *)(v31 + 1284);
    v121 = **v514;
    if (**v514)
      goto LABEL_263;
  }
  else
  {
    v119 = *(_QWORD *)(v31 + 2328);
    if (v118 >= (*(_QWORD *)(v31 + 2336) - v119) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v119 = *(_QWORD *)(v31 + 2328);
    }
    v120 = *(_DWORD *)(v119 + (v118 << 11) + 1004);
    v121 = **v514;
    if (**v514)
    {
LABEL_263:
      v122 = v32[10];
      if ((v122 & 0x80000000) == 0)
        goto LABEL_264;
LABEL_278:
      v124 = *(_DWORD *)(v31 + 1540);
      if (v121)
        goto LABEL_268;
LABEL_279:
      if ((v124 & 0x10000000) != 0)
        v129 = 0x40000000;
      else
        v129 = 0x80000000;
      if ((v124 & 0x20000000) != 0)
        v124 = v129;
      else
        v124 &= 0xCFFFFFFF;
      v125 = *((_DWORD *)v23 + 195);
      if (**v92)
        goto LABEL_269;
      goto LABEL_286;
    }
  }
  if ((v120 & 0x10000000) != 0)
    v128 = 0x40000000;
  else
    v128 = 0x80000000;
  if ((v120 & 0x20000000) != 0)
    v120 = v128;
  else
    v120 &= 0xCFFFFFFF;
  v122 = v32[10];
  if ((v122 & 0x80000000) != 0)
    goto LABEL_278;
LABEL_264:
  v123 = *(_QWORD *)(v31 + 2328);
  if (v122 >= (*(_QWORD *)(v31 + 2336) - v123) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v123 = *(_QWORD *)(v31 + 2328);
    v121 = **v514;
  }
  v124 = *(_DWORD *)(v123 + (v122 << 11) + 1260);
  if (!v121)
    goto LABEL_279;
LABEL_268:
  v125 = *((_DWORD *)v23 + 195);
  if (**v92)
  {
LABEL_269:
    v126 = *((_DWORD *)v23 + 259);
    v127 = *((_DWORD *)v23 + 203);
    goto LABEL_304;
  }
LABEL_286:
  if ((v125 & 0x10000000) != 0)
    v130 = 0x40000000;
  else
    v130 = 0x80000000;
  if ((v125 & 0x20000000) != 0)
    v125 = v130;
  else
    v125 &= 0xCFFFFFFF;
  v131 = *((_DWORD *)v23 + 259);
  if ((v131 & 0x10000000) != 0)
    v132 = 0x40000000;
  else
    v132 = 0x80000000;
  if ((v131 & 0x20000000) != 0)
    v126 = v132;
  else
    v126 = v131 & 0xCFFFFFFF;
  v133 = *((_DWORD *)v23 + 203);
  if ((v133 & 0x10000000) != 0)
    v134 = 0x40000000;
  else
    v134 = 0x80000000;
  if ((v133 & 0x20000000) != 0)
    v127 = v134;
  else
    v127 = v133 & 0xCFFFFFFF;
LABEL_304:
  v451 = v120 >> 30;
  v511 = v124 >> 30;
  v473 = v125 >> 30;
  v135 = v127 >> 30;
  if ((v489 & 0x40000000) != 0)
  {
    v543 = v523;
    v544 = v524;
    v545 = v525;
    v542 = v522;
    v541 = v521;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_22467FE40;
    v537 = xmmword_22467FE50;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 2, 0, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14200000102), xmmword_22467FE50);
    if ((v505 & 0x40000000) == 0)
    {
      v538 = v523;
      v539 = v524;
      v540 = v525;
      v537 = v522;
      v536 = v521;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_22467FE60;
      v597 = xmmword_22467FE70;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 2, 0, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14200000102), xmmword_22467FE70);
      if (((v500 | v483) & 1) == 0)
      {
        v598 = v523;
        v599 = v524;
        v600 = v525;
        v596 = v521;
        v597 = v522;
        *(_QWORD *)&v586 = 0xA0A0D0D0A0A0D0DLL;
        v591 = xmmword_22467FE80;
        v592 = xmmword_22467FE90;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 2, 0, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14200000102), xmmword_22467FE90);
        v136 = (v453 & 1) == 0 && ((v494 | v479) & 1) == 0;
        if ((v456 & 1) == 0 && v136)
        {
          v593 = v523;
          v594 = v524;
          v595 = v525;
          v592 = v522;
          v591 = v521;
          *(_QWORD *)&v581 = 0xA0A0A0A0D0D0D0DLL;
          v586 = xmmword_22467FEA0;
          v587 = xmmword_22467FEB0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 2, 0, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xC200000102), xmmword_22467FEB0);
        }
      }
      v137 = (v463 & 1) == 0 && ((v494 | v479) & 1) == 0;
      if (v137 && (v459 & 1) == 0)
      {
        v588 = v523;
        v589 = v524;
        v590 = v525;
        v587 = v522;
        v586 = v521;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_22467FEC0;
        v582 = xmmword_22467FED0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 2, 0, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xC200000102), xmmword_22467FED0);
      }
    }
    if (((v483 | v511) & 1) == 0)
    {
      v583 = v523;
      v584 = v524;
      v585 = v525;
      v582 = v522;
      v581 = v521;
      *(_QWORD *)&v571 = 0xA0A0A0A0D0D0D0DLL;
      v576 = xmmword_22467FEE0;
      v577 = xmmword_22467FEF0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 2, 0, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14200000102), xmmword_22467FEF0);
      v138 = (v120 & 0x40000000) == 0 && ((v479 | v473) & 1) == 0;
      if ((v453 & 1) == 0 && v138)
      {
        v578 = v523;
        v579 = v524;
        v580 = v525;
        v577 = v522;
        v576 = v521;
        *(_QWORD *)&v566 = 0xA0A0D0D0A0A0D0DLL;
        v571 = xmmword_22467FF00;
        v572 = xmmword_22467FF10;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 2, 0, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xC200000102), xmmword_22467FF10);
      }
    }
    v139 = (v459 & 1) == 0 && ((v479 | v473) & 1) == 0;
    if (v139 && (v135 & 1) == 0)
    {
      v573 = v523;
      v574 = v524;
      v575 = v525;
      v572 = v522;
      v571 = v521;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_22467FF20;
      v567 = xmmword_22467FF30;
      *(_QWORD *)&v556 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 2, 0, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0xC200000102), xmmword_22467FF30);
    }
  }
  v140 = v32[10];
  if ((v140 & 0x80000000) != 0)
  {
    v142 = *(_DWORD *)(v31 + 1288);
    v143 = **v514;
    if (**v514)
      goto LABEL_337;
  }
  else
  {
    v141 = *(_QWORD *)(v31 + 2328);
    if (v140 >= (*(_QWORD *)(v31 + 2336) - v141) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v141 = *(_QWORD *)(v31 + 2328);
    }
    v142 = *(_DWORD *)(v141 + (v140 << 11) + 1008);
    v143 = **v514;
    if (**v514)
    {
LABEL_337:
      v144 = v32[10];
      if ((v144 & 0x80000000) == 0)
        goto LABEL_338;
LABEL_352:
      v146 = *(_DWORD *)(v31 + 1544);
      if (v143)
        goto LABEL_342;
LABEL_353:
      if ((v146 & 0x10000000) != 0)
        v151 = 0x40000000;
      else
        v151 = 0x80000000;
      if ((v146 & 0x20000000) != 0)
        v146 = v151;
      else
        v146 &= 0xCFFFFFFF;
      v147 = *((_DWORD *)v23 + 196);
      if (**v92)
        goto LABEL_343;
      goto LABEL_360;
    }
  }
  if ((v142 & 0x10000000) != 0)
    v150 = 0x40000000;
  else
    v150 = 0x80000000;
  if ((v142 & 0x20000000) != 0)
    v142 = v150;
  else
    v142 &= 0xCFFFFFFF;
  v144 = v32[10];
  if ((v144 & 0x80000000) != 0)
    goto LABEL_352;
LABEL_338:
  v145 = *(_QWORD *)(v31 + 2328);
  if (v144 >= (*(_QWORD *)(v31 + 2336) - v145) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v145 = *(_QWORD *)(v31 + 2328);
    v143 = **v514;
  }
  v146 = *(_DWORD *)(v145 + (v144 << 11) + 1264);
  if (!v143)
    goto LABEL_353;
LABEL_342:
  v147 = *((_DWORD *)v23 + 196);
  if (**v92)
  {
LABEL_343:
    v148 = *((_DWORD *)v23 + 260);
    v149 = *((_DWORD *)v23 + 204);
    goto LABEL_378;
  }
LABEL_360:
  if ((v147 & 0x10000000) != 0)
    v152 = 0x40000000;
  else
    v152 = 0x80000000;
  if ((v147 & 0x20000000) != 0)
    v147 = v152;
  else
    v147 &= 0xCFFFFFFF;
  v153 = *((_DWORD *)v23 + 260);
  if ((v153 & 0x10000000) != 0)
    v154 = 0x40000000;
  else
    v154 = 0x80000000;
  if ((v153 & 0x20000000) != 0)
    v148 = v154;
  else
    v148 = v153 & 0xCFFFFFFF;
  v155 = *((_DWORD *)v23 + 204);
  if ((v155 & 0x10000000) != 0)
    v156 = 0x40000000;
  else
    v156 = 0x80000000;
  if ((v155 & 0x20000000) != 0)
    v149 = v156;
  else
    v149 = v155 & 0xCFFFFFFF;
LABEL_378:
  v457 = v142 >> 30;
  v506 = v146 >> 30;
  v501 = v147 >> 30;
  v464 = v149 >> 30;
  if ((v126 & 0x40000000) != 0)
  {
    v543 = v523;
    v544 = v524;
    v545 = v525;
    v542 = v522;
    v541 = v521;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_22467FF40;
    v537 = xmmword_22467FF50;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 3, 0, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14300000103), xmmword_22467FF50);
    if ((v489 & 0x40000000) == 0)
    {
      v538 = v523;
      v539 = v524;
      v540 = v525;
      v537 = v522;
      v536 = v521;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_22467FF60;
      v597 = xmmword_22467FF70;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 3, 0, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14300000103), xmmword_22467FF70);
      if (((v483 | v511) & 1) == 0)
      {
        v598 = v523;
        v599 = v524;
        v600 = v525;
        v596 = v521;
        v597 = v522;
        *(_QWORD *)&v586 = 0xA0A0D0D0A0A0D0DLL;
        v591 = xmmword_22467FF80;
        v592 = xmmword_22467FF90;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 3, 0, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14300000103), xmmword_22467FF90);
        v157 = (v451 & 1) == 0 && ((v479 | v473) & 1) == 0;
        if ((v453 & 1) == 0 && v157)
        {
          v593 = v523;
          v594 = v524;
          v595 = v525;
          v592 = v522;
          v591 = v521;
          *(_QWORD *)&v581 = 0xA0A0A0A0D0D0D0DLL;
          v586 = xmmword_22467FFA0;
          v587 = xmmword_22467FFB0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 3, 0, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xC300000103), xmmword_22467FFB0);
        }
      }
      v158 = (v459 & 1) == 0 && ((v479 | v473) & 1) == 0;
      if (v158 && (v135 & 1) == 0)
      {
        v588 = v523;
        v589 = v524;
        v590 = v525;
        v587 = v522;
        v586 = v521;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_22467FFC0;
        v582 = xmmword_22467FFD0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 3, 0, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xC300000103), xmmword_22467FFD0);
      }
    }
    if (((v511 | v506) & 1) == 0)
    {
      v583 = v523;
      v584 = v524;
      v585 = v525;
      v582 = v522;
      v581 = v521;
      *(_QWORD *)&v571 = 0xA0A0A0A0D0D0D0DLL;
      v576 = xmmword_22467FFE0;
      v577 = xmmword_22467FFF0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 3, 0, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14300000103), xmmword_22467FFF0);
      v159 = (v142 & 0x40000000) == 0 && ((v473 | v501) & 1) == 0;
      if ((v451 & 1) == 0 && v159)
      {
        v578 = v523;
        v579 = v524;
        v580 = v525;
        v577 = v522;
        v576 = v521;
        *(_QWORD *)&v566 = 0xA0A0D0D0A0A0D0DLL;
        v571 = xmmword_224680000;
        v572 = xmmword_224680010;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 3, 0, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xC300000103), xmmword_224680010);
      }
    }
    v160 = (v135 & 1) == 0 && ((v473 | v501) & 1) == 0;
    if (v160 && (v464 & 1) == 0)
    {
      v573 = v523;
      v574 = v524;
      v575 = v525;
      v572 = v522;
      v571 = v521;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224680020;
      v567 = xmmword_224680030;
      *(_QWORD *)&v556 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 3, 0, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0xC300000103), xmmword_224680030);
    }
  }
  v161 = v32[10];
  if ((v161 & 0x80000000) != 0)
  {
    v163 = *(_DWORD *)(v31 + 1292);
    v164 = **v514;
    if (**v514)
      goto LABEL_411;
  }
  else
  {
    v162 = *(_QWORD *)(v31 + 2328);
    if (v161 >= (*(_QWORD *)(v31 + 2336) - v162) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v162 = *(_QWORD *)(v31 + 2328);
    }
    v163 = *(_DWORD *)(v162 + (v161 << 11) + 1012);
    v164 = **v514;
    if (**v514)
    {
LABEL_411:
      v165 = v32[10];
      if ((v165 & 0x80000000) == 0)
        goto LABEL_412;
LABEL_426:
      v167 = *(_DWORD *)(v31 + 1548);
      if (v164)
        goto LABEL_416;
LABEL_427:
      if ((v167 & 0x10000000) != 0)
        v172 = 0x40000000;
      else
        v172 = 0x80000000;
      if ((v167 & 0x20000000) != 0)
        v167 = v172;
      else
        v167 &= 0xCFFFFFFF;
      v168 = *((_DWORD *)v23 + 197);
      if (**v92)
        goto LABEL_417;
      goto LABEL_434;
    }
  }
  if ((v163 & 0x10000000) != 0)
    v171 = 0x40000000;
  else
    v171 = 0x80000000;
  if ((v163 & 0x20000000) != 0)
    v163 = v171;
  else
    v163 &= 0xCFFFFFFF;
  v165 = v32[10];
  if ((v165 & 0x80000000) != 0)
    goto LABEL_426;
LABEL_412:
  v166 = *(_QWORD *)(v31 + 2328);
  if (v165 >= (*(_QWORD *)(v31 + 2336) - v166) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v166 = *(_QWORD *)(v31 + 2328);
    v164 = **v514;
  }
  v167 = *(_DWORD *)(v166 + (v165 << 11) + 1268);
  if (!v164)
    goto LABEL_427;
LABEL_416:
  v168 = *((_DWORD *)v23 + 197);
  if (**v92)
  {
LABEL_417:
    v169 = *((_DWORD *)v23 + 261);
    v170 = *((_DWORD *)v23 + 205);
    goto LABEL_452;
  }
LABEL_434:
  if ((v168 & 0x10000000) != 0)
    v173 = 0x40000000;
  else
    v173 = 0x80000000;
  if ((v168 & 0x20000000) != 0)
    v168 = v173;
  else
    v168 &= 0xCFFFFFFF;
  v174 = *((_DWORD *)v23 + 261);
  if ((v174 & 0x10000000) != 0)
    v175 = 0x40000000;
  else
    v175 = 0x80000000;
  if ((v174 & 0x20000000) != 0)
    v169 = v175;
  else
    v169 = v174 & 0xCFFFFFFF;
  v176 = *((_DWORD *)v23 + 205);
  if ((v176 & 0x10000000) != 0)
    v177 = 0x40000000;
  else
    v177 = 0x80000000;
  if ((v176 & 0x20000000) != 0)
    v170 = v177;
  else
    v170 = v176 & 0xCFFFFFFF;
LABEL_452:
  v454 = v163 >> 30;
  v490 = v168 >> 30;
  v495 = v167 >> 30;
  v460 = v170 >> 30;
  if ((v148 & 0x40000000) != 0)
  {
    v543 = v523;
    v544 = v524;
    v545 = v525;
    v542 = v522;
    v541 = v521;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_224680040;
    v537 = xmmword_224680050;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 4, 0, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14400000104), xmmword_224680050);
    if ((v126 & 0x40000000) == 0)
    {
      v538 = v523;
      v539 = v524;
      v540 = v525;
      v537 = v522;
      v536 = v521;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_224680060;
      v597 = xmmword_224680070;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 4, 0, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14400000104), xmmword_224680070);
      if (((v511 | v506) & 1) == 0)
      {
        v598 = v523;
        v599 = v524;
        v600 = v525;
        v596 = v521;
        v597 = v522;
        *(_QWORD *)&v586 = 0xA0A0D0D0A0A0D0DLL;
        v591 = xmmword_224680080;
        v592 = xmmword_224680090;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 4, 0, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14400000104), xmmword_224680090);
        v178 = (v457 & 1) == 0 && ((v473 | v501) & 1) == 0;
        if ((v451 & 1) == 0 && v178)
        {
          v593 = v523;
          v594 = v524;
          v595 = v525;
          v592 = v522;
          v591 = v521;
          *(_QWORD *)&v581 = 0xA0A0A0A0D0D0D0DLL;
          v586 = xmmword_2246800A0;
          v587 = xmmword_2246800B0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 4, 0, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xC400000104), xmmword_2246800B0);
        }
      }
      v179 = (v135 & 1) == 0 && ((v473 | v501) & 1) == 0;
      if (v179 && (v464 & 1) == 0)
      {
        v588 = v523;
        v589 = v524;
        v590 = v525;
        v587 = v522;
        v586 = v521;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_2246800C0;
        v582 = xmmword_2246800D0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 4, 0, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xC400000104), xmmword_2246800D0);
      }
    }
    if (((v506 | v495) & 1) == 0)
    {
      v583 = v523;
      v584 = v524;
      v585 = v525;
      v582 = v522;
      v581 = v521;
      *(_QWORD *)&v571 = 0xA0A0A0A0D0D0D0DLL;
      v576 = xmmword_2246800E0;
      v577 = xmmword_2246800F0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 4, 0, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14400000104), xmmword_2246800F0);
      v180 = (v163 & 0x40000000) == 0 && ((v501 | v490) & 1) == 0;
      if ((v457 & 1) == 0 && v180)
      {
        v578 = v523;
        v579 = v524;
        v580 = v525;
        v577 = v522;
        v576 = v521;
        *(_QWORD *)&v566 = 0xA0A0D0D0A0A0D0DLL;
        v571 = xmmword_224680100;
        v572 = xmmword_224680110;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 4, 0, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xC400000104), xmmword_224680110);
      }
    }
    v181 = (v464 & 1) == 0 && ((v501 | v490) & 1) == 0;
    if (v181 && (v460 & 1) == 0)
    {
      v573 = v523;
      v574 = v524;
      v575 = v525;
      v572 = v522;
      v571 = v521;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224680120;
      v567 = xmmword_224680130;
      *(_QWORD *)&v556 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 4, 0, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0xC400000104), xmmword_224680130);
    }
  }
  v182 = v32[10];
  if ((v182 & 0x80000000) != 0)
  {
    v184 = *(_DWORD *)(v31 + 1296);
    v185 = **v514;
    if (**v514)
      goto LABEL_485;
  }
  else
  {
    v183 = *(_QWORD *)(v31 + 2328);
    if (v182 >= (*(_QWORD *)(v31 + 2336) - v183) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v183 = *(_QWORD *)(v31 + 2328);
    }
    v184 = *(_DWORD *)(v183 + (v182 << 11) + 1016);
    v185 = **v514;
    if (**v514)
    {
LABEL_485:
      v186 = v32[10];
      if ((v186 & 0x80000000) == 0)
        goto LABEL_486;
LABEL_500:
      v188 = *(_DWORD *)(v31 + 1552);
      if (v185)
        goto LABEL_490;
LABEL_501:
      if ((v188 & 0x10000000) != 0)
        v192 = 0x40000000;
      else
        v192 = 0x80000000;
      if ((v188 & 0x20000000) != 0)
        v188 = v192;
      else
        v188 &= 0xCFFFFFFF;
      v189 = *((_DWORD *)v23 + 198);
      if (**v92)
        goto LABEL_491;
      goto LABEL_508;
    }
  }
  if ((v184 & 0x10000000) != 0)
    v191 = 0x40000000;
  else
    v191 = 0x80000000;
  if ((v184 & 0x20000000) != 0)
    v184 = v191;
  else
    v184 &= 0xCFFFFFFF;
  v186 = v32[10];
  if ((v186 & 0x80000000) != 0)
    goto LABEL_500;
LABEL_486:
  v187 = *(_QWORD *)(v31 + 2328);
  if (v186 >= (*(_QWORD *)(v31 + 2336) - v187) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v187 = *(_QWORD *)(v31 + 2328);
    v185 = **v514;
  }
  v188 = *(_DWORD *)(v187 + (v186 << 11) + 1272);
  if (!v185)
    goto LABEL_501;
LABEL_490:
  v189 = *((_DWORD *)v23 + 198);
  if (**v92)
  {
LABEL_491:
    v512 = *((_DWORD *)v23 + 262);
    v190 = *((_DWORD *)v23 + 206);
    goto LABEL_526;
  }
LABEL_508:
  if ((v189 & 0x10000000) != 0)
    v193 = 0x40000000;
  else
    v193 = 0x80000000;
  if ((v189 & 0x20000000) != 0)
    v189 = v193;
  else
    v189 &= 0xCFFFFFFF;
  v194 = *((_DWORD *)v23 + 262);
  if ((v194 & 0x10000000) != 0)
    v195 = 0x40000000;
  else
    v195 = 0x80000000;
  if ((v194 & 0x20000000) != 0)
    v196 = v195;
  else
    v196 = v194 & 0xCFFFFFFF;
  v512 = v196;
  v197 = *((_DWORD *)v23 + 206);
  if ((v197 & 0x10000000) != 0)
    v198 = 0x40000000;
  else
    v198 = 0x80000000;
  if ((v197 & 0x20000000) != 0)
    v190 = v198;
  else
    v190 = v197 & 0xCFFFFFFF;
LABEL_526:
  v452 = v184 >> 30;
  v480 = v189 >> 30;
  v484 = v188 >> 30;
  v474 = v190 >> 30;
  v558 = v523;
  v559 = v524;
  v560 = v525;
  v557 = v522;
  v556 = v521;
  if ((v169 & 0x40000000) != 0)
  {
    v543 = v523;
    v544 = v524;
    v545 = v525;
    v542 = v522;
    v541 = v521;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_224680140;
    v537 = xmmword_224680150;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 5, 0, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14500000105), xmmword_224680150);
    if ((v148 & 0x40000000) == 0)
    {
      v538 = v523;
      v539 = v524;
      v540 = v525;
      v537 = v522;
      v536 = v521;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_224680160;
      v597 = xmmword_224680170;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 5, 0, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14500000105), xmmword_224680170);
      if (((v506 | v495) & 1) == 0)
      {
        v598 = v523;
        v599 = v524;
        v600 = v525;
        v596 = v521;
        v597 = v522;
        *(_QWORD *)&v586 = 0xA0A0D0D0A0A0D0DLL;
        v591 = xmmword_224680180;
        v592 = xmmword_224680190;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 5, 0, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14500000105), xmmword_224680190);
        v199 = (v454 & 1) == 0 && ((v501 | v490) & 1) == 0;
        if ((v457 & 1) == 0 && v199)
        {
          v593 = v523;
          v594 = v524;
          v595 = v525;
          v592 = v522;
          v591 = v521;
          *(_QWORD *)&v581 = 0xA0A0A0A0D0D0D0DLL;
          v586 = xmmword_2246801A0;
          v587 = xmmword_2246801B0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 5, 0, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xC500000105), xmmword_2246801B0);
        }
      }
      v200 = (v464 & 1) == 0 && ((v501 | v490) & 1) == 0;
      if (v200 && (v460 & 1) == 0)
      {
        v588 = v558;
        v589 = v559;
        v590 = v560;
        v587 = v557;
        v586 = v556;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_2246801C0;
        v582 = xmmword_2246801D0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 5, 0, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xC500000105), xmmword_2246801D0);
      }
    }
    if (((v495 | v484) & 1) == 0)
    {
      v583 = v558;
      v584 = v559;
      v585 = v560;
      v582 = v557;
      v581 = v556;
      *(_QWORD *)&v571 = 0xA0A0A0A0D0D0D0DLL;
      v576 = xmmword_2246801E0;
      v577 = xmmword_2246801F0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 5, 0, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14500000105), xmmword_2246801F0);
      v201 = (v184 & 0x40000000) == 0 && ((v490 | v480) & 1) == 0;
      if ((v454 & 1) == 0 && v201)
      {
        v578 = v558;
        v579 = v559;
        v580 = v560;
        v577 = v557;
        v576 = v556;
        *(_QWORD *)&v566 = 0xA0A0D0D0A0A0D0DLL;
        v571 = xmmword_224680200;
        v572 = xmmword_224680210;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 5, 0, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xC500000105), xmmword_224680210);
      }
    }
    v202 = (v460 & 1) == 0 && ((v490 | v480) & 1) == 0;
    if (v202 && (v474 & 1) == 0)
    {
      v573 = v558;
      v574 = v559;
      v575 = v560;
      v572 = v557;
      v571 = v556;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224680220;
      v567 = xmmword_224680230;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 5, 0, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v551, COERCE_DOUBLE(0xC500000105), xmmword_224680230);
    }
  }
  v553 = v523;
  v554 = v524;
  v555 = v525;
  v552 = v522;
  v551 = v521;
  v203 = v32[10];
  if ((v203 & 0x80000000) != 0)
  {
    v205 = *(_DWORD *)(v31 + 1300);
    v206 = **v514;
    if (**v514)
      goto LABEL_559;
  }
  else
  {
    v204 = *(_QWORD *)(v31 + 2328);
    if (v203 >= (*(_QWORD *)(v31 + 2336) - v204) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v204 = *(_QWORD *)(v31 + 2328);
    }
    v205 = *(_DWORD *)(v204 + (v203 << 11) + 1020);
    v206 = **v514;
    if (**v514)
    {
LABEL_559:
      v207 = v32[10];
      if ((v207 & 0x80000000) == 0)
        goto LABEL_560;
LABEL_574:
      v209 = *(_DWORD *)(v31 + 1556);
      if (v206)
        goto LABEL_564;
LABEL_575:
      if ((v209 & 0x10000000) != 0)
        v214 = 0x40000000;
      else
        v214 = 0x80000000;
      if ((v209 & 0x20000000) != 0)
        v209 = v214;
      else
        v209 &= 0xCFFFFFFF;
      v210 = *((_DWORD *)v23 + 199);
      if (**v92)
        goto LABEL_565;
      goto LABEL_582;
    }
  }
  if ((v205 & 0x10000000) != 0)
    v213 = 0x40000000;
  else
    v213 = 0x80000000;
  if ((v205 & 0x20000000) != 0)
    v205 = v213;
  else
    v205 &= 0xCFFFFFFF;
  v207 = v32[10];
  if ((v207 & 0x80000000) != 0)
    goto LABEL_574;
LABEL_560:
  v208 = *(_QWORD *)(v31 + 2328);
  if (v207 >= (*(_QWORD *)(v31 + 2336) - v208) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v208 = *(_QWORD *)(v31 + 2328);
    v206 = **v514;
  }
  v209 = *(_DWORD *)(v208 + (v207 << 11) + 1276);
  if (!v206)
    goto LABEL_575;
LABEL_564:
  v210 = *((_DWORD *)v23 + 199);
  if (**v92)
  {
LABEL_565:
    v211 = *((_DWORD *)v23 + 263);
    v212 = *((_DWORD *)v23 + 207);
    goto LABEL_600;
  }
LABEL_582:
  if ((v210 & 0x10000000) != 0)
    v215 = 0x40000000;
  else
    v215 = 0x80000000;
  if ((v210 & 0x20000000) != 0)
    v210 = v215;
  else
    v210 &= 0xCFFFFFFF;
  v216 = *((_DWORD *)v23 + 263);
  if ((v216 & 0x10000000) != 0)
    v217 = 0x40000000;
  else
    v217 = 0x80000000;
  if ((v216 & 0x20000000) != 0)
    v211 = v217;
  else
    v211 = v216 & 0xCFFFFFFF;
  v218 = *((_DWORD *)v23 + 207);
  if ((v218 & 0x10000000) != 0)
    v219 = 0x40000000;
  else
    v219 = 0x80000000;
  if ((v218 & 0x20000000) != 0)
    v212 = v219;
  else
    v212 = v218 & 0xCFFFFFFF;
LABEL_600:
  v502 = v205 >> 30;
  v220 = v209 >> 30;
  v221 = v210 >> 30;
  v507 = v212 >> 30;
  v563 = v523;
  v564 = v524;
  v565 = v525;
  v562 = v522;
  v561 = v521;
  if ((v512 & 0x40000000) != 0)
  {
    v543 = v523;
    v544 = v524;
    v545 = v525;
    v542 = v522;
    v541 = v521;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_224680240;
    v537 = xmmword_224680250;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 6, 0, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14600000106), xmmword_224680250);
    if ((v169 & 0x40000000) == 0)
    {
      v538 = v523;
      v539 = v524;
      v540 = v525;
      v537 = v522;
      v536 = v521;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_224680260;
      v597 = xmmword_224680270;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 6, 0, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14600000106), xmmword_224680270);
      if (((v495 | v484) & 1) == 0)
      {
        v598 = v523;
        v599 = v524;
        v600 = v525;
        v596 = v521;
        v597 = v522;
        *(_QWORD *)&v586 = 0xA0A0D0D0A0A0D0DLL;
        v591 = xmmword_224680280;
        v592 = xmmword_224680290;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 6, 0, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14600000106), xmmword_224680290);
        v222 = (v452 & 1) == 0 && ((v490 | v480) & 1) == 0;
        if ((v454 & 1) == 0 && v222)
        {
          v593 = v523;
          v594 = v524;
          v595 = v525;
          v592 = v522;
          v591 = v521;
          *(_QWORD *)&v581 = 0xA0A0A0A0D0D0D0DLL;
          v586 = xmmword_2246802A0;
          v587 = xmmword_2246802B0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 6, 0, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xC600000106), xmmword_2246802B0);
        }
      }
      v223 = (v460 & 1) == 0 && ((v490 | v480) & 1) == 0;
      if (v223 && (v474 & 1) == 0)
      {
        v588 = v563;
        v589 = v564;
        v590 = v565;
        v587 = v562;
        v586 = v561;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_2246802C0;
        v582 = xmmword_2246802D0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 6, 0, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xC600000106), xmmword_2246802D0);
      }
    }
    if (((v484 | v220) & 1) == 0)
    {
      v583 = v563;
      v584 = v564;
      v585 = v565;
      v582 = v562;
      v581 = v561;
      *(_QWORD *)&v571 = 0xA0A0A0A0D0D0D0DLL;
      v576 = xmmword_2246802E0;
      v577 = xmmword_2246802F0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 6, 0, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14600000106), xmmword_2246802F0);
      v224 = (v205 & 0x40000000) == 0 && ((v480 | v221) & 1) == 0;
      if ((v452 & 1) == 0 && v224)
      {
        v578 = v563;
        v579 = v564;
        v580 = v565;
        v577 = v562;
        v576 = v561;
        *(_QWORD *)&v566 = 0xA0A0D0D0A0A0D0DLL;
        v571 = xmmword_224680300;
        v572 = xmmword_224680310;
        *(_QWORD *)&v546 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 6, 0, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v546, COERCE_DOUBLE(0xC600000106), xmmword_224680310);
      }
    }
    v225 = (v474 & 1) == 0 && ((v480 | v221) & 1) == 0;
    if (v225 && (v507 & 1) == 0)
    {
      v573 = v563;
      v574 = v564;
      v575 = v565;
      v572 = v562;
      v571 = v561;
      *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224680320;
      v567 = xmmword_224680330;
      *(_QWORD *)&v602[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 6, 0, 4, (uint64_t)&v546, (uint64_t)&v566, (uint64_t)v602, COERCE_DOUBLE(0xC600000106), xmmword_224680330);
    }
  }
  v226 = v32[19];
  if ((v226 & 0x80000000) != 0)
  {
    v229 = *v514;
    v230 = *(_DWORD *)(v31 + 1272);
    v231 = **v514;
    if (**v514)
      goto LABEL_633;
  }
  else
  {
    v227 = *(_QWORD *)(v31 + 2328);
    if (v226 >= (*(_QWORD *)(v31 + 2336) - v227) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v227 = *(_QWORD *)(v31 + 2328);
    }
    v228 = v227 + (v226 << 11);
    v229 = *v514;
    v230 = *(_DWORD *)(v228 + 992);
    v231 = **v514;
    if (**v514)
    {
LABEL_633:
      v232 = v32[19];
      if ((v232 & 0x80000000) == 0)
        goto LABEL_634;
LABEL_653:
      v234 = *(_DWORD *)(v31 + 1528);
      if (v231)
        goto LABEL_638;
      goto LABEL_654;
    }
  }
  if ((v230 & 0x10000000) != 0)
    v239 = 0x40000000;
  else
    v239 = 0x80000000;
  if ((v230 & 0x20000000) != 0)
    v230 = v239;
  else
    v230 &= 0xCFFFFFFF;
  v232 = v32[19];
  if ((v232 & 0x80000000) != 0)
    goto LABEL_653;
LABEL_634:
  v233 = *(_QWORD *)(v31 + 2328);
  if (v232 >= (*(_QWORD *)(v31 + 2336) - v233) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v233 = *(_QWORD *)(v31 + 2328);
    v229 = *v514;
    v231 = **v514;
  }
  v234 = *(_DWORD *)(v233 + (v232 << 11) + 1248);
  if (v231)
  {
LABEL_638:
    v235 = v32[22];
    if ((v235 & 0x80000000) == 0)
      goto LABEL_639;
LABEL_661:
    v237 = *(_DWORD *)(v31 + 1048);
    if (v231)
      goto LABEL_643;
    goto LABEL_662;
  }
LABEL_654:
  if ((v234 & 0x10000000) != 0)
    v240 = 0x40000000;
  else
    v240 = 0x80000000;
  if ((v234 & 0x20000000) != 0)
    v234 = v240;
  else
    v234 &= 0xCFFFFFFF;
  v235 = v32[22];
  if ((v235 & 0x80000000) != 0)
    goto LABEL_661;
LABEL_639:
  v236 = *(_QWORD *)(v31 + 2328);
  if (v235 >= (*(_QWORD *)(v31 + 2336) - v236) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v236 = *(_QWORD *)(v31 + 2328);
    v229 = *v514;
    v231 = **v514;
  }
  v237 = *(_DWORD *)(v236 + (v235 << 11) + 768);
  if (v231)
  {
LABEL_643:
    v238 = v32[22];
    if ((v238 & 0x80000000) != 0)
      goto LABEL_714;
    goto LABEL_669;
  }
LABEL_662:
  if ((v237 & 0x10000000) != 0)
    v241 = 0x40000000;
  else
    v241 = 0x80000000;
  if ((v237 & 0x20000000) != 0)
    v237 = v241;
  else
    v237 &= 0xCFFFFFFF;
  v238 = v32[22];
  if ((v238 & 0x80000000) != 0)
    goto LABEL_714;
LABEL_669:
  v242 = *(_QWORD *)(v31 + 2328);
  v243 = (*(_QWORD *)(v31 + 2336) - v242) >> 11;
  if (v243 > v238)
    goto LABEL_673;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v229 = *v514;
  v238 = v32[22];
  if ((v238 & 0x80000000) != 0)
  {
LABEL_714:
    v244 = *(_DWORD *)(v31 + 1080);
    if (*v229)
      goto LABEL_683;
    goto LABEL_677;
  }
  v242 = *(_QWORD *)(v31 + 2328);
  v243 = (*(_QWORD *)(v31 + 2336) - v242) >> 11;
LABEL_673:
  if (v243 <= v238)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v242 = *(_QWORD *)(v31 + 2328);
    v229 = *v514;
  }
  v244 = *(_DWORD *)(v242 + (v238 << 11) + 800);
  if (!*v229)
  {
LABEL_677:
    if ((v244 & 0x10000000) != 0)
      v245 = 0x40000000;
    else
      v245 = 0x80000000;
    if ((v244 & 0x20000000) != 0)
      v244 = v245;
    else
      v244 &= 0xCFFFFFFF;
  }
LABEL_683:
  v568 = v553;
  v569 = v554;
  v570 = v555;
  v567 = v552;
  v566 = v551;
  if ((v211 & 0x40000000) != 0)
  {
    v543 = v553;
    v544 = v554;
    v545 = v555;
    *(_QWORD *)&v596 = 0x161616160D0D0D0DLL;
    v542 = v552;
    v541 = v551;
    v536 = xmmword_224680340;
    v537 = xmmword_224680350;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 7, 0, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14700000107), xmmword_224680350);
    if ((v512 & 0x40000000) == 0)
    {
      v538 = v553;
      v539 = v554;
      v540 = v555;
      v537 = v552;
      v536 = v551;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_224680360;
      v597 = xmmword_224680370;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 7, 0, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14700000107), xmmword_224680370);
      if (((v484 | v220) & 1) == 0)
      {
        v598 = v553;
        v599 = v554;
        v600 = v555;
        *(_QWORD *)&v586 = 0xA0A0D0D0A0A0D0DLL;
        v596 = v551;
        v597 = v552;
        v591 = xmmword_224680380;
        v592 = xmmword_224680390;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 7, 0, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14700000107), xmmword_224680390);
        v246 = (v502 & 1) == 0 && ((v480 | v221) & 1) == 0;
        if ((v452 & 1) == 0 && v246)
        {
          v593 = v553;
          v594 = v554;
          v595 = v555;
          v592 = v552;
          v591 = v551;
          *(_QWORD *)&v581 = 0xA0A0A0A0D0D0D0DLL;
          v586 = xmmword_2246803A0;
          v587 = xmmword_2246803B0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 7, 0, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xC700000107), xmmword_2246803B0);
        }
      }
      v247 = (v474 & 1) == 0 && ((v480 | v221) & 1) == 0;
      if (v247 && (v507 & 1) == 0)
      {
        v588 = v568;
        v589 = v569;
        v590 = v570;
        v587 = v567;
        v586 = v566;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_2246803C0;
        v582 = xmmword_2246803D0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 7, 0, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xC700000107), xmmword_2246803D0);
      }
    }
    if (!(v234 & 0x40000000 | v220 & 1))
    {
      v583 = v568;
      v584 = v569;
      v585 = v570;
      *(_QWORD *)&v571 = 0x13130A0A16160D0DLL;
      v582 = v567;
      v581 = v566;
      v576 = xmmword_2246803E0;
      v577 = xmmword_2246803F0;
      *(_QWORD *)&v546 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 7, 0, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v546, COERCE_DOUBLE(0x14700000107), xmmword_2246803F0);
      v248 = (v230 & 0x40000000) == 0 && (v237 & 0x40000000 | v221 & 1) == 0;
      if ((v502 & 1) == 0 && v248)
      {
        v578 = v568;
        v579 = v569;
        v580 = v570;
        *(_QWORD *)&v546 = 0x131316160A0A0D0DLL;
        v577 = v567;
        v576 = v566;
        v571 = xmmword_224680400;
        v572 = xmmword_224680410;
        *(_QWORD *)&v602[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 7, 0, 4, (uint64_t)&v546, (uint64_t)&v571, (uint64_t)v602, COERCE_DOUBLE(0xC700000107), xmmword_224680410);
      }
    }
    v249 = (v507 & 1) == 0 && (v237 & 0x40000000 | v221 & 1) == 0;
    if (v249 && (v244 & 0x40000000) == 0)
    {
      v573 = v568;
      v574 = v569;
      v575 = v570;
      *(_QWORD *)&v602[0] = 0x16160D0D16160D0DLL;
      v572 = v567;
      v571 = v566;
      v546 = xmmword_224680420;
      v547 = xmmword_224680430;
      v603[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 7, 0, 4, (uint64_t)v602, (uint64_t)&v546, (uint64_t)v603, COERCE_DOUBLE(0xC700000107), xmmword_224680430);
    }
  }
  v250 = v466[2];
  v513 = a2[1];
  v515 = *a2;
  v519 = v469[3];
  v520 = v469[4];
  v517 = *((float32x4_t *)v469 + 1);
  v518 = v469[2];
  v516 = *v469;
  v465 = *(_OWORD *)v466;
  v503 = (_BYTE **)a2[2];
  v508 = *v466;
  v251 = *((_DWORD *)v250 + 192);
  v252 = ***v466;
  if (***v466)
  {
    v253 = *((_DWORD *)v250 + 256);
    v254 = *((_DWORD *)v250 + 200);
    v255 = *((_DWORD *)v250 + 208);
    v496 = *((_DWORD *)v250 + 264);
    if ((v496 & 0x40000000) == 0)
    {
LABEL_713:
      v256 = v253;
      v257 = 0;
      v258 = 0;
      v259 = 0;
      v260 = 0;
      v261 = 0;
      goto LABEL_766;
    }
  }
  else
  {
    if ((v251 & 0x20000000) != 0)
      v251 *= 4;
    v262 = *((_DWORD *)v250 + 256);
    if ((v262 & 0x20000000) != 0)
      v253 = 4 * v262;
    else
      v253 = *((_DWORD *)v250 + 256);
    v263 = *((_DWORD *)v250 + 200);
    if ((v263 & 0x20000000) != 0)
      v254 = 4 * v263;
    else
      v254 = *((_DWORD *)v250 + 200);
    v264 = *((_DWORD *)v250 + 264);
    if ((v264 & 0x20000000) != 0)
      v265 = 4 * v264;
    else
      v265 = *((_DWORD *)v250 + 264);
    v266 = *((_DWORD *)v250 + 208);
    if ((v266 & 0x10000000) != 0)
      v267 = 0x40000000;
    else
      v267 = 0x80000000;
    if ((v266 & 0x20000000) != 0)
      v255 = v267;
    else
      v255 = v266 & 0xCFFFFFFF;
    v496 = v265;
    if ((v265 & 0x40000000) == 0)
      goto LABEL_713;
  }
  v268 = *(unsigned int *)(v513 + 16);
  if ((v268 & 0x80000000) != 0)
  {
    v270 = *(_DWORD *)(v515 + 1076);
    v271 = **v503;
    if (**v503)
      goto LABEL_739;
  }
  else
  {
    v269 = *(_QWORD *)(v515 + 2328);
    if (v268 >= (*(_QWORD *)(v515 + 2336) - v269) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v269 = *(_QWORD *)(v515 + 2328);
    }
    v270 = *(_DWORD *)(v269 + (v268 << 11) + 796);
    v271 = **v503;
    if (**v503)
    {
LABEL_739:
      v272 = *(unsigned int *)(v513 + 16);
      if ((v272 & 0x80000000) == 0)
        goto LABEL_740;
LABEL_1273:
      v274 = *(_DWORD *)(v515 + 1332);
      if (v271)
        goto LABEL_744;
      goto LABEL_1274;
    }
  }
  if ((v270 & 0x10000000) != 0)
    v446 = 0x40000000;
  else
    v446 = 0x80000000;
  if ((v270 & 0x20000000) != 0)
    v270 = v446;
  else
    v270 &= 0xCFFFFFFF;
  v272 = *(unsigned int *)(v513 + 16);
  if ((v272 & 0x80000000) != 0)
    goto LABEL_1273;
LABEL_740:
  v273 = *(_QWORD *)(v515 + 2328);
  if (v272 >= (*(_QWORD *)(v515 + 2336) - v273) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v273 = *(_QWORD *)(v515 + 2328);
    v271 = **v503;
  }
  v274 = *(_DWORD *)(v273 + (v272 << 11) + 1052);
  if (v271)
  {
LABEL_744:
    v275 = *(unsigned int *)(v513 + 16);
    if ((v275 & 0x80000000) == 0)
      goto LABEL_745;
LABEL_1281:
    v277 = *(_DWORD *)(v515 + 1108);
    if (v271)
      goto LABEL_749;
    goto LABEL_1282;
  }
LABEL_1274:
  if ((v274 & 0x10000000) != 0)
    v447 = 0x40000000;
  else
    v447 = 0x80000000;
  if ((v274 & 0x20000000) != 0)
    v274 = v447;
  else
    v274 &= 0xCFFFFFFF;
  v275 = *(unsigned int *)(v513 + 16);
  if ((v275 & 0x80000000) != 0)
    goto LABEL_1281;
LABEL_745:
  v276 = *(_QWORD *)(v515 + 2328);
  if (v275 >= (*(_QWORD *)(v515 + 2336) - v276) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v276 = *(_QWORD *)(v515 + 2328);
    v271 = **v503;
  }
  v277 = *(_DWORD *)(v276 + (v275 << 11) + 828);
  if (v271)
  {
LABEL_749:
    v278 = *(unsigned int *)(v513 + 16);
    if ((v278 & 0x80000000) == 0)
      goto LABEL_750;
LABEL_1289:
    v280 = *(_DWORD *)(v515 + 1364);
    if (v271)
      goto LABEL_754;
    goto LABEL_1290;
  }
LABEL_1282:
  if ((v277 & 0x10000000) != 0)
    v448 = 0x40000000;
  else
    v448 = 0x80000000;
  if ((v277 & 0x20000000) != 0)
    v277 = v448;
  else
    v277 &= 0xCFFFFFFF;
  v278 = *(unsigned int *)(v513 + 16);
  if ((v278 & 0x80000000) != 0)
    goto LABEL_1289;
LABEL_750:
  v279 = *(_QWORD *)(v515 + 2328);
  if (v278 >= (*(_QWORD *)(v515 + 2336) - v279) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v279 = *(_QWORD *)(v515 + 2328);
    v271 = **v503;
  }
  v280 = *(_DWORD *)(v279 + (v278 << 11) + 1084);
  if (v271)
  {
LABEL_754:
    v281 = *(unsigned int *)(v513 + 16);
    if ((v281 & 0x80000000) == 0)
      goto LABEL_755;
    goto LABEL_1297;
  }
LABEL_1290:
  if ((v280 & 0x10000000) != 0)
    v449 = 0x40000000;
  else
    v449 = 0x80000000;
  if ((v280 & 0x20000000) != 0)
    v280 = v449;
  else
    v280 &= 0xCFFFFFFF;
  v281 = *(unsigned int *)(v513 + 16);
  if ((v281 & 0x80000000) == 0)
  {
LABEL_755:
    v282 = *(_QWORD *)(v515 + 2328);
    if (v281 >= (*(_QWORD *)(v515 + 2336) - v282) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v282 = *(_QWORD *)(v515 + 2328);
      v271 = **v503;
    }
    v256 = v253;
    v283 = v282 + (v281 << 11);
    v261 = (v270 >> 30) & 1;
    v260 = (v274 >> 30) & 1;
    v259 = (v277 >> 30) & 1;
    v284 = *(_DWORD *)(v283 + 860);
    v258 = (v280 >> 30) & 1;
    if (v271)
      goto LABEL_765;
    goto LABEL_759;
  }
LABEL_1297:
  v256 = v253;
  v261 = (v270 >> 30) & 1;
  v260 = (v274 >> 30) & 1;
  v259 = (v277 >> 30) & 1;
  v284 = *(_DWORD *)(v515 + 1140);
  v258 = (v280 >> 30) & 1;
  if (!v271)
  {
LABEL_759:
    if ((v284 & 0x10000000) != 0)
      v285 = 0x40000000;
    else
      v285 = 0x80000000;
    if ((v284 & 0x20000000) != 0)
      v284 = v285;
    else
      v284 &= 0xCFFFFFFF;
  }
LABEL_765:
  v257 = (v284 >> 30) & 1;
  v252 = **v508;
LABEL_766:
  v475 = v251 >> 30;
  v548 = v518;
  v549 = v519;
  v550 = v520;
  v547 = v517;
  v546 = v516;
  v286 = *((_DWORD *)v250 + 193);
  if (v252)
  {
    v287 = *((_DWORD *)v250 + 257);
    v288 = *((_DWORD *)v250 + 201);
    v289 = *((_DWORD *)v250 + 265);
    v290 = *((_DWORD *)v250 + 209);
  }
  else
  {
    if ((v286 & 0x10000000) != 0)
      v291 = 0x40000000;
    else
      v291 = 0x80000000;
    if ((v286 & 0x20000000) != 0)
      v286 = v291;
    else
      v286 &= 0xCFFFFFFF;
    v292 = *((_DWORD *)v250 + 257);
    if ((v292 & 0x10000000) != 0)
      v293 = 0x40000000;
    else
      v293 = 0x80000000;
    if ((v292 & 0x20000000) != 0)
      v287 = v293;
    else
      v287 = v292 & 0xCFFFFFFF;
    v294 = *((_DWORD *)v250 + 201);
    if ((v294 & 0x10000000) != 0)
      v295 = 0x40000000;
    else
      v295 = 0x80000000;
    if ((v294 & 0x20000000) != 0)
      v288 = v295;
    else
      v288 = v294 & 0xCFFFFFFF;
    v296 = *((_DWORD *)v250 + 265);
    if ((v296 & 0x10000000) != 0)
      v297 = 0x40000000;
    else
      v297 = 0x80000000;
    if ((v296 & 0x20000000) != 0)
      v289 = v297;
    else
      v289 = v296 & 0xCFFFFFFF;
    v298 = *((_DWORD *)v250 + 209);
    if ((v298 & 0x10000000) != 0)
      v290 = 0x40000000;
    else
      v290 = 0x80000000;
    if ((v298 & 0x20000000) == 0)
      v290 = v298 & 0xCFFFFFFF;
  }
  v299 = v254 >> 30;
  v300 = v256 >> 30;
  v301 = v255 >> 30;
  v461 = v286 >> 30;
  v485 = v288 >> 30;
  v491 = v287 >> 30;
  v470 = v290 >> 30;
  if ((v496 & 0x40000000) != 0)
  {
    v543 = v518;
    v544 = v519;
    v545 = v520;
    v542 = v517;
    v541 = v516;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_224680440;
    v537 = xmmword_224680450;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 0, 1, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14800000108), xmmword_224680450);
    if (!v258)
    {
      v538 = v518;
      v539 = v519;
      v540 = v520;
      v537 = v517;
      v536 = v516;
      *(_QWORD *)&v591 = 0x4040D0D04040D0DLL;
      v596 = xmmword_224680460;
      v597 = xmmword_224680470;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 0, 1, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14800000108), xmmword_224680470);
      v302 = (v259 | v299 & 1) == 0;
      if (!(v260 | v300 & 1))
      {
        v598 = v518;
        v599 = v519;
        v600 = v520;
        v596 = v516;
        v597 = v517;
        *(_QWORD *)&v586 = 0x40404040D0D0D0DLL;
        v591 = xmmword_224680480;
        v592 = xmmword_224680490;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 0, 1, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14800000108), xmmword_224680490);
        v303 = (v475 & 1) == 0 && v302;
        if (!v261 && v303)
        {
          v593 = v518;
          v594 = v519;
          v595 = v520;
          v592 = v517;
          v591 = v516;
          *(_QWORD *)&v581 = 0x4040D0D04040D0DLL;
          v586 = xmmword_2246804A0;
          v587 = xmmword_2246804B0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 0, 1, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xC800000108), xmmword_2246804B0);
        }
      }
      if (v257)
        v304 = 0;
      else
        v304 = v302;
      if (v304 && (v301 & 1) == 0)
      {
        v588 = v518;
        v589 = v519;
        v590 = v520;
        *(_QWORD *)&v576 = 0x40404040D0D0D0DLL;
        v587 = v517;
        v586 = v516;
        v581 = xmmword_2246804C0;
        v582 = xmmword_2246804D0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 0, 1, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xC800000108), xmmword_2246804D0);
      }
    }
    if (((v300 | v491) & 1) == 0)
    {
      v583 = v518;
      v584 = v519;
      v585 = v520;
      v582 = v517;
      v581 = v516;
      *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
      v576 = xmmword_2246804E0;
      v577 = xmmword_2246804F0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 0, 1, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14800000108), xmmword_2246804F0);
      v305 = (v461 & 1) == 0 && ((v299 | v485) & 1) == 0;
      if ((v475 & 1) == 0 && v305)
      {
        v578 = v518;
        v579 = v519;
        v580 = v520;
        v577 = v517;
        v576 = v516;
        *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
        v571 = xmmword_224680500;
        v572 = xmmword_224680510;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 0, 1, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xC800000108), xmmword_224680510);
      }
    }
    v306 = (v301 & 1) == 0 && ((v299 | v485) & 1) == 0;
    if (v306 && (v470 & 1) == 0)
    {
      v573 = v518;
      v574 = v519;
      v575 = v520;
      v572 = v517;
      v571 = v516;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224680520;
      v567 = xmmword_224680530;
      *(_QWORD *)&v556 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 0, 1, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0xC800000108), xmmword_224680530);
    }
  }
  v528 = v548;
  v529 = v549;
  v530 = v550;
  v526 = v546;
  v527 = v547;
  v307 = *((_DWORD *)v250 + 194);
  if (**v508)
  {
    v308 = *((_DWORD *)v250 + 258);
    v309 = *((_DWORD *)v250 + 202);
    v310 = *((_DWORD *)v250 + 266);
    v311 = *((_DWORD *)v250 + 210);
  }
  else
  {
    if ((v307 & 0x10000000) != 0)
      v312 = 0x40000000;
    else
      v312 = 0x80000000;
    if ((v307 & 0x20000000) != 0)
      v307 = v312;
    else
      v307 &= 0xCFFFFFFF;
    v313 = *((_DWORD *)v250 + 258);
    if ((v313 & 0x10000000) != 0)
      v314 = 0x40000000;
    else
      v314 = 0x80000000;
    if ((v313 & 0x20000000) != 0)
      v308 = v314;
    else
      v308 = v313 & 0xCFFFFFFF;
    v315 = *((_DWORD *)v250 + 202);
    if ((v315 & 0x10000000) != 0)
      v316 = 0x40000000;
    else
      v316 = 0x80000000;
    if ((v315 & 0x20000000) != 0)
      v309 = v316;
    else
      v309 = v315 & 0xCFFFFFFF;
    v317 = *((_DWORD *)v250 + 266);
    if ((v317 & 0x10000000) != 0)
      v318 = 0x40000000;
    else
      v318 = 0x80000000;
    if ((v317 & 0x20000000) != 0)
      v310 = v318;
    else
      v310 = v317 & 0xCFFFFFFF;
    v319 = *((_DWORD *)v250 + 210);
    if ((v319 & 0x10000000) != 0)
      v311 = 0x40000000;
    else
      v311 = 0x80000000;
    if ((v319 & 0x20000000) == 0)
      v311 = v319 & 0xCFFFFFFF;
  }
  v320 = v309 >> 30;
  v458 = v307 >> 30;
  v481 = v308 >> 30;
  v467 = v311 >> 30;
  v533 = v548;
  v534 = v549;
  v535 = v550;
  v531 = v546;
  v532 = v547;
  if ((v289 & 0x40000000) != 0)
  {
    v543 = v548;
    v544 = v549;
    v545 = v550;
    v542 = v547;
    v541 = v546;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_224680540;
    v537 = xmmword_224680550;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 1, 1, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14900000109), xmmword_224680550);
    if ((v496 & 0x40000000) == 0)
    {
      v538 = v548;
      v539 = v549;
      v540 = v550;
      v537 = v547;
      v536 = v546;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_224680560;
      v597 = xmmword_224680570;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 1, 1, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14900000109), xmmword_224680570);
      if (((v300 | v491) & 1) == 0)
      {
        v598 = v548;
        v599 = v549;
        v600 = v550;
        v596 = v546;
        v597 = v547;
        *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
        v591 = xmmword_224680580;
        v592 = xmmword_224680590;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 1, 1, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14900000109), xmmword_224680590);
        v321 = (v461 & 1) == 0 && ((v299 | v485) & 1) == 0;
        if ((v475 & 1) == 0 && v321)
        {
          v593 = v548;
          v594 = v549;
          v595 = v550;
          v592 = v547;
          v591 = v546;
          *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
          v586 = xmmword_2246805A0;
          v587 = xmmword_2246805B0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 1, 1, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xC900000109), xmmword_2246805B0);
        }
      }
      v322 = (v301 & 1) == 0 && ((v299 | v485) & 1) == 0;
      if (v322 && (v470 & 1) == 0)
      {
        v588 = v533;
        v589 = v534;
        v590 = v535;
        v587 = v532;
        v586 = v531;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_2246805C0;
        v582 = xmmword_2246805D0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 1, 1, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xC900000109), xmmword_2246805D0);
      }
    }
    if (((v491 | v481) & 1) == 0)
    {
      v583 = v533;
      v584 = v534;
      v585 = v535;
      v582 = v532;
      v581 = v531;
      *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
      v576 = xmmword_2246805E0;
      v577 = xmmword_2246805F0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 1, 1, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14900000109), xmmword_2246805F0);
      v323 = (v458 & 1) == 0 && ((v485 | v320) & 1) == 0;
      if ((v461 & 1) == 0 && v323)
      {
        v578 = v533;
        v579 = v534;
        v580 = v535;
        v577 = v532;
        v576 = v531;
        *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
        v571 = xmmword_224680600;
        v572 = xmmword_224680610;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 1, 1, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xC900000109), xmmword_224680610);
      }
    }
    v324 = (v470 & 1) == 0 && ((v485 | v320) & 1) == 0;
    if (v324 && (v467 & 1) == 0)
    {
      v573 = v533;
      v574 = v534;
      v575 = v535;
      v572 = v532;
      v571 = v531;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224680620;
      v567 = xmmword_224680630;
      *(_QWORD *)&v556 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 1, 1, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0xC900000109), xmmword_224680630);
    }
  }
  v325 = *((_DWORD *)v250 + 195);
  if (**v508)
  {
    v326 = v289;
    v327 = *((_DWORD *)v250 + 259);
    v328 = *((_DWORD *)v250 + 203);
    v329 = *((_DWORD *)v250 + 267);
    v330 = *((_DWORD *)v250 + 211);
  }
  else
  {
    v326 = v289;
    if ((v325 & 0x10000000) != 0)
      v331 = 0x40000000;
    else
      v331 = 0x80000000;
    if ((v325 & 0x20000000) != 0)
      v325 = v331;
    else
      v325 &= 0xCFFFFFFF;
    v332 = *((_DWORD *)v250 + 259);
    if ((v332 & 0x10000000) != 0)
      v333 = 0x40000000;
    else
      v333 = 0x80000000;
    if ((v332 & 0x20000000) != 0)
      v327 = v333;
    else
      v327 = v332 & 0xCFFFFFFF;
    v334 = *((_DWORD *)v250 + 203);
    if ((v334 & 0x10000000) != 0)
      v335 = 0x40000000;
    else
      v335 = 0x80000000;
    if ((v334 & 0x20000000) != 0)
      v328 = v335;
    else
      v328 = v334 & 0xCFFFFFFF;
    v336 = *((_DWORD *)v250 + 267);
    if ((v336 & 0x10000000) != 0)
      v337 = 0x40000000;
    else
      v337 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v329 = v337;
    else
      v329 = v336 & 0xCFFFFFFF;
    v338 = *((_DWORD *)v250 + 211);
    if ((v338 & 0x10000000) != 0)
      v330 = 0x40000000;
    else
      v330 = 0x80000000;
    if ((v338 & 0x20000000) == 0)
      v330 = v338 & 0xCFFFFFFF;
  }
  v476 = v328 >> 30;
  v455 = v325 >> 30;
  v497 = v327 >> 30;
  v339 = v330 >> 30;
  if ((v310 & 0x40000000) != 0)
  {
    v340 = (v326 & 0x40000000) == 0;
    v543 = v528;
    v544 = v529;
    v545 = v530;
    v542 = v527;
    v541 = v526;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_224680640;
    v537 = xmmword_224680650;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 2, 1, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14A0000010ALL), xmmword_224680650);
    if (v340)
    {
      v538 = v528;
      v539 = v529;
      v540 = v530;
      v537 = v527;
      v536 = v526;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_224680660;
      v597 = xmmword_224680670;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 2, 1, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14A0000010ALL), xmmword_224680670);
      if (((v491 | v481) & 1) == 0)
      {
        v598 = v528;
        v599 = v529;
        v600 = v530;
        v596 = v526;
        v597 = v527;
        *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
        v591 = xmmword_224680680;
        v592 = xmmword_224680690;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 2, 1, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14A0000010ALL), xmmword_224680690);
        v341 = (v458 & 1) == 0 && ((v485 | v320) & 1) == 0;
        if ((v461 & 1) == 0 && v341)
        {
          v593 = v528;
          v594 = v529;
          v595 = v530;
          v592 = v527;
          v591 = v526;
          *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
          v586 = xmmword_2246806A0;
          v587 = xmmword_2246806B0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 2, 1, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xCA0000010ALL), xmmword_2246806B0);
        }
      }
      v342 = (v470 & 1) == 0 && ((v485 | v320) & 1) == 0;
      if (v342 && (v467 & 1) == 0)
      {
        v588 = v528;
        v589 = v529;
        v590 = v530;
        v587 = v527;
        v586 = v526;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_2246806C0;
        v582 = xmmword_2246806D0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 2, 1, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xCA0000010ALL), xmmword_2246806D0);
      }
    }
    if (((v481 | v497) & 1) == 0)
    {
      v583 = v528;
      v584 = v529;
      v585 = v530;
      v582 = v527;
      v581 = v526;
      *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
      v576 = xmmword_2246806E0;
      v577 = xmmword_2246806F0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 2, 1, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14A0000010ALL), xmmword_2246806F0);
      v343 = (v455 & 1) == 0 && ((v320 | v476) & 1) == 0;
      if ((v458 & 1) == 0 && v343)
      {
        v578 = v528;
        v579 = v529;
        v580 = v530;
        v577 = v527;
        v576 = v526;
        *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
        v571 = xmmword_224680700;
        v572 = xmmword_224680710;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 2, 1, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xCA0000010ALL), xmmword_224680710);
      }
    }
    v344 = (v467 & 1) == 0 && ((v320 | v476) & 1) == 0;
    if (v344 && (v339 & 1) == 0)
    {
      v573 = v528;
      v574 = v529;
      v575 = v530;
      v572 = v527;
      v571 = v526;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224680720;
      v567 = xmmword_224680730;
      *(_QWORD *)&v556 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 2, 1, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0xCA0000010ALL), xmmword_224680730);
    }
  }
  v345 = *((_DWORD *)v250 + 196);
  if (**v508)
  {
    v346 = *((_DWORD *)v250 + 260);
    v347 = *((_DWORD *)v250 + 204);
    v348 = *((_DWORD *)v250 + 268);
    v349 = *((_DWORD *)v250 + 212);
  }
  else
  {
    if ((v345 & 0x10000000) != 0)
      v350 = 0x40000000;
    else
      v350 = 0x80000000;
    if ((v345 & 0x20000000) != 0)
      v345 = v350;
    else
      v345 &= 0xCFFFFFFF;
    v351 = *((_DWORD *)v250 + 260);
    if ((v351 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v351 & 0x20000000) != 0)
      v346 = v352;
    else
      v346 = v351 & 0xCFFFFFFF;
    v353 = *((_DWORD *)v250 + 204);
    if ((v353 & 0x10000000) != 0)
      v354 = 0x40000000;
    else
      v354 = 0x80000000;
    if ((v353 & 0x20000000) != 0)
      v347 = v354;
    else
      v347 = v353 & 0xCFFFFFFF;
    v355 = *((_DWORD *)v250 + 268);
    if ((v355 & 0x10000000) != 0)
      v356 = 0x40000000;
    else
      v356 = 0x80000000;
    if ((v355 & 0x20000000) != 0)
      v348 = v356;
    else
      v348 = v355 & 0xCFFFFFFF;
    v357 = *((_DWORD *)v250 + 212);
    if ((v357 & 0x10000000) != 0)
      v349 = 0x40000000;
    else
      v349 = 0x80000000;
    if ((v357 & 0x20000000) == 0)
      v349 = v357 & 0xCFFFFFFF;
  }
  v358 = v347 >> 30;
  v471 = v345 >> 30;
  v359 = v346 >> 30;
  v486 = v349 >> 30;
  if ((v329 & 0x40000000) != 0)
  {
    v543 = v528;
    v544 = v529;
    v545 = v530;
    v542 = v527;
    v541 = v526;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_224680740;
    v537 = xmmword_224680750;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 3, 1, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14B0000010BLL), xmmword_224680750);
    if ((v310 & 0x40000000) == 0)
    {
      v538 = v528;
      v539 = v529;
      v540 = v530;
      v537 = v527;
      v536 = v526;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_224680760;
      v597 = xmmword_224680770;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 3, 1, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14B0000010BLL), xmmword_224680770);
      v360 = ((v320 | v476) & 1) == 0;
      if (((v481 | v497) & 1) == 0)
      {
        v598 = v528;
        v599 = v529;
        v600 = v530;
        v596 = v526;
        v597 = v527;
        *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
        v591 = xmmword_224680780;
        v592 = xmmword_224680790;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 3, 1, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14B0000010BLL), xmmword_224680790);
        v361 = (v455 & 1) == 0 && v360;
        if ((v458 & 1) == 0 && v361)
        {
          v593 = v528;
          v594 = v529;
          v595 = v530;
          v592 = v527;
          v591 = v526;
          *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
          v586 = xmmword_2246807A0;
          v587 = xmmword_2246807B0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 3, 1, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xCB0000010BLL), xmmword_2246807B0);
        }
      }
      v362 = (v467 & 1) == 0 && v360;
      if (v362 && (v339 & 1) == 0)
      {
        v588 = v528;
        v589 = v529;
        v590 = v530;
        v587 = v527;
        v586 = v526;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_2246807C0;
        v582 = xmmword_2246807D0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 3, 1, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xCB0000010BLL), xmmword_2246807D0);
      }
    }
    if (((v497 | v359) & 1) == 0)
    {
      v583 = v528;
      v584 = v529;
      v585 = v530;
      v582 = v527;
      v581 = v526;
      *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
      v576 = xmmword_2246807E0;
      v577 = xmmword_2246807F0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 3, 1, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14B0000010BLL), xmmword_2246807F0);
      v363 = (v471 & 1) == 0 && ((v476 | v358) & 1) == 0;
      if ((v455 & 1) == 0 && v363)
      {
        v578 = v528;
        v579 = v529;
        v580 = v530;
        v577 = v527;
        v576 = v526;
        *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
        v571 = xmmword_224680800;
        v572 = xmmword_224680810;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 3, 1, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xCB0000010BLL), xmmword_224680810);
      }
    }
    v364 = (v339 & 1) == 0 && ((v476 | v358) & 1) == 0;
    if (v364 && (v486 & 1) == 0)
    {
      v573 = v528;
      v574 = v529;
      v575 = v530;
      v572 = v527;
      v571 = v526;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224680820;
      v567 = xmmword_224680830;
      *(_QWORD *)&v556 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 3, 1, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0xCB0000010BLL), xmmword_224680830);
    }
  }
  v365 = *((_DWORD *)v250 + 197);
  if (**v508)
  {
    v366 = *((_DWORD *)v250 + 261);
    v367 = *((_DWORD *)v250 + 205);
    v368 = *((_DWORD *)v250 + 269);
    v369 = *((_DWORD *)v250 + 213);
  }
  else
  {
    if ((v365 & 0x10000000) != 0)
      v370 = 0x40000000;
    else
      v370 = 0x80000000;
    if ((v365 & 0x20000000) != 0)
      v365 = v370;
    else
      v365 &= 0xCFFFFFFF;
    v371 = *((_DWORD *)v250 + 261);
    if ((v371 & 0x10000000) != 0)
      v372 = 0x40000000;
    else
      v372 = 0x80000000;
    if ((v371 & 0x20000000) != 0)
      v366 = v372;
    else
      v366 = v371 & 0xCFFFFFFF;
    v373 = *((_DWORD *)v250 + 205);
    if ((v373 & 0x10000000) != 0)
      v374 = 0x40000000;
    else
      v374 = 0x80000000;
    if ((v373 & 0x20000000) != 0)
      v367 = v374;
    else
      v367 = v373 & 0xCFFFFFFF;
    v375 = *((_DWORD *)v250 + 269);
    if ((v375 & 0x10000000) != 0)
      v376 = 0x40000000;
    else
      v376 = 0x80000000;
    if ((v375 & 0x20000000) != 0)
      v368 = v376;
    else
      v368 = v375 & 0xCFFFFFFF;
    v377 = *((_DWORD *)v250 + 213);
    if ((v377 & 0x10000000) != 0)
      v369 = 0x40000000;
    else
      v369 = 0x80000000;
    if ((v377 & 0x20000000) == 0)
      v369 = v377 & 0xCFFFFFFF;
  }
  v378 = v367 >> 30;
  v468 = v365 >> 30;
  v379 = v366 >> 30;
  v482 = v369 >> 30;
  if ((v348 & 0x40000000) != 0)
  {
    v543 = v528;
    v544 = v529;
    v545 = v530;
    v542 = v527;
    v541 = v526;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_224680840;
    v537 = xmmword_224680850;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 4, 1, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14C0000010CLL), xmmword_224680850);
    if ((v329 & 0x40000000) == 0)
    {
      v538 = v528;
      v539 = v529;
      v540 = v530;
      v537 = v527;
      v536 = v526;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_224680860;
      v597 = xmmword_224680870;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 4, 1, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14C0000010CLL), xmmword_224680870);
      if (((v497 | v359) & 1) == 0)
      {
        v598 = v528;
        v599 = v529;
        v600 = v530;
        v596 = v526;
        v597 = v527;
        *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
        v591 = xmmword_224680880;
        v592 = xmmword_224680890;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 4, 1, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14C0000010CLL), xmmword_224680890);
        v380 = (v471 & 1) == 0 && ((v476 | v358) & 1) == 0;
        if ((v455 & 1) == 0 && v380)
        {
          v593 = v528;
          v594 = v529;
          v595 = v530;
          v592 = v527;
          v591 = v526;
          *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
          v586 = xmmword_2246808A0;
          v587 = xmmword_2246808B0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 4, 1, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xCC0000010CLL), xmmword_2246808B0);
        }
      }
      v381 = (v339 & 1) == 0 && ((v476 | v358) & 1) == 0;
      if (v381 && (v486 & 1) == 0)
      {
        v588 = v528;
        v589 = v529;
        v590 = v530;
        v587 = v527;
        v586 = v526;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_2246808C0;
        v582 = xmmword_2246808D0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 4, 1, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xCC0000010CLL), xmmword_2246808D0);
      }
    }
    if (((v359 | v379) & 1) == 0)
    {
      v583 = v528;
      v584 = v529;
      v585 = v530;
      v582 = v527;
      v581 = v526;
      *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
      v576 = xmmword_2246808E0;
      v577 = xmmword_2246808F0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 4, 1, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14C0000010CLL), xmmword_2246808F0);
      v382 = (v468 & 1) == 0 && ((v358 | v378) & 1) == 0;
      if ((v471 & 1) == 0 && v382)
      {
        v578 = v528;
        v579 = v529;
        v580 = v530;
        v577 = v527;
        v576 = v526;
        *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
        v571 = xmmword_224680900;
        v572 = xmmword_224680910;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 4, 1, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xCC0000010CLL), xmmword_224680910);
      }
    }
    v383 = (v486 & 1) == 0 && ((v358 | v378) & 1) == 0;
    if (v383 && (v482 & 1) == 0)
    {
      v573 = v528;
      v574 = v529;
      v575 = v530;
      v572 = v527;
      v571 = v526;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224680920;
      v567 = xmmword_224680930;
      *(_QWORD *)&v556 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 4, 1, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v556, COERCE_DOUBLE(0xCC0000010CLL), xmmword_224680930);
    }
  }
  v384 = *((_DWORD *)v250 + 198);
  if (**v508)
  {
    v385 = *((_DWORD *)v250 + 262);
    v386 = *((_DWORD *)v250 + 206);
    v387 = *((_DWORD *)v250 + 270);
    v388 = *((_DWORD *)v250 + 214);
  }
  else
  {
    if ((v384 & 0x10000000) != 0)
      v389 = 0x40000000;
    else
      v389 = 0x80000000;
    if ((v384 & 0x20000000) != 0)
      v384 = v389;
    else
      v384 &= 0xCFFFFFFF;
    v390 = *((_DWORD *)v250 + 262);
    if ((v390 & 0x10000000) != 0)
      v391 = 0x40000000;
    else
      v391 = 0x80000000;
    if ((v390 & 0x20000000) != 0)
      v385 = v391;
    else
      v385 = v390 & 0xCFFFFFFF;
    v392 = *((_DWORD *)v250 + 206);
    if ((v392 & 0x10000000) != 0)
      v393 = 0x40000000;
    else
      v393 = 0x80000000;
    if ((v392 & 0x20000000) != 0)
      v386 = v393;
    else
      v386 = v392 & 0xCFFFFFFF;
    v394 = *((_DWORD *)v250 + 270);
    if ((v394 & 0x10000000) != 0)
      v395 = 0x40000000;
    else
      v395 = 0x80000000;
    if ((v394 & 0x20000000) != 0)
      v387 = v395;
    else
      v387 = v394 & 0xCFFFFFFF;
    v396 = *((_DWORD *)v250 + 214);
    if ((v396 & 0x10000000) != 0)
      v388 = 0x40000000;
    else
      v388 = 0x80000000;
    if ((v396 & 0x20000000) == 0)
      v388 = v396 & 0xCFFFFFFF;
  }
  v462 = v384 >> 30;
  v492 = v386 >> 30;
  v498 = v385 >> 30;
  v477 = v388 >> 30;
  v558 = v528;
  v559 = v529;
  v560 = v530;
  v557 = v527;
  v556 = v526;
  if ((v368 & 0x40000000) != 0)
  {
    v543 = v528;
    v544 = v529;
    v545 = v530;
    v542 = v527;
    v541 = v526;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_224680940;
    v537 = xmmword_224680950;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 5, 1, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14D0000010DLL), xmmword_224680950);
    if ((v348 & 0x40000000) == 0)
    {
      v538 = v528;
      v539 = v529;
      v540 = v530;
      v537 = v527;
      v536 = v526;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_224680960;
      v597 = xmmword_224680970;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 5, 1, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14D0000010DLL), xmmword_224680970);
      if (((v359 | v379) & 1) == 0)
      {
        v598 = v528;
        v599 = v529;
        v600 = v530;
        v596 = v526;
        v597 = v527;
        *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
        v591 = xmmword_224680980;
        v592 = xmmword_224680990;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 5, 1, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14D0000010DLL), xmmword_224680990);
        v397 = (v468 & 1) == 0 && ((v358 | v378) & 1) == 0;
        if ((v471 & 1) == 0 && v397)
        {
          v593 = v528;
          v594 = v529;
          v595 = v530;
          v592 = v527;
          v591 = v526;
          *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
          v586 = xmmword_2246809A0;
          v587 = xmmword_2246809B0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 5, 1, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xCD0000010DLL), xmmword_2246809B0);
        }
      }
      v398 = (v486 & 1) == 0 && ((v358 | v378) & 1) == 0;
      if (v398 && (v482 & 1) == 0)
      {
        v588 = v558;
        v589 = v559;
        v590 = v560;
        v587 = v557;
        v586 = v556;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_2246809C0;
        v582 = xmmword_2246809D0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 5, 1, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xCD0000010DLL), xmmword_2246809D0);
      }
    }
    if (((v379 | v498) & 1) == 0)
    {
      v583 = v558;
      v584 = v559;
      v585 = v560;
      v582 = v557;
      v581 = v556;
      *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
      v576 = xmmword_2246809E0;
      v577 = xmmword_2246809F0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 5, 1, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14D0000010DLL), xmmword_2246809F0);
      v399 = (v462 & 1) == 0 && ((v378 | v492) & 1) == 0;
      if ((v468 & 1) == 0 && v399)
      {
        v578 = v558;
        v579 = v559;
        v580 = v560;
        v577 = v557;
        v576 = v556;
        *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
        v571 = xmmword_224680A00;
        v572 = xmmword_224680A10;
        *(_QWORD *)&v561 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 5, 1, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)&v561, COERCE_DOUBLE(0xCD0000010DLL), xmmword_224680A10);
      }
    }
    v400 = (v482 & 1) == 0 && ((v378 | v492) & 1) == 0;
    if (v400 && (v477 & 1) == 0)
    {
      v573 = v558;
      v574 = v559;
      v575 = v560;
      v572 = v557;
      v571 = v556;
      *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224680A20;
      v567 = xmmword_224680A30;
      *(_QWORD *)&v551 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 5, 1, 4, (uint64_t)&v561, (uint64_t)&v566, (uint64_t)&v551, COERCE_DOUBLE(0xCD0000010DLL), xmmword_224680A30);
    }
  }
  v553 = v528;
  v554 = v529;
  v555 = v530;
  v552 = v527;
  v551 = v526;
  v401 = *((_DWORD *)v250 + 199);
  if (**v508)
  {
    v402 = *((_DWORD *)v250 + 263);
    v403 = *((_DWORD *)v250 + 207);
    v404 = *((_DWORD *)v250 + 271);
    v405 = *((_DWORD *)v250 + 215);
  }
  else
  {
    if ((v401 & 0x10000000) != 0)
      v406 = 0x40000000;
    else
      v406 = 0x80000000;
    if ((v401 & 0x20000000) != 0)
      v401 = v406;
    else
      v401 &= 0xCFFFFFFF;
    v407 = *((_DWORD *)v250 + 263);
    if ((v407 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v407 & 0x20000000) != 0)
      v402 = v408;
    else
      v402 = v407 & 0xCFFFFFFF;
    v409 = *((_DWORD *)v250 + 207);
    if ((v409 & 0x10000000) != 0)
      v410 = 0x40000000;
    else
      v410 = 0x80000000;
    if ((v409 & 0x20000000) != 0)
      v403 = v410;
    else
      v403 = v409 & 0xCFFFFFFF;
    v411 = *((_DWORD *)v250 + 271);
    if ((v411 & 0x10000000) != 0)
      v412 = 0x40000000;
    else
      v412 = 0x80000000;
    if ((v411 & 0x20000000) != 0)
      v404 = v412;
    else
      v404 = v411 & 0xCFFFFFFF;
    v413 = *((_DWORD *)v250 + 215);
    if ((v413 & 0x10000000) != 0)
      v405 = 0x40000000;
    else
      v405 = 0x80000000;
    if ((v413 & 0x20000000) == 0)
      v405 = v413 & 0xCFFFFFFF;
  }
  v414 = v403 >> 30;
  v487 = v401 >> 30;
  v415 = v402 >> 30;
  v509 = v405 >> 30;
  v563 = v528;
  v564 = v529;
  v565 = v530;
  v562 = v527;
  v561 = v526;
  if ((v387 & 0x40000000) != 0)
  {
    v543 = v528;
    v544 = v529;
    v545 = v530;
    v542 = v527;
    v541 = v526;
    *(_QWORD *)&v596 = 0xD0D0D0D0D0D0D0DLL;
    v536 = xmmword_224680A40;
    v537 = xmmword_224680A50;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 6, 1, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14E0000010ELL), xmmword_224680A50);
    if ((v368 & 0x40000000) == 0)
    {
      v538 = v528;
      v539 = v529;
      v540 = v530;
      v537 = v527;
      v536 = v526;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_224680A60;
      v597 = xmmword_224680A70;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 6, 1, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14E0000010ELL), xmmword_224680A70);
      if (((v379 | v498) & 1) == 0)
      {
        v598 = v528;
        v599 = v529;
        v600 = v530;
        v596 = v526;
        v597 = v527;
        *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
        v591 = xmmword_224680A80;
        v592 = xmmword_224680A90;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 6, 1, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14E0000010ELL), xmmword_224680A90);
        v416 = (v462 & 1) == 0 && ((v378 | v492) & 1) == 0;
        if ((v468 & 1) == 0 && v416)
        {
          v593 = v528;
          v594 = v529;
          v595 = v530;
          v592 = v527;
          v591 = v526;
          *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
          v586 = xmmword_224680AA0;
          v587 = xmmword_224680AB0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 6, 1, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xCE0000010ELL), xmmword_224680AB0);
        }
      }
      v417 = (v482 & 1) == 0 && ((v378 | v492) & 1) == 0;
      if (v417 && (v477 & 1) == 0)
      {
        v588 = v563;
        v589 = v564;
        v590 = v565;
        v587 = v562;
        v586 = v561;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v581 = xmmword_224680AC0;
        v582 = xmmword_224680AD0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 6, 1, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xCE0000010ELL), xmmword_224680AD0);
      }
    }
    if (((v498 | v415) & 1) == 0)
    {
      v583 = v563;
      v584 = v564;
      v585 = v565;
      v582 = v562;
      v581 = v561;
      *(_QWORD *)&v571 = 0xD0D0D0D0D0D0D0DLL;
      v576 = xmmword_224680AE0;
      v577 = xmmword_224680AF0;
      *(_QWORD *)&v566 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 6, 1, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)&v566, COERCE_DOUBLE(0x14E0000010ELL), xmmword_224680AF0);
      v418 = (v487 & 1) == 0 && ((v492 | v414) & 1) == 0;
      if ((v462 & 1) == 0 && v418)
      {
        v578 = v563;
        v579 = v564;
        v580 = v565;
        v577 = v562;
        v576 = v561;
        *(_QWORD *)&v566 = 0xD0D0D0D0D0D0D0DLL;
        v571 = xmmword_224680B00;
        v572 = xmmword_224680B10;
        *(_QWORD *)&v602[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 6, 1, 4, (uint64_t)&v566, (uint64_t)&v571, (uint64_t)v602, COERCE_DOUBLE(0xCE0000010ELL), xmmword_224680B10);
      }
    }
    v419 = (v477 & 1) == 0 && ((v492 | v414) & 1) == 0;
    if (v419 && (v509 & 1) == 0)
    {
      v573 = v563;
      v574 = v564;
      v575 = v565;
      v572 = v562;
      v571 = v561;
      *(_QWORD *)&v602[0] = 0xD0D0D0D0D0D0D0DLL;
      v566 = xmmword_224680B20;
      v567 = xmmword_224680B30;
      v603[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 6, 1, 4, (uint64_t)v602, (uint64_t)&v566, (uint64_t)v603, COERCE_DOUBLE(0xCE0000010ELL), xmmword_224680B30);
    }
  }
  v420 = *(unsigned int *)(v513 + 88);
  if ((v420 & 0x80000000) != 0)
  {
    v423 = *v503;
    v424 = *(_DWORD *)(v515 + 1048);
    v425 = **v503;
    if (**v503)
      goto LABEL_1184;
  }
  else
  {
    v421 = *(_QWORD *)(v515 + 2328);
    if (v420 >= (*(_QWORD *)(v515 + 2336) - v421) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v421 = *(_QWORD *)(v515 + 2328);
    }
    v422 = v421 + (v420 << 11);
    v423 = *v503;
    v424 = *(_DWORD *)(v422 + 768);
    v425 = **v503;
    if (**v503)
    {
LABEL_1184:
      v426 = *(unsigned int *)(v513 + 88);
      if ((v426 & 0x80000000) == 0)
        goto LABEL_1185;
LABEL_1204:
      v428 = *(_DWORD *)(v515 + 1304);
      if (v425)
        goto LABEL_1189;
      goto LABEL_1205;
    }
  }
  if ((v424 & 0x10000000) != 0)
    v433 = 0x40000000;
  else
    v433 = 0x80000000;
  if ((v424 & 0x20000000) != 0)
    v424 = v433;
  else
    v424 &= 0xCFFFFFFF;
  v426 = *(unsigned int *)(v513 + 88);
  if ((v426 & 0x80000000) != 0)
    goto LABEL_1204;
LABEL_1185:
  v427 = *(_QWORD *)(v515 + 2328);
  if (v426 >= (*(_QWORD *)(v515 + 2336) - v427) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v427 = *(_QWORD *)(v515 + 2328);
    v423 = *v503;
    v425 = **v503;
  }
  v428 = *(_DWORD *)(v427 + (v426 << 11) + 1024);
  if (v425)
  {
LABEL_1189:
    v429 = *(unsigned int *)(v513 + 88);
    if ((v429 & 0x80000000) == 0)
      goto LABEL_1190;
LABEL_1212:
    v431 = *(_DWORD *)(v515 + 1080);
    if (v425)
      goto LABEL_1194;
    goto LABEL_1213;
  }
LABEL_1205:
  if ((v428 & 0x10000000) != 0)
    v434 = 0x40000000;
  else
    v434 = 0x80000000;
  if ((v428 & 0x20000000) != 0)
    v428 = v434;
  else
    v428 &= 0xCFFFFFFF;
  v429 = *(unsigned int *)(v513 + 88);
  if ((v429 & 0x80000000) != 0)
    goto LABEL_1212;
LABEL_1190:
  v430 = *(_QWORD *)(v515 + 2328);
  if (v429 >= (*(_QWORD *)(v515 + 2336) - v430) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v430 = *(_QWORD *)(v515 + 2328);
    v423 = *v503;
    v425 = **v503;
  }
  v431 = *(_DWORD *)(v430 + (v429 << 11) + 800);
  if (v425)
  {
LABEL_1194:
    v432 = *(unsigned int *)(v513 + 88);
    if ((v432 & 0x80000000) != 0)
      goto LABEL_1263;
    goto LABEL_1220;
  }
LABEL_1213:
  if ((v431 & 0x10000000) != 0)
    v435 = 0x40000000;
  else
    v435 = 0x80000000;
  if ((v431 & 0x20000000) != 0)
    v431 = v435;
  else
    v431 &= 0xCFFFFFFF;
  v432 = *(unsigned int *)(v513 + 88);
  if ((v432 & 0x80000000) != 0)
    goto LABEL_1263;
LABEL_1220:
  v436 = *(_QWORD *)(v515 + 2328);
  v437 = (*(_QWORD *)(v515 + 2336) - v436) >> 11;
  if (v437 > v432)
    goto LABEL_1224;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v423 = *v503;
  v432 = *(unsigned int *)(v513 + 88);
  if ((v432 & 0x80000000) != 0)
  {
LABEL_1263:
    v438 = *(_DWORD *)(v515 + 1112);
    if (*v423)
      goto LABEL_1234;
    goto LABEL_1228;
  }
  v436 = *(_QWORD *)(v515 + 2328);
  v437 = (*(_QWORD *)(v515 + 2336) - v436) >> 11;
LABEL_1224:
  if (v437 <= v432)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v436 = *(_QWORD *)(v515 + 2328);
    v423 = *v503;
  }
  v438 = *(_DWORD *)(v436 + (v432 << 11) + 832);
  if (!*v423)
  {
LABEL_1228:
    if ((v438 & 0x10000000) != 0)
      v439 = 0x40000000;
    else
      v439 = 0x80000000;
    if ((v438 & 0x20000000) != 0)
      v438 = v439;
    else
      v438 &= 0xCFFFFFFF;
  }
LABEL_1234:
  v568 = v553;
  v569 = v554;
  v570 = v555;
  v567 = v552;
  v566 = v551;
  if ((v404 & 0x40000000) != 0)
  {
    v543 = v553;
    v544 = v554;
    v545 = v555;
    v542 = v552;
    v541 = v551;
    *(_QWORD *)&v596 = 0x161616160D0D0D0DLL;
    v536 = xmmword_224680B40;
    v537 = xmmword_224680B50;
    *(_QWORD *)&v591 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v541, 7, 1, 4, (uint64_t)&v596, (uint64_t)&v536, (uint64_t)&v591, COERCE_DOUBLE(0x14F0000010FLL), xmmword_224680B50);
    if ((v387 & 0x40000000) == 0)
    {
      v538 = v553;
      v539 = v554;
      v540 = v555;
      v537 = v552;
      v536 = v551;
      *(_QWORD *)&v591 = 0xD0D0D0D0D0D0D0DLL;
      v596 = xmmword_224680B60;
      v597 = xmmword_224680B70;
      *(_QWORD *)&v586 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v536, 7, 1, 4, (uint64_t)&v591, (uint64_t)&v596, (uint64_t)&v586, COERCE_DOUBLE(0x14F0000010FLL), xmmword_224680B70);
      if (((v498 | v415) & 1) == 0)
      {
        v598 = v553;
        v599 = v554;
        v600 = v555;
        v596 = v551;
        v597 = v552;
        *(_QWORD *)&v586 = 0xD0D0D0D0D0D0D0DLL;
        v591 = xmmword_224680B80;
        v592 = xmmword_224680B90;
        *(_QWORD *)&v581 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v596, 7, 1, 4, (uint64_t)&v586, (uint64_t)&v591, (uint64_t)&v581, COERCE_DOUBLE(0x14F0000010FLL), xmmword_224680B90);
        v440 = (v487 & 1) == 0 && ((v492 | v414) & 1) == 0;
        if ((v462 & 1) == 0 && v440)
        {
          v593 = v553;
          v594 = v554;
          v595 = v555;
          v592 = v552;
          v591 = v551;
          *(_QWORD *)&v581 = 0xD0D0D0D0D0D0D0DLL;
          v586 = xmmword_224680BA0;
          v587 = xmmword_224680BB0;
          *(_QWORD *)&v576 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v591, 7, 1, 4, (uint64_t)&v581, (uint64_t)&v586, (uint64_t)&v576, COERCE_DOUBLE(0xCF0000010FLL), xmmword_224680BB0);
        }
      }
      v441 = (v477 & 1) == 0 && ((v492 | v414) & 1) == 0;
      if (v441 && (v509 & 1) == 0)
      {
        v588 = v568;
        v589 = v569;
        v590 = v570;
        *(_QWORD *)&v576 = 0xD0D0D0D0D0D0D0DLL;
        v587 = v567;
        v586 = v566;
        v581 = xmmword_224680BC0;
        v582 = xmmword_224680BD0;
        *(_QWORD *)&v571 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v586, 7, 1, 4, (uint64_t)&v576, (uint64_t)&v581, (uint64_t)&v571, COERCE_DOUBLE(0xCF0000010FLL), xmmword_224680BD0);
      }
    }
    v442 = (v431 & 0x40000000 | v414 & 1) == 0;
    if (!(v428 & 0x40000000 | v415 & 1))
    {
      v583 = v568;
      v584 = v569;
      v585 = v570;
      *(_QWORD *)&v571 = 0x16160D0D16160D0DLL;
      v582 = v567;
      v581 = v566;
      v576 = xmmword_224680BE0;
      v577 = xmmword_224680BF0;
      *(_QWORD *)&v602[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v581, 7, 1, 4, (uint64_t)&v571, (uint64_t)&v576, (uint64_t)v602, COERCE_DOUBLE(0x14F0000010FLL), xmmword_224680BF0);
      v443 = (v424 & 0x40000000) == 0 && v442;
      if ((v487 & 1) == 0 && v443)
      {
        v578 = v568;
        v579 = v569;
        v580 = v570;
        *(_QWORD *)&v602[0] = 0x161616160D0D0D0DLL;
        v577 = v567;
        v576 = v566;
        v571 = xmmword_224680C00;
        v572 = xmmword_224680C10;
        v603[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v576, 7, 1, 4, (uint64_t)v602, (uint64_t)&v571, (uint64_t)v603, COERCE_DOUBLE(0xCF0000010FLL), xmmword_224680C10);
      }
    }
    v444 = (v509 & 1) == 0 && v442;
    if (v444 && (v438 & 0x40000000) == 0)
    {
      v573 = v568;
      v574 = v569;
      v575 = v570;
      v603[0] = 0x16160D0D16160D0DLL;
      v572 = v567;
      v571 = v566;
      v602[0] = xmmword_224680C20;
      v602[1] = xmmword_224680C30;
      v601 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v571, 7, 1, 4, (uint64_t)v603, (uint64_t)v602, (uint64_t)&v601, COERCE_DOUBLE(0xCF0000010FLL), xmmword_224680C30);
    }
  }
  v536 = v465;
  v537.i64[0] = (uint64_t)v250;
  *(_QWORD *)&v596 = v515;
  *((_QWORD *)&v596 + 1) = v513;
  v597.i64[0] = (uint64_t)v503;
  v545 = v520;
  v544 = v519;
  v543 = v518;
  v541 = v516;
  v542 = v517;
  return sub_223E0031C((unsigned __int8 ***)&v536, &v596, &v541);
}

unint64_t sub_223E0031C(unsigned __int8 ***a1, _QWORD *a2, __int128 *a3)
{
  unsigned __int8 **v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  _BYTE **v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  _BYTE **v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  _BYTE **v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  _BYTE **v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  _BYTE **v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  __int128 v78;
  __int128 v79;
  _BOOL4 v80;
  _BOOL4 v81;
  _BOOL4 v82;
  _BOOL4 v83;
  _BOOL4 v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  _BOOL4 v99;
  _BOOL4 v100;
  _BOOL4 v101;
  _BOOL4 v102;
  _BOOL4 v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  _BOOL4 v119;
  _BOOL4 v120;
  _BOOL4 v121;
  _BOOL4 v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  _BOOL4 v136;
  _BOOL4 v137;
  _BOOL4 v138;
  _BOOL4 v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  _BOOL4 v154;
  _BOOL4 v155;
  _BOOL4 v156;
  _BOOL4 v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  _BOOL4 v171;
  _BOOL4 v172;
  _BOOL4 v173;
  _BOOL4 v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  _BOOL4 v190;
  _BOOL4 v191;
  _BOOL4 v192;
  _BOOL4 v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _BYTE *v197;
  unsigned int v198;
  int v199;
  unint64_t v200;
  uint64_t v201;
  unsigned int v202;
  unint64_t v203;
  uint64_t v204;
  unsigned int v205;
  unint64_t v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  uint64_t v210;
  unint64_t v211;
  unsigned int v212;
  unsigned int v213;
  _BOOL4 v214;
  _BOOL4 v215;
  _BOOL4 v216;
  _BOOL4 v217;
  unsigned __int8 **v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  unint64_t v236;
  uint64_t v237;
  unsigned int v238;
  int v239;
  unint64_t v240;
  uint64_t v241;
  unsigned int v242;
  unint64_t v243;
  uint64_t v244;
  unsigned int v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  _BOOL4 v271;
  _BOOL4 v272;
  _BOOL4 v273;
  _BOOL4 v274;
  _BOOL4 v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  int v288;
  _BOOL4 v289;
  _BOOL4 v290;
  _BOOL4 v291;
  _BOOL4 v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  _BOOL4 v307;
  _BOOL4 v308;
  _BOOL4 v309;
  _BOOL4 v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  unsigned int v325;
  _BOOL4 v326;
  _BOOL4 v327;
  _BOOL4 v328;
  _BOOL4 v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  _BOOL4 v344;
  _BOOL4 v345;
  _BOOL4 v346;
  _BOOL4 v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  _BOOL4 v362;
  _BOOL4 v363;
  _BOOL4 v364;
  _BOOL4 v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  _BOOL4 v381;
  _BOOL4 v382;
  _BOOL4 v383;
  _BOOL4 v384;
  unint64_t v385;
  uint64_t v386;
  uint64_t v387;
  _BYTE *v388;
  unsigned int v389;
  int v390;
  unint64_t v391;
  uint64_t v392;
  unsigned int v393;
  unint64_t v394;
  uint64_t v395;
  unsigned int v396;
  unint64_t v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  uint64_t v401;
  unint64_t v402;
  unsigned int v403;
  unsigned int v404;
  _BOOL4 v405;
  _BOOL4 v406;
  _BOOL4 v407;
  _BOOL4 v408;
  _BOOL4 v409;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  __int128 v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned __int8 **v460;
  int v461;
  unsigned int v462;
  unsigned int v463;
  _QWORD *v464;
  _BYTE **v465;
  unsigned int v466;
  uint64_t v467;
  _BYTE **v468;
  unsigned int v469;
  _BYTE **v470;
  unsigned int v471;
  unsigned int v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  __int128 v476;
  __int128 v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  float32x4_t v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  uint64_t v566;
  _OWORD v567[2];
  _QWORD v568[3];

  v568[1] = *MEMORY[0x24BDAC8D0];
  v4 = a1[2];
  v470 = *a1;
  v5 = *((_DWORD *)v4 + 200);
  v6 = ***a1;
  v464 = a2;
  if (***a1)
  {
    v7 = *((_DWORD *)v4 + 264);
    v8 = *((_DWORD *)v4 + 208);
    v9 = *((_DWORD *)v4 + 272);
    v10 = *((_DWORD *)v4 + 216);
    v474 = *a2;
    v455 = v9;
    if ((v9 & 0x40000000) == 0)
    {
LABEL_3:
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      goto LABEL_91;
    }
  }
  else
  {
    if ((v5 & 0x20000000) != 0)
      v5 *= 4;
    v16 = *((_DWORD *)v4 + 264);
    if ((v16 & 0x20000000) != 0)
      v7 = 4 * v16;
    else
      v7 = *((_DWORD *)v4 + 264);
    v17 = *((_DWORD *)v4 + 208);
    if ((v17 & 0x20000000) != 0)
      v8 = 4 * v17;
    else
      v8 = *((_DWORD *)v4 + 208);
    v18 = *((_DWORD *)v4 + 272);
    if ((v18 & 0x20000000) != 0)
      v9 = 4 * v18;
    else
      v9 = *((_DWORD *)v4 + 272);
    v19 = *((_DWORD *)v4 + 216);
    if ((v19 & 0x10000000) != 0)
      v20 = 0x40000000;
    else
      v20 = 0x80000000;
    if ((v19 & 0x20000000) != 0)
      v10 = v20;
    else
      v10 = v19 & 0xCFFFFFFF;
    v474 = *a2;
    v455 = v9;
    if ((v9 & 0x40000000) == 0)
      goto LABEL_3;
  }
  v466 = v8;
  v21 = (_BYTE **)a2[2];
  v22 = *(unsigned int *)(a2[1] + 16);
  v471 = v7;
  if ((v22 & 0x80000000) != 0)
  {
    v24 = v474 + 280;
  }
  else
  {
    v23 = *(_QWORD *)(v474 + 2328);
    if (v22 >= (*(_QWORD *)(v474 + 2336) - v23) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v23 = *(_QWORD *)(v474 + 2328);
      v9 = v455;
      v7 = v471;
    }
    v24 = v23 + (v22 << 11);
  }
  v25 = *(_DWORD *)(v24 + 828);
  v26 = v25 & 0xCFFFFFFF;
  if ((v25 & 0x10000000) != 0)
    v27 = 0x40000000;
  else
    v27 = 0x80000000;
  if ((v25 & 0x20000000) != 0)
    v26 = v27;
  if (**v21)
    v28 = v25;
  else
    v28 = v26;
  v29 = *v464;
  v30 = (_BYTE **)v464[2];
  v31 = *(unsigned int *)(v464[1] + 16);
  if ((v31 & 0x80000000) != 0)
  {
    v33 = v29 + 280;
  }
  else
  {
    v32 = *(_QWORD *)(v29 + 2328);
    if (v31 >= (*(_QWORD *)(v29 + 2336) - v32) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v32 = *(_QWORD *)(v29 + 2328);
      v9 = v455;
      v7 = v471;
    }
    v33 = v32 + (v31 << 11);
  }
  v34 = *(_DWORD *)(v33 + 1084);
  v35 = v34 & 0xCFFFFFFF;
  if ((v34 & 0x10000000) != 0)
    v36 = 0x40000000;
  else
    v36 = 0x80000000;
  if ((v34 & 0x20000000) != 0)
    v35 = v36;
  if (**v30)
    v37 = v34;
  else
    v37 = v35;
  v38 = *v464;
  v39 = (_BYTE **)v464[2];
  v40 = *(unsigned int *)(v464[1] + 16);
  if ((v40 & 0x80000000) != 0)
  {
    v42 = v38 + 280;
  }
  else
  {
    v41 = *(_QWORD *)(v38 + 2328);
    if (v40 >= (*(_QWORD *)(v38 + 2336) - v41) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v41 = *(_QWORD *)(v38 + 2328);
      v9 = v455;
      v7 = v471;
    }
    v42 = v41 + (v40 << 11);
  }
  v43 = *(_DWORD *)(v42 + 860);
  v44 = v43 & 0xCFFFFFFF;
  if ((v43 & 0x10000000) != 0)
    v45 = 0x40000000;
  else
    v45 = 0x80000000;
  if ((v43 & 0x20000000) != 0)
    v44 = v45;
  if (**v39)
    v46 = v43;
  else
    v46 = v44;
  v47 = *v464;
  v48 = (_BYTE **)v464[2];
  v49 = *(unsigned int *)(v464[1] + 16);
  if ((v49 & 0x80000000) != 0)
  {
    v51 = v10;
    v52 = v28;
    v53 = *(_DWORD *)(v47 + 1396);
    if (**v48)
      goto LABEL_69;
  }
  else
  {
    v50 = *(_QWORD *)(v47 + 2328);
    if (v49 >= (*(_QWORD *)(v47 + 2336) - v50) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v50 = *(_QWORD *)(v47 + 2328);
      v9 = v455;
      v7 = v471;
    }
    v51 = v10;
    v52 = v28;
    v53 = *(_DWORD *)(v50 + (v49 << 11) + 1116);
    if (**v48)
    {
LABEL_69:
      v54 = *v464;
      v55 = (_BYTE **)v464[2];
      v56 = *(unsigned int *)(v464[1] + 16);
      if ((v56 & 0x80000000) == 0)
        goto LABEL_70;
LABEL_82:
      v58 = v54 + 280;
      goto LABEL_83;
    }
  }
  if ((v53 & 0x10000000) != 0)
    v59 = 0x40000000;
  else
    v59 = 0x80000000;
  if ((v53 & 0x20000000) != 0)
    v53 = v59;
  else
    v53 &= 0xCFFFFFFF;
  v54 = *v464;
  v55 = (_BYTE **)v464[2];
  v56 = *(unsigned int *)(v464[1] + 16);
  if ((v56 & 0x80000000) != 0)
    goto LABEL_82;
LABEL_70:
  v57 = *(_QWORD *)(v54 + 2328);
  if (v56 >= (*(_QWORD *)(v54 + 2336) - v57) >> 11)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      v57 = *(_QWORD *)(v54 + 2328);
      v9 = v455;
      v7 = v471;
      goto LABEL_73;
    }
LABEL_1175:
    abort();
  }
LABEL_73:
  v58 = v57 + (v56 << 11);
LABEL_83:
  v15 = (v52 >> 30) & 1;
  v14 = (v37 >> 30) & 1;
  v13 = (v46 >> 30) & 1;
  v12 = (v53 >> 30) & 1;
  v60 = *(_DWORD *)(v58 + 892);
  v8 = v466;
  if (!**v55)
  {
    if ((v60 & 0x10000000) != 0)
      v61 = 0x40000000;
    else
      v61 = 0x80000000;
    if ((v60 & 0x20000000) != 0)
      v60 = v61;
    else
      v60 &= 0xCFFFFFFF;
  }
  v11 = (v60 >> 30) & 1;
  v4 = a1[2];
  a2 = v464;
  v470 = *a1;
  v474 = *v464;
  v6 = ***a1;
  v10 = v51;
LABEL_91:
  v426 = v5 >> 30;
  v467 = a2[1];
  v460 = (unsigned __int8 **)a2[2];
  v483 = a3[2];
  v484 = a3[3];
  v485 = a3[4];
  v481 = *a3;
  v482 = a3[1];
  v62 = *((_DWORD *)v4 + 201);
  if (v6)
  {
    v63 = *((_DWORD *)v4 + 265);
    v64 = *((_DWORD *)v4 + 209);
    v450 = *((_DWORD *)v4 + 273);
    v65 = *((_DWORD *)v4 + 217);
  }
  else
  {
    if ((v62 & 0x10000000) != 0)
      v66 = 0x40000000;
    else
      v66 = 0x80000000;
    if ((v62 & 0x20000000) != 0)
      v62 = v66;
    else
      v62 &= 0xCFFFFFFF;
    v67 = *((_DWORD *)v4 + 265);
    if ((v67 & 0x10000000) != 0)
      v68 = 0x40000000;
    else
      v68 = 0x80000000;
    if ((v67 & 0x20000000) != 0)
      v63 = v68;
    else
      v63 = v67 & 0xCFFFFFFF;
    v69 = *((_DWORD *)v4 + 209);
    if ((v69 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v69 & 0x20000000) != 0)
      v64 = v70;
    else
      v64 = v69 & 0xCFFFFFFF;
    v71 = *((_DWORD *)v4 + 273);
    if ((v71 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v71 & 0x20000000) != 0)
      v73 = v72;
    else
      v73 = v71 & 0xCFFFFFFF;
    v450 = v73;
    v74 = *((_DWORD *)v4 + 217);
    if ((v74 & 0x10000000) != 0)
      v65 = 0x40000000;
    else
      v65 = 0x80000000;
    if ((v74 & 0x20000000) == 0)
      v65 = v74 & 0xCFFFFFFF;
  }
  v75 = v8 >> 30;
  v76 = v7 >> 30;
  v77 = v10 >> 30;
  v422 = v62 >> 30;
  v441 = v64 >> 30;
  v445 = v63 >> 30;
  v430 = v65 >> 30;
  v493 = a3[2];
  v494 = a3[3];
  v495 = a3[4];
  v491 = *a3;
  v492 = a3[1];
  if ((v9 & 0x40000000) != 0)
  {
    v78 = a3[3];
    v508 = a3[2];
    v509 = v78;
    v510 = a3[4];
    v79 = *a3;
    v507 = a3[1];
    v506 = v79;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224680C40;
    v502 = (__int128)xmmword_224680C50;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 0, 2, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15000000110), xmmword_224680C50);
    if (!v12)
    {
      v503 = v493;
      v504 = v494;
      v505 = v495;
      v502 = v492;
      v501 = v491;
      *(_QWORD *)&v556 = 0x4040D0D04040D0DLL;
      v561 = xmmword_224680C60;
      v562 = (__int128)xmmword_224680C70;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 0, 2, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15000000110), xmmword_224680C70);
      v80 = (v13 | v75 & 1) == 0;
      if (!(v14 | v76 & 1))
      {
        v563 = v493;
        v564 = v494;
        v565 = v495;
        v561 = v491;
        v562 = v492;
        *(_QWORD *)&v551 = 0x40404040D0D0D0DLL;
        v556 = xmmword_224680C80;
        v557 = (__int128)xmmword_224680C90;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 0, 2, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15000000110), xmmword_224680C90);
        v81 = (v426 & 1) == 0 && v80;
        if (!v15 && v81)
        {
          v558 = v493;
          v559 = v494;
          v560 = v495;
          v557 = v492;
          v556 = v491;
          *(_QWORD *)&v546 = 0x4040D0D04040D0DLL;
          v551 = xmmword_224680CA0;
          v552 = (__int128)xmmword_224680CB0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 0, 2, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xD000000110), xmmword_224680CB0);
        }
      }
      if (v11)
        v82 = 0;
      else
        v82 = v80;
      if (v82 && (v77 & 1) == 0)
      {
        v553 = v493;
        v554 = v494;
        v555 = v495;
        *(_QWORD *)&v541 = 0x40404040D0D0D0DLL;
        v552 = v492;
        v551 = v491;
        v546 = xmmword_224680CC0;
        v547 = (__int128)xmmword_224680CD0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 0, 2, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xD000000110), xmmword_224680CD0);
      }
    }
    if (((v76 | v445) & 1) == 0)
    {
      v548 = v493;
      v549 = v494;
      v550 = v495;
      v547 = v492;
      v546 = v491;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_224680CE0;
      v542 = (__int128)xmmword_224680CF0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 0, 2, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15000000110), xmmword_224680CF0);
      v83 = (v422 & 1) == 0 && ((v75 | v441) & 1) == 0;
      if ((v426 & 1) == 0 && v83)
      {
        v543 = v493;
        v544 = v494;
        v545 = v495;
        v542 = v492;
        v541 = v491;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224680D00;
        v537 = (__int128)xmmword_224680D10;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 0, 2, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xD000000110), xmmword_224680D10);
      }
    }
    v84 = (v77 & 1) == 0 && ((v75 | v441) & 1) == 0;
    v9 = v455;
    if (v84 && (v430 & 1) == 0)
    {
      v538 = v493;
      v539 = v494;
      v540 = v495;
      v537 = v492;
      v536 = v491;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224680D20;
      v532 = xmmword_224680D30;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 0, 2, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v521, COERCE_DOUBLE(0xD000000110), xmmword_224680D30);
      v9 = v455;
    }
  }
  v85 = *((_DWORD *)v4 + 202);
  if (**v470)
  {
    v86 = *((_DWORD *)v4 + 266);
    v87 = *((_DWORD *)v4 + 210);
    v88 = *((_DWORD *)v4 + 274);
    v89 = *((_DWORD *)v4 + 218);
  }
  else
  {
    if ((v85 & 0x10000000) != 0)
      v90 = 0x40000000;
    else
      v90 = 0x80000000;
    if ((v85 & 0x20000000) != 0)
      v85 = v90;
    else
      v85 &= 0xCFFFFFFF;
    v91 = *((_DWORD *)v4 + 266);
    if ((v91 & 0x10000000) != 0)
      v92 = 0x40000000;
    else
      v92 = 0x80000000;
    if ((v91 & 0x20000000) != 0)
      v86 = v92;
    else
      v86 = v91 & 0xCFFFFFFF;
    v93 = *((_DWORD *)v4 + 210);
    if ((v93 & 0x10000000) != 0)
      v94 = 0x40000000;
    else
      v94 = 0x80000000;
    if ((v93 & 0x20000000) != 0)
      v87 = v94;
    else
      v87 = v93 & 0xCFFFFFFF;
    v95 = *((_DWORD *)v4 + 274);
    if ((v95 & 0x10000000) != 0)
      v96 = 0x40000000;
    else
      v96 = 0x80000000;
    if ((v95 & 0x20000000) != 0)
      v88 = v96;
    else
      v88 = v95 & 0xCFFFFFFF;
    v97 = *((_DWORD *)v4 + 218);
    if ((v97 & 0x10000000) != 0)
      v89 = 0x40000000;
    else
      v89 = 0x80000000;
    if ((v97 & 0x20000000) == 0)
      v89 = v97 & 0xCFFFFFFF;
  }
  v437 = v87 >> 30;
  v419 = v85 >> 30;
  v456 = v86 >> 30;
  v98 = v89 >> 30;
  if ((v450 & 0x40000000) != 0)
  {
    v99 = (v9 & 0x40000000) == 0;
    v508 = v483;
    v509 = v484;
    v510 = v485;
    v507 = v482;
    v506 = v481;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224680D40;
    v502 = (__int128)xmmword_224680D50;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 1, 2, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15100000111), xmmword_224680D50);
    if (v99)
    {
      v503 = v483;
      v504 = v484;
      v505 = v485;
      v502 = v482;
      v501 = v481;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224680D60;
      v562 = (__int128)xmmword_224680D70;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 1, 2, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15100000111), xmmword_224680D70);
      if (((v76 | v445) & 1) == 0)
      {
        v563 = v483;
        v564 = v484;
        v565 = v485;
        v561 = v481;
        v562 = v482;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224680D80;
        v557 = (__int128)xmmword_224680D90;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 1, 2, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15100000111), xmmword_224680D90);
        v100 = (v422 & 1) == 0 && ((v75 | v441) & 1) == 0;
        if ((v426 & 1) == 0 && v100)
        {
          v558 = v483;
          v559 = v484;
          v560 = v485;
          v557 = v482;
          v556 = v481;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_224680DA0;
          v552 = (__int128)xmmword_224680DB0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 1, 2, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xD100000111), xmmword_224680DB0);
        }
      }
      v101 = (v77 & 1) == 0 && ((v75 | v441) & 1) == 0;
      if (v101 && (v430 & 1) == 0)
      {
        v553 = v483;
        v554 = v484;
        v555 = v485;
        v552 = v482;
        v551 = v481;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_224680DC0;
        v547 = (__int128)xmmword_224680DD0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 1, 2, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xD100000111), xmmword_224680DD0);
      }
    }
    if (((v445 | v456) & 1) == 0)
    {
      v548 = v483;
      v549 = v484;
      v550 = v485;
      v547 = v482;
      v546 = v481;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_224680DE0;
      v542 = (__int128)xmmword_224680DF0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 1, 2, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15100000111), xmmword_224680DF0);
      v102 = (v419 & 1) == 0 && ((v441 | v437) & 1) == 0;
      if ((v422 & 1) == 0 && v102)
      {
        v543 = v483;
        v544 = v484;
        v545 = v485;
        v542 = v482;
        v541 = v481;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224680E00;
        v537 = (__int128)xmmword_224680E10;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 1, 2, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xD100000111), xmmword_224680E10);
      }
    }
    v103 = (v430 & 1) == 0 && ((v441 | v437) & 1) == 0;
    if (v103 && (v98 & 1) == 0)
    {
      v538 = v483;
      v539 = v484;
      v540 = v485;
      v537 = v482;
      v536 = v481;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224680E20;
      v532 = xmmword_224680E30;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 1, 2, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v521, COERCE_DOUBLE(0xD100000111), xmmword_224680E30);
    }
  }
  v104 = *((_DWORD *)v4 + 203);
  if (**v470)
  {
    v105 = *((_DWORD *)v4 + 267);
    v106 = *((_DWORD *)v4 + 211);
    v107 = *((_DWORD *)v4 + 275);
    v108 = *((_DWORD *)v4 + 219);
  }
  else
  {
    if ((v104 & 0x10000000) != 0)
      v109 = 0x40000000;
    else
      v109 = 0x80000000;
    if ((v104 & 0x20000000) != 0)
      v104 = v109;
    else
      v104 &= 0xCFFFFFFF;
    v110 = *((_DWORD *)v4 + 267);
    if ((v110 & 0x10000000) != 0)
      v111 = 0x40000000;
    else
      v111 = 0x80000000;
    if ((v110 & 0x20000000) != 0)
      v105 = v111;
    else
      v105 = v110 & 0xCFFFFFFF;
    v112 = *((_DWORD *)v4 + 211);
    if ((v112 & 0x10000000) != 0)
      v113 = 0x40000000;
    else
      v113 = 0x80000000;
    if ((v112 & 0x20000000) != 0)
      v106 = v113;
    else
      v106 = v112 & 0xCFFFFFFF;
    v114 = *((_DWORD *)v4 + 275);
    if ((v114 & 0x10000000) != 0)
      v115 = 0x40000000;
    else
      v115 = 0x80000000;
    if ((v114 & 0x20000000) != 0)
      v107 = v115;
    else
      v107 = v114 & 0xCFFFFFFF;
    v116 = *((_DWORD *)v4 + 219);
    if ((v116 & 0x10000000) != 0)
      v108 = 0x40000000;
    else
      v108 = 0x80000000;
    if ((v116 & 0x20000000) == 0)
      v108 = v116 & 0xCFFFFFFF;
  }
  v117 = v106 >> 30;
  v416 = v104 >> 30;
  v118 = v105 >> 30;
  v427 = v108 >> 30;
  if ((v88 & 0x40000000) != 0)
  {
    v508 = v483;
    v509 = v484;
    v510 = v485;
    v507 = v482;
    v506 = v481;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224680E40;
    v502 = (__int128)xmmword_224680E50;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 2, 2, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15200000112), xmmword_224680E50);
    if ((v450 & 0x40000000) == 0)
    {
      v503 = v483;
      v504 = v484;
      v505 = v485;
      v502 = v482;
      v501 = v481;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224680E60;
      v562 = (__int128)xmmword_224680E70;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 2, 2, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15200000112), xmmword_224680E70);
      if (((v445 | v456) & 1) == 0)
      {
        v563 = v483;
        v564 = v484;
        v565 = v485;
        v561 = v481;
        v562 = v482;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224680E80;
        v557 = (__int128)xmmword_224680E90;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 2, 2, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15200000112), xmmword_224680E90);
        v119 = (v419 & 1) == 0 && ((v441 | v437) & 1) == 0;
        if ((v422 & 1) == 0 && v119)
        {
          v558 = v483;
          v559 = v484;
          v560 = v485;
          v557 = v482;
          v556 = v481;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_224680EA0;
          v552 = (__int128)xmmword_224680EB0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 2, 2, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xD200000112), xmmword_224680EB0);
        }
      }
      v120 = (v430 & 1) == 0 && ((v441 | v437) & 1) == 0;
      if (v120 && (v98 & 1) == 0)
      {
        v553 = v483;
        v554 = v484;
        v555 = v485;
        v552 = v482;
        v551 = v481;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_224680EC0;
        v547 = (__int128)xmmword_224680ED0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 2, 2, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xD200000112), xmmword_224680ED0);
      }
    }
    if (((v456 | v118) & 1) == 0)
    {
      v548 = v483;
      v549 = v484;
      v550 = v485;
      v547 = v482;
      v546 = v481;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_224680EE0;
      v542 = (__int128)xmmword_224680EF0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 2, 2, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15200000112), xmmword_224680EF0);
      v121 = (v416 & 1) == 0 && ((v437 | v117) & 1) == 0;
      if ((v419 & 1) == 0 && v121)
      {
        v543 = v483;
        v544 = v484;
        v545 = v485;
        v542 = v482;
        v541 = v481;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224680F00;
        v537 = (__int128)xmmword_224680F10;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 2, 2, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xD200000112), xmmword_224680F10);
      }
    }
    v122 = (v98 & 1) == 0 && ((v437 | v117) & 1) == 0;
    if (v122 && (v427 & 1) == 0)
    {
      v538 = v483;
      v539 = v484;
      v540 = v485;
      v537 = v482;
      v536 = v481;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224680F20;
      v532 = xmmword_224680F30;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 2, 2, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v521, COERCE_DOUBLE(0xD200000112), xmmword_224680F30);
    }
  }
  v123 = *((_DWORD *)v4 + 204);
  if (**v470)
  {
    v124 = *((_DWORD *)v4 + 268);
    v125 = *((_DWORD *)v4 + 212);
    v126 = *((_DWORD *)v4 + 276);
    v127 = *((_DWORD *)v4 + 220);
  }
  else
  {
    if ((v123 & 0x10000000) != 0)
      v128 = 0x40000000;
    else
      v128 = 0x80000000;
    if ((v123 & 0x20000000) != 0)
      v123 = v128;
    else
      v123 &= 0xCFFFFFFF;
    v129 = *((_DWORD *)v4 + 268);
    if ((v129 & 0x10000000) != 0)
      v130 = 0x40000000;
    else
      v130 = 0x80000000;
    if ((v129 & 0x20000000) != 0)
      v124 = v130;
    else
      v124 = v129 & 0xCFFFFFFF;
    v131 = *((_DWORD *)v4 + 212);
    if ((v131 & 0x10000000) != 0)
      v132 = 0x40000000;
    else
      v132 = 0x80000000;
    if ((v131 & 0x20000000) != 0)
      v125 = v132;
    else
      v125 = v131 & 0xCFFFFFFF;
    v133 = *((_DWORD *)v4 + 276);
    if ((v133 & 0x10000000) != 0)
      v134 = 0x40000000;
    else
      v134 = 0x80000000;
    if ((v133 & 0x20000000) != 0)
      v126 = v134;
    else
      v126 = v133 & 0xCFFFFFFF;
    v135 = *((_DWORD *)v4 + 220);
    if ((v135 & 0x10000000) != 0)
      v127 = 0x40000000;
    else
      v127 = 0x80000000;
    if ((v135 & 0x20000000) == 0)
      v127 = v135 & 0xCFFFFFFF;
  }
  v415 = v123 >> 30;
  v446 = v125 >> 30;
  v451 = v124 >> 30;
  v423 = v127 >> 30;
  if ((v107 & 0x40000000) != 0)
  {
    v508 = v483;
    v509 = v484;
    v510 = v485;
    v507 = v482;
    v506 = v481;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224680F40;
    v502 = (__int128)xmmword_224680F50;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 3, 2, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15300000113), xmmword_224680F50);
    if ((v88 & 0x40000000) == 0)
    {
      v503 = v483;
      v504 = v484;
      v505 = v485;
      v502 = v482;
      v501 = v481;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224680F60;
      v562 = (__int128)xmmword_224680F70;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 3, 2, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15300000113), xmmword_224680F70);
      if (((v456 | v118) & 1) == 0)
      {
        v563 = v483;
        v564 = v484;
        v565 = v485;
        v561 = v481;
        v562 = v482;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224680F80;
        v557 = (__int128)xmmword_224680F90;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 3, 2, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15300000113), xmmword_224680F90);
        v136 = (v416 & 1) == 0 && ((v437 | v117) & 1) == 0;
        if ((v419 & 1) == 0 && v136)
        {
          v558 = v483;
          v559 = v484;
          v560 = v485;
          v557 = v482;
          v556 = v481;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_224680FA0;
          v552 = (__int128)xmmword_224680FB0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 3, 2, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xD300000113), xmmword_224680FB0);
        }
      }
      v137 = (v98 & 1) == 0 && ((v437 | v117) & 1) == 0;
      if (v137 && (v427 & 1) == 0)
      {
        v553 = v483;
        v554 = v484;
        v555 = v485;
        v552 = v482;
        v551 = v481;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_224680FC0;
        v547 = (__int128)xmmword_224680FD0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 3, 2, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xD300000113), xmmword_224680FD0);
      }
    }
    if (((v118 | v451) & 1) == 0)
    {
      v548 = v483;
      v549 = v484;
      v550 = v485;
      v547 = v482;
      v546 = v481;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_224680FE0;
      v542 = (__int128)xmmword_224680FF0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 3, 2, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15300000113), xmmword_224680FF0);
      v138 = (v415 & 1) == 0 && ((v117 | v446) & 1) == 0;
      if ((v416 & 1) == 0 && v138)
      {
        v543 = v483;
        v544 = v484;
        v545 = v485;
        v542 = v482;
        v541 = v481;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224681000;
        v537 = (__int128)xmmword_224681010;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 3, 2, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xD300000113), xmmword_224681010);
      }
    }
    v139 = (v427 & 1) == 0 && ((v117 | v446) & 1) == 0;
    if (v139 && (v423 & 1) == 0)
    {
      v538 = v483;
      v539 = v484;
      v540 = v485;
      v537 = v482;
      v536 = v481;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224681020;
      v532 = xmmword_224681030;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 3, 2, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v521, COERCE_DOUBLE(0xD300000113), xmmword_224681030);
    }
  }
  v140 = *((_DWORD *)v4 + 205);
  if (**v470)
  {
    v141 = *((_DWORD *)v4 + 269);
    v142 = *((_DWORD *)v4 + 213);
    v143 = *((_DWORD *)v4 + 277);
    v144 = *((_DWORD *)v4 + 221);
  }
  else
  {
    if ((v140 & 0x10000000) != 0)
      v145 = 0x40000000;
    else
      v145 = 0x80000000;
    if ((v140 & 0x20000000) != 0)
      v140 = v145;
    else
      v140 &= 0xCFFFFFFF;
    v146 = *((_DWORD *)v4 + 269);
    if ((v146 & 0x10000000) != 0)
      v147 = 0x40000000;
    else
      v147 = 0x80000000;
    if ((v146 & 0x20000000) != 0)
      v141 = v147;
    else
      v141 = v146 & 0xCFFFFFFF;
    v148 = *((_DWORD *)v4 + 213);
    if ((v148 & 0x10000000) != 0)
      v149 = 0x40000000;
    else
      v149 = 0x80000000;
    if ((v148 & 0x20000000) != 0)
      v142 = v149;
    else
      v142 = v148 & 0xCFFFFFFF;
    v150 = *((_DWORD *)v4 + 277);
    if ((v150 & 0x10000000) != 0)
      v151 = 0x40000000;
    else
      v151 = 0x80000000;
    if ((v150 & 0x20000000) != 0)
      v143 = v151;
    else
      v143 = v150 & 0xCFFFFFFF;
    v152 = *((_DWORD *)v4 + 221);
    if ((v152 & 0x10000000) != 0)
      v144 = 0x40000000;
    else
      v144 = 0x80000000;
    if ((v152 & 0x20000000) == 0)
      v144 = v152 & 0xCFFFFFFF;
  }
  v442 = v142 >> 30;
  v420 = v140 >> 30;
  v457 = v141 >> 30;
  v153 = v144 >> 30;
  if ((v126 & 0x40000000) != 0)
  {
    v508 = v483;
    v509 = v484;
    v510 = v485;
    v507 = v482;
    v506 = v481;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224681040;
    v502 = (__int128)xmmword_224681050;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 4, 2, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15400000114), xmmword_224681050);
    if ((v107 & 0x40000000) == 0)
    {
      v503 = v483;
      v504 = v484;
      v505 = v485;
      v502 = v482;
      v501 = v481;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224681060;
      v562 = (__int128)xmmword_224681070;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 4, 2, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15400000114), xmmword_224681070);
      if (((v118 | v451) & 1) == 0)
      {
        v563 = v483;
        v564 = v484;
        v565 = v485;
        v561 = v481;
        v562 = v482;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224681080;
        v557 = (__int128)xmmword_224681090;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 4, 2, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15400000114), xmmword_224681090);
        v154 = (v415 & 1) == 0 && ((v117 | v446) & 1) == 0;
        if ((v416 & 1) == 0 && v154)
        {
          v558 = v483;
          v559 = v484;
          v560 = v485;
          v557 = v482;
          v556 = v481;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_2246810A0;
          v552 = (__int128)xmmword_2246810B0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 4, 2, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xD400000114), xmmword_2246810B0);
        }
      }
      v155 = (v427 & 1) == 0 && ((v117 | v446) & 1) == 0;
      if (v155 && (v423 & 1) == 0)
      {
        v553 = v483;
        v554 = v484;
        v555 = v485;
        v552 = v482;
        v551 = v481;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_2246810C0;
        v547 = (__int128)xmmword_2246810D0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 4, 2, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xD400000114), xmmword_2246810D0);
      }
    }
    if (((v451 | v457) & 1) == 0)
    {
      v548 = v483;
      v549 = v484;
      v550 = v485;
      v547 = v482;
      v546 = v481;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_2246810E0;
      v542 = (__int128)xmmword_2246810F0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 4, 2, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15400000114), xmmword_2246810F0);
      v156 = (v420 & 1) == 0 && ((v446 | v442) & 1) == 0;
      if ((v415 & 1) == 0 && v156)
      {
        v543 = v483;
        v544 = v484;
        v545 = v485;
        v542 = v482;
        v541 = v481;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224681100;
        v537 = (__int128)xmmword_224681110;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 4, 2, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xD400000114), xmmword_224681110);
      }
    }
    v157 = (v423 & 1) == 0 && ((v446 | v442) & 1) == 0;
    if (v157 && (v153 & 1) == 0)
    {
      v538 = v483;
      v539 = v484;
      v540 = v485;
      v537 = v482;
      v536 = v481;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224681120;
      v532 = xmmword_224681130;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 4, 2, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v521, COERCE_DOUBLE(0xD400000114), xmmword_224681130);
    }
  }
  v158 = *((_DWORD *)v4 + 206);
  if (**v470)
  {
    v159 = *((_DWORD *)v4 + 270);
    v160 = *((_DWORD *)v4 + 214);
    v161 = *((_DWORD *)v4 + 278);
    v162 = *((_DWORD *)v4 + 222);
  }
  else
  {
    if ((v158 & 0x10000000) != 0)
      v163 = 0x40000000;
    else
      v163 = 0x80000000;
    if ((v158 & 0x20000000) != 0)
      v158 = v163;
    else
      v158 &= 0xCFFFFFFF;
    v164 = *((_DWORD *)v4 + 270);
    if ((v164 & 0x10000000) != 0)
      v165 = 0x40000000;
    else
      v165 = 0x80000000;
    if ((v164 & 0x20000000) != 0)
      v159 = v165;
    else
      v159 = v164 & 0xCFFFFFFF;
    v166 = *((_DWORD *)v4 + 214);
    if ((v166 & 0x10000000) != 0)
      v167 = 0x40000000;
    else
      v167 = 0x80000000;
    if ((v166 & 0x20000000) != 0)
      v160 = v167;
    else
      v160 = v166 & 0xCFFFFFFF;
    v168 = *((_DWORD *)v4 + 278);
    if ((v168 & 0x10000000) != 0)
      v169 = 0x40000000;
    else
      v169 = 0x80000000;
    if ((v168 & 0x20000000) != 0)
      v161 = v169;
    else
      v161 = v168 & 0xCFFFFFFF;
    v170 = *((_DWORD *)v4 + 222);
    if ((v170 & 0x10000000) != 0)
      v162 = 0x40000000;
    else
      v162 = 0x80000000;
    if ((v170 & 0x20000000) == 0)
      v162 = v170 & 0xCFFFFFFF;
  }
  v431 = v160 >> 30;
  v417 = v158 >> 30;
  v438 = v159 >> 30;
  v428 = v162 >> 30;
  v523 = v483;
  v524 = v484;
  v525 = v485;
  v522 = v482;
  v521 = v481;
  if ((v143 & 0x40000000) != 0)
  {
    v508 = v483;
    v509 = v484;
    v510 = v485;
    v507 = v482;
    v506 = v481;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224681140;
    v502 = (__int128)xmmword_224681150;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 5, 2, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15500000115), xmmword_224681150);
    if ((v126 & 0x40000000) == 0)
    {
      v503 = v483;
      v504 = v484;
      v505 = v485;
      v502 = v482;
      v501 = v481;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224681160;
      v562 = (__int128)xmmword_224681170;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 5, 2, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15500000115), xmmword_224681170);
      if (((v451 | v457) & 1) == 0)
      {
        v563 = v483;
        v564 = v484;
        v565 = v485;
        v561 = v481;
        v562 = v482;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224681180;
        v557 = (__int128)xmmword_224681190;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 5, 2, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15500000115), xmmword_224681190);
        v171 = (v420 & 1) == 0 && ((v446 | v442) & 1) == 0;
        if ((v415 & 1) == 0 && v171)
        {
          v558 = v483;
          v559 = v484;
          v560 = v485;
          v557 = v482;
          v556 = v481;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_2246811A0;
          v552 = (__int128)xmmword_2246811B0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 5, 2, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xD500000115), xmmword_2246811B0);
        }
      }
      v172 = (v423 & 1) == 0 && ((v446 | v442) & 1) == 0;
      if (v172 && (v153 & 1) == 0)
      {
        v553 = v523;
        v554 = v524;
        v555 = v525;
        v552 = v522;
        v551 = v521;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_2246811C0;
        v547 = (__int128)xmmword_2246811D0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 5, 2, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xD500000115), xmmword_2246811D0);
      }
    }
    if (((v457 | v438) & 1) == 0)
    {
      v548 = v523;
      v549 = v524;
      v550 = v525;
      v547 = v522;
      v546 = v521;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_2246811E0;
      v542 = (__int128)xmmword_2246811F0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 5, 2, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15500000115), xmmword_2246811F0);
      v173 = (v417 & 1) == 0 && ((v442 | v431) & 1) == 0;
      if ((v420 & 1) == 0 && v173)
      {
        v543 = v523;
        v544 = v524;
        v545 = v525;
        v542 = v522;
        v541 = v521;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224681200;
        v537 = (__int128)xmmword_224681210;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 5, 2, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xD500000115), xmmword_224681210);
      }
    }
    v174 = (v153 & 1) == 0 && ((v442 | v431) & 1) == 0;
    if (v174 && (v428 & 1) == 0)
    {
      v538 = v523;
      v539 = v524;
      v540 = v525;
      v537 = v522;
      v536 = v521;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224681220;
      v532 = xmmword_224681230;
      *(_QWORD *)&v516 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 5, 2, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v516, COERCE_DOUBLE(0xD500000115), xmmword_224681230);
    }
  }
  v518 = v483;
  v519 = v484;
  v520 = v485;
  v517 = v482;
  v516 = v481;
  v175 = *((_DWORD *)v4 + 207);
  if (**v470)
  {
    v176 = *((_DWORD *)v4 + 271);
    v177 = *((_DWORD *)v4 + 215);
    v178 = *((_DWORD *)v4 + 279);
    v179 = *((_DWORD *)v4 + 223);
  }
  else
  {
    if ((v175 & 0x10000000) != 0)
      v180 = 0x40000000;
    else
      v180 = 0x80000000;
    if ((v175 & 0x20000000) != 0)
      v175 = v180;
    else
      v175 &= 0xCFFFFFFF;
    v181 = *((_DWORD *)v4 + 271);
    if ((v181 & 0x10000000) != 0)
      v182 = 0x40000000;
    else
      v182 = 0x80000000;
    if ((v181 & 0x20000000) != 0)
      v176 = v182;
    else
      v176 = v181 & 0xCFFFFFFF;
    v183 = *((_DWORD *)v4 + 215);
    if ((v183 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v183 & 0x20000000) != 0)
      v177 = v184;
    else
      v177 = v183 & 0xCFFFFFFF;
    v185 = *((_DWORD *)v4 + 279);
    if ((v185 & 0x10000000) != 0)
      v186 = 0x40000000;
    else
      v186 = 0x80000000;
    if ((v185 & 0x20000000) != 0)
      v178 = v186;
    else
      v178 = v185 & 0xCFFFFFFF;
    v187 = *((_DWORD *)v4 + 223);
    if ((v187 & 0x10000000) != 0)
      v179 = 0x40000000;
    else
      v179 = 0x80000000;
    if ((v187 & 0x20000000) == 0)
      v179 = v187 & 0xCFFFFFFF;
  }
  v188 = v177 >> 30;
  v452 = v175 >> 30;
  v189 = v176 >> 30;
  v472 = v179 >> 30;
  v528 = v483;
  v529 = v484;
  v530 = v485;
  v527 = v482;
  v526 = v481;
  if ((v161 & 0x40000000) != 0)
  {
    v508 = v483;
    v509 = v484;
    v510 = v485;
    v507 = v482;
    v506 = v481;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224681240;
    v502 = (__int128)xmmword_224681250;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 6, 2, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15600000116), xmmword_224681250);
    if ((v143 & 0x40000000) == 0)
    {
      v503 = v483;
      v504 = v484;
      v505 = v485;
      v502 = v482;
      v501 = v481;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224681260;
      v562 = (__int128)xmmword_224681270;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 6, 2, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15600000116), xmmword_224681270);
      if (((v457 | v438) & 1) == 0)
      {
        v563 = v483;
        v564 = v484;
        v565 = v485;
        v561 = v481;
        v562 = v482;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224681280;
        v557 = (__int128)xmmword_224681290;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 6, 2, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15600000116), xmmword_224681290);
        v190 = (v417 & 1) == 0 && ((v442 | v431) & 1) == 0;
        if ((v420 & 1) == 0 && v190)
        {
          v558 = v483;
          v559 = v484;
          v560 = v485;
          v557 = v482;
          v556 = v481;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_2246812A0;
          v552 = (__int128)xmmword_2246812B0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 6, 2, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xD600000116), xmmword_2246812B0);
        }
      }
      v191 = (v153 & 1) == 0 && ((v442 | v431) & 1) == 0;
      if (v191 && (v428 & 1) == 0)
      {
        v553 = v528;
        v554 = v529;
        v555 = v530;
        v552 = v527;
        v551 = v526;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_2246812C0;
        v547 = (__int128)xmmword_2246812D0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 6, 2, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xD600000116), xmmword_2246812D0);
      }
    }
    if (((v438 | v189) & 1) == 0)
    {
      v548 = v528;
      v549 = v529;
      v550 = v530;
      v547 = v527;
      v546 = v526;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_2246812E0;
      v542 = (__int128)xmmword_2246812F0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 6, 2, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15600000116), xmmword_2246812F0);
      v192 = (v452 & 1) == 0 && ((v431 | v188) & 1) == 0;
      if ((v417 & 1) == 0 && v192)
      {
        v543 = v528;
        v544 = v529;
        v545 = v530;
        v542 = v527;
        v541 = v526;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224681300;
        v537 = (__int128)xmmword_224681310;
        *(_QWORD *)&v511 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 6, 2, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v511, COERCE_DOUBLE(0xD600000116), xmmword_224681310);
      }
    }
    v193 = (v428 & 1) == 0 && ((v431 | v188) & 1) == 0;
    if (v193 && (v472 & 1) == 0)
    {
      v538 = v528;
      v539 = v529;
      v540 = v530;
      v537 = v527;
      v536 = v526;
      *(_QWORD *)&v511 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224681320;
      v532 = xmmword_224681330;
      *(_QWORD *)&v567[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 6, 2, 4, (uint64_t)&v511, (uint64_t)&v531, (uint64_t)v567, COERCE_DOUBLE(0xD600000116), xmmword_224681330);
    }
  }
  v194 = *(unsigned int *)(v467 + 88);
  if ((v194 & 0x80000000) != 0)
  {
    v197 = *v460;
    v198 = *(_DWORD *)(v474 + 1080);
    v199 = **v460;
    if (**v460)
      goto LABEL_509;
  }
  else
  {
    v195 = *(_QWORD *)(v474 + 2328);
    if (v194 >= (*(_QWORD *)(v474 + 2336) - v195) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v195 = *(_QWORD *)(v474 + 2328);
    }
    v196 = v195 + (v194 << 11);
    v197 = *v460;
    v198 = *(_DWORD *)(v196 + 800);
    v199 = **v460;
    if (**v460)
    {
LABEL_509:
      v200 = *(unsigned int *)(v467 + 88);
      if ((v200 & 0x80000000) == 0)
        goto LABEL_510;
LABEL_529:
      v202 = *(_DWORD *)(v474 + 1336);
      if (v199)
        goto LABEL_514;
      goto LABEL_530;
    }
  }
  if ((v198 & 0x10000000) != 0)
    v207 = 0x40000000;
  else
    v207 = 0x80000000;
  if ((v198 & 0x20000000) != 0)
    v198 = v207;
  else
    v198 &= 0xCFFFFFFF;
  v200 = *(unsigned int *)(v467 + 88);
  if ((v200 & 0x80000000) != 0)
    goto LABEL_529;
LABEL_510:
  v201 = *(_QWORD *)(v474 + 2328);
  if (v200 >= (*(_QWORD *)(v474 + 2336) - v201) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v201 = *(_QWORD *)(v474 + 2328);
    v197 = *v460;
    v199 = **v460;
  }
  v202 = *(_DWORD *)(v201 + (v200 << 11) + 1056);
  if (v199)
  {
LABEL_514:
    v203 = *(unsigned int *)(v467 + 88);
    if ((v203 & 0x80000000) == 0)
      goto LABEL_515;
LABEL_537:
    v205 = *(_DWORD *)(v474 + 1112);
    if (v199)
      goto LABEL_519;
    goto LABEL_538;
  }
LABEL_530:
  if ((v202 & 0x10000000) != 0)
    v208 = 0x40000000;
  else
    v208 = 0x80000000;
  if ((v202 & 0x20000000) != 0)
    v202 = v208;
  else
    v202 &= 0xCFFFFFFF;
  v203 = *(unsigned int *)(v467 + 88);
  if ((v203 & 0x80000000) != 0)
    goto LABEL_537;
LABEL_515:
  v204 = *(_QWORD *)(v474 + 2328);
  if (v203 >= (*(_QWORD *)(v474 + 2336) - v204) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v204 = *(_QWORD *)(v474 + 2328);
    v197 = *v460;
    v199 = **v460;
  }
  v205 = *(_DWORD *)(v204 + (v203 << 11) + 832);
  if (v199)
  {
LABEL_519:
    v206 = *(unsigned int *)(v467 + 88);
    if ((v206 & 0x80000000) != 0)
      goto LABEL_590;
    goto LABEL_545;
  }
LABEL_538:
  if ((v205 & 0x10000000) != 0)
    v209 = 0x40000000;
  else
    v209 = 0x80000000;
  if ((v205 & 0x20000000) != 0)
    v205 = v209;
  else
    v205 &= 0xCFFFFFFF;
  v206 = *(unsigned int *)(v467 + 88);
  if ((v206 & 0x80000000) != 0)
    goto LABEL_590;
LABEL_545:
  v210 = *(_QWORD *)(v474 + 2328);
  v211 = (*(_QWORD *)(v474 + 2336) - v210) >> 11;
  if (v211 > v206)
    goto LABEL_549;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v197 = *v460;
  v206 = *(unsigned int *)(v467 + 88);
  if ((v206 & 0x80000000) != 0)
  {
LABEL_590:
    v212 = *(_DWORD *)(v474 + 1144);
    if (*v197)
      goto LABEL_559;
    goto LABEL_553;
  }
  v210 = *(_QWORD *)(v474 + 2328);
  v211 = (*(_QWORD *)(v474 + 2336) - v210) >> 11;
LABEL_549:
  if (v211 <= v206)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v210 = *(_QWORD *)(v474 + 2328);
    v197 = *v460;
  }
  v212 = *(_DWORD *)(v210 + (v206 << 11) + 864);
  if (!*v197)
  {
LABEL_553:
    if ((v212 & 0x10000000) != 0)
      v213 = 0x40000000;
    else
      v213 = 0x80000000;
    if ((v212 & 0x20000000) != 0)
      v212 = v213;
    else
      v212 &= 0xCFFFFFFF;
  }
LABEL_559:
  v533 = v518;
  v534 = v519;
  v535 = v520;
  v532 = (float32x4_t)v517;
  v531 = v516;
  if ((v178 & 0x40000000) != 0)
  {
    v508 = v518;
    v509 = v519;
    v510 = v520;
    v507 = v517;
    v506 = v516;
    *(_QWORD *)&v561 = 0x161616160D0D0D0DLL;
    v501 = xmmword_224681340;
    v502 = (__int128)xmmword_224681350;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 7, 2, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15700000117), xmmword_224681350);
    if ((v161 & 0x40000000) == 0)
    {
      v503 = v518;
      v504 = v519;
      v505 = v520;
      v502 = v517;
      v501 = v516;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224681360;
      v562 = (__int128)xmmword_224681370;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 7, 2, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15700000117), xmmword_224681370);
      if (((v438 | v189) & 1) == 0)
      {
        v563 = v518;
        v564 = v519;
        v565 = v520;
        v561 = v516;
        v562 = v517;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224681380;
        v557 = (__int128)xmmword_224681390;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 7, 2, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15700000117), xmmword_224681390);
        v214 = (v452 & 1) == 0 && ((v431 | v188) & 1) == 0;
        if ((v417 & 1) == 0 && v214)
        {
          v558 = v518;
          v559 = v519;
          v560 = v520;
          v557 = v517;
          v556 = v516;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_2246813A0;
          v552 = (__int128)xmmword_2246813B0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 7, 2, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xD700000117), xmmword_2246813B0);
        }
      }
      v215 = (v428 & 1) == 0 && ((v431 | v188) & 1) == 0;
      if (v215 && (v472 & 1) == 0)
      {
        v553 = v533;
        v554 = v534;
        v555 = v535;
        v552 = (__int128)v532;
        v551 = v531;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_2246813C0;
        v547 = (__int128)xmmword_2246813D0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 7, 2, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xD700000117), xmmword_2246813D0);
      }
    }
    if (!(v202 & 0x40000000 | v189 & 1))
    {
      v548 = v533;
      v549 = v534;
      v550 = v535;
      *(_QWORD *)&v536 = 0x16160D0D16160D0DLL;
      v547 = (__int128)v532;
      v546 = v531;
      v541 = xmmword_2246813E0;
      v542 = (__int128)xmmword_2246813F0;
      *(_QWORD *)&v511 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 7, 2, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v511, COERCE_DOUBLE(0x15700000117), xmmword_2246813F0);
      v216 = (v198 & 0x40000000) == 0 && (v205 & 0x40000000 | v188 & 1) == 0;
      if ((v452 & 1) == 0 && v216)
      {
        v543 = v533;
        v544 = v534;
        v545 = v535;
        *(_QWORD *)&v511 = 0x161616160D0D0D0DLL;
        v542 = (__int128)v532;
        v541 = v531;
        v536 = xmmword_224681400;
        v537 = (__int128)xmmword_224681410;
        *(_QWORD *)&v567[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 7, 2, 4, (uint64_t)&v511, (uint64_t)&v536, (uint64_t)v567, COERCE_DOUBLE(0xD700000117), xmmword_224681410);
      }
    }
    v217 = (v472 & 1) == 0 && (v205 & 0x40000000 | v188 & 1) == 0;
    if (v217 && (v212 & 0x40000000) == 0)
    {
      v538 = v533;
      v539 = v534;
      v540 = v535;
      *(_QWORD *)&v567[0] = 0x16160D0D16160D0DLL;
      v537 = (__int128)v532;
      v536 = v531;
      v511 = xmmword_224681420;
      v512 = (__int128)xmmword_224681430;
      v568[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 7, 2, 4, (uint64_t)v567, (uint64_t)&v511, (uint64_t)v568, COERCE_DOUBLE(0xD700000117), xmmword_224681430);
    }
  }
  v218 = a1[2];
  v473 = v464[1];
  v475 = *v464;
  v479 = a3[3];
  v480 = a3[4];
  v477 = a3[1];
  v478 = a3[2];
  v476 = *a3;
  v429 = *(_OWORD *)a1;
  v465 = (_BYTE **)v464[2];
  v468 = *a1;
  v219 = *((_DWORD *)v218 + 208);
  v220 = ***a1;
  if (***a1)
  {
    v221 = *((_DWORD *)v218 + 272);
    v222 = *((_DWORD *)v218 + 216);
    v223 = *((_DWORD *)v218 + 224);
    v461 = *((_DWORD *)v218 + 280);
    if ((v461 & 0x40000000) == 0)
    {
LABEL_589:
      v224 = v221;
      v225 = 0;
      v226 = 0;
      v227 = 0;
      v228 = 0;
      v229 = 0;
      goto LABEL_642;
    }
  }
  else
  {
    if ((v219 & 0x20000000) != 0)
      v219 *= 4;
    v230 = *((_DWORD *)v218 + 272);
    if ((v230 & 0x20000000) != 0)
      v221 = 4 * v230;
    else
      v221 = *((_DWORD *)v218 + 272);
    v231 = *((_DWORD *)v218 + 216);
    if ((v231 & 0x20000000) != 0)
      v222 = 4 * v231;
    else
      v222 = *((_DWORD *)v218 + 216);
    v232 = *((_DWORD *)v218 + 280);
    if ((v232 & 0x20000000) != 0)
      v233 = 4 * v232;
    else
      v233 = *((_DWORD *)v218 + 280);
    v234 = *((_DWORD *)v218 + 224);
    if ((v234 & 0x10000000) != 0)
      v235 = 0x40000000;
    else
      v235 = 0x80000000;
    if ((v234 & 0x20000000) != 0)
      v223 = v235;
    else
      v223 = v234 & 0xCFFFFFFF;
    v461 = v233;
    if ((v233 & 0x40000000) == 0)
      goto LABEL_589;
  }
  v236 = *(unsigned int *)(v473 + 16);
  if ((v236 & 0x80000000) != 0)
  {
    v238 = *(_DWORD *)(v475 + 1140);
    v239 = **v465;
    if (**v465)
      goto LABEL_615;
  }
  else
  {
    v237 = *(_QWORD *)(v475 + 2328);
    if (v236 >= (*(_QWORD *)(v475 + 2336) - v237) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v237 = *(_QWORD *)(v475 + 2328);
    }
    v238 = *(_DWORD *)(v237 + (v236 << 11) + 860);
    v239 = **v465;
    if (**v465)
    {
LABEL_615:
      v240 = *(unsigned int *)(v473 + 16);
      if ((v240 & 0x80000000) == 0)
        goto LABEL_616;
LABEL_1149:
      v242 = *(_DWORD *)(v475 + 1396);
      if (v239)
        goto LABEL_620;
      goto LABEL_1150;
    }
  }
  if ((v238 & 0x10000000) != 0)
    v411 = 0x40000000;
  else
    v411 = 0x80000000;
  if ((v238 & 0x20000000) != 0)
    v238 = v411;
  else
    v238 &= 0xCFFFFFFF;
  v240 = *(unsigned int *)(v473 + 16);
  if ((v240 & 0x80000000) != 0)
    goto LABEL_1149;
LABEL_616:
  v241 = *(_QWORD *)(v475 + 2328);
  if (v240 >= (*(_QWORD *)(v475 + 2336) - v241) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v241 = *(_QWORD *)(v475 + 2328);
    v239 = **v465;
  }
  v242 = *(_DWORD *)(v241 + (v240 << 11) + 1116);
  if (v239)
  {
LABEL_620:
    v243 = *(unsigned int *)(v473 + 16);
    if ((v243 & 0x80000000) == 0)
      goto LABEL_621;
LABEL_1157:
    v245 = *(_DWORD *)(v475 + 1172);
    if (v239)
      goto LABEL_625;
    goto LABEL_1158;
  }
LABEL_1150:
  if ((v242 & 0x10000000) != 0)
    v412 = 0x40000000;
  else
    v412 = 0x80000000;
  if ((v242 & 0x20000000) != 0)
    v242 = v412;
  else
    v242 &= 0xCFFFFFFF;
  v243 = *(unsigned int *)(v473 + 16);
  if ((v243 & 0x80000000) != 0)
    goto LABEL_1157;
LABEL_621:
  v244 = *(_QWORD *)(v475 + 2328);
  if (v243 >= (*(_QWORD *)(v475 + 2336) - v244) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v244 = *(_QWORD *)(v475 + 2328);
    v239 = **v465;
  }
  v245 = *(_DWORD *)(v244 + (v243 << 11) + 892);
  if (v239)
  {
LABEL_625:
    v246 = *(unsigned int *)(v473 + 16);
    if ((v246 & 0x80000000) == 0)
      goto LABEL_626;
LABEL_1165:
    v248 = *(_DWORD *)(v475 + 1428);
    if (v239)
      goto LABEL_630;
    goto LABEL_1166;
  }
LABEL_1158:
  if ((v245 & 0x10000000) != 0)
    v413 = 0x40000000;
  else
    v413 = 0x80000000;
  if ((v245 & 0x20000000) != 0)
    v245 = v413;
  else
    v245 &= 0xCFFFFFFF;
  v246 = *(unsigned int *)(v473 + 16);
  if ((v246 & 0x80000000) != 0)
    goto LABEL_1165;
LABEL_626:
  v247 = *(_QWORD *)(v475 + 2328);
  if (v246 >= (*(_QWORD *)(v475 + 2336) - v247) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v247 = *(_QWORD *)(v475 + 2328);
    v239 = **v465;
  }
  v248 = *(_DWORD *)(v247 + (v246 << 11) + 1148);
  if (v239)
  {
LABEL_630:
    v249 = *(unsigned int *)(v473 + 16);
    if ((v249 & 0x80000000) == 0)
      goto LABEL_631;
    goto LABEL_1173;
  }
LABEL_1166:
  if ((v248 & 0x10000000) != 0)
    v414 = 0x40000000;
  else
    v414 = 0x80000000;
  if ((v248 & 0x20000000) != 0)
    v248 = v414;
  else
    v248 &= 0xCFFFFFFF;
  v249 = *(unsigned int *)(v473 + 16);
  if ((v249 & 0x80000000) == 0)
  {
LABEL_631:
    v250 = *(_QWORD *)(v475 + 2328);
    if (v249 >= (*(_QWORD *)(v475 + 2336) - v250) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v250 = *(_QWORD *)(v475 + 2328);
      v239 = **v465;
    }
    v224 = v221;
    v251 = v250 + (v249 << 11);
    v229 = (v238 >> 30) & 1;
    v228 = (v242 >> 30) & 1;
    v227 = (v245 >> 30) & 1;
    v252 = *(_DWORD *)(v251 + 924);
    v226 = (v248 >> 30) & 1;
    if (v239)
      goto LABEL_641;
    goto LABEL_635;
  }
LABEL_1173:
  v224 = v221;
  v229 = (v238 >> 30) & 1;
  v228 = (v242 >> 30) & 1;
  v227 = (v245 >> 30) & 1;
  v252 = *(_DWORD *)(v475 + 1204);
  v226 = (v248 >> 30) & 1;
  if (!v239)
  {
LABEL_635:
    if ((v252 & 0x10000000) != 0)
      v253 = 0x40000000;
    else
      v253 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v252 = v253;
    else
      v252 &= 0xCFFFFFFF;
  }
LABEL_641:
  v225 = (v252 >> 30) & 1;
  v220 = **v468;
LABEL_642:
  v432 = v219 >> 30;
  v513 = v478;
  v514 = v479;
  v515 = v480;
  v512 = v477;
  v511 = v476;
  v254 = *((_DWORD *)v218 + 209);
  if (v220)
  {
    v255 = *((_DWORD *)v218 + 273);
    v256 = *((_DWORD *)v218 + 217);
    v458 = *((_DWORD *)v218 + 281);
    v257 = *((_DWORD *)v218 + 225);
  }
  else
  {
    if ((v254 & 0x10000000) != 0)
      v258 = 0x40000000;
    else
      v258 = 0x80000000;
    if ((v254 & 0x20000000) != 0)
      v254 = v258;
    else
      v254 &= 0xCFFFFFFF;
    v259 = *((_DWORD *)v218 + 273);
    if ((v259 & 0x10000000) != 0)
      v260 = 0x40000000;
    else
      v260 = 0x80000000;
    if ((v259 & 0x20000000) != 0)
      v255 = v260;
    else
      v255 = v259 & 0xCFFFFFFF;
    v261 = *((_DWORD *)v218 + 217);
    if ((v261 & 0x10000000) != 0)
      v262 = 0x40000000;
    else
      v262 = 0x80000000;
    if ((v261 & 0x20000000) != 0)
      v256 = v262;
    else
      v256 = v261 & 0xCFFFFFFF;
    v263 = *((_DWORD *)v218 + 281);
    if ((v263 & 0x10000000) != 0)
      v264 = 0x40000000;
    else
      v264 = 0x80000000;
    if ((v263 & 0x20000000) != 0)
      v265 = v264;
    else
      v265 = v263 & 0xCFFFFFFF;
    v458 = v265;
    v266 = *((_DWORD *)v218 + 225);
    if ((v266 & 0x10000000) != 0)
      v257 = 0x40000000;
    else
      v257 = 0x80000000;
    if ((v266 & 0x20000000) == 0)
      v257 = v266 & 0xCFFFFFFF;
  }
  v267 = v222 >> 30;
  v268 = v224 >> 30;
  v269 = v223 >> 30;
  v424 = v254 >> 30;
  v447 = v256 >> 30;
  v453 = v255 >> 30;
  v270 = v257 >> 30;
  if ((v461 & 0x40000000) != 0)
  {
    v508 = v478;
    v509 = v479;
    v510 = v480;
    v507 = v477;
    v506 = v476;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224681440;
    v502 = (__int128)xmmword_224681450;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 0, 3, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15800000118), xmmword_224681450);
    if (!v226)
    {
      v503 = v478;
      v504 = v479;
      v505 = v480;
      v502 = v477;
      v501 = v476;
      *(_QWORD *)&v556 = 0x4040D0D04040D0DLL;
      v561 = xmmword_224681460;
      v562 = (__int128)xmmword_224681470;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 0, 3, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15800000118), xmmword_224681470);
      v271 = (v227 | v267 & 1) == 0;
      if (!(v228 | v268 & 1))
      {
        v563 = v478;
        v564 = v479;
        v565 = v480;
        v561 = v476;
        v562 = v477;
        *(_QWORD *)&v551 = 0x40404040D0D0D0DLL;
        v556 = xmmword_224681480;
        v557 = (__int128)xmmword_224681490;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 0, 3, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15800000118), xmmword_224681490);
        v272 = (v432 & 1) == 0 && v271;
        if (!v229 && v272)
        {
          v558 = v478;
          v559 = v479;
          v560 = v480;
          v557 = v477;
          v556 = v476;
          *(_QWORD *)&v546 = 0x4040D0D04040D0DLL;
          v551 = xmmword_2246814A0;
          v552 = (__int128)xmmword_2246814B0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 0, 3, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xD800000118), xmmword_2246814B0);
        }
      }
      if (v225)
        v273 = 0;
      else
        v273 = v271;
      if (v273 && (v269 & 1) == 0)
      {
        v553 = v478;
        v554 = v479;
        v555 = v480;
        *(_QWORD *)&v541 = 0x40404040D0D0D0DLL;
        v552 = v477;
        v551 = v476;
        v546 = xmmword_2246814C0;
        v547 = (__int128)xmmword_2246814D0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 0, 3, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xD800000118), xmmword_2246814D0);
      }
    }
    if (((v268 | v453) & 1) == 0)
    {
      v548 = v478;
      v549 = v479;
      v550 = v480;
      v547 = v477;
      v546 = v476;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_2246814E0;
      v542 = (__int128)xmmword_2246814F0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 0, 3, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15800000118), xmmword_2246814F0);
      v274 = (v424 & 1) == 0 && ((v267 | v447) & 1) == 0;
      if ((v432 & 1) == 0 && v274)
      {
        v543 = v478;
        v544 = v479;
        v545 = v480;
        v542 = v477;
        v541 = v476;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224681500;
        v537 = (__int128)xmmword_224681510;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 0, 3, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xD800000118), xmmword_224681510);
      }
    }
    v275 = (v269 & 1) == 0 && ((v267 | v447) & 1) == 0;
    if (v275 && (v270 & 1) == 0)
    {
      v538 = v478;
      v539 = v479;
      v540 = v480;
      v537 = v477;
      v536 = v476;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224681520;
      v532 = xmmword_224681530;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 0, 3, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v521, COERCE_DOUBLE(0xD800000118), xmmword_224681530);
    }
  }
  v488 = v513;
  v489 = v514;
  v490 = v515;
  v486 = v511;
  v487 = v512;
  v276 = *((_DWORD *)v218 + 210);
  if (**v468)
  {
    v277 = *((_DWORD *)v218 + 274);
    v278 = *((_DWORD *)v218 + 218);
    v279 = *((_DWORD *)v218 + 282);
    v280 = *((_DWORD *)v218 + 226);
  }
  else
  {
    if ((v276 & 0x10000000) != 0)
      v281 = 0x40000000;
    else
      v281 = 0x80000000;
    if ((v276 & 0x20000000) != 0)
      v276 = v281;
    else
      v276 &= 0xCFFFFFFF;
    v282 = *((_DWORD *)v218 + 274);
    if ((v282 & 0x10000000) != 0)
      v283 = 0x40000000;
    else
      v283 = 0x80000000;
    if ((v282 & 0x20000000) != 0)
      v277 = v283;
    else
      v277 = v282 & 0xCFFFFFFF;
    v284 = *((_DWORD *)v218 + 218);
    if ((v284 & 0x10000000) != 0)
      v285 = 0x40000000;
    else
      v285 = 0x80000000;
    if ((v284 & 0x20000000) != 0)
      v278 = v285;
    else
      v278 = v284 & 0xCFFFFFFF;
    v286 = *((_DWORD *)v218 + 282);
    if ((v286 & 0x10000000) != 0)
      v287 = 0x40000000;
    else
      v287 = 0x80000000;
    if ((v286 & 0x20000000) != 0)
      v279 = v287;
    else
      v279 = v286 & 0xCFFFFFFF;
    v288 = *((_DWORD *)v218 + 226);
    if ((v288 & 0x10000000) != 0)
      v280 = 0x40000000;
    else
      v280 = 0x80000000;
    if ((v288 & 0x20000000) == 0)
      v280 = v288 & 0xCFFFFFFF;
  }
  v421 = v276 >> 30;
  v439 = v278 >> 30;
  v443 = v277 >> 30;
  v435 = v280 >> 30;
  v498 = v513;
  v499 = v514;
  v500 = v515;
  v496 = v511;
  v497 = v512;
  if ((v458 & 0x40000000) != 0)
  {
    v508 = v513;
    v509 = v514;
    v510 = v515;
    v507 = v512;
    v506 = v511;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224681540;
    v502 = (__int128)xmmword_224681550;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 1, 3, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15900000119), xmmword_224681550);
    if ((v461 & 0x40000000) == 0)
    {
      v503 = v513;
      v504 = v514;
      v505 = v515;
      v502 = v512;
      v501 = v511;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224681560;
      v562 = (__int128)xmmword_224681570;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 1, 3, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15900000119), xmmword_224681570);
      if (((v268 | v453) & 1) == 0)
      {
        v563 = v513;
        v564 = v514;
        v565 = v515;
        v561 = v511;
        v562 = v512;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224681580;
        v557 = (__int128)xmmword_224681590;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 1, 3, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15900000119), xmmword_224681590);
        v289 = (v424 & 1) == 0 && ((v267 | v447) & 1) == 0;
        if ((v432 & 1) == 0 && v289)
        {
          v558 = v513;
          v559 = v514;
          v560 = v515;
          v557 = v512;
          v556 = v511;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_2246815A0;
          v552 = (__int128)xmmword_2246815B0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 1, 3, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xD900000119), xmmword_2246815B0);
        }
      }
      v290 = (v269 & 1) == 0 && ((v267 | v447) & 1) == 0;
      if (v290 && (v270 & 1) == 0)
      {
        v553 = v498;
        v554 = v499;
        v555 = v500;
        v552 = v497;
        v551 = v496;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_2246815C0;
        v547 = (__int128)xmmword_2246815D0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 1, 3, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xD900000119), xmmword_2246815D0);
      }
    }
    if (((v453 | v443) & 1) == 0)
    {
      v548 = v498;
      v549 = v499;
      v550 = v500;
      v547 = v497;
      v546 = v496;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_2246815E0;
      v542 = (__int128)xmmword_2246815F0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 1, 3, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15900000119), xmmword_2246815F0);
      v291 = (v421 & 1) == 0 && ((v447 | v439) & 1) == 0;
      if ((v424 & 1) == 0 && v291)
      {
        v543 = v498;
        v544 = v499;
        v545 = v500;
        v542 = v497;
        v541 = v496;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224681600;
        v537 = (__int128)xmmword_224681610;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 1, 3, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xD900000119), xmmword_224681610);
      }
    }
    v292 = (v270 & 1) == 0 && ((v447 | v439) & 1) == 0;
    if (v292 && (v435 & 1) == 0)
    {
      v538 = v498;
      v539 = v499;
      v540 = v500;
      v537 = v497;
      v536 = v496;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224681620;
      v532 = xmmword_224681630;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 1, 3, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v521, COERCE_DOUBLE(0xD900000119), xmmword_224681630);
    }
  }
  v293 = *((_DWORD *)v218 + 211);
  if (**v468)
  {
    v294 = *((_DWORD *)v218 + 275);
    v295 = *((_DWORD *)v218 + 219);
    v296 = *((_DWORD *)v218 + 283);
    v297 = *((_DWORD *)v218 + 227);
  }
  else
  {
    if ((v293 & 0x10000000) != 0)
      v298 = 0x40000000;
    else
      v298 = 0x80000000;
    if ((v293 & 0x20000000) != 0)
      v293 = v298;
    else
      v293 &= 0xCFFFFFFF;
    v299 = *((_DWORD *)v218 + 275);
    if ((v299 & 0x10000000) != 0)
      v300 = 0x40000000;
    else
      v300 = 0x80000000;
    if ((v299 & 0x20000000) != 0)
      v294 = v300;
    else
      v294 = v299 & 0xCFFFFFFF;
    v301 = *((_DWORD *)v218 + 219);
    if ((v301 & 0x10000000) != 0)
      v302 = 0x40000000;
    else
      v302 = 0x80000000;
    if ((v301 & 0x20000000) != 0)
      v295 = v302;
    else
      v295 = v301 & 0xCFFFFFFF;
    v303 = *((_DWORD *)v218 + 283);
    if ((v303 & 0x10000000) != 0)
      v304 = 0x40000000;
    else
      v304 = 0x80000000;
    if ((v303 & 0x20000000) != 0)
      v296 = v304;
    else
      v296 = v303 & 0xCFFFFFFF;
    v305 = *((_DWORD *)v218 + 227);
    if ((v305 & 0x10000000) != 0)
      v297 = 0x40000000;
    else
      v297 = 0x80000000;
    if ((v305 & 0x20000000) == 0)
      v297 = v305 & 0xCFFFFFFF;
  }
  v306 = v295 >> 30;
  v418 = v293 >> 30;
  v462 = v294 >> 30;
  v433 = v297 >> 30;
  if ((v279 & 0x40000000) != 0)
  {
    v508 = v488;
    v509 = v489;
    v510 = v490;
    v507 = v487;
    v506 = v486;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224681640;
    v502 = (__int128)xmmword_224681650;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 2, 3, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15A0000011ALL), xmmword_224681650);
    if ((v458 & 0x40000000) == 0)
    {
      v503 = v488;
      v504 = v489;
      v505 = v490;
      v502 = v487;
      v501 = v486;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224681660;
      v562 = (__int128)xmmword_224681670;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 2, 3, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15A0000011ALL), xmmword_224681670);
      if (((v453 | v443) & 1) == 0)
      {
        v563 = v488;
        v564 = v489;
        v565 = v490;
        v561 = v486;
        v562 = v487;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224681680;
        v557 = (__int128)xmmword_224681690;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 2, 3, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15A0000011ALL), xmmword_224681690);
        v307 = (v421 & 1) == 0 && ((v447 | v439) & 1) == 0;
        if ((v424 & 1) == 0 && v307)
        {
          v558 = v488;
          v559 = v489;
          v560 = v490;
          v557 = v487;
          v556 = v486;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_2246816A0;
          v552 = (__int128)xmmword_2246816B0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 2, 3, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xDA0000011ALL), xmmword_2246816B0);
        }
      }
      v308 = (v270 & 1) == 0 && ((v447 | v439) & 1) == 0;
      if (v308 && (v435 & 1) == 0)
      {
        v553 = v488;
        v554 = v489;
        v555 = v490;
        v552 = v487;
        v551 = v486;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_2246816C0;
        v547 = (__int128)xmmword_2246816D0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 2, 3, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xDA0000011ALL), xmmword_2246816D0);
      }
    }
    if (((v443 | v462) & 1) == 0)
    {
      v548 = v488;
      v549 = v489;
      v550 = v490;
      v547 = v487;
      v546 = v486;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_2246816E0;
      v542 = (__int128)xmmword_2246816F0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 2, 3, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15A0000011ALL), xmmword_2246816F0);
      v309 = (v418 & 1) == 0 && ((v439 | v306) & 1) == 0;
      if ((v421 & 1) == 0 && v309)
      {
        v543 = v488;
        v544 = v489;
        v545 = v490;
        v542 = v487;
        v541 = v486;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224681700;
        v537 = (__int128)xmmword_224681710;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 2, 3, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xDA0000011ALL), xmmword_224681710);
      }
    }
    v310 = (v435 & 1) == 0 && ((v439 | v306) & 1) == 0;
    if (v310 && (v433 & 1) == 0)
    {
      v538 = v488;
      v539 = v489;
      v540 = v490;
      v537 = v487;
      v536 = v486;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224681720;
      v532 = xmmword_224681730;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 2, 3, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v521, COERCE_DOUBLE(0xDA0000011ALL), xmmword_224681730);
    }
  }
  v311 = *((_DWORD *)v218 + 212);
  if (**v468)
  {
    v312 = *((_DWORD *)v218 + 276);
    v313 = *((_DWORD *)v218 + 220);
    v314 = *((_DWORD *)v218 + 284);
    v315 = *((_DWORD *)v218 + 228);
  }
  else
  {
    if ((v311 & 0x10000000) != 0)
      v316 = 0x40000000;
    else
      v316 = 0x80000000;
    if ((v311 & 0x20000000) != 0)
      v311 = v316;
    else
      v311 &= 0xCFFFFFFF;
    v317 = *((_DWORD *)v218 + 276);
    if ((v317 & 0x10000000) != 0)
      v318 = 0x40000000;
    else
      v318 = 0x80000000;
    if ((v317 & 0x20000000) != 0)
      v312 = v318;
    else
      v312 = v317 & 0xCFFFFFFF;
    v319 = *((_DWORD *)v218 + 220);
    if ((v319 & 0x10000000) != 0)
      v320 = 0x40000000;
    else
      v320 = 0x80000000;
    if ((v319 & 0x20000000) != 0)
      v313 = v320;
    else
      v313 = v319 & 0xCFFFFFFF;
    v321 = *((_DWORD *)v218 + 284);
    if ((v321 & 0x10000000) != 0)
      v322 = 0x40000000;
    else
      v322 = 0x80000000;
    if ((v321 & 0x20000000) != 0)
      v314 = v322;
    else
      v314 = v321 & 0xCFFFFFFF;
    v323 = *((_DWORD *)v218 + 228);
    if ((v323 & 0x10000000) != 0)
      v315 = 0x40000000;
    else
      v315 = 0x80000000;
    if ((v323 & 0x20000000) == 0)
      v315 = v323 & 0xCFFFFFFF;
  }
  v324 = v313 >> 30;
  v425 = v311 >> 30;
  v325 = v312 >> 30;
  v448 = v315 >> 30;
  if ((v296 & 0x40000000) != 0)
  {
    v508 = v488;
    v509 = v489;
    v510 = v490;
    v507 = v487;
    v506 = v486;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224681740;
    v502 = (__int128)xmmword_224681750;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 3, 3, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15B0000011BLL), xmmword_224681750);
    if ((v279 & 0x40000000) == 0)
    {
      v503 = v488;
      v504 = v489;
      v505 = v490;
      v502 = v487;
      v501 = v486;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224681760;
      v562 = (__int128)xmmword_224681770;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 3, 3, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15B0000011BLL), xmmword_224681770);
      if (((v443 | v462) & 1) == 0)
      {
        v563 = v488;
        v564 = v489;
        v565 = v490;
        v561 = v486;
        v562 = v487;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224681780;
        v557 = (__int128)xmmword_224681790;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 3, 3, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15B0000011BLL), xmmword_224681790);
        v326 = (v418 & 1) == 0 && ((v439 | v306) & 1) == 0;
        if ((v421 & 1) == 0 && v326)
        {
          v558 = v488;
          v559 = v489;
          v560 = v490;
          v557 = v487;
          v556 = v486;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_2246817A0;
          v552 = (__int128)xmmword_2246817B0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 3, 3, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xDB0000011BLL), xmmword_2246817B0);
        }
      }
      v327 = (v435 & 1) == 0 && ((v439 | v306) & 1) == 0;
      if (v327 && (v433 & 1) == 0)
      {
        v553 = v488;
        v554 = v489;
        v555 = v490;
        v552 = v487;
        v551 = v486;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_2246817C0;
        v547 = (__int128)xmmword_2246817D0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 3, 3, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xDB0000011BLL), xmmword_2246817D0);
      }
    }
    if (((v462 | v325) & 1) == 0)
    {
      v548 = v488;
      v549 = v489;
      v550 = v490;
      v547 = v487;
      v546 = v486;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_2246817E0;
      v542 = (__int128)xmmword_2246817F0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 3, 3, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15B0000011BLL), xmmword_2246817F0);
      v328 = (v425 & 1) == 0 && ((v306 | v324) & 1) == 0;
      if ((v418 & 1) == 0 && v328)
      {
        v543 = v488;
        v544 = v489;
        v545 = v490;
        v542 = v487;
        v541 = v486;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224681800;
        v537 = (__int128)xmmword_224681810;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 3, 3, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xDB0000011BLL), xmmword_224681810);
      }
    }
    v329 = (v433 & 1) == 0 && ((v306 | v324) & 1) == 0;
    if (v329 && (v448 & 1) == 0)
    {
      v538 = v488;
      v539 = v489;
      v540 = v490;
      v537 = v487;
      v536 = v486;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224681820;
      v532 = xmmword_224681830;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 3, 3, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v521, COERCE_DOUBLE(0xDB0000011BLL), xmmword_224681830);
    }
  }
  v330 = *((_DWORD *)v218 + 213);
  if (**v468)
  {
    v331 = *((_DWORD *)v218 + 277);
    v332 = *((_DWORD *)v218 + 221);
    v333 = *((_DWORD *)v218 + 285);
    v334 = *((_DWORD *)v218 + 229);
  }
  else
  {
    if ((v330 & 0x10000000) != 0)
      v335 = 0x40000000;
    else
      v335 = 0x80000000;
    if ((v330 & 0x20000000) != 0)
      v330 = v335;
    else
      v330 &= 0xCFFFFFFF;
    v336 = *((_DWORD *)v218 + 277);
    if ((v336 & 0x10000000) != 0)
      v337 = 0x40000000;
    else
      v337 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v331 = v337;
    else
      v331 = v336 & 0xCFFFFFFF;
    v338 = *((_DWORD *)v218 + 221);
    if ((v338 & 0x10000000) != 0)
      v339 = 0x40000000;
    else
      v339 = 0x80000000;
    if ((v338 & 0x20000000) != 0)
      v332 = v339;
    else
      v332 = v338 & 0xCFFFFFFF;
    v340 = *((_DWORD *)v218 + 285);
    if ((v340 & 0x10000000) != 0)
      v341 = 0x40000000;
    else
      v341 = 0x80000000;
    if ((v340 & 0x20000000) != 0)
      v333 = v341;
    else
      v333 = v340 & 0xCFFFFFFF;
    v342 = *((_DWORD *)v218 + 229);
    if ((v342 & 0x10000000) != 0)
      v334 = 0x40000000;
    else
      v334 = 0x80000000;
    if ((v342 & 0x20000000) == 0)
      v334 = v342 & 0xCFFFFFFF;
  }
  v343 = v332 >> 30;
  v459 = v331 >> 30;
  v440 = v330 >> 30;
  v444 = v334 >> 30;
  if ((v314 & 0x40000000) != 0)
  {
    v508 = v488;
    v509 = v489;
    v510 = v490;
    v507 = v487;
    v506 = v486;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224681840;
    v502 = (__int128)xmmword_224681850;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 4, 3, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15C0000011CLL), xmmword_224681850);
    if ((v296 & 0x40000000) == 0)
    {
      v503 = v488;
      v504 = v489;
      v505 = v490;
      v502 = v487;
      v501 = v486;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224681860;
      v562 = (__int128)xmmword_224681870;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 4, 3, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15C0000011CLL), xmmword_224681870);
      if (((v462 | v325) & 1) == 0)
      {
        v563 = v488;
        v564 = v489;
        v565 = v490;
        v561 = v486;
        v562 = v487;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224681880;
        v557 = (__int128)xmmword_224681890;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 4, 3, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15C0000011CLL), xmmword_224681890);
        v344 = (v425 & 1) == 0 && ((v306 | v324) & 1) == 0;
        if ((v418 & 1) == 0 && v344)
        {
          v558 = v488;
          v559 = v489;
          v560 = v490;
          v557 = v487;
          v556 = v486;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_2246818A0;
          v552 = (__int128)xmmword_2246818B0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 4, 3, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xDC0000011CLL), xmmword_2246818B0);
        }
      }
      v345 = (v433 & 1) == 0 && ((v306 | v324) & 1) == 0;
      if (v345 && (v448 & 1) == 0)
      {
        v553 = v488;
        v554 = v489;
        v555 = v490;
        v552 = v487;
        v551 = v486;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_2246818C0;
        v547 = (__int128)xmmword_2246818D0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 4, 3, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xDC0000011CLL), xmmword_2246818D0);
      }
    }
    if (((v325 | v459) & 1) == 0)
    {
      v548 = v488;
      v549 = v489;
      v550 = v490;
      v547 = v487;
      v546 = v486;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_2246818E0;
      v542 = (__int128)xmmword_2246818F0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 4, 3, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15C0000011CLL), xmmword_2246818F0);
      v346 = (v440 & 1) == 0 && ((v324 | v343) & 1) == 0;
      if ((v425 & 1) == 0 && v346)
      {
        v543 = v488;
        v544 = v489;
        v545 = v490;
        v542 = v487;
        v541 = v486;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224681900;
        v537 = (__int128)xmmword_224681910;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 4, 3, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xDC0000011CLL), xmmword_224681910);
      }
    }
    v347 = (v448 & 1) == 0 && ((v324 | v343) & 1) == 0;
    if (v347 && (v444 & 1) == 0)
    {
      v538 = v488;
      v539 = v489;
      v540 = v490;
      v537 = v487;
      v536 = v486;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224681920;
      v532 = xmmword_224681930;
      *(_QWORD *)&v521 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 4, 3, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v521, COERCE_DOUBLE(0xDC0000011CLL), xmmword_224681930);
    }
  }
  v348 = *((_DWORD *)v218 + 214);
  if (**v468)
  {
    v349 = *((_DWORD *)v218 + 278);
    v350 = *((_DWORD *)v218 + 222);
    v351 = *((_DWORD *)v218 + 286);
    v352 = *((_DWORD *)v218 + 230);
  }
  else
  {
    if ((v348 & 0x10000000) != 0)
      v353 = 0x40000000;
    else
      v353 = 0x80000000;
    if ((v348 & 0x20000000) != 0)
      v348 = v353;
    else
      v348 &= 0xCFFFFFFF;
    v354 = *((_DWORD *)v218 + 278);
    if ((v354 & 0x10000000) != 0)
      v355 = 0x40000000;
    else
      v355 = 0x80000000;
    if ((v354 & 0x20000000) != 0)
      v349 = v355;
    else
      v349 = v354 & 0xCFFFFFFF;
    v356 = *((_DWORD *)v218 + 222);
    if ((v356 & 0x10000000) != 0)
      v357 = 0x40000000;
    else
      v357 = 0x80000000;
    if ((v356 & 0x20000000) != 0)
      v350 = v357;
    else
      v350 = v356 & 0xCFFFFFFF;
    v358 = *((_DWORD *)v218 + 286);
    if ((v358 & 0x10000000) != 0)
      v359 = 0x40000000;
    else
      v359 = 0x80000000;
    if ((v358 & 0x20000000) != 0)
      v351 = v359;
    else
      v351 = v358 & 0xCFFFFFFF;
    v360 = *((_DWORD *)v218 + 230);
    if ((v360 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v360 & 0x20000000) == 0)
      v352 = v360 & 0xCFFFFFFF;
  }
  v454 = v350 >> 30;
  v436 = v348 >> 30;
  v463 = v349 >> 30;
  v361 = v352 >> 30;
  v523 = v488;
  v524 = v489;
  v525 = v490;
  v522 = v487;
  v521 = v486;
  if ((v333 & 0x40000000) != 0)
  {
    v508 = v488;
    v509 = v489;
    v510 = v490;
    v507 = v487;
    v506 = v486;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224681940;
    v502 = (__int128)xmmword_224681950;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 5, 3, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15D0000011DLL), xmmword_224681950);
    if ((v314 & 0x40000000) == 0)
    {
      v503 = v488;
      v504 = v489;
      v505 = v490;
      v502 = v487;
      v501 = v486;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224681960;
      v562 = (__int128)xmmword_224681970;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 5, 3, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15D0000011DLL), xmmword_224681970);
      if (((v325 | v459) & 1) == 0)
      {
        v563 = v488;
        v564 = v489;
        v565 = v490;
        v561 = v486;
        v562 = v487;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224681980;
        v557 = (__int128)xmmword_224681990;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 5, 3, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15D0000011DLL), xmmword_224681990);
        v362 = (v440 & 1) == 0 && ((v324 | v343) & 1) == 0;
        if ((v425 & 1) == 0 && v362)
        {
          v558 = v488;
          v559 = v489;
          v560 = v490;
          v557 = v487;
          v556 = v486;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_2246819A0;
          v552 = (__int128)xmmword_2246819B0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 5, 3, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xDD0000011DLL), xmmword_2246819B0);
        }
      }
      v363 = (v448 & 1) == 0 && ((v324 | v343) & 1) == 0;
      if (v363 && (v444 & 1) == 0)
      {
        v553 = v523;
        v554 = v524;
        v555 = v525;
        v552 = v522;
        v551 = v521;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_2246819C0;
        v547 = (__int128)xmmword_2246819D0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 5, 3, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xDD0000011DLL), xmmword_2246819D0);
      }
    }
    if (((v459 | v463) & 1) == 0)
    {
      v548 = v523;
      v549 = v524;
      v550 = v525;
      v547 = v522;
      v546 = v521;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_2246819E0;
      v542 = (__int128)xmmword_2246819F0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 5, 3, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15D0000011DLL), xmmword_2246819F0);
      v364 = (v436 & 1) == 0 && ((v343 | v454) & 1) == 0;
      if ((v440 & 1) == 0 && v364)
      {
        v543 = v523;
        v544 = v524;
        v545 = v525;
        v542 = v522;
        v541 = v521;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224681A00;
        v537 = (__int128)xmmword_224681A10;
        *(_QWORD *)&v526 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 5, 3, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)&v526, COERCE_DOUBLE(0xDD0000011DLL), xmmword_224681A10);
      }
    }
    v365 = (v444 & 1) == 0 && ((v343 | v454) & 1) == 0;
    if (v365 && (v361 & 1) == 0)
    {
      v538 = v523;
      v539 = v524;
      v540 = v525;
      v537 = v522;
      v536 = v521;
      *(_QWORD *)&v526 = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224681A20;
      v532 = xmmword_224681A30;
      *(_QWORD *)&v516 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 5, 3, 4, (uint64_t)&v526, (uint64_t)&v531, (uint64_t)&v516, COERCE_DOUBLE(0xDD0000011DLL), xmmword_224681A30);
    }
  }
  v518 = v488;
  v519 = v489;
  v520 = v490;
  v517 = v487;
  v516 = v486;
  v366 = *((_DWORD *)v218 + 215);
  if (**v468)
  {
    v367 = *((_DWORD *)v218 + 279);
    v368 = *((_DWORD *)v218 + 223);
    v369 = *((_DWORD *)v218 + 287);
    v370 = *((_DWORD *)v218 + 231);
  }
  else
  {
    if ((v366 & 0x10000000) != 0)
      v371 = 0x40000000;
    else
      v371 = 0x80000000;
    if ((v366 & 0x20000000) != 0)
      v366 = v371;
    else
      v366 &= 0xCFFFFFFF;
    v372 = *((_DWORD *)v218 + 279);
    if ((v372 & 0x10000000) != 0)
      v373 = 0x40000000;
    else
      v373 = 0x80000000;
    if ((v372 & 0x20000000) != 0)
      v367 = v373;
    else
      v367 = v372 & 0xCFFFFFFF;
    v374 = *((_DWORD *)v218 + 223);
    if ((v374 & 0x10000000) != 0)
      v375 = 0x40000000;
    else
      v375 = 0x80000000;
    if ((v374 & 0x20000000) != 0)
      v368 = v375;
    else
      v368 = v374 & 0xCFFFFFFF;
    v376 = *((_DWORD *)v218 + 287);
    if ((v376 & 0x10000000) != 0)
      v377 = 0x40000000;
    else
      v377 = 0x80000000;
    if ((v376 & 0x20000000) != 0)
      v369 = v377;
    else
      v369 = v376 & 0xCFFFFFFF;
    v378 = *((_DWORD *)v218 + 231);
    if ((v378 & 0x10000000) != 0)
      v370 = 0x40000000;
    else
      v370 = 0x80000000;
    if ((v378 & 0x20000000) == 0)
      v370 = v378 & 0xCFFFFFFF;
  }
  v379 = v368 >> 30;
  v449 = v366 >> 30;
  v380 = v367 >> 30;
  v469 = v370 >> 30;
  v528 = v488;
  v529 = v489;
  v530 = v490;
  v527 = v487;
  v526 = v486;
  if ((v351 & 0x40000000) != 0)
  {
    v508 = v488;
    v509 = v489;
    v510 = v490;
    v507 = v487;
    v506 = v486;
    *(_QWORD *)&v561 = 0xD0D0D0D0D0D0D0DLL;
    v501 = xmmword_224681A40;
    v502 = (__int128)xmmword_224681A50;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 6, 3, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15E0000011ELL), xmmword_224681A50);
    if ((v333 & 0x40000000) == 0)
    {
      v503 = v488;
      v504 = v489;
      v505 = v490;
      v502 = v487;
      v501 = v486;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224681A60;
      v562 = (__int128)xmmword_224681A70;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 6, 3, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15E0000011ELL), xmmword_224681A70);
      if (((v459 | v463) & 1) == 0)
      {
        v563 = v488;
        v564 = v489;
        v565 = v490;
        v561 = v486;
        v562 = v487;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224681A80;
        v557 = (__int128)xmmword_224681A90;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 6, 3, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15E0000011ELL), xmmword_224681A90);
        v381 = (v436 & 1) == 0 && ((v343 | v454) & 1) == 0;
        if ((v440 & 1) == 0 && v381)
        {
          v558 = v488;
          v559 = v489;
          v560 = v490;
          v557 = v487;
          v556 = v486;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_224681AA0;
          v552 = (__int128)xmmword_224681AB0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 6, 3, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xDE0000011ELL), xmmword_224681AB0);
        }
      }
      v382 = (v444 & 1) == 0 && ((v343 | v454) & 1) == 0;
      if (v382 && (v361 & 1) == 0)
      {
        v553 = v528;
        v554 = v529;
        v555 = v530;
        v552 = v527;
        v551 = v526;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v546 = xmmword_224681AC0;
        v547 = (__int128)xmmword_224681AD0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 6, 3, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xDE0000011ELL), xmmword_224681AD0);
      }
    }
    if (((v463 | v380) & 1) == 0)
    {
      v548 = v528;
      v549 = v529;
      v550 = v530;
      v547 = v527;
      v546 = v526;
      *(_QWORD *)&v536 = 0xD0D0D0D0D0D0D0DLL;
      v541 = xmmword_224681AE0;
      v542 = (__int128)xmmword_224681AF0;
      *(_QWORD *)&v531 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 6, 3, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)&v531, COERCE_DOUBLE(0x15E0000011ELL), xmmword_224681AF0);
      v383 = (v449 & 1) == 0 && ((v454 | v379) & 1) == 0;
      if ((v436 & 1) == 0 && v383)
      {
        v543 = v528;
        v544 = v529;
        v545 = v530;
        v542 = v527;
        v541 = v526;
        *(_QWORD *)&v531 = 0xD0D0D0D0D0D0D0DLL;
        v536 = xmmword_224681B00;
        v537 = (__int128)xmmword_224681B10;
        *(_QWORD *)&v567[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 6, 3, 4, (uint64_t)&v531, (uint64_t)&v536, (uint64_t)v567, COERCE_DOUBLE(0xDE0000011ELL), xmmword_224681B10);
      }
    }
    v384 = (v361 & 1) == 0 && ((v454 | v379) & 1) == 0;
    if (v384 && (v469 & 1) == 0)
    {
      v538 = v528;
      v539 = v529;
      v540 = v530;
      v537 = v527;
      v536 = v526;
      *(_QWORD *)&v567[0] = 0xD0D0D0D0D0D0D0DLL;
      v531 = xmmword_224681B20;
      v532 = xmmword_224681B30;
      v568[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 6, 3, 4, (uint64_t)v567, (uint64_t)&v531, (uint64_t)v568, COERCE_DOUBLE(0xDE0000011ELL), xmmword_224681B30);
    }
  }
  v385 = *(unsigned int *)(v473 + 88);
  if ((v385 & 0x80000000) != 0)
  {
    v388 = *v465;
    v389 = *(_DWORD *)(v475 + 1112);
    v390 = **v465;
    if (**v465)
      goto LABEL_1060;
  }
  else
  {
    v386 = *(_QWORD *)(v475 + 2328);
    if (v385 >= (*(_QWORD *)(v475 + 2336) - v386) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v386 = *(_QWORD *)(v475 + 2328);
    }
    v387 = v386 + (v385 << 11);
    v388 = *v465;
    v389 = *(_DWORD *)(v387 + 832);
    v390 = **v465;
    if (**v465)
    {
LABEL_1060:
      v391 = *(unsigned int *)(v473 + 88);
      if ((v391 & 0x80000000) == 0)
        goto LABEL_1061;
LABEL_1080:
      v393 = *(_DWORD *)(v475 + 1368);
      if (v390)
        goto LABEL_1065;
      goto LABEL_1081;
    }
  }
  if ((v389 & 0x10000000) != 0)
    v398 = 0x40000000;
  else
    v398 = 0x80000000;
  if ((v389 & 0x20000000) != 0)
    v389 = v398;
  else
    v389 &= 0xCFFFFFFF;
  v391 = *(unsigned int *)(v473 + 88);
  if ((v391 & 0x80000000) != 0)
    goto LABEL_1080;
LABEL_1061:
  v392 = *(_QWORD *)(v475 + 2328);
  if (v391 >= (*(_QWORD *)(v475 + 2336) - v392) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v392 = *(_QWORD *)(v475 + 2328);
    v388 = *v465;
    v390 = **v465;
  }
  v393 = *(_DWORD *)(v392 + (v391 << 11) + 1088);
  if (v390)
  {
LABEL_1065:
    v394 = *(unsigned int *)(v473 + 88);
    if ((v394 & 0x80000000) == 0)
      goto LABEL_1066;
LABEL_1088:
    v396 = *(_DWORD *)(v475 + 1144);
    if (v390)
      goto LABEL_1070;
    goto LABEL_1089;
  }
LABEL_1081:
  if ((v393 & 0x10000000) != 0)
    v399 = 0x40000000;
  else
    v399 = 0x80000000;
  if ((v393 & 0x20000000) != 0)
    v393 = v399;
  else
    v393 &= 0xCFFFFFFF;
  v394 = *(unsigned int *)(v473 + 88);
  if ((v394 & 0x80000000) != 0)
    goto LABEL_1088;
LABEL_1066:
  v395 = *(_QWORD *)(v475 + 2328);
  if (v394 >= (*(_QWORD *)(v475 + 2336) - v395) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v395 = *(_QWORD *)(v475 + 2328);
    v388 = *v465;
    v390 = **v465;
  }
  v396 = *(_DWORD *)(v395 + (v394 << 11) + 864);
  if (v390)
  {
LABEL_1070:
    v397 = *(unsigned int *)(v473 + 88);
    if ((v397 & 0x80000000) != 0)
      goto LABEL_1139;
    goto LABEL_1096;
  }
LABEL_1089:
  if ((v396 & 0x10000000) != 0)
    v400 = 0x40000000;
  else
    v400 = 0x80000000;
  if ((v396 & 0x20000000) != 0)
    v396 = v400;
  else
    v396 &= 0xCFFFFFFF;
  v397 = *(unsigned int *)(v473 + 88);
  if ((v397 & 0x80000000) != 0)
    goto LABEL_1139;
LABEL_1096:
  v401 = *(_QWORD *)(v475 + 2328);
  v402 = (*(_QWORD *)(v475 + 2336) - v401) >> 11;
  if (v402 > v397)
    goto LABEL_1100;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v388 = *v465;
  v397 = *(unsigned int *)(v473 + 88);
  if ((v397 & 0x80000000) != 0)
  {
LABEL_1139:
    v403 = *(_DWORD *)(v475 + 1176);
    if (*v388)
      goto LABEL_1110;
    goto LABEL_1104;
  }
  v401 = *(_QWORD *)(v475 + 2328);
  v402 = (*(_QWORD *)(v475 + 2336) - v401) >> 11;
LABEL_1100:
  if (v402 <= v397)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v401 = *(_QWORD *)(v475 + 2328);
    v388 = *v465;
  }
  v403 = *(_DWORD *)(v401 + (v397 << 11) + 896);
  if (!*v388)
  {
LABEL_1104:
    if ((v403 & 0x10000000) != 0)
      v404 = 0x40000000;
    else
      v404 = 0x80000000;
    if ((v403 & 0x20000000) != 0)
      v403 = v404;
    else
      v403 &= 0xCFFFFFFF;
  }
LABEL_1110:
  v533 = v518;
  v534 = v519;
  v535 = v520;
  v532 = (float32x4_t)v517;
  v531 = v516;
  if ((v369 & 0x40000000) != 0)
  {
    v508 = v518;
    v509 = v519;
    v510 = v520;
    v507 = v517;
    v506 = v516;
    *(_QWORD *)&v561 = 0x161616160D0D0D0DLL;
    v501 = xmmword_224681B40;
    v502 = (__int128)xmmword_224681B50;
    *(_QWORD *)&v556 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v506, 7, 3, 4, (uint64_t)&v561, (uint64_t)&v501, (uint64_t)&v556, COERCE_DOUBLE(0x15F0000011FLL), xmmword_224681B50);
    if ((v351 & 0x40000000) == 0)
    {
      v503 = v518;
      v504 = v519;
      v505 = v520;
      v502 = v517;
      v501 = v516;
      *(_QWORD *)&v556 = 0xD0D0D0D0D0D0D0DLL;
      v561 = xmmword_224681B60;
      v562 = (__int128)xmmword_224681B70;
      *(_QWORD *)&v551 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v501, 7, 3, 4, (uint64_t)&v556, (uint64_t)&v561, (uint64_t)&v551, COERCE_DOUBLE(0x15F0000011FLL), xmmword_224681B70);
      if (((v463 | v380) & 1) == 0)
      {
        v563 = v518;
        v564 = v519;
        v565 = v520;
        v561 = v516;
        v562 = v517;
        *(_QWORD *)&v551 = 0xD0D0D0D0D0D0D0DLL;
        v556 = xmmword_224681B80;
        v557 = (__int128)xmmword_224681B90;
        *(_QWORD *)&v546 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v561, 7, 3, 4, (uint64_t)&v551, (uint64_t)&v556, (uint64_t)&v546, COERCE_DOUBLE(0x15F0000011FLL), xmmword_224681B90);
        v405 = (v449 & 1) == 0 && ((v454 | v379) & 1) == 0;
        if ((v436 & 1) == 0 && v405)
        {
          v558 = v518;
          v559 = v519;
          v560 = v520;
          v557 = v517;
          v556 = v516;
          *(_QWORD *)&v546 = 0xD0D0D0D0D0D0D0DLL;
          v551 = xmmword_224681BA0;
          v552 = (__int128)xmmword_224681BB0;
          *(_QWORD *)&v541 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v556, 7, 3, 4, (uint64_t)&v546, (uint64_t)&v551, (uint64_t)&v541, COERCE_DOUBLE(0xDF0000011FLL), xmmword_224681BB0);
        }
      }
      v406 = (v361 & 1) == 0 && ((v454 | v379) & 1) == 0;
      if (v406 && (v469 & 1) == 0)
      {
        v553 = v533;
        v554 = v534;
        v555 = v535;
        *(_QWORD *)&v541 = 0xD0D0D0D0D0D0D0DLL;
        v552 = (__int128)v532;
        v551 = v531;
        v546 = xmmword_224681BC0;
        v547 = (__int128)xmmword_224681BD0;
        *(_QWORD *)&v536 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v551, 7, 3, 4, (uint64_t)&v541, (uint64_t)&v546, (uint64_t)&v536, COERCE_DOUBLE(0xDF0000011FLL), xmmword_224681BD0);
      }
    }
    v407 = (v396 & 0x40000000 | v379 & 1) == 0;
    if (!(v393 & 0x40000000 | v380 & 1))
    {
      v548 = v533;
      v549 = v534;
      v550 = v535;
      *(_QWORD *)&v536 = 0x16160D0D16160D0DLL;
      v547 = (__int128)v532;
      v546 = v531;
      v541 = xmmword_224681BE0;
      v542 = (__int128)xmmword_224681BF0;
      *(_QWORD *)&v567[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v546, 7, 3, 4, (uint64_t)&v536, (uint64_t)&v541, (uint64_t)v567, COERCE_DOUBLE(0x15F0000011FLL), xmmword_224681BF0);
      v408 = (v389 & 0x40000000) == 0 && v407;
      if ((v449 & 1) == 0 && v408)
      {
        v543 = v533;
        v544 = v534;
        v545 = v535;
        *(_QWORD *)&v567[0] = 0x161616160D0D0D0DLL;
        v542 = (__int128)v532;
        v541 = v531;
        v536 = xmmword_224681C00;
        v537 = (__int128)xmmword_224681C10;
        v568[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v541, 7, 3, 4, (uint64_t)v567, (uint64_t)&v536, (uint64_t)v568, COERCE_DOUBLE(0xDF0000011FLL), xmmword_224681C10);
      }
    }
    v409 = (v469 & 1) == 0 && v407;
    if (v409 && (v403 & 0x40000000) == 0)
    {
      v538 = v533;
      v539 = v534;
      v540 = v535;
      v568[0] = 0x16160D0D16160D0DLL;
      v537 = (__int128)v532;
      v536 = v531;
      v567[0] = xmmword_224681C20;
      v567[1] = xmmword_224681C30;
      v566 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v536, 7, 3, 4, (uint64_t)v568, (uint64_t)v567, (uint64_t)&v566, COERCE_DOUBLE(0xDF0000011FLL), xmmword_224681C30);
    }
  }
  v501 = v429;
  *(_QWORD *)&v502 = v218;
  *(_QWORD *)&v561 = v475;
  *((_QWORD *)&v561 + 1) = v473;
  *(_QWORD *)&v562 = v465;
  v510 = v480;
  v509 = v479;
  v508 = v478;
  v506 = v476;
  v507 = v477;
  return sub_223E066DC((unsigned __int8 ***)&v501, &v561, &v506);
}

unint64_t sub_223E066DC(unsigned __int8 ***a1, _QWORD *a2, __int128 *a3)
{
  unsigned __int8 **v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  _BYTE **v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  _BYTE **v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  _BYTE **v40;
  unint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  _BYTE **v50;
  unint64_t v51;
  uint64_t v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  _BYTE **v59;
  unint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  __int128 v84;
  __int128 v85;
  _BOOL4 v86;
  _BOOL4 v87;
  _BOOL4 v88;
  _BOOL4 v89;
  _BOOL4 v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  _BOOL4 v105;
  _BOOL4 v106;
  _BOOL4 v107;
  _BOOL4 v108;
  _BOOL4 v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  _BOOL4 v124;
  _BOOL4 v125;
  _BOOL4 v126;
  _BOOL4 v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  _BOOL4 v142;
  _BOOL4 v143;
  _BOOL4 v144;
  _BOOL4 v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  _BOOL4 v160;
  _BOOL4 v161;
  _BOOL4 v162;
  _BOOL4 v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  _BOOL4 v177;
  _BOOL4 v178;
  _BOOL4 v179;
  _BOOL4 v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  int v193;
  uint64_t v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  _BOOL4 v198;
  _BOOL4 v199;
  _BOOL4 v200;
  _BOOL4 v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _BYTE *v205;
  unsigned int v206;
  int v207;
  unint64_t v208;
  uint64_t v209;
  unsigned int v210;
  unint64_t v211;
  uint64_t v212;
  unsigned int v213;
  unint64_t v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  uint64_t v218;
  unint64_t v219;
  unsigned int v220;
  unsigned int v221;
  _BOOL4 v222;
  _BOOL4 v223;
  _BOOL4 v224;
  _BOOL4 v225;
  _BOOL4 v226;
  unsigned __int8 **v227;
  unsigned int v228;
  int v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  unint64_t v245;
  uint64_t v246;
  unsigned int v247;
  int v248;
  unint64_t v249;
  uint64_t v250;
  unsigned int v251;
  unint64_t v252;
  uint64_t v253;
  unsigned int v254;
  unint64_t v255;
  uint64_t v256;
  unsigned int v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  _BOOL4 v280;
  _BOOL4 v281;
  _BOOL4 v282;
  _BOOL4 v283;
  _BOOL4 v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  _BOOL4 v299;
  _BOOL4 v300;
  _BOOL4 v301;
  _BOOL4 v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  int v315;
  _BOOL4 v316;
  _BOOL4 v317;
  _BOOL4 v318;
  _BOOL4 v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  _BOOL4 v336;
  _BOOL4 v337;
  _BOOL4 v338;
  _BOOL4 v339;
  _BOOL4 v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  _BOOL4 v356;
  _BOOL4 v357;
  _BOOL4 v358;
  _BOOL4 v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  int v368;
  unsigned int v369;
  int v370;
  unsigned int v371;
  int v372;
  _BOOL4 v373;
  _BOOL4 v374;
  _BOOL4 v375;
  _BOOL4 v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  int v383;
  unsigned int v384;
  int v385;
  unsigned int v386;
  int v387;
  unsigned int v388;
  int v389;
  unsigned int v390;
  unsigned int v391;
  _BOOL4 v392;
  _BOOL4 v393;
  _BOOL4 v394;
  _BOOL4 v395;
  unint64_t v396;
  uint64_t v397;
  uint64_t v398;
  _BYTE *v399;
  unsigned int v400;
  int v401;
  unint64_t v402;
  uint64_t v403;
  unsigned int v404;
  unint64_t v405;
  uint64_t v406;
  unsigned int v407;
  unint64_t v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  uint64_t v412;
  unint64_t v413;
  unsigned int v414;
  unsigned int v415;
  _BOOL4 v416;
  _BOOL4 v417;
  _BOOL4 v418;
  _BOOL4 v419;
  _BOOL4 v420;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  __int128 v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned __int8 **v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  uint64_t v474;
  _BYTE **v475;
  _QWORD *v476;
  unsigned int v477;
  unsigned int v478;
  uint64_t v479;
  uint64_t v480;
  _BYTE **v481;
  unsigned int v482;
  unsigned int v483;
  uint64_t v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  float32x4_t v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  uint64_t v575;
  _OWORD v576[2];
  _QWORD v577[3];

  v577[1] = *MEMORY[0x24BDAC8D0];
  v4 = a1[2];
  v481 = *a1;
  v5 = *((_DWORD *)v4 + 216);
  v6 = ***a1;
  if (***a1)
  {
    v7 = *((_DWORD *)v4 + 280);
    v8 = *((_DWORD *)v4 + 224);
    v9 = *((_DWORD *)v4 + 288);
    v10 = *((_DWORD *)v4 + 232);
    v11 = *a2;
    v476 = a2;
    v465 = v9;
    if ((v9 & 0x40000000) == 0)
    {
LABEL_3:
      v474 = v11;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      goto LABEL_91;
    }
  }
  else
  {
    if ((v5 & 0x20000000) != 0)
      v5 *= 4;
    v17 = *((_DWORD *)v4 + 280);
    if ((v17 & 0x20000000) != 0)
      v7 = 4 * v17;
    else
      v7 = *((_DWORD *)v4 + 280);
    v18 = *((_DWORD *)v4 + 224);
    if ((v18 & 0x20000000) != 0)
      v8 = 4 * v18;
    else
      v8 = *((_DWORD *)v4 + 224);
    v19 = *((_DWORD *)v4 + 288);
    if ((v19 & 0x20000000) != 0)
      v9 = 4 * v19;
    else
      v9 = *((_DWORD *)v4 + 288);
    v20 = *((_DWORD *)v4 + 232);
    if ((v20 & 0x10000000) != 0)
      v21 = 0x40000000;
    else
      v21 = 0x80000000;
    if ((v20 & 0x20000000) != 0)
      v10 = v21;
    else
      v10 = v20 & 0xCFFFFFFF;
    v11 = *a2;
    v476 = a2;
    v465 = v9;
    if ((v9 & 0x40000000) == 0)
      goto LABEL_3;
  }
  v478 = v7;
  v22 = (_BYTE **)a2[2];
  v23 = *(unsigned int *)(a2[1] + 16);
  if ((v23 & 0x80000000) != 0)
  {
    v25 = v11 + 280;
  }
  else
  {
    v24 = *(_QWORD *)(v11 + 2328);
    if (v23 >= (*(_QWORD *)(v11 + 2336) - v24) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v24 = *(_QWORD *)(v11 + 2328);
      v9 = v465;
    }
    v25 = v24 + (v23 << 11);
  }
  v26 = *(_DWORD *)(v25 + 892);
  v27 = v26 & 0xCFFFFFFF;
  if ((v26 & 0x10000000) != 0)
    v28 = 0x40000000;
  else
    v28 = 0x80000000;
  if ((v26 & 0x20000000) != 0)
    v27 = v28;
  if (**v22)
    v29 = v26;
  else
    v29 = v27;
  v30 = *v476;
  v31 = (_BYTE **)v476[2];
  v32 = *(unsigned int *)(v476[1] + 16);
  if ((v32 & 0x80000000) != 0)
  {
    v34 = v30 + 280;
  }
  else
  {
    v33 = *(_QWORD *)(v30 + 2328);
    if (v32 >= (*(_QWORD *)(v30 + 2336) - v33) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v33 = *(_QWORD *)(v30 + 2328);
      v9 = v465;
    }
    v34 = v33 + (v32 << 11);
  }
  v35 = *(_DWORD *)(v34 + 1148);
  v36 = v35 & 0xCFFFFFFF;
  if ((v35 & 0x10000000) != 0)
    v37 = 0x40000000;
  else
    v37 = 0x80000000;
  if ((v35 & 0x20000000) != 0)
    v36 = v37;
  if (**v31)
    v38 = v35;
  else
    v38 = v36;
  v39 = *v476;
  v40 = (_BYTE **)v476[2];
  v41 = *(unsigned int *)(v476[1] + 16);
  if ((v41 & 0x80000000) != 0)
  {
    v44 = v39 + 280;
  }
  else
  {
    v42 = *(_QWORD *)(v39 + 2328);
    if (v41 >= (*(_QWORD *)(v39 + 2336) - v42) >> 11)
    {
      v43 = v38;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v42 = *(_QWORD *)(v39 + 2328);
      v9 = v465;
      v38 = v43;
    }
    v44 = v42 + (v41 << 11);
  }
  v45 = *(_DWORD *)(v44 + 924);
  v46 = v45 & 0xCFFFFFFF;
  if ((v45 & 0x10000000) != 0)
    v47 = 0x40000000;
  else
    v47 = 0x80000000;
  if ((v45 & 0x20000000) != 0)
    v46 = v47;
  if (**v40)
    v48 = v45;
  else
    v48 = v46;
  v49 = *v476;
  v50 = (_BYTE **)v476[2];
  v51 = *(unsigned int *)(v476[1] + 16);
  if ((v51 & 0x80000000) != 0)
  {
    v54 = v10;
    v55 = v8;
    v56 = v29;
    v57 = *(_DWORD *)(v49 + 1460);
    if (**v50)
      goto LABEL_69;
  }
  else
  {
    v52 = *(_QWORD *)(v49 + 2328);
    if (v51 >= (*(_QWORD *)(v49 + 2336) - v52) >> 11)
    {
      v53 = v38;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_1175;
      }
      v52 = *(_QWORD *)(v49 + 2328);
      v9 = v465;
      v38 = v53;
    }
    v54 = v10;
    v55 = v8;
    v56 = v29;
    v57 = *(_DWORD *)(v52 + (v51 << 11) + 1180);
    if (**v50)
    {
LABEL_69:
      v58 = *v476;
      v59 = (_BYTE **)v476[2];
      v60 = *(unsigned int *)(v476[1] + 16);
      if ((v60 & 0x80000000) == 0)
        goto LABEL_70;
LABEL_82:
      v63 = v58 + 280;
      goto LABEL_83;
    }
  }
  if ((v57 & 0x10000000) != 0)
    v64 = 0x40000000;
  else
    v64 = 0x80000000;
  if ((v57 & 0x20000000) != 0)
    v57 = v64;
  else
    v57 &= 0xCFFFFFFF;
  v58 = *v476;
  v59 = (_BYTE **)v476[2];
  v60 = *(unsigned int *)(v476[1] + 16);
  if ((v60 & 0x80000000) != 0)
    goto LABEL_82;
LABEL_70:
  v61 = *(_QWORD *)(v58 + 2328);
  if (v60 >= (*(_QWORD *)(v58 + 2336) - v61) >> 11)
  {
    v482 = v48;
    v62 = v38;
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      v61 = *(_QWORD *)(v58 + 2328);
      v9 = v465;
      v38 = v62;
      v48 = v482;
      goto LABEL_73;
    }
LABEL_1175:
    abort();
  }
LABEL_73:
  v63 = v61 + (v60 << 11);
LABEL_83:
  v16 = (v56 >> 30) & 1;
  v15 = (v38 >> 30) & 1;
  v14 = (v48 >> 30) & 1;
  v13 = (v57 >> 30) & 1;
  v65 = *(_DWORD *)(v63 + 956);
  if (!**v59)
  {
    if ((v65 & 0x10000000) != 0)
      v66 = 0x40000000;
    else
      v66 = 0x80000000;
    if ((v65 & 0x20000000) != 0)
      v65 = v66;
    else
      v65 &= 0xCFFFFFFF;
  }
  v12 = (v65 >> 30) & 1;
  v4 = a1[2];
  a2 = v476;
  v474 = *v476;
  v481 = *a1;
  v6 = ***a1;
  v7 = v478;
  v8 = v55;
  v10 = v54;
LABEL_91:
  v443 = v5 >> 30;
  v479 = a2[1];
  v470 = (unsigned __int8 **)a2[2];
  v492 = a3[2];
  v493 = a3[3];
  v494 = a3[4];
  v490 = *a3;
  v491 = a3[1];
  v67 = *((_DWORD *)v4 + 217);
  if (v6)
  {
    v68 = *((_DWORD *)v4 + 281);
    v69 = *((_DWORD *)v4 + 225);
    v461 = *((_DWORD *)v4 + 289);
    v70 = *((_DWORD *)v4 + 233);
  }
  else
  {
    if ((v67 & 0x10000000) != 0)
      v71 = 0x40000000;
    else
      v71 = 0x80000000;
    if ((v67 & 0x20000000) != 0)
      v67 = v71;
    else
      v67 &= 0xCFFFFFFF;
    v72 = *((_DWORD *)v4 + 281);
    if ((v72 & 0x10000000) != 0)
      v73 = 0x40000000;
    else
      v73 = 0x80000000;
    if ((v72 & 0x20000000) != 0)
      v68 = v73;
    else
      v68 = v72 & 0xCFFFFFFF;
    v74 = *((_DWORD *)v4 + 225);
    if ((v74 & 0x10000000) != 0)
      v75 = 0x40000000;
    else
      v75 = 0x80000000;
    if ((v74 & 0x20000000) != 0)
      v69 = v75;
    else
      v69 = v74 & 0xCFFFFFFF;
    v76 = *((_DWORD *)v4 + 289);
    if ((v76 & 0x10000000) != 0)
      v77 = 0x40000000;
    else
      v77 = 0x80000000;
    if ((v76 & 0x20000000) != 0)
      v78 = v77;
    else
      v78 = v76 & 0xCFFFFFFF;
    v461 = v78;
    v79 = *((_DWORD *)v4 + 233);
    if ((v79 & 0x10000000) != 0)
      v70 = 0x40000000;
    else
      v70 = 0x80000000;
    if ((v79 & 0x20000000) == 0)
      v70 = v79 & 0xCFFFFFFF;
  }
  v80 = v8 >> 30;
  v81 = v7 >> 30;
  v82 = v10 >> 30;
  v428 = v67 >> 30;
  v453 = v69 >> 30;
  v457 = v68 >> 30;
  v434 = v70 >> 30;
  v502 = a3[2];
  v503 = a3[3];
  v504 = a3[4];
  v500 = *a3;
  v501 = a3[1];
  if ((v9 & 0x40000000) != 0)
  {
    v83 = v16;
    v84 = a3[3];
    v517 = a3[2];
    v518 = v84;
    v519 = a3[4];
    v85 = *a3;
    v516 = a3[1];
    v515 = v85;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224681C40;
    v511 = (__int128)xmmword_224681C50;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 0, 4, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16000000120), xmmword_224681C50);
    if (!v13)
    {
      v512 = v502;
      v513 = v503;
      v514 = v504;
      v511 = v501;
      v510 = v500;
      *(_QWORD *)&v565 = 0x4040D0D04040D0DLL;
      v570 = xmmword_224681C60;
      v571 = (__int128)xmmword_224681C70;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 0, 4, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16000000120), xmmword_224681C70);
      v86 = (v14 | v80 & 1) == 0;
      if (!(v15 | v81 & 1))
      {
        v572 = v502;
        v573 = v503;
        v574 = v504;
        v570 = v500;
        v571 = v501;
        *(_QWORD *)&v560 = 0x40404040D0D0D0DLL;
        v565 = xmmword_224681C80;
        v566 = (__int128)xmmword_224681C90;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 0, 4, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16000000120), xmmword_224681C90);
        v87 = (v443 & 1) == 0 && v86;
        if (!v83 && v87)
        {
          v567 = v502;
          v568 = v503;
          v569 = v504;
          v566 = v501;
          v565 = v500;
          *(_QWORD *)&v555 = 0x4040D0D04040D0DLL;
          v560 = xmmword_224681CA0;
          v561 = (__int128)xmmword_224681CB0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 0, 4, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xE000000120), xmmword_224681CB0);
        }
      }
      if (v12)
        v88 = 0;
      else
        v88 = v86;
      if (v88 && (v82 & 1) == 0)
      {
        v562 = v502;
        v563 = v503;
        v564 = v504;
        *(_QWORD *)&v550 = 0x40404040D0D0D0DLL;
        v561 = v501;
        v560 = v500;
        v555 = xmmword_224681CC0;
        v556 = (__int128)xmmword_224681CD0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 0, 4, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xE000000120), xmmword_224681CD0);
      }
    }
    if (((v81 | v457) & 1) == 0)
    {
      v557 = v502;
      v558 = v503;
      v559 = v504;
      v556 = v501;
      v555 = v500;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_224681CE0;
      v551 = (__int128)xmmword_224681CF0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 0, 4, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16000000120), xmmword_224681CF0);
      v89 = (v428 & 1) == 0 && ((v80 | v453) & 1) == 0;
      if ((v443 & 1) == 0 && v89)
      {
        v552 = v502;
        v553 = v503;
        v554 = v504;
        v551 = v501;
        v550 = v500;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224681D00;
        v546 = (__int128)xmmword_224681D10;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 0, 4, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xE000000120), xmmword_224681D10);
      }
    }
    v90 = (v82 & 1) == 0 && ((v80 | v453) & 1) == 0;
    v9 = v465;
    if (v90 && (v434 & 1) == 0)
    {
      v547 = v502;
      v548 = v503;
      v549 = v504;
      v546 = v501;
      v545 = v500;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224681D20;
      v541 = xmmword_224681D30;
      *(_QWORD *)&v530 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 0, 4, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xE000000120), xmmword_224681D30);
      v9 = v465;
    }
  }
  v91 = *((_DWORD *)v4 + 218);
  if (**v481)
  {
    v92 = *((_DWORD *)v4 + 282);
    v93 = *((_DWORD *)v4 + 226);
    v94 = *((_DWORD *)v4 + 290);
    v95 = *((_DWORD *)v4 + 234);
  }
  else
  {
    if ((v91 & 0x10000000) != 0)
      v96 = 0x40000000;
    else
      v96 = 0x80000000;
    if ((v91 & 0x20000000) != 0)
      v91 = v96;
    else
      v91 &= 0xCFFFFFFF;
    v97 = *((_DWORD *)v4 + 282);
    if ((v97 & 0x10000000) != 0)
      v98 = 0x40000000;
    else
      v98 = 0x80000000;
    if ((v97 & 0x20000000) != 0)
      v92 = v98;
    else
      v92 = v97 & 0xCFFFFFFF;
    v99 = *((_DWORD *)v4 + 226);
    if ((v99 & 0x10000000) != 0)
      v100 = 0x40000000;
    else
      v100 = 0x80000000;
    if ((v99 & 0x20000000) != 0)
      v93 = v100;
    else
      v93 = v99 & 0xCFFFFFFF;
    v101 = *((_DWORD *)v4 + 290);
    if ((v101 & 0x10000000) != 0)
      v102 = 0x40000000;
    else
      v102 = 0x80000000;
    if ((v101 & 0x20000000) != 0)
      v94 = v102;
    else
      v94 = v101 & 0xCFFFFFFF;
    v103 = *((_DWORD *)v4 + 234);
    if ((v103 & 0x10000000) != 0)
      v95 = 0x40000000;
    else
      v95 = 0x80000000;
    if ((v103 & 0x20000000) == 0)
      v95 = v103 & 0xCFFFFFFF;
  }
  v448 = v93 >> 30;
  v104 = v91 >> 30;
  v466 = v92 >> 30;
  v431 = v95 >> 30;
  if ((v461 & 0x40000000) != 0)
  {
    v105 = (v9 & 0x40000000) == 0;
    v517 = v492;
    v518 = v493;
    v519 = v494;
    v516 = v491;
    v515 = v490;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224681D40;
    v511 = (__int128)xmmword_224681D50;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 1, 4, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16100000121), xmmword_224681D50);
    if (v105)
    {
      v512 = v492;
      v513 = v493;
      v514 = v494;
      v511 = v491;
      v510 = v490;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224681D60;
      v571 = (__int128)xmmword_224681D70;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 1, 4, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16100000121), xmmword_224681D70);
      if (((v81 | v457) & 1) == 0)
      {
        v572 = v492;
        v573 = v493;
        v574 = v494;
        v570 = v490;
        v571 = v491;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224681D80;
        v566 = (__int128)xmmword_224681D90;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 1, 4, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16100000121), xmmword_224681D90);
        v106 = (v428 & 1) == 0 && ((v80 | v453) & 1) == 0;
        if ((v443 & 1) == 0 && v106)
        {
          v567 = v492;
          v568 = v493;
          v569 = v494;
          v566 = v491;
          v565 = v490;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_224681DA0;
          v561 = (__int128)xmmword_224681DB0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 1, 4, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xE100000121), xmmword_224681DB0);
        }
      }
      v107 = (v82 & 1) == 0 && ((v80 | v453) & 1) == 0;
      if (v107 && (v434 & 1) == 0)
      {
        v562 = v492;
        v563 = v493;
        v564 = v494;
        v561 = v491;
        v560 = v490;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224681DC0;
        v556 = (__int128)xmmword_224681DD0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 1, 4, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xE100000121), xmmword_224681DD0);
      }
    }
    if (((v457 | v466) & 1) == 0)
    {
      v557 = v492;
      v558 = v493;
      v559 = v494;
      v556 = v491;
      v555 = v490;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_224681DE0;
      v551 = (__int128)xmmword_224681DF0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 1, 4, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16100000121), xmmword_224681DF0);
      v108 = (v104 & 1) == 0 && ((v453 | v448) & 1) == 0;
      if ((v428 & 1) == 0 && v108)
      {
        v552 = v492;
        v553 = v493;
        v554 = v494;
        v551 = v491;
        v550 = v490;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224681E00;
        v546 = (__int128)xmmword_224681E10;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 1, 4, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xE100000121), xmmword_224681E10);
      }
    }
    v109 = (v434 & 1) == 0 && ((v453 | v448) & 1) == 0;
    if (v109 && (v431 & 1) == 0)
    {
      v547 = v492;
      v548 = v493;
      v549 = v494;
      v546 = v491;
      v545 = v490;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224681E20;
      v541 = xmmword_224681E30;
      *(_QWORD *)&v530 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 1, 4, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xE100000121), xmmword_224681E30);
    }
  }
  v110 = *((_DWORD *)v4 + 219);
  if (**v481)
  {
    v111 = *((_DWORD *)v4 + 283);
    v112 = *((_DWORD *)v4 + 227);
    v113 = *((_DWORD *)v4 + 291);
    v114 = *((_DWORD *)v4 + 235);
  }
  else
  {
    if ((v110 & 0x10000000) != 0)
      v115 = 0x40000000;
    else
      v115 = 0x80000000;
    if ((v110 & 0x20000000) != 0)
      v110 = v115;
    else
      v110 &= 0xCFFFFFFF;
    v116 = *((_DWORD *)v4 + 283);
    if ((v116 & 0x10000000) != 0)
      v117 = 0x40000000;
    else
      v117 = 0x80000000;
    if ((v116 & 0x20000000) != 0)
      v111 = v117;
    else
      v111 = v116 & 0xCFFFFFFF;
    v118 = *((_DWORD *)v4 + 227);
    if ((v118 & 0x10000000) != 0)
      v119 = 0x40000000;
    else
      v119 = 0x80000000;
    if ((v118 & 0x20000000) != 0)
      v112 = v119;
    else
      v112 = v118 & 0xCFFFFFFF;
    v120 = *((_DWORD *)v4 + 291);
    if ((v120 & 0x10000000) != 0)
      v121 = 0x40000000;
    else
      v121 = 0x80000000;
    if ((v120 & 0x20000000) != 0)
      v113 = v121;
    else
      v113 = v120 & 0xCFFFFFFF;
    v122 = *((_DWORD *)v4 + 235);
    if ((v122 & 0x10000000) != 0)
      v114 = 0x40000000;
    else
      v114 = 0x80000000;
    if ((v122 & 0x20000000) == 0)
      v114 = v122 & 0xCFFFFFFF;
  }
  v427 = v110 >> 30;
  v440 = v112 >> 30;
  v444 = v111 >> 30;
  v123 = v114 >> 30;
  if ((v94 & 0x40000000) != 0)
  {
    v517 = v492;
    v518 = v493;
    v519 = v494;
    v516 = v491;
    v515 = v490;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224681E40;
    v511 = (__int128)xmmword_224681E50;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 2, 4, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16200000122), xmmword_224681E50);
    if ((v461 & 0x40000000) == 0)
    {
      v512 = v492;
      v513 = v493;
      v514 = v494;
      v511 = v491;
      v510 = v490;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224681E60;
      v571 = (__int128)xmmword_224681E70;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 2, 4, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16200000122), xmmword_224681E70);
      if (((v457 | v466) & 1) == 0)
      {
        v572 = v492;
        v573 = v493;
        v574 = v494;
        v570 = v490;
        v571 = v491;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224681E80;
        v566 = (__int128)xmmword_224681E90;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 2, 4, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16200000122), xmmword_224681E90);
        v124 = (v104 & 1) == 0 && ((v453 | v448) & 1) == 0;
        if ((v428 & 1) == 0 && v124)
        {
          v567 = v492;
          v568 = v493;
          v569 = v494;
          v566 = v491;
          v565 = v490;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_224681EA0;
          v561 = (__int128)xmmword_224681EB0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 2, 4, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xE200000122), xmmword_224681EB0);
        }
      }
      v125 = (v434 & 1) == 0 && ((v453 | v448) & 1) == 0;
      if (v125 && (v431 & 1) == 0)
      {
        v562 = v492;
        v563 = v493;
        v564 = v494;
        v561 = v491;
        v560 = v490;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224681EC0;
        v556 = (__int128)xmmword_224681ED0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 2, 4, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xE200000122), xmmword_224681ED0);
      }
    }
    if (((v466 | v444) & 1) == 0)
    {
      v557 = v492;
      v558 = v493;
      v559 = v494;
      v556 = v491;
      v555 = v490;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_224681EE0;
      v551 = (__int128)xmmword_224681EF0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 2, 4, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16200000122), xmmword_224681EF0);
      v126 = (v427 & 1) == 0 && ((v448 | v440) & 1) == 0;
      if ((v104 & 1) == 0 && v126)
      {
        v552 = v492;
        v553 = v493;
        v554 = v494;
        v551 = v491;
        v550 = v490;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224681F00;
        v546 = (__int128)xmmword_224681F10;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 2, 4, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xE200000122), xmmword_224681F10);
      }
    }
    v127 = (v431 & 1) == 0 && ((v448 | v440) & 1) == 0;
    if (v127 && (v123 & 1) == 0)
    {
      v547 = v492;
      v548 = v493;
      v549 = v494;
      v546 = v491;
      v545 = v490;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224681F20;
      v541 = xmmword_224681F30;
      *(_QWORD *)&v530 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 2, 4, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xE200000122), xmmword_224681F30);
    }
  }
  v128 = *((_DWORD *)v4 + 220);
  if (**v481)
  {
    v129 = *((_DWORD *)v4 + 284);
    v130 = *((_DWORD *)v4 + 228);
    v131 = *((_DWORD *)v4 + 292);
    v132 = *((_DWORD *)v4 + 236);
  }
  else
  {
    if ((v128 & 0x10000000) != 0)
      v133 = 0x40000000;
    else
      v133 = 0x80000000;
    if ((v128 & 0x20000000) != 0)
      v128 = v133;
    else
      v128 &= 0xCFFFFFFF;
    v134 = *((_DWORD *)v4 + 284);
    if ((v134 & 0x10000000) != 0)
      v135 = 0x40000000;
    else
      v135 = 0x80000000;
    if ((v134 & 0x20000000) != 0)
      v129 = v135;
    else
      v129 = v134 & 0xCFFFFFFF;
    v136 = *((_DWORD *)v4 + 228);
    if ((v136 & 0x10000000) != 0)
      v137 = 0x40000000;
    else
      v137 = 0x80000000;
    if ((v136 & 0x20000000) != 0)
      v130 = v137;
    else
      v130 = v136 & 0xCFFFFFFF;
    v138 = *((_DWORD *)v4 + 292);
    if ((v138 & 0x10000000) != 0)
      v139 = 0x40000000;
    else
      v139 = 0x80000000;
    if ((v138 & 0x20000000) != 0)
      v131 = v139;
    else
      v131 = v138 & 0xCFFFFFFF;
    v140 = *((_DWORD *)v4 + 236);
    if ((v140 & 0x10000000) != 0)
      v132 = 0x40000000;
    else
      v132 = 0x80000000;
    if ((v140 & 0x20000000) == 0)
      v132 = v140 & 0xCFFFFFFF;
  }
  v141 = v130 >> 30;
  v429 = v128 >> 30;
  v462 = v129 >> 30;
  v435 = v132 >> 30;
  if ((v113 & 0x40000000) != 0)
  {
    v517 = v492;
    v518 = v493;
    v519 = v494;
    v516 = v491;
    v515 = v490;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224681F40;
    v511 = (__int128)xmmword_224681F50;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 3, 4, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16300000123), xmmword_224681F50);
    if ((v94 & 0x40000000) == 0)
    {
      v512 = v492;
      v513 = v493;
      v514 = v494;
      v511 = v491;
      v510 = v490;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224681F60;
      v571 = (__int128)xmmword_224681F70;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 3, 4, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16300000123), xmmword_224681F70);
      if (((v466 | v444) & 1) == 0)
      {
        v572 = v492;
        v573 = v493;
        v574 = v494;
        v570 = v490;
        v571 = v491;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224681F80;
        v566 = (__int128)xmmword_224681F90;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 3, 4, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16300000123), xmmword_224681F90);
        v142 = (v427 & 1) == 0 && ((v448 | v440) & 1) == 0;
        if ((v104 & 1) == 0 && v142)
        {
          v567 = v492;
          v568 = v493;
          v569 = v494;
          v566 = v491;
          v565 = v490;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_224681FA0;
          v561 = (__int128)xmmword_224681FB0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 3, 4, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xE300000123), xmmword_224681FB0);
        }
      }
      v143 = (v431 & 1) == 0 && ((v448 | v440) & 1) == 0;
      if (v143 && (v123 & 1) == 0)
      {
        v562 = v492;
        v563 = v493;
        v564 = v494;
        v561 = v491;
        v560 = v490;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224681FC0;
        v556 = (__int128)xmmword_224681FD0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 3, 4, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xE300000123), xmmword_224681FD0);
      }
    }
    if (((v444 | v462) & 1) == 0)
    {
      v557 = v492;
      v558 = v493;
      v559 = v494;
      v556 = v491;
      v555 = v490;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_224681FE0;
      v551 = (__int128)xmmword_224681FF0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 3, 4, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16300000123), xmmword_224681FF0);
      v144 = (v429 & 1) == 0 && ((v440 | v141) & 1) == 0;
      if ((v427 & 1) == 0 && v144)
      {
        v552 = v492;
        v553 = v493;
        v554 = v494;
        v551 = v491;
        v550 = v490;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224682000;
        v546 = (__int128)xmmword_224682010;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 3, 4, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xE300000123), xmmword_224682010);
      }
    }
    v145 = (v123 & 1) == 0 && ((v440 | v141) & 1) == 0;
    if (v145 && (v435 & 1) == 0)
    {
      v547 = v492;
      v548 = v493;
      v549 = v494;
      v546 = v491;
      v545 = v490;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224682020;
      v541 = xmmword_224682030;
      *(_QWORD *)&v530 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 3, 4, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xE300000123), xmmword_224682030);
    }
  }
  v146 = *((_DWORD *)v4 + 221);
  if (**v481)
  {
    v147 = *((_DWORD *)v4 + 285);
    v148 = *((_DWORD *)v4 + 229);
    v149 = *((_DWORD *)v4 + 293);
    v150 = *((_DWORD *)v4 + 237);
  }
  else
  {
    if ((v146 & 0x10000000) != 0)
      v151 = 0x40000000;
    else
      v151 = 0x80000000;
    if ((v146 & 0x20000000) != 0)
      v146 = v151;
    else
      v146 &= 0xCFFFFFFF;
    v152 = *((_DWORD *)v4 + 285);
    if ((v152 & 0x10000000) != 0)
      v153 = 0x40000000;
    else
      v153 = 0x80000000;
    if ((v152 & 0x20000000) != 0)
      v147 = v153;
    else
      v147 = v152 & 0xCFFFFFFF;
    v154 = *((_DWORD *)v4 + 229);
    if ((v154 & 0x10000000) != 0)
      v155 = 0x40000000;
    else
      v155 = 0x80000000;
    if ((v154 & 0x20000000) != 0)
      v148 = v155;
    else
      v148 = v154 & 0xCFFFFFFF;
    v156 = *((_DWORD *)v4 + 293);
    if ((v156 & 0x10000000) != 0)
      v157 = 0x40000000;
    else
      v157 = 0x80000000;
    if ((v156 & 0x20000000) != 0)
      v149 = v157;
    else
      v149 = v156 & 0xCFFFFFFF;
    v158 = *((_DWORD *)v4 + 237);
    if ((v158 & 0x10000000) != 0)
      v150 = 0x40000000;
    else
      v150 = 0x80000000;
    if ((v158 & 0x20000000) == 0)
      v150 = v158 & 0xCFFFFFFF;
  }
  v159 = v148 >> 30;
  v426 = v146 >> 30;
  v467 = v147 >> 30;
  v432 = v150 >> 30;
  if ((v131 & 0x40000000) != 0)
  {
    v517 = v492;
    v518 = v493;
    v519 = v494;
    v516 = v491;
    v515 = v490;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224682040;
    v511 = (__int128)xmmword_224682050;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 4, 4, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16400000124), xmmword_224682050);
    if ((v113 & 0x40000000) == 0)
    {
      v512 = v492;
      v513 = v493;
      v514 = v494;
      v511 = v491;
      v510 = v490;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224682060;
      v571 = (__int128)xmmword_224682070;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 4, 4, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16400000124), xmmword_224682070);
      if (((v444 | v462) & 1) == 0)
      {
        v572 = v492;
        v573 = v493;
        v574 = v494;
        v570 = v490;
        v571 = v491;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224682080;
        v566 = (__int128)xmmword_224682090;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 4, 4, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16400000124), xmmword_224682090);
        v160 = (v429 & 1) == 0 && ((v440 | v141) & 1) == 0;
        if ((v427 & 1) == 0 && v160)
        {
          v567 = v492;
          v568 = v493;
          v569 = v494;
          v566 = v491;
          v565 = v490;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_2246820A0;
          v561 = (__int128)xmmword_2246820B0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 4, 4, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xE400000124), xmmword_2246820B0);
        }
      }
      v161 = (v123 & 1) == 0 && ((v440 | v141) & 1) == 0;
      if (v161 && (v435 & 1) == 0)
      {
        v562 = v492;
        v563 = v493;
        v564 = v494;
        v561 = v491;
        v560 = v490;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_2246820C0;
        v556 = (__int128)xmmword_2246820D0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 4, 4, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xE400000124), xmmword_2246820D0);
      }
    }
    if (((v462 | v467) & 1) == 0)
    {
      v557 = v492;
      v558 = v493;
      v559 = v494;
      v556 = v491;
      v555 = v490;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_2246820E0;
      v551 = (__int128)xmmword_2246820F0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 4, 4, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16400000124), xmmword_2246820F0);
      v162 = (v426 & 1) == 0 && ((v141 | v159) & 1) == 0;
      if ((v429 & 1) == 0 && v162)
      {
        v552 = v492;
        v553 = v493;
        v554 = v494;
        v551 = v491;
        v550 = v490;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224682100;
        v546 = (__int128)xmmword_224682110;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 4, 4, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xE400000124), xmmword_224682110);
      }
    }
    v163 = (v435 & 1) == 0 && ((v141 | v159) & 1) == 0;
    if (v163 && (v432 & 1) == 0)
    {
      v547 = v492;
      v548 = v493;
      v549 = v494;
      v546 = v491;
      v545 = v490;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224682120;
      v541 = xmmword_224682130;
      *(_QWORD *)&v530 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 4, 4, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xE400000124), xmmword_224682130);
    }
  }
  v164 = *((_DWORD *)v4 + 222);
  if (**v481)
  {
    v165 = *((_DWORD *)v4 + 286);
    v166 = *((_DWORD *)v4 + 230);
    v458 = *((_DWORD *)v4 + 294);
    v167 = *((_DWORD *)v4 + 238);
  }
  else
  {
    if ((v164 & 0x10000000) != 0)
      v168 = 0x40000000;
    else
      v168 = 0x80000000;
    if ((v164 & 0x20000000) != 0)
      v164 = v168;
    else
      v164 &= 0xCFFFFFFF;
    v169 = *((_DWORD *)v4 + 286);
    if ((v169 & 0x10000000) != 0)
      v170 = 0x40000000;
    else
      v170 = 0x80000000;
    if ((v169 & 0x20000000) != 0)
      v165 = v170;
    else
      v165 = v169 & 0xCFFFFFFF;
    v171 = *((_DWORD *)v4 + 230);
    if ((v171 & 0x10000000) != 0)
      v172 = 0x40000000;
    else
      v172 = 0x80000000;
    if ((v171 & 0x20000000) != 0)
      v166 = v172;
    else
      v166 = v171 & 0xCFFFFFFF;
    v173 = *((_DWORD *)v4 + 294);
    if ((v173 & 0x10000000) != 0)
      v174 = 0x40000000;
    else
      v174 = 0x80000000;
    if ((v173 & 0x20000000) != 0)
      v175 = v174;
    else
      v175 = v173 & 0xCFFFFFFF;
    v458 = v175;
    v176 = *((_DWORD *)v4 + 238);
    if ((v176 & 0x10000000) != 0)
      v167 = 0x40000000;
    else
      v167 = 0x80000000;
    if ((v176 & 0x20000000) == 0)
      v167 = v176 & 0xCFFFFFFF;
  }
  v441 = v164 >> 30;
  v449 = v166 >> 30;
  v454 = v165 >> 30;
  v445 = v167 >> 30;
  v532 = v492;
  v533 = v493;
  v534 = v494;
  v531 = v491;
  v530 = v490;
  if ((v149 & 0x40000000) != 0)
  {
    v517 = v492;
    v518 = v493;
    v519 = v494;
    v516 = v491;
    v515 = v490;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224682140;
    v511 = (__int128)xmmword_224682150;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 5, 4, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16500000125), xmmword_224682150);
    if ((v131 & 0x40000000) == 0)
    {
      v512 = v492;
      v513 = v493;
      v514 = v494;
      v511 = v491;
      v510 = v490;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224682160;
      v571 = (__int128)xmmword_224682170;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 5, 4, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16500000125), xmmword_224682170);
      if (((v462 | v467) & 1) == 0)
      {
        v572 = v492;
        v573 = v493;
        v574 = v494;
        v570 = v490;
        v571 = v491;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224682180;
        v566 = (__int128)xmmword_224682190;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 5, 4, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16500000125), xmmword_224682190);
        v177 = (v426 & 1) == 0 && ((v141 | v159) & 1) == 0;
        if ((v429 & 1) == 0 && v177)
        {
          v567 = v492;
          v568 = v493;
          v569 = v494;
          v566 = v491;
          v565 = v490;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_2246821A0;
          v561 = (__int128)xmmword_2246821B0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 5, 4, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xE500000125), xmmword_2246821B0);
        }
      }
      v178 = (v435 & 1) == 0 && ((v141 | v159) & 1) == 0;
      if (v178 && (v432 & 1) == 0)
      {
        v562 = v532;
        v563 = v533;
        v564 = v534;
        v561 = v531;
        v560 = v530;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_2246821C0;
        v556 = (__int128)xmmword_2246821D0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 5, 4, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xE500000125), xmmword_2246821D0);
      }
    }
    if (((v467 | v454) & 1) == 0)
    {
      v557 = v532;
      v558 = v533;
      v559 = v534;
      v556 = v531;
      v555 = v530;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_2246821E0;
      v551 = (__int128)xmmword_2246821F0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 5, 4, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16500000125), xmmword_2246821F0);
      v179 = (v441 & 1) == 0 && ((v159 | v449) & 1) == 0;
      if ((v426 & 1) == 0 && v179)
      {
        v552 = v532;
        v553 = v533;
        v554 = v534;
        v551 = v531;
        v550 = v530;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224682200;
        v546 = (__int128)xmmword_224682210;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 5, 4, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xE500000125), xmmword_224682210);
      }
    }
    v180 = (v432 & 1) == 0 && ((v159 | v449) & 1) == 0;
    if (v180 && (v445 & 1) == 0)
    {
      v547 = v532;
      v548 = v533;
      v549 = v534;
      v546 = v531;
      v545 = v530;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224682220;
      v541 = xmmword_224682230;
      *(_QWORD *)&v525 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 5, 4, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v525, COERCE_DOUBLE(0xE500000125), xmmword_224682230);
    }
  }
  v527 = v492;
  v528 = v493;
  v529 = v494;
  v526 = v491;
  v525 = v490;
  v181 = *((_DWORD *)v4 + 223);
  if (**v481)
  {
    v182 = *((_DWORD *)v4 + 287);
    v183 = *((_DWORD *)v4 + 231);
    v184 = *((_DWORD *)v4 + 295);
    v185 = *((_DWORD *)v4 + 239);
  }
  else
  {
    if ((v181 & 0x10000000) != 0)
      v186 = 0x40000000;
    else
      v186 = 0x80000000;
    if ((v181 & 0x20000000) != 0)
      v181 = v186;
    else
      v181 &= 0xCFFFFFFF;
    v187 = *((_DWORD *)v4 + 287);
    if ((v187 & 0x10000000) != 0)
      v188 = 0x40000000;
    else
      v188 = 0x80000000;
    if ((v187 & 0x20000000) != 0)
      v182 = v188;
    else
      v182 = v187 & 0xCFFFFFFF;
    v189 = *((_DWORD *)v4 + 231);
    if ((v189 & 0x10000000) != 0)
      v190 = 0x40000000;
    else
      v190 = 0x80000000;
    if ((v189 & 0x20000000) != 0)
      v183 = v190;
    else
      v183 = v189 & 0xCFFFFFFF;
    v191 = *((_DWORD *)v4 + 295);
    if ((v191 & 0x10000000) != 0)
      v192 = 0x40000000;
    else
      v192 = 0x80000000;
    if ((v191 & 0x20000000) != 0)
      v184 = v192;
    else
      v184 = v191 & 0xCFFFFFFF;
    v193 = *((_DWORD *)v4 + 239);
    if ((v193 & 0x10000000) != 0)
      v185 = 0x40000000;
    else
      v185 = 0x80000000;
    if ((v193 & 0x20000000) == 0)
      v185 = v193 & 0xCFFFFFFF;
  }
  v194 = v474;
  v195 = v183 >> 30;
  v483 = v181 >> 30;
  v196 = v182 >> 30;
  v197 = v185 >> 30;
  v537 = v492;
  v538 = v493;
  v539 = v494;
  v536 = v491;
  v535 = v490;
  if ((v458 & 0x40000000) != 0)
  {
    v517 = v492;
    v518 = v493;
    v519 = v494;
    v516 = v491;
    v515 = v490;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224682240;
    v511 = (__int128)xmmword_224682250;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 6, 4, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16600000126), xmmword_224682250);
    if ((v149 & 0x40000000) == 0)
    {
      v512 = v492;
      v513 = v493;
      v514 = v494;
      v511 = v491;
      v510 = v490;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224682260;
      v571 = (__int128)xmmword_224682270;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 6, 4, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16600000126), xmmword_224682270);
      if (((v467 | v454) & 1) == 0)
      {
        v572 = v492;
        v573 = v493;
        v574 = v494;
        v570 = v490;
        v571 = v491;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224682280;
        v566 = (__int128)xmmword_224682290;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 6, 4, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16600000126), xmmword_224682290);
        v198 = (v441 & 1) == 0 && ((v159 | v449) & 1) == 0;
        if ((v426 & 1) == 0 && v198)
        {
          v567 = v492;
          v568 = v493;
          v569 = v494;
          v566 = v491;
          v565 = v490;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_2246822A0;
          v561 = (__int128)xmmword_2246822B0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 6, 4, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xE600000126), xmmword_2246822B0);
        }
      }
      v199 = (v432 & 1) == 0 && ((v159 | v449) & 1) == 0;
      if (v199 && (v445 & 1) == 0)
      {
        v562 = v537;
        v563 = v538;
        v564 = v539;
        v561 = v536;
        v560 = v535;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_2246822C0;
        v556 = (__int128)xmmword_2246822D0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 6, 4, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xE600000126), xmmword_2246822D0);
      }
    }
    if (((v454 | v196) & 1) == 0)
    {
      v557 = v537;
      v558 = v538;
      v559 = v539;
      v556 = v536;
      v555 = v535;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_2246822E0;
      v551 = (__int128)xmmword_2246822F0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 6, 4, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16600000126), xmmword_2246822F0);
      v200 = (v483 & 1) == 0 && ((v449 | v195) & 1) == 0;
      if ((v441 & 1) == 0 && v200)
      {
        v552 = v537;
        v553 = v538;
        v554 = v539;
        v551 = v536;
        v550 = v535;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224682300;
        v546 = (__int128)xmmword_224682310;
        *(_QWORD *)&v520 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 6, 4, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v520, COERCE_DOUBLE(0xE600000126), xmmword_224682310);
      }
    }
    v201 = (v445 & 1) == 0 && ((v449 | v195) & 1) == 0;
    v194 = v474;
    if (v201 && (v197 & 1) == 0)
    {
      v547 = v537;
      v548 = v538;
      v549 = v539;
      v546 = v536;
      v545 = v535;
      *(_QWORD *)&v520 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224682320;
      v541 = xmmword_224682330;
      *(_QWORD *)&v576[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 6, 4, 4, (uint64_t)&v520, (uint64_t)&v540, (uint64_t)v576, COERCE_DOUBLE(0xE600000126), xmmword_224682330);
      v194 = v474;
    }
  }
  v202 = *(unsigned int *)(v479 + 88);
  if ((v202 & 0x80000000) != 0)
  {
    v205 = *v470;
    v206 = *(_DWORD *)(v194 + 1144);
    v207 = **v470;
    if (**v470)
      goto LABEL_509;
  }
  else
  {
    v203 = *(_QWORD *)(v194 + 2328);
    if (v202 >= (*(_QWORD *)(v194 + 2336) - v203) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v194 = v474;
      v203 = *(_QWORD *)(v474 + 2328);
    }
    v204 = v203 + (v202 << 11);
    v205 = *v470;
    v206 = *(_DWORD *)(v204 + 864);
    v207 = **v470;
    if (**v470)
    {
LABEL_509:
      v208 = *(unsigned int *)(v479 + 88);
      if ((v208 & 0x80000000) == 0)
        goto LABEL_510;
LABEL_529:
      v210 = *(_DWORD *)(v194 + 1400);
      if (v207)
        goto LABEL_514;
      goto LABEL_530;
    }
  }
  if ((v206 & 0x10000000) != 0)
    v215 = 0x40000000;
  else
    v215 = 0x80000000;
  if ((v206 & 0x20000000) != 0)
    v206 = v215;
  else
    v206 &= 0xCFFFFFFF;
  v208 = *(unsigned int *)(v479 + 88);
  if ((v208 & 0x80000000) != 0)
    goto LABEL_529;
LABEL_510:
  v209 = *(_QWORD *)(v194 + 2328);
  if (v208 >= (*(_QWORD *)(v194 + 2336) - v209) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v194 = v474;
    v209 = *(_QWORD *)(v474 + 2328);
    v205 = *v470;
    v207 = **v470;
  }
  v210 = *(_DWORD *)(v209 + (v208 << 11) + 1120);
  if (v207)
  {
LABEL_514:
    v211 = *(unsigned int *)(v479 + 88);
    if ((v211 & 0x80000000) == 0)
      goto LABEL_515;
LABEL_537:
    v213 = *(_DWORD *)(v194 + 1176);
    if (v207)
      goto LABEL_519;
    goto LABEL_538;
  }
LABEL_530:
  if ((v210 & 0x10000000) != 0)
    v216 = 0x40000000;
  else
    v216 = 0x80000000;
  if ((v210 & 0x20000000) != 0)
    v210 = v216;
  else
    v210 &= 0xCFFFFFFF;
  v211 = *(unsigned int *)(v479 + 88);
  if ((v211 & 0x80000000) != 0)
    goto LABEL_537;
LABEL_515:
  v212 = *(_QWORD *)(v194 + 2328);
  if (v211 >= (*(_QWORD *)(v194 + 2336) - v212) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v194 = v474;
    v212 = *(_QWORD *)(v474 + 2328);
    v205 = *v470;
    v207 = **v470;
  }
  v213 = *(_DWORD *)(v212 + (v211 << 11) + 896);
  if (v207)
  {
LABEL_519:
    v214 = *(unsigned int *)(v479 + 88);
    if ((v214 & 0x80000000) != 0)
      goto LABEL_590;
    goto LABEL_545;
  }
LABEL_538:
  if ((v213 & 0x10000000) != 0)
    v217 = 0x40000000;
  else
    v217 = 0x80000000;
  if ((v213 & 0x20000000) != 0)
    v213 = v217;
  else
    v213 &= 0xCFFFFFFF;
  v214 = *(unsigned int *)(v479 + 88);
  if ((v214 & 0x80000000) != 0)
    goto LABEL_590;
LABEL_545:
  v218 = *(_QWORD *)(v194 + 2328);
  v219 = (*(_QWORD *)(v194 + 2336) - v218) >> 11;
  if (v219 > v214)
    goto LABEL_549;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v194 = v474;
  v205 = *v470;
  v214 = *(unsigned int *)(v479 + 88);
  if ((v214 & 0x80000000) != 0)
  {
LABEL_590:
    v220 = *(_DWORD *)(v194 + 1208);
    if (*v205)
      goto LABEL_559;
    goto LABEL_553;
  }
  v218 = *(_QWORD *)(v474 + 2328);
  v219 = (*(_QWORD *)(v474 + 2336) - v218) >> 11;
LABEL_549:
  if (v219 <= v214)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v218 = *(_QWORD *)(v474 + 2328);
    v205 = *v470;
  }
  v220 = *(_DWORD *)(v218 + (v214 << 11) + 928);
  if (!*v205)
  {
LABEL_553:
    if ((v220 & 0x10000000) != 0)
      v221 = 0x40000000;
    else
      v221 = 0x80000000;
    if ((v220 & 0x20000000) != 0)
      v220 = v221;
    else
      v220 &= 0xCFFFFFFF;
  }
LABEL_559:
  v542 = v527;
  v543 = v528;
  v544 = v529;
  v541 = (float32x4_t)v526;
  v540 = v525;
  if ((v184 & 0x40000000) != 0)
  {
    v517 = v527;
    v518 = v528;
    v519 = v529;
    v516 = v526;
    v515 = v525;
    *(_QWORD *)&v570 = 0x161616160D0D0D0DLL;
    v510 = xmmword_224682340;
    v511 = (__int128)xmmword_224682350;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 7, 4, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16700000127), xmmword_224682350);
    if ((v458 & 0x40000000) == 0)
    {
      v512 = v527;
      v513 = v528;
      v514 = v529;
      v511 = v526;
      v510 = v525;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224682360;
      v571 = (__int128)xmmword_224682370;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 7, 4, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16700000127), xmmword_224682370);
      if (((v454 | v196) & 1) == 0)
      {
        v572 = v527;
        v573 = v528;
        v574 = v529;
        v570 = v525;
        v571 = v526;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224682380;
        v566 = (__int128)xmmword_224682390;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 7, 4, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16700000127), xmmword_224682390);
        v222 = (v483 & 1) == 0 && ((v449 | v195) & 1) == 0;
        if ((v441 & 1) == 0 && v222)
        {
          v567 = v527;
          v568 = v528;
          v569 = v529;
          v566 = v526;
          v565 = v525;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_2246823A0;
          v561 = (__int128)xmmword_2246823B0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 7, 4, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xE700000127), xmmword_2246823B0);
        }
      }
      v223 = (v445 & 1) == 0 && ((v449 | v195) & 1) == 0;
      if (v223 && (v197 & 1) == 0)
      {
        v562 = v542;
        v563 = v543;
        v564 = v544;
        v561 = (__int128)v541;
        v560 = v540;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_2246823C0;
        v556 = (__int128)xmmword_2246823D0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 7, 4, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xE700000127), xmmword_2246823D0);
      }
    }
    v224 = (v213 & 0x40000000 | v195 & 1) == 0;
    if (!(v210 & 0x40000000 | v196 & 1))
    {
      v557 = v542;
      v558 = v543;
      v559 = v544;
      *(_QWORD *)&v545 = 0x16160D0D16160D0DLL;
      v556 = (__int128)v541;
      v555 = v540;
      v550 = xmmword_2246823E0;
      v551 = (__int128)xmmword_2246823F0;
      *(_QWORD *)&v520 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 7, 4, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v520, COERCE_DOUBLE(0x16700000127), xmmword_2246823F0);
      v225 = (v206 & 0x40000000) == 0 && v224;
      if ((v483 & 1) == 0 && v225)
      {
        v552 = v542;
        v553 = v543;
        v554 = v544;
        *(_QWORD *)&v520 = 0x161616160D0D0D0DLL;
        v551 = (__int128)v541;
        v550 = v540;
        v545 = xmmword_224682400;
        v546 = (__int128)xmmword_224682410;
        *(_QWORD *)&v576[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 7, 4, 4, (uint64_t)&v520, (uint64_t)&v545, (uint64_t)v576, COERCE_DOUBLE(0xE700000127), xmmword_224682410);
      }
    }
    v226 = (v197 & 1) == 0 && v224;
    if (v226 && (v220 & 0x40000000) == 0)
    {
      v547 = v542;
      v548 = v543;
      v549 = v544;
      *(_QWORD *)&v576[0] = 0x16160D0D16160D0DLL;
      v546 = (__int128)v541;
      v545 = v540;
      v520 = xmmword_224682420;
      v521 = (__int128)xmmword_224682430;
      v577[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 7, 4, 4, (uint64_t)v576, (uint64_t)&v520, (uint64_t)v577, COERCE_DOUBLE(0xE700000127), xmmword_224682430);
    }
  }
  v227 = a1[2];
  v480 = v476[1];
  v484 = *v476;
  v488 = a3[3];
  v489 = a3[4];
  v486 = a3[1];
  v487 = a3[2];
  v485 = *a3;
  v439 = *(_OWORD *)a1;
  v475 = (_BYTE **)v476[2];
  v228 = *((_DWORD *)v227 + 224);
  v229 = **(unsigned __int8 **)v439;
  if (**(_BYTE **)v439)
  {
    v230 = *((_DWORD *)v227 + 288);
    v231 = *((_DWORD *)v227 + 232);
    v232 = *((_DWORD *)v227 + 240);
    v471 = *((_DWORD *)v227 + 296);
    if ((v471 & 0x40000000) == 0)
    {
LABEL_589:
      v233 = v230;
      v234 = 0;
      v235 = 0;
      v236 = 0;
      v237 = 0;
      v238 = 0;
      goto LABEL_642;
    }
  }
  else
  {
    if ((v228 & 0x20000000) != 0)
      v228 *= 4;
    v239 = *((_DWORD *)v227 + 288);
    if ((v239 & 0x20000000) != 0)
      v230 = 4 * v239;
    else
      v230 = *((_DWORD *)v227 + 288);
    v240 = *((_DWORD *)v227 + 232);
    if ((v240 & 0x20000000) != 0)
      v231 = 4 * v240;
    else
      v231 = *((_DWORD *)v227 + 232);
    v241 = *((_DWORD *)v227 + 296);
    if ((v241 & 0x20000000) != 0)
      v242 = 4 * v241;
    else
      v242 = *((_DWORD *)v227 + 296);
    v243 = *((_DWORD *)v227 + 240);
    if ((v243 & 0x10000000) != 0)
      v244 = 0x40000000;
    else
      v244 = 0x80000000;
    if ((v243 & 0x20000000) != 0)
      v232 = v244;
    else
      v232 = v243 & 0xCFFFFFFF;
    v471 = v242;
    if ((v242 & 0x40000000) == 0)
      goto LABEL_589;
  }
  v245 = *(unsigned int *)(v480 + 16);
  if ((v245 & 0x80000000) != 0)
  {
    v247 = *(_DWORD *)(v484 + 1204);
    v248 = **v475;
    if (**v475)
      goto LABEL_615;
  }
  else
  {
    v246 = *(_QWORD *)(v484 + 2328);
    if (v245 >= (*(_QWORD *)(v484 + 2336) - v246) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v246 = *(_QWORD *)(v484 + 2328);
    }
    v247 = *(_DWORD *)(v246 + (v245 << 11) + 924);
    v248 = **v475;
    if (**v475)
    {
LABEL_615:
      v249 = *(unsigned int *)(v480 + 16);
      if ((v249 & 0x80000000) == 0)
        goto LABEL_616;
LABEL_1149:
      v251 = *(_DWORD *)(v484 + 1460);
      if (v248)
        goto LABEL_620;
      goto LABEL_1150;
    }
  }
  if ((v247 & 0x10000000) != 0)
    v422 = 0x40000000;
  else
    v422 = 0x80000000;
  if ((v247 & 0x20000000) != 0)
    v247 = v422;
  else
    v247 &= 0xCFFFFFFF;
  v249 = *(unsigned int *)(v480 + 16);
  if ((v249 & 0x80000000) != 0)
    goto LABEL_1149;
LABEL_616:
  v250 = *(_QWORD *)(v484 + 2328);
  if (v249 >= (*(_QWORD *)(v484 + 2336) - v250) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v250 = *(_QWORD *)(v484 + 2328);
    v248 = **v475;
  }
  v251 = *(_DWORD *)(v250 + (v249 << 11) + 1180);
  if (v248)
  {
LABEL_620:
    v252 = *(unsigned int *)(v480 + 16);
    if ((v252 & 0x80000000) == 0)
      goto LABEL_621;
LABEL_1157:
    v254 = *(_DWORD *)(v484 + 1236);
    if (v248)
      goto LABEL_625;
    goto LABEL_1158;
  }
LABEL_1150:
  if ((v251 & 0x10000000) != 0)
    v423 = 0x40000000;
  else
    v423 = 0x80000000;
  if ((v251 & 0x20000000) != 0)
    v251 = v423;
  else
    v251 &= 0xCFFFFFFF;
  v252 = *(unsigned int *)(v480 + 16);
  if ((v252 & 0x80000000) != 0)
    goto LABEL_1157;
LABEL_621:
  v253 = *(_QWORD *)(v484 + 2328);
  if (v252 >= (*(_QWORD *)(v484 + 2336) - v253) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v253 = *(_QWORD *)(v484 + 2328);
    v248 = **v475;
  }
  v254 = *(_DWORD *)(v253 + (v252 << 11) + 956);
  if (v248)
  {
LABEL_625:
    v255 = *(unsigned int *)(v480 + 16);
    if ((v255 & 0x80000000) == 0)
      goto LABEL_626;
LABEL_1165:
    v257 = *(_DWORD *)(v484 + 1492);
    if (v248)
      goto LABEL_630;
    goto LABEL_1166;
  }
LABEL_1158:
  if ((v254 & 0x10000000) != 0)
    v424 = 0x40000000;
  else
    v424 = 0x80000000;
  if ((v254 & 0x20000000) != 0)
    v254 = v424;
  else
    v254 &= 0xCFFFFFFF;
  v255 = *(unsigned int *)(v480 + 16);
  if ((v255 & 0x80000000) != 0)
    goto LABEL_1165;
LABEL_626:
  v256 = *(_QWORD *)(v484 + 2328);
  if (v255 >= (*(_QWORD *)(v484 + 2336) - v256) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v256 = *(_QWORD *)(v484 + 2328);
    v248 = **v475;
  }
  v257 = *(_DWORD *)(v256 + (v255 << 11) + 1212);
  if (v248)
  {
LABEL_630:
    v258 = *(unsigned int *)(v480 + 16);
    if ((v258 & 0x80000000) == 0)
      goto LABEL_631;
    goto LABEL_1173;
  }
LABEL_1166:
  if ((v257 & 0x10000000) != 0)
    v425 = 0x40000000;
  else
    v425 = 0x80000000;
  if ((v257 & 0x20000000) != 0)
    v257 = v425;
  else
    v257 &= 0xCFFFFFFF;
  v258 = *(unsigned int *)(v480 + 16);
  if ((v258 & 0x80000000) == 0)
  {
LABEL_631:
    v259 = *(_QWORD *)(v484 + 2328);
    if (v258 >= (*(_QWORD *)(v484 + 2336) - v259) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v259 = *(_QWORD *)(v484 + 2328);
      v248 = **v475;
    }
    v233 = v230;
    v260 = v259 + (v258 << 11);
    v238 = (v247 >> 30) & 1;
    v237 = (v251 >> 30) & 1;
    v236 = (v254 >> 30) & 1;
    v261 = *(_DWORD *)(v260 + 988);
    v235 = (v257 >> 30) & 1;
    if (v248)
      goto LABEL_641;
    goto LABEL_635;
  }
LABEL_1173:
  v233 = v230;
  v238 = (v247 >> 30) & 1;
  v237 = (v251 >> 30) & 1;
  v236 = (v254 >> 30) & 1;
  v261 = *(_DWORD *)(v484 + 1268);
  v235 = (v257 >> 30) & 1;
  if (!v248)
  {
LABEL_635:
    if ((v261 & 0x10000000) != 0)
      v262 = 0x40000000;
    else
      v262 = 0x80000000;
    if ((v261 & 0x20000000) != 0)
      v261 = v262;
    else
      v261 &= 0xCFFFFFFF;
  }
LABEL_641:
  v234 = (v261 >> 30) & 1;
  v229 = **(unsigned __int8 **)v439;
LABEL_642:
  v450 = v228 >> 30;
  v522 = v487;
  v523 = v488;
  v524 = v489;
  v521 = v486;
  v520 = v485;
  v263 = *((_DWORD *)v227 + 225);
  if (v229)
  {
    v264 = *((_DWORD *)v227 + 289);
    v265 = *((_DWORD *)v227 + 233);
    v468 = *((_DWORD *)v227 + 297);
    v266 = *((_DWORD *)v227 + 241);
  }
  else
  {
    if ((v263 & 0x10000000) != 0)
      v267 = 0x40000000;
    else
      v267 = 0x80000000;
    if ((v263 & 0x20000000) != 0)
      v263 = v267;
    else
      v263 &= 0xCFFFFFFF;
    v268 = *((_DWORD *)v227 + 289);
    if ((v268 & 0x10000000) != 0)
      v269 = 0x40000000;
    else
      v269 = 0x80000000;
    if ((v268 & 0x20000000) != 0)
      v264 = v269;
    else
      v264 = v268 & 0xCFFFFFFF;
    v270 = *((_DWORD *)v227 + 233);
    if ((v270 & 0x10000000) != 0)
      v271 = 0x40000000;
    else
      v271 = 0x80000000;
    if ((v270 & 0x20000000) != 0)
      v265 = v271;
    else
      v265 = v270 & 0xCFFFFFFF;
    v272 = *((_DWORD *)v227 + 297);
    if ((v272 & 0x10000000) != 0)
      v273 = 0x40000000;
    else
      v273 = 0x80000000;
    if ((v272 & 0x20000000) != 0)
      v274 = v273;
    else
      v274 = v272 & 0xCFFFFFFF;
    v468 = v274;
    v275 = *((_DWORD *)v227 + 241);
    if ((v275 & 0x10000000) != 0)
      v266 = 0x40000000;
    else
      v266 = 0x80000000;
    if ((v275 & 0x20000000) == 0)
      v266 = v275 & 0xCFFFFFFF;
  }
  v276 = v231 >> 30;
  v277 = v233 >> 30;
  v278 = v232 >> 30;
  v436 = v263 >> 30;
  v459 = v265 >> 30;
  v463 = v264 >> 30;
  v279 = v266 >> 30;
  if ((v471 & 0x40000000) != 0)
  {
    v517 = v487;
    v518 = v488;
    v519 = v489;
    v516 = v486;
    v515 = v485;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224682440;
    v511 = (__int128)xmmword_224682450;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 0, 5, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16800000128), xmmword_224682450);
    if (!v235)
    {
      v512 = v487;
      v513 = v488;
      v514 = v489;
      v511 = v486;
      v510 = v485;
      *(_QWORD *)&v565 = 0x4040D0D04040D0DLL;
      v570 = xmmword_224682460;
      v571 = (__int128)xmmword_224682470;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 0, 5, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16800000128), xmmword_224682470);
      v280 = (v236 | v276 & 1) == 0;
      if (!(v237 | v277 & 1))
      {
        v572 = v487;
        v573 = v488;
        v574 = v489;
        v570 = v485;
        v571 = v486;
        *(_QWORD *)&v560 = 0x40404040D0D0D0DLL;
        v565 = xmmword_224682480;
        v566 = (__int128)xmmword_224682490;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 0, 5, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16800000128), xmmword_224682490);
        v281 = (v450 & 1) == 0 && v280;
        if (!v238 && v281)
        {
          v567 = v487;
          v568 = v488;
          v569 = v489;
          v566 = v486;
          v565 = v485;
          *(_QWORD *)&v555 = 0x4040D0D04040D0DLL;
          v560 = xmmword_2246824A0;
          v561 = (__int128)xmmword_2246824B0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 0, 5, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xE800000128), xmmword_2246824B0);
        }
      }
      if (v234)
        v282 = 0;
      else
        v282 = v280;
      if (v282 && (v278 & 1) == 0)
      {
        v562 = v487;
        v563 = v488;
        v564 = v489;
        *(_QWORD *)&v550 = 0x40404040D0D0D0DLL;
        v561 = v486;
        v560 = v485;
        v555 = xmmword_2246824C0;
        v556 = (__int128)xmmword_2246824D0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 0, 5, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xE800000128), xmmword_2246824D0);
      }
    }
    if (((v277 | v463) & 1) == 0)
    {
      v557 = v487;
      v558 = v488;
      v559 = v489;
      v556 = v486;
      v555 = v485;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_2246824E0;
      v551 = (__int128)xmmword_2246824F0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 0, 5, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16800000128), xmmword_2246824F0);
      v283 = (v436 & 1) == 0 && ((v276 | v459) & 1) == 0;
      if ((v450 & 1) == 0 && v283)
      {
        v552 = v487;
        v553 = v488;
        v554 = v489;
        v551 = v486;
        v550 = v485;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224682500;
        v546 = (__int128)xmmword_224682510;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 0, 5, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xE800000128), xmmword_224682510);
      }
    }
    v284 = (v278 & 1) == 0 && ((v276 | v459) & 1) == 0;
    if (v284 && (v279 & 1) == 0)
    {
      v547 = v487;
      v548 = v488;
      v549 = v489;
      v546 = v486;
      v545 = v485;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224682520;
      v541 = xmmword_224682530;
      *(_QWORD *)&v530 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 0, 5, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xE800000128), xmmword_224682530);
    }
  }
  v497 = v522;
  v498 = v523;
  v499 = v524;
  v495 = v520;
  v496 = v521;
  v285 = *((_DWORD *)v227 + 226);
  if (**(_BYTE **)v439)
  {
    v286 = *((_DWORD *)v227 + 290);
    v287 = *((_DWORD *)v227 + 234);
    v288 = *((_DWORD *)v227 + 298);
    v289 = *((_DWORD *)v227 + 242);
  }
  else
  {
    if ((v285 & 0x10000000) != 0)
      v290 = 0x40000000;
    else
      v290 = 0x80000000;
    if ((v285 & 0x20000000) != 0)
      v285 = v290;
    else
      v285 &= 0xCFFFFFFF;
    v291 = *((_DWORD *)v227 + 290);
    if ((v291 & 0x10000000) != 0)
      v292 = 0x40000000;
    else
      v292 = 0x80000000;
    if ((v291 & 0x20000000) != 0)
      v286 = v292;
    else
      v286 = v291 & 0xCFFFFFFF;
    v293 = *((_DWORD *)v227 + 234);
    if ((v293 & 0x10000000) != 0)
      v294 = 0x40000000;
    else
      v294 = 0x80000000;
    if ((v293 & 0x20000000) != 0)
      v287 = v294;
    else
      v287 = v293 & 0xCFFFFFFF;
    v295 = *((_DWORD *)v227 + 298);
    if ((v295 & 0x10000000) != 0)
      v296 = 0x40000000;
    else
      v296 = 0x80000000;
    if ((v295 & 0x20000000) != 0)
      v288 = v296;
    else
      v288 = v295 & 0xCFFFFFFF;
    v297 = *((_DWORD *)v227 + 242);
    if ((v297 & 0x10000000) != 0)
      v289 = 0x40000000;
    else
      v289 = 0x80000000;
    if ((v297 & 0x20000000) == 0)
      v289 = v297 & 0xCFFFFFFF;
  }
  v298 = v287 >> 30;
  v433 = v285 >> 30;
  v455 = v286 >> 30;
  v446 = v289 >> 30;
  v507 = v522;
  v508 = v523;
  v509 = v524;
  v505 = v520;
  v506 = v521;
  if ((v468 & 0x40000000) != 0)
  {
    v517 = v522;
    v518 = v523;
    v519 = v524;
    v516 = v521;
    v515 = v520;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224682540;
    v511 = (__int128)xmmword_224682550;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 1, 5, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16900000129), xmmword_224682550);
    if ((v471 & 0x40000000) == 0)
    {
      v512 = v522;
      v513 = v523;
      v514 = v524;
      v511 = v521;
      v510 = v520;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224682560;
      v571 = (__int128)xmmword_224682570;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 1, 5, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16900000129), xmmword_224682570);
      if (((v277 | v463) & 1) == 0)
      {
        v572 = v522;
        v573 = v523;
        v574 = v524;
        v570 = v520;
        v571 = v521;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224682580;
        v566 = (__int128)xmmword_224682590;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 1, 5, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16900000129), xmmword_224682590);
        v299 = (v436 & 1) == 0 && ((v276 | v459) & 1) == 0;
        if ((v450 & 1) == 0 && v299)
        {
          v567 = v522;
          v568 = v523;
          v569 = v524;
          v566 = v521;
          v565 = v520;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_2246825A0;
          v561 = (__int128)xmmword_2246825B0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 1, 5, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xE900000129), xmmword_2246825B0);
        }
      }
      v300 = (v278 & 1) == 0 && ((v276 | v459) & 1) == 0;
      if (v300 && (v279 & 1) == 0)
      {
        v562 = v507;
        v563 = v508;
        v564 = v509;
        v561 = v506;
        v560 = v505;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_2246825C0;
        v556 = (__int128)xmmword_2246825D0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 1, 5, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xE900000129), xmmword_2246825D0);
      }
    }
    if (((v463 | v455) & 1) == 0)
    {
      v557 = v507;
      v558 = v508;
      v559 = v509;
      v556 = v506;
      v555 = v505;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_2246825E0;
      v551 = (__int128)xmmword_2246825F0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 1, 5, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16900000129), xmmword_2246825F0);
      v301 = (v433 & 1) == 0 && ((v459 | v298) & 1) == 0;
      if ((v436 & 1) == 0 && v301)
      {
        v552 = v507;
        v553 = v508;
        v554 = v509;
        v551 = v506;
        v550 = v505;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224682600;
        v546 = (__int128)xmmword_224682610;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 1, 5, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xE900000129), xmmword_224682610);
      }
    }
    v302 = (v279 & 1) == 0 && ((v459 | v298) & 1) == 0;
    if (v302 && (v446 & 1) == 0)
    {
      v547 = v507;
      v548 = v508;
      v549 = v509;
      v546 = v506;
      v545 = v505;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224682620;
      v541 = xmmword_224682630;
      *(_QWORD *)&v530 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 1, 5, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xE900000129), xmmword_224682630);
    }
  }
  v303 = *((_DWORD *)v227 + 227);
  if (**(_BYTE **)v439)
  {
    v304 = *((_DWORD *)v227 + 291);
    v305 = *((_DWORD *)v227 + 235);
    v306 = *((_DWORD *)v227 + 299);
    v307 = *((_DWORD *)v227 + 243);
  }
  else
  {
    if ((v303 & 0x10000000) != 0)
      v308 = 0x40000000;
    else
      v308 = 0x80000000;
    if ((v303 & 0x20000000) != 0)
      v303 = v308;
    else
      v303 &= 0xCFFFFFFF;
    v309 = *((_DWORD *)v227 + 291);
    if ((v309 & 0x10000000) != 0)
      v310 = 0x40000000;
    else
      v310 = 0x80000000;
    if ((v309 & 0x20000000) != 0)
      v304 = v310;
    else
      v304 = v309 & 0xCFFFFFFF;
    v311 = *((_DWORD *)v227 + 235);
    if ((v311 & 0x10000000) != 0)
      v312 = 0x40000000;
    else
      v312 = 0x80000000;
    if ((v311 & 0x20000000) != 0)
      v305 = v312;
    else
      v305 = v311 & 0xCFFFFFFF;
    v313 = *((_DWORD *)v227 + 299);
    if ((v313 & 0x10000000) != 0)
      v314 = 0x40000000;
    else
      v314 = 0x80000000;
    if ((v313 & 0x20000000) != 0)
      v306 = v314;
    else
      v306 = v313 & 0xCFFFFFFF;
    v315 = *((_DWORD *)v227 + 243);
    if ((v315 & 0x10000000) != 0)
      v307 = 0x40000000;
    else
      v307 = 0x80000000;
    if ((v315 & 0x20000000) == 0)
      v307 = v315 & 0xCFFFFFFF;
  }
  v451 = v305 >> 30;
  v430 = v303 >> 30;
  v472 = v304 >> 30;
  v442 = v307 >> 30;
  if ((v288 & 0x40000000) != 0)
  {
    v517 = v497;
    v518 = v498;
    v519 = v499;
    v516 = v496;
    v515 = v495;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224682640;
    v511 = (__int128)xmmword_224682650;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 2, 5, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16A0000012ALL), xmmword_224682650);
    if ((v468 & 0x40000000) == 0)
    {
      v512 = v497;
      v513 = v498;
      v514 = v499;
      v511 = v496;
      v510 = v495;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224682660;
      v571 = (__int128)xmmword_224682670;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 2, 5, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16A0000012ALL), xmmword_224682670);
      if (((v463 | v455) & 1) == 0)
      {
        v572 = v497;
        v573 = v498;
        v574 = v499;
        v570 = v495;
        v571 = v496;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224682680;
        v566 = (__int128)xmmword_224682690;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 2, 5, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16A0000012ALL), xmmword_224682690);
        v316 = (v433 & 1) == 0 && ((v459 | v298) & 1) == 0;
        if ((v436 & 1) == 0 && v316)
        {
          v567 = v497;
          v568 = v498;
          v569 = v499;
          v566 = v496;
          v565 = v495;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_2246826A0;
          v561 = (__int128)xmmword_2246826B0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 2, 5, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xEA0000012ALL), xmmword_2246826B0);
        }
      }
      v317 = (v279 & 1) == 0 && ((v459 | v298) & 1) == 0;
      if (v317 && (v446 & 1) == 0)
      {
        v562 = v497;
        v563 = v498;
        v564 = v499;
        v561 = v496;
        v560 = v495;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_2246826C0;
        v556 = (__int128)xmmword_2246826D0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 2, 5, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xEA0000012ALL), xmmword_2246826D0);
      }
    }
    if (((v455 | v472) & 1) == 0)
    {
      v557 = v497;
      v558 = v498;
      v559 = v499;
      v556 = v496;
      v555 = v495;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_2246826E0;
      v551 = (__int128)xmmword_2246826F0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 2, 5, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16A0000012ALL), xmmword_2246826F0);
      v318 = (v430 & 1) == 0 && ((v298 | v451) & 1) == 0;
      if ((v433 & 1) == 0 && v318)
      {
        v552 = v497;
        v553 = v498;
        v554 = v499;
        v551 = v496;
        v550 = v495;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224682700;
        v546 = (__int128)xmmword_224682710;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 2, 5, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xEA0000012ALL), xmmword_224682710);
      }
    }
    v319 = (v446 & 1) == 0 && ((v298 | v451) & 1) == 0;
    if (v319 && (v442 & 1) == 0)
    {
      v547 = v497;
      v548 = v498;
      v549 = v499;
      v546 = v496;
      v545 = v495;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224682720;
      v541 = xmmword_224682730;
      *(_QWORD *)&v530 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 2, 5, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xEA0000012ALL), xmmword_224682730);
    }
  }
  v320 = *((_DWORD *)v227 + 228);
  if (**(_BYTE **)v439)
  {
    v321 = *((_DWORD *)v227 + 292);
    v322 = *((_DWORD *)v227 + 236);
    v323 = *((_DWORD *)v227 + 300);
    v324 = *((_DWORD *)v227 + 244);
  }
  else
  {
    if ((v320 & 0x10000000) != 0)
      v325 = 0x40000000;
    else
      v325 = 0x80000000;
    if ((v320 & 0x20000000) != 0)
      v320 = v325;
    else
      v320 &= 0xCFFFFFFF;
    v326 = *((_DWORD *)v227 + 292);
    if ((v326 & 0x10000000) != 0)
      v327 = 0x40000000;
    else
      v327 = 0x80000000;
    if ((v326 & 0x20000000) != 0)
      v321 = v327;
    else
      v321 = v326 & 0xCFFFFFFF;
    v328 = *((_DWORD *)v227 + 236);
    if ((v328 & 0x10000000) != 0)
      v329 = 0x40000000;
    else
      v329 = 0x80000000;
    if ((v328 & 0x20000000) != 0)
      v322 = v329;
    else
      v322 = v328 & 0xCFFFFFFF;
    v330 = *((_DWORD *)v227 + 300);
    if ((v330 & 0x10000000) != 0)
      v331 = 0x40000000;
    else
      v331 = 0x80000000;
    if ((v330 & 0x20000000) != 0)
      v323 = v331;
    else
      v323 = v330 & 0xCFFFFFFF;
    v332 = *((_DWORD *)v227 + 244);
    if ((v332 & 0x10000000) != 0)
      v324 = 0x40000000;
    else
      v324 = 0x80000000;
    if ((v332 & 0x20000000) == 0)
      v324 = v332 & 0xCFFFFFFF;
  }
  v333 = v322 >> 30;
  v437 = v320 >> 30;
  v334 = v321 >> 30;
  v335 = v324 >> 30;
  if ((v306 & 0x40000000) != 0)
  {
    v517 = v497;
    v518 = v498;
    v519 = v499;
    v516 = v496;
    v515 = v495;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224682740;
    v511 = (__int128)xmmword_224682750;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 3, 5, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16B0000012BLL), xmmword_224682750);
    if ((v288 & 0x40000000) == 0)
    {
      v512 = v497;
      v513 = v498;
      v514 = v499;
      v511 = v496;
      v510 = v495;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224682760;
      v571 = (__int128)xmmword_224682770;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 3, 5, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16B0000012BLL), xmmword_224682770);
      v336 = ((v298 | v451) & 1) == 0;
      if (((v455 | v472) & 1) == 0)
      {
        v572 = v497;
        v573 = v498;
        v574 = v499;
        v570 = v495;
        v571 = v496;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224682780;
        v566 = (__int128)xmmword_224682790;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 3, 5, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16B0000012BLL), xmmword_224682790);
        v337 = (v430 & 1) == 0 && v336;
        if ((v433 & 1) == 0 && v337)
        {
          v567 = v497;
          v568 = v498;
          v569 = v499;
          v566 = v496;
          v565 = v495;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_2246827A0;
          v561 = (__int128)xmmword_2246827B0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 3, 5, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xEB0000012BLL), xmmword_2246827B0);
        }
      }
      v338 = (v446 & 1) == 0 && v336;
      if (v338 && (v442 & 1) == 0)
      {
        v562 = v497;
        v563 = v498;
        v564 = v499;
        v561 = v496;
        v560 = v495;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_2246827C0;
        v556 = (__int128)xmmword_2246827D0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 3, 5, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xEB0000012BLL), xmmword_2246827D0);
      }
    }
    if (((v472 | v334) & 1) == 0)
    {
      v557 = v497;
      v558 = v498;
      v559 = v499;
      v556 = v496;
      v555 = v495;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_2246827E0;
      v551 = (__int128)xmmword_2246827F0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 3, 5, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16B0000012BLL), xmmword_2246827F0);
      v339 = (v437 & 1) == 0 && ((v451 | v333) & 1) == 0;
      if ((v430 & 1) == 0 && v339)
      {
        v552 = v497;
        v553 = v498;
        v554 = v499;
        v551 = v496;
        v550 = v495;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224682800;
        v546 = (__int128)xmmword_224682810;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 3, 5, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xEB0000012BLL), xmmword_224682810);
      }
    }
    v340 = (v442 & 1) == 0 && ((v451 | v333) & 1) == 0;
    if (v340 && (v335 & 1) == 0)
    {
      v547 = v497;
      v548 = v498;
      v549 = v499;
      v546 = v496;
      v545 = v495;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224682820;
      v541 = xmmword_224682830;
      *(_QWORD *)&v530 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 3, 5, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xEB0000012BLL), xmmword_224682830);
    }
  }
  v341 = *((_DWORD *)v227 + 229);
  if (**(_BYTE **)v439)
  {
    v342 = *((_DWORD *)v227 + 293);
    v343 = *((_DWORD *)v227 + 237);
    v344 = *((_DWORD *)v227 + 301);
    v345 = *((_DWORD *)v227 + 245);
  }
  else
  {
    if ((v341 & 0x10000000) != 0)
      v346 = 0x40000000;
    else
      v346 = 0x80000000;
    if ((v341 & 0x20000000) != 0)
      v341 = v346;
    else
      v341 &= 0xCFFFFFFF;
    v347 = *((_DWORD *)v227 + 293);
    if ((v347 & 0x10000000) != 0)
      v348 = 0x40000000;
    else
      v348 = 0x80000000;
    if ((v347 & 0x20000000) != 0)
      v342 = v348;
    else
      v342 = v347 & 0xCFFFFFFF;
    v349 = *((_DWORD *)v227 + 237);
    if ((v349 & 0x10000000) != 0)
      v350 = 0x40000000;
    else
      v350 = 0x80000000;
    if ((v349 & 0x20000000) != 0)
      v343 = v350;
    else
      v343 = v349 & 0xCFFFFFFF;
    v351 = *((_DWORD *)v227 + 301);
    if ((v351 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v351 & 0x20000000) != 0)
      v344 = v352;
    else
      v344 = v351 & 0xCFFFFFFF;
    v353 = *((_DWORD *)v227 + 245);
    if ((v353 & 0x10000000) != 0)
      v345 = 0x40000000;
    else
      v345 = 0x80000000;
    if ((v353 & 0x20000000) == 0)
      v345 = v353 & 0xCFFFFFFF;
  }
  v354 = v343 >> 30;
  v456 = v341 >> 30;
  v355 = v342 >> 30;
  v464 = v345 >> 30;
  if ((v323 & 0x40000000) != 0)
  {
    v517 = v497;
    v518 = v498;
    v519 = v499;
    v516 = v496;
    v515 = v495;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224682840;
    v511 = (__int128)xmmword_224682850;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 4, 5, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16C0000012CLL), xmmword_224682850);
    if ((v306 & 0x40000000) == 0)
    {
      v512 = v497;
      v513 = v498;
      v514 = v499;
      v511 = v496;
      v510 = v495;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224682860;
      v571 = (__int128)xmmword_224682870;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 4, 5, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16C0000012CLL), xmmword_224682870);
      if (((v472 | v334) & 1) == 0)
      {
        v572 = v497;
        v573 = v498;
        v574 = v499;
        v570 = v495;
        v571 = v496;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224682880;
        v566 = (__int128)xmmword_224682890;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 4, 5, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16C0000012CLL), xmmword_224682890);
        v356 = (v437 & 1) == 0 && ((v451 | v333) & 1) == 0;
        if ((v430 & 1) == 0 && v356)
        {
          v567 = v497;
          v568 = v498;
          v569 = v499;
          v566 = v496;
          v565 = v495;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_2246828A0;
          v561 = (__int128)xmmword_2246828B0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 4, 5, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xEC0000012CLL), xmmword_2246828B0);
        }
      }
      v357 = (v442 & 1) == 0 && ((v451 | v333) & 1) == 0;
      if (v357 && (v335 & 1) == 0)
      {
        v562 = v497;
        v563 = v498;
        v564 = v499;
        v561 = v496;
        v560 = v495;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_2246828C0;
        v556 = (__int128)xmmword_2246828D0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 4, 5, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xEC0000012CLL), xmmword_2246828D0);
      }
    }
    if (((v334 | v355) & 1) == 0)
    {
      v557 = v497;
      v558 = v498;
      v559 = v499;
      v556 = v496;
      v555 = v495;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_2246828E0;
      v551 = (__int128)xmmword_2246828F0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 4, 5, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16C0000012CLL), xmmword_2246828F0);
      v358 = (v456 & 1) == 0 && ((v333 | v354) & 1) == 0;
      if ((v437 & 1) == 0 && v358)
      {
        v552 = v497;
        v553 = v498;
        v554 = v499;
        v551 = v496;
        v550 = v495;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224682900;
        v546 = (__int128)xmmword_224682910;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 4, 5, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xEC0000012CLL), xmmword_224682910);
      }
    }
    v359 = (v335 & 1) == 0 && ((v333 | v354) & 1) == 0;
    if (v359 && (v464 & 1) == 0)
    {
      v547 = v497;
      v548 = v498;
      v549 = v499;
      v546 = v496;
      v545 = v495;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224682920;
      v541 = xmmword_224682930;
      *(_QWORD *)&v530 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 4, 5, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v530, COERCE_DOUBLE(0xEC0000012CLL), xmmword_224682930);
    }
  }
  v360 = *((_DWORD *)v227 + 230);
  if (**(_BYTE **)v439)
  {
    v361 = *((_DWORD *)v227 + 294);
    v362 = *((_DWORD *)v227 + 238);
    v363 = *((_DWORD *)v227 + 302);
    v364 = *((_DWORD *)v227 + 246);
  }
  else
  {
    if ((v360 & 0x10000000) != 0)
      v365 = 0x40000000;
    else
      v365 = 0x80000000;
    if ((v360 & 0x20000000) != 0)
      v360 = v365;
    else
      v360 &= 0xCFFFFFFF;
    v366 = *((_DWORD *)v227 + 294);
    if ((v366 & 0x10000000) != 0)
      v367 = 0x40000000;
    else
      v367 = 0x80000000;
    if ((v366 & 0x20000000) != 0)
      v361 = v367;
    else
      v361 = v366 & 0xCFFFFFFF;
    v368 = *((_DWORD *)v227 + 238);
    if ((v368 & 0x10000000) != 0)
      v369 = 0x40000000;
    else
      v369 = 0x80000000;
    if ((v368 & 0x20000000) != 0)
      v362 = v369;
    else
      v362 = v368 & 0xCFFFFFFF;
    v370 = *((_DWORD *)v227 + 302);
    if ((v370 & 0x10000000) != 0)
      v371 = 0x40000000;
    else
      v371 = 0x80000000;
    if ((v370 & 0x20000000) != 0)
      v363 = v371;
    else
      v363 = v370 & 0xCFFFFFFF;
    v372 = *((_DWORD *)v227 + 246);
    if ((v372 & 0x10000000) != 0)
      v364 = 0x40000000;
    else
      v364 = 0x80000000;
    if ((v372 & 0x20000000) == 0)
      v364 = v372 & 0xCFFFFFFF;
  }
  v452 = v360 >> 30;
  v469 = v362 >> 30;
  v473 = v361 >> 30;
  v460 = v364 >> 30;
  v532 = v497;
  v533 = v498;
  v534 = v499;
  v531 = v496;
  v530 = v495;
  if ((v344 & 0x40000000) != 0)
  {
    v517 = v497;
    v518 = v498;
    v519 = v499;
    v516 = v496;
    v515 = v495;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224682940;
    v511 = (__int128)xmmword_224682950;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 5, 5, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16D0000012DLL), xmmword_224682950);
    if ((v323 & 0x40000000) == 0)
    {
      v512 = v497;
      v513 = v498;
      v514 = v499;
      v511 = v496;
      v510 = v495;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224682960;
      v571 = (__int128)xmmword_224682970;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 5, 5, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16D0000012DLL), xmmword_224682970);
      if (((v334 | v355) & 1) == 0)
      {
        v572 = v497;
        v573 = v498;
        v574 = v499;
        v570 = v495;
        v571 = v496;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224682980;
        v566 = (__int128)xmmword_224682990;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 5, 5, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16D0000012DLL), xmmword_224682990);
        v373 = (v456 & 1) == 0 && ((v333 | v354) & 1) == 0;
        if ((v437 & 1) == 0 && v373)
        {
          v567 = v497;
          v568 = v498;
          v569 = v499;
          v566 = v496;
          v565 = v495;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_2246829A0;
          v561 = (__int128)xmmword_2246829B0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 5, 5, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xED0000012DLL), xmmword_2246829B0);
        }
      }
      v374 = (v335 & 1) == 0 && ((v333 | v354) & 1) == 0;
      if (v374 && (v464 & 1) == 0)
      {
        v562 = v532;
        v563 = v533;
        v564 = v534;
        v561 = v531;
        v560 = v530;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_2246829C0;
        v556 = (__int128)xmmword_2246829D0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 5, 5, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xED0000012DLL), xmmword_2246829D0);
      }
    }
    if (((v355 | v473) & 1) == 0)
    {
      v557 = v532;
      v558 = v533;
      v559 = v534;
      v556 = v531;
      v555 = v530;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_2246829E0;
      v551 = (__int128)xmmword_2246829F0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 5, 5, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16D0000012DLL), xmmword_2246829F0);
      v375 = (v452 & 1) == 0 && ((v354 | v469) & 1) == 0;
      if ((v456 & 1) == 0 && v375)
      {
        v552 = v532;
        v553 = v533;
        v554 = v534;
        v551 = v531;
        v550 = v530;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224682A00;
        v546 = (__int128)xmmword_224682A10;
        *(_QWORD *)&v535 = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 5, 5, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)&v535, COERCE_DOUBLE(0xED0000012DLL), xmmword_224682A10);
      }
    }
    v376 = (v464 & 1) == 0 && ((v354 | v469) & 1) == 0;
    if (v376 && (v460 & 1) == 0)
    {
      v547 = v532;
      v548 = v533;
      v549 = v534;
      v546 = v531;
      v545 = v530;
      *(_QWORD *)&v535 = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224682A20;
      v541 = xmmword_224682A30;
      *(_QWORD *)&v525 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 5, 5, 4, (uint64_t)&v535, (uint64_t)&v540, (uint64_t)&v525, COERCE_DOUBLE(0xED0000012DLL), xmmword_224682A30);
    }
  }
  v527 = v497;
  v528 = v498;
  v529 = v499;
  v526 = v496;
  v525 = v495;
  v377 = *((_DWORD *)v227 + 231);
  if (**(_BYTE **)v439)
  {
    v378 = *((_DWORD *)v227 + 295);
    v379 = *((_DWORD *)v227 + 239);
    v380 = *((_DWORD *)v227 + 303);
    v381 = *((_DWORD *)v227 + 247);
  }
  else
  {
    if ((v377 & 0x10000000) != 0)
      v382 = 0x40000000;
    else
      v382 = 0x80000000;
    if ((v377 & 0x20000000) != 0)
      v377 = v382;
    else
      v377 &= 0xCFFFFFFF;
    v383 = *((_DWORD *)v227 + 295);
    if ((v383 & 0x10000000) != 0)
      v384 = 0x40000000;
    else
      v384 = 0x80000000;
    if ((v383 & 0x20000000) != 0)
      v378 = v384;
    else
      v378 = v383 & 0xCFFFFFFF;
    v385 = *((_DWORD *)v227 + 239);
    if ((v385 & 0x10000000) != 0)
      v386 = 0x40000000;
    else
      v386 = 0x80000000;
    if ((v385 & 0x20000000) != 0)
      v379 = v386;
    else
      v379 = v385 & 0xCFFFFFFF;
    v387 = *((_DWORD *)v227 + 303);
    if ((v387 & 0x10000000) != 0)
      v388 = 0x40000000;
    else
      v388 = 0x80000000;
    if ((v387 & 0x20000000) != 0)
      v380 = v388;
    else
      v380 = v387 & 0xCFFFFFFF;
    v389 = *((_DWORD *)v227 + 247);
    if ((v389 & 0x10000000) != 0)
      v381 = 0x40000000;
    else
      v381 = 0x80000000;
    if ((v389 & 0x20000000) == 0)
      v381 = v389 & 0xCFFFFFFF;
  }
  v390 = v379 >> 30;
  v447 = v377 >> 30;
  v391 = v378 >> 30;
  v477 = v381 >> 30;
  v537 = v497;
  v538 = v498;
  v539 = v499;
  v536 = v496;
  v535 = v495;
  if ((v363 & 0x40000000) != 0)
  {
    v517 = v497;
    v518 = v498;
    v519 = v499;
    v516 = v496;
    v515 = v495;
    *(_QWORD *)&v570 = 0xD0D0D0D0D0D0D0DLL;
    v510 = xmmword_224682A40;
    v511 = (__int128)xmmword_224682A50;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 6, 5, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16E0000012ELL), xmmword_224682A50);
    if ((v344 & 0x40000000) == 0)
    {
      v512 = v497;
      v513 = v498;
      v514 = v499;
      v511 = v496;
      v510 = v495;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224682A60;
      v571 = (__int128)xmmword_224682A70;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 6, 5, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16E0000012ELL), xmmword_224682A70);
      if (((v355 | v473) & 1) == 0)
      {
        v572 = v497;
        v573 = v498;
        v574 = v499;
        v570 = v495;
        v571 = v496;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224682A80;
        v566 = (__int128)xmmword_224682A90;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 6, 5, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16E0000012ELL), xmmword_224682A90);
        v392 = (v452 & 1) == 0 && ((v354 | v469) & 1) == 0;
        if ((v456 & 1) == 0 && v392)
        {
          v567 = v497;
          v568 = v498;
          v569 = v499;
          v566 = v496;
          v565 = v495;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_224682AA0;
          v561 = (__int128)xmmword_224682AB0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 6, 5, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xEE0000012ELL), xmmword_224682AB0);
        }
      }
      v393 = (v464 & 1) == 0 && ((v354 | v469) & 1) == 0;
      if (v393 && (v460 & 1) == 0)
      {
        v562 = v537;
        v563 = v538;
        v564 = v539;
        v561 = v536;
        v560 = v535;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v555 = xmmword_224682AC0;
        v556 = (__int128)xmmword_224682AD0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 6, 5, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xEE0000012ELL), xmmword_224682AD0);
      }
    }
    if (((v473 | v391) & 1) == 0)
    {
      v557 = v537;
      v558 = v538;
      v559 = v539;
      v556 = v536;
      v555 = v535;
      *(_QWORD *)&v545 = 0xD0D0D0D0D0D0D0DLL;
      v550 = xmmword_224682AE0;
      v551 = (__int128)xmmword_224682AF0;
      *(_QWORD *)&v540 = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 6, 5, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)&v540, COERCE_DOUBLE(0x16E0000012ELL), xmmword_224682AF0);
      v394 = (v447 & 1) == 0 && ((v469 | v390) & 1) == 0;
      if ((v452 & 1) == 0 && v394)
      {
        v552 = v537;
        v553 = v538;
        v554 = v539;
        v551 = v536;
        v550 = v535;
        *(_QWORD *)&v540 = 0xD0D0D0D0D0D0D0DLL;
        v545 = xmmword_224682B00;
        v546 = (__int128)xmmword_224682B10;
        *(_QWORD *)&v576[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 6, 5, 4, (uint64_t)&v540, (uint64_t)&v545, (uint64_t)v576, COERCE_DOUBLE(0xEE0000012ELL), xmmword_224682B10);
      }
    }
    v395 = (v460 & 1) == 0 && ((v469 | v390) & 1) == 0;
    if (v395 && (v477 & 1) == 0)
    {
      v547 = v537;
      v548 = v538;
      v549 = v539;
      v546 = v536;
      v545 = v535;
      *(_QWORD *)&v576[0] = 0xD0D0D0D0D0D0D0DLL;
      v540 = xmmword_224682B20;
      v541 = xmmword_224682B30;
      v577[0] = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 6, 5, 4, (uint64_t)v576, (uint64_t)&v540, (uint64_t)v577, COERCE_DOUBLE(0xEE0000012ELL), xmmword_224682B30);
    }
  }
  v396 = *(unsigned int *)(v480 + 88);
  if ((v396 & 0x80000000) != 0)
  {
    v399 = *v475;
    v400 = *(_DWORD *)(v484 + 1176);
    v401 = **v475;
    if (**v475)
      goto LABEL_1060;
  }
  else
  {
    v397 = *(_QWORD *)(v484 + 2328);
    if (v396 >= (*(_QWORD *)(v484 + 2336) - v397) >> 11)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v397 = *(_QWORD *)(v484 + 2328);
    }
    v398 = v397 + (v396 << 11);
    v399 = *v475;
    v400 = *(_DWORD *)(v398 + 896);
    v401 = **v475;
    if (**v475)
    {
LABEL_1060:
      v402 = *(unsigned int *)(v480 + 88);
      if ((v402 & 0x80000000) == 0)
        goto LABEL_1061;
LABEL_1080:
      v404 = *(_DWORD *)(v484 + 1432);
      if (v401)
        goto LABEL_1065;
      goto LABEL_1081;
    }
  }
  if ((v400 & 0x10000000) != 0)
    v409 = 0x40000000;
  else
    v409 = 0x80000000;
  if ((v400 & 0x20000000) != 0)
    v400 = v409;
  else
    v400 &= 0xCFFFFFFF;
  v402 = *(unsigned int *)(v480 + 88);
  if ((v402 & 0x80000000) != 0)
    goto LABEL_1080;
LABEL_1061:
  v403 = *(_QWORD *)(v484 + 2328);
  if (v402 >= (*(_QWORD *)(v484 + 2336) - v403) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v403 = *(_QWORD *)(v484 + 2328);
    v399 = *v475;
    v401 = **v475;
  }
  v404 = *(_DWORD *)(v403 + (v402 << 11) + 1152);
  if (v401)
  {
LABEL_1065:
    v405 = *(unsigned int *)(v480 + 88);
    if ((v405 & 0x80000000) == 0)
      goto LABEL_1066;
LABEL_1088:
    v407 = *(_DWORD *)(v484 + 1208);
    if (v401)
      goto LABEL_1070;
    goto LABEL_1089;
  }
LABEL_1081:
  if ((v404 & 0x10000000) != 0)
    v410 = 0x40000000;
  else
    v410 = 0x80000000;
  if ((v404 & 0x20000000) != 0)
    v404 = v410;
  else
    v404 &= 0xCFFFFFFF;
  v405 = *(unsigned int *)(v480 + 88);
  if ((v405 & 0x80000000) != 0)
    goto LABEL_1088;
LABEL_1066:
  v406 = *(_QWORD *)(v484 + 2328);
  if (v405 >= (*(_QWORD *)(v484 + 2336) - v406) >> 11)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v406 = *(_QWORD *)(v484 + 2328);
    v399 = *v475;
    v401 = **v475;
  }
  v407 = *(_DWORD *)(v406 + (v405 << 11) + 928);
  if (v401)
  {
LABEL_1070:
    v408 = *(unsigned int *)(v480 + 88);
    if ((v408 & 0x80000000) != 0)
      goto LABEL_1139;
    goto LABEL_1096;
  }
LABEL_1089:
  if ((v407 & 0x10000000) != 0)
    v411 = 0x40000000;
  else
    v411 = 0x80000000;
  if ((v407 & 0x20000000) != 0)
    v407 = v411;
  else
    v407 &= 0xCFFFFFFF;
  v408 = *(unsigned int *)(v480 + 88);
  if ((v408 & 0x80000000) != 0)
    goto LABEL_1139;
LABEL_1096:
  v412 = *(_QWORD *)(v484 + 2328);
  v413 = (*(_QWORD *)(v484 + 2336) - v412) >> 11;
  if (v413 > v408)
    goto LABEL_1100;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v399 = *v475;
  v408 = *(unsigned int *)(v480 + 88);
  if ((v408 & 0x80000000) != 0)
  {
LABEL_1139:
    v414 = *(_DWORD *)(v484 + 1240);
    if (*v399)
      goto LABEL_1110;
    goto LABEL_1104;
  }
  v412 = *(_QWORD *)(v484 + 2328);
  v413 = (*(_QWORD *)(v484 + 2336) - v412) >> 11;
LABEL_1100:
  if (v413 <= v408)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v412 = *(_QWORD *)(v484 + 2328);
    v399 = *v475;
  }
  v414 = *(_DWORD *)(v412 + (v408 << 11) + 960);
  if (!*v399)
  {
LABEL_1104:
    if ((v414 & 0x10000000) != 0)
      v415 = 0x40000000;
    else
      v415 = 0x80000000;
    if ((v414 & 0x20000000) != 0)
      v414 = v415;
    else
      v414 &= 0xCFFFFFFF;
  }
LABEL_1110:
  v542 = v527;
  v543 = v528;
  v544 = v529;
  v541 = (float32x4_t)v526;
  v540 = v525;
  if ((v380 & 0x40000000) != 0)
  {
    v517 = v527;
    v518 = v528;
    v519 = v529;
    v516 = v526;
    v515 = v525;
    *(_QWORD *)&v570 = 0x161616160D0D0D0DLL;
    v510 = xmmword_224682B40;
    v511 = (__int128)xmmword_224682B50;
    *(_QWORD *)&v565 = 0x1A19171611100E0DLL;
    sub_223D91438((unint64_t)&v515, 7, 5, 4, (uint64_t)&v570, (uint64_t)&v510, (uint64_t)&v565, COERCE_DOUBLE(0x16F0000012FLL), xmmword_224682B50);
    if ((v363 & 0x40000000) == 0)
    {
      v512 = v527;
      v513 = v528;
      v514 = v529;
      v511 = v526;
      v510 = v525;
      *(_QWORD *)&v565 = 0xD0D0D0D0D0D0D0DLL;
      v570 = xmmword_224682B60;
      v571 = (__int128)xmmword_224682B70;
      *(_QWORD *)&v560 = 0x807111005040E0DLL;
      sub_223D91438((unint64_t)&v510, 7, 5, 4, (uint64_t)&v565, (uint64_t)&v570, (uint64_t)&v560, COERCE_DOUBLE(0x16F0000012FLL), xmmword_224682B70);
      if (((v473 | v391) & 1) == 0)
      {
        v572 = v527;
        v573 = v528;
        v574 = v529;
        v570 = v525;
        v571 = v526;
        *(_QWORD *)&v560 = 0xD0D0D0D0D0D0D0DLL;
        v565 = xmmword_224682B80;
        v566 = (__int128)xmmword_224682B90;
        *(_QWORD *)&v555 = 0x20105040B0A0E0DLL;
        sub_223D91438((unint64_t)&v570, 7, 5, 4, (uint64_t)&v560, (uint64_t)&v565, (uint64_t)&v555, COERCE_DOUBLE(0x16F0000012FLL), xmmword_224682B90);
        v416 = (v447 & 1) == 0 && ((v469 | v390) & 1) == 0;
        if ((v452 & 1) == 0 && v416)
        {
          v567 = v527;
          v568 = v528;
          v569 = v529;
          v566 = v526;
          v565 = v525;
          *(_QWORD *)&v555 = 0xD0D0D0D0D0D0D0DLL;
          v560 = xmmword_224682BA0;
          v561 = (__int128)xmmword_224682BB0;
          *(_QWORD *)&v550 = 0x1090A03040C0DLL;
          sub_223D91438((unint64_t)&v565, 7, 5, 4, (uint64_t)&v555, (uint64_t)&v560, (uint64_t)&v550, COERCE_DOUBLE(0xEF0000012FLL), xmmword_224682BB0);
        }
      }
      v417 = (v460 & 1) == 0 && ((v469 | v390) & 1) == 0;
      if (v417 && (v477 & 1) == 0)
      {
        v562 = v542;
        v563 = v543;
        v564 = v544;
        *(_QWORD *)&v550 = 0xD0D0D0D0D0D0D0DLL;
        v561 = (__int128)v541;
        v560 = v540;
        v555 = xmmword_224682BC0;
        v556 = (__int128)xmmword_224682BD0;
        *(_QWORD *)&v545 = 0x60703040F100C0DLL;
        sub_223D91438((unint64_t)&v560, 7, 5, 4, (uint64_t)&v550, (uint64_t)&v555, (uint64_t)&v545, COERCE_DOUBLE(0xEF0000012FLL), xmmword_224682BD0);
      }
    }
    v418 = (v407 & 0x40000000 | v390 & 1) == 0;
    if (!(v404 & 0x40000000 | v391 & 1))
    {
      v557 = v542;
      v558 = v543;
      v559 = v544;
      *(_QWORD *)&v545 = 0x16160D0D16160D0DLL;
      v556 = (__int128)v541;
      v555 = v540;
      v550 = xmmword_224682BE0;
      v551 = (__int128)xmmword_224682BF0;
      *(_QWORD *)&v576[0] = 0x14130B0A17160E0DLL;
      sub_223D91438((unint64_t)&v555, 7, 5, 4, (uint64_t)&v545, (uint64_t)&v550, (uint64_t)v576, COERCE_DOUBLE(0x16F0000012FLL), xmmword_224682BF0);
      v419 = (v400 & 0x40000000) == 0 && v418;
      if ((v447 & 1) == 0 && v419)
      {
        v552 = v542;
        v553 = v543;
        v554 = v544;
        *(_QWORD *)&v576[0] = 0x161616160D0D0D0DLL;
        v551 = (__int128)v541;
        v550 = v540;
        v545 = xmmword_224682C00;
        v546 = (__int128)xmmword_224682C10;
        v577[0] = 0x12131516090A0C0DLL;
        sub_223D91438((unint64_t)&v550, 7, 5, 4, (uint64_t)v576, (uint64_t)&v545, (uint64_t)v577, COERCE_DOUBLE(0xEF0000012FLL), xmmword_224682C10);
      }
    }
    v420 = (v477 & 1) == 0 && v418;
    if (v420 && (v414 & 0x40000000) == 0)
    {
      v547 = v542;
      v548 = v543;
      v549 = v544;
      v577[0] = 0x16160D0D16160D0DLL;
      v546 = (__int128)v541;
      v545 = v540;
      v576[0] = xmmword_224682C20;
      v576[1] = xmmword_224682C30;
      v575 = 0x18190F1015160C0DLL;
      sub_223D91438((unint64_t)&v545, 7, 5, 4, (uint64_t)v577, (uint64_t)v576, (uint64_t)&v575, COERCE_DOUBLE(0xEF0000012FLL), xmmword_224682C30);
    }
  }
  v510 = v439;
  *(_QWORD *)&v511 = v227;
  *(_QWORD *)&v570 = v484;
  *((_QWORD *)&v570 + 1) = v480;
  *(_QWORD *)&v571 = v475;
  v519 = v489;
  v518 = v488;
  v517 = v487;
  v515 = v485;
  v516 = v486;
  return sub_223E0CA8C((unsigned __int8 ***)&v510, &v570, &v515);
}

