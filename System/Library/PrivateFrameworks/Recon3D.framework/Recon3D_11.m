void sub_223568C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  char **v5;
  va_list va;

  va_start(va, a5);
  sub_223248E48((void **)va);
  sub_223480A2C(v5);
  _Unwind_Resume(a1);
}

void sub_223568CF8(_Unwind_Exception *a1)
{
  char **v1;

  sub_223480A2C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223568D0C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  BOOL v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  _BYTE v13[16];
  std::__shared_weak_count *v14;

  if (*(_BYTE *)(a1 + 84))
    return 1;
  if (!*(_BYTE *)(a2 + 56))
    return *(unsigned __int8 *)(a2 + 56) << 8;
  if (*(_DWORD *)(a2 + 32))
    v6 = *(_DWORD *)(a2 + 36) == 0;
  else
    v6 = 1;
  if (v6
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Frame/src/FrameBundle.cpp", 1145, (uint64_t)"!depth.depth->Empty()", 21, (uint64_t)"Depth buffer not valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_223C3BF78(a2, (uint64_t)v13);
  v7 = v14;
  if (!v14)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    v10 = a3[2];
    v12 = (a3[1] + 1) % v10;
    a3[1] = v12;
    if (v12)
      return (*a3 >= 2 * v10 - 1) | 0x100u;
  }
  else
  {
LABEL_14:
    v10 = a3[2];
    v11 = (a3[1] + 1) % v10;
    a3[1] = v11;
    if (v11)
      return (*a3 >= 2 * v10 - 1) | 0x100u;
  }
  return 257;
}

void sub_223568E6C(unsigned __int8 **a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  unsigned __int8 *v22;
  char v23;
  uint64_t *v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  uint64_t *v34;
  uint64_t **v35;
  uint64_t *v36;
  uint64_t **v37;
  uint64_t *v38;
  uint64_t **v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned __int8 *v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  char *v60;
  _QWORD *v61;
  _QWORD **v62;
  _QWORD **v63;
  _QWORD **v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  BOOL v68;
  char *v69;
  char *v70;
  unsigned __int8 *v71;
  char *v72;
  unint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t *v83;
  uint64_t **v84;
  unsigned __int8 *v85;
  uint64_t **v86;
  unsigned int v87;
  unsigned int v88;
  BOOL v89;
  unsigned __int8 *v90;
  unsigned __int8 *v91;
  unsigned __int8 *v92;
  unsigned __int8 *v93;
  unsigned __int8 *v94;
  uint64_t *v95;
  uint64_t **v96;
  uint64_t **v97;
  char *v98;
  std::__shared_weak_count *v99;
  unint64_t *p_shared_owners;
  unint64_t v101;
  unsigned __int8 *v102;
  unsigned __int8 *v103;
  uint64_t **v104;
  unsigned int v105;
  unsigned int v106;
  BOOL v107;
  unsigned __int8 *v108;
  unsigned __int8 *v109;
  unsigned __int8 *v110;
  unsigned __int8 *v111;
  unsigned __int8 *v112;
  uint64_t *v113;
  uint64_t **v114;
  uint64_t **v115;
  uint64_t **v116;
  char *v117;
  unint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  uint64_t *v128;
  char *v129;
  std::__shared_weak_count *v130;
  unint64_t *v131;
  unint64_t v132;
  uint64_t **v133;
  unsigned __int8 *v134;
  unsigned __int8 *v135;
  uint64_t *v136;
  uint64_t **v137;
  unsigned __int8 *v138;
  uint64_t **v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  unsigned __int8 *v143;
  BOOL v144;
  unsigned __int8 *v145;
  unsigned __int8 *v146;
  unsigned __int8 *v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t *v150;
  unint64_t v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  char *v161;
  uint64_t *v162;
  uint64_t *v163;
  unsigned __int8 *v164;
  uint64_t *v165;
  unsigned int v166;
  unsigned int v167;
  BOOL v168;
  unsigned __int8 *v169;
  unsigned __int8 *v170;
  unsigned __int8 *v171;
  unsigned __int8 *v172;
  unsigned __int8 *v173;
  uint64_t *v174;
  uint64_t *v175;
  uint64_t **v176;
  unsigned __int8 *v177;
  unsigned __int8 *v178;
  unsigned __int8 *v179;
  unsigned __int8 *v181;
  unsigned __int8 *v182;
  unsigned __int8 *v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  unsigned __int8 *v187;
  BOOL v188;
  unsigned __int8 *v189;
  unsigned __int8 *v190;
  unsigned __int8 *v191;
  unsigned __int8 **v192;
  _QWORD **v193;
  _QWORD *v194[2];
  uint64_t **v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t **v198;
  _QWORD *v199;
  uint64_t v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  _BYTE v208[128];
  __int16 v209;
  uint64_t v210;

  v210 = *MEMORY[0x24BDAC8D0];
  v199 = 0;
  v200 = 0;
  v197 = 0;
  v198 = &v199;
  v195 = &v196;
  v196 = 0;
  v194[0] = 0;
  v194[1] = 0;
  v193 = v194;
  sub_223475C18(&v193, *(unsigned __int8 **)(a3 + 96), (unsigned __int8 *)(a3 + 104));
  v10 = (uint64_t *)(a3 + 80);
  v11 = *(_QWORD *)(a3 + 80);
  if (v11)
  {
    v12 = a3 + 80;
    do
    {
      v13 = sub_22319835C((unsigned __int8 *)(v11 + 32), a4);
      if (v13 >= 0)
        v14 = (uint64_t *)v11;
      else
        v14 = (uint64_t *)(v11 + 8);
      if (v13 >= 0)
        v12 = v11;
      v11 = *v14;
    }
    while (*v14);
    if ((uint64_t *)v12 != v10 && ((char)sub_22319835C(a4, (unsigned __int8 *)(v12 + 32)) & 0x80000000) == 0)
    {
      v15 = *v10;
      if (!*v10)
        goto LABEL_37;
      while (1)
      {
        while (1)
        {
          v16 = (uint64_t *)v15;
          v17 = (unsigned __int8 *)(v15 + 32);
          if (((char)sub_22319835C(a4, (unsigned __int8 *)(v15 + 32)) & 0x80000000) == 0)
            break;
          v15 = *v16;
          v10 = v16;
          if (!*v16)
            goto LABEL_37;
        }
        if (((char)sub_22319835C(v17, a4) & 0x80000000) == 0)
          break;
        v15 = v16[1];
        v10 = v16 + 1;
        if (!v15)
          goto LABEL_37;
      }
      v18 = *v10;
      if (!*v10)
        goto LABEL_37;
      if (&v195 != (uint64_t ***)(v18 + 48))
        sub_223475EB0((uint64_t)&v195, *(_QWORD **)(v18 + 48), (_QWORD *)(v18 + 56));
    }
  }
  v21 = *(_QWORD *)(a3 + 56);
  v20 = (unsigned __int8 *)(a3 + 56);
  v19 = v21;
  if (v21)
  {
    v22 = v20;
    do
    {
      v23 = sub_22319835C((unsigned __int8 *)(v19 + 32), a4);
      if (v23 >= 0)
        v24 = (uint64_t *)v19;
      else
        v24 = (uint64_t *)(v19 + 8);
      if (v23 >= 0)
        v22 = (unsigned __int8 *)v19;
      v19 = *v24;
    }
    while (*v24);
    if (v22 != v20 && ((char)sub_22319835C(a4, v22 + 32) & 0x80000000) == 0)
    {
      v25 = *(unsigned __int8 **)v20;
      if (*(_QWORD *)v20)
      {
        while (1)
        {
          while (1)
          {
            v26 = v25;
            v27 = v25 + 32;
            if (((char)sub_22319835C(a4, v25 + 32) & 0x80000000) == 0)
              break;
            v25 = *(unsigned __int8 **)v26;
            v20 = v26;
            if (!*(_QWORD *)v26)
              goto LABEL_37;
          }
          if (((char)sub_22319835C(v27, a4) & 0x80000000) == 0)
            break;
          v25 = (unsigned __int8 *)*((_QWORD *)v26 + 1);
          v20 = v26 + 8;
          if (!v25)
            goto LABEL_37;
        }
        v28 = *(unsigned __int8 **)v20;
        if (*(_QWORD *)v20)
        {
          if (&v198 != (uint64_t ***)(v28 + 48))
            sub_223475EB0((uint64_t)&v198, *((_QWORD **)v28 + 6), (_QWORD *)v28 + 7);
          goto LABEL_41;
        }
      }
LABEL_37:
      sub_223198218("map::at:  key not found");
    }
  }
LABEL_41:
  v192 = a2;
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
  *(_QWORD *)(a5 + 16) = 0;
  v29 = *a1;
  v30 = a1[1];
  __asm { FMOV            V8.2S, #1.0 }
  if (*a1 != v30)
  {
    do
    {
      v36 = v196;
      if (!v196)
        goto LABEL_82;
      v37 = &v196;
      do
      {
        v38 = v36;
        v39 = v37;
        v40 = *((unsigned __int8 *)v36 + 25);
        v41 = *v29;
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 26);
        v41 = v29[1];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 27);
        v41 = v29[2];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 28);
        v41 = v29[3];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 29);
        v41 = v29[4];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 30);
        v41 = v29[5];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 31);
        v41 = v29[6];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 32);
        v41 = v29[7];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 33);
        v41 = v29[8];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 34);
        v41 = v29[9];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 35);
        v41 = v29[10];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 36);
        v41 = v29[11];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 37);
        v41 = v29[12];
        if (v40 != v41)
          goto LABEL_65;
        v40 = *((unsigned __int8 *)v36 + 38);
        v41 = v29[13];
        if (v40 == v41
          && (v40 = *((unsigned __int8 *)v36 + 39), v41 = v29[14], v40 == v41)
          && (v40 = *((unsigned __int8 *)v36 + 40), v41 = v29[15], v40 == v41))
        {
          v42 = 0;
          v37 = (uint64_t **)v36;
        }
        else
        {
LABEL_65:
          _CF = v40 >= v41;
          if (v40 >= v41)
          {
            v42 = 0;
          }
          else
          {
            ++v36;
            v42 = 1;
          }
          if (_CF)
            v37 = (uint64_t **)v38;
          else
            v37 = v39;
        }
        v36 = (uint64_t *)*v36;
      }
      while (v36);
      if (v37 == &v196
        || ((v44 = (unsigned __int8 *)v38 + 25, v45 = (unsigned __int8 *)v39 + 25, !v42) ? (v46 = v44) : (v46 = v45),
            (char)sub_22319835C(v29, v46) < 0))
      {
LABEL_82:
        v61 = v199;
        if (!v199)
          goto LABEL_45;
        v62 = &v199;
        do
        {
          v63 = (_QWORD **)v61;
          v64 = v62;
          v65 = *((unsigned __int8 *)v61 + 25);
          v66 = *v29;
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 26);
          v66 = v29[1];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 27);
          v66 = v29[2];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 28);
          v66 = v29[3];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 29);
          v66 = v29[4];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 30);
          v66 = v29[5];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 31);
          v66 = v29[6];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 32);
          v66 = v29[7];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 33);
          v66 = v29[8];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 34);
          v66 = v29[9];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 35);
          v66 = v29[10];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 36);
          v66 = v29[11];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 37);
          v66 = v29[12];
          if (v65 != v66)
            goto LABEL_101;
          v65 = *((unsigned __int8 *)v61 + 38);
          v66 = v29[13];
          if (v65 == v66
            && (v65 = *((unsigned __int8 *)v61 + 39), v66 = v29[14], v65 == v66)
            && (v65 = *((unsigned __int8 *)v61 + 40), v66 = v29[15], v65 == v66))
          {
            v67 = 0;
            v62 = (_QWORD **)v61;
          }
          else
          {
LABEL_101:
            v68 = v65 >= v66;
            if (v65 >= v66)
            {
              v67 = 0;
            }
            else
            {
              ++v61;
              v67 = 1;
            }
            if (v68)
              v62 = v63;
            else
              v62 = v64;
          }
          v61 = (_QWORD *)*v61;
        }
        while (v61);
        if (v62 == &v199)
          goto LABEL_45;
        v69 = (char *)v63 + 25;
        v70 = (char *)v64 + 25;
        v71 = (unsigned __int8 *)(v67 ? v70 : v69);
        if ((char)sub_22319835C(v29, v71) < 0)
          goto LABEL_45;
        v203 = xmmword_224668DF8;
        v204 = unk_224668E08;
        v205 = xmmword_224668E18;
        v206 = unk_224668E28;
        memset(&v208[20], 0, 40);
        *(_OWORD *)&v208[4] = 0u;
        v207 = 0uLL;
        *(_DWORD *)v208 = 1065353216;
        *(_DWORD *)&v208[20] = 1065353216;
        memset(&v208[84], 0, 40);
        *(_OWORD *)&v208[68] = 0u;
        *(_QWORD *)&v208[60] = _D8;
        *(_DWORD *)&v208[40] = 1065353216;
        *(_DWORD *)&v208[84] = 1065353216;
        *(_DWORD *)&v208[104] = 1065353216;
        *(_DWORD *)&v208[124] = 1065353216;
        v202 = 0uLL;
        v201 = *(_OWORD *)v29;
        v209 = 288;
        v72 = (char *)operator new(0x240uLL);
        sub_223894E6C((uint64_t)v72);
        *(_QWORD *)&v202 = v72 + 24;
        *((_QWORD *)&v202 + 1) = v72;
        v73 = *(_QWORD *)(a5 + 8);
        if (v73 >= *(_QWORD *)(a5 + 16))
        {
          v98 = sub_22356F1F8((void **)a5, (uint64_t)&v201);
          v99 = (std::__shared_weak_count *)*((_QWORD *)&v202 + 1);
          *(_QWORD *)(a5 + 8) = v98;
          if (v99)
          {
            p_shared_owners = (unint64_t *)&v99->__shared_owners_;
            do
              v101 = __ldaxr(p_shared_owners);
            while (__stlxr(v101 - 1, p_shared_owners));
            if (!v101)
            {
              ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
              std::__shared_weak_count::__release_weak(v99);
            }
          }
        }
        else
        {
          *(_OWORD *)v73 = v201;
          *(_OWORD *)(v73 + 16) = v202;
          v202 = 0uLL;
          v74 = v206;
          v76 = v203;
          v75 = v204;
          *(_OWORD *)(v73 + 64) = v205;
          *(_OWORD *)(v73 + 80) = v74;
          *(_OWORD *)(v73 + 32) = v76;
          *(_OWORD *)(v73 + 48) = v75;
          *(_OWORD *)(v73 + 96) = v207;
          v78 = *(_OWORD *)&v208[32];
          v77 = *(_OWORD *)&v208[48];
          v79 = *(_OWORD *)&v208[16];
          *(_OWORD *)(v73 + 112) = *(_OWORD *)v208;
          *(_OWORD *)(v73 + 128) = v79;
          *(_OWORD *)(v73 + 144) = v78;
          *(_OWORD *)(v73 + 160) = v77;
          v81 = *(_OWORD *)&v208[96];
          v80 = *(_OWORD *)&v208[112];
          v82 = *(_OWORD *)&v208[80];
          *(_OWORD *)(v73 + 176) = *(_OWORD *)&v208[64];
          *(_OWORD *)(v73 + 192) = v82;
          *(_OWORD *)(v73 + 208) = v81;
          *(_OWORD *)(v73 + 224) = v80;
          *(_WORD *)(v73 + 240) = v209;
          *(_QWORD *)(a5 + 8) = v73 + 248;
        }
        v102 = (unsigned __int8 *)v199;
        if (!v199)
          goto LABEL_45;
        v84 = &v199;
        do
        {
          v103 = v102;
          v104 = v84;
          v105 = v102[25];
          v106 = *v29;
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[26];
          v106 = v29[1];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[27];
          v106 = v29[2];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[28];
          v106 = v29[3];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[29];
          v106 = v29[4];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[30];
          v106 = v29[5];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[31];
          v106 = v29[6];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[32];
          v106 = v29[7];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[33];
          v106 = v29[8];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[34];
          v106 = v29[9];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[35];
          v106 = v29[10];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[36];
          v106 = v29[11];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[37];
          v106 = v29[12];
          if (v105 != v106)
            goto LABEL_179;
          v105 = v103[38];
          v106 = v29[13];
          if (v105 == v106
            && (v105 = v103[39], v106 = v29[14], v105 == v106)
            && (v105 = v103[40], v106 = v29[15], v105 == v106))
          {
            v107 = 0;
            v108 = v103 + 8;
            v109 = v103;
            v84 = (uint64_t **)v103;
          }
          else
          {
LABEL_179:
            v107 = v105 < v106;
            v108 = v103 + 8;
            if (v105 >= v106)
              v109 = v103;
            else
              v109 = v103 + 8;
            if (!v107)
              v84 = (uint64_t **)v103;
          }
          v102 = *(unsigned __int8 **)v109;
        }
        while (v102);
        if (v84 == &v199)
          goto LABEL_45;
        v110 = v103 + 25;
        v111 = v107 ? (unsigned __int8 *)v104 + 25 : v110;
        if ((char)sub_22319835C(v29, v111) < 0)
          goto LABEL_45;
        v112 = (unsigned __int8 *)(v104 + 1);
        if (!v107)
          v112 = v108;
        v113 = *(uint64_t **)v112;
        v114 = v84;
        if (*(_QWORD *)v112)
        {
          do
          {
            v115 = (uint64_t **)v113;
            v113 = (uint64_t *)*v113;
          }
          while (v113);
        }
        else
        {
          do
          {
            v115 = (uint64_t **)v114[2];
            _ZF = *v115 == (uint64_t *)v114;
            v114 = v115;
          }
          while (!_ZF);
        }
        if (v198 == v84)
          v198 = v115;
        v34 = &v200;
        v35 = &v199;
      }
      else
      {
        v47 = *(_QWORD *)(a5 + 8);
        if (v47 >= *(_QWORD *)(a5 + 16))
        {
          v60 = sub_22356EF88((char **)a5, (uint64_t)v29);
        }
        else
        {
          *(_OWORD *)v47 = *(_OWORD *)v29;
          *(_QWORD *)(v47 + 16) = *((_QWORD *)v29 + 2);
          v48 = *((_QWORD *)v29 + 3);
          *(_QWORD *)(v47 + 24) = v48;
          if (v48)
          {
            v49 = (unint64_t *)(v48 + 8);
            do
              v50 = __ldxr(v49);
            while (__stxr(v50 + 1, v49));
          }
          v51 = *((_OWORD *)v29 + 2);
          v52 = *((_OWORD *)v29 + 3);
          v53 = *((_OWORD *)v29 + 5);
          *(_OWORD *)(v47 + 64) = *((_OWORD *)v29 + 4);
          *(_OWORD *)(v47 + 80) = v53;
          *(_OWORD *)(v47 + 32) = v51;
          *(_OWORD *)(v47 + 48) = v52;
          *(_OWORD *)(v47 + 96) = *((_OWORD *)v29 + 6);
          v54 = *((_OWORD *)v29 + 7);
          v55 = *((_OWORD *)v29 + 8);
          v56 = *((_OWORD *)v29 + 10);
          *(_OWORD *)(v47 + 144) = *((_OWORD *)v29 + 9);
          *(_OWORD *)(v47 + 160) = v56;
          *(_OWORD *)(v47 + 112) = v54;
          *(_OWORD *)(v47 + 128) = v55;
          v57 = *((_OWORD *)v29 + 11);
          v58 = *((_OWORD *)v29 + 12);
          v59 = *((_OWORD *)v29 + 14);
          *(_OWORD *)(v47 + 208) = *((_OWORD *)v29 + 13);
          *(_OWORD *)(v47 + 224) = v59;
          *(_OWORD *)(v47 + 176) = v57;
          *(_OWORD *)(v47 + 192) = v58;
          *(_WORD *)(v47 + 240) = *((_WORD *)v29 + 120);
          v60 = (char *)(v47 + 248);
        }
        *(_QWORD *)(a5 + 8) = v60;
        v83 = v196;
        if (!v196)
          goto LABEL_45;
        v84 = &v196;
        do
        {
          v85 = (unsigned __int8 *)v83;
          v86 = v84;
          v87 = *((unsigned __int8 *)v83 + 25);
          v88 = *v29;
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[26];
          v88 = v29[1];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[27];
          v88 = v29[2];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[28];
          v88 = v29[3];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[29];
          v88 = v29[4];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[30];
          v88 = v29[5];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[31];
          v88 = v29[6];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[32];
          v88 = v29[7];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[33];
          v88 = v29[8];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[34];
          v88 = v29[9];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[35];
          v88 = v29[10];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[36];
          v88 = v29[11];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[37];
          v88 = v29[12];
          if (v87 != v88)
            goto LABEL_135;
          v87 = v85[38];
          v88 = v29[13];
          if (v87 == v88 && (v87 = v85[39], v88 = v29[14], v87 == v88) && (v87 = v85[40], v88 = v29[15], v87 == v88))
          {
            v89 = 0;
            v90 = v85 + 8;
            v91 = v85;
            v84 = (uint64_t **)v85;
          }
          else
          {
LABEL_135:
            v89 = v87 < v88;
            v90 = v85 + 8;
            if (v87 >= v88)
              v91 = v85;
            else
              v91 = v85 + 8;
            if (!v89)
              v84 = (uint64_t **)v85;
          }
          v83 = *(uint64_t **)v91;
        }
        while (v83);
        if (v84 == &v196)
          goto LABEL_45;
        v92 = v85 + 25;
        v93 = v89 ? (unsigned __int8 *)v86 + 25 : v92;
        if ((char)sub_22319835C(v29, v93) < 0)
          goto LABEL_45;
        v94 = (unsigned __int8 *)(v86 + 1);
        if (!v89)
          v94 = v90;
        v95 = *(uint64_t **)v94;
        v96 = v84;
        if (*(_QWORD *)v94)
        {
          do
          {
            v97 = (uint64_t **)v95;
            v95 = (uint64_t *)*v95;
          }
          while (v95);
        }
        else
        {
          do
          {
            v97 = (uint64_t **)v96[2];
            _ZF = *v97 == (uint64_t *)v96;
            v96 = v97;
          }
          while (!_ZF);
        }
        if (v195 == v84)
          v195 = v97;
        v34 = &v197;
        v35 = &v196;
      }
      --*v34;
      sub_2231AFE60(*v35, (uint64_t *)v84);
      operator delete(v84);
LABEL_45:
      v29 += 248;
    }
    while (v29 != v30);
  }
  if (v200)
  {
    v116 = v198;
    if (v198 != &v199)
    {
      do
      {
        v203 = xmmword_224668DF8;
        v204 = unk_224668E08;
        v205 = xmmword_224668E18;
        v206 = unk_224668E28;
        memset(&v208[20], 0, 40);
        *(_OWORD *)&v208[4] = 0u;
        v207 = 0uLL;
        *(_DWORD *)v208 = 1065353216;
        *(_DWORD *)&v208[20] = 1065353216;
        memset(&v208[84], 0, 40);
        *(_OWORD *)&v208[68] = 0u;
        *(_QWORD *)&v208[60] = _D8;
        *(_DWORD *)&v208[40] = 1065353216;
        *(_DWORD *)&v208[84] = 1065353216;
        *(_DWORD *)&v208[104] = 1065353216;
        *(_DWORD *)&v208[124] = 1065353216;
        v202 = 0uLL;
        v201 = *(_OWORD *)((char *)v116 + 25);
        v209 = 288;
        v117 = (char *)operator new(0x240uLL);
        sub_223894E6C((uint64_t)v117);
        *(_QWORD *)&v202 = v117 + 24;
        *((_QWORD *)&v202 + 1) = v117;
        v118 = *(_QWORD *)(a5 + 8);
        if (v118 >= *(_QWORD *)(a5 + 16))
        {
          v129 = sub_22356F1F8((void **)a5, (uint64_t)&v201);
          v130 = (std::__shared_weak_count *)*((_QWORD *)&v202 + 1);
          *(_QWORD *)(a5 + 8) = v129;
          if (!v130)
            goto LABEL_211;
          v131 = (unint64_t *)&v130->__shared_owners_;
          do
            v132 = __ldaxr(v131);
          while (__stlxr(v132 - 1, v131));
          if (!v132)
          {
            ((void (*)(std::__shared_weak_count *))v130->__on_zero_shared)(v130);
            std::__shared_weak_count::__release_weak(v130);
            v128 = v116[1];
            if (v128)
            {
              do
              {
LABEL_212:
                v133 = (uint64_t **)v128;
                v128 = (uint64_t *)*v128;
              }
              while (v128);
              goto LABEL_203;
            }
          }
          else
          {
LABEL_211:
            v128 = v116[1];
            if (v128)
              goto LABEL_212;
          }
        }
        else
        {
          *(_OWORD *)v118 = v201;
          *(_OWORD *)(v118 + 16) = v202;
          v202 = 0uLL;
          v119 = v206;
          v121 = v203;
          v120 = v204;
          *(_OWORD *)(v118 + 64) = v205;
          *(_OWORD *)(v118 + 80) = v119;
          *(_OWORD *)(v118 + 32) = v121;
          *(_OWORD *)(v118 + 48) = v120;
          *(_OWORD *)(v118 + 96) = v207;
          v123 = *(_OWORD *)&v208[32];
          v122 = *(_OWORD *)&v208[48];
          v124 = *(_OWORD *)&v208[16];
          *(_OWORD *)(v118 + 112) = *(_OWORD *)v208;
          *(_OWORD *)(v118 + 128) = v124;
          *(_OWORD *)(v118 + 144) = v123;
          *(_OWORD *)(v118 + 160) = v122;
          v126 = *(_OWORD *)&v208[96];
          v125 = *(_OWORD *)&v208[112];
          v127 = *(_OWORD *)&v208[80];
          *(_OWORD *)(v118 + 176) = *(_OWORD *)&v208[64];
          *(_OWORD *)(v118 + 192) = v127;
          *(_OWORD *)(v118 + 208) = v126;
          *(_OWORD *)(v118 + 224) = v125;
          *(_WORD *)(v118 + 240) = v209;
          *(_QWORD *)(a5 + 8) = v118 + 248;
          v128 = v116[1];
          if (v128)
            goto LABEL_212;
        }
        do
        {
          v133 = (uint64_t **)v116[2];
          _ZF = *v133 == (uint64_t *)v116;
          v116 = v133;
        }
        while (!_ZF);
LABEL_203:
        v116 = v133;
      }
      while (v133 != &v199);
    }
  }
  if (v197)
  {
    v134 = *v192;
    v135 = v192[1];
    if (*v192 != v135)
    {
      v136 = v196;
      if (v196)
      {
LABEL_223:
        v137 = &v196;
        do
        {
          v138 = (unsigned __int8 *)v136;
          v139 = v137;
          v140 = *((unsigned __int8 *)v136 + 25);
          v141 = *v134;
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[26];
          v141 = v134[1];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[27];
          v141 = v134[2];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[28];
          v141 = v134[3];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[29];
          v141 = v134[4];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[30];
          v141 = v134[5];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[31];
          v141 = v134[6];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[32];
          v141 = v134[7];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[33];
          v141 = v134[8];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[34];
          v141 = v134[9];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[35];
          v141 = v134[10];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[36];
          v141 = v134[11];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[37];
          v141 = v134[12];
          if (v140 != v141)
            goto LABEL_241;
          v140 = v138[38];
          v141 = v134[13];
          if (v140 == v141
            && (v140 = v138[39], v141 = v134[14], v140 == v141)
            && (v140 = v138[40], v141 = v134[15], v140 == v141))
          {
            v142 = 0;
            v143 = v138;
            v137 = (uint64_t **)v138;
          }
          else
          {
LABEL_241:
            v144 = v140 >= v141;
            v143 = v138 + 8;
            if (v144)
            {
              v143 = v138;
              v142 = 0;
            }
            else
            {
              v142 = 1;
            }
            if (v144)
              v137 = (uint64_t **)v138;
          }
          v136 = *(uint64_t **)v143;
        }
        while (v136);
        if (v137 != &v196)
        {
          v145 = v138 + 25;
          v146 = (unsigned __int8 *)v139 + 25;
          v147 = v142 ? v146 : v145;
          if (((char)sub_22319835C(v134, v147) & 0x80000000) == 0)
          {
            v148 = *(_QWORD *)(a5 + 8);
            if (v148 >= *(_QWORD *)(a5 + 16))
            {
              v161 = sub_22356EF88((char **)a5, (uint64_t)v134);
            }
            else
            {
              *(_OWORD *)v148 = *(_OWORD *)v134;
              *(_QWORD *)(v148 + 16) = *((_QWORD *)v134 + 2);
              v149 = *((_QWORD *)v134 + 3);
              *(_QWORD *)(v148 + 24) = v149;
              if (v149)
              {
                v150 = (unint64_t *)(v149 + 8);
                do
                  v151 = __ldxr(v150);
                while (__stxr(v151 + 1, v150));
              }
              v152 = *((_OWORD *)v134 + 2);
              v153 = *((_OWORD *)v134 + 3);
              v154 = *((_OWORD *)v134 + 5);
              *(_OWORD *)(v148 + 64) = *((_OWORD *)v134 + 4);
              *(_OWORD *)(v148 + 80) = v154;
              *(_OWORD *)(v148 + 32) = v152;
              *(_OWORD *)(v148 + 48) = v153;
              *(_OWORD *)(v148 + 96) = *((_OWORD *)v134 + 6);
              v155 = *((_OWORD *)v134 + 7);
              v156 = *((_OWORD *)v134 + 8);
              v157 = *((_OWORD *)v134 + 10);
              *(_OWORD *)(v148 + 144) = *((_OWORD *)v134 + 9);
              *(_OWORD *)(v148 + 160) = v157;
              *(_OWORD *)(v148 + 112) = v155;
              *(_OWORD *)(v148 + 128) = v156;
              v158 = *((_OWORD *)v134 + 11);
              v159 = *((_OWORD *)v134 + 12);
              v160 = *((_OWORD *)v134 + 14);
              *(_OWORD *)(v148 + 208) = *((_OWORD *)v134 + 13);
              *(_OWORD *)(v148 + 224) = v160;
              *(_OWORD *)(v148 + 176) = v158;
              *(_OWORD *)(v148 + 192) = v159;
              *(_WORD *)(v148 + 240) = *((_WORD *)v134 + 120);
              v161 = (char *)(v148 + 248);
            }
            *(_QWORD *)(a5 + 8) = v161;
            *(v161 - 8) = 4;
            v162 = v196;
            if (v196)
            {
              v163 = (uint64_t *)&v196;
              do
              {
                v164 = (unsigned __int8 *)v162;
                v165 = v163;
                v166 = *((unsigned __int8 *)v162 + 25);
                v167 = *v134;
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[26];
                v167 = v134[1];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[27];
                v167 = v134[2];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[28];
                v167 = v134[3];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[29];
                v167 = v134[4];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[30];
                v167 = v134[5];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[31];
                v167 = v134[6];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[32];
                v167 = v134[7];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[33];
                v167 = v134[8];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[34];
                v167 = v134[9];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[35];
                v167 = v134[10];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[36];
                v167 = v134[11];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[37];
                v167 = v134[12];
                if (v166 != v167)
                  goto LABEL_277;
                v166 = v164[38];
                v167 = v134[13];
                if (v166 == v167
                  && (v166 = v164[39], v167 = v134[14], v166 == v167)
                  && (v166 = v164[40], v167 = v134[15], v166 == v167))
                {
                  v168 = 0;
                  v169 = v164 + 8;
                  v170 = v164;
                  v163 = (uint64_t *)v164;
                }
                else
                {
LABEL_277:
                  v168 = v166 < v167;
                  v169 = v164 + 8;
                  if (v166 >= v167)
                    v170 = v164;
                  else
                    v170 = v164 + 8;
                  if (!v168)
                    v163 = (uint64_t *)v164;
                }
                v162 = *(uint64_t **)v170;
              }
              while (v162);
              if (v163 != (uint64_t *)&v196)
              {
                v171 = v164 + 25;
                v172 = v168 ? (unsigned __int8 *)v165 + 25 : v171;
                if (((char)sub_22319835C(v134, v172) & 0x80000000) == 0)
                {
                  v173 = (unsigned __int8 *)(v165 + 1);
                  if (!v168)
                    v173 = v169;
                  v174 = *(uint64_t **)v173;
                  v175 = v163;
                  if (*(_QWORD *)v173)
                  {
                    do
                    {
                      v176 = (uint64_t **)v174;
                      v174 = (uint64_t *)*v174;
                    }
                    while (v174);
                  }
                  else
                  {
                    do
                    {
                      v176 = (uint64_t **)v175[2];
                      _ZF = *v176 == v175;
                      v175 = (uint64_t *)v176;
                    }
                    while (!_ZF);
                  }
                  if (v195 == (uint64_t **)v163)
                    v195 = v176;
                  --v197;
                  sub_2231AFE60(v196, v163);
                  operator delete(v163);
                }
              }
            }
          }
        }
        while (1)
        {
          v134 += 248;
          if (v134 == v135)
            break;
          v136 = v196;
          if (v196)
            goto LABEL_223;
        }
      }
    }
  }
  v177 = *(unsigned __int8 **)a5;
  v178 = *(unsigned __int8 **)(a5 + 8);
  v179 = (unsigned __int8 *)v194[0];
  _ZF = *(unsigned __int8 **)a5 == v178 || v194[0] == 0;
  if (!_ZF)
  {
    if (v194[0])
      goto LABEL_306;
    while (1)
    {
      v177 += 248;
      if (v177 == v178)
        break;
      v179 = (unsigned __int8 *)v194[0];
      if (v194[0])
      {
LABEL_306:
        v181 = (unsigned __int8 *)v194;
        do
        {
          v182 = v179;
          v183 = v181;
          v184 = v179[25];
          v185 = *v177;
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[26];
          v185 = v177[1];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[27];
          v185 = v177[2];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[28];
          v185 = v177[3];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[29];
          v185 = v177[4];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[30];
          v185 = v177[5];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[31];
          v185 = v177[6];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[32];
          v185 = v177[7];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[33];
          v185 = v177[8];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[34];
          v185 = v177[9];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[35];
          v185 = v177[10];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[36];
          v185 = v177[11];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[37];
          v185 = v177[12];
          if (v184 != v185)
            goto LABEL_324;
          v184 = v182[38];
          v185 = v177[13];
          if (v184 == v185
            && (v184 = v182[39], v185 = v177[14], v184 == v185)
            && (v184 = v182[40], v185 = v177[15], v184 == v185))
          {
            v186 = 0;
            v187 = v182;
            v181 = v182;
          }
          else
          {
LABEL_324:
            v188 = v184 >= v185;
            v187 = v182 + 8;
            if (v188)
            {
              v187 = v182;
              v186 = 0;
            }
            else
            {
              v186 = 1;
            }
            if (v188)
              v181 = v182;
          }
          v179 = *(unsigned __int8 **)v187;
        }
        while (v179);
        if (v181 != (unsigned __int8 *)v194)
        {
          v189 = v182 + 25;
          v190 = v183 + 25;
          v191 = v186 ? v190 : v189;
          if (((char)sub_22319835C(v177, v191) & 0x80000000) == 0)
            v177[241] = 2;
        }
      }
    }
  }
  if (v197
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngineUtils.cpp", 415, (uint64_t)"add_keyframes.empty() && \"Expect all keyframes are in memory\"", 61, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_223198030((uint64_t)&v193, v194[0]);
  sub_223198030((uint64_t)&v195, v196);
  sub_223198030((uint64_t)&v198, v199);
}

void sub_22356A218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,_QWORD *a27,uint64_t a28,char a29,_QWORD *a30,uint64_t a31,char a32,_QWORD *a33)
{
  sub_223198030((uint64_t)&a26, a27);
  sub_223198030((uint64_t)&a29, a30);
  sub_223198030((uint64_t)&a32, a33);
  _Unwind_Resume(a1);
}

_BYTE *sub_22356A2B0(_BYTE *result, unsigned __int8 *a2)
{
  BOOL v2;
  BOOL v3;
  BOOL v4;
  BOOL v5;
  BOOL v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;

  if (result[560])
    v2 = result[880] == 0;
  else
    v2 = 1;
  v3 = v2 || result[976] == 0;
  if (v3 || (result[497] ? (v4 = result[272] == 0) : (v4 = 1), !v4 ? (v5 = result[524] == 0) : (v5 = 1), v5))
  {
    if (*((_QWORD *)a2 + 2) > 1uLL
      || (*(_QWORD *)(*(_QWORD *)a2 + 25) == 0xC8F5B4EBD7BCC25
        ? (v6 = *(_QWORD *)(*(_QWORD *)a2 + 33) == 0xB606D763D1A232ECLL)
        : (v6 = 0),
          !v6 || !result[560] || !result[328]))
    {
      sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngineUtils.cpp", 424, (uint64_t)"", 0, (uint64_t)"Cluster is disabled.", 20, (void (*)(void **))sub_22457406C);
      abort();
    }
    return result;
  }
  if (!result[416])
    return result;
  v9 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
  v7 = a2 + 8;
  v8 = v9;
  if (!v9)
  {
LABEL_99:
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/SessionNodeGroup/src/MeshingEngineUtils.cpp", 432, (uint64_t)"", 0, (uint64_t)"Occuancy is enabled, but not yet support cluster-recon.", 55, (void (*)(void **))sub_22457406C);
    abort();
  }
  v10 = v7;
  do
  {
    v11 = v8[25];
    if (v11 == 37)
    {
      v11 = v8[26];
      if (v11 == 204)
      {
        v11 = v8[27];
        if (v11 == 123)
        {
          v11 = v8[28];
          if (v11 == 189)
          {
            v11 = v8[29];
            if (v11 == 78)
            {
              v11 = v8[30];
              if (v11 == 91)
              {
                v11 = v8[31];
                if (v11 == 143)
                {
                  v11 = v8[32];
                  if (v11 == 12)
                  {
                    v11 = v8[33];
                    if (v11 == 236)
                    {
                      v11 = v8[34];
                      if (v11 == 50)
                      {
                        v11 = v8[35];
                        if (v11 == 162)
                        {
                          v11 = v8[36];
                          if (v11 == 209)
                          {
                            v11 = v8[37];
                            if (v11 == 99)
                            {
                              v11 = v8[38];
                              if (v11 == 215)
                              {
                                v11 = v8[39];
                                if (v11 == 6)
                                {
                                  v11 = v8[40];
                                  if (v11 == 182)
                                  {
                                    v10 = v8;
                                    goto LABEL_64;
                                  }
                                  v12 = 182;
                                }
                                else
                                {
                                  v12 = 6;
                                }
                              }
                              else
                              {
                                v12 = 215;
                              }
                            }
                            else
                            {
                              v12 = 99;
                            }
                          }
                          else
                          {
                            v12 = 209;
                          }
                        }
                        else
                        {
                          v12 = 162;
                        }
                      }
                      else
                      {
                        v12 = 50;
                      }
                    }
                    else
                    {
                      v12 = 236;
                    }
                  }
                  else
                  {
                    v12 = 12;
                  }
                }
                else
                {
                  v12 = 143;
                }
              }
              else
              {
                v12 = 91;
              }
            }
            else
            {
              v12 = 78;
            }
          }
          else
          {
            v12 = 189;
          }
        }
        else
        {
          v12 = 123;
        }
      }
      else
      {
        v12 = 204;
      }
    }
    else
    {
      v12 = 37;
    }
    if (v11 < v12)
      v8 += 8;
    else
      v10 = v8;
LABEL_64:
    v8 = *(unsigned __int8 **)v8;
  }
  while (v8);
  if (v10 == v7)
    goto LABEL_99;
  v13 = v10[25];
  if (v13 != 37)
  {
    v14 = 37;
    goto LABEL_98;
  }
  v13 = v10[26];
  if (v13 != 204)
  {
    v14 = 204;
    goto LABEL_98;
  }
  v13 = v10[27];
  if (v13 != 123)
  {
    v14 = 123;
    goto LABEL_98;
  }
  v13 = v10[28];
  if (v13 != 189)
  {
    v14 = 189;
    goto LABEL_98;
  }
  v13 = v10[29];
  if (v13 != 78)
  {
    v14 = 78;
    goto LABEL_98;
  }
  v13 = v10[30];
  if (v13 != 91)
  {
    v14 = 91;
    goto LABEL_98;
  }
  v13 = v10[31];
  if (v13 != 143)
  {
    v14 = 143;
    goto LABEL_98;
  }
  v13 = v10[32];
  if (v13 != 12)
  {
    v14 = 12;
    goto LABEL_98;
  }
  v13 = v10[33];
  if (v13 != 236)
  {
    v14 = 236;
    goto LABEL_98;
  }
  v13 = v10[34];
  if (v13 != 50)
  {
    v14 = 50;
    goto LABEL_98;
  }
  v13 = v10[35];
  if (v13 != 162)
  {
    v14 = 162;
    goto LABEL_98;
  }
  v13 = v10[36];
  if (v13 != 209)
  {
    v14 = 209;
    goto LABEL_98;
  }
  v13 = v10[37];
  if (v13 != 99)
  {
    v14 = 99;
    goto LABEL_98;
  }
  v13 = v10[38];
  if (v13 != 215)
  {
    v14 = 215;
    goto LABEL_98;
  }
  v13 = v10[39];
  if (v13 != 6)
  {
    v14 = 6;
LABEL_98:
    if (v14 >= v13)
      return result;
    goto LABEL_99;
  }
  v13 = v10[40];
  if (v13 != 182)
  {
    v14 = 182;
    goto LABEL_98;
  }
  return result;
}

uint64_t sub_22356A690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  const char *v12;
  const char *v13;
  size_t v14;
  unsigned __int8 v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  size_t v25;
  int v26;
  unint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  const char *v43;
  size_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  size_t v54;
  std::__shared_weak_count_vtbl *v55;
  std::__shared_weak_count *v56;
  size_t v57;
  size_t v58;
  _BYTE *v59;
  void *v60;
  int v61;
  int v62;
  unint64_t v63;
  uint64_t v64;
  const char *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unint64_t v71;
  uint64_t v72;
  const char *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  _QWORD *v82;
  uint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  const char *v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  uint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  std::__shared_weak_count *v113;
  unint64_t *v114;
  unint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  const char *v122;
  std::__shared_weak_count *v123;
  unint64_t *v124;
  unint64_t v125;
  unsigned __int8 v126;
  const char *v127;
  size_t v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  NSObject *v135;
  size_t v136;
  void *v137;
  _QWORD *v138;
  size_t v139;
  size_t v140;
  _BYTE *v141;
  void *v142;
  unsigned __int8 v143;
  uint64_t v144;
  const char *v145;
  NSObject *v146;
  const char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  _QWORD *v152;
  uint64_t v153;
  std::__shared_weak_count *v154;
  unint64_t *p_shared_owners;
  unint64_t v156;
  char *v157;
  unint64_t *v158;
  unint64_t v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  unsigned __int8 v164;
  uint64_t v165;
  const char *v166;
  NSObject *v167;
  const char *v168;
  unsigned __int8 v169;
  uint64_t v170;
  const char *v171;
  NSObject *v172;
  const char *v173;
  std::__shared_weak_count *v174;
  unint64_t *v175;
  unint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  const char *v182;
  uint64_t v183;
  std::__shared_weak_count *v184;
  unint64_t *v185;
  unint64_t v186;
  std::__shared_weak_count *v187;
  unint64_t *v188;
  unint64_t v189;
  uint64_t v190;
  std::__shared_weak_count *v191;
  unint64_t *v192;
  unint64_t v193;
  std::__shared_weak_count *v194;
  unint64_t *v195;
  unint64_t v196;
  std::__shared_weak_count *v197;
  unint64_t *v198;
  unint64_t v199;
  std::__shared_weak_count *v200;
  unint64_t *v201;
  unint64_t v202;
  const char *v203;
  std::__shared_weak_count *v204;
  unint64_t *v205;
  unint64_t v206;
  unsigned __int8 v207;
  uint64_t v208;
  const char *v209;
  NSObject *v210;
  const char *v211;
  uint64_t v213;
  const char *v214;
  uint64_t v215;
  int v216;
  const char *v217;
  unint64_t v218;
  int v219;
  __int128 v220;
  std::__shared_weak_count *rep;
  __int128 v222;
  int v223;
  const char *v224;
  uint64_t v225;
  std::__shared_weak_count *v226;
  int **v227;
  uint64_t v228[30];
  uint64_t v229[5];
  uint64_t v230[13];
  uint64_t v231[2];
  _QWORD v232[3];
  void *v233[2];
  char v234;
  _BYTE __dst[24];
  char *v236;
  std::__shared_weak_count *v237;
  _BYTE object[24];
  __int128 v239;
  void *__p[2];
  unint64_t v241;
  char v242;
  _BYTE v243[24];
  __int128 v244;
  char *v245;
  const char *v246;
  unint64_t v247;
  std::__shared_weak_count *v248;
  uint64_t v249[2];
  _BYTE v250[24];
  uint64_t v251;

  v251 = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a3 + 92);
  v7 = *(_BYTE *)(a3 + 385);
  v234 = 15;
  strcpy((char *)v233, "global_mesh.obj");
  v232[0] = a2;
  v232[1] = v233;
  v232[2] = a4;
  v231[0] = a2;
  v231[1] = a4;
  sub_223180698((uint64_t)v228, a1);
  object[0] = 0;
  if ((sub_22356C5FC(v232, v228, object) & 1) != 0)
  {
    v8 = v7 & v6;
    if ((v8 & 1) == 0)
    {
      if ((v8 & 0x10) == 0)
        goto LABEL_4;
      goto LABEL_21;
    }
    sub_223180698((uint64_t)object, a1);
    v243[0] = 1;
    if ((sub_22356C5FC(v232, (uint64_t *)object, v243) & 1) != 0)
    {
      *(_QWORD *)v243 = operator new(0x20uLL);
      *(_OWORD *)&v243[8] = xmmword_2245B8D00;
      strcpy(*(char **)v243, "global_mesh_semantics.txt");
      v16 = sub_22356DB7C(v231, (uint64_t *)v243, v229);
      v17 = v16;
      if ((v243[23] & 0x80000000) != 0)
      {
        operator delete(*(void **)v243);
        if (v17)
        {
LABEL_20:
          sub_22316F8F4((uint64_t *)object);
          if ((v8 & 0x10) == 0)
          {
LABEL_4:
            if ((v8 & 4) != 0)
            {
LABEL_5:
              sub_223180698((uint64_t)object, a1);
              v243[0] = 4;
              if ((sub_22356C5FC(v232, (uint64_t *)object, v243) & 1) != 0)
              {
                sub_22316F8F4((uint64_t *)object);
                v9 = 1;
                sub_22316F8F4(v228);
                if (v234 < 0)
                  goto LABEL_348;
                return v9;
              }
              sub_223565394(v249);
              if (**(int **)(v249[0] + 56) > 5)
                goto LABEL_346;
              v34 = *(unsigned __int8 *)(v249[0] + 72);
              v35 = sub_22322F254(v249[0], "OSLogSurrogateAppender", 1, 0);
              v36 = v35 ? v35 + 16 : 0;
              if (!v34 && !v35)
                goto LABEL_346;
              *(_QWORD *)&v220 = v249;
              *((std::chrono::steady_clock::time_point *)&v220 + 1) = std::chrono::steady_clock::now();
              rep = (std::__shared_weak_count *)std::chrono::system_clock::now().__d_.__rep_;
              LODWORD(v222) = 5;
              *((_QWORD *)&v222 + 1) = "unknown file";
              v223 = 538;
              v225 = 0;
              v226 = 0;
              v224 = "unknown function";
              if (*(char *)(a2 + 23) >= 0)
                v37 = (const char *)a2;
              else
                v37 = *(const char **)a2;
              v227 = (int **)v37;
              v38 = *(_QWORD *)v220;
              v39 = (uint64_t *)(*(_QWORD *)v220 + 16);
              if (*(char *)(*(_QWORD *)v220 + 39) < 0)
              {
                v41 = *(_QWORD *)(v38 + 16);
                v40 = *(_QWORD *)(v38 + 24);
              }
              else
              {
                v40 = *(unsigned __int8 *)(*(_QWORD *)v220 + 39);
                v41 = *(_QWORD *)v220 + 16;
              }
              *(_QWORD *)v250 = v41;
              *(_QWORD *)&v250[8] = v40;
              v169 = atomic_load((unsigned __int8 *)&qword_255788F58);
              if ((v169 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
              {
                sub_224568628((uint64_t)v243);
                sub_223199C58("com.apple.cv3d", (unint64_t)v243, &xmmword_255788F40);
                if ((_BYTE)v244 && (v243[23] & 0x80000000) != 0)
                  operator delete(*(void **)v243);
                __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
                __cxa_guard_release(&qword_255788F58);
              }
              v170 = byte_255788F57;
              if (byte_255788F57 >= 0)
              {
                v171 = (const char *)&xmmword_255788F40;
              }
              else
              {
                v170 = *((_QWORD *)&xmmword_255788F40 + 1);
                v171 = (const char *)xmmword_255788F40;
              }
              *(_QWORD *)__dst = v171;
              *(_QWORD *)&__dst[8] = v170;
              *(_QWORD *)v243 = os_log_create(v171, *(const char **)v250);
              sub_223199D38(&v243[8], (uint64_t)__dst);
              sub_223199D38(&v245, (uint64_t)v250);
              v172 = *(NSObject **)v243;
              sub_223199BDC((uint64_t)v243);
              sub_223570EA4(v36, v39, v172, OS_LOG_TYPE_ERROR, (const char **)&v227);
              if (v34)
              {
                if (*(char *)(a2 + 23) >= 0)
                  v173 = (const char *)a2;
                else
                  v173 = *(const char **)a2;
                sub_22322C138((uint64_t)&v220, "Error saving color mesh to %s", v173);
                sub_223182C08((uint64_t)&v220);
              }
LABEL_345:
              sub_223182DAC((uint64_t)&v220);
LABEL_346:
              sub_22316F8F4((uint64_t *)object);
              goto LABEL_347;
            }
LABEL_26:
            v9 = 1;
            sub_22316F8F4(v228);
            if (v234 < 0)
              goto LABEL_348;
            return v9;
          }
LABEL_21:
          sub_223180698((uint64_t)object, a1);
          v243[0] = 16;
          if ((sub_22356C5FC(v232, (uint64_t *)object, v243) & 1) == 0)
          {
            sub_223565394(v249);
            if (**(int **)(v249[0] + 56) > 5)
              goto LABEL_346;
            v26 = *(unsigned __int8 *)(v249[0] + 72);
            v27 = sub_22322F254(v249[0], "OSLogSurrogateAppender", 1, 0);
            v28 = v27 ? v27 + 16 : 0;
            if (!v26 && !v27)
              goto LABEL_346;
            *(_QWORD *)&v220 = v249;
            *((std::chrono::steady_clock::time_point *)&v220 + 1) = std::chrono::steady_clock::now();
            rep = (std::__shared_weak_count *)std::chrono::system_clock::now().__d_.__rep_;
            LODWORD(v222) = 5;
            *((_QWORD *)&v222 + 1) = "unknown file";
            v223 = 526;
            v225 = 0;
            v226 = 0;
            v224 = "unknown function";
            if (*(char *)(a2 + 23) >= 0)
              v29 = (const char *)a2;
            else
              v29 = *(const char **)a2;
            v227 = (int **)v29;
            v30 = *(_QWORD *)v220;
            v31 = (uint64_t *)(*(_QWORD *)v220 + 16);
            if (*(char *)(*(_QWORD *)v220 + 39) < 0)
            {
              v33 = *(_QWORD *)(v30 + 16);
              v32 = *(_QWORD *)(v30 + 24);
            }
            else
            {
              v32 = *(unsigned __int8 *)(*(_QWORD *)v220 + 39);
              v33 = *(_QWORD *)v220 + 16;
            }
            *(_QWORD *)v250 = v33;
            *(_QWORD *)&v250[8] = v32;
            v143 = atomic_load((unsigned __int8 *)&qword_255788F58);
            if ((v143 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
            {
              sub_224568628((uint64_t)v243);
              sub_223199C58("com.apple.cv3d", (unint64_t)v243, &xmmword_255788F40);
              if ((_BYTE)v244 && (v243[23] & 0x80000000) != 0)
                operator delete(*(void **)v243);
              __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
              __cxa_guard_release(&qword_255788F58);
            }
            v144 = byte_255788F57;
            if (byte_255788F57 >= 0)
            {
              v145 = (const char *)&xmmword_255788F40;
            }
            else
            {
              v144 = *((_QWORD *)&xmmword_255788F40 + 1);
              v145 = (const char *)xmmword_255788F40;
            }
            *(_QWORD *)__dst = v145;
            *(_QWORD *)&__dst[8] = v144;
            *(_QWORD *)v243 = os_log_create(v145, *(const char **)v250);
            sub_223199D38(&v243[8], (uint64_t)__dst);
            sub_223199D38(&v245, (uint64_t)v250);
            v146 = *(NSObject **)v243;
            sub_223199BDC((uint64_t)v243);
            sub_22357029C(v28, v31, v146, OS_LOG_TYPE_ERROR, (const char **)&v227);
            if (v26)
            {
              if (*(char *)(a2 + 23) >= 0)
                v147 = (const char *)a2;
              else
                v147 = *(const char **)a2;
              sub_22322C138((uint64_t)&v220, "Error saving material mesh to %s", v147);
              sub_223182C08((uint64_t)&v220);
            }
            goto LABEL_345;
          }
          *(_QWORD *)v243 = operator new(0x20uLL);
          *(_OWORD *)&v243[8] = xmmword_2245B8D00;
          strcpy(*(char **)v243, "global_mesh_materials.txt");
          v18 = sub_22356DB7C(v231, (uint64_t *)v243, v230);
          if ((v243[23] & 0x80000000) != 0)
            operator delete(*(void **)v243);
          if (!v18)
          {
            sub_223565394(v249);
            if (**(int **)(v249[0] + 56) > 5)
              goto LABEL_346;
            v70 = *(unsigned __int8 *)(v249[0] + 72);
            v71 = sub_22322F254(v249[0], "OSLogSurrogateAppender", 1, 0);
            v72 = v71 ? v71 + 16 : 0;
            if (!v70 && !v71)
              goto LABEL_346;
            *(_QWORD *)&v220 = v249;
            *((std::chrono::steady_clock::time_point *)&v220 + 1) = std::chrono::steady_clock::now();
            rep = (std::__shared_weak_count *)std::chrono::system_clock::now().__d_.__rep_;
            LODWORD(v222) = 5;
            *((_QWORD *)&v222 + 1) = "unknown file";
            v223 = 530;
            v225 = 0;
            v226 = 0;
            v224 = "unknown function";
            if (*(char *)(a2 + 23) >= 0)
              v73 = (const char *)a2;
            else
              v73 = *(const char **)a2;
            v227 = (int **)v73;
            v74 = *(_QWORD *)v220;
            v75 = (uint64_t *)(*(_QWORD *)v220 + 16);
            if (*(char *)(*(_QWORD *)v220 + 39) < 0)
            {
              v77 = *(_QWORD *)(v74 + 16);
              v76 = *(_QWORD *)(v74 + 24);
            }
            else
            {
              v76 = *(unsigned __int8 *)(*(_QWORD *)v220 + 39);
              v77 = *(_QWORD *)v220 + 16;
            }
            *(_QWORD *)v250 = v77;
            *(_QWORD *)&v250[8] = v76;
            v207 = atomic_load((unsigned __int8 *)&qword_255788F58);
            if ((v207 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
            {
              sub_224568628((uint64_t)v243);
              sub_223199C58("com.apple.cv3d", (unint64_t)v243, &xmmword_255788F40);
              if ((_BYTE)v244 && (v243[23] & 0x80000000) != 0)
                operator delete(*(void **)v243);
              __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
              __cxa_guard_release(&qword_255788F58);
            }
            v208 = byte_255788F57;
            if (byte_255788F57 >= 0)
            {
              v209 = (const char *)&xmmword_255788F40;
            }
            else
            {
              v208 = *((_QWORD *)&xmmword_255788F40 + 1);
              v209 = (const char *)xmmword_255788F40;
            }
            *(_QWORD *)__dst = v209;
            *(_QWORD *)&__dst[8] = v208;
            *(_QWORD *)v243 = os_log_create(v209, *(const char **)v250);
            sub_223199D38(&v243[8], (uint64_t)__dst);
            sub_223199D38(&v245, (uint64_t)v250);
            v210 = *(NSObject **)v243;
            sub_223199BDC((uint64_t)v243);
            sub_2235708A0(v72, v75, v210, OS_LOG_TYPE_ERROR, (const char **)&v227);
            if (v70)
            {
              if (*(char *)(a2 + 23) >= 0)
                v211 = (const char *)a2;
              else
                v211 = *(const char **)a2;
              sub_22322C138((uint64_t)&v220, "Error saving material labels to %s", v211);
              sub_223182C08((uint64_t)&v220);
            }
            goto LABEL_345;
          }
          sub_22316F8F4((uint64_t *)object);
          if ((v8 & 4) != 0)
            goto LABEL_5;
          goto LABEL_26;
        }
      }
      else if (v16)
      {
        goto LABEL_20;
      }
      sub_223565394(v249);
      if (**(int **)(v249[0] + 56) > 5)
        goto LABEL_346;
      v62 = *(unsigned __int8 *)(v249[0] + 72);
      v63 = sub_22322F254(v249[0], "OSLogSurrogateAppender", 1, 0);
      v64 = v63 ? v63 + 16 : 0;
      if (!v62 && !v63)
        goto LABEL_346;
      *(_QWORD *)&v220 = v249;
      *((std::chrono::steady_clock::time_point *)&v220 + 1) = std::chrono::steady_clock::now();
      rep = (std::__shared_weak_count *)std::chrono::system_clock::now().__d_.__rep_;
      LODWORD(v222) = 5;
      *((_QWORD *)&v222 + 1) = "unknown file";
      v223 = 518;
      v225 = 0;
      v226 = 0;
      v224 = "unknown function";
      if (*(char *)(a2 + 23) >= 0)
        v65 = (const char *)a2;
      else
        v65 = *(const char **)a2;
      v227 = (int **)v65;
      v66 = *(_QWORD *)v220;
      v67 = (uint64_t *)(*(_QWORD *)v220 + 16);
      if (*(char *)(*(_QWORD *)v220 + 39) < 0)
      {
        v69 = *(_QWORD *)(v66 + 16);
        v68 = *(_QWORD *)(v66 + 24);
      }
      else
      {
        v68 = *(unsigned __int8 *)(*(_QWORD *)v220 + 39);
        v69 = *(_QWORD *)v220 + 16;
      }
      *(_QWORD *)v250 = v69;
      *(_QWORD *)&v250[8] = v68;
      v164 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v164 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
      {
        sub_224568628((uint64_t)v243);
        sub_223199C58("com.apple.cv3d", (unint64_t)v243, &xmmword_255788F40);
        if ((_BYTE)v244 && (v243[23] & 0x80000000) != 0)
          operator delete(*(void **)v243);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
        __cxa_guard_release(&qword_255788F58);
      }
      v165 = byte_255788F57;
      if (byte_255788F57 >= 0)
      {
        v166 = (const char *)&xmmword_255788F40;
      }
      else
      {
        v165 = *((_QWORD *)&xmmword_255788F40 + 1);
        v166 = (const char *)xmmword_255788F40;
      }
      *(_QWORD *)__dst = v166;
      *(_QWORD *)&__dst[8] = v165;
      *(_QWORD *)v243 = os_log_create(v166, *(const char **)v250);
      sub_223199D38(&v243[8], (uint64_t)__dst);
      sub_223199D38(&v245, (uint64_t)v250);
      v167 = *(NSObject **)v243;
      sub_223199BDC((uint64_t)v243);
      sub_22356FC98(v64, v67, v167, OS_LOG_TYPE_ERROR, (const char **)&v227);
      if (v62)
      {
        if (*(char *)(a2 + 23) >= 0)
          v168 = (const char *)a2;
        else
          v168 = *(const char **)a2;
        sub_22322C138((uint64_t)&v220, "Error saving semantics labels to %s", v168);
        sub_223182C08((uint64_t)&v220);
      }
      goto LABEL_345;
    }
    sub_223565394(&v227);
    if (*v227[7] > 5)
      goto LABEL_346;
    v19 = *((unsigned __int8 *)v227 + 72);
    v20 = sub_22322F254((uint64_t)v227, "OSLogSurrogateAppender", 1, 0);
    v21 = v20;
    if (!v19 && !v20)
      goto LABEL_346;
    *(_QWORD *)&v220 = &v227;
    *((std::chrono::steady_clock::time_point *)&v220 + 1) = std::chrono::steady_clock::now();
    rep = (std::__shared_weak_count *)std::chrono::system_clock::now().__d_.__rep_;
    LODWORD(v222) = 5;
    *((_QWORD *)&v222 + 1) = "unknown file";
    v223 = 514;
    v225 = 0;
    v226 = 0;
    v224 = "unknown function";
    if (*(char *)(a2 + 23) >= 0)
      v22 = (const char *)a2;
    else
      v22 = *(const char **)a2;
    v23 = *(_QWORD *)v220;
    v24 = (const char *)(*(_QWORD *)v220 + 16);
    v215 = *(_QWORD *)v220;
    v217 = v24;
    if (*(char *)(*(_QWORD *)v220 + 39) < 0)
    {
      v24 = *(const char **)(v23 + 16);
      v25 = *(_QWORD *)(v23 + 24);
    }
    else
    {
      v25 = *(unsigned __int8 *)(*(_QWORD *)v220 + 39);
    }
    v219 = v19;
    v126 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v126 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)v243);
      sub_223199C58("com.apple.cv3d", (unint64_t)v243, &xmmword_255788F40);
      if ((_BYTE)v244 && (v243[23] & 0x80000000) != 0)
        operator delete(*(void **)v243);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
    }
    if (byte_255788F57 >= 0)
      v127 = (const char *)&xmmword_255788F40;
    else
      v127 = (const char *)xmmword_255788F40;
    if (byte_255788F57 >= 0)
      v128 = byte_255788F57;
    else
      v128 = *((_QWORD *)&xmmword_255788F40 + 1);
    *(_QWORD *)v243 = os_log_create(v127, v24);
    v129 = &v243[8];
    if (v128 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    if (v128 >= 0x17)
    {
      v130 = (v128 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v128 | 7) != 0x17)
        v130 = v128 | 7;
      v131 = v130 + 1;
      v129 = operator new(v130 + 1);
      *(_QWORD *)&v243[16] = v128;
      *(_QWORD *)&v244 = v131 | 0x8000000000000000;
      *(_QWORD *)&v243[8] = v129;
    }
    else
    {
      BYTE7(v244) = v128;
      if (!v128)
      {
LABEL_209:
        v129[v128] = 0;
        BYTE8(v244) = 1;
        v132 = (char *)&v245;
        if (v25 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v25 >= 0x17)
        {
          v133 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v25 | 7) != 0x17)
            v133 = v25 | 7;
          v134 = v133 + 1;
          v132 = (char *)operator new(v133 + 1);
          v246 = (const char *)v25;
          v247 = v134 | 0x8000000000000000;
          v245 = v132;
        }
        else
        {
          HIBYTE(v247) = v25;
          if (!v25)
          {
LABEL_217:
            v132[v25] = 0;
            LOBYTE(v248) = 1;
            v135 = *(NSObject **)v243;
            if (SHIBYTE(v247) < 0)
              operator delete(v245);
            if (BYTE8(v244) && SBYTE7(v244) < 0)
              operator delete(*(void **)&v243[8]);
            if (*(_QWORD *)v243)
              os_release(*(void **)v243);
            if (!v21 || !*(_QWORD *)(v21 + 24))
            {
              os_log_type_enabled(v135, OS_LOG_TYPE_ERROR);
              *(_DWORD *)v243 = 136315138;
              *(_QWORD *)&v243[4] = v22;
              v142 = (void *)_os_log_send_and_compose_impl();
              if (v142)
                free(v142);
              goto LABEL_325;
            }
            v136 = _os_log_pack_size();
            v137 = operator new(v136, (std::align_val_t)8uLL);
            v138 = (_QWORD *)operator new();
            *v138 = &off_24EC1F7F0;
            v138[1] = 0;
            v138[2] = 0;
            v138[3] = v137;
            *(_QWORD *)__dst = v137;
            *(_QWORD *)&__dst[8] = v137;
            v237 = 0;
            *(_QWORD *)&__dst[16] = v138;
            v236 = 0;
            v139 = strlen(v22);
            if (v139 > 0x7FFFFFFFFFFFFFF7)
              sub_22316DBC0();
            v140 = v139;
            if (v139 >= 0x17)
            {
              v148 = (v139 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v139 | 7) != 0x17)
                v148 = v139 | 7;
              v149 = v148 + 1;
              v141 = operator new(v148 + 1);
              *(_QWORD *)&v250[8] = v140;
              *(_QWORD *)&v250[16] = v149 | 0x8000000000000000;
              *(_QWORD *)v250 = v141;
            }
            else
            {
              v250[23] = v139;
              v141 = v250;
              if (!v139)
              {
LABEL_246:
                v141[v140] = 0;
                v150 = *(_QWORD *)v250;
                v249[0] = *(_QWORD *)&v250[8];
                *(uint64_t *)((char *)v249 + 7) = *(_QWORD *)&v250[15];
                v151 = v250[23];
                v152 = operator new(0x38uLL);
                v152[1] = 0;
                v152[2] = 0;
                v152[3] = off_24EC1FA48;
                *v152 = &off_24EC1F9F8;
                v153 = v249[0];
                v152[4] = v150;
                v152[5] = v153;
                *(_QWORD *)((char *)v152 + 47) = *(uint64_t *)((char *)v249 + 7);
                *((_BYTE *)v152 + 55) = v151;
                memset(v249, 0, 15);
                v154 = v237;
                v236 = (char *)(v152 + 3);
                v237 = (std::__shared_weak_count *)v152;
                if (v154)
                {
                  p_shared_owners = (unint64_t *)&v154->__shared_owners_;
                  do
                    v156 = __ldaxr(p_shared_owners);
                  while (__stlxr(v156 - 1, p_shared_owners));
                  if (!v156)
                  {
                    ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
                    std::__shared_weak_count::__release_weak(v154);
                  }
                }
                *(_OWORD *)v243 = *(_OWORD *)__dst;
                v157 = v236;
                *(_QWORD *)&v243[16] = *(_QWORD *)&__dst[16];
                if (*(_QWORD *)&__dst[16])
                {
                  v158 = (unint64_t *)(*(_QWORD *)&__dst[16] + 8);
                  do
                    v159 = __ldxr(v158);
                  while (__stxr(v159 + 1, v158));
                }
                v160 = v237;
                *(_QWORD *)&v244 = v157;
                *((_QWORD *)&v244 + 1) = v237;
                if (v237)
                {
                  v161 = (unint64_t *)&v237->__shared_owners_;
                  do
                    v162 = __ldxr(v161);
                  while (__stxr(v162 + 1, v161));
                  v245 = v157;
                  do
                    v163 = __ldaxr(v161);
                  while (__stlxr(v163 - 1, v161));
                  if (!v163)
                  {
                    ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
                    std::__shared_weak_count::__release_weak(v160);
                  }
                }
                else
                {
                  v245 = v157;
                }
                v174 = *(std::__shared_weak_count **)&__dst[16];
                if (*(_QWORD *)&__dst[16])
                {
                  v175 = (unint64_t *)(*(_QWORD *)&__dst[16] + 8);
                  do
                    v176 = __ldaxr(v175);
                  while (__stlxr(v176 - 1, v175));
                  if (!v176)
                  {
                    ((void (*)(std::__shared_weak_count *))v174->__on_zero_shared)(v174);
                    std::__shared_weak_count::__release_weak(v174);
                  }
                }
                v177 = *(_QWORD *)v243;
                if (v245[31] >= 0)
                  v178 = v245 + 8;
                else
                  v178 = (char *)*((_QWORD *)v245 + 1);
                v179 = _os_log_pack_fill();
                *(_DWORD *)v179 = 136315138;
                *(_QWORD *)(v179 + 4) = v178;
                v180 = operator new();
                v181 = *(unsigned __int8 *)(v215 + 39);
                v182 = v217;
                if ((v181 & 0x80u) != 0)
                {
                  v182 = *(const char **)(v215 + 16);
                  v181 = *(_QWORD *)(v215 + 24);
                }
                *(_QWORD *)v180 = v177;
                *(_OWORD *)(v180 + 8) = *(_OWORD *)&v243[8];
                *(_QWORD *)&v243[8] = 0;
                *(_QWORD *)&v243[16] = 0;
                *(_OWORD *)(v180 + 24) = v244;
                v244 = 0uLL;
                *(_QWORD *)(v180 + 40) = v182;
                *(_QWORD *)(v180 + 48) = v181;
                *(_BYTE *)(v180 + 56) = 16;
                *(_QWORD *)v250 = 0;
                *(_QWORD *)__dst = v180;
                (*(void (**)(_QWORD, _BYTE *))(**(_QWORD **)(v21 + 24) + 40))(*(_QWORD *)(v21 + 24), __dst);
                v183 = *(_QWORD *)__dst;
                *(_QWORD *)__dst = 0;
                if (v183)
                {
                  v184 = *(std::__shared_weak_count **)(v183 + 32);
                  if (v184)
                  {
                    v185 = (unint64_t *)&v184->__shared_owners_;
                    do
                      v186 = __ldaxr(v185);
                    while (__stlxr(v186 - 1, v185));
                    if (!v186)
                    {
                      ((void (*)(std::__shared_weak_count *))v184->__on_zero_shared)(v184);
                      std::__shared_weak_count::__release_weak(v184);
                    }
                  }
                  v187 = *(std::__shared_weak_count **)(v183 + 16);
                  if (v187)
                  {
                    v188 = (unint64_t *)&v187->__shared_owners_;
                    do
                      v189 = __ldaxr(v188);
                    while (__stlxr(v189 - 1, v188));
                    if (!v189)
                    {
                      ((void (*)(std::__shared_weak_count *))v187->__on_zero_shared)(v187);
                      std::__shared_weak_count::__release_weak(v187);
                    }
                  }
                  MEMORY[0x227684CE8](v183, 0x10F0C40B62ED6C6);
                  v190 = *(_QWORD *)v250;
                  *(_QWORD *)v250 = 0;
                  if (v190)
                  {
                    v191 = *(std::__shared_weak_count **)(v190 + 32);
                    if (v191)
                    {
                      v192 = (unint64_t *)&v191->__shared_owners_;
                      do
                        v193 = __ldaxr(v192);
                      while (__stlxr(v193 - 1, v192));
                      if (!v193)
                      {
                        ((void (*)(std::__shared_weak_count *))v191->__on_zero_shared)(v191);
                        std::__shared_weak_count::__release_weak(v191);
                      }
                    }
                    v194 = *(std::__shared_weak_count **)(v190 + 16);
                    if (v194)
                    {
                      v195 = (unint64_t *)&v194->__shared_owners_;
                      do
                        v196 = __ldaxr(v195);
                      while (__stlxr(v196 - 1, v195));
                      if (!v196)
                      {
                        ((void (*)(std::__shared_weak_count *))v194->__on_zero_shared)(v194);
                        std::__shared_weak_count::__release_weak(v194);
                      }
                    }
                    MEMORY[0x227684CE8](v190, 0x10F0C40B62ED6C6);
                  }
                }
                v197 = (std::__shared_weak_count *)*((_QWORD *)&v244 + 1);
                v19 = v219;
                if (*((_QWORD *)&v244 + 1))
                {
                  v198 = (unint64_t *)(*((_QWORD *)&v244 + 1) + 8);
                  do
                    v199 = __ldaxr(v198);
                  while (__stlxr(v199 - 1, v198));
                  if (!v199)
                  {
                    ((void (*)(std::__shared_weak_count *))v197->__on_zero_shared)(v197);
                    std::__shared_weak_count::__release_weak(v197);
                  }
                }
                v200 = *(std::__shared_weak_count **)&v243[16];
                if (*(_QWORD *)&v243[16])
                {
                  v201 = (unint64_t *)(*(_QWORD *)&v243[16] + 8);
                  do
                    v202 = __ldaxr(v201);
                  while (__stlxr(v202 - 1, v201));
                  if (!v202)
                  {
                    ((void (*)(std::__shared_weak_count *))v200->__on_zero_shared)(v200);
                    std::__shared_weak_count::__release_weak(v200);
                  }
                }
LABEL_325:
                if (v19)
                {
                  if (*(char *)(a2 + 23) >= 0)
                    v203 = (const char *)a2;
                  else
                    v203 = *(const char **)a2;
                  sub_22322C138((uint64_t)&v220, "Error saving semantics mesh to %s", v203);
                  sub_223182C08((uint64_t)&v220);
                }
                sub_223182C08((uint64_t)&v220);
                v204 = v226;
                if (v226)
                {
                  v205 = (unint64_t *)&v226->__shared_owners_;
                  do
                    v206 = __ldaxr(v205);
                  while (__stlxr(v206 - 1, v205));
                  if (!v206)
                  {
                    ((void (*)(std::__shared_weak_count *))v204->__on_zero_shared)(v204);
                    std::__shared_weak_count::__release_weak(v204);
                  }
                }
                goto LABEL_346;
              }
            }
            memcpy(v141, v22, v140);
            goto LABEL_246;
          }
        }
        memmove(v132, v24, v25);
        goto LABEL_217;
      }
    }
    memmove(v129, v127, v128);
    goto LABEL_209;
  }
  sub_223565394(v249);
  if (**(int **)(v249[0] + 56) <= 5)
  {
    v10 = *(unsigned __int8 *)(v249[0] + 72);
    v11 = sub_22322F254(v249[0], "OSLogSurrogateAppender", 1, 0);
    if (v10 || v11)
    {
      v218 = v11;
      *(_QWORD *)v243 = v249;
      *(std::chrono::steady_clock::time_point *)&v243[8] = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&v243[16] = std::chrono::system_clock::now();
      LODWORD(v244) = 5;
      *((_QWORD *)&v244 + 1) = "unknown file";
      LODWORD(v245) = 507;
      v247 = 0;
      v248 = 0;
      v246 = "unknown function";
      if (*(char *)(a2 + 23) >= 0)
        v12 = (const char *)a2;
      else
        v12 = *(const char **)a2;
      v13 = (const char *)(**(_QWORD **)v243 + 16);
      v213 = **(_QWORD **)v243;
      v214 = v13;
      if (*(char *)(**(_QWORD **)v243 + 39) < 0)
      {
        v13 = *(const char **)(v213 + 16);
        v14 = *(_QWORD *)(v213 + 24);
        v216 = v10;
        v42 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v42 & 1) != 0)
          goto LABEL_59;
      }
      else
      {
        v14 = *(unsigned __int8 *)(**(_QWORD **)v243 + 39);
        v216 = v10;
        v15 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v15 & 1) != 0)
          goto LABEL_59;
      }
      if (__cxa_guard_acquire(&qword_255788F58))
      {
        sub_224568628((uint64_t)object);
        sub_223199C58("com.apple.cv3d", (unint64_t)object, &xmmword_255788F40);
        if ((_BYTE)v239 && (object[23] & 0x80000000) != 0)
          operator delete(*(void **)object);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
        __cxa_guard_release(&qword_255788F58);
      }
LABEL_59:
      if (byte_255788F57 >= 0)
        v43 = (const char *)&xmmword_255788F40;
      else
        v43 = (const char *)xmmword_255788F40;
      if (byte_255788F57 >= 0)
        v44 = byte_255788F57;
      else
        v44 = *((_QWORD *)&xmmword_255788F40 + 1);
      *(_QWORD *)object = os_log_create(v43, v13);
      v45 = &object[8];
      if (v44 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v44 >= 0x17)
      {
        v46 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v44 | 7) != 0x17)
          v46 = v44 | 7;
        v47 = v46 + 1;
        v45 = operator new(v46 + 1);
        *(_QWORD *)&v239 = v47 | 0x8000000000000000;
        *(_QWORD *)&object[8] = v45;
        *(_QWORD *)&object[16] = v44;
      }
      else
      {
        BYTE7(v239) = v44;
        if (!v44)
        {
LABEL_73:
          v45[v44] = 0;
          BYTE8(v239) = 1;
          v48 = __p;
          if (v14 > 0x7FFFFFFFFFFFFFF7)
            sub_22316DBC0();
          v49 = v12;
          if (v14 >= 0x17)
          {
            v51 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v14 | 7) != 0x17)
              v51 = v14 | 7;
            v52 = v51 + 1;
            v50 = v218;
            v48 = operator new(v51 + 1);
            v241 = v52 | 0x8000000000000000;
            __p[0] = v48;
            __p[1] = (void *)v14;
          }
          else
          {
            HIBYTE(v241) = v14;
            v50 = v218;
            if (!v14)
            {
LABEL_81:
              *((_BYTE *)v48 + v14) = 0;
              v242 = 1;
              v53 = *(NSObject **)object;
              if (SHIBYTE(v241) < 0)
                operator delete(__p[0]);
              if (BYTE8(v239) && SBYTE7(v239) < 0)
                operator delete(*(void **)&object[8]);
              if (*(_QWORD *)object)
                os_release(*(void **)object);
              if (!v50 || !*(_QWORD *)(v50 + 24))
              {
                os_log_type_enabled(v53, OS_LOG_TYPE_ERROR);
                *(_DWORD *)object = 136315138;
                *(_QWORD *)&object[4] = v49;
                v60 = (void *)_os_log_send_and_compose_impl();
                v61 = v216;
                if (v60)
                  free(v60);
                goto LABEL_183;
              }
              v54 = _os_log_pack_size();
              v55 = (std::__shared_weak_count_vtbl *)operator new(v54, (std::align_val_t)8uLL);
              v56 = (std::__shared_weak_count *)operator new();
              v56->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
              v56->__shared_owners_ = 0;
              v56->__shared_weak_owners_ = 0;
              v56[1].__vftable = v55;
              *(_QWORD *)&v220 = v55;
              *((_QWORD *)&v220 + 1) = v55;
              v222 = 0uLL;
              rep = v56;
              v57 = strlen(v49);
              if (v57 > 0x7FFFFFFFFFFFFFF7)
                sub_22316DBC0();
              v58 = v57;
              if (v57 >= 0x17)
              {
                v78 = (v57 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v57 | 7) != 0x17)
                  v78 = v57 | 7;
                v79 = v78 + 1;
                v59 = operator new(v78 + 1);
                *(_QWORD *)&__dst[16] = v79 | 0x8000000000000000;
                *(_QWORD *)__dst = v59;
                *(_QWORD *)&__dst[8] = v58;
              }
              else
              {
                __dst[23] = v57;
                v59 = __dst;
                if (!v57)
                {
LABEL_123:
                  v59[v58] = 0;
                  *(_QWORD *)v250 = *(_QWORD *)&__dst[8];
                  v80 = *(_QWORD *)__dst;
                  *(_QWORD *)&v250[7] = *(_QWORD *)&__dst[15];
                  v81 = __dst[23];
                  v82 = operator new(0x38uLL);
                  v82[1] = 0;
                  v82[2] = 0;
                  v82[3] = off_24EC1FA48;
                  *v82 = &off_24EC1F9F8;
                  v83 = *(_QWORD *)v250;
                  v82[4] = v80;
                  v82[5] = v83;
                  *(_QWORD *)((char *)v82 + 47) = *(_QWORD *)&v250[7];
                  *((_BYTE *)v82 + 55) = v81;
                  *(_QWORD *)v250 = 0;
                  *(_QWORD *)&v250[7] = 0;
                  v84 = (std::__shared_weak_count *)*((_QWORD *)&v222 + 1);
                  *(_QWORD *)&v222 = v82 + 3;
                  *((_QWORD *)&v222 + 1) = v82;
                  if (v84)
                  {
                    v85 = (unint64_t *)&v84->__shared_owners_;
                    do
                      v86 = __ldaxr(v85);
                    while (__stlxr(v86 - 1, v85));
                    if (!v86)
                    {
                      ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
                      std::__shared_weak_count::__release_weak(v84);
                    }
                  }
                  *(_OWORD *)object = v220;
                  *(_QWORD *)&object[16] = rep;
                  if (rep)
                  {
                    v87 = &rep->__shared_owners_;
                    do
                      v88 = __ldxr((unint64_t *)v87);
                    while (__stxr(v88 + 1, (unint64_t *)v87));
                  }
                  v239 = v222;
                  if (*((_QWORD *)&v222 + 1))
                  {
                    v89 = (unint64_t *)(*((_QWORD *)&v222 + 1) + 8);
                    do
                      v90 = __ldxr(v89);
                    while (__stxr(v90 + 1, v89));
                    __p[0] = (void *)v222;
                    do
                      v91 = __ldaxr(v89);
                    while (__stlxr(v91 - 1, v89));
                    if (!v91)
                    {
                      (*(void (**)(_QWORD))(**((_QWORD **)&v222 + 1) + 16))(*((_QWORD *)&v222 + 1));
                      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v222 + 1));
                    }
                  }
                  else
                  {
                    __p[0] = (void *)v222;
                  }
                  if (rep)
                  {
                    v92 = &rep->__shared_owners_;
                    do
                      v93 = __ldaxr((unint64_t *)v92);
                    while (__stlxr(v93 - 1, (unint64_t *)v92));
                    if (!v93)
                    {
                      ((void (*)(std::__shared_weak_count *))rep->__on_zero_shared)(rep);
                      std::__shared_weak_count::__release_weak(rep);
                    }
                  }
                  v94 = *(_QWORD *)object;
                  if (*((char *)__p[0] + 31) >= 0)
                    v95 = (char *)__p[0] + 8;
                  else
                    v95 = (char *)*((_QWORD *)__p[0] + 1);
                  v96 = _os_log_pack_fill();
                  *(_DWORD *)v96 = 136315138;
                  *(_QWORD *)(v96 + 4) = v95;
                  v97 = operator new();
                  v98 = *(unsigned __int8 *)(v213 + 39);
                  v99 = *(const char **)(v213 + 16);
                  v100 = *(_QWORD *)(v213 + 24);
                  v101 = v239;
                  *(_OWORD *)(v97 + 8) = *(_OWORD *)&object[8];
                  if ((v98 & 0x80u) != 0)
                    v98 = v100;
                  else
                    v99 = v214;
                  *(_QWORD *)v97 = v94;
                  *(_QWORD *)&object[8] = 0;
                  *(_QWORD *)&object[16] = 0;
                  *(_OWORD *)(v97 + 24) = v101;
                  v239 = 0uLL;
                  *(_QWORD *)(v97 + 40) = v99;
                  *(_QWORD *)(v97 + 48) = v98;
                  *(_BYTE *)(v97 + 56) = 16;
                  *(_QWORD *)__dst = 0;
                  *(_QWORD *)&v220 = v97;
                  (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v50 + 24) + 40))(*(_QWORD *)(v50 + 24), &v220);
                  v102 = v220;
                  *(_QWORD *)&v220 = 0;
                  if (v102)
                  {
                    v103 = *(std::__shared_weak_count **)(v102 + 32);
                    if (v103)
                    {
                      v104 = (unint64_t *)&v103->__shared_owners_;
                      do
                        v105 = __ldaxr(v104);
                      while (__stlxr(v105 - 1, v104));
                      if (!v105)
                      {
                        ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
                        std::__shared_weak_count::__release_weak(v103);
                      }
                    }
                    v106 = *(std::__shared_weak_count **)(v102 + 16);
                    if (v106)
                    {
                      v107 = (unint64_t *)&v106->__shared_owners_;
                      do
                        v108 = __ldaxr(v107);
                      while (__stlxr(v108 - 1, v107));
                      if (!v108)
                      {
                        ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
                        std::__shared_weak_count::__release_weak(v106);
                      }
                    }
                    MEMORY[0x227684CE8](v102, 0x10F0C40B62ED6C6);
                    v109 = *(_QWORD *)__dst;
                    *(_QWORD *)__dst = 0;
                    if (v109)
                    {
                      v110 = *(std::__shared_weak_count **)(v109 + 32);
                      if (v110)
                      {
                        v111 = (unint64_t *)&v110->__shared_owners_;
                        do
                          v112 = __ldaxr(v111);
                        while (__stlxr(v112 - 1, v111));
                        if (!v112)
                        {
                          ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
                          std::__shared_weak_count::__release_weak(v110);
                        }
                      }
                      v113 = *(std::__shared_weak_count **)(v109 + 16);
                      if (v113)
                      {
                        v114 = (unint64_t *)&v113->__shared_owners_;
                        do
                          v115 = __ldaxr(v114);
                        while (__stlxr(v115 - 1, v114));
                        if (!v115)
                        {
                          ((void (*)(std::__shared_weak_count *))v113->__on_zero_shared)(v113);
                          std::__shared_weak_count::__release_weak(v113);
                        }
                      }
                      MEMORY[0x227684CE8](v109, 0x10F0C40B62ED6C6);
                    }
                  }
                  v116 = (std::__shared_weak_count *)*((_QWORD *)&v239 + 1);
                  v61 = v216;
                  if (*((_QWORD *)&v239 + 1))
                  {
                    v117 = (unint64_t *)(*((_QWORD *)&v239 + 1) + 8);
                    do
                      v118 = __ldaxr(v117);
                    while (__stlxr(v118 - 1, v117));
                    if (!v118)
                    {
                      ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
                      std::__shared_weak_count::__release_weak(v116);
                    }
                  }
                  v119 = *(std::__shared_weak_count **)&object[16];
                  if (*(_QWORD *)&object[16])
                  {
                    v120 = (unint64_t *)(*(_QWORD *)&object[16] + 8);
                    do
                      v121 = __ldaxr(v120);
                    while (__stlxr(v121 - 1, v120));
                    if (!v121)
                    {
                      ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
                      std::__shared_weak_count::__release_weak(v119);
                    }
                  }
LABEL_183:
                  if (v61)
                  {
                    if (*(char *)(a2 + 23) >= 0)
                      v122 = (const char *)a2;
                    else
                      v122 = *(const char **)a2;
                    sub_22322C138((uint64_t)v243, "Error saving global mesh to %s", v122);
                    sub_223182C08((uint64_t)v243);
                  }
                  sub_223182C08((uint64_t)v243);
                  v123 = v248;
                  if (v248)
                  {
                    v124 = (unint64_t *)&v248->__shared_owners_;
                    do
                      v125 = __ldaxr(v124);
                    while (__stlxr(v125 - 1, v124));
                    if (!v125)
                    {
                      ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
                      std::__shared_weak_count::__release_weak(v123);
                    }
                  }
                  goto LABEL_347;
                }
              }
              memcpy(v59, v49, v58);
              goto LABEL_123;
            }
          }
          memmove(v48, v13, v14);
          goto LABEL_81;
        }
      }
      memmove(v45, v43, v44);
      goto LABEL_73;
    }
  }
LABEL_347:
  v9 = 0;
  sub_22316F8F4(v228);
  if (v234 < 0)
LABEL_348:
    operator delete(v233[0]);
  return v9;
}

void sub_22356C190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  if (*(_BYTE *)(v7 - 200) && *(char *)(v7 - 201) < 0)
    operator delete(*(void **)(v7 - 224));
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)va);
  sub_22316F8F4((uint64_t *)&STACK[0x270]);
  sub_22316F8F4((uint64_t *)va1);
  if (SLOBYTE(STACK[0x23F]) < 0)
    operator delete((void *)STACK[0x228]);
  _Unwind_Resume(a1);
}

void sub_22356C58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  sub_22316F8F4((uint64_t *)va);
  if ((SLOBYTE(STACK[0x23F]) & 0x80000000) == 0)
    JUMPOUT(0x22356C584);
  JUMPOUT(0x22356C57CLL);
}

void sub_22356C5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  sub_22316F8F4((uint64_t *)va);
  if ((SLOBYTE(STACK[0x23F]) & 0x80000000) == 0)
    JUMPOUT(0x22356C584);
  JUMPOUT(0x22356C57CLL);
}

void sub_22356C5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  sub_22316F8F4((uint64_t *)va);
  if ((SLOBYTE(STACK[0x23F]) & 0x80000000) == 0)
    JUMPOUT(0x22356C584);
  JUMPOUT(0x22356C57CLL);
}

void sub_22356C5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  sub_22316F8F4((uint64_t *)va);
  if ((SLOBYTE(STACK[0x23F]) & 0x80000000) == 0)
    JUMPOUT(0x22356C584);
  JUMPOUT(0x22356C57CLL);
}

void sub_22356C5EC()
{
  if (SLOBYTE(STACK[0x23F]) < 0)
    JUMPOUT(0x22356C57CLL);
  JUMPOUT(0x22356C584);
}

uint64_t sub_22356C5FC(_QWORD *a1, uint64_t *a2, unsigned __int8 *a3)
{
  size_t v4;
  uint64_t *v5;
  char v7;
  const char *v8;
  float *v9;
  float *v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  const void **v17;
  int v18;
  size_t v19;
  unint64_t v20;
  uint64_t *v21;
  void **p_dst;
  char *v23;
  const void *v24;
  uint64_t v25;
  uint64_t *v26;
  void *v27;
  void **p_data;
  std::string *v29;
  int v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  unint64_t v34;
  std::string *v35;
  std::string::size_type v36;
  uint64_t v37;
  size_t v38;
  const char *v39;
  unsigned __int8 v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  unint64_t v45;
  unint64_t v46;
  std::string::size_type v48;
  uint64_t v49;
  size_t v50;
  const char *v51;
  unsigned __int8 v52;
  const char *v53;
  size_t v54;
  _BYTE *v55;
  const char *v56;
  unint64_t v57;
  std::string *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *p_p;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  size_t v67;
  std::__shared_weak_count_vtbl *v68;
  std::__shared_weak_count *v69;
  size_t v70;
  size_t v71;
  _QWORD *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char v77;
  _QWORD *v78;
  uint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *p_shared_owners;
  unint64_t v82;
  void *v83;
  unint64_t *v84;
  unint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  unint64_t v89;
  unsigned __int8 v90;
  const char *v91;
  size_t v92;
  _BYTE *v93;
  unint64_t v94;
  const char *v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  size_t v104;
  std::__shared_weak_count_vtbl *v105;
  std::__shared_weak_count *v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  _DWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  _QWORD *v125;
  std::__shared_weak_count *v126;
  unint64_t *v127;
  unint64_t v128;
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  std::__shared_weak_count *v135;
  unint64_t *v136;
  unint64_t v137;
  void *v138;
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  __int128 v152;
  uint64_t v153;
  std::__shared_weak_count *v154;
  unint64_t *v155;
  unint64_t v156;
  std::__shared_weak_count *v157;
  unint64_t *v158;
  unint64_t v159;
  _QWORD *v160;
  std::__shared_weak_count *v161;
  unint64_t *v162;
  unint64_t v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  std::__shared_weak_count *v167;
  unint64_t *v168;
  unint64_t v169;
  std::__shared_weak_count *v170;
  unint64_t *v171;
  unint64_t v172;
  std::string *v173;
  std::__shared_weak_count *v174;
  unint64_t *v175;
  unint64_t v176;
  std::string::size_type v178;
  unsigned int v179;
  std::string::size_type v180;
  uint64_t *v181;
  int v182;
  uint64_t v183;
  std::string v184;
  std::string *__dst;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep;
  int64_t v187;
  int v188;
  const char *v189;
  int v190;
  const char *v191;
  uint64_t v192;
  std::__shared_weak_count *v193;
  void *__src;
  char v195;
  char v196;
  char v197;
  __int128 v198;
  std::__shared_weak_count *v199;
  char *v200;
  std::__shared_weak_count *v201;
  _QWORD *v202;
  __int128 v203;
  _BYTE object[24];
  __int128 v205;
  void *__p;
  size_t v207;
  unint64_t v208;
  char v209;
  _QWORD v210[5];

  v210[2] = *MEMORY[0x24BDAC8D0];
  v197 = 0;
  LOBYTE(__src) = 0;
  v4 = *a3;
  v5 = a2;
  v7 = 1;
  switch(*a3)
  {
    case 0u:
      goto LABEL_18;
    case 1u:
      v197 = 9;
      v195 = 95;
      v8 = "semantic_";
      goto LABEL_5;
    case 4u:
      v4 = 6;
      v197 = 6;
      strcpy((char *)&__src, "color_");
      goto LABEL_6;
    case 0x10u:
      v197 = 9;
      v195 = 95;
      v8 = "material_";
LABEL_5:
      __src = *(void **)v8;
      v196 = 0;
      a2[23] = a2[22];
      a2[27] = a2[26];
      sub_223CD4718((uint64_t)a2, v4);
      v4 = 9;
      if (*a3 != 4)
        goto LABEL_17;
LABEL_6:
      v9 = (float *)v5[4];
      v10 = (float *)v5[5];
      if (v9 != v10)
      {
        while (1)
        {
          v12 = *v9;
          if (*v9 <= 0.0031308)
          {
            v13 = v12 * 12.92;
            v14 = v9[1];
            if (v14 > 0.0031308)
              goto LABEL_14;
LABEL_11:
            v15 = v14 * 12.92;
            v16 = v9[2];
            if (v16 <= 0.0031308)
              goto LABEL_15;
LABEL_8:
            v11 = powf(v16, 0.41667);
            *v9 = v13;
            v9[1] = v15;
            v9[2] = (float)((float)(v11 * 211.0) + -11.0) / 200.0;
            v9 += 3;
            if (v9 == v10)
              goto LABEL_16;
          }
          else
          {
            v13 = (float)((float)(powf(v12, 0.41667) * 211.0) + -11.0) / 200.0;
            v14 = v9[1];
            if (v14 <= 0.0031308)
              goto LABEL_11;
LABEL_14:
            v15 = (float)((float)(powf(v14, 0.41667) * 211.0) + -11.0) / 200.0;
            v16 = v9[2];
            if (v16 > 0.0031308)
              goto LABEL_8;
LABEL_15:
            *v9 = v13;
            v9[1] = v15;
            v9[2] = v16 * 12.92;
            v9 += 3;
            if (v9 == v10)
            {
LABEL_16:
              v7 = 0;
              goto LABEL_18;
            }
          }
        }
      }
LABEL_17:
      v7 = 0;
LABEL_18:
      v17 = (const void **)a1[1];
      v18 = *((char *)v17 + 23);
      if (v18 >= 0)
        v19 = *((unsigned __int8 *)v17 + 23);
      else
        v19 = (size_t)v17[1];
      v20 = v19 + v4;
      if (v19 + v4 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      v21 = (uint64_t *)*a1;
      if (v20 <= 0x16)
      {
        rep = 0;
        v187 = 0;
        __dst = 0;
        p_dst = (void **)&__dst;
        HIBYTE(v187) = v19 + v4;
        if ((v7 & 1) != 0)
          goto LABEL_25;
        goto LABEL_24;
      }
      v181 = v5;
      v41 = a1;
      v42 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v20 | 7) != 0x17)
        v42 = v20 | 7;
      v43 = v42 + 1;
      p_dst = (void **)operator new(v42 + 1);
      rep = v19 + v4;
      v187 = v43 | 0x8000000000000000;
      __dst = (std::string *)p_dst;
      a1 = v41;
      v5 = v181;
      if ((v7 & 1) == 0)
LABEL_24:
        memcpy(p_dst, &__src, v4);
LABEL_25:
      v23 = (char *)p_dst + v4;
      if (v19)
      {
        if (v18 >= 0)
          v24 = v17;
        else
          v24 = *v17;
        memmove(v23, v24, v19);
      }
      v23[v19] = 0;
      v25 = *((unsigned __int8 *)v21 + 23);
      if ((v25 & 0x80u) == 0)
        v26 = v21;
      else
        v26 = (uint64_t *)*v21;
      if ((v25 & 0x80u) != 0)
        v25 = v21[1];
      *(_QWORD *)object = v26;
      *(_QWORD *)&object[8] = v25;
      *(_QWORD *)&object[16] = "/";
      *(_QWORD *)&v205 = 1;
      v27 = (void *)HIBYTE(v187);
      p_data = (void **)&__dst;
      if (v187 < 0)
      {
        p_data = (void **)&__dst->__r_.__value_.__l.__data_;
        v27 = (void *)rep;
      }
      *((_QWORD *)&v205 + 1) = p_data;
      __p = v27;
      sub_2231A9820((uint64_t)object, (uint64_t)&v207, 0, 0, &v184);
      if (SHIBYTE(v187) < 0)
        operator delete(__dst);
      if ((v184.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v29 = &v184;
      else
        v29 = (std::string *)v184.__r_.__value_.__r.__words[0];
      v30 = sub_22414BFC0(v29, v5, a1[2]);
      v31 = v30 == 0;
      if (!v30)
        goto LABEL_260;
      sub_223565394(&v183);
      if (**(int **)(v183 + 56) > 5)
        goto LABEL_260;
      v32 = *(unsigned __int8 *)(v183 + 72);
      v33 = sub_22322F254(v183, "OSLogSurrogateAppender", 1, 0);
      v34 = v33;
      if (!v32 && !v33)
        goto LABEL_260;
      __dst = (std::string *)&v183;
      rep = std::chrono::steady_clock::now().__d_.__rep_;
      v187 = std::chrono::system_clock::now().__d_.__rep_;
      v188 = 5;
      v189 = "unknown file";
      v190 = 487;
      v192 = 0;
      v193 = 0;
      v191 = "unknown function";
      if ((v184.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v35 = &v184;
      else
        v35 = (std::string *)v184.__r_.__value_.__r.__words[0];
      v36 = __dst->__r_.__value_.__r.__words[0];
      v37 = __dst->__r_.__value_.__r.__words[0] + 16;
      v180 = __dst->__r_.__value_.__r.__words[0];
      if (*(char *)(__dst->__r_.__value_.__r.__words[0] + 39) < 0)
      {
        v39 = *(const char **)(v36 + 16);
        v38 = *(_QWORD *)(v36 + 24);
        v52 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v52 & 1) != 0)
          goto LABEL_64;
      }
      else
      {
        v38 = *(unsigned __int8 *)(__dst->__r_.__value_.__r.__words[0] + 39);
        v39 = (const char *)(__dst->__r_.__value_.__r.__words[0] + 16);
        v40 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v40 & 1) != 0)
          goto LABEL_64;
      }
      if (__cxa_guard_acquire(&qword_255788F58))
      {
        sub_224568628((uint64_t)object);
        sub_223199C58("com.apple.cv3d", (unint64_t)object, &xmmword_255788F40);
        if ((_BYTE)v205 && (object[23] & 0x80000000) != 0)
          operator delete(*(void **)object);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
        __cxa_guard_release(&qword_255788F58);
      }
LABEL_64:
      if (byte_255788F57 >= 0)
        v53 = (const char *)&xmmword_255788F40;
      else
        v53 = (const char *)xmmword_255788F40;
      if (byte_255788F57 >= 0)
        v54 = byte_255788F57;
      else
        v54 = *((_QWORD *)&xmmword_255788F40 + 1);
      *(_QWORD *)object = os_log_create(v53, v39);
      v55 = &object[8];
      if (v54 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v54 >= 0x17)
      {
        v179 = v31;
        v56 = v39;
        v57 = v34;
        v58 = v35;
        v59 = v32;
        v60 = v37;
        v61 = (v54 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v54 | 7) != 0x17)
          v61 = v54 | 7;
        v62 = v61 + 1;
        v55 = operator new(v61 + 1);
        *(_QWORD *)&object[16] = v54;
        *(_QWORD *)&v205 = v62 | 0x8000000000000000;
        *(_QWORD *)&object[8] = v55;
        v37 = v60;
        v32 = v59;
        v35 = v58;
        v34 = v57;
        v39 = v56;
        v31 = v179;
      }
      else
      {
        BYTE7(v205) = v54;
        if (!v54)
          goto LABEL_78;
      }
      memmove(v55, v53, v54);
LABEL_78:
      v55[v54] = 0;
      BYTE8(v205) = 1;
      p_p = &__p;
      if (v38 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v38 >= 0x17)
      {
        v64 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v38 | 7) != 0x17)
          v64 = v38 | 7;
        v65 = v64 + 1;
        p_p = operator new(v64 + 1);
        v207 = v38;
        v208 = v65 | 0x8000000000000000;
        __p = p_p;
      }
      else
      {
        HIBYTE(v208) = v38;
        if (!v38)
          goto LABEL_86;
      }
      memmove(p_p, v39, v38);
LABEL_86:
      *((_BYTE *)p_p + v38) = 0;
      v209 = 1;
      v66 = *(NSObject **)object;
      if (SHIBYTE(v208) < 0)
        operator delete(__p);
      if (BYTE8(v205) && SBYTE7(v205) < 0)
        operator delete(*(void **)&object[8]);
      if (*(_QWORD *)object)
        os_release(*(void **)object);
      if (v34 && *(_QWORD *)(v34 + 24))
      {
        v67 = _os_log_pack_size();
        v68 = (std::__shared_weak_count_vtbl *)operator new(v67, (std::align_val_t)8uLL);
        v69 = (std::__shared_weak_count *)operator new();
        v69->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
        v69->__shared_owners_ = 0;
        v69->__shared_weak_owners_ = 0;
        v69[1].__vftable = v68;
        *(_QWORD *)&v198 = v68;
        *((_QWORD *)&v198 + 1) = v68;
        v200 = 0;
        v201 = 0;
        v199 = v69;
        v70 = strlen((const char *)v35);
        if (v70 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        v71 = v70;
        if (v70 >= 0x17)
        {
          v74 = (v70 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v70 | 7) != 0x17)
            v74 = v70 | 7;
          v75 = v74 + 1;
          v72 = operator new(v74 + 1);
          *(_QWORD *)&v203 = v71;
          *((_QWORD *)&v203 + 1) = v75 | 0x8000000000000000;
          v202 = v72;
        }
        else
        {
          HIBYTE(v203) = v70;
          v72 = &v202;
          if (!v70)
          {
LABEL_105:
            *((_BYTE *)v72 + v71) = 0;
            v76 = v202;
            v210[0] = v203;
            *(_QWORD *)((char *)v210 + 7) = *(_QWORD *)((char *)&v203 + 7);
            v77 = HIBYTE(v203);
            v78 = operator new(0x38uLL);
            v78[1] = 0;
            v78[2] = 0;
            v78[3] = off_24EC1FA48;
            *v78 = &off_24EC1F9F8;
            v79 = v210[0];
            v78[4] = v76;
            v78[5] = v79;
            *(_QWORD *)((char *)v78 + 47) = *(_QWORD *)((char *)v210 + 7);
            *((_BYTE *)v78 + 55) = v77;
            v210[0] = 0;
            *(_QWORD *)((char *)v210 + 7) = 0;
            v80 = v201;
            v200 = (char *)(v78 + 3);
            v201 = (std::__shared_weak_count *)v78;
            if (v80)
            {
              p_shared_owners = (unint64_t *)&v80->__shared_owners_;
              do
                v82 = __ldaxr(p_shared_owners);
              while (__stlxr(v82 - 1, p_shared_owners));
              if (!v82)
              {
                ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
                std::__shared_weak_count::__release_weak(v80);
              }
            }
            *(_OWORD *)object = v198;
            v83 = v200;
            *(_QWORD *)&object[16] = v199;
            if (v199)
            {
              v84 = (unint64_t *)&v199->__shared_owners_;
              do
                v85 = __ldxr(v84);
              while (__stxr(v85 + 1, v84));
            }
            v86 = v201;
            *(_QWORD *)&v205 = v83;
            *((_QWORD *)&v205 + 1) = v201;
            if (v201)
            {
              v87 = (unint64_t *)&v201->__shared_owners_;
              do
                v88 = __ldxr(v87);
              while (__stxr(v88 + 1, v87));
              __p = v83;
              do
                v89 = __ldaxr(v87);
              while (__stlxr(v89 - 1, v87));
              if (!v89)
              {
                ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
                std::__shared_weak_count::__release_weak(v86);
              }
            }
            else
            {
              __p = v83;
            }
            v142 = v199;
            if (v199)
            {
              v143 = (unint64_t *)&v199->__shared_owners_;
              do
                v144 = __ldaxr(v143);
              while (__stlxr(v144 - 1, v143));
              if (!v144)
              {
                ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
                std::__shared_weak_count::__release_weak(v142);
              }
            }
            v145 = *(_QWORD *)object;
            if (*((char *)__p + 31) >= 0)
              v146 = (char *)__p + 8;
            else
              v146 = (char *)*((_QWORD *)__p + 1);
            v147 = _os_log_pack_fill();
            *(_DWORD *)v147 = 136315138;
            *(_QWORD *)(v147 + 4) = v146;
            v148 = operator new();
            v149 = *(unsigned __int8 *)(v180 + 39);
            v150 = *(_QWORD *)(v180 + 16);
            v151 = *(_QWORD *)(v180 + 24);
            v152 = v205;
            *(_OWORD *)(v148 + 8) = *(_OWORD *)&object[8];
            if ((v149 & 0x80u) != 0)
              v149 = v151;
            else
              v150 = v37;
            *(_QWORD *)v148 = v145;
            *(_QWORD *)&object[8] = 0;
            *(_QWORD *)&object[16] = 0;
            *(_OWORD *)(v148 + 24) = v152;
            v205 = 0uLL;
            *(_QWORD *)(v148 + 40) = v150;
            *(_QWORD *)(v148 + 48) = v149;
            *(_BYTE *)(v148 + 56) = 16;
            v202 = 0;
            *(_QWORD *)&v198 = v148;
            (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v34 + 24) + 40))(*(_QWORD *)(v34 + 24), &v198);
            v153 = v198;
            *(_QWORD *)&v198 = 0;
            if (v153)
            {
              v154 = *(std::__shared_weak_count **)(v153 + 32);
              if (v154)
              {
                v155 = (unint64_t *)&v154->__shared_owners_;
                do
                  v156 = __ldaxr(v155);
                while (__stlxr(v156 - 1, v155));
                if (!v156)
                {
                  ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
                  std::__shared_weak_count::__release_weak(v154);
                }
              }
              v157 = *(std::__shared_weak_count **)(v153 + 16);
              if (v157)
              {
                v158 = (unint64_t *)&v157->__shared_owners_;
                do
                  v159 = __ldaxr(v158);
                while (__stlxr(v159 - 1, v158));
                if (!v159)
                {
                  ((void (*)(std::__shared_weak_count *))v157->__on_zero_shared)(v157);
                  std::__shared_weak_count::__release_weak(v157);
                }
              }
              MEMORY[0x227684CE8](v153, 0x10F0C40B62ED6C6);
              v160 = v202;
              v202 = 0;
              if (v160)
              {
                v161 = (std::__shared_weak_count *)v160[4];
                if (v161)
                {
                  v162 = (unint64_t *)&v161->__shared_owners_;
                  do
                    v163 = __ldaxr(v162);
                  while (__stlxr(v163 - 1, v162));
                  if (!v163)
                  {
                    ((void (*)(std::__shared_weak_count *))v161->__on_zero_shared)(v161);
                    std::__shared_weak_count::__release_weak(v161);
                  }
                }
                v164 = (std::__shared_weak_count *)v160[2];
                if (v164)
                {
                  v165 = (unint64_t *)&v164->__shared_owners_;
                  do
                    v166 = __ldaxr(v165);
                  while (__stlxr(v166 - 1, v165));
                  if (!v166)
                  {
                    ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
                    std::__shared_weak_count::__release_weak(v164);
                  }
                }
                MEMORY[0x227684CE8](v160, 0x10F0C40B62ED6C6);
              }
            }
            v167 = (std::__shared_weak_count *)*((_QWORD *)&v205 + 1);
            if (*((_QWORD *)&v205 + 1))
            {
              v168 = (unint64_t *)(*((_QWORD *)&v205 + 1) + 8);
              do
                v169 = __ldaxr(v168);
              while (__stlxr(v169 - 1, v168));
              if (!v169)
              {
                ((void (*)(std::__shared_weak_count *))v167->__on_zero_shared)(v167);
                std::__shared_weak_count::__release_weak(v167);
              }
            }
            v170 = *(std::__shared_weak_count **)&object[16];
            if (*(_QWORD *)&object[16])
            {
              v171 = (unint64_t *)(*(_QWORD *)&object[16] + 8);
              do
                v172 = __ldaxr(v171);
              while (__stlxr(v172 - 1, v171));
              if (!v172)
              {
                ((void (*)(std::__shared_weak_count *))v170->__on_zero_shared)(v170);
                std::__shared_weak_count::__release_weak(v170);
              }
            }
            goto LABEL_251;
          }
        }
        memcpy(v72, v35, v71);
        goto LABEL_105;
      }
      os_log_type_enabled(v66, OS_LOG_TYPE_ERROR);
      *(_DWORD *)object = 136315138;
      *(_QWORD *)&object[4] = v35;
      v73 = (void *)_os_log_send_and_compose_impl();
      if (v73)
        free(v73);
LABEL_251:
      if (v32)
      {
        v173 = &v184;
        if ((v184.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v173 = (std::string *)v184.__r_.__value_.__r.__words[0];
        sub_22322C138((uint64_t)&__dst, "Error saving mesh to path %s", (const char *)v173);
        sub_223182C08((uint64_t)&__dst);
      }
      sub_223182C08((uint64_t)&__dst);
      v174 = v193;
      if (v193)
      {
        v175 = (unint64_t *)&v193->__shared_owners_;
        do
          v176 = __ldaxr(v175);
        while (__stlxr(v176 - 1, v175));
        if (!v176)
        {
          ((void (*)(std::__shared_weak_count *))v174->__on_zero_shared)(v174);
          std::__shared_weak_count::__release_weak(v174);
        }
      }
LABEL_260:
      if ((SHIBYTE(v184.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        if ((v197 & 0x80000000) == 0)
          return v31;
        goto LABEL_262;
      }
      operator delete(v184.__r_.__value_.__l.__data_);
      if (v197 < 0)
LABEL_262:
        operator delete(__src);
      return v31;
    default:
      sub_223566FA8(&v184);
      if (**(int **)(v184.__r_.__value_.__r.__words[0] + 56) > 5)
        goto LABEL_204;
      v44 = *(unsigned __int8 *)(v184.__r_.__value_.__r.__words[0] + 72);
      v45 = sub_22322F254((uint64_t)v184.__r_.__value_.__l.__data_, "OSLogSurrogateAppender", 1, 0);
      v46 = v45;
      if (!v44 && v45 == 0)
        goto LABEL_204;
      __dst = &v184;
      rep = std::chrono::steady_clock::now().__d_.__rep_;
      v187 = std::chrono::system_clock::now().__d_.__rep_;
      v188 = 5;
      v189 = "unknown file";
      v190 = 465;
      v192 = 0;
      v193 = 0;
      v191 = "unknown function";
      v48 = __dst->__r_.__value_.__r.__words[0];
      v49 = __dst->__r_.__value_.__r.__words[0] + 16;
      v178 = __dst->__r_.__value_.__r.__words[0];
      if (*(char *)(__dst->__r_.__value_.__r.__words[0] + 39) < 0)
      {
        v51 = *(const char **)(v48 + 16);
        v50 = *(_QWORD *)(v48 + 24);
      }
      else
      {
        v50 = *(unsigned __int8 *)(__dst->__r_.__value_.__r.__words[0] + 39);
        v51 = (const char *)(__dst->__r_.__value_.__r.__words[0] + 16);
      }
      v182 = *a3;
      v90 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v90 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
      {
        sub_224568628((uint64_t)object);
        sub_223199C58("com.apple.cv3d", (unint64_t)object, &xmmword_255788F40);
        if ((_BYTE)v205 && (object[23] & 0x80000000) != 0)
          operator delete(*(void **)object);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
        __cxa_guard_release(&qword_255788F58);
      }
      if (byte_255788F57 >= 0)
        v91 = (const char *)&xmmword_255788F40;
      else
        v91 = (const char *)xmmword_255788F40;
      if (byte_255788F57 >= 0)
        v92 = byte_255788F57;
      else
        v92 = *((_QWORD *)&xmmword_255788F40 + 1);
      *(_QWORD *)object = os_log_create(v91, v51);
      v93 = &object[8];
      if (v92 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v92 >= 0x17)
      {
        v94 = v46;
        v95 = v51;
        v96 = v49;
        v97 = v44;
        v98 = (v92 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v92 | 7) != 0x17)
          v98 = v92 | 7;
        v99 = v98 + 1;
        v93 = operator new(v98 + 1);
        *(_QWORD *)&object[16] = v92;
        *(_QWORD *)&v205 = v99 | 0x8000000000000000;
        *(_QWORD *)&object[8] = v93;
        v44 = v97;
        v49 = v96;
        v51 = v95;
        v46 = v94;
      }
      else
      {
        BYTE7(v205) = v92;
        if (!v92)
          goto LABEL_136;
      }
      memmove(v93, v91, v92);
LABEL_136:
      v93[v92] = 0;
      BYTE8(v205) = 1;
      v100 = &__p;
      if (v50 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v50 >= 0x17)
      {
        v101 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v50 | 7) != 0x17)
          v101 = v50 | 7;
        v102 = v101 + 1;
        v100 = operator new(v101 + 1);
        v207 = v50;
        v208 = v102 | 0x8000000000000000;
        __p = v100;
      }
      else
      {
        HIBYTE(v208) = v50;
        if (!v50)
          goto LABEL_144;
      }
      memmove(v100, v51, v50);
LABEL_144:
      *((_BYTE *)v100 + v50) = 0;
      v209 = 1;
      v103 = *(NSObject **)object;
      if (SHIBYTE(v208) < 0)
        operator delete(__p);
      if (BYTE8(v205) && SBYTE7(v205) < 0)
        operator delete(*(void **)&object[8]);
      if (*(_QWORD *)object)
        os_release(*(void **)object);
      if (v46 && *(_QWORD *)(v46 + 24))
      {
        v104 = _os_log_pack_size();
        v105 = (std::__shared_weak_count_vtbl *)operator new(v104, (std::align_val_t)8uLL);
        v106 = (std::__shared_weak_count *)operator new();
        v107 = v106;
        v106->__shared_owners_ = 0;
        v108 = (unint64_t *)&v106->__shared_owners_;
        v106->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
        v106->__shared_weak_owners_ = 0;
        v106[1].__vftable = v105;
        *(_QWORD *)object = v105;
        *(_QWORD *)&object[8] = v105;
        *(_QWORD *)&object[16] = v106;
        do
          v109 = __ldxr(v108);
        while (__stxr(v109 + 1, v108));
        v205 = 0uLL;
        __p = 0;
        do
          v110 = __ldaxr(v108);
        while (__stlxr(v110 - 1, v108));
        if (!v110)
        {
          ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
          std::__shared_weak_count::__release_weak(v107);
        }
        v111 = *(_QWORD *)object;
        v112 = (_DWORD *)_os_log_pack_fill();
        *v112 = 67109120;
        v112[1] = v182;
        v113 = operator new();
        v114 = *(unsigned __int8 *)(v178 + 39);
        v115 = *(_QWORD *)(v178 + 16);
        v116 = *(_QWORD *)(v178 + 24);
        v117 = v205;
        *(_OWORD *)(v113 + 8) = *(_OWORD *)&object[8];
        if ((v114 & 0x80u) != 0)
          v114 = v116;
        else
          v115 = v49;
        *(_QWORD *)v113 = v111;
        *(_QWORD *)&object[8] = 0;
        *(_QWORD *)&object[16] = 0;
        *(_OWORD *)(v113 + 24) = v117;
        v205 = 0uLL;
        *(_QWORD *)(v113 + 40) = v115;
        *(_QWORD *)(v113 + 48) = v114;
        *(_BYTE *)(v113 + 56) = 16;
        v202 = 0;
        *(_QWORD *)&v198 = v113;
        (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v46 + 24) + 40))(*(_QWORD *)(v46 + 24), &v198);
        v118 = v198;
        *(_QWORD *)&v198 = 0;
        if (v118)
        {
          v119 = *(std::__shared_weak_count **)(v118 + 32);
          if (v119)
          {
            v120 = (unint64_t *)&v119->__shared_owners_;
            do
              v121 = __ldaxr(v120);
            while (__stlxr(v121 - 1, v120));
            if (!v121)
            {
              ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
              std::__shared_weak_count::__release_weak(v119);
            }
          }
          v122 = *(std::__shared_weak_count **)(v118 + 16);
          if (v122)
          {
            v123 = (unint64_t *)&v122->__shared_owners_;
            do
              v124 = __ldaxr(v123);
            while (__stlxr(v124 - 1, v123));
            if (!v124)
            {
              ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
              std::__shared_weak_count::__release_weak(v122);
            }
          }
          MEMORY[0x227684CE8](v118, 0x10F0C40B62ED6C6);
          v125 = v202;
          v202 = 0;
          if (v125)
          {
            v126 = (std::__shared_weak_count *)v125[4];
            if (v126)
            {
              v127 = (unint64_t *)&v126->__shared_owners_;
              do
                v128 = __ldaxr(v127);
              while (__stlxr(v128 - 1, v127));
              if (!v128)
              {
                ((void (*)(std::__shared_weak_count *))v126->__on_zero_shared)(v126);
                std::__shared_weak_count::__release_weak(v126);
              }
            }
            v129 = (std::__shared_weak_count *)v125[2];
            if (v129)
            {
              v130 = (unint64_t *)&v129->__shared_owners_;
              do
                v131 = __ldaxr(v130);
              while (__stlxr(v131 - 1, v130));
              if (!v131)
              {
                ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
                std::__shared_weak_count::__release_weak(v129);
              }
            }
            MEMORY[0x227684CE8](v125, 0x10F0C40B62ED6C6);
          }
        }
        v132 = (std::__shared_weak_count *)*((_QWORD *)&v205 + 1);
        if (*((_QWORD *)&v205 + 1))
        {
          v133 = (unint64_t *)(*((_QWORD *)&v205 + 1) + 8);
          do
            v134 = __ldaxr(v133);
          while (__stlxr(v134 - 1, v133));
          if (!v134)
          {
            ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
            std::__shared_weak_count::__release_weak(v132);
          }
        }
        v135 = *(std::__shared_weak_count **)&object[16];
        if (*(_QWORD *)&object[16])
        {
          v136 = (unint64_t *)(*(_QWORD *)&object[16] + 8);
          do
            v137 = __ldaxr(v136);
          while (__stlxr(v137 - 1, v136));
          if (!v137)
          {
            ((void (*)(std::__shared_weak_count *))v135->__on_zero_shared)(v135);
            std::__shared_weak_count::__release_weak(v135);
          }
        }
      }
      else
      {
        os_log_type_enabled(v103, OS_LOG_TYPE_ERROR);
        *(_DWORD *)object = 67109120;
        *(_DWORD *)&object[4] = v182;
        v138 = (void *)_os_log_send_and_compose_impl();
        if (v138)
          free(v138);
      }
      if (v44)
      {
        sub_22322C138((uint64_t)&__dst, "Unrecognized attribute(s) of %u. (Only one attribute at a time is supported.)", *a3);
        sub_223182C08((uint64_t)&__dst);
      }
      sub_223182C08((uint64_t)&__dst);
      v139 = v193;
      if (v193)
      {
        v140 = (unint64_t *)&v193->__shared_owners_;
        do
          v141 = __ldaxr(v140);
        while (__stlxr(v141 - 1, v140));
        if (!v141)
        {
          ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
          std::__shared_weak_count::__release_weak(v139);
        }
      }
LABEL_204:
      v31 = 0;
      if (v197 < 0)
        goto LABEL_262;
      return v31;
  }
}

void sub_22356D944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,void *__p,void *a47,int a48,__int16 a49,char a50,char a51,char a52,int a53,__int16 a54,char a55,char a56)
{
  if (a52 && a51 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a20);
  if (a37 < 0)
    operator delete(a32);
  _Unwind_Resume(a1);
}

BOOL sub_22356DB7C(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  std::ios_base *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::string::size_type size;
  std::string *v19;
  std::string::size_type v20;
  std::string *p_p;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  std::string *v29;
  std::string::size_type v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  std::string __p;
  uint64_t v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  std::string v38;
  uint64_t *v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  const void *v44;
  unint64_t v45;
  __int128 v46;
  __int128 v47;
  int v48;
  _QWORD v49[20];

  v49[19] = *MEMORY[0x24BDAC8D0];
  v5 = (uint64_t *)*a1;
  v6 = *(unsigned __int8 *)(*a1 + 23);
  if ((v6 & 0x80u) != 0)
  {
    v5 = *(uint64_t **)*a1;
    v6 = *(_QWORD *)(*a1 + 8);
  }
  v39 = v5;
  v40[0] = v6;
  v40[1] = "/";
  v41 = 1;
  v7 = *((unsigned __int8 *)a2 + 23);
  if ((v7 & 0x80u) == 0)
    v8 = a2;
  else
    v8 = (uint64_t *)*a2;
  if ((v7 & 0x80u) != 0)
    v7 = a2[1];
  v42 = v8;
  v43 = v7;
  sub_2231A9820((uint64_t)&v39, (uint64_t)&v44, 0, 0, &v38);
  v9 = MEMORY[0x24BEDB870];
  v10 = MEMORY[0x24BEDB870] + 64;
  v11 = (uint64_t *)MEMORY[0x24BEDB800];
  v12 = *(uint64_t **)(MEMORY[0x24BEDB800] + 8);
  v13 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
  v49[0] = MEMORY[0x24BEDB870] + 64;
  v39 = v12;
  *(_QWORD *)((char *)&v40[-1] + *(v12 - 3)) = v13;
  v14 = (std::ios_base *)((char *)&v40[-1] + *(v39 - 3));
  std::ios_base::init(v14, v40);
  v14[1].__vftable = 0;
  v14[1].__fmtflags_ = -1;
  v39 = (uint64_t *)(v9 + 24);
  v49[0] = v10;
  std::streambuf::basic_streambuf();
  v15 = MEMORY[0x24BEDB848];
  v40[0] = MEMORY[0x24BEDB848] + 16;
  v46 = 0u;
  v47 = 0u;
  v48 = 16;
  v16 = *a3;
  v17 = a3[1];
  if (*a3 != v17)
  {
    do
    {
      std::ostream::operator<<();
      sub_2231813E8(&v39, (uint64_t)"\n", 1);
      ++v16;
    }
    while (v16 != v17);
  }
  memset(&__p, 0, sizeof(__p));
  size = HIBYTE(v38.__r_.__value_.__r.__words[2]);
  if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v19 = &v38;
  else
    v19 = (std::string *)v38.__r_.__value_.__r.__words[0];
  if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v38.__r_.__value_.__l.__size_;
  sub_2231816F0(&__p, v19, (std::string *)((char *)v19 + size));
  sub_2242B0918((const std::__fs::filesystem::path *)&__p, 0x30u, a1[1], &v35);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (v36)
      goto LABEL_17;
LABEL_21:
    v22 = 0;
    v23 = v37;
    if (!v37)
      goto LABEL_46;
    goto LABEL_42;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if (!v36)
    goto LABEL_21;
LABEL_17:
  if ((v48 & 0x10) != 0)
  {
    v24 = *((_QWORD *)&v47 + 1);
    if (*((_QWORD *)&v47 + 1) < v45)
    {
      *((_QWORD *)&v47 + 1) = v45;
      v24 = v45;
    }
    v25 = v44;
    v20 = v24 - (_QWORD)v44;
    if (v24 - (unint64_t)v44 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_52;
  }
  else
  {
    if ((v48 & 8) == 0)
    {
      v20 = 0;
      *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
      p_p = &__p;
      goto LABEL_33;
    }
    v25 = (const void *)v41;
    v20 = v43 - v41;
    if ((unint64_t)(v43 - v41) >= 0x7FFFFFFFFFFFFFF8)
LABEL_52:
      sub_22316DBC0();
  }
  if (v20 >= 0x17)
  {
    v26 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v26 = v20 | 7;
    v27 = v26 + 1;
    p_p = (std::string *)operator new(v26 + 1);
    __p.__r_.__value_.__l.__size_ = v20;
    __p.__r_.__value_.__r.__words[2] = v27 | 0x8000000000000000;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    goto LABEL_32;
  }
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = v20;
  p_p = &__p;
  if (v20)
LABEL_32:
    memmove(p_p, v25, v20);
LABEL_33:
  p_p->__r_.__value_.__s.__data_[v20] = 0;
  v28 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v36 + 16))(v36);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v29 = &__p;
  else
    v29 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v30 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v30 = __p.__r_.__value_.__l.__size_;
  sub_2231813E8(v28, (uint64_t)v29, v30);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v22 = v36;
  v23 = v37;
  if (v37)
  {
LABEL_42:
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      v32 = __ldaxr(p_shared_owners);
    while (__stlxr(v32 - 1, p_shared_owners));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
LABEL_46:
  v39 = (uint64_t *)*v11;
  *(_QWORD *)((char *)&v40[-1] + *(v39 - 3)) = v11[3];
  v40[0] = v15 + 16;
  if (SBYTE7(v47) < 0)
    operator delete((void *)v46);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x227684BE0](v49);
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  return v22 != 0;
}

void sub_22356DF44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25)
{
  sub_2242BB4F8((uint64_t)&a16);
  sub_2232BBE74((uint64_t)&a25);
  if (a24 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_22356DFD4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  const char *v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  float32x2_t v17;
  float32x2_t v18;
  float32x2_t v19;
  float32x2_t *v20;
  float32x2_t *v21;
  float32x2_t *v22;
  float32x2_t *v23;
  float32x2_t v24;
  float32x2_t v25;
  float32x2_t v26;
  unsigned __int32 v27;
  std::string *v28;
  int v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  void **v34;
  uint64_t v35;
  const char *v36;
  size_t v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  const char *v40;
  size_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  void **v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  size_t v49;
  std::__shared_weak_count_vtbl *v50;
  std::__shared_weak_count *v51;
  size_t v52;
  size_t v53;
  _QWORD *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char v59;
  _QWORD *v60;
  uint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *p_shared_owners;
  unint64_t v64;
  void *v65;
  unint64_t *v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  const char *v80;
  uint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  _QWORD *v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  void **v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  const char *v106;
  uint64_t v107;
  int v109;
  char *__s;
  uint64_t v111;
  unsigned __int8 *v113;
  _QWORD v114[3];
  int v115;
  const char *v116;
  int v117;
  const char *v118;
  uint64_t v119;
  std::__shared_weak_count *v120;
  uint64_t v121;
  float32x2_t *v122;
  const char *v123;
  _BYTE *v124;
  const char *v125;
  const char *v126;
  float32x2_t *v127;
  float32x2_t *v128;
  void *__p[2];
  char v130;
  __int128 v131;
  std::__shared_weak_count *v132;
  char *v133;
  std::__shared_weak_count *v134;
  _QWORD *v135;
  __int128 v136;
  _BYTE v137[24];
  __int128 v138;
  void *v139[2];
  unint64_t v140;
  char v141;
  _QWORD v142[5];

  v142[2] = *MEMORY[0x24BDAC8D0];
  v4 = *a1;
  v5 = a1[1];
  v6 = 1;
  if (*a1 != v5)
  {
    v7 = a4;
    v8 = a2;
    v113 = (unsigned __int8 *)(a3 + 8);
    v111 = a1[1];
    while (1)
    {
      if (!*(_BYTE *)(v4 + 116) || !*(_QWORD *)(v4 + 16))
        goto LABEL_4;
      v9 = *(unsigned __int8 **)v113;
      if (!*(_QWORD *)v113)
        goto LABEL_32;
      v10 = v113;
      do
      {
        v11 = v9[25];
        v12 = *(unsigned __int8 *)(v4 + 100);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[26];
        v12 = *(unsigned __int8 *)(v4 + 101);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[27];
        v12 = *(unsigned __int8 *)(v4 + 102);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[28];
        v12 = *(unsigned __int8 *)(v4 + 103);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[29];
        v12 = *(unsigned __int8 *)(v4 + 104);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[30];
        v12 = *(unsigned __int8 *)(v4 + 105);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[31];
        v12 = *(unsigned __int8 *)(v4 + 106);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[32];
        v12 = *(unsigned __int8 *)(v4 + 107);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[33];
        v12 = *(unsigned __int8 *)(v4 + 108);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[34];
        v12 = *(unsigned __int8 *)(v4 + 109);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[35];
        v12 = *(unsigned __int8 *)(v4 + 110);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[36];
        v12 = *(unsigned __int8 *)(v4 + 111);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[37];
        v12 = *(unsigned __int8 *)(v4 + 112);
        if (v11 != v12)
          goto LABEL_26;
        v11 = v9[38];
        v12 = *(unsigned __int8 *)(v4 + 113);
        if (v11 == v12
          && (v11 = v9[39], v12 = *(unsigned __int8 *)(v4 + 114), v11 == v12)
          && (v11 = v9[40], v12 = *(unsigned __int8 *)(v4 + 115), v11 == v12))
        {
          v10 = v9;
        }
        else
        {
LABEL_26:
          if (v11 < v12)
            v9 += 8;
          else
            v10 = v9;
        }
        v9 = *(unsigned __int8 **)v9;
      }
      while (v9);
      if (v10 == v113 || (char)sub_22319835C((unsigned __int8 *)(v4 + 100), v10 + 25) < 0)
LABEL_32:
        v10 = v113;
      v13 = "/cluster_mesh/";
      if (v10 == v113)
        v13 = "/cluster_mesh/rooms_without_keyframes/";
      *(_QWORD *)&v131 = v13;
      LODWORD(v138) = -1;
      if ((*(char *)(v8 + 23) & 0x80000000) == 0)
        break;
      sub_223197FA4(v137, *(void **)v8, *(_QWORD *)(v8 + 8));
      LODWORD(v138) = 1;
      if ((_QWORD)v131)
        goto LABEL_38;
      v122 = (float32x2_t *)v137;
      v123 = "nullptr";
      v124 = v137;
      v125 = "nullptr";
      v126 = "nullptr";
      sub_2231A0E04((uint64_t *)&v124, (uint64_t)v137);
LABEL_39:
      sub_22319B83C((uint64_t)&v135, (uint64_t)v137, (unsigned __int8 *)(v4 + 100));
      v122 = (float32x2_t *)v137;
      v123 = ".obj";
      v124 = v137;
      v125 = ".obj";
      v126 = ".obj";
      if ((_DWORD)v138 == -1)
        sub_22316DD70();
      v114[0] = &v122;
      ((void (*)(_QWORD *, _BYTE *))off_24EC489E8[v138])(v114, v137);
      if ((_DWORD)v138 == -1)
        sub_22316DD70();
      v122 = (float32x2_t *)v114;
      ((void (*)(void **__return_ptr, float32x2_t **, _BYTE *))off_24EC48970[v138])(__p, &v122, v137);
      if ((_DWORD)v138 != -1)
        ((void (*)(float32x2_t **, _BYTE *))off_24EC48958[v138])(&v122, v137);
      sub_223180698((uint64_t)&v122, *(_QWORD *)(v4 + 16));
      if (*(_BYTE *)(v4 + 96))
      {
        v20 = v122;
        v21 = (float32x2_t *)v123;
        if (v122 != (float32x2_t *)v123)
        {
          do
          {
            v15.i32[0] = v20[1].i32[0];
            v17.i32[0] = *(_DWORD *)(v4 + 40);
            v18.i32[0] = *(_DWORD *)(v4 + 56);
            v19.i32[0] = *(_DWORD *)(v4 + 72);
            *(float32x2_t *)v16.i8 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)(v4 + 32), COERCE_FLOAT(*v20)), *(float32x2_t *)(v4 + 48), *v20, 1), *(float32x2_t *)(v4 + 64), *(float *)v15.i32);
            v17 = vmla_f32(vmla_lane_f32(vmul_f32(v17, *v20), v18, *v20, 1), *(float32x2_t *)v15.i8, v19);
            v16.u64[1] = (unint64_t)v17;
            v14.i64[0] = *(_QWORD *)(v4 + 80);
            v14.i32[2] = *(_DWORD *)(v4 + 88);
            v14 = (int8x16_t)vaddq_f32((float32x4_t)v16, (float32x4_t)v14);
            v20[1].i32[0] = v14.i32[2];
            *v20 = *(float32x2_t *)v14.i8;
            v20 = (float32x2_t *)((char *)v20 + 12);
          }
          while (v20 != v21);
        }
        v22 = v127;
        v23 = v128;
        if (v127 != v128)
        {
          v14.i64[0] = *(_QWORD *)(v4 + 32);
          v14.i32[2] = *(_DWORD *)(v4 + 40);
          v15.i64[0] = *(_QWORD *)(v4 + 48);
          v15.i32[2] = *(_DWORD *)(v4 + 56);
          v16.i64[0] = *(_QWORD *)(v4 + 64);
          v16.i32[2] = *(_DWORD *)(v4 + 72);
          v24 = (float32x2_t)vextq_s8(v14, v14, 8uLL).u64[0];
          v25 = (float32x2_t)vextq_s8(v15, v15, 8uLL).u64[0];
          v26 = (float32x2_t)vextq_s8(v16, v16, 8uLL).u64[0];
          do
          {
            v19.i32[0] = v22[1].i32[0];
            v27 = vmla_f32(vmla_lane_f32(vmul_f32(v24, *v22), v25, *v22, 1), v19, v26).u32[0];
            *v22 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v14.i8, COERCE_FLOAT(*v22)), *(float32x2_t *)v15.i8, *v22, 1), *(float32x2_t *)v16.i8, v19.f32[0]);
            v22[1].i32[0] = v27;
            v22 = (float32x2_t *)((char *)v22 + 12);
          }
          while (v22 != v23);
        }
      }
      if (v130 >= 0)
        v28 = (std::string *)__p;
      else
        v28 = (std::string *)__p[0];
      v29 = sub_22414BFC0(v28, (uint64_t *)&v122, v7);
      if (v29)
      {
        sub_223565394(&v121);
        if (**(int **)(v121 + 56) <= 5)
        {
          v30 = *(unsigned __int8 *)(v121 + 72);
          v31 = sub_22322F254(v121, "OSLogSurrogateAppender", 1, 0);
          v32 = v31;
          if (v30 || v31 != 0)
          {
            v114[0] = &v121;
            v114[1] = std::chrono::steady_clock::now().__d_.__rep_;
            v114[2] = std::chrono::system_clock::now().__d_.__rep_;
            v115 = 5;
            v116 = "unknown file";
            v117 = 564;
            v118 = "unknown function";
            v119 = 0;
            v120 = 0;
            v34 = __p;
            if (v130 < 0)
              v34 = (void **)__p[0];
            __s = (char *)v34;
            v35 = *(_QWORD *)v114[0];
            v36 = (const char *)(*(_QWORD *)v114[0] + 16);
            v106 = v36;
            v107 = *(_QWORD *)v114[0];
            if (*(char *)(*(_QWORD *)v114[0] + 39) < 0)
            {
              v36 = *(const char **)(v35 + 16);
              v37 = *(_QWORD *)(v35 + 24);
              v39 = atomic_load((unsigned __int8 *)&qword_255788F58);
              if ((v39 & 1) == 0)
              {
LABEL_179:
                if (__cxa_guard_acquire(&qword_255788F58))
                {
                  sub_224568628((uint64_t)&v131);
                  sub_223199C58("com.apple.cv3d", (unint64_t)&v131, &xmmword_255788F40);
                  if ((_BYTE)v133 && SHIBYTE(v132) < 0)
                    operator delete((void *)v131);
                  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
                  __cxa_guard_release(&qword_255788F58);
                }
              }
            }
            else
            {
              v37 = *(unsigned __int8 *)(*(_QWORD *)v114[0] + 39);
              v38 = atomic_load((unsigned __int8 *)&qword_255788F58);
              if ((v38 & 1) == 0)
                goto LABEL_179;
            }
            if (byte_255788F57 >= 0)
              v40 = (const char *)&xmmword_255788F40;
            else
              v40 = (const char *)xmmword_255788F40;
            if (byte_255788F57 >= 0)
              v41 = byte_255788F57;
            else
              v41 = *((_QWORD *)&xmmword_255788F40 + 1);
            *(_QWORD *)v137 = os_log_create(v40, v36);
            if (v41 > 0x7FFFFFFFFFFFFFF7)
              sub_22316DBC0();
            v109 = v30;
            if (v41 >= 0x17)
            {
              v43 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v41 | 7) != 0x17)
                v43 = v41 | 7;
              v44 = v43 + 1;
              v42 = operator new(v43 + 1);
              *(_QWORD *)&v137[16] = v41;
              *(_QWORD *)&v138 = v44 | 0x8000000000000000;
              *(_QWORD *)&v137[8] = v42;
            }
            else
            {
              BYTE7(v138) = v41;
              v42 = &v137[8];
              if (!v41)
              {
LABEL_79:
                v42[v41] = 0;
                BYTE8(v138) = 1;
                if (v37 > 0x7FFFFFFFFFFFFFF7)
                  sub_22316DBC0();
                if (v37 >= 0x17)
                {
                  v47 = (v37 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v37 | 7) != 0x17)
                    v47 = v37 | 7;
                  v48 = v47 + 1;
                  v45 = (void **)operator new(v47 + 1);
                  v139[1] = (void *)v37;
                  v140 = v48 | 0x8000000000000000;
                  v139[0] = v45;
                }
                else
                {
                  HIBYTE(v140) = v37;
                  v45 = v139;
                  if (!v37)
                  {
                    LOBYTE(v139[0]) = 0;
                    v141 = 1;
                    v46 = *(NSObject **)v137;
                    if ((SHIBYTE(v140) & 0x80000000) == 0)
                      goto LABEL_83;
LABEL_89:
                    operator delete(v139[0]);
                    v5 = v111;
                    v8 = a2;
                    if (BYTE8(v138))
                      goto LABEL_90;
                    goto LABEL_92;
                  }
                }
                memmove(v45, v36, v37);
                *((_BYTE *)v45 + v37) = 0;
                v141 = 1;
                v46 = *(NSObject **)v137;
                if (SHIBYTE(v140) < 0)
                  goto LABEL_89;
LABEL_83:
                v5 = v111;
                v8 = a2;
                if (BYTE8(v138))
                {
LABEL_90:
                  if (SBYTE7(v138) < 0)
                    operator delete(*(void **)&v137[8]);
                }
LABEL_92:
                if (*(_QWORD *)v137)
                  os_release(*(void **)v137);
                if (v32 && *(_QWORD *)(v32 + 24))
                {
                  v49 = _os_log_pack_size();
                  v50 = (std::__shared_weak_count_vtbl *)operator new(v49, (std::align_val_t)8uLL);
                  v51 = (std::__shared_weak_count *)operator new();
                  v51->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
                  v51->__shared_owners_ = 0;
                  v51->__shared_weak_owners_ = 0;
                  v51[1].__vftable = v50;
                  *(_QWORD *)&v131 = v50;
                  *((_QWORD *)&v131 + 1) = v50;
                  v132 = v51;
                  v133 = 0;
                  v134 = 0;
                  v52 = strlen(__s);
                  if (v52 > 0x7FFFFFFFFFFFFFF7)
                    sub_22316DBC0();
                  v53 = v52;
                  if (v52 >= 0x17)
                  {
                    v56 = (v52 & 0xFFFFFFFFFFFFFFF8) + 8;
                    if ((v52 | 7) != 0x17)
                      v56 = v52 | 7;
                    v57 = v56 + 1;
                    v54 = operator new(v56 + 1);
                    *(_QWORD *)&v136 = v53;
                    *((_QWORD *)&v136 + 1) = v57 | 0x8000000000000000;
                    v135 = v54;
                  }
                  else
                  {
                    HIBYTE(v136) = v52;
                    v54 = &v135;
                    if (!v52)
                      goto LABEL_107;
                  }
                  memcpy(v54, __s, v53);
LABEL_107:
                  *((_BYTE *)v54 + v53) = 0;
                  v58 = v135;
                  v142[0] = v136;
                  *(_QWORD *)((char *)v142 + 7) = *(_QWORD *)((char *)&v136 + 7);
                  v59 = HIBYTE(v136);
                  v60 = operator new(0x38uLL);
                  v60[1] = 0;
                  v60[2] = 0;
                  v60[3] = off_24EC1FA48;
                  *v60 = &off_24EC1F9F8;
                  v61 = v142[0];
                  v60[4] = v58;
                  v60[5] = v61;
                  *(_QWORD *)((char *)v60 + 47) = *(_QWORD *)((char *)v142 + 7);
                  *((_BYTE *)v60 + 55) = v59;
                  v142[0] = 0;
                  *(_QWORD *)((char *)v142 + 7) = 0;
                  v62 = v134;
                  v133 = (char *)(v60 + 3);
                  v134 = (std::__shared_weak_count *)v60;
                  v5 = v111;
                  v8 = a2;
                  if (v62)
                  {
                    p_shared_owners = (unint64_t *)&v62->__shared_owners_;
                    do
                      v64 = __ldaxr(p_shared_owners);
                    while (__stlxr(v64 - 1, p_shared_owners));
                    if (!v64)
                    {
                      ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
                      std::__shared_weak_count::__release_weak(v62);
                    }
                  }
                  *(_OWORD *)v137 = v131;
                  v65 = v133;
                  *(_QWORD *)&v137[16] = v132;
                  if (v132)
                  {
                    v66 = (unint64_t *)&v132->__shared_owners_;
                    do
                      v67 = __ldxr(v66);
                    while (__stxr(v67 + 1, v66));
                  }
                  v68 = v134;
                  *(_QWORD *)&v138 = v65;
                  *((_QWORD *)&v138 + 1) = v134;
                  if (v134)
                  {
                    v69 = (unint64_t *)&v134->__shared_owners_;
                    do
                      v70 = __ldxr(v69);
                    while (__stxr(v70 + 1, v69));
                    v139[0] = v65;
                    do
                      v71 = __ldaxr(v69);
                    while (__stlxr(v71 - 1, v69));
                    if (!v71)
                    {
                      ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
                      std::__shared_weak_count::__release_weak(v68);
                    }
                  }
                  else
                  {
                    v139[0] = v65;
                  }
                  v72 = v132;
                  if (v132)
                  {
                    v73 = (unint64_t *)&v132->__shared_owners_;
                    do
                      v74 = __ldaxr(v73);
                    while (__stlxr(v74 - 1, v73));
                    if (!v74)
                    {
                      ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
                      std::__shared_weak_count::__release_weak(v72);
                    }
                  }
                  v75 = *(_QWORD *)v137;
                  if (*((char *)v139[0] + 31) >= 0)
                    v76 = (char *)v139[0] + 8;
                  else
                    v76 = (char *)*((_QWORD *)v139[0] + 1);
                  v77 = _os_log_pack_fill();
                  *(_DWORD *)v77 = 136315138;
                  *(_QWORD *)(v77 + 4) = v76;
                  v78 = operator new();
                  v79 = *(unsigned __int8 *)(v107 + 39);
                  v80 = v106;
                  if ((v79 & 0x80u) != 0)
                  {
                    v80 = *(const char **)(v107 + 16);
                    v79 = *(_QWORD *)(v107 + 24);
                  }
                  *(_QWORD *)v78 = v75;
                  *(_OWORD *)(v78 + 8) = *(_OWORD *)&v137[8];
                  *(_QWORD *)&v137[8] = 0;
                  *(_QWORD *)&v137[16] = 0;
                  *(_OWORD *)(v78 + 24) = v138;
                  v138 = 0uLL;
                  *(_QWORD *)(v78 + 40) = v80;
                  *(_QWORD *)(v78 + 48) = v79;
                  *(_BYTE *)(v78 + 56) = 16;
                  v135 = 0;
                  *(_QWORD *)&v131 = v78;
                  (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v32 + 24) + 40))(*(_QWORD *)(v32 + 24), &v131);
                  v7 = a4;
                  v81 = v131;
                  *(_QWORD *)&v131 = 0;
                  if (v81)
                  {
                    v82 = *(std::__shared_weak_count **)(v81 + 32);
                    if (v82)
                    {
                      v83 = (unint64_t *)&v82->__shared_owners_;
                      do
                        v84 = __ldaxr(v83);
                      while (__stlxr(v84 - 1, v83));
                      if (!v84)
                      {
                        ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
                        std::__shared_weak_count::__release_weak(v82);
                      }
                    }
                    v85 = *(std::__shared_weak_count **)(v81 + 16);
                    if (v85)
                    {
                      v86 = (unint64_t *)&v85->__shared_owners_;
                      do
                        v87 = __ldaxr(v86);
                      while (__stlxr(v87 - 1, v86));
                      if (!v87)
                      {
                        ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
                        std::__shared_weak_count::__release_weak(v85);
                      }
                    }
                    MEMORY[0x227684CE8](v81, 0x10F0C40B62ED6C6);
                    v88 = v135;
                    v135 = 0;
                    if (v88)
                    {
                      v89 = (std::__shared_weak_count *)v88[4];
                      if (v89)
                      {
                        v90 = (unint64_t *)&v89->__shared_owners_;
                        do
                          v91 = __ldaxr(v90);
                        while (__stlxr(v91 - 1, v90));
                        if (!v91)
                        {
                          ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
                          std::__shared_weak_count::__release_weak(v89);
                        }
                      }
                      v92 = (std::__shared_weak_count *)v88[2];
                      if (v92)
                      {
                        v93 = (unint64_t *)&v92->__shared_owners_;
                        do
                          v94 = __ldaxr(v93);
                        while (__stlxr(v94 - 1, v93));
                        if (!v94)
                        {
                          ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
                          std::__shared_weak_count::__release_weak(v92);
                        }
                      }
                      MEMORY[0x227684CE8](v88, 0x10F0C40B62ED6C6);
                    }
                  }
                  v95 = (std::__shared_weak_count *)*((_QWORD *)&v138 + 1);
                  if (*((_QWORD *)&v138 + 1))
                  {
                    v96 = (unint64_t *)(*((_QWORD *)&v138 + 1) + 8);
                    do
                      v97 = __ldaxr(v96);
                    while (__stlxr(v97 - 1, v96));
                    if (!v97)
                    {
                      ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
                      std::__shared_weak_count::__release_weak(v95);
                      v98 = *(std::__shared_weak_count **)&v137[16];
                      if (*(_QWORD *)&v137[16])
                        goto LABEL_161;
                      goto LABEL_164;
                    }
                  }
                  v98 = *(std::__shared_weak_count **)&v137[16];
                  if (!*(_QWORD *)&v137[16])
                    goto LABEL_164;
LABEL_161:
                  v99 = (unint64_t *)&v98->__shared_owners_;
                  do
                    v100 = __ldaxr(v99);
                  while (__stlxr(v100 - 1, v99));
                  if (v100)
                  {
LABEL_164:
                    if (v109)
                      goto LABEL_165;
LABEL_168:
                    sub_223182C08((uint64_t)v114);
                    v102 = v120;
                    if (v120)
                    {
                      v103 = (unint64_t *)&v120->__shared_owners_;
                      do
                        v104 = __ldaxr(v103);
                      while (__stlxr(v104 - 1, v103));
                      if (!v104)
                      {
                        ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
                        std::__shared_weak_count::__release_weak(v102);
                      }
                    }
                    goto LABEL_173;
                  }
                  ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
                  std::__shared_weak_count::__release_weak(v98);
                  if (!v109)
                    goto LABEL_168;
                }
                else
                {
                  os_log_type_enabled(v46, OS_LOG_TYPE_ERROR);
                  *(_DWORD *)v137 = 136315138;
                  *(_QWORD *)&v137[4] = __s;
                  v55 = (void *)_os_log_send_and_compose_impl();
                  v7 = a4;
                  if (!v55)
                    goto LABEL_164;
                  free(v55);
                  if (!v109)
                    goto LABEL_168;
                }
LABEL_165:
                v101 = __p;
                if (v130 < 0)
                  v101 = (void **)__p[0];
                sub_22322C138((uint64_t)v114, "Error saving mesh: %s", (const char *)v101);
                sub_223182C08((uint64_t)v114);
                goto LABEL_168;
              }
            }
            memmove(v42, v40, v41);
            goto LABEL_79;
          }
        }
      }
LABEL_173:
      sub_22316F8F4((uint64_t *)&v122);
      if (v130 < 0)
        operator delete(__p[0]);
      if (v29)
        return 0;
LABEL_4:
      v4 += 120;
      if (v4 == v5)
        return 1;
    }
    *(_OWORD *)v137 = *(_OWORD *)v8;
    *(_QWORD *)&v137[16] = *(_QWORD *)(v8 + 16);
    LODWORD(v138) = 1;
LABEL_38:
    v122 = (float32x2_t *)v137;
    v123 = (const char *)&v131;
    v124 = v137;
    v125 = (const char *)&v131;
    v126 = (const char *)&v131;
    sub_2231BAAE8((uint64_t *)&v124, (uint64_t)v137);
    goto LABEL_39;
  }
  return v6;
}

void sub_22356ED9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;

  if (*(_BYTE *)(v40 - 232) && *(char *)(v40 - 233) < 0)
    operator delete(*(void **)(v40 - 256));
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a30);
  sub_22316F8F4(&a40);
  if (SLOBYTE(STACK[0x28F]) < 0)
    operator delete((void *)STACK[0x278]);
  _Unwind_Resume(a1);
}

void sub_22356EF24(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B964(v1 - 192);
  _Unwind_Resume(a1);
}

void sub_22356EF38(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B964(v1 - 192);
  _Unwind_Resume(a1);
}

void sub_22356EF4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B964(v1 - 192);
  _Unwind_Resume(a1);
}

void sub_22356EF60(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B964(v1 - 192);
  _Unwind_Resume(a1);
}

void sub_22356EF74(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B964(v1 - 192);
  _Unwind_Resume(a1);
}

char *sub_22356EF88(char **a1, uint64_t a2)
{
  char *v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  __int128 v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int16 v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;

  v3 = *a1;
  v4 = a1[1];
  v5 = 0xEF7BDEF7BDEF7BDFLL * ((v4 - *a1) >> 3);
  v6 = v5 + 1;
  if (v5 + 1 > 0x108421084210842)
    sub_22316E078();
  if (0xDEF7BDEF7BDEF7BELL * ((a1[2] - v3) >> 3) > v6)
    v6 = 0xDEF7BDEF7BDEF7BELL * ((a1[2] - v3) >> 3);
  if (0xEF7BDEF7BDEF7BDFLL * ((a1[2] - v3) >> 3) >= 0x84210842108421)
    v8 = 0x108421084210842;
  else
    v8 = v6;
  if (v8)
  {
    if (v8 > 0x108421084210842)
      sub_223174E94();
    v9 = (char *)operator new(248 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[248 * v5];
  *(_OWORD *)v10 = *(_OWORD *)a2;
  v11 = *(_QWORD *)(a2 + 24);
  *((_QWORD *)v10 + 2) = *(_QWORD *)(a2 + 16);
  *((_QWORD *)v10 + 3) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v3 = *a1;
    v4 = a1[1];
  }
  v14 = *(_OWORD *)(a2 + 48);
  v15 = &v9[248 * v5];
  *((_OWORD *)v15 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v15 + 3) = v14;
  v16 = &v9[248 * v8];
  v17 = *(_OWORD *)(a2 + 80);
  *((_OWORD *)v15 + 4) = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v15 + 5) = v17;
  v18 = *(_OWORD *)(a2 + 112);
  *((_OWORD *)v15 + 6) = *(_OWORD *)(a2 + 96);
  *((_OWORD *)v15 + 7) = v18;
  v19 = *(_OWORD *)(a2 + 144);
  *((_OWORD *)v15 + 8) = *(_OWORD *)(a2 + 128);
  *((_OWORD *)v15 + 9) = v19;
  v20 = *(_OWORD *)(a2 + 176);
  *((_OWORD *)v15 + 10) = *(_OWORD *)(a2 + 160);
  *((_OWORD *)v15 + 11) = v20;
  v21 = *(_OWORD *)(a2 + 208);
  *((_OWORD *)v15 + 12) = *(_OWORD *)(a2 + 192);
  *((_OWORD *)v15 + 13) = v21;
  *((_OWORD *)v15 + 14) = *(_OWORD *)(a2 + 224);
  v22 = *(_WORD *)(a2 + 240);
  v23 = v10 + 248;
  *((_WORD *)v15 + 120) = v22;
  if (v4 == v3)
  {
    *a1 = v10;
    a1[1] = v23;
    a1[2] = v16;
  }
  else
  {
    v24 = 0;
    do
    {
      v25 = &v4[v24];
      v26 = &v10[v24];
      *(_OWORD *)(v26 - 248) = *(_OWORD *)&v4[v24 - 248];
      *(_OWORD *)(v26 - 232) = *(_OWORD *)&v4[v24 - 232];
      *((_QWORD *)v25 - 29) = 0;
      *((_QWORD *)v25 - 28) = 0;
      v27 = *(_OWORD *)&v4[v24 - 216];
      v28 = *(_OWORD *)&v4[v24 - 200];
      v29 = *(_OWORD *)&v4[v24 - 184];
      *(_OWORD *)(v26 - 168) = *(_OWORD *)&v4[v24 - 168];
      *(_OWORD *)(v26 - 184) = v29;
      *(_OWORD *)(v26 - 200) = v28;
      *(_OWORD *)(v26 - 216) = v27;
      *(_OWORD *)(v26 - 152) = *(_OWORD *)&v4[v24 - 152];
      v30 = *(_OWORD *)&v4[v24 - 136];
      v31 = *(_OWORD *)&v4[v24 - 120];
      v32 = *(_OWORD *)&v4[v24 - 104];
      *(_OWORD *)(v26 - 88) = *(_OWORD *)&v4[v24 - 88];
      *(_OWORD *)(v26 - 104) = v32;
      *(_OWORD *)(v26 - 120) = v31;
      *(_OWORD *)(v26 - 136) = v30;
      v33 = *(_OWORD *)&v4[v24 - 72];
      v34 = *(_OWORD *)&v4[v24 - 56];
      v35 = *(_OWORD *)&v4[v24 - 40];
      *(_OWORD *)(v26 - 24) = *(_OWORD *)&v4[v24 - 24];
      *(_OWORD *)(v26 - 40) = v35;
      *(_OWORD *)(v26 - 56) = v34;
      *(_OWORD *)(v26 - 72) = v33;
      *((_WORD *)v26 - 4) = *(_WORD *)&v4[v24 - 8];
      v24 -= 248;
    }
    while (&v4[v24] != v3);
    v3 = *a1;
    v36 = a1[1];
    *a1 = &v10[v24];
    a1[1] = v23;
    a1[2] = v16;
    while (v36 != v3)
    {
      v37 = (std::__shared_weak_count *)*((_QWORD *)v36 - 28);
      if (v37)
      {
        p_shared_owners = (unint64_t *)&v37->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      v36 -= 248;
    }
  }
  if (v3)
    operator delete(v3);
  return v23;
}

char *sub_22356F1F8(void **a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  char *v8;
  __int128 v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char *v34;
  std::__shared_weak_count *v35;
  unint64_t *p_shared_owners;
  unint64_t v37;

  v3 = 0xEF7BDEF7BDEF7BDFLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0x108421084210842)
    sub_22316E078();
  if (0xDEF7BDEF7BDEF7BELL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0xDEF7BDEF7BDEF7BELL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xEF7BDEF7BDEF7BDFLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x84210842108421)
    v5 = 0x108421084210842;
  else
    v5 = v4;
  if (v5 > 0x108421084210842)
    sub_223174E94();
  v7 = 248 * v5;
  v8 = (char *)operator new(248 * v5);
  v9 = *(_OWORD *)(a2 + 16);
  v10 = &v8[248 * v3];
  v11 = &v8[v7];
  *(_OWORD *)v10 = *(_OWORD *)a2;
  *((_OWORD *)v10 + 1) = v9;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  v12 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v10 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v10 + 3) = v12;
  v13 = *(_OWORD *)(a2 + 80);
  *((_OWORD *)v10 + 4) = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v10 + 5) = v13;
  v14 = *(_OWORD *)(a2 + 96);
  v15 = *(_OWORD *)(a2 + 112);
  v16 = *(_OWORD *)(a2 + 144);
  *((_OWORD *)v10 + 8) = *(_OWORD *)(a2 + 128);
  *((_OWORD *)v10 + 9) = v16;
  *((_OWORD *)v10 + 6) = v14;
  *((_OWORD *)v10 + 7) = v15;
  v17 = *(_OWORD *)(a2 + 176);
  *((_OWORD *)v10 + 10) = *(_OWORD *)(a2 + 160);
  *((_OWORD *)v10 + 11) = v17;
  v18 = *(_OWORD *)(a2 + 208);
  *((_OWORD *)v10 + 12) = *(_OWORD *)(a2 + 192);
  *((_OWORD *)v10 + 13) = v18;
  *((_OWORD *)v10 + 14) = *(_OWORD *)(a2 + 224);
  *((_WORD *)v10 + 120) = *(_WORD *)(a2 + 240);
  v19 = v10 + 248;
  v20 = (char *)*a1;
  v21 = (char *)a1[1];
  if (v21 == *a1)
  {
    *a1 = v10;
    a1[1] = v19;
    a1[2] = v11;
  }
  else
  {
    v22 = 0;
    do
    {
      v23 = &v21[v22];
      v24 = &v10[v22];
      *(_OWORD *)(v24 - 248) = *(_OWORD *)&v21[v22 - 248];
      *(_OWORD *)(v24 - 232) = *(_OWORD *)&v21[v22 - 232];
      *((_QWORD *)v23 - 29) = 0;
      *((_QWORD *)v23 - 28) = 0;
      v25 = *(_OWORD *)&v21[v22 - 216];
      v26 = *(_OWORD *)&v21[v22 - 200];
      v27 = *(_OWORD *)&v21[v22 - 184];
      *(_OWORD *)(v24 - 168) = *(_OWORD *)&v21[v22 - 168];
      *(_OWORD *)(v24 - 184) = v27;
      *(_OWORD *)(v24 - 200) = v26;
      *(_OWORD *)(v24 - 216) = v25;
      *(_OWORD *)(v24 - 152) = *(_OWORD *)&v21[v22 - 152];
      v28 = *(_OWORD *)&v21[v22 - 136];
      v29 = *(_OWORD *)&v21[v22 - 120];
      v30 = *(_OWORD *)&v21[v22 - 104];
      *(_OWORD *)(v24 - 88) = *(_OWORD *)&v21[v22 - 88];
      *(_OWORD *)(v24 - 104) = v30;
      *(_OWORD *)(v24 - 120) = v29;
      *(_OWORD *)(v24 - 136) = v28;
      v31 = *(_OWORD *)&v21[v22 - 72];
      v32 = *(_OWORD *)&v21[v22 - 56];
      v33 = *(_OWORD *)&v21[v22 - 40];
      *(_OWORD *)(v24 - 24) = *(_OWORD *)&v21[v22 - 24];
      *(_OWORD *)(v24 - 40) = v33;
      *(_OWORD *)(v24 - 56) = v32;
      *(_OWORD *)(v24 - 72) = v31;
      *((_WORD *)v24 - 4) = *(_WORD *)&v21[v22 - 8];
      v22 -= 248;
    }
    while (&v21[v22] != v20);
    v21 = (char *)*a1;
    v34 = (char *)a1[1];
    *a1 = &v10[v22];
    a1[1] = v19;
    a1[2] = v11;
    while (v34 != v21)
    {
      v35 = (std::__shared_weak_count *)*((_QWORD *)v34 - 28);
      if (v35)
      {
        p_shared_owners = (unint64_t *)&v35->__shared_owners_;
        do
          v37 = __ldaxr(p_shared_owners);
        while (__stlxr(v37 - 1, p_shared_owners));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      v34 -= 248;
    }
  }
  if (v21)
    operator delete(v21);
  return v19;
}

void sub_22356F430(uint64_t a1, void *key, unsigned int *a3)
{
  std::__shared_weak_count *v6;
  CFDictionaryRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  void *value;
  std::__shared_weak_count *v20;

  v7 = *(CFDictionaryRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  if (CFDictionaryContainsKey(*(CFDictionaryRef *)a1, key))
    return;
  sub_224527474(a3, (CFNumberRef *)&value);
  v12 = value;
  v11 = v20;
  if (!v20)
    goto LABEL_16;
  v13 = (unint64_t *)&v20->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_16:
    if (!v12)
      goto LABEL_18;
    goto LABEL_17;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (v12)
LABEL_17:
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, key, value);
LABEL_18:
  v16 = v20;
  if (v20)
  {
    v17 = (unint64_t *)&v20->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
}

void sub_22356F590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22356F5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p[2];
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  std::__shared_weak_count *v19;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v10 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    *(_OWORD *)__p = *(_OWORD *)a4;
    v16 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    v17 = 1;
    sub_2234278E8(a3, (__int128 *)__p, a5, v18);
    sub_2231AA5A4(a1, v10, (uint64_t)v18);
    v11 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v17 && SHIBYTE(v16) < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_22356F6A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17)
{
  sub_2241231D8((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22356F6DC(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p[2];
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  std::__shared_weak_count *v19;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v10 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    *(_OWORD *)__p = *(_OWORD *)a4;
    v16 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    v17 = 1;
    sub_22356F814(a3, (__int128 *)__p, a5, v18);
    sub_2231AA5A4(a1, v10, (uint64_t)v18);
    v11 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v17 && SHIBYTE(v16) < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_22356F7E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17)
{
  sub_2241231D8((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22356F814@<X0>(int *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  _DWORD *v11;
  unint64_t v13;
  unint64_t v14;
  mach_timebase_info info;
  void *__p;
  void *v17;
  _DWORD *v18;
  _QWORD v19[2];
  __int128 v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v8 = mach_continuous_time();
  v9 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info(&info);
    LODWORD(v13) = info.numer;
    LODWORD(v14) = info.denom;
    *(double *)&qword_255795558 = (double)v13 / (double)v14;
    __cxa_guard_release(&qword_255795560);
  }
  v19[0] = llround(*(double *)&qword_255795558 * (double)v8);
  v19[1] = 2;
  LOBYTE(v20) = 0;
  v22 = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v20 = *a2;
    v21 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v22 = 1;
  }
  v23 = 0;
  v24 = 0;
  v25 = *a3;
  v26 = 1;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v10 = *a1;
  LOBYTE(info.numer) = 2;
  v17 = 0;
  v18 = 0;
  __p = 0;
  v11 = operator new(4uLL);
  __p = v11;
  *v11 = v10;
  v17 = v11 + 1;
  v18 = v11 + 1;
  sub_2231AA8F0((char *)&info, (uint64_t)v19, a4);
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
  return sub_2231AD66C((uint64_t)v19);
}

void sub_22356F9A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255795560);
  _Unwind_Resume(a1);
}

void sub_22356F9BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (__p)
  {
    operator delete(__p);
    sub_2231AD66C((uint64_t)&a15);
    _Unwind_Resume(a1);
  }
  sub_2231AD66C((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void sub_22356F9F4(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v21[0] = v5;
  sub_2231D75A4((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_22316DBC0();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v14 + 128);
    MEMORY[0x227684CE8](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_22316DD70();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24EC48940[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_22356FC44(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_22356FC68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22356FC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22456E764((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_22356FC98(uint64_t a1, uint64_t *a2, os_log_t oslog, os_log_type_t type, const char **a5)
{
  size_t v9;
  std::__shared_weak_count_vtbl *v10;
  std::__shared_weak_count *v11;
  const char *v12;
  size_t v13;
  size_t v14;
  _QWORD *p_dst;
  const char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  _QWORD *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  __int128 v60;
  std::__shared_weak_count *v61;
  __int128 v62;
  _QWORD *__dst;
  __int128 v64;
  _BYTE v65[24];
  __int128 v66;
  uint64_t v67;
  _QWORD v68[3];

  v68[2] = *MEMORY[0x24BDAC8D0];
  if (a1 && *(_QWORD *)(a1 + 8))
  {
    v9 = _os_log_pack_size();
    v10 = (std::__shared_weak_count_vtbl *)operator new(v9, (std::align_val_t)8uLL);
    v11 = (std::__shared_weak_count *)operator new();
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = v10;
    *(_QWORD *)&v60 = v10;
    *((_QWORD *)&v60 + 1) = v10;
    v62 = 0uLL;
    v61 = v11;
    v12 = *a5;
    v13 = strlen(*a5);
    if (v13 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v14 = v13;
    if (v13 >= 0x17)
    {
      v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v13 | 7) != 0x17)
        v18 = v13 | 7;
      v19 = v18 + 1;
      p_dst = operator new(v18 + 1);
      *(_QWORD *)&v64 = v14;
      *((_QWORD *)&v64 + 1) = v19 | 0x8000000000000000;
      __dst = p_dst;
    }
    else
    {
      HIBYTE(v64) = v13;
      p_dst = &__dst;
      if (!v13)
      {
LABEL_13:
        *((_BYTE *)p_dst + v14) = 0;
        v20 = __dst;
        v68[0] = v64;
        *(_QWORD *)((char *)v68 + 7) = *(_QWORD *)((char *)&v64 + 7);
        v21 = HIBYTE(v64);
        v22 = operator new(0x38uLL);
        v22[1] = 0;
        v22[2] = 0;
        v22[3] = off_24EC1FA48;
        *v22 = &off_24EC1F9F8;
        v23 = v68[0];
        v22[4] = v20;
        v22[5] = v23;
        *(_QWORD *)((char *)v22 + 47) = *(_QWORD *)((char *)v68 + 7);
        *((_BYTE *)v22 + 55) = v21;
        v68[0] = 0;
        *(_QWORD *)((char *)v68 + 7) = 0;
        v24 = (std::__shared_weak_count *)*((_QWORD *)&v62 + 1);
        *(_QWORD *)&v62 = v22 + 3;
        *((_QWORD *)&v62 + 1) = v22;
        if (v24)
        {
          p_shared_owners = (unint64_t *)&v24->__shared_owners_;
          do
            v26 = __ldaxr(p_shared_owners);
          while (__stlxr(v26 - 1, p_shared_owners));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
            std::__shared_weak_count::__release_weak(v24);
          }
        }
        *(_OWORD *)v65 = v60;
        *(_QWORD *)&v65[16] = v61;
        if (v61)
        {
          v27 = &v61->__shared_owners_;
          do
            v28 = __ldxr((unint64_t *)v27);
          while (__stxr(v28 + 1, (unint64_t *)v27));
        }
        v66 = v62;
        if (*((_QWORD *)&v62 + 1))
        {
          v29 = (unint64_t *)(*((_QWORD *)&v62 + 1) + 8);
          do
            v30 = __ldxr(v29);
          while (__stxr(v30 + 1, v29));
          v67 = v62;
          do
            v31 = __ldaxr(v29);
          while (__stlxr(v31 - 1, v29));
          if (!v31)
          {
            (*(void (**)(_QWORD))(**((_QWORD **)&v62 + 1) + 16))(*((_QWORD *)&v62 + 1));
            std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v62 + 1));
          }
        }
        else
        {
          v67 = v62;
        }
        if (v61)
        {
          v32 = &v61->__shared_owners_;
          do
            v33 = __ldaxr((unint64_t *)v32);
          while (__stlxr(v33 - 1, (unint64_t *)v32));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
            std::__shared_weak_count::__release_weak(v61);
          }
        }
        v34 = *(_QWORD *)v65;
        if (*(char *)(v67 + 31) >= 0)
          v35 = v67 + 8;
        else
          v35 = *(_QWORD *)(v67 + 8);
        v36 = _os_log_pack_fill();
        *(_DWORD *)v36 = 136315138;
        *(_QWORD *)(v36 + 4) = v35;
        v37 = operator new();
        v38 = *((unsigned __int8 *)a2 + 23);
        if ((v38 & 0x80u) == 0)
          v39 = a2;
        else
          v39 = (uint64_t *)*a2;
        if ((v38 & 0x80u) != 0)
          v38 = a2[1];
        *(_QWORD *)v37 = v34;
        *(_OWORD *)(v37 + 8) = *(_OWORD *)&v65[8];
        *(_QWORD *)&v65[8] = 0;
        *(_QWORD *)&v65[16] = 0;
        *(_OWORD *)(v37 + 24) = v66;
        v66 = 0uLL;
        *(_QWORD *)(v37 + 40) = v39;
        *(_QWORD *)(v37 + 48) = v38;
        *(_BYTE *)(v37 + 56) = type;
        __dst = 0;
        *(_QWORD *)&v60 = v37;
        (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8), &v60);
        v40 = v60;
        *(_QWORD *)&v60 = 0;
        if (v40)
        {
          v41 = *(std::__shared_weak_count **)(v40 + 32);
          if (v41)
          {
            v42 = (unint64_t *)&v41->__shared_owners_;
            do
              v43 = __ldaxr(v42);
            while (__stlxr(v43 - 1, v42));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
              std::__shared_weak_count::__release_weak(v41);
            }
          }
          v44 = *(std::__shared_weak_count **)(v40 + 16);
          if (v44)
          {
            v45 = (unint64_t *)&v44->__shared_owners_;
            do
              v46 = __ldaxr(v45);
            while (__stlxr(v46 - 1, v45));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
              std::__shared_weak_count::__release_weak(v44);
            }
          }
          MEMORY[0x227684CE8](v40, 0x10F0C40B62ED6C6);
          v47 = __dst;
          __dst = 0;
          if (v47)
          {
            v48 = (std::__shared_weak_count *)v47[4];
            if (v48)
            {
              v49 = (unint64_t *)&v48->__shared_owners_;
              do
                v50 = __ldaxr(v49);
              while (__stlxr(v50 - 1, v49));
              if (!v50)
              {
                ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
                std::__shared_weak_count::__release_weak(v48);
              }
            }
            v51 = (std::__shared_weak_count *)v47[2];
            if (v51)
            {
              v52 = (unint64_t *)&v51->__shared_owners_;
              do
                v53 = __ldaxr(v52);
              while (__stlxr(v53 - 1, v52));
              if (!v53)
              {
                ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
                std::__shared_weak_count::__release_weak(v51);
              }
            }
            MEMORY[0x227684CE8](v47, 0x10F0C40B62ED6C6);
          }
        }
        v54 = (std::__shared_weak_count *)*((_QWORD *)&v66 + 1);
        if (*((_QWORD *)&v66 + 1))
        {
          v55 = (unint64_t *)(*((_QWORD *)&v66 + 1) + 8);
          do
            v56 = __ldaxr(v55);
          while (__stlxr(v56 - 1, v55));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
        v57 = *(std::__shared_weak_count **)&v65[16];
        if (*(_QWORD *)&v65[16])
        {
          v58 = (unint64_t *)(*(_QWORD *)&v65[16] + 8);
          do
            v59 = __ldaxr(v58);
          while (__stlxr(v59 - 1, v58));
          if (!v59)
          {
            ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
            std::__shared_weak_count::__release_weak(v57);
          }
        }
        return;
      }
    }
    memcpy(p_dst, v12, v14);
    goto LABEL_13;
  }
  os_log_type_enabled(oslog, type);
  v16 = *a5;
  *(_DWORD *)v65 = 136315138;
  *(_QWORD *)&v65[4] = v16;
  v17 = (void *)_os_log_send_and_compose_impl();
  if (v17)
    free(v17);
}

void sub_22357020C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;
  uint64_t v12;
  uint64_t v13;
  va_list va2;

  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v10 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  sub_22319A054((uint64_t *)va);
  sub_22319A054((uint64_t *)va1);
  sub_223199DE8((uint64_t)va2);
  _Unwind_Resume(a1);
}

void sub_223570230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_223199DE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223570244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  void *v11;
  int v12;

  if (v12 < 0)
  {
    operator delete(v11);
    sub_223199DE8((uint64_t)&a11);
    _Unwind_Resume(a1);
  }
  sub_223199DE8((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_22357029C(uint64_t a1, uint64_t *a2, os_log_t oslog, os_log_type_t type, const char **a5)
{
  size_t v9;
  std::__shared_weak_count_vtbl *v10;
  std::__shared_weak_count *v11;
  const char *v12;
  size_t v13;
  size_t v14;
  _QWORD *p_dst;
  const char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  _QWORD *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  __int128 v60;
  std::__shared_weak_count *v61;
  __int128 v62;
  _QWORD *__dst;
  __int128 v64;
  _BYTE v65[24];
  __int128 v66;
  uint64_t v67;
  _QWORD v68[3];

  v68[2] = *MEMORY[0x24BDAC8D0];
  if (a1 && *(_QWORD *)(a1 + 8))
  {
    v9 = _os_log_pack_size();
    v10 = (std::__shared_weak_count_vtbl *)operator new(v9, (std::align_val_t)8uLL);
    v11 = (std::__shared_weak_count *)operator new();
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = v10;
    *(_QWORD *)&v60 = v10;
    *((_QWORD *)&v60 + 1) = v10;
    v62 = 0uLL;
    v61 = v11;
    v12 = *a5;
    v13 = strlen(*a5);
    if (v13 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v14 = v13;
    if (v13 >= 0x17)
    {
      v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v13 | 7) != 0x17)
        v18 = v13 | 7;
      v19 = v18 + 1;
      p_dst = operator new(v18 + 1);
      *(_QWORD *)&v64 = v14;
      *((_QWORD *)&v64 + 1) = v19 | 0x8000000000000000;
      __dst = p_dst;
    }
    else
    {
      HIBYTE(v64) = v13;
      p_dst = &__dst;
      if (!v13)
      {
LABEL_13:
        *((_BYTE *)p_dst + v14) = 0;
        v20 = __dst;
        v68[0] = v64;
        *(_QWORD *)((char *)v68 + 7) = *(_QWORD *)((char *)&v64 + 7);
        v21 = HIBYTE(v64);
        v22 = operator new(0x38uLL);
        v22[1] = 0;
        v22[2] = 0;
        v22[3] = off_24EC1FA48;
        *v22 = &off_24EC1F9F8;
        v23 = v68[0];
        v22[4] = v20;
        v22[5] = v23;
        *(_QWORD *)((char *)v22 + 47) = *(_QWORD *)((char *)v68 + 7);
        *((_BYTE *)v22 + 55) = v21;
        v68[0] = 0;
        *(_QWORD *)((char *)v68 + 7) = 0;
        v24 = (std::__shared_weak_count *)*((_QWORD *)&v62 + 1);
        *(_QWORD *)&v62 = v22 + 3;
        *((_QWORD *)&v62 + 1) = v22;
        if (v24)
        {
          p_shared_owners = (unint64_t *)&v24->__shared_owners_;
          do
            v26 = __ldaxr(p_shared_owners);
          while (__stlxr(v26 - 1, p_shared_owners));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
            std::__shared_weak_count::__release_weak(v24);
          }
        }
        *(_OWORD *)v65 = v60;
        *(_QWORD *)&v65[16] = v61;
        if (v61)
        {
          v27 = &v61->__shared_owners_;
          do
            v28 = __ldxr((unint64_t *)v27);
          while (__stxr(v28 + 1, (unint64_t *)v27));
        }
        v66 = v62;
        if (*((_QWORD *)&v62 + 1))
        {
          v29 = (unint64_t *)(*((_QWORD *)&v62 + 1) + 8);
          do
            v30 = __ldxr(v29);
          while (__stxr(v30 + 1, v29));
          v67 = v62;
          do
            v31 = __ldaxr(v29);
          while (__stlxr(v31 - 1, v29));
          if (!v31)
          {
            (*(void (**)(_QWORD))(**((_QWORD **)&v62 + 1) + 16))(*((_QWORD *)&v62 + 1));
            std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v62 + 1));
          }
        }
        else
        {
          v67 = v62;
        }
        if (v61)
        {
          v32 = &v61->__shared_owners_;
          do
            v33 = __ldaxr((unint64_t *)v32);
          while (__stlxr(v33 - 1, (unint64_t *)v32));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
            std::__shared_weak_count::__release_weak(v61);
          }
        }
        v34 = *(_QWORD *)v65;
        if (*(char *)(v67 + 31) >= 0)
          v35 = v67 + 8;
        else
          v35 = *(_QWORD *)(v67 + 8);
        v36 = _os_log_pack_fill();
        *(_DWORD *)v36 = 136315138;
        *(_QWORD *)(v36 + 4) = v35;
        v37 = operator new();
        v38 = *((unsigned __int8 *)a2 + 23);
        if ((v38 & 0x80u) == 0)
          v39 = a2;
        else
          v39 = (uint64_t *)*a2;
        if ((v38 & 0x80u) != 0)
          v38 = a2[1];
        *(_QWORD *)v37 = v34;
        *(_OWORD *)(v37 + 8) = *(_OWORD *)&v65[8];
        *(_QWORD *)&v65[8] = 0;
        *(_QWORD *)&v65[16] = 0;
        *(_OWORD *)(v37 + 24) = v66;
        v66 = 0uLL;
        *(_QWORD *)(v37 + 40) = v39;
        *(_QWORD *)(v37 + 48) = v38;
        *(_BYTE *)(v37 + 56) = type;
        __dst = 0;
        *(_QWORD *)&v60 = v37;
        (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8), &v60);
        v40 = v60;
        *(_QWORD *)&v60 = 0;
        if (v40)
        {
          v41 = *(std::__shared_weak_count **)(v40 + 32);
          if (v41)
          {
            v42 = (unint64_t *)&v41->__shared_owners_;
            do
              v43 = __ldaxr(v42);
            while (__stlxr(v43 - 1, v42));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
              std::__shared_weak_count::__release_weak(v41);
            }
          }
          v44 = *(std::__shared_weak_count **)(v40 + 16);
          if (v44)
          {
            v45 = (unint64_t *)&v44->__shared_owners_;
            do
              v46 = __ldaxr(v45);
            while (__stlxr(v46 - 1, v45));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
              std::__shared_weak_count::__release_weak(v44);
            }
          }
          MEMORY[0x227684CE8](v40, 0x10F0C40B62ED6C6);
          v47 = __dst;
          __dst = 0;
          if (v47)
          {
            v48 = (std::__shared_weak_count *)v47[4];
            if (v48)
            {
              v49 = (unint64_t *)&v48->__shared_owners_;
              do
                v50 = __ldaxr(v49);
              while (__stlxr(v50 - 1, v49));
              if (!v50)
              {
                ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
                std::__shared_weak_count::__release_weak(v48);
              }
            }
            v51 = (std::__shared_weak_count *)v47[2];
            if (v51)
            {
              v52 = (unint64_t *)&v51->__shared_owners_;
              do
                v53 = __ldaxr(v52);
              while (__stlxr(v53 - 1, v52));
              if (!v53)
              {
                ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
                std::__shared_weak_count::__release_weak(v51);
              }
            }
            MEMORY[0x227684CE8](v47, 0x10F0C40B62ED6C6);
          }
        }
        v54 = (std::__shared_weak_count *)*((_QWORD *)&v66 + 1);
        if (*((_QWORD *)&v66 + 1))
        {
          v55 = (unint64_t *)(*((_QWORD *)&v66 + 1) + 8);
          do
            v56 = __ldaxr(v55);
          while (__stlxr(v56 - 1, v55));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
        v57 = *(std::__shared_weak_count **)&v65[16];
        if (*(_QWORD *)&v65[16])
        {
          v58 = (unint64_t *)(*(_QWORD *)&v65[16] + 8);
          do
            v59 = __ldaxr(v58);
          while (__stlxr(v59 - 1, v58));
          if (!v59)
          {
            ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
            std::__shared_weak_count::__release_weak(v57);
          }
        }
        return;
      }
    }
    memcpy(p_dst, v12, v14);
    goto LABEL_13;
  }
  os_log_type_enabled(oslog, type);
  v16 = *a5;
  *(_DWORD *)v65 = 136315138;
  *(_QWORD *)&v65[4] = v16;
  v17 = (void *)_os_log_send_and_compose_impl();
  if (v17)
    free(v17);
}

void sub_223570810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;
  uint64_t v12;
  uint64_t v13;
  va_list va2;

  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v10 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  sub_22319A054((uint64_t *)va);
  sub_22319A054((uint64_t *)va1);
  sub_223199DE8((uint64_t)va2);
  _Unwind_Resume(a1);
}

void sub_223570834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_223199DE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223570848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  void *v11;
  int v12;

  if (v12 < 0)
  {
    operator delete(v11);
    sub_223199DE8((uint64_t)&a11);
    _Unwind_Resume(a1);
  }
  sub_223199DE8((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2235708A0(uint64_t a1, uint64_t *a2, os_log_t oslog, os_log_type_t type, const char **a5)
{
  size_t v9;
  std::__shared_weak_count_vtbl *v10;
  std::__shared_weak_count *v11;
  const char *v12;
  size_t v13;
  size_t v14;
  _QWORD *p_dst;
  const char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  _QWORD *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  __int128 v60;
  std::__shared_weak_count *v61;
  __int128 v62;
  _QWORD *__dst;
  __int128 v64;
  _BYTE v65[24];
  __int128 v66;
  uint64_t v67;
  _QWORD v68[3];

  v68[2] = *MEMORY[0x24BDAC8D0];
  if (a1 && *(_QWORD *)(a1 + 8))
  {
    v9 = _os_log_pack_size();
    v10 = (std::__shared_weak_count_vtbl *)operator new(v9, (std::align_val_t)8uLL);
    v11 = (std::__shared_weak_count *)operator new();
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = v10;
    *(_QWORD *)&v60 = v10;
    *((_QWORD *)&v60 + 1) = v10;
    v62 = 0uLL;
    v61 = v11;
    v12 = *a5;
    v13 = strlen(*a5);
    if (v13 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v14 = v13;
    if (v13 >= 0x17)
    {
      v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v13 | 7) != 0x17)
        v18 = v13 | 7;
      v19 = v18 + 1;
      p_dst = operator new(v18 + 1);
      *(_QWORD *)&v64 = v14;
      *((_QWORD *)&v64 + 1) = v19 | 0x8000000000000000;
      __dst = p_dst;
    }
    else
    {
      HIBYTE(v64) = v13;
      p_dst = &__dst;
      if (!v13)
      {
LABEL_13:
        *((_BYTE *)p_dst + v14) = 0;
        v20 = __dst;
        v68[0] = v64;
        *(_QWORD *)((char *)v68 + 7) = *(_QWORD *)((char *)&v64 + 7);
        v21 = HIBYTE(v64);
        v22 = operator new(0x38uLL);
        v22[1] = 0;
        v22[2] = 0;
        v22[3] = off_24EC1FA48;
        *v22 = &off_24EC1F9F8;
        v23 = v68[0];
        v22[4] = v20;
        v22[5] = v23;
        *(_QWORD *)((char *)v22 + 47) = *(_QWORD *)((char *)v68 + 7);
        *((_BYTE *)v22 + 55) = v21;
        v68[0] = 0;
        *(_QWORD *)((char *)v68 + 7) = 0;
        v24 = (std::__shared_weak_count *)*((_QWORD *)&v62 + 1);
        *(_QWORD *)&v62 = v22 + 3;
        *((_QWORD *)&v62 + 1) = v22;
        if (v24)
        {
          p_shared_owners = (unint64_t *)&v24->__shared_owners_;
          do
            v26 = __ldaxr(p_shared_owners);
          while (__stlxr(v26 - 1, p_shared_owners));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
            std::__shared_weak_count::__release_weak(v24);
          }
        }
        *(_OWORD *)v65 = v60;
        *(_QWORD *)&v65[16] = v61;
        if (v61)
        {
          v27 = &v61->__shared_owners_;
          do
            v28 = __ldxr((unint64_t *)v27);
          while (__stxr(v28 + 1, (unint64_t *)v27));
        }
        v66 = v62;
        if (*((_QWORD *)&v62 + 1))
        {
          v29 = (unint64_t *)(*((_QWORD *)&v62 + 1) + 8);
          do
            v30 = __ldxr(v29);
          while (__stxr(v30 + 1, v29));
          v67 = v62;
          do
            v31 = __ldaxr(v29);
          while (__stlxr(v31 - 1, v29));
          if (!v31)
          {
            (*(void (**)(_QWORD))(**((_QWORD **)&v62 + 1) + 16))(*((_QWORD *)&v62 + 1));
            std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v62 + 1));
          }
        }
        else
        {
          v67 = v62;
        }
        if (v61)
        {
          v32 = &v61->__shared_owners_;
          do
            v33 = __ldaxr((unint64_t *)v32);
          while (__stlxr(v33 - 1, (unint64_t *)v32));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
            std::__shared_weak_count::__release_weak(v61);
          }
        }
        v34 = *(_QWORD *)v65;
        if (*(char *)(v67 + 31) >= 0)
          v35 = v67 + 8;
        else
          v35 = *(_QWORD *)(v67 + 8);
        v36 = _os_log_pack_fill();
        *(_DWORD *)v36 = 136315138;
        *(_QWORD *)(v36 + 4) = v35;
        v37 = operator new();
        v38 = *((unsigned __int8 *)a2 + 23);
        if ((v38 & 0x80u) == 0)
          v39 = a2;
        else
          v39 = (uint64_t *)*a2;
        if ((v38 & 0x80u) != 0)
          v38 = a2[1];
        *(_QWORD *)v37 = v34;
        *(_OWORD *)(v37 + 8) = *(_OWORD *)&v65[8];
        *(_QWORD *)&v65[8] = 0;
        *(_QWORD *)&v65[16] = 0;
        *(_OWORD *)(v37 + 24) = v66;
        v66 = 0uLL;
        *(_QWORD *)(v37 + 40) = v39;
        *(_QWORD *)(v37 + 48) = v38;
        *(_BYTE *)(v37 + 56) = type;
        __dst = 0;
        *(_QWORD *)&v60 = v37;
        (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8), &v60);
        v40 = v60;
        *(_QWORD *)&v60 = 0;
        if (v40)
        {
          v41 = *(std::__shared_weak_count **)(v40 + 32);
          if (v41)
          {
            v42 = (unint64_t *)&v41->__shared_owners_;
            do
              v43 = __ldaxr(v42);
            while (__stlxr(v43 - 1, v42));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
              std::__shared_weak_count::__release_weak(v41);
            }
          }
          v44 = *(std::__shared_weak_count **)(v40 + 16);
          if (v44)
          {
            v45 = (unint64_t *)&v44->__shared_owners_;
            do
              v46 = __ldaxr(v45);
            while (__stlxr(v46 - 1, v45));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
              std::__shared_weak_count::__release_weak(v44);
            }
          }
          MEMORY[0x227684CE8](v40, 0x10F0C40B62ED6C6);
          v47 = __dst;
          __dst = 0;
          if (v47)
          {
            v48 = (std::__shared_weak_count *)v47[4];
            if (v48)
            {
              v49 = (unint64_t *)&v48->__shared_owners_;
              do
                v50 = __ldaxr(v49);
              while (__stlxr(v50 - 1, v49));
              if (!v50)
              {
                ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
                std::__shared_weak_count::__release_weak(v48);
              }
            }
            v51 = (std::__shared_weak_count *)v47[2];
            if (v51)
            {
              v52 = (unint64_t *)&v51->__shared_owners_;
              do
                v53 = __ldaxr(v52);
              while (__stlxr(v53 - 1, v52));
              if (!v53)
              {
                ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
                std::__shared_weak_count::__release_weak(v51);
              }
            }
            MEMORY[0x227684CE8](v47, 0x10F0C40B62ED6C6);
          }
        }
        v54 = (std::__shared_weak_count *)*((_QWORD *)&v66 + 1);
        if (*((_QWORD *)&v66 + 1))
        {
          v55 = (unint64_t *)(*((_QWORD *)&v66 + 1) + 8);
          do
            v56 = __ldaxr(v55);
          while (__stlxr(v56 - 1, v55));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
        v57 = *(std::__shared_weak_count **)&v65[16];
        if (*(_QWORD *)&v65[16])
        {
          v58 = (unint64_t *)(*(_QWORD *)&v65[16] + 8);
          do
            v59 = __ldaxr(v58);
          while (__stlxr(v59 - 1, v58));
          if (!v59)
          {
            ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
            std::__shared_weak_count::__release_weak(v57);
          }
        }
        return;
      }
    }
    memcpy(p_dst, v12, v14);
    goto LABEL_13;
  }
  os_log_type_enabled(oslog, type);
  v16 = *a5;
  *(_DWORD *)v65 = 136315138;
  *(_QWORD *)&v65[4] = v16;
  v17 = (void *)_os_log_send_and_compose_impl();
  if (v17)
    free(v17);
}

void sub_223570E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;
  uint64_t v12;
  uint64_t v13;
  va_list va2;

  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v10 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  sub_22319A054((uint64_t *)va);
  sub_22319A054((uint64_t *)va1);
  sub_223199DE8((uint64_t)va2);
  _Unwind_Resume(a1);
}

void sub_223570E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_223199DE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223570E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  void *v11;
  int v12;

  if (v12 < 0)
  {
    operator delete(v11);
    sub_223199DE8((uint64_t)&a11);
    _Unwind_Resume(a1);
  }
  sub_223199DE8((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_223570EA4(uint64_t a1, uint64_t *a2, os_log_t oslog, os_log_type_t type, const char **a5)
{
  size_t v9;
  std::__shared_weak_count_vtbl *v10;
  std::__shared_weak_count *v11;
  const char *v12;
  size_t v13;
  size_t v14;
  _QWORD *p_dst;
  const char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  _QWORD *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  __int128 v60;
  std::__shared_weak_count *v61;
  __int128 v62;
  _QWORD *__dst;
  __int128 v64;
  _BYTE v65[24];
  __int128 v66;
  uint64_t v67;
  _QWORD v68[3];

  v68[2] = *MEMORY[0x24BDAC8D0];
  if (a1 && *(_QWORD *)(a1 + 8))
  {
    v9 = _os_log_pack_size();
    v10 = (std::__shared_weak_count_vtbl *)operator new(v9, (std::align_val_t)8uLL);
    v11 = (std::__shared_weak_count *)operator new();
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = v10;
    *(_QWORD *)&v60 = v10;
    *((_QWORD *)&v60 + 1) = v10;
    v62 = 0uLL;
    v61 = v11;
    v12 = *a5;
    v13 = strlen(*a5);
    if (v13 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v14 = v13;
    if (v13 >= 0x17)
    {
      v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v13 | 7) != 0x17)
        v18 = v13 | 7;
      v19 = v18 + 1;
      p_dst = operator new(v18 + 1);
      *(_QWORD *)&v64 = v14;
      *((_QWORD *)&v64 + 1) = v19 | 0x8000000000000000;
      __dst = p_dst;
    }
    else
    {
      HIBYTE(v64) = v13;
      p_dst = &__dst;
      if (!v13)
      {
LABEL_13:
        *((_BYTE *)p_dst + v14) = 0;
        v20 = __dst;
        v68[0] = v64;
        *(_QWORD *)((char *)v68 + 7) = *(_QWORD *)((char *)&v64 + 7);
        v21 = HIBYTE(v64);
        v22 = operator new(0x38uLL);
        v22[1] = 0;
        v22[2] = 0;
        v22[3] = off_24EC1FA48;
        *v22 = &off_24EC1F9F8;
        v23 = v68[0];
        v22[4] = v20;
        v22[5] = v23;
        *(_QWORD *)((char *)v22 + 47) = *(_QWORD *)((char *)v68 + 7);
        *((_BYTE *)v22 + 55) = v21;
        v68[0] = 0;
        *(_QWORD *)((char *)v68 + 7) = 0;
        v24 = (std::__shared_weak_count *)*((_QWORD *)&v62 + 1);
        *(_QWORD *)&v62 = v22 + 3;
        *((_QWORD *)&v62 + 1) = v22;
        if (v24)
        {
          p_shared_owners = (unint64_t *)&v24->__shared_owners_;
          do
            v26 = __ldaxr(p_shared_owners);
          while (__stlxr(v26 - 1, p_shared_owners));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
            std::__shared_weak_count::__release_weak(v24);
          }
        }
        *(_OWORD *)v65 = v60;
        *(_QWORD *)&v65[16] = v61;
        if (v61)
        {
          v27 = &v61->__shared_owners_;
          do
            v28 = __ldxr((unint64_t *)v27);
          while (__stxr(v28 + 1, (unint64_t *)v27));
        }
        v66 = v62;
        if (*((_QWORD *)&v62 + 1))
        {
          v29 = (unint64_t *)(*((_QWORD *)&v62 + 1) + 8);
          do
            v30 = __ldxr(v29);
          while (__stxr(v30 + 1, v29));
          v67 = v62;
          do
            v31 = __ldaxr(v29);
          while (__stlxr(v31 - 1, v29));
          if (!v31)
          {
            (*(void (**)(_QWORD))(**((_QWORD **)&v62 + 1) + 16))(*((_QWORD *)&v62 + 1));
            std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v62 + 1));
          }
        }
        else
        {
          v67 = v62;
        }
        if (v61)
        {
          v32 = &v61->__shared_owners_;
          do
            v33 = __ldaxr((unint64_t *)v32);
          while (__stlxr(v33 - 1, (unint64_t *)v32));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
            std::__shared_weak_count::__release_weak(v61);
          }
        }
        v34 = *(_QWORD *)v65;
        if (*(char *)(v67 + 31) >= 0)
          v35 = v67 + 8;
        else
          v35 = *(_QWORD *)(v67 + 8);
        v36 = _os_log_pack_fill();
        *(_DWORD *)v36 = 136315138;
        *(_QWORD *)(v36 + 4) = v35;
        v37 = operator new();
        v38 = *((unsigned __int8 *)a2 + 23);
        if ((v38 & 0x80u) == 0)
          v39 = a2;
        else
          v39 = (uint64_t *)*a2;
        if ((v38 & 0x80u) != 0)
          v38 = a2[1];
        *(_QWORD *)v37 = v34;
        *(_OWORD *)(v37 + 8) = *(_OWORD *)&v65[8];
        *(_QWORD *)&v65[8] = 0;
        *(_QWORD *)&v65[16] = 0;
        *(_OWORD *)(v37 + 24) = v66;
        v66 = 0uLL;
        *(_QWORD *)(v37 + 40) = v39;
        *(_QWORD *)(v37 + 48) = v38;
        *(_BYTE *)(v37 + 56) = type;
        __dst = 0;
        *(_QWORD *)&v60 = v37;
        (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8), &v60);
        v40 = v60;
        *(_QWORD *)&v60 = 0;
        if (v40)
        {
          v41 = *(std::__shared_weak_count **)(v40 + 32);
          if (v41)
          {
            v42 = (unint64_t *)&v41->__shared_owners_;
            do
              v43 = __ldaxr(v42);
            while (__stlxr(v43 - 1, v42));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
              std::__shared_weak_count::__release_weak(v41);
            }
          }
          v44 = *(std::__shared_weak_count **)(v40 + 16);
          if (v44)
          {
            v45 = (unint64_t *)&v44->__shared_owners_;
            do
              v46 = __ldaxr(v45);
            while (__stlxr(v46 - 1, v45));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
              std::__shared_weak_count::__release_weak(v44);
            }
          }
          MEMORY[0x227684CE8](v40, 0x10F0C40B62ED6C6);
          v47 = __dst;
          __dst = 0;
          if (v47)
          {
            v48 = (std::__shared_weak_count *)v47[4];
            if (v48)
            {
              v49 = (unint64_t *)&v48->__shared_owners_;
              do
                v50 = __ldaxr(v49);
              while (__stlxr(v50 - 1, v49));
              if (!v50)
              {
                ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
                std::__shared_weak_count::__release_weak(v48);
              }
            }
            v51 = (std::__shared_weak_count *)v47[2];
            if (v51)
            {
              v52 = (unint64_t *)&v51->__shared_owners_;
              do
                v53 = __ldaxr(v52);
              while (__stlxr(v53 - 1, v52));
              if (!v53)
              {
                ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
                std::__shared_weak_count::__release_weak(v51);
              }
            }
            MEMORY[0x227684CE8](v47, 0x10F0C40B62ED6C6);
          }
        }
        v54 = (std::__shared_weak_count *)*((_QWORD *)&v66 + 1);
        if (*((_QWORD *)&v66 + 1))
        {
          v55 = (unint64_t *)(*((_QWORD *)&v66 + 1) + 8);
          do
            v56 = __ldaxr(v55);
          while (__stlxr(v56 - 1, v55));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
        v57 = *(std::__shared_weak_count **)&v65[16];
        if (*(_QWORD *)&v65[16])
        {
          v58 = (unint64_t *)(*(_QWORD *)&v65[16] + 8);
          do
            v59 = __ldaxr(v58);
          while (__stlxr(v59 - 1, v58));
          if (!v59)
          {
            ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
            std::__shared_weak_count::__release_weak(v57);
          }
        }
        return;
      }
    }
    memcpy(p_dst, v12, v14);
    goto LABEL_13;
  }
  os_log_type_enabled(oslog, type);
  v16 = *a5;
  *(_DWORD *)v65 = 136315138;
  *(_QWORD *)&v65[4] = v16;
  v17 = (void *)_os_log_send_and_compose_impl();
  if (v17)
    free(v17);
}

void sub_223571418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;
  uint64_t v12;
  uint64_t v13;
  va_list va2;

  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v10 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  sub_22319A054((uint64_t *)va);
  sub_22319A054((uint64_t *)va1);
  sub_223199DE8((uint64_t)va2);
  _Unwind_Resume(a1);
}

void sub_22357143C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_223199DE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223571450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  void *v11;
  int v12;

  if (v12 < 0)
  {
    operator delete(v11);
    sub_223199DE8((uint64_t)&a11);
    _Unwind_Resume(a1);
  }
  sub_223199DE8((uint64_t)&a11);
  _Unwind_Resume(a1);
}

_DWORD *sub_2235714A8(_DWORD ***a1)
{
  return sub_2235714C4(**a1, (char *)(*a1)[1]);
}

void sub_2235714B4(uint64_t a1, uint64_t a2)
{
  sub_2235715B4((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_2235714C4(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24EC48958[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2235715B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24EC48958[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_22319BD1C((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_223571768(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_2235717AC(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_2235718A4((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_22357189C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2235718A4(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_22316E078();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_223174E94();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_22316DBC0();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_223571AA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22319C040((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223571AB4(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t **v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t **v11;
  uint64_t *v12;
  uint64_t **v13;
  uint64_t v14[2];

  sub_224502FB8(a2, "Meshing", a3, &v13);
  v6 = operator new();
  v7 = v13;
  v14[0] = (uint64_t)v13;
  if (v13)
  {
    v8 = (std::__shared_weak_count *)operator new();
    v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC2E800;
    v8->__shared_owners_ = 0;
    v8->__shared_weak_owners_ = 0;
    v8[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  }
  else
  {
    v8 = 0;
  }
  v14[1] = (uint64_t)v8;
  v13 = 0;
  sub_223571E7C(v6, v14, a1);
  *a4 = v6;
  if (!v8)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    v11 = v13;
    if (v13)
    {
LABEL_9:
      v12 = *v11;
      *v11 = 0;
      if (v12)
        sub_22450297C((uint64_t)v11, v12);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_8:
    v11 = v13;
    if (v13)
      goto LABEL_9;
  }
}

void sub_223571C08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  MEMORY[0x227684CE8](v2, 0x10B3C4089D496E2);
  sub_22331A3CC((uint64_t ***)va);
  _Unwind_Resume(a1);
}

void sub_223571C44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22331A3CC((uint64_t ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_223571C58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;

  *(_QWORD *)a1 = &off_24EC48A58;
  v2 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = 0;
  if (v2)
  {
    v3 = sub_223572144(v2);
    MEMORY[0x227684CE8](v3, 0x10B2C40AF3E95EELL);
  }
  v4 = *(std::__shared_weak_count **)(a1 + 64);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      v7 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 72) = 0;
      if (!v7)
        goto LABEL_9;
      goto LABEL_8;
    }
  }
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = 0;
  if (v7)
  {
LABEL_8:
    v8 = sub_223572144(v7);
    MEMORY[0x227684CE8](v8, 0x10B2C40AF3E95EELL);
  }
LABEL_9:
  v9 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v9)
    goto LABEL_13;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
  {
LABEL_13:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_14;
LABEL_19:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_20;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_19;
LABEL_14:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_20:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_223571D90(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC48A10;
  v2 = (std::__shared_weak_count *)a1[11];
  if (!v2)
    return sub_223571C58((uint64_t)a1);
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_223571C58((uint64_t)a1);
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_223571C58((uint64_t)a1);
}

void sub_223571E04(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC48A10;
  v2 = (std::__shared_weak_count *)a1[11];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  sub_223571C58((uint64_t)a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223571E7C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v25;

  v6 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v10 = *a3;
  v9 = (std::__shared_weak_count *)a3[1];
  v25 = v9;
  if (v9)
  {
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  *(_QWORD *)a1 = &off_24EC48A58;
  if (*(char *)(v10 + 1423) < 0)
  {
    sub_223197FA4((_BYTE *)(a1 + 8), *(void **)(v10 + 1400), *(_QWORD *)(v10 + 1408));
  }
  else
  {
    v13 = *(_OWORD *)(v10 + 1400);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(v10 + 1416);
    *(_OWORD *)(a1 + 8) = v13;
  }
  if (*(char *)(v10 + 1447) < 0)
  {
    sub_223197FA4((_BYTE *)(a1 + 32), *(void **)(v10 + 1424), *(_QWORD *)(v10 + 1432));
  }
  else
  {
    v14 = *(_OWORD *)(v10 + 1424);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(v10 + 1440);
    *(_OWORD *)(a1 + 32) = v14;
  }
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v5;
  if (v5)
  {
    v15 = (unint64_t *)&v5->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
  }
  sub_223576404();
  if (v5)
  {
    v17 = (unint64_t *)&v5->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (v25)
  {
    v19 = (unint64_t *)&v25->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  *(_QWORD *)a1 = &off_24EC48A10;
  *(_QWORD *)(a1 + 80) = *a3;
  v21 = a3[1];
  *(_QWORD *)(a1 + 88) = v21;
  if (v21)
  {
    v22 = (unint64_t *)(v21 + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  return a1;
}

void sub_223572084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;
  void **v12;

  if ((*(char *)(v11 + 31) & 0x80000000) == 0)
  {
    sub_223167354((uint64_t)&a9);
    sub_223167354((uint64_t)&a11);
    _Unwind_Resume(a1);
  }
  operator delete(*v12);
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_223572120(uint64_t a1)
{
  sub_223571C58(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223572144(uint64_t a1)
{
  sub_223572228(a1 + 4032);
  sub_2235724D4(a1 + 3864);
  sub_223572780(a1 + 3696);
  sub_223572A2C(a1 + 3528);
  sub_223572CD8(a1 + 3360);
  sub_223572F84(a1 + 3192);
  sub_223573230(a1 + 3024);
  sub_2235734DC(a1 + 2856);
  sub_2235739A8(a1 + 2688);
  sub_223573C54(a1 + 2520);
  sub_223574120(a1 + 2352);
  sub_2235743CC(a1 + 2184);
  sub_223574678(a1 + 2016);
  sub_223574884(a1 + 1848);
  sub_223574A90(a1 + 1680);
  sub_223574D3C(a1 + 1512);
  sub_223574FE8(a1 + 1344);
  sub_223575294(a1 + 1176);
  sub_223575540(a1 + 1008);
  sub_2235757EC(a1 + 840);
  sub_2234EE968(a1 + 672);
  sub_223575A98(a1 + 504);
  sub_223575D44(a1 + 336);
  sub_223575FF0(a1 + 168);
  return sub_2235761FC(a1);
}

uint64_t sub_223572228(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48A78;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC37DE0;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC48AA8;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_22357240C(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48AA8;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_22357244C(uint64_t a1)
{
  sub_223572228(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223572470(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48AA8;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235724C0(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235724D4(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48AE0;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC37DE0;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC48B10;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_2235726B8(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48B10;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_2235726F8(uint64_t a1)
{
  sub_2235724D4(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22357271C(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48B10;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22357276C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223572780(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48B48;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC2E888;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC48B78;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223572964(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48B78;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_2235729A4(uint64_t a1)
{
  sub_223572780(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235729C8(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48B78;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223572A18(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223572A2C(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48BB0;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC2E888;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC48BE0;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223572C10(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48BE0;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223572C50(uint64_t a1)
{
  sub_223572A2C(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223572C74(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48BE0;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223572CC4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223572CD8(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48C18;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC2E888;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC48C48;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223572EBC(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48C48;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223572EFC(uint64_t a1)
{
  sub_223572CD8(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223572F20(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48C48;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223572F70(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223572F84(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48C80;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC2E888;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC48CB0;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223573168(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48CB0;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_2235731A8(uint64_t a1)
{
  sub_223572F84(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235731CC(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48CB0;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22357321C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223573230(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48CE8;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC2E888;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC48D18;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223573414(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48D18;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223573454(uint64_t a1)
{
  sub_223573230(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223573478(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48D18;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235734C8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235734DC(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48D50;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC48D80;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC48DF0;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_2235736C0(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC48D80;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

_QWORD *sub_2235736F8(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48DF0;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223573738(uint64_t a1)
{
  sub_2235734DC(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22357375C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC48D80;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

void sub_2235737A4(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    v15 = v5;
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      v14 = v7;
      if (v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a2 + 8) = 0;
        v12 = &off_24EC48DB8;
        v13 = v8;
        (*(void (**)(uint64_t, uint64_t (***)()))(*(_QWORD *)v7 + 16))(v7, &v12);
        v9 = v13;
        v12 = &off_24EC48DB8;
        v13 = 0;
        if (v9)
          (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
      }
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223573878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  if (a3)
    (*(void (**)(uint64_t))(*(_QWORD *)a3 + 8))(a3);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2235738A4(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48DB8;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_2235738E4(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48DB8;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223573934(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

void sub_223573944(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48DF0;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223573994(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235739A8(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48E28;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC48D80;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC48E58;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223573B8C(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48E58;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223573BCC(uint64_t a1)
{
  sub_2235739A8(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223573BF0(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48E58;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223573C40(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223573C54(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48E90;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC48EC0;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC48F30;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223573E38(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC48EC0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

_QWORD *sub_223573E70(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48F30;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223573EB0(uint64_t a1)
{
  sub_223573C54(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223573ED4(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC48EC0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

void sub_223573F1C(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    v15 = v5;
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      v14 = v7;
      if (v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a2 + 8) = 0;
        v12 = &off_24EC48EF8;
        v13 = v8;
        (*(void (**)(uint64_t, uint64_t (***)()))(*(_QWORD *)v7 + 16))(v7, &v12);
        v9 = v13;
        v12 = &off_24EC48EF8;
        v13 = 0;
        if (v9)
          (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
      }
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223573FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  if (a3)
    (*(void (**)(uint64_t))(*(_QWORD *)a3 + 8))(a3);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_22357401C(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48EF8;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_22357405C(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48EF8;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235740AC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

void sub_2235740BC(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48F30;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22357410C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223574120(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48F68;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC38370;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC48F98;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223574304(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48F98;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223574344(uint64_t a1)
{
  sub_223574120(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223574368(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC48F98;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235743B8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235743CC(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC48FD0;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45690;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC49000;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_2235745B0(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49000;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_2235745F0(uint64_t a1)
{
  sub_2235743CC(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223574614(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49000;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223574664(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223574678(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC49038;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45488;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC2B310;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_22357485C(uint64_t a1)
{
  sub_223574678(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223574884(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC49068;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC2E888;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC2C458;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_223574A68(uint64_t a1)
{
  sub_223574884(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223574A90(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC49098;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45628;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC490C8;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223574C74(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC490C8;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223574CB4(uint64_t a1)
{
  sub_223574A90(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223574CD8(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC490C8;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223574D28(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223574D3C(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC49100;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC455C0;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC49130;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223574F20(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49130;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223574F60(uint64_t a1)
{
  sub_223574D3C(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223574F84(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49130;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223574FD4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223574FE8(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC49168;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45558;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC49198;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_2235751CC(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49198;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_22357520C(uint64_t a1)
{
  sub_223574FE8(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223575230(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49198;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223575280(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223575294(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC491D0;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC454F0;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC49200;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223575478(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49200;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_2235754B8(uint64_t a1)
{
  sub_223575294(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235754DC(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49200;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22357552C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223575540(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC49238;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45488;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC49268;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223575724(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49268;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223575764(uint64_t a1)
{
  sub_223575540(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223575788(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49268;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235757D8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235757EC(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC492A0;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC37DE0;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC492D0;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_2235759D0(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC492D0;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223575A10(uint64_t a1)
{
  sub_2235757EC(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223575A34(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC492D0;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223575A84(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223575A98(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC49308;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC2E888;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC49338;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223575C7C(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49338;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223575CBC(uint64_t a1)
{
  sub_223575A98(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223575CE0(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC49338;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223575D30(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223575D44(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC49370;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45488;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC493A0;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_223575F28(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC493A0;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223575F68(uint64_t a1)
{
  sub_223575D44(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223575F8C(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC493A0;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223575FDC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223575FF0(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC493D8;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45488;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC2B348;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_2235761D4(uint64_t a1)
{
  sub_223575FF0(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235761FC(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24EC49408;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_2245023F0(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24EC2E850;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24EC45488;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24EC37B68;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_2235763E0(uint64_t a1)
{
  sub_2235761FC(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223576404()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t *v6;
  void *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t *v12;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  void *v17;
  char v18;
  unint64_t *v19;
  unint64_t v20;
  char *v21;
  __int128 v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  std::__shared_weak_count *v27;
  unint64_t *p_shared_owners;
  std::__shared_weak_count *v29;
  unint64_t v30;
  unint64_t *p_shared_weak_owners;
  unint64_t v32;
  unint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  __int128 v41;
  void *v42;
  void *v43;
  char *v44;
  unint64_t *v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t *v63;
  unint64_t v64;
  unint64_t *v65;
  void *v66;
  unint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t *v70;
  uint64_t v71;
  unint64_t *v72;
  unint64_t v73;
  __int128 v74;
  unint64_t *v75;
  unint64_t v76;
  void *v77;
  char v78;
  unint64_t *v79;
  unint64_t v80;
  char *v81;
  __int128 v82;
  void *v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  std::__shared_weak_count *v89;
  unint64_t v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t *v97;
  unint64_t v98;
  unint64_t *v99;
  unint64_t v100;
  __int128 v101;
  void *v102;
  void *v103;
  char *v104;
  unint64_t *v105;
  unint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t *v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t *v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t *v117;
  unint64_t v118;
  uint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t *v123;
  unint64_t v124;
  unint64_t *v125;
  void *v126;
  unint64_t *v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t *v130;
  uint64_t v131;
  unint64_t *v132;
  unint64_t v133;
  __int128 v134;
  unint64_t *v135;
  unint64_t v136;
  void *v137;
  char v138;
  unint64_t *v139;
  unint64_t v140;
  char *v141;
  __int128 v142;
  void *v143;
  _QWORD *v144;
  uint64_t v145;
  _QWORD *v146;
  std::__shared_weak_count *v147;
  unint64_t *v148;
  std::__shared_weak_count *v149;
  unint64_t v150;
  unint64_t *v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t *v157;
  unint64_t v158;
  unint64_t *v159;
  unint64_t v160;
  __int128 v161;
  void *v162;
  void *v163;
  char *v164;
  unint64_t *v165;
  unint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t *v170;
  unint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t *v174;
  unint64_t v175;
  uint64_t v176;
  unint64_t *v177;
  unint64_t v178;
  uint64_t v179;
  std::__shared_weak_count *v180;
  unint64_t *v181;
  unint64_t v182;
  std::__shared_weak_count *v183;
  unint64_t *v184;
  unint64_t v185;
  unint64_t *v186;
  void *v187;
  unint64_t *v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t *v191;
  uint64_t v192;
  unint64_t *v193;
  unint64_t v194;
  __int128 v195;
  unint64_t *v196;
  unint64_t v197;
  void *v198;
  char v199;
  unint64_t *v200;
  unint64_t v201;
  char *v202;
  __int128 v203;
  void *v204;
  _QWORD *v205;
  std::__shared_weak_count *v206;
  unint64_t *v207;
  std::__shared_weak_count *v208;
  unint64_t v209;
  unint64_t *v210;
  unint64_t v211;
  unint64_t v212;
  unint64_t *v213;
  unint64_t v214;
  unint64_t v215;
  unint64_t *v216;
  unint64_t v217;
  std::__shared_weak_count *v218;
  unint64_t *v219;
  unint64_t v220;
  __int128 v221;
  void *v222;
  void *v223;
  char *v224;
  unint64_t *v225;
  unint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t *v230;
  unint64_t v231;
  uint64_t v232;
  unint64_t v233;
  unint64_t *v234;
  unint64_t v235;
  uint64_t v236;
  unint64_t *v237;
  unint64_t v238;
  uint64_t v239;
  std::__shared_weak_count *v240;
  unint64_t *v241;
  unint64_t v242;
  std::__shared_weak_count *v243;
  unint64_t *v244;
  unint64_t v245;
  uint64_t v246;
  unint64_t *v247;
  unint64_t v248;
  std::__shared_weak_count *v249;
  uint64_t v250;
  unint64_t *v251;
  unint64_t v252;
  unint64_t *v253;
  void *v254;
  unint64_t *v255;
  unint64_t v256;
  uint64_t v257;
  unint64_t *v258;
  uint64_t v259;
  unint64_t *v260;
  unint64_t v261;
  __int128 v262;
  unint64_t *v263;
  unint64_t v264;
  void *v265;
  char v266;
  unint64_t *v267;
  unint64_t v268;
  char *v269;
  __int128 v270;
  void *v271;
  _QWORD *v272;
  std::__shared_weak_count *v273;
  unint64_t *v274;
  std::__shared_weak_count *v275;
  unint64_t v276;
  unint64_t *v277;
  unint64_t v278;
  unint64_t v279;
  unint64_t *v280;
  unint64_t v281;
  unint64_t v282;
  std::__shared_weak_count *v283;
  unint64_t *v284;
  unint64_t v285;
  std::__shared_weak_count *v286;
  unint64_t *v287;
  unint64_t v288;
  __int128 v289;
  void *v290;
  void *v291;
  char *v292;
  unint64_t *v293;
  unint64_t v294;
  _QWORD *v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t *v298;
  unint64_t v299;
  uint64_t v300;
  unint64_t v301;
  unint64_t *v302;
  unint64_t v303;
  uint64_t v304;
  unint64_t *v305;
  unint64_t v306;
  uint64_t v307;
  std::__shared_weak_count *v308;
  unint64_t *v309;
  unint64_t v310;
  std::__shared_weak_count *v311;
  unint64_t *v312;
  unint64_t v313;
  unint64_t *v314;
  void *v315;
  unint64_t *v316;
  unint64_t v317;
  uint64_t v318;
  unint64_t *v319;
  uint64_t v320;
  unint64_t *v321;
  unint64_t v322;
  __int128 v323;
  unint64_t *v324;
  unint64_t v325;
  void *v326;
  char v327;
  unint64_t *v328;
  unint64_t v329;
  char *v330;
  __int128 v331;
  void *v332;
  _QWORD *v333;
  std::__shared_weak_count *v334;
  unint64_t *v335;
  std::__shared_weak_count *v336;
  unint64_t v337;
  unint64_t *v338;
  unint64_t v339;
  unint64_t v340;
  unint64_t *v341;
  unint64_t v342;
  unint64_t v343;
  std::__shared_weak_count *v344;
  unint64_t *v345;
  unint64_t v346;
  std::__shared_weak_count *v347;
  unint64_t *v348;
  unint64_t v349;
  __int128 v350;
  void *v351;
  void *v352;
  char *v353;
  unint64_t *v354;
  unint64_t v355;
  _QWORD *v356;
  uint64_t v357;
  uint64_t v358;
  unint64_t *v359;
  unint64_t v360;
  uint64_t v361;
  unint64_t v362;
  unint64_t *v363;
  unint64_t v364;
  uint64_t v365;
  unint64_t *v366;
  unint64_t v367;
  uint64_t v368;
  std::__shared_weak_count *v369;
  unint64_t *v370;
  unint64_t v371;
  std::__shared_weak_count *v372;
  unint64_t *v373;
  unint64_t v374;
  unint64_t *v375;
  void *v376;
  unint64_t *v377;
  unint64_t v378;
  uint64_t v379;
  unint64_t *v380;
  uint64_t v381;
  unint64_t *v382;
  unint64_t v383;
  __int128 v384;
  unint64_t *v385;
  unint64_t v386;
  void *v387;
  char v388;
  unint64_t *v389;
  unint64_t v390;
  char *v391;
  __int128 v392;
  void *v393;
  _QWORD *v394;
  std::__shared_weak_count *v395;
  unint64_t *v396;
  std::__shared_weak_count *v397;
  unint64_t v398;
  unint64_t *v399;
  unint64_t v400;
  unint64_t v401;
  unint64_t *v402;
  unint64_t v403;
  unint64_t v404;
  std::__shared_weak_count *v405;
  unint64_t *v406;
  unint64_t v407;
  std::__shared_weak_count *v408;
  unint64_t *v409;
  unint64_t v410;
  __int128 v411;
  void *v412;
  void *v413;
  char *v414;
  unint64_t *v415;
  unint64_t v416;
  _QWORD *v417;
  uint64_t v418;
  uint64_t v419;
  unint64_t *v420;
  unint64_t v421;
  uint64_t v422;
  unint64_t v423;
  unint64_t *v424;
  unint64_t v425;
  uint64_t v426;
  unint64_t *v427;
  unint64_t v428;
  uint64_t v429;
  std::__shared_weak_count *v430;
  unint64_t *v431;
  unint64_t v432;
  std::__shared_weak_count *v433;
  unint64_t *v434;
  unint64_t v435;
  unint64_t *v436;
  void *v437;
  unint64_t *v438;
  unint64_t v439;
  uint64_t v440;
  unint64_t *v441;
  uint64_t v442;
  unint64_t *v443;
  unint64_t v444;
  __int128 v445;
  unint64_t *v446;
  unint64_t v447;
  void *v448;
  char v449;
  unint64_t *v450;
  unint64_t v451;
  char *v452;
  __int128 v453;
  void *v454;
  _QWORD *v455;
  std::__shared_weak_count *v456;
  unint64_t *v457;
  std::__shared_weak_count *v458;
  unint64_t v459;
  unint64_t *v460;
  unint64_t v461;
  unint64_t v462;
  unint64_t *v463;
  unint64_t v464;
  unint64_t v465;
  std::__shared_weak_count *v466;
  unint64_t *v467;
  unint64_t v468;
  std::__shared_weak_count *v469;
  unint64_t *v470;
  unint64_t v471;
  __int128 v472;
  void *v473;
  void *v474;
  char *v475;
  unint64_t *v476;
  unint64_t v477;
  _QWORD *v478;
  uint64_t v479;
  uint64_t v480;
  unint64_t *v481;
  unint64_t v482;
  uint64_t v483;
  unint64_t v484;
  unint64_t *v485;
  unint64_t v486;
  uint64_t v487;
  unint64_t *v488;
  unint64_t v489;
  uint64_t v490;
  std::__shared_weak_count *v491;
  unint64_t *v492;
  unint64_t v493;
  std::__shared_weak_count *v494;
  unint64_t *v495;
  unint64_t v496;
  unint64_t *v497;
  void *v498;
  unint64_t *v499;
  unint64_t v500;
  uint64_t v501;
  unint64_t *v502;
  uint64_t v503;
  unint64_t *v504;
  unint64_t v505;
  __int128 v506;
  unint64_t *v507;
  unint64_t v508;
  void *v509;
  char v510;
  unint64_t *v511;
  unint64_t v512;
  char *v513;
  __int128 v514;
  void *v515;
  _QWORD *v516;
  std::__shared_weak_count *v517;
  unint64_t *v518;
  std::__shared_weak_count *v519;
  unint64_t v520;
  unint64_t *v521;
  unint64_t v522;
  unint64_t v523;
  unint64_t *v524;
  unint64_t v525;
  unint64_t v526;
  std::__shared_weak_count *v527;
  unint64_t *v528;
  unint64_t v529;
  std::__shared_weak_count *v530;
  unint64_t *v531;
  unint64_t v532;
  __int128 v533;
  void *v534;
  void *v535;
  char *v536;
  unint64_t *v537;
  unint64_t v538;
  _QWORD *v539;
  uint64_t v540;
  uint64_t v541;
  unint64_t *v542;
  unint64_t v543;
  uint64_t v544;
  unint64_t v545;
  unint64_t *v546;
  unint64_t v547;
  uint64_t v548;
  unint64_t *v549;
  unint64_t v550;
  uint64_t v551;
  std::__shared_weak_count *v552;
  unint64_t *v553;
  unint64_t v554;
  std::__shared_weak_count *v555;
  unint64_t *v556;
  unint64_t v557;
  unint64_t *v558;
  void *v559;
  unint64_t *v560;
  unint64_t v561;
  uint64_t v562;
  unint64_t *v563;
  uint64_t v564;
  unint64_t *v565;
  unint64_t v566;
  __int128 v567;
  unint64_t *v568;
  unint64_t v569;
  void *v570;
  char v571;
  unint64_t *v572;
  unint64_t v573;
  char *v574;
  __int128 v575;
  void *v576;
  _QWORD *v577;
  std::__shared_weak_count *v578;
  unint64_t *v579;
  std::__shared_weak_count *v580;
  unint64_t v581;
  unint64_t *v582;
  unint64_t v583;
  unint64_t v584;
  unint64_t *v585;
  unint64_t v586;
  unint64_t v587;
  std::__shared_weak_count *v588;
  unint64_t *v589;
  unint64_t v590;
  std::__shared_weak_count *v591;
  unint64_t *v592;
  unint64_t v593;
  __int128 v594;
  void *v595;
  void *v596;
  char *v597;
  unint64_t *v598;
  unint64_t v599;
  _QWORD *v600;
  uint64_t v601;
  uint64_t v602;
  unint64_t *v603;
  unint64_t v604;
  uint64_t v605;
  unint64_t v606;
  unint64_t *v607;
  unint64_t v608;
  uint64_t v609;
  unint64_t *v610;
  unint64_t v611;
  uint64_t v612;
  std::__shared_weak_count *v613;
  unint64_t *v614;
  unint64_t v615;
  std::__shared_weak_count *v616;
  unint64_t *v617;
  unint64_t v618;
  unint64_t *v619;
  void *v620;
  unint64_t *v621;
  unint64_t v622;
  uint64_t v623;
  unint64_t *v624;
  uint64_t v625;
  unint64_t *v626;
  unint64_t v627;
  __int128 v628;
  unint64_t *v629;
  unint64_t v630;
  void *v631;
  char v632;
  unint64_t *v633;
  unint64_t v634;
  char *v635;
  __int128 v636;
  void *v637;
  _QWORD *v638;
  std::__shared_weak_count *v639;
  unint64_t *v640;
  std::__shared_weak_count *v641;
  unint64_t v642;
  unint64_t *v643;
  unint64_t v644;
  unint64_t v645;
  unint64_t *v646;
  unint64_t v647;
  unint64_t v648;
  std::__shared_weak_count *v649;
  unint64_t *v650;
  unint64_t v651;
  std::__shared_weak_count *v652;
  unint64_t *v653;
  unint64_t v654;
  __int128 v655;
  void *v656;
  void *v657;
  char *v658;
  unint64_t *v659;
  unint64_t v660;
  _QWORD *v661;
  uint64_t v662;
  uint64_t v663;
  unint64_t *v664;
  unint64_t v665;
  uint64_t v666;
  unint64_t v667;
  unint64_t *v668;
  unint64_t v669;
  uint64_t v670;
  unint64_t *v671;
  unint64_t v672;
  uint64_t v673;
  std::__shared_weak_count *v674;
  unint64_t *v675;
  unint64_t v676;
  std::__shared_weak_count *v677;
  unint64_t *v678;
  unint64_t v679;
  unint64_t *v680;
  void *v681;
  unint64_t *v682;
  unint64_t v683;
  uint64_t v684;
  unint64_t *v685;
  uint64_t v686;
  unint64_t *v687;
  unint64_t v688;
  __int128 v689;
  unint64_t *v690;
  unint64_t v691;
  void *v692;
  char v693;
  unint64_t *v694;
  unint64_t v695;
  char *v696;
  __int128 v697;
  void *v698;
  _QWORD *v699;
  std::__shared_weak_count *v700;
  unint64_t *v701;
  std::__shared_weak_count *v702;
  unint64_t v703;
  unint64_t *v704;
  unint64_t v705;
  unint64_t v706;
  unint64_t *v707;
  unint64_t v708;
  unint64_t v709;
  std::__shared_weak_count *v710;
  unint64_t *v711;
  unint64_t v712;
  std::__shared_weak_count *v713;
  unint64_t *v714;
  unint64_t v715;
  __int128 v716;
  void *v717;
  void *v718;
  char *v719;
  unint64_t *v720;
  unint64_t v721;
  _QWORD *v722;
  uint64_t v723;
  uint64_t v724;
  unint64_t *v725;
  unint64_t v726;
  uint64_t v727;
  unint64_t v728;
  unint64_t *v729;
  unint64_t v730;
  uint64_t v731;
  unint64_t *v732;
  unint64_t v733;
  uint64_t v734;
  std::__shared_weak_count *v735;
  unint64_t *v736;
  unint64_t v737;
  std::__shared_weak_count *v738;
  unint64_t *v739;
  unint64_t v740;
  unint64_t *v741;
  void *v742;
  unint64_t *v743;
  unint64_t v744;
  uint64_t v745;
  unint64_t *v746;
  uint64_t v747;
  unint64_t *v748;
  unint64_t v749;
  __int128 v750;
  unint64_t *v751;
  unint64_t v752;
  void *v753;
  char v754;
  unint64_t *v755;
  unint64_t v756;
  char *v757;
  __int128 v758;
  void *v759;
  _QWORD *v760;
  std::__shared_weak_count *v761;
  unint64_t *v762;
  std::__shared_weak_count *v763;
  unint64_t v764;
  unint64_t *v765;
  unint64_t v766;
  unint64_t v767;
  unint64_t *v768;
  unint64_t v769;
  unint64_t v770;
  std::__shared_weak_count *v771;
  unint64_t *v772;
  unint64_t v773;
  std::__shared_weak_count *v774;
  unint64_t *v775;
  unint64_t v776;
  __int128 v777;
  void *v778;
  void *v779;
  char *v780;
  unint64_t *v781;
  unint64_t v782;
  _QWORD *v783;
  uint64_t v784;
  uint64_t v785;
  unint64_t *v786;
  unint64_t v787;
  uint64_t v788;
  unint64_t v789;
  unint64_t *v790;
  unint64_t v791;
  uint64_t v792;
  unint64_t *v793;
  unint64_t v794;
  uint64_t v795;
  std::__shared_weak_count *v796;
  unint64_t *v797;
  unint64_t v798;
  std::__shared_weak_count *v799;
  unint64_t *v800;
  unint64_t v801;
  unint64_t *v802;
  void *v803;
  unint64_t *v804;
  unint64_t v805;
  uint64_t v806;
  unint64_t *v807;
  uint64_t v808;
  unint64_t *v809;
  unint64_t v810;
  __int128 v811;
  unint64_t *v812;
  unint64_t v813;
  void *v814;
  char v815;
  unint64_t *v816;
  unint64_t v817;
  char *v818;
  __int128 v819;
  void *v820;
  _QWORD *v821;
  std::__shared_weak_count *v822;
  unint64_t *v823;
  std::__shared_weak_count *v824;
  unint64_t v825;
  unint64_t *v826;
  unint64_t v827;
  unint64_t v828;
  unint64_t *v829;
  unint64_t v830;
  unint64_t v831;
  std::__shared_weak_count *v832;
  unint64_t *v833;
  unint64_t v834;
  std::__shared_weak_count *v835;
  unint64_t *v836;
  unint64_t v837;
  __int128 v838;
  void *v839;
  void *v840;
  char *v841;
  unint64_t *v842;
  unint64_t v843;
  _QWORD *v844;
  uint64_t v845;
  uint64_t v846;
  unint64_t *v847;
  unint64_t v848;
  uint64_t v849;
  unint64_t v850;
  unint64_t *v851;
  unint64_t v852;
  uint64_t v853;
  unint64_t *v854;
  unint64_t v855;
  uint64_t v856;
  std::__shared_weak_count *v857;
  unint64_t *v858;
  unint64_t v859;
  std::__shared_weak_count *v860;
  unint64_t *v861;
  unint64_t v862;
  unint64_t *v863;
  void *v864;
  unint64_t *v865;
  unint64_t v866;
  uint64_t v867;
  unint64_t *v868;
  uint64_t v869;
  unint64_t *v870;
  unint64_t v871;
  __int128 v872;
  unint64_t *v873;
  unint64_t v874;
  void *v875;
  char v876;
  unint64_t *v877;
  unint64_t v878;
  char *v879;
  __int128 v880;
  void *v881;
  _QWORD *v882;
  std::__shared_weak_count *v883;
  unint64_t *v884;
  std::__shared_weak_count *v885;
  unint64_t v886;
  unint64_t *v887;
  unint64_t v888;
  unint64_t v889;
  unint64_t *v890;
  unint64_t v891;
  unint64_t v892;
  std::__shared_weak_count *v893;
  unint64_t *v894;
  unint64_t v895;
  std::__shared_weak_count *v896;
  unint64_t *v897;
  unint64_t v898;
  __int128 v899;
  void *v900;
  void *v901;
  char *v902;
  unint64_t *v903;
  unint64_t v904;
  _QWORD *v905;
  uint64_t v906;
  uint64_t v907;
  unint64_t *v908;
  unint64_t v909;
  uint64_t v910;
  unint64_t v911;
  unint64_t *v912;
  unint64_t v913;
  uint64_t v914;
  unint64_t *v915;
  unint64_t v916;
  uint64_t v917;
  std::__shared_weak_count *v918;
  unint64_t *v919;
  unint64_t v920;
  std::__shared_weak_count *v921;
  unint64_t *v922;
  unint64_t v923;
  unint64_t *v924;
  void *v925;
  unint64_t *v926;
  unint64_t v927;
  uint64_t v928;
  unint64_t *v929;
  uint64_t v930;
  unint64_t *v931;
  unint64_t v932;
  __int128 v933;
  unint64_t *v934;
  unint64_t v935;
  void *v936;
  char v937;
  unint64_t *v938;
  unint64_t v939;
  char *v940;
  __int128 v941;
  void *v942;
  _QWORD *v943;
  std::__shared_weak_count *v944;
  unint64_t *v945;
  std::__shared_weak_count *v946;
  unint64_t v947;
  unint64_t *v948;
  unint64_t v949;
  unint64_t v950;
  unint64_t *v951;
  unint64_t v952;
  unint64_t v953;
  std::__shared_weak_count *v954;
  unint64_t *v955;
  unint64_t v956;
  std::__shared_weak_count *v957;
  unint64_t *v958;
  unint64_t v959;
  __int128 v960;
  void *v961;
  void *v962;
  char *v963;
  unint64_t *v964;
  unint64_t v965;
  _QWORD *v966;
  uint64_t v967;
  uint64_t v968;
  unint64_t *v969;
  unint64_t v970;
  uint64_t v971;
  unint64_t v972;
  unint64_t *v973;
  unint64_t v974;
  uint64_t v975;
  unint64_t *v976;
  unint64_t v977;
  uint64_t v978;
  std::__shared_weak_count *v979;
  unint64_t *v980;
  unint64_t v981;
  std::__shared_weak_count *v982;
  unint64_t *v983;
  unint64_t v984;
  unint64_t *v985;
  void *v986;
  unint64_t *v987;
  unint64_t v988;
  uint64_t v989;
  unint64_t *v990;
  uint64_t v991;
  unint64_t *v992;
  unint64_t v993;
  __int128 v994;
  unint64_t *v995;
  unint64_t v996;
  void *v997;
  char v998;
  unint64_t *v999;
  unint64_t v1000;
  char *v1001;
  __int128 v1002;
  void *v1003;
  _QWORD *v1004;
  std::__shared_weak_count *v1005;
  unint64_t *v1006;
  std::__shared_weak_count *v1007;
  unint64_t v1008;
  unint64_t *v1009;
  unint64_t v1010;
  unint64_t v1011;
  unint64_t *v1012;
  unint64_t v1013;
  unint64_t v1014;
  std::__shared_weak_count *v1015;
  unint64_t *v1016;
  unint64_t v1017;
  std::__shared_weak_count *v1018;
  unint64_t *v1019;
  unint64_t v1020;
  __int128 v1021;
  void *v1022;
  void *v1023;
  char *v1024;
  unint64_t *v1025;
  unint64_t v1026;
  _QWORD *v1027;
  uint64_t v1028;
  uint64_t v1029;
  unint64_t *v1030;
  unint64_t v1031;
  uint64_t v1032;
  unint64_t v1033;
  unint64_t *v1034;
  unint64_t v1035;
  uint64_t v1036;
  unint64_t *v1037;
  unint64_t v1038;
  uint64_t v1039;
  std::__shared_weak_count *v1040;
  unint64_t *v1041;
  unint64_t v1042;
  std::__shared_weak_count *v1043;
  unint64_t *v1044;
  unint64_t v1045;
  unint64_t *v1046;
  void *v1047;
  unint64_t *v1048;
  unint64_t v1049;
  uint64_t v1050;
  unint64_t *v1051;
  uint64_t v1052;
  unint64_t *v1053;
  unint64_t v1054;
  __int128 v1055;
  unint64_t *v1056;
  unint64_t v1057;
  void *v1058;
  void *v1059;
  char v1060;
  unint64_t *v1061;
  unint64_t v1062;
  char *v1063;
  __int128 v1064;
  void *v1065;
  _QWORD *v1066;
  std::__shared_weak_count *v1067;
  unint64_t *v1068;
  std::__shared_weak_count *v1069;
  unint64_t v1070;
  unint64_t *v1071;
  unint64_t v1072;
  unint64_t v1073;
  unint64_t *v1074;
  unint64_t v1075;
  unint64_t v1076;
  std::__shared_weak_count *v1077;
  unint64_t *v1078;
  unint64_t v1079;
  std::__shared_weak_count *v1080;
  unint64_t *v1081;
  unint64_t v1082;
  __int128 v1083;
  void *v1084;
  void *v1085;
  char *v1086;
  unint64_t *v1087;
  unint64_t v1088;
  _QWORD *v1089;
  uint64_t v1090;
  uint64_t v1091;
  unint64_t *v1092;
  unint64_t v1093;
  uint64_t v1094;
  unint64_t v1095;
  unint64_t *v1096;
  unint64_t v1097;
  uint64_t v1098;
  unint64_t *v1099;
  unint64_t v1100;
  uint64_t v1101;
  std::__shared_weak_count *v1102;
  unint64_t *v1103;
  unint64_t v1104;
  std::__shared_weak_count *v1105;
  unint64_t *v1106;
  unint64_t v1107;
  unint64_t *v1108;
  void *v1109;
  unint64_t *v1110;
  unint64_t v1111;
  unint64_t *v1112;
  uint64_t v1113;
  unint64_t *v1114;
  unint64_t v1115;
  __int128 v1116;
  unint64_t *v1117;
  unint64_t v1118;
  void *v1119;
  void *v1120;
  char v1121;
  unint64_t *v1122;
  unint64_t v1123;
  char *v1124;
  __int128 v1125;
  void *v1126;
  _QWORD *v1127;
  std::__shared_weak_count *v1128;
  unint64_t *v1129;
  std::__shared_weak_count *v1130;
  unint64_t v1131;
  unint64_t *v1132;
  unint64_t v1133;
  unint64_t v1134;
  unint64_t *v1135;
  unint64_t v1136;
  unint64_t v1137;
  std::__shared_weak_count *v1138;
  unint64_t *v1139;
  unint64_t v1140;
  std::__shared_weak_count *v1141;
  unint64_t *v1142;
  unint64_t v1143;
  __int128 v1144;
  void *v1145;
  void *v1146;
  char *v1147;
  unint64_t *v1148;
  unint64_t v1149;
  _QWORD *v1150;
  uint64_t v1151;
  uint64_t v1152;
  unint64_t *v1153;
  unint64_t v1154;
  uint64_t v1155;
  unint64_t v1156;
  unint64_t *v1157;
  unint64_t v1158;
  uint64_t v1159;
  unint64_t *v1160;
  unint64_t v1161;
  uint64_t v1162;
  std::__shared_weak_count *v1163;
  unint64_t *v1164;
  unint64_t v1165;
  std::__shared_weak_count *v1166;
  unint64_t *v1167;
  unint64_t v1168;
  unint64_t *v1169;
  void *v1170;
  unint64_t *v1171;
  unint64_t v1172;
  unint64_t *v1173;
  uint64_t v1174;
  unint64_t *v1175;
  unint64_t v1176;
  __int128 v1177;
  unint64_t *v1178;
  unint64_t v1179;
  void *v1180;
  char v1181;
  unint64_t *v1182;
  unint64_t v1183;
  char *v1184;
  __int128 v1185;
  uint64_t v1186;
  _QWORD *v1187;
  std::__shared_weak_count *v1188;
  unint64_t *v1189;
  std::__shared_weak_count *v1190;
  unint64_t v1191;
  unint64_t *v1192;
  unint64_t v1193;
  unint64_t v1194;
  unint64_t *v1195;
  unint64_t v1196;
  unint64_t v1197;
  std::__shared_weak_count *v1198;
  unint64_t *v1199;
  unint64_t v1200;
  std::__shared_weak_count *v1201;
  unint64_t *v1202;
  unint64_t v1203;
  __int128 v1204;
  void *v1205;
  void *v1206;
  char *v1207;
  unint64_t *v1208;
  unint64_t v1209;
  _QWORD *v1210;
  uint64_t v1211;
  uint64_t v1212;
  unint64_t *v1213;
  unint64_t v1214;
  uint64_t v1215;
  unint64_t v1216;
  unint64_t *v1217;
  unint64_t v1218;
  uint64_t v1219;
  unint64_t *v1220;
  unint64_t v1221;
  uint64_t v1222;
  std::__shared_weak_count *v1223;
  unint64_t *v1224;
  unint64_t v1225;
  std::__shared_weak_count *v1226;
  unint64_t *v1227;
  unint64_t v1228;
  unint64_t *v1229;
  void *v1230;
  unint64_t *v1231;
  unint64_t v1232;
  uint64_t v1233;
  uint64_t v1234;
  unint64_t *v1235;
  unint64_t v1236;
  __int128 v1237;
  unint64_t *v1238;
  unint64_t v1239;
  void *v1240;
  char v1241;
  unint64_t *v1242;
  unint64_t v1243;
  char *v1244;
  __int128 v1245;
  uint64_t v1246;
  _QWORD *v1247;
  std::__shared_weak_count *v1248;
  unint64_t *v1249;
  std::__shared_weak_count *v1250;
  unint64_t v1251;
  unint64_t *v1252;
  unint64_t v1253;
  unint64_t v1254;
  unint64_t *v1255;
  unint64_t v1256;
  unint64_t v1257;
  std::__shared_weak_count *v1258;
  unint64_t *v1259;
  unint64_t v1260;
  std::__shared_weak_count *v1261;
  unint64_t *v1262;
  unint64_t v1263;
  __int128 v1264;
  void *v1265;
  void *v1266;
  char *v1267;
  unint64_t *v1268;
  unint64_t v1269;
  _QWORD *v1270;
  uint64_t v1271;
  uint64_t v1272;
  unint64_t *v1273;
  unint64_t v1274;
  uint64_t v1275;
  unint64_t v1276;
  unint64_t *v1277;
  unint64_t v1278;
  uint64_t v1279;
  unint64_t *v1280;
  unint64_t v1281;
  uint64_t v1282;
  std::__shared_weak_count *v1283;
  unint64_t *v1284;
  unint64_t v1285;
  std::__shared_weak_count *v1286;
  unint64_t *v1287;
  unint64_t v1288;
  unint64_t *v1289;
  void *v1290;
  unint64_t *v1291;
  unint64_t v1292;
  uint64_t v1293;
  uint64_t v1294;
  unint64_t *v1295;
  unint64_t v1296;
  __int128 v1297;
  unint64_t *v1298;
  unint64_t v1299;
  void *v1300;
  void *v1301;
  char v1302;
  unint64_t *v1303;
  unint64_t v1304;
  char *v1305;
  __int128 v1306;
  uint64_t v1307;
  _QWORD *v1308;
  std::__shared_weak_count *v1309;
  unint64_t *v1310;
  std::__shared_weak_count *v1311;
  unint64_t v1312;
  unint64_t *v1313;
  unint64_t v1314;
  unint64_t v1315;
  unint64_t *v1316;
  unint64_t v1317;
  unint64_t v1318;
  std::__shared_weak_count *v1319;
  unint64_t *v1320;
  unint64_t v1321;
  std::__shared_weak_count *v1322;
  unint64_t *v1323;
  unint64_t v1324;
  __int128 v1325;
  void *v1326;
  void *v1327;
  char *v1328;
  unint64_t *v1329;
  unint64_t v1330;
  _QWORD *v1331;
  uint64_t v1332;
  uint64_t v1333;
  unint64_t *v1334;
  unint64_t v1335;
  uint64_t v1336;
  unint64_t v1337;
  unint64_t *v1338;
  unint64_t v1339;
  uint64_t v1340;
  unint64_t *v1341;
  unint64_t v1342;
  uint64_t v1343;
  std::__shared_weak_count *v1344;
  unint64_t *v1345;
  unint64_t v1346;
  std::__shared_weak_count *v1347;
  unint64_t *v1348;
  unint64_t v1349;
  uint64_t v1350;
  void *v1351;
  unint64_t *v1352;
  unint64_t v1353;
  uint64_t v1354;
  uint64_t v1355;
  unint64_t *v1356;
  unint64_t v1357;
  __int128 v1358;
  unint64_t *v1359;
  unint64_t v1360;
  void *v1361;
  void *v1362;
  char v1363;
  unint64_t *v1364;
  unint64_t v1365;
  char *v1366;
  __int128 v1367;
  uint64_t v1368;
  _QWORD *v1369;
  std::__shared_weak_count *v1370;
  unint64_t *v1371;
  std::__shared_weak_count *v1372;
  unint64_t v1373;
  unint64_t *v1374;
  unint64_t v1375;
  unint64_t v1376;
  unint64_t *v1377;
  unint64_t v1378;
  unint64_t v1379;
  std::__shared_weak_count *v1380;
  unint64_t *v1381;
  unint64_t v1382;
  std::__shared_weak_count *v1383;
  unint64_t *v1384;
  unint64_t v1385;
  __int128 v1386;
  void *v1387;
  void *v1388;
  char *v1389;
  unint64_t *v1390;
  unint64_t v1391;
  _QWORD *v1392;
  uint64_t v1393;
  uint64_t v1394;
  unint64_t *v1395;
  unint64_t v1396;
  uint64_t v1397;
  unint64_t v1398;
  unint64_t *v1399;
  unint64_t v1400;
  uint64_t v1401;
  unint64_t *v1402;
  unint64_t v1403;
  uint64_t v1404;
  std::__shared_weak_count *v1405;
  unint64_t *v1406;
  unint64_t v1407;
  std::__shared_weak_count *v1408;
  unint64_t *v1409;
  unint64_t v1410;
  void *v1411;
  uint64_t v1412;
  unint64_t *v1413;
  unint64_t v1414;
  uint64_t v1415;
  uint64_t v1416;
  unint64_t *v1417;
  unint64_t v1418;
  __int128 v1419;
  unint64_t *v1420;
  unint64_t v1421;
  void *v1422;
  void *v1423;
  char v1424;
  unint64_t *v1425;
  unint64_t v1426;
  uint64_t v1427;
  __int128 v1428;
  uint64_t v1429;
  _QWORD *v1430;
  std::__shared_weak_count *v1431;
  unint64_t *v1432;
  std::__shared_weak_count *v1433;
  unint64_t v1434;
  unint64_t *v1435;
  unint64_t v1436;
  unint64_t v1437;
  unint64_t *v1438;
  unint64_t v1439;
  unint64_t v1440;
  std::__shared_weak_count *v1441;
  unint64_t *v1442;
  unint64_t v1443;
  std::__shared_weak_count *v1444;
  unint64_t *v1445;
  unint64_t v1446;
  __int128 v1447;
  void *v1448;
  __int128 v1449;
  unint64_t *v1450;
  unint64_t v1451;
  uint64_t v1452;
  uint64_t v1453;
  uint64_t v1454;
  unint64_t *v1455;
  unint64_t v1456;
  uint64_t v1457;
  unint64_t v1458;
  unint64_t *v1459;
  unint64_t v1460;
  uint64_t v1461;
  unint64_t *v1462;
  unint64_t v1463;
  uint64_t v1464;
  std::__shared_weak_count *v1465;
  unint64_t *v1466;
  unint64_t v1467;
  std::__shared_weak_count *v1468;
  unint64_t *v1469;
  unint64_t v1470;
  uint64_t v1471;
  __int128 v1472;
  __int128 v1473;
  __int128 v1474;
  __int128 v1475;
  __int128 v1476;
  __int128 v1477;
  __int128 v1478;
  __int128 v1479;
  __int128 v1480;
  __int128 v1481;
  __int128 v1482;
  __int128 v1483;
  __int128 v1484;
  __int128 v1485;
  __int128 v1486;
  __int128 v1487;
  __int128 v1488;
  __int128 v1489;
  __int128 v1490;
  __int128 v1491;
  __int128 v1492;
  __int128 v1493;
  __int128 v1494;
  __int128 v1495;
  __int128 v1496;
  __int128 v1497;
  __int128 v1498;
  __int128 v1499;
  __int128 v1500;
  __int128 v1501;
  __int128 v1502;
  __int128 v1503;
  __int128 v1504;
  __int128 v1505;
  __int128 v1506;
  __int128 v1507;
  __int128 v1508;
  __int128 v1509;
  __int128 v1510;
  __int128 v1511;
  __int128 v1512;
  __int128 v1513;
  __int128 v1514;
  __int128 v1515;
  __int128 v1516;
  __int128 v1517;
  __int128 v1518;
  __int128 v1519;
  __int128 v1520;
  __int128 v1521;
  __int128 v1522;
  __int128 v1523;
  __int128 v1524;
  __int128 v1525;
  __int128 v1526;
  __int128 v1527;
  __int128 v1528;
  __int128 v1529;
  __int128 v1530;
  __int128 v1531;
  __int128 v1532;
  uint64_t v1533;
  __int128 v1534;
  uint64_t v1535;
  __int128 v1536;
  void *v1537;
  __int128 v1538;
  __int128 v1539;
  __int128 v1540;
  void *v1541;
  __int128 v1542;
  void *v1543;
  __int128 v1544;
  __int128 v1545;
  __int128 v1546;
  __int128 v1547;
  __int128 v1548;
  void *v1549;
  __int128 v1550;
  uint64_t v1551;
  __int128 v1552;
  __int128 v1553;
  __int128 v1554;
  void *v1555;
  __int128 v1556;
  __int128 v1557;
  __int128 v1558;
  __int128 v1559;
  __int128 v1560;
  __int128 v1561;
  __int128 v1562;
  __int128 v1563;
  __int128 v1564;
  __int128 v1565;
  __int128 v1566;
  __int128 v1567;
  __int128 v1568;
  __int128 v1569;
  __int128 v1570;
  __int128 v1571;
  __int128 v1572;
  __int128 v1573;
  __int128 v1574;
  __int128 v1575;
  __int128 v1576;
  __int128 v1577;
  __int128 v1578;
  __int128 v1579;
  __int128 v1580;
  __int128 v1581;
  __int128 v1582;
  __int128 v1583;
  __int128 v1584;
  __int128 v1585;
  __int128 v1586;
  __int128 v1587;
  __int128 v1588;
  unint64_t *v1589;
  unint64_t v1590;
  unint64_t *v1591;
  unint64_t v1592;
  unint64_t *v1593;
  unint64_t v1594;
  unint64_t *v1595;
  unint64_t v1596;
  unint64_t *v1597;
  unint64_t v1598;
  unint64_t *v1599;
  unint64_t v1600;
  unint64_t *v1601;
  unint64_t v1602;
  unint64_t *v1603;
  unint64_t v1604;
  unint64_t *v1605;
  unint64_t v1606;
  unint64_t *v1607;
  unint64_t v1608;
  unint64_t *v1609;
  unint64_t v1610;
  unint64_t *v1611;
  unint64_t v1612;
  unint64_t *v1613;
  unint64_t v1614;
  unint64_t *v1615;
  unint64_t v1616;
  unint64_t *v1617;
  unint64_t v1618;
  unint64_t *v1619;
  unint64_t v1620;
  unint64_t *v1621;
  unint64_t v1622;
  std::__shared_weak_count *v1623;
  unint64_t *v1624;
  unint64_t v1625;
  std::__shared_weak_count *v1626;
  unint64_t *v1627;
  unint64_t v1628;
  std::__shared_weak_count *v1629;
  unint64_t *v1630;
  unint64_t v1631;
  std::__shared_weak_count *v1632;
  unint64_t *v1633;
  unint64_t v1634;
  std::__shared_weak_count *v1635;
  unint64_t *v1636;
  unint64_t v1637;
  std::__shared_weak_count *v1638;
  unint64_t *v1639;
  unint64_t v1640;
  std::__shared_weak_count *v1641;
  unint64_t *v1642;
  unint64_t v1643;
  std::__shared_weak_count *v1644;
  unint64_t *v1645;
  unint64_t v1646;
  std::__shared_weak_count *v1647;
  unint64_t *v1648;
  unint64_t v1649;
  std::__shared_weak_count *v1650;
  unint64_t *v1651;
  unint64_t v1652;
  std::__shared_weak_count *v1653;
  unint64_t *v1654;
  unint64_t v1655;
  std::__shared_weak_count *v1656;
  unint64_t *v1657;
  unint64_t v1658;
  std::__shared_weak_count *v1659;
  unint64_t *v1660;
  unint64_t v1661;
  std::__shared_weak_count *v1662;
  unint64_t *v1663;
  unint64_t v1664;
  std::__shared_weak_count *v1665;
  unint64_t *v1666;
  unint64_t v1667;
  std::__shared_weak_count *v1668;
  unint64_t *v1669;
  unint64_t v1670;
  __int128 v1671;
  uint64_t *v1672;
  __int128 v1673;
  std::__shared_weak_count *v1674;
  std::__shared_weak_count *v1675;
  std::__shared_weak_count *v1676;
  uint64_t v1677;
  std::__shared_weak_count *v1678;
  std::__shared_weak_count *v1679;
  std::__shared_weak_count *v1680;
  std::__shared_weak_count *v1681;
  std::__shared_weak_count *v1682;
  std::__shared_weak_count *v1683;
  std::__shared_weak_count *v1684;
  std::__shared_weak_count *v1685;
  std::__shared_weak_count *v1686;
  std::__shared_weak_count *v1687;
  std::__shared_weak_count *v1688;
  std::__shared_weak_count *v1689;
  std::__shared_weak_count *v1690;
  std::__shared_weak_count *v1691;
  void *v1692[3];
  void *v1693;
  __int128 v1694;
  void *v1695;
  __int128 v1696;
  __int128 v1697;
  uint64_t (**v1698)();
  __int128 v1699;
  uint64_t v1700;
  uint64_t (**v1701)();
  __int128 v1702;
  uint64_t (**v1703)();
  __int128 v1704;
  uint64_t v1705;
  std::__shared_weak_count *v1706;
  void *v1707;
  std::__shared_weak_count *v1708;
  void *v1709[3];
  void *v1710;
  __int128 v1711;
  void *v1712;
  __int128 v1713;
  __int128 v1714;
  uint64_t (**v1715)();
  __int128 v1716;
  uint64_t v1717;
  uint64_t (**v1718)();
  __int128 v1719;
  uint64_t (**v1720)();
  __int128 v1721;
  uint64_t v1722;
  std::__shared_weak_count *v1723;
  void *v1724;
  std::__shared_weak_count *v1725;
  void *v1726[3];
  void *v1727;
  __int128 v1728;
  void *v1729;
  __int128 v1730;
  __int128 v1731;
  uint64_t (**v1732)();
  __int128 v1733;
  uint64_t v1734;
  uint64_t (**v1735)();
  __int128 v1736;
  uint64_t (**v1737)();
  __int128 v1738;
  uint64_t v1739;
  std::__shared_weak_count *v1740;
  void *v1741;
  std::__shared_weak_count *v1742;
  void *v1743[3];
  void *v1744;
  __int128 v1745;
  void *v1746;
  __int128 v1747;
  __int128 v1748;
  uint64_t (**v1749)();
  __int128 v1750;
  uint64_t v1751;
  uint64_t (**v1752)();
  __int128 v1753;
  uint64_t (**v1754)();
  __int128 v1755;
  uint64_t v1756;
  std::__shared_weak_count *v1757;
  __int128 v1758;
  void *__src[3];
  uint64_t v1760;
  __int128 v1761;
  uint64_t v1762;
  __int128 v1763;
  __int128 v1764;
  __int128 v1765;
  uint64_t v1766;
  __int128 v1767;
  __int128 v1768;
  uint64_t v1769;
  std::__shared_weak_count *v1770;
  void *v1771;
  std::__shared_weak_count *v1772;
  void *__dst[3];
  void *v1774;
  __int128 v1775;
  void *v1776;
  __int128 v1777;
  __int128 v1778;
  uint64_t (**v1779)();
  __int128 v1780;
  uint64_t v1781;
  uint64_t (**v1782)();
  __int128 v1783;
  uint64_t (**v1784)();
  __int128 v1785;
  uint64_t v1786;
  std::__shared_weak_count *v1787;
  void *v1788;
  std::__shared_weak_count *v1789;
  void *__p[3];
  void *v1791;
  __int128 v1792;
  void *v1793;
  __int128 v1794;
  __int128 v1795;
  uint64_t (**v1796)();
  __int128 v1797;
  uint64_t v1798;
  uint64_t (**v1799)();
  __int128 v1800;
  uint64_t (**v1801)();
  __int128 v1802;
  uint64_t v1803;
  std::__shared_weak_count *v1804;
  void *v1805;
  std::__shared_weak_count *v1806;
  void *v1807[3];
  void *v1808;
  __int128 v1809;
  void *v1810;
  __int128 v1811;
  __int128 v1812;
  uint64_t (**v1813)();
  __int128 v1814;
  uint64_t v1815;
  uint64_t (**v1816)();
  __int128 v1817;
  uint64_t (**v1818)();
  __int128 v1819;
  uint64_t v1820;
  std::__shared_weak_count *v1821;
  void *v1822;
  std::__shared_weak_count *v1823;
  uint64_t (**v1824)();
  __int128 v1825;
  void *v1826;
  __int128 v1827;
  void *v1828;
  __int128 v1829;
  __int128 v1830;
  uint64_t (**v1831)();
  __int128 v1832;
  uint64_t v1833;
  uint64_t (**v1834)();
  __int128 v1835;
  uint64_t (**v1836)();
  __int128 v1837;
  void *v1838[3];
  void *v1839;
  __int128 v1840;
  void *v1841;
  __int128 v1842;
  __int128 v1843;
  uint64_t (**v1844)();
  __int128 v1845;
  uint64_t v1846;
  uint64_t (**v1847)();
  __int128 v1848;
  uint64_t (**v1849)();
  __int128 v1850;
  void *v1851[3];
  void *v1852;
  __int128 v1853;
  void *v1854;
  __int128 v1855;
  __int128 v1856;
  uint64_t (**v1857)();
  __int128 v1858;
  uint64_t v1859;
  uint64_t (**v1860)();
  __int128 v1861;
  uint64_t (**v1862)();
  __int128 v1863;
  void *v1864[3];
  void *v1865;
  __int128 v1866;
  void *v1867;
  __int128 v1868;
  __int128 v1869;
  uint64_t (**v1870)();
  __int128 v1871;
  uint64_t v1872;
  uint64_t (**v1873)();
  __int128 v1874;
  uint64_t (**v1875)();
  __int128 v1876;
  void *v1877[3];
  void *v1878;
  __int128 v1879;
  void *v1880;
  __int128 v1881;
  __int128 v1882;
  uint64_t (**v1883)();
  __int128 v1884;
  uint64_t v1885;
  uint64_t (**v1886)();
  __int128 v1887;
  uint64_t (**v1888)();
  __int128 v1889;
  void *v1890[3];
  void *v1891;
  __int128 v1892;
  void *v1893;
  __int128 v1894;
  __int128 v1895;
  uint64_t (**v1896)();
  __int128 v1897;
  uint64_t v1898;
  uint64_t (**v1899)();
  __int128 v1900;
  uint64_t (**v1901)();
  __int128 v1902;
  void *v1903[3];
  void *v1904;
  __int128 v1905;
  void *v1906;
  __int128 v1907;
  __int128 v1908;
  uint64_t (**v1909)();
  __int128 v1910;
  uint64_t v1911;
  uint64_t (**v1912)();
  __int128 v1913;
  uint64_t (**v1914)();
  __int128 v1915;
  void *v1916[3];
  void *v1917;
  __int128 v1918;
  void *v1919;
  __int128 v1920;
  __int128 v1921;
  uint64_t (**v1922)();
  __int128 v1923;
  uint64_t v1924;
  uint64_t (**v1925)();
  __int128 v1926;
  uint64_t (**v1927)();
  __int128 v1928;
  void *v1929[3];
  void *v1930;
  __int128 v1931;
  void *v1932;
  __int128 v1933;
  __int128 v1934;
  uint64_t (**v1935)();
  __int128 v1936;
  uint64_t v1937;
  uint64_t (**v1938)();
  __int128 v1939;
  uint64_t (**v1940)();
  __int128 v1941;
  void *v1942[3];
  void *v1943;
  __int128 v1944;
  void *v1945;
  __int128 v1946;
  __int128 v1947;
  uint64_t (**v1948)();
  __int128 v1949;
  uint64_t v1950;
  uint64_t (**v1951)();
  __int128 v1952;
  uint64_t (**v1953)();
  __int128 v1954;
  void *v1955[3];
  void *v1956;
  __int128 v1957;
  void *v1958;
  __int128 v1959;
  __int128 v1960;
  uint64_t (**v1961)();
  __int128 v1962;
  uint64_t v1963;
  uint64_t (**v1964)();
  __int128 v1965;
  uint64_t (**v1966)();
  __int128 v1967;
  void *v1968[3];
  void *v1969;
  __int128 v1970;
  void *v1971;
  __int128 v1972;
  __int128 v1973;
  uint64_t (**v1974)();
  __int128 v1975;
  uint64_t v1976;
  uint64_t (**v1977)();
  __int128 v1978;
  uint64_t (**v1979)();
  __int128 v1980;
  void *v1981[3];
  void *v1982;
  __int128 v1983;
  void *v1984;
  __int128 v1985;
  __int128 v1986;
  uint64_t (**v1987)();
  __int128 v1988;
  uint64_t v1989;
  uint64_t (**v1990)();
  __int128 v1991;
  uint64_t (**v1992)();
  __int128 v1993;
  void *v1994[3];
  void *v1995;
  __int128 v1996;
  void *v1997;
  __int128 v1998;
  __int128 v1999;
  uint64_t (**v2000)();
  __int128 v2001;
  uint64_t v2002;
  uint64_t (**v2003)();
  __int128 v2004;
  uint64_t (**v2005)();
  __int128 v2006;
  void *v2007[3];
  void *v2008;
  __int128 v2009;
  void *v2010;
  __int128 v2011;
  __int128 v2012;
  uint64_t (**v2013)();
  __int128 v2014;
  uint64_t v2015;
  uint64_t (**v2016)();
  __int128 v2017;
  uint64_t (**v2018)();
  __int128 v2019;
  void *v2020[3];
  void *v2021;
  __int128 v2022;
  void *v2023;
  __int128 v2024;
  __int128 v2025;
  uint64_t (**v2026)();
  __int128 v2027;
  uint64_t v2028;
  uint64_t (**v2029)();
  __int128 v2030;
  uint64_t (**v2031)();
  __int128 v2032;
  void *v2033[3];
  void *v2034;
  __int128 v2035;
  void *v2036;
  __int128 v2037;
  __int128 v2038;
  uint64_t (**v2039)();
  __int128 v2040;
  uint64_t v2041;
  uint64_t (**v2042)();
  __int128 v2043;
  uint64_t (**v2044)();
  __int128 v2045;
  __int128 v2046;
  __int128 v2047;
  void *v2048[2];
  void *v2049;
  void *v2050[4];
  _QWORD v2051[2];
  void *v2052[4];
  void *v2053[4];
  __int128 v2054;
  _QWORD v2055[2];
  __int128 v2056;
  _QWORD v2057[5];

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v4 = v3;
  v5 = (uint64_t *)v0;
  v2057[2] = *MEMORY[0x24BDAC8D0];
  v7 = *(void **)v3;
  v6 = *(unint64_t **)(v3 + 8);
  v1822 = *(void **)v3;
  v1823 = (std::__shared_weak_count *)v6;
  if (v6)
  {
    v8 = v6 + 1;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = *v1;
  v11 = (unint64_t *)v1[1];
  v1820 = *v1;
  v1821 = (std::__shared_weak_count *)v11;
  if (v11)
  {
    v12 = v11 + 1;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  if (*(char *)(v10 + 31) < 0)
  {
    sub_223197FA4(__dst, *(void **)(v10 + 8), *(_QWORD *)(v10 + 16));
  }
  else
  {
    v14 = *(_OWORD *)(v10 + 8);
    __dst[2] = *(void **)(v10 + 24);
    *(_OWORD *)__dst = v14;
  }
  if (*(char *)(v10 + 55) < 0)
  {
    sub_223197FA4(__src, *(void **)(v10 + 32), *(_QWORD *)(v10 + 40));
  }
  else
  {
    *(_OWORD *)__src = *(_OWORD *)(v10 + 32);
    __src[2] = *(void **)(v10 + 48);
  }
  v1709[0] = v7;
  v1709[1] = v6;
  v1823 = 0;
  v1822 = 0;
  v1692[0] = (void *)v10;
  v1692[1] = v11;
  if (v11)
  {
    v15 = v11 + 1;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
  }
  if (SHIBYTE(__dst[2]) < 0)
  {
    sub_223197FA4(v1807, __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)v1807 = *(_OWORD *)__dst;
    v1807[2] = __dst[2];
  }
  if (SHIBYTE(__src[2]) < 0)
  {
    sub_223197FA4(__p, __src[0], (unint64_t)__src[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)__src;
    __p[2] = __src[2];
  }
  *(void **)((char *)v2007 + 7) = *(void **)((char *)&__dst[1] + 7);
  v17 = __dst[0];
  v2007[0] = __dst[1];
  v18 = HIBYTE(__dst[2]);
  memset(__dst, 0, sizeof(__dst));
  v2020[0] = v2007[0];
  *(void **)((char *)v2020 + 7) = *(void **)((char *)v2007 + 7);
  *(void **)((char *)v2007 + 7) = 0;
  v2007[0] = 0;
  v1726[0] = v7;
  v1726[1] = v6;
  if (v6)
  {
    v19 = v6 + 1;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v21 = (char *)operator new();
  v2033[0] = v2020[0];
  *(void **)((char *)v2033 + 7) = *(void **)((char *)v2020 + 7);
  v2020[0] = 0;
  *(void **)((char *)v2020 + 7) = 0;
  v22 = *(_OWORD *)v1726;
  v1726[0] = 0;
  v1726[1] = 0;
  v21[8] = 1;
  *((_QWORD *)v21 + 4) = 0;
  *((_QWORD *)v21 + 5) = 0;
  *(_QWORD *)v21 = &off_24EC49438;
  *((_QWORD *)v21 + 2) = &unk_24EC494B0;
  *((_QWORD *)v21 + 3) = &unk_24EC494F0;
  v23 = v2033[0];
  *(void **)(v21 + 63) = *(void **)((char *)v2033 + 7);
  *((_QWORD *)v21 + 6) = v17;
  *((_QWORD *)v21 + 7) = v23;
  v21[71] = v18;
  v2033[0] = 0;
  *(void **)((char *)v2033 + 7) = 0;
  *(_OWORD *)(v21 + 72) = v22;
  v1743[1] = 0;
  v1743[0] = 0;
  v24 = (_QWORD *)operator new();
  *v24 = &off_24EC495C8;
  v24[1] = v10;
  v24[2] = v11;
  v1692[1] = 0;
  v1692[0] = 0;
  *((_QWORD *)v21 + 11) = v24;
  *((_QWORD *)v21 + 12) = v21 + 96;
  *((_QWORD *)v21 + 13) = v21 + 96;
  *((_QWORD *)v21 + 14) = 0;
  *((_QWORD *)v21 + 15) = v21 + 120;
  *((_QWORD *)v21 + 16) = v21 + 120;
  *((_QWORD *)v21 + 17) = 0;
  v25 = operator new();
  v26 = operator new(0x10uLL);
  *v26 = 0;
  v26[1] = 0;
  *(_QWORD *)v25 = v26;
  *(_QWORD *)(v25 + 8) = v26 + 2;
  *(_QWORD *)(v25 + 16) = v26 + 2;
  *(_QWORD *)(v25 + 24) = 0;
  *(_QWORD *)(v25 + 32) = 0;
  *(_QWORD *)(v25 + 40) = 0;
  *(_BYTE *)(v25 + 48) = 1;
  *(_QWORD *)(v25 + 56) = 850045863;
  *(_OWORD *)(v25 + 64) = 0u;
  *(_OWORD *)(v25 + 80) = 0u;
  *(_OWORD *)(v25 + 96) = 0u;
  *(_QWORD *)(v25 + 112) = 0;
  *((_QWORD *)v21 + 18) = v25;
  if (!*((_QWORD *)v21 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v27 = (std::__shared_weak_count *)operator new();
  v27->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v27->__shared_owners_;
  v27->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC49A68;
  v27->__shared_weak_owners_ = 0;
  v27[1].__vftable = (std::__shared_weak_count_vtbl *)v21;
  v29 = (std::__shared_weak_count *)*((_QWORD *)v21 + 5);
  if (v29)
  {
    if (v29->__shared_owners_ != -1)
      goto LABEL_40;
    do
      v30 = __ldxr(p_shared_owners);
    while (__stxr(v30 + 1, p_shared_owners));
    p_shared_weak_owners = (unint64_t *)&v27->__shared_weak_owners_;
    do
      v32 = __ldxr(p_shared_weak_owners);
    while (__stxr(v32 + 1, p_shared_weak_owners));
    *((_QWORD *)v21 + 4) = v21;
    *((_QWORD *)v21 + 5) = v27;
    std::__shared_weak_count::__release_weak(v29);
  }
  else
  {
    do
      v33 = __ldxr(p_shared_owners);
    while (__stxr(v33 + 1, p_shared_owners));
    v34 = (unint64_t *)&v27->__shared_weak_owners_;
    do
      v35 = __ldxr(v34);
    while (__stxr(v35 + 1, v34));
    *((_QWORD *)v21 + 4) = v21;
    *((_QWORD *)v21 + 5) = v27;
  }
  do
    v36 = __ldaxr(p_shared_owners);
  while (__stlxr(v36 - 1, p_shared_owners));
  if (!v36)
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
LABEL_40:
  if (v1743[1])
  {
    v37 = (unint64_t *)((char *)v1743[1] + 8);
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      (*(void (**)(void *))(*(_QWORD *)v1743[1] + 16))(v1743[1]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v1743[1]);
    }
  }
  v1743[0] = v21;
  v1743[1] = v27;
  if (v1726[1])
  {
    v39 = (unint64_t *)((char *)v1726[1] + 8);
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      (*(void (**)(void *))(*(_QWORD *)v1726[1] + 16))(v1726[1]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v1726[1]);
    }
  }
  v41 = *(_OWORD *)v1709;
  v1709[0] = 0;
  v1709[1] = 0;
  v1825 = *(_OWORD *)v1807;
  v1824 = &off_24EC49408;
  v1826 = v1807[2];
  memset(v1807, 0, sizeof(v1807));
  v1827 = *(_OWORD *)__p;
  v42 = __p[2];
  memset(__p, 0, sizeof(__p));
  v1829 = v41;
  v1726[1] = 0;
  v1726[0] = 0;
  v43 = v1743[0];
  v44 = (char *)v1743[1];
  v1828 = v42;
  v1830 = *(_OWORD *)v1743;
  v1743[0] = 0;
  v1743[1] = 0;
  if (*((_QWORD *)&v1830 + 1))
  {
    v45 = (unint64_t *)(v44 + 16);
    do
      v46 = __ldxr(v45);
    while (__stxr(v46 + 1, v45));
  }
  v1831 = &off_24EC37B68;
  v47 = (_QWORD *)operator new();
  *v47 = &off_24EC38C40;
  v47[1] = v43;
  v47[2] = v44;
  *(_QWORD *)&v1832 = v47;
  v49 = *((_QWORD *)&v1830 + 1);
  v48 = v1830;
  if (!*((_QWORD *)&v1830 + 1))
  {
    *((_QWORD *)&v1832 + 1) = v1830;
    v1833 = 0;
    if ((_QWORD)v1830)
      v53 = v1830 + 16;
    else
      v53 = 0;
    goto LABEL_70;
  }
  v50 = (unint64_t *)(*((_QWORD *)&v1830 + 1) + 16);
  do
    v51 = __ldxr(v50);
  while (__stxr(v51 + 1, v50));
  v52 = *((_QWORD *)&v1830 + 1);
  *((_QWORD *)&v1832 + 1) = v48;
  v1833 = v49;
  if ((_QWORD)v1830)
    v53 = v1830 + 16;
  else
    v53 = 0;
  if (!*((_QWORD *)&v1830 + 1))
  {
    v48 = v1830;
LABEL_70:
    v56 = 0;
    v1834 = &off_24EC45488;
    v1835 = v53;
    goto LABEL_71;
  }
  v54 = (unint64_t *)(*((_QWORD *)&v1830 + 1) + 16);
  do
    v55 = __ldxr(v54);
  while (__stxr(v55 + 1, v54));
  v56 = *((_QWORD *)&v1830 + 1);
  v48 = v1830;
  v1834 = &off_24EC45488;
  *(_QWORD *)&v1835 = v53;
  *((_QWORD *)&v1835 + 1) = v52;
  if (*((_QWORD *)&v1830 + 1))
  {
    v57 = (unint64_t *)(*((_QWORD *)&v1830 + 1) + 16);
    do
      v58 = __ldxr(v57);
    while (__stxr(v58 + 1, v57));
  }
LABEL_71:
  if (v48)
    v59 = v48 + 24;
  else
    v59 = 0;
  v1836 = &off_24EC2E850;
  *(_QWORD *)&v1837 = v59;
  *((_QWORD *)&v1837 + 1) = v56;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1807[2]) & 0x80000000) == 0)
      goto LABEL_76;
LABEL_79:
    operator delete(v1807[0]);
    v60 = (std::__shared_weak_count *)v1692[1];
    if (!v1692[1])
      goto LABEL_84;
    goto LABEL_80;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v1807[2]) < 0)
    goto LABEL_79;
LABEL_76:
  v60 = (std::__shared_weak_count *)v1692[1];
  if (!v1692[1])
    goto LABEL_84;
LABEL_80:
  v61 = (unint64_t *)&v60->__shared_owners_;
  do
    v62 = __ldaxr(v61);
  while (__stlxr(v62 - 1, v61));
  if (!v62)
  {
    ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
    std::__shared_weak_count::__release_weak(v60);
  }
  if (!v1709[1])
    goto LABEL_88;
LABEL_84:
  v63 = (unint64_t *)((char *)v1709[1] + 8);
  do
    v64 = __ldaxr(v63);
  while (__stlxr(v64 - 1, v63));
  if (!v64)
  {
    (*(void (**)(void *))(*(_QWORD *)v1709[1] + 16))(v1709[1]);
    std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v1709[1]);
    if ((SHIBYTE(__src[2]) & 0x80000000) == 0)
    {
LABEL_89:
      if ((SHIBYTE(__dst[2]) & 0x80000000) == 0)
        goto LABEL_90;
LABEL_94:
      operator delete(__dst[0]);
      if (v1820)
        goto LABEL_96;
      goto LABEL_95;
    }
  }
  else
  {
LABEL_88:
    if ((SHIBYTE(__src[2]) & 0x80000000) == 0)
      goto LABEL_89;
  }
  operator delete(__src[0]);
  if (SHIBYTE(__dst[2]) < 0)
    goto LABEL_94;
LABEL_90:
  if (v1820)
    goto LABEL_96;
LABEL_95:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_96:
  v66 = *(void **)v4;
  v65 = *(unint64_t **)(v4 + 8);
  v1805 = *(void **)v4;
  v1806 = (std::__shared_weak_count *)v65;
  if (v65)
  {
    v67 = v65 + 1;
    do
      v68 = __ldxr(v67);
    while (__stxr(v68 + 1, v67));
  }
  v69 = *v2;
  v70 = (unint64_t *)v2[1];
  if (*v2)
    v71 = *v2 + 56;
  else
    v71 = 0;
  v1803 = v71;
  v1804 = (std::__shared_weak_count *)v70;
  if (v70)
  {
    v72 = v70 + 1;
    do
      v73 = __ldxr(v72);
    while (__stxr(v73 + 1, v72));
  }
  if (*(char *)(v71 + 31) < 0)
  {
    sub_223197FA4(__src, *(void **)(v71 + 8), *(_QWORD *)(v71 + 16));
  }
  else
  {
    v74 = *(_OWORD *)(v71 + 8);
    __src[2] = *(void **)(v71 + 24);
    *(_OWORD *)__src = v74;
  }
  if (*(char *)(v69 + 111) < 0)
  {
    sub_223197FA4(v1743, *(void **)(v69 + 88), *(_QWORD *)(v69 + 96));
  }
  else
  {
    *(_OWORD *)v1743 = *(_OWORD *)(v69 + 88);
    v1743[2] = *(void **)(v69 + 104);
  }
  v1692[0] = v66;
  v1692[1] = v65;
  v1806 = 0;
  v1805 = 0;
  v2033[0] = (void *)v71;
  v2033[1] = v70;
  if (v70)
  {
    v75 = v70 + 1;
    do
      v76 = __ldxr(v75);
    while (__stxr(v76 + 1, v75));
  }
  if (SHIBYTE(__src[2]) < 0)
  {
    sub_223197FA4(__p, __src[0], (unint64_t)__src[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)__src;
    __p[2] = __src[2];
  }
  v1672 = v5;
  if (SHIBYTE(v1743[2]) < 0)
  {
    sub_223197FA4(__dst, v1743[0], (unint64_t)v1743[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v1743;
    __dst[2] = v1743[2];
  }
  *(void **)((char *)v1994 + 7) = *(void **)((char *)&__src[1] + 7);
  v77 = __src[0];
  v1994[0] = __src[1];
  v78 = HIBYTE(__src[2]);
  memset(__src, 0, sizeof(__src));
  v2007[0] = v1994[0];
  *(void **)((char *)v2007 + 7) = *(void **)((char *)v1994 + 7);
  *(void **)((char *)v1994 + 7) = 0;
  v1994[0] = 0;
  v1709[0] = v66;
  v1709[1] = v65;
  if (v65)
  {
    v79 = v65 + 1;
    do
      v80 = __ldxr(v79);
    while (__stxr(v80 + 1, v79));
  }
  v81 = (char *)operator new();
  v2020[0] = v2007[0];
  *(void **)((char *)v2020 + 7) = *(void **)((char *)v2007 + 7);
  v2007[0] = 0;
  *(void **)((char *)v2007 + 7) = 0;
  v82 = *(_OWORD *)v1709;
  v1709[0] = 0;
  v1709[1] = 0;
  v81[8] = 1;
  *((_QWORD *)v81 + 4) = 0;
  *((_QWORD *)v81 + 5) = 0;
  *(_QWORD *)v81 = &off_24EC49AB8;
  *((_QWORD *)v81 + 2) = &unk_24EC49B30;
  *((_QWORD *)v81 + 3) = &unk_24EC49B70;
  v83 = v2020[0];
  *(void **)(v81 + 63) = *(void **)((char *)v2020 + 7);
  *((_QWORD *)v81 + 6) = v77;
  *((_QWORD *)v81 + 7) = v83;
  v81[71] = v78;
  v2020[0] = 0;
  *(void **)((char *)v2020 + 7) = 0;
  *(_OWORD *)(v81 + 72) = v82;
  v1726[1] = 0;
  v1726[0] = 0;
  v84 = (_QWORD *)operator new();
  *v84 = &off_24EC49C48;
  v84[1] = v71;
  v84[2] = v70;
  v2033[1] = 0;
  v2033[0] = 0;
  *((_QWORD *)v81 + 11) = v84;
  *((_QWORD *)v81 + 12) = v81 + 96;
  *((_QWORD *)v81 + 13) = v81 + 96;
  *((_QWORD *)v81 + 14) = 0;
  *((_QWORD *)v81 + 15) = v81 + 120;
  *((_QWORD *)v81 + 16) = v81 + 120;
  *((_QWORD *)v81 + 17) = 0;
  v85 = operator new();
  v86 = operator new(0x10uLL);
  *v86 = 0;
  v86[1] = 0;
  *(_QWORD *)v85 = v86;
  *(_QWORD *)(v85 + 8) = v86 + 2;
  *(_QWORD *)(v85 + 16) = v86 + 2;
  *(_QWORD *)(v85 + 24) = 0;
  *(_QWORD *)(v85 + 32) = 0;
  *(_QWORD *)(v85 + 40) = 0;
  *(_BYTE *)(v85 + 48) = 1;
  *(_QWORD *)(v85 + 56) = 850045863;
  *(_OWORD *)(v85 + 64) = 0u;
  *(_OWORD *)(v85 + 80) = 0u;
  *(_OWORD *)(v85 + 96) = 0u;
  *(_QWORD *)(v85 + 112) = 0;
  *((_QWORD *)v81 + 18) = v85;
  if (!*((_QWORD *)v81 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v87 = (std::__shared_weak_count *)operator new();
  v87->__shared_owners_ = 0;
  v88 = (unint64_t *)&v87->__shared_owners_;
  v87->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4A098;
  v87->__shared_weak_owners_ = 0;
  v87[1].__vftable = (std::__shared_weak_count_vtbl *)v81;
  v89 = (std::__shared_weak_count *)*((_QWORD *)v81 + 5);
  if (v89)
  {
    if (v89->__shared_owners_ != -1)
      goto LABEL_138;
    do
      v90 = __ldxr(v88);
    while (__stxr(v90 + 1, v88));
    v91 = (unint64_t *)&v87->__shared_weak_owners_;
    do
      v92 = __ldxr(v91);
    while (__stxr(v92 + 1, v91));
    *((_QWORD *)v81 + 4) = v81;
    *((_QWORD *)v81 + 5) = v87;
    std::__shared_weak_count::__release_weak(v89);
  }
  else
  {
    do
      v93 = __ldxr(v88);
    while (__stxr(v93 + 1, v88));
    v94 = (unint64_t *)&v87->__shared_weak_owners_;
    do
      v95 = __ldxr(v94);
    while (__stxr(v95 + 1, v94));
    *((_QWORD *)v81 + 4) = v81;
    *((_QWORD *)v81 + 5) = v87;
  }
  do
    v96 = __ldaxr(v88);
  while (__stlxr(v96 - 1, v88));
  if (!v96)
  {
    ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
    std::__shared_weak_count::__release_weak(v87);
  }
LABEL_138:
  if (v1726[1])
  {
    v97 = (unint64_t *)((char *)v1726[1] + 8);
    do
      v98 = __ldaxr(v97);
    while (__stlxr(v98 - 1, v97));
    if (!v98)
    {
      (*(void (**)(void *))(*(_QWORD *)v1726[1] + 16))(v1726[1]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v1726[1]);
    }
  }
  v1726[0] = v81;
  v1726[1] = v87;
  if (v1709[1])
  {
    v99 = (unint64_t *)((char *)v1709[1] + 8);
    do
      v100 = __ldaxr(v99);
    while (__stlxr(v100 - 1, v99));
    if (!v100)
    {
      (*(void (**)(void *))(*(_QWORD *)v1709[1] + 16))(v1709[1]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v1709[1]);
    }
  }
  v101 = *(_OWORD *)v1692;
  v1692[0] = 0;
  v1692[1] = 0;
  *(_OWORD *)&v1807[1] = *(_OWORD *)__p;
  v1807[0] = &off_24EC493D8;
  v1808 = __p[2];
  memset(__p, 0, sizeof(__p));
  v1809 = *(_OWORD *)__dst;
  v102 = __dst[2];
  memset(__dst, 0, sizeof(__dst));
  v1811 = v101;
  v1709[1] = 0;
  v1709[0] = 0;
  v103 = v1726[0];
  v104 = (char *)v1726[1];
  v1810 = v102;
  v1812 = *(_OWORD *)v1726;
  v1726[0] = 0;
  v1726[1] = 0;
  if (*((_QWORD *)&v1812 + 1))
  {
    v105 = (unint64_t *)(v104 + 16);
    do
      v106 = __ldxr(v105);
    while (__stxr(v106 + 1, v105));
  }
  v1813 = &off_24EC2B348;
  v107 = (_QWORD *)operator new();
  *v107 = &off_24EC42230;
  v107[1] = v103;
  v107[2] = v104;
  *(_QWORD *)&v1814 = v107;
  v109 = *((_QWORD *)&v1812 + 1);
  v108 = v1812;
  if (!*((_QWORD *)&v1812 + 1))
  {
    *((_QWORD *)&v1814 + 1) = v1812;
    v1815 = 0;
    if ((_QWORD)v1812)
      v113 = v1812 + 16;
    else
      v113 = 0;
    goto LABEL_168;
  }
  v110 = (unint64_t *)(*((_QWORD *)&v1812 + 1) + 16);
  do
    v111 = __ldxr(v110);
  while (__stxr(v111 + 1, v110));
  v112 = *((_QWORD *)&v1812 + 1);
  *((_QWORD *)&v1814 + 1) = v108;
  v1815 = v109;
  if ((_QWORD)v1812)
    v113 = v1812 + 16;
  else
    v113 = 0;
  if (!*((_QWORD *)&v1812 + 1))
  {
    v108 = v1812;
LABEL_168:
    v116 = 0;
    v1816 = &off_24EC45488;
    v1817 = v113;
    goto LABEL_169;
  }
  v114 = (unint64_t *)(*((_QWORD *)&v1812 + 1) + 16);
  do
    v115 = __ldxr(v114);
  while (__stxr(v115 + 1, v114));
  v116 = *((_QWORD *)&v1812 + 1);
  v108 = v1812;
  v1816 = &off_24EC45488;
  *(_QWORD *)&v1817 = v113;
  *((_QWORD *)&v1817 + 1) = v112;
  if (*((_QWORD *)&v1812 + 1))
  {
    v117 = (unint64_t *)(*((_QWORD *)&v1812 + 1) + 16);
    do
      v118 = __ldxr(v117);
    while (__stxr(v118 + 1, v117));
  }
LABEL_169:
  if (v108)
    v119 = v108 + 24;
  else
    v119 = 0;
  v1818 = &off_24EC2E850;
  *(_QWORD *)&v1819 = v119;
  *((_QWORD *)&v1819 + 1) = v116;
  if ((SHIBYTE(__dst[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0)
      goto LABEL_174;
LABEL_177:
    operator delete(__p[0]);
    v120 = (std::__shared_weak_count *)v2033[1];
    if (!v2033[1])
      goto LABEL_182;
    goto LABEL_178;
  }
  operator delete(__dst[0]);
  if (SHIBYTE(__p[2]) < 0)
    goto LABEL_177;
LABEL_174:
  v120 = (std::__shared_weak_count *)v2033[1];
  if (!v2033[1])
    goto LABEL_182;
LABEL_178:
  v121 = (unint64_t *)&v120->__shared_owners_;
  do
    v122 = __ldaxr(v121);
  while (__stlxr(v122 - 1, v121));
  if (!v122)
  {
    ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
    std::__shared_weak_count::__release_weak(v120);
  }
  if (!v1692[1])
    goto LABEL_186;
LABEL_182:
  v123 = (unint64_t *)((char *)v1692[1] + 8);
  do
    v124 = __ldaxr(v123);
  while (__stlxr(v124 - 1, v123));
  if (!v124)
  {
    (*(void (**)(void *))(*(_QWORD *)v1692[1] + 16))(v1692[1]);
    std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v1692[1]);
    if ((SHIBYTE(v1743[2]) & 0x80000000) == 0)
    {
LABEL_187:
      if ((SHIBYTE(__src[2]) & 0x80000000) == 0)
        goto LABEL_188;
LABEL_192:
      operator delete(__src[0]);
      if (v1803)
        goto LABEL_194;
      goto LABEL_193;
    }
  }
  else
  {
LABEL_186:
    if ((SHIBYTE(v1743[2]) & 0x80000000) == 0)
      goto LABEL_187;
  }
  operator delete(v1743[0]);
  if (SHIBYTE(__src[2]) < 0)
    goto LABEL_192;
LABEL_188:
  if (v1803)
    goto LABEL_194;
LABEL_193:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_194:
  v126 = *(void **)v4;
  v125 = *(unint64_t **)(v4 + 8);
  v1788 = *(void **)v4;
  v1789 = (std::__shared_weak_count *)v125;
  if (v125)
  {
    v127 = v125 + 1;
    do
      v128 = __ldxr(v127);
    while (__stxr(v128 + 1, v127));
  }
  v129 = *v2;
  v130 = (unint64_t *)v2[1];
  if (*v2)
    v131 = *v2 + 112;
  else
    v131 = 0;
  v1786 = v131;
  v1787 = (std::__shared_weak_count *)v130;
  if (v130)
  {
    v132 = v130 + 1;
    do
      v133 = __ldxr(v132);
    while (__stxr(v133 + 1, v132));
  }
  if (*(char *)(v131 + 31) < 0)
  {
    sub_223197FA4(v1743, *(void **)(v131 + 8), *(_QWORD *)(v131 + 16));
  }
  else
  {
    v134 = *(_OWORD *)(v131 + 8);
    v1743[2] = *(void **)(v131 + 24);
    *(_OWORD *)v1743 = v134;
  }
  if (*(char *)(v129 + 167) < 0)
  {
    sub_223197FA4(v1726, *(void **)(v129 + 144), *(_QWORD *)(v129 + 152));
  }
  else
  {
    *(_OWORD *)v1726 = *(_OWORD *)(v129 + 144);
    v1726[2] = *(void **)(v129 + 160);
  }
  v2033[0] = v126;
  v2033[1] = v125;
  v1789 = 0;
  v1788 = 0;
  v2020[0] = (void *)v131;
  v2020[1] = v130;
  if (v130)
  {
    v135 = v130 + 1;
    do
      v136 = __ldxr(v135);
    while (__stxr(v136 + 1, v135));
  }
  if (SHIBYTE(v1743[2]) < 0)
  {
    sub_223197FA4(__dst, v1743[0], (unint64_t)v1743[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v1743;
    __dst[2] = v1743[2];
  }
  if (SHIBYTE(v1726[2]) < 0)
  {
    sub_223197FA4(__src, v1726[0], (unint64_t)v1726[1]);
  }
  else
  {
    *(_OWORD *)__src = *(_OWORD *)v1726;
    __src[2] = v1726[2];
  }
  *(void **)((char *)v1981 + 7) = *(void **)((char *)&v1743[1] + 7);
  v137 = v1743[0];
  v1981[0] = v1743[1];
  v138 = HIBYTE(v1743[2]);
  memset(v1743, 0, sizeof(v1743));
  v1994[0] = v1981[0];
  *(void **)((char *)v1994 + 7) = *(void **)((char *)v1981 + 7);
  *(void **)((char *)v1981 + 7) = 0;
  v1981[0] = 0;
  v1692[0] = v126;
  v1692[1] = v125;
  if (v125)
  {
    v139 = v125 + 1;
    do
      v140 = __ldxr(v139);
    while (__stxr(v140 + 1, v139));
  }
  v141 = (char *)operator new();
  v2007[0] = v1994[0];
  *(void **)((char *)v2007 + 7) = *(void **)((char *)v1994 + 7);
  v1994[0] = 0;
  *(void **)((char *)v1994 + 7) = 0;
  v142 = *(_OWORD *)v1692;
  v1692[0] = 0;
  v1692[1] = 0;
  v141[8] = 1;
  *((_QWORD *)v141 + 4) = 0;
  *((_QWORD *)v141 + 5) = 0;
  *(_QWORD *)v141 = &off_24EC4A0E8;
  *((_QWORD *)v141 + 2) = &unk_24EC4A160;
  *((_QWORD *)v141 + 3) = &unk_24EC4A1A0;
  v143 = v2007[0];
  *(void **)(v141 + 63) = *(void **)((char *)v2007 + 7);
  *((_QWORD *)v141 + 6) = v137;
  *((_QWORD *)v141 + 7) = v143;
  v141[71] = v138;
  v2007[0] = 0;
  *(void **)((char *)v2007 + 7) = 0;
  *(_OWORD *)(v141 + 72) = v142;
  v1709[1] = 0;
  v1709[0] = 0;
  v144 = (_QWORD *)operator new();
  *v144 = &off_24EC4A288;
  v144[1] = v131;
  v144[2] = v130;
  v2020[1] = 0;
  v2020[0] = 0;
  *((_QWORD *)v141 + 11) = v144;
  *((_QWORD *)v141 + 12) = v141 + 96;
  *((_QWORD *)v141 + 13) = v141 + 96;
  *((_QWORD *)v141 + 14) = 0;
  *((_QWORD *)v141 + 15) = v141 + 120;
  *((_QWORD *)v141 + 16) = v141 + 120;
  *((_QWORD *)v141 + 17) = 0;
  v145 = operator new();
  v146 = operator new(0x10uLL);
  *v146 = 0;
  v146[1] = 0;
  *(_QWORD *)v145 = v146;
  *(_QWORD *)(v145 + 8) = v146 + 2;
  *(_QWORD *)(v145 + 16) = v146 + 2;
  *(_QWORD *)(v145 + 24) = 0;
  *(_QWORD *)(v145 + 32) = 0;
  *(_QWORD *)(v145 + 40) = 0;
  *(_BYTE *)(v145 + 48) = 1;
  *(_QWORD *)(v145 + 56) = 850045863;
  *(_OWORD *)(v145 + 64) = 0u;
  *(_OWORD *)(v145 + 80) = 0u;
  *(_OWORD *)(v145 + 96) = 0u;
  *(_QWORD *)(v145 + 112) = 0;
  *((_QWORD *)v141 + 18) = v145;
  if (!*((_QWORD *)v141 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v147 = (std::__shared_weak_count *)operator new();
  v147->__shared_owners_ = 0;
  v148 = (unint64_t *)&v147->__shared_owners_;
  v147->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4A728;
  v147->__shared_weak_owners_ = 0;
  v147[1].__vftable = (std::__shared_weak_count_vtbl *)v141;
  v149 = (std::__shared_weak_count *)*((_QWORD *)v141 + 5);
  if (v149)
  {
    if (v149->__shared_owners_ != -1)
      goto LABEL_236;
    do
      v150 = __ldxr(v148);
    while (__stxr(v150 + 1, v148));
    v151 = (unint64_t *)&v147->__shared_weak_owners_;
    do
      v152 = __ldxr(v151);
    while (__stxr(v152 + 1, v151));
    *((_QWORD *)v141 + 4) = v141;
    *((_QWORD *)v141 + 5) = v147;
    std::__shared_weak_count::__release_weak(v149);
  }
  else
  {
    do
      v153 = __ldxr(v148);
    while (__stxr(v153 + 1, v148));
    v154 = (unint64_t *)&v147->__shared_weak_owners_;
    do
      v155 = __ldxr(v154);
    while (__stxr(v155 + 1, v154));
    *((_QWORD *)v141 + 4) = v141;
    *((_QWORD *)v141 + 5) = v147;
  }
  do
    v156 = __ldaxr(v148);
  while (__stlxr(v156 - 1, v148));
  if (!v156)
  {
    ((void (*)(std::__shared_weak_count *))v147->__on_zero_shared)(v147);
    std::__shared_weak_count::__release_weak(v147);
  }
LABEL_236:
  if (v1709[1])
  {
    v157 = (unint64_t *)((char *)v1709[1] + 8);
    do
      v158 = __ldaxr(v157);
    while (__stlxr(v158 - 1, v157));
    if (!v158)
    {
      (*(void (**)(void *))(*(_QWORD *)v1709[1] + 16))(v1709[1]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v1709[1]);
    }
  }
  v1709[0] = v141;
  v1709[1] = v147;
  if (v1692[1])
  {
    v159 = (unint64_t *)((char *)v1692[1] + 8);
    do
      v160 = __ldaxr(v159);
    while (__stlxr(v160 - 1, v159));
    if (!v160)
    {
      (*(void (**)(void *))(*(_QWORD *)v1692[1] + 16))(v1692[1]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v1692[1]);
    }
  }
  v161 = *(_OWORD *)v2033;
  v2033[0] = 0;
  v2033[1] = 0;
  *(_OWORD *)&__p[1] = *(_OWORD *)__dst;
  __p[0] = &off_24EC49370;
  v1791 = __dst[2];
  memset(__dst, 0, sizeof(__dst));
  v1792 = *(_OWORD *)__src;
  v162 = __src[2];
  memset(__src, 0, sizeof(__src));
  v1794 = v161;
  v1692[1] = 0;
  v1692[0] = 0;
  v163 = v1709[0];
  v164 = (char *)v1709[1];
  v1793 = v162;
  v1795 = *(_OWORD *)v1709;
  v1709[0] = 0;
  v1709[1] = 0;
  if (*((_QWORD *)&v1795 + 1))
  {
    v165 = (unint64_t *)(v164 + 16);
    do
      v166 = __ldxr(v165);
    while (__stxr(v166 + 1, v165));
  }
  v1796 = &off_24EC493A0;
  v167 = (_QWORD *)operator new();
  *v167 = &off_24EC4A778;
  v167[1] = v163;
  v167[2] = v164;
  *(_QWORD *)&v1797 = v167;
  v169 = *((_QWORD *)&v1795 + 1);
  v168 = v1795;
  if (!*((_QWORD *)&v1795 + 1))
  {
    *((_QWORD *)&v1797 + 1) = v1795;
    v1798 = 0;
    if ((_QWORD)v1795)
      v173 = v1795 + 16;
    else
      v173 = 0;
    goto LABEL_266;
  }
  v170 = (unint64_t *)(*((_QWORD *)&v1795 + 1) + 16);
  do
    v171 = __ldxr(v170);
  while (__stxr(v171 + 1, v170));
  v172 = *((_QWORD *)&v1795 + 1);
  *((_QWORD *)&v1797 + 1) = v168;
  v1798 = v169;
  if ((_QWORD)v1795)
    v173 = v1795 + 16;
  else
    v173 = 0;
  if (!*((_QWORD *)&v1795 + 1))
  {
    v168 = v1795;
LABEL_266:
    v176 = 0;
    v1799 = &off_24EC45488;
    v1800 = v173;
    goto LABEL_267;
  }
  v174 = (unint64_t *)(*((_QWORD *)&v1795 + 1) + 16);
  do
    v175 = __ldxr(v174);
  while (__stxr(v175 + 1, v174));
  v176 = *((_QWORD *)&v1795 + 1);
  v168 = v1795;
  v1799 = &off_24EC45488;
  *(_QWORD *)&v1800 = v173;
  *((_QWORD *)&v1800 + 1) = v172;
  if (*((_QWORD *)&v1795 + 1))
  {
    v177 = (unint64_t *)(*((_QWORD *)&v1795 + 1) + 16);
    do
      v178 = __ldxr(v177);
    while (__stxr(v178 + 1, v177));
  }
LABEL_267:
  if (v168)
    v179 = v168 + 24;
  else
    v179 = 0;
  v1801 = &off_24EC2E850;
  *(_QWORD *)&v1802 = v179;
  *((_QWORD *)&v1802 + 1) = v176;
  if ((SHIBYTE(__src[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__dst[2]) & 0x80000000) == 0)
      goto LABEL_272;
LABEL_275:
    operator delete(__dst[0]);
    v180 = (std::__shared_weak_count *)v2020[1];
    if (!v2020[1])
      goto LABEL_280;
    goto LABEL_276;
  }
  operator delete(__src[0]);
  if (SHIBYTE(__dst[2]) < 0)
    goto LABEL_275;
LABEL_272:
  v180 = (std::__shared_weak_count *)v2020[1];
  if (!v2020[1])
    goto LABEL_280;
LABEL_276:
  v181 = (unint64_t *)&v180->__shared_owners_;
  do
    v182 = __ldaxr(v181);
  while (__stlxr(v182 - 1, v181));
  if (!v182)
  {
    ((void (*)(std::__shared_weak_count *))v180->__on_zero_shared)(v180);
    std::__shared_weak_count::__release_weak(v180);
  }
LABEL_280:
  v183 = (std::__shared_weak_count *)v2033[1];
  if (!v2033[1])
    goto LABEL_284;
  v184 = (unint64_t *)((char *)v2033[1] + 8);
  do
    v185 = __ldaxr(v184);
  while (__stlxr(v185 - 1, v184));
  if (!v185)
  {
    ((void (*)(std::__shared_weak_count *))v183->__on_zero_shared)(v183);
    std::__shared_weak_count::__release_weak(v183);
    if ((SHIBYTE(v1726[2]) & 0x80000000) == 0)
    {
LABEL_285:
      if ((SHIBYTE(v1743[2]) & 0x80000000) == 0)
        goto LABEL_286;
LABEL_290:
      operator delete(v1743[0]);
      if (v1786)
        goto LABEL_292;
      goto LABEL_291;
    }
  }
  else
  {
LABEL_284:
    if ((SHIBYTE(v1726[2]) & 0x80000000) == 0)
      goto LABEL_285;
  }
  operator delete(v1726[0]);
  if (SHIBYTE(v1743[2]) < 0)
    goto LABEL_290;
LABEL_286:
  if (v1786)
    goto LABEL_292;
LABEL_291:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_292:
  v187 = *(void **)v4;
  v186 = *(unint64_t **)(v4 + 8);
  v1771 = *(void **)v4;
  v1772 = (std::__shared_weak_count *)v186;
  if (v186)
  {
    v188 = v186 + 1;
    do
      v189 = __ldxr(v188);
    while (__stxr(v189 + 1, v188));
  }
  v190 = *v2;
  v191 = (unint64_t *)v2[1];
  if (*v2)
    v192 = *v2 + 168;
  else
    v192 = 0;
  v1769 = v192;
  v1770 = (std::__shared_weak_count *)v191;
  if (v191)
  {
    v193 = v191 + 1;
    do
      v194 = __ldxr(v193);
    while (__stxr(v194 + 1, v193));
  }
  if (*(char *)(v192 + 31) < 0)
  {
    sub_223197FA4(v1726, *(void **)(v192 + 8), *(_QWORD *)(v192 + 16));
  }
  else
  {
    v195 = *(_OWORD *)(v192 + 8);
    v1726[2] = *(void **)(v192 + 24);
    *(_OWORD *)v1726 = v195;
  }
  if (*(char *)(v190 + 223) < 0)
  {
    sub_223197FA4(v1709, *(void **)(v190 + 200), *(_QWORD *)(v190 + 208));
  }
  else
  {
    *(_OWORD *)v1709 = *(_OWORD *)(v190 + 200);
    v1709[2] = *(void **)(v190 + 216);
  }
  v2020[0] = v187;
  v2020[1] = v186;
  v1772 = 0;
  v1771 = 0;
  v2007[0] = (void *)v192;
  v2007[1] = v191;
  if (v191)
  {
    v196 = v191 + 1;
    do
      v197 = __ldxr(v196);
    while (__stxr(v197 + 1, v196));
  }
  if (SHIBYTE(v1726[2]) < 0)
  {
    sub_223197FA4(__src, v1726[0], (unint64_t)v1726[1]);
  }
  else
  {
    *(_OWORD *)__src = *(_OWORD *)v1726;
    __src[2] = v1726[2];
  }
  if (SHIBYTE(v1709[2]) < 0)
  {
    sub_223197FA4(v1743, v1709[0], (unint64_t)v1709[1]);
  }
  else
  {
    *(_OWORD *)v1743 = *(_OWORD *)v1709;
    v1743[2] = v1709[2];
  }
  *(void **)((char *)v1968 + 7) = *(void **)((char *)&v1726[1] + 7);
  v198 = v1726[0];
  v1968[0] = v1726[1];
  v199 = HIBYTE(v1726[2]);
  memset(v1726, 0, sizeof(v1726));
  v1981[0] = v1968[0];
  *(void **)((char *)v1981 + 7) = *(void **)((char *)v1968 + 7);
  *(void **)((char *)v1968 + 7) = 0;
  v1968[0] = 0;
  v2033[0] = v187;
  v2033[1] = v186;
  if (v186)
  {
    v200 = v186 + 1;
    do
      v201 = __ldxr(v200);
    while (__stxr(v201 + 1, v200));
  }
  v202 = (char *)operator new();
  v1994[0] = v1981[0];
  *(void **)((char *)v1994 + 7) = *(void **)((char *)v1981 + 7);
  v1981[0] = 0;
  *(void **)((char *)v1981 + 7) = 0;
  v203 = *(_OWORD *)v2033;
  v2033[0] = 0;
  v2033[1] = 0;
  v202[8] = 1;
  *((_QWORD *)v202 + 4) = 0;
  *((_QWORD *)v202 + 5) = 0;
  *(_QWORD *)v202 = &off_24EC4A7F0;
  *((_QWORD *)v202 + 2) = &unk_24EC4A868;
  *((_QWORD *)v202 + 3) = &unk_24EC4A8A8;
  v204 = v1994[0];
  *(void **)(v202 + 63) = *(void **)((char *)v1994 + 7);
  *((_QWORD *)v202 + 6) = v198;
  *((_QWORD *)v202 + 7) = v204;
  v202[71] = v199;
  v1994[0] = 0;
  *(void **)((char *)v1994 + 7) = 0;
  *(_OWORD *)(v202 + 72) = v203;
  v1692[1] = 0;
  v1692[0] = 0;
  v205 = (_QWORD *)operator new();
  *v205 = &off_24EC4A990;
  v205[1] = v192;
  v205[2] = v191;
  v2007[1] = 0;
  v2007[0] = 0;
  *((_QWORD *)v202 + 18) = 0;
  *((_QWORD *)v202 + 11) = v205;
  *((_QWORD *)v202 + 12) = v202 + 96;
  *((_QWORD *)v202 + 13) = v202 + 96;
  *((_QWORD *)v202 + 14) = 0;
  *((_QWORD *)v202 + 15) = v202 + 120;
  *((_QWORD *)v202 + 16) = v202 + 120;
  *((_QWORD *)v202 + 17) = 0;
  if (!*((_QWORD *)v202 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v206 = (std::__shared_weak_count *)operator new();
  v206->__shared_owners_ = 0;
  v207 = (unint64_t *)&v206->__shared_owners_;
  v206->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4AE30;
  v206->__shared_weak_owners_ = 0;
  v206[1].__vftable = (std::__shared_weak_count_vtbl *)v202;
  v208 = (std::__shared_weak_count *)*((_QWORD *)v202 + 5);
  if (v208)
  {
    if (v208->__shared_owners_ != -1)
      goto LABEL_334;
    do
      v209 = __ldxr(v207);
    while (__stxr(v209 + 1, v207));
    v210 = (unint64_t *)&v206->__shared_weak_owners_;
    do
      v211 = __ldxr(v210);
    while (__stxr(v211 + 1, v210));
    *((_QWORD *)v202 + 4) = v202;
    *((_QWORD *)v202 + 5) = v206;
    std::__shared_weak_count::__release_weak(v208);
  }
  else
  {
    do
      v212 = __ldxr(v207);
    while (__stxr(v212 + 1, v207));
    v213 = (unint64_t *)&v206->__shared_weak_owners_;
    do
      v214 = __ldxr(v213);
    while (__stxr(v214 + 1, v213));
    *((_QWORD *)v202 + 4) = v202;
    *((_QWORD *)v202 + 5) = v206;
  }
  do
    v215 = __ldaxr(v207);
  while (__stlxr(v215 - 1, v207));
  if (!v215)
  {
    ((void (*)(std::__shared_weak_count *))v206->__on_zero_shared)(v206);
    std::__shared_weak_count::__release_weak(v206);
  }
LABEL_334:
  if (v1692[1])
  {
    v216 = (unint64_t *)((char *)v1692[1] + 8);
    do
      v217 = __ldaxr(v216);
    while (__stlxr(v217 - 1, v216));
    if (!v217)
    {
      (*(void (**)(void *))(*(_QWORD *)v1692[1] + 16))(v1692[1]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v1692[1]);
    }
  }
  v1692[0] = v202;
  v1692[1] = v206;
  v218 = (std::__shared_weak_count *)v2033[1];
  if (v2033[1])
  {
    v219 = (unint64_t *)((char *)v2033[1] + 8);
    do
      v220 = __ldaxr(v219);
    while (__stlxr(v220 - 1, v219));
    if (!v220)
    {
      ((void (*)(std::__shared_weak_count *))v218->__on_zero_shared)(v218);
      std::__shared_weak_count::__release_weak(v218);
    }
  }
  v221 = *(_OWORD *)v2020;
  v2020[0] = 0;
  v2020[1] = 0;
  *(_OWORD *)&__dst[1] = *(_OWORD *)__src;
  __dst[0] = &off_24EC49308;
  v1774 = __src[2];
  memset(__src, 0, sizeof(__src));
  v1775 = *(_OWORD *)v1743;
  v222 = v1743[2];
  memset(v1743, 0, sizeof(v1743));
  v1777 = v221;
  v2033[1] = 0;
  v2033[0] = 0;
  v223 = v1692[0];
  v224 = (char *)v1692[1];
  v1776 = v222;
  v1778 = *(_OWORD *)v1692;
  v1692[0] = 0;
  v1692[1] = 0;
  if (*((_QWORD *)&v1778 + 1))
  {
    v225 = (unint64_t *)(v224 + 16);
    do
      v226 = __ldxr(v225);
    while (__stxr(v226 + 1, v225));
  }
  v1779 = &off_24EC49338;
  v227 = (_QWORD *)operator new();
  *v227 = &off_24EC4AE80;
  v227[1] = v223;
  v227[2] = v224;
  *(_QWORD *)&v1780 = v227;
  v229 = *((_QWORD *)&v1778 + 1);
  v228 = v1778;
  if (!*((_QWORD *)&v1778 + 1))
  {
    *((_QWORD *)&v1780 + 1) = v1778;
    v1781 = 0;
    if ((_QWORD)v1778)
      v233 = v1778 + 16;
    else
      v233 = 0;
    goto LABEL_364;
  }
  v230 = (unint64_t *)(*((_QWORD *)&v1778 + 1) + 16);
  do
    v231 = __ldxr(v230);
  while (__stxr(v231 + 1, v230));
  v232 = *((_QWORD *)&v1778 + 1);
  *((_QWORD *)&v1780 + 1) = v228;
  v1781 = v229;
  if ((_QWORD)v1778)
    v233 = v1778 + 16;
  else
    v233 = 0;
  if (!*((_QWORD *)&v1778 + 1))
  {
    v228 = v1778;
LABEL_364:
    v236 = 0;
    v1782 = &off_24EC2E888;
    v1783 = v233;
    goto LABEL_365;
  }
  v234 = (unint64_t *)(*((_QWORD *)&v1778 + 1) + 16);
  do
    v235 = __ldxr(v234);
  while (__stxr(v235 + 1, v234));
  v236 = *((_QWORD *)&v1778 + 1);
  v228 = v1778;
  v1782 = &off_24EC2E888;
  *(_QWORD *)&v1783 = v233;
  *((_QWORD *)&v1783 + 1) = v232;
  if (*((_QWORD *)&v1778 + 1))
  {
    v237 = (unint64_t *)(*((_QWORD *)&v1778 + 1) + 16);
    do
      v238 = __ldxr(v237);
    while (__stxr(v238 + 1, v237));
  }
LABEL_365:
  if (v228)
    v239 = v228 + 24;
  else
    v239 = 0;
  v1784 = &off_24EC2E850;
  *(_QWORD *)&v1785 = v239;
  *((_QWORD *)&v1785 + 1) = v236;
  if ((SHIBYTE(v1743[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__src[2]) & 0x80000000) == 0)
      goto LABEL_370;
LABEL_373:
    operator delete(__src[0]);
    v240 = (std::__shared_weak_count *)v2007[1];
    if (!v2007[1])
      goto LABEL_378;
    goto LABEL_374;
  }
  operator delete(v1743[0]);
  if (SHIBYTE(__src[2]) < 0)
    goto LABEL_373;
LABEL_370:
  v240 = (std::__shared_weak_count *)v2007[1];
  if (!v2007[1])
    goto LABEL_378;
LABEL_374:
  v241 = (unint64_t *)&v240->__shared_owners_;
  do
    v242 = __ldaxr(v241);
  while (__stlxr(v242 - 1, v241));
  if (!v242)
  {
    ((void (*)(std::__shared_weak_count *))v240->__on_zero_shared)(v240);
    std::__shared_weak_count::__release_weak(v240);
  }
LABEL_378:
  v243 = (std::__shared_weak_count *)v2020[1];
  if (!v2020[1])
    goto LABEL_382;
  v244 = (unint64_t *)((char *)v2020[1] + 8);
  do
    v245 = __ldaxr(v244);
  while (__stlxr(v245 - 1, v244));
  if (!v245)
  {
    ((void (*)(std::__shared_weak_count *))v243->__on_zero_shared)(v243);
    std::__shared_weak_count::__release_weak(v243);
    if ((SHIBYTE(v1709[2]) & 0x80000000) == 0)
    {
LABEL_383:
      if ((SHIBYTE(v1726[2]) & 0x80000000) == 0)
        goto LABEL_384;
LABEL_388:
      operator delete(v1726[0]);
      if (v1769)
        goto LABEL_390;
      goto LABEL_389;
    }
  }
  else
  {
LABEL_382:
    if ((SHIBYTE(v1709[2]) & 0x80000000) == 0)
      goto LABEL_383;
  }
  operator delete(v1709[0]);
  if (SHIBYTE(v1726[2]) < 0)
    goto LABEL_388;
LABEL_384:
  if (v1769)
    goto LABEL_390;
LABEL_389:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_390:
  v246 = *(_QWORD *)(v4 + 8);
  *(_QWORD *)&v1758 = *(_QWORD *)v4;
  *((_QWORD *)&v1758 + 1) = v246;
  if (v246)
  {
    v247 = (unint64_t *)(v246 + 8);
    do
      v248 = __ldxr(v247);
    while (__stxr(v248 + 1, v247));
  }
  v249 = (std::__shared_weak_count *)v2[1];
  if (*v2)
    v250 = *v2 + 224;
  else
    v250 = 0;
  v1756 = v250;
  v1757 = v249;
  if (v249)
  {
    v251 = (unint64_t *)&v249->__shared_owners_;
    do
      v252 = __ldxr(v251);
    while (__stxr(v252 + 1, v251));
  }
  sub_223491564((uint64_t)__src, &v1758, &v1756);
  v254 = *(void **)v4;
  v253 = *(unint64_t **)(v4 + 8);
  v1741 = *(void **)v4;
  v1742 = (std::__shared_weak_count *)v253;
  if (v253)
  {
    v255 = v253 + 1;
    do
      v256 = __ldxr(v255);
    while (__stxr(v256 + 1, v255));
  }
  v257 = *v2;
  v258 = (unint64_t *)v2[1];
  if (*v2)
    v259 = *v2 + 280;
  else
    v259 = 0;
  v1739 = v259;
  v1740 = (std::__shared_weak_count *)v258;
  if (v258)
  {
    v260 = v258 + 1;
    do
      v261 = __ldxr(v260);
    while (__stxr(v261 + 1, v260));
  }
  if (*(char *)(v259 + 31) < 0)
  {
    sub_223197FA4(v1692, *(void **)(v259 + 8), *(_QWORD *)(v259 + 16));
  }
  else
  {
    v262 = *(_OWORD *)(v259 + 8);
    v1692[2] = *(void **)(v259 + 24);
    *(_OWORD *)v1692 = v262;
  }
  if (*(char *)(v257 + 335) < 0)
  {
    sub_223197FA4(v2033, *(void **)(v257 + 312), *(_QWORD *)(v257 + 320));
  }
  else
  {
    *(_OWORD *)v2033 = *(_OWORD *)(v257 + 312);
    v2033[2] = *(void **)(v257 + 328);
  }
  v1994[0] = v254;
  v1994[1] = v253;
  v1742 = 0;
  v1741 = 0;
  v1981[0] = (void *)v259;
  v1981[1] = v258;
  if (v258)
  {
    v263 = v258 + 1;
    do
      v264 = __ldxr(v263);
    while (__stxr(v264 + 1, v263));
  }
  if (SHIBYTE(v1692[2]) < 0)
  {
    sub_223197FA4(v1726, v1692[0], (unint64_t)v1692[1]);
  }
  else
  {
    *(_OWORD *)v1726 = *(_OWORD *)v1692;
    v1726[2] = v1692[2];
  }
  if (SHIBYTE(v2033[2]) < 0)
  {
    sub_223197FA4(v1709, v2033[0], (unint64_t)v2033[1]);
  }
  else
  {
    *(_OWORD *)v1709 = *(_OWORD *)v2033;
    v1709[2] = v2033[2];
  }
  *(void **)((char *)v1942 + 7) = *(void **)((char *)&v1692[1] + 7);
  v265 = v1692[0];
  v1942[0] = v1692[1];
  v266 = HIBYTE(v1692[2]);
  memset(v1692, 0, sizeof(v1692));
  v1955[0] = v1942[0];
  *(void **)((char *)v1955 + 7) = *(void **)((char *)v1942 + 7);
  *(void **)((char *)v1942 + 7) = 0;
  v1942[0] = 0;
  v2007[0] = v254;
  v2007[1] = v253;
  if (v253)
  {
    v267 = v253 + 1;
    do
      v268 = __ldxr(v267);
    while (__stxr(v268 + 1, v267));
  }
  v269 = (char *)operator new();
  v1968[0] = v1955[0];
  *(void **)((char *)v1968 + 7) = *(void **)((char *)v1955 + 7);
  v1955[0] = 0;
  *(void **)((char *)v1955 + 7) = 0;
  v270 = *(_OWORD *)v2007;
  v2007[0] = 0;
  v2007[1] = 0;
  v269[8] = 1;
  *((_QWORD *)v269 + 4) = 0;
  *((_QWORD *)v269 + 5) = 0;
  *(_QWORD *)v269 = &off_24EC4AEF8;
  *((_QWORD *)v269 + 2) = &unk_24EC4AF70;
  *((_QWORD *)v269 + 3) = &unk_24EC4AFB0;
  v271 = v1968[0];
  *(void **)(v269 + 63) = *(void **)((char *)v1968 + 7);
  *((_QWORD *)v269 + 6) = v265;
  *((_QWORD *)v269 + 7) = v271;
  v269[71] = v266;
  v1968[0] = 0;
  *(void **)((char *)v1968 + 7) = 0;
  *(_OWORD *)(v269 + 72) = v270;
  v2020[1] = 0;
  v2020[0] = 0;
  v272 = (_QWORD *)operator new();
  *v272 = &off_24EC4B098;
  v272[1] = v259;
  v272[2] = v258;
  v1981[1] = 0;
  v1981[0] = 0;
  *((_QWORD *)v269 + 18) = 0;
  *((_QWORD *)v269 + 11) = v272;
  *((_QWORD *)v269 + 12) = v269 + 96;
  *((_QWORD *)v269 + 13) = v269 + 96;
  *((_QWORD *)v269 + 14) = 0;
  *((_QWORD *)v269 + 15) = v269 + 120;
  *((_QWORD *)v269 + 16) = v269 + 120;
  *((_QWORD *)v269 + 17) = 0;
  if (!*((_QWORD *)v269 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v273 = (std::__shared_weak_count *)operator new();
  v273->__shared_owners_ = 0;
  v274 = (unint64_t *)&v273->__shared_owners_;
  v273->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4B538;
  v273->__shared_weak_owners_ = 0;
  v273[1].__vftable = (std::__shared_weak_count_vtbl *)v269;
  v275 = (std::__shared_weak_count *)*((_QWORD *)v269 + 5);
  if (v275)
  {
    if (v275->__shared_owners_ != -1)
      goto LABEL_441;
    do
      v276 = __ldxr(v274);
    while (__stxr(v276 + 1, v274));
    v277 = (unint64_t *)&v273->__shared_weak_owners_;
    do
      v278 = __ldxr(v277);
    while (__stxr(v278 + 1, v277));
    *((_QWORD *)v269 + 4) = v269;
    *((_QWORD *)v269 + 5) = v273;
    std::__shared_weak_count::__release_weak(v275);
  }
  else
  {
    do
      v279 = __ldxr(v274);
    while (__stxr(v279 + 1, v274));
    v280 = (unint64_t *)&v273->__shared_weak_owners_;
    do
      v281 = __ldxr(v280);
    while (__stxr(v281 + 1, v280));
    *((_QWORD *)v269 + 4) = v269;
    *((_QWORD *)v269 + 5) = v273;
  }
  do
    v282 = __ldaxr(v274);
  while (__stlxr(v282 - 1, v274));
  if (!v282)
  {
    ((void (*)(std::__shared_weak_count *))v273->__on_zero_shared)(v273);
    std::__shared_weak_count::__release_weak(v273);
  }
LABEL_441:
  v283 = (std::__shared_weak_count *)v2020[1];
  if (v2020[1])
  {
    v284 = (unint64_t *)((char *)v2020[1] + 8);
    do
      v285 = __ldaxr(v284);
    while (__stlxr(v285 - 1, v284));
    if (!v285)
    {
      ((void (*)(std::__shared_weak_count *))v283->__on_zero_shared)(v283);
      std::__shared_weak_count::__release_weak(v283);
    }
  }
  v2020[0] = v269;
  v2020[1] = v273;
  v286 = (std::__shared_weak_count *)v2007[1];
  if (v2007[1])
  {
    v287 = (unint64_t *)((char *)v2007[1] + 8);
    do
      v288 = __ldaxr(v287);
    while (__stlxr(v288 - 1, v287));
    if (!v288)
    {
      ((void (*)(std::__shared_weak_count *))v286->__on_zero_shared)(v286);
      std::__shared_weak_count::__release_weak(v286);
    }
  }
  v289 = *(_OWORD *)v1994;
  v1994[0] = 0;
  v1994[1] = 0;
  *(_OWORD *)&v1743[1] = *(_OWORD *)v1726;
  v1743[0] = &off_24EC492A0;
  v1744 = v1726[2];
  memset(v1726, 0, sizeof(v1726));
  v1745 = *(_OWORD *)v1709;
  v290 = v1709[2];
  memset(v1709, 0, sizeof(v1709));
  v1747 = v289;
  v2007[1] = 0;
  v2007[0] = 0;
  v291 = v2020[0];
  v292 = (char *)v2020[1];
  v1746 = v290;
  v1748 = *(_OWORD *)v2020;
  v2020[0] = 0;
  v2020[1] = 0;
  if (*((_QWORD *)&v1748 + 1))
  {
    v293 = (unint64_t *)(v292 + 16);
    do
      v294 = __ldxr(v293);
    while (__stxr(v294 + 1, v293));
  }
  v1749 = &off_24EC492D0;
  v295 = (_QWORD *)operator new();
  *v295 = &off_24EC4B588;
  v295[1] = v291;
  v295[2] = v292;
  *(_QWORD *)&v1750 = v295;
  v297 = *((_QWORD *)&v1748 + 1);
  v296 = v1748;
  if (!*((_QWORD *)&v1748 + 1))
  {
    *((_QWORD *)&v1750 + 1) = v1748;
    v1751 = 0;
    if ((_QWORD)v1748)
      v301 = v1748 + 16;
    else
      v301 = 0;
    goto LABEL_471;
  }
  v298 = (unint64_t *)(*((_QWORD *)&v1748 + 1) + 16);
  do
    v299 = __ldxr(v298);
  while (__stxr(v299 + 1, v298));
  v300 = *((_QWORD *)&v1748 + 1);
  *((_QWORD *)&v1750 + 1) = v296;
  v1751 = v297;
  if ((_QWORD)v1748)
    v301 = v1748 + 16;
  else
    v301 = 0;
  if (!*((_QWORD *)&v1748 + 1))
  {
    v296 = v1748;
LABEL_471:
    v304 = 0;
    v1752 = &off_24EC37DE0;
    v1753 = v301;
    goto LABEL_472;
  }
  v302 = (unint64_t *)(*((_QWORD *)&v1748 + 1) + 16);
  do
    v303 = __ldxr(v302);
  while (__stxr(v303 + 1, v302));
  v304 = *((_QWORD *)&v1748 + 1);
  v296 = v1748;
  v1752 = &off_24EC37DE0;
  *(_QWORD *)&v1753 = v301;
  *((_QWORD *)&v1753 + 1) = v300;
  if (*((_QWORD *)&v1748 + 1))
  {
    v305 = (unint64_t *)(*((_QWORD *)&v1748 + 1) + 16);
    do
      v306 = __ldxr(v305);
    while (__stxr(v306 + 1, v305));
  }
LABEL_472:
  if (v296)
    v307 = v296 + 24;
  else
    v307 = 0;
  v1754 = &off_24EC2E850;
  *(_QWORD *)&v1755 = v307;
  *((_QWORD *)&v1755 + 1) = v304;
  if ((SHIBYTE(v1709[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1726[2]) & 0x80000000) == 0)
      goto LABEL_477;
LABEL_480:
    operator delete(v1726[0]);
    v308 = (std::__shared_weak_count *)v1981[1];
    if (!v1981[1])
      goto LABEL_485;
    goto LABEL_481;
  }
  operator delete(v1709[0]);
  if (SHIBYTE(v1726[2]) < 0)
    goto LABEL_480;
LABEL_477:
  v308 = (std::__shared_weak_count *)v1981[1];
  if (!v1981[1])
    goto LABEL_485;
LABEL_481:
  v309 = (unint64_t *)&v308->__shared_owners_;
  do
    v310 = __ldaxr(v309);
  while (__stlxr(v310 - 1, v309));
  if (!v310)
  {
    ((void (*)(std::__shared_weak_count *))v308->__on_zero_shared)(v308);
    std::__shared_weak_count::__release_weak(v308);
  }
LABEL_485:
  v311 = (std::__shared_weak_count *)v1994[1];
  if (!v1994[1])
    goto LABEL_489;
  v312 = (unint64_t *)((char *)v1994[1] + 8);
  do
    v313 = __ldaxr(v312);
  while (__stlxr(v313 - 1, v312));
  if (!v313)
  {
    ((void (*)(std::__shared_weak_count *))v311->__on_zero_shared)(v311);
    std::__shared_weak_count::__release_weak(v311);
    if ((SHIBYTE(v2033[2]) & 0x80000000) == 0)
    {
LABEL_490:
      if ((SHIBYTE(v1692[2]) & 0x80000000) == 0)
        goto LABEL_491;
LABEL_495:
      operator delete(v1692[0]);
      if (v1739)
        goto LABEL_497;
      goto LABEL_496;
    }
  }
  else
  {
LABEL_489:
    if ((SHIBYTE(v2033[2]) & 0x80000000) == 0)
      goto LABEL_490;
  }
  operator delete(v2033[0]);
  if (SHIBYTE(v1692[2]) < 0)
    goto LABEL_495;
LABEL_491:
  if (v1739)
    goto LABEL_497;
LABEL_496:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_497:
  v315 = *(void **)v4;
  v314 = *(unint64_t **)(v4 + 8);
  v1724 = *(void **)v4;
  v1725 = (std::__shared_weak_count *)v314;
  if (v314)
  {
    v316 = v314 + 1;
    do
      v317 = __ldxr(v316);
    while (__stxr(v317 + 1, v316));
  }
  v318 = *v2;
  v319 = (unint64_t *)v2[1];
  if (*v2)
    v320 = *v2 + 336;
  else
    v320 = 0;
  v1722 = v320;
  v1723 = (std::__shared_weak_count *)v319;
  if (v319)
  {
    v321 = v319 + 1;
    do
      v322 = __ldxr(v321);
    while (__stxr(v322 + 1, v321));
  }
  if (*(char *)(v320 + 31) < 0)
  {
    sub_223197FA4(v2033, *(void **)(v320 + 8), *(_QWORD *)(v320 + 16));
  }
  else
  {
    v323 = *(_OWORD *)(v320 + 8);
    v2033[2] = *(void **)(v320 + 24);
    *(_OWORD *)v2033 = v323;
  }
  if (*(char *)(v318 + 391) < 0)
  {
    sub_223197FA4(v2020, *(void **)(v318 + 368), *(_QWORD *)(v318 + 376));
  }
  else
  {
    *(_OWORD *)v2020 = *(_OWORD *)(v318 + 368);
    v2020[2] = *(void **)(v318 + 384);
  }
  v1981[0] = v315;
  v1981[1] = v314;
  v1725 = 0;
  v1724 = 0;
  v1968[0] = (void *)v320;
  v1968[1] = v319;
  if (v319)
  {
    v324 = v319 + 1;
    do
      v325 = __ldxr(v324);
    while (__stxr(v325 + 1, v324));
  }
  if (SHIBYTE(v2033[2]) < 0)
  {
    sub_223197FA4(v1709, v2033[0], (unint64_t)v2033[1]);
  }
  else
  {
    *(_OWORD *)v1709 = *(_OWORD *)v2033;
    v1709[2] = v2033[2];
  }
  if (SHIBYTE(v2020[2]) < 0)
  {
    sub_223197FA4(v1692, v2020[0], (unint64_t)v2020[1]);
  }
  else
  {
    *(_OWORD *)v1692 = *(_OWORD *)v2020;
    v1692[2] = v2020[2];
  }
  *(void **)((char *)v1929 + 7) = *(void **)((char *)&v2033[1] + 7);
  v326 = v2033[0];
  v1929[0] = v2033[1];
  v327 = HIBYTE(v2033[2]);
  memset(v2033, 0, sizeof(v2033));
  v1942[0] = v1929[0];
  *(void **)((char *)v1942 + 7) = *(void **)((char *)v1929 + 7);
  *(void **)((char *)v1929 + 7) = 0;
  v1929[0] = 0;
  v1994[0] = v315;
  v1994[1] = v314;
  if (v314)
  {
    v328 = v314 + 1;
    do
      v329 = __ldxr(v328);
    while (__stxr(v329 + 1, v328));
  }
  v330 = (char *)operator new();
  v1955[0] = v1942[0];
  *(void **)((char *)v1955 + 7) = *(void **)((char *)v1942 + 7);
  v1942[0] = 0;
  *(void **)((char *)v1942 + 7) = 0;
  v331 = *(_OWORD *)v1994;
  v1994[0] = 0;
  v1994[1] = 0;
  v330[8] = 1;
  *((_QWORD *)v330 + 4) = 0;
  *((_QWORD *)v330 + 5) = 0;
  *(_QWORD *)v330 = &off_24EC4B600;
  *((_QWORD *)v330 + 2) = &unk_24EC4B678;
  *((_QWORD *)v330 + 3) = &unk_24EC4B6B8;
  v332 = v1955[0];
  *(void **)(v330 + 63) = *(void **)((char *)v1955 + 7);
  *((_QWORD *)v330 + 6) = v326;
  *((_QWORD *)v330 + 7) = v332;
  v330[71] = v327;
  v1955[0] = 0;
  *(void **)((char *)v1955 + 7) = 0;
  *(_OWORD *)(v330 + 72) = v331;
  v2007[1] = 0;
  v2007[0] = 0;
  v333 = (_QWORD *)operator new();
  *v333 = &off_24EC4B7A0;
  v333[1] = v320;
  v333[2] = v319;
  v1968[1] = 0;
  v1968[0] = 0;
  *((_QWORD *)v330 + 18) = 0;
  *((_QWORD *)v330 + 11) = v333;
  *((_QWORD *)v330 + 12) = v330 + 96;
  *((_QWORD *)v330 + 13) = v330 + 96;
  *((_QWORD *)v330 + 14) = 0;
  *((_QWORD *)v330 + 15) = v330 + 120;
  *((_QWORD *)v330 + 16) = v330 + 120;
  *((_QWORD *)v330 + 17) = 0;
  if (!*((_QWORD *)v330 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v334 = (std::__shared_weak_count *)operator new();
  v334->__shared_owners_ = 0;
  v335 = (unint64_t *)&v334->__shared_owners_;
  v334->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4BC40;
  v334->__shared_weak_owners_ = 0;
  v334[1].__vftable = (std::__shared_weak_count_vtbl *)v330;
  v336 = (std::__shared_weak_count *)*((_QWORD *)v330 + 5);
  if (v336)
  {
    if (v336->__shared_owners_ != -1)
      goto LABEL_539;
    do
      v337 = __ldxr(v335);
    while (__stxr(v337 + 1, v335));
    v338 = (unint64_t *)&v334->__shared_weak_owners_;
    do
      v339 = __ldxr(v338);
    while (__stxr(v339 + 1, v338));
    *((_QWORD *)v330 + 4) = v330;
    *((_QWORD *)v330 + 5) = v334;
    std::__shared_weak_count::__release_weak(v336);
  }
  else
  {
    do
      v340 = __ldxr(v335);
    while (__stxr(v340 + 1, v335));
    v341 = (unint64_t *)&v334->__shared_weak_owners_;
    do
      v342 = __ldxr(v341);
    while (__stxr(v342 + 1, v341));
    *((_QWORD *)v330 + 4) = v330;
    *((_QWORD *)v330 + 5) = v334;
  }
  do
    v343 = __ldaxr(v335);
  while (__stlxr(v343 - 1, v335));
  if (!v343)
  {
    ((void (*)(std::__shared_weak_count *))v334->__on_zero_shared)(v334);
    std::__shared_weak_count::__release_weak(v334);
  }
LABEL_539:
  v344 = (std::__shared_weak_count *)v2007[1];
  if (v2007[1])
  {
    v345 = (unint64_t *)((char *)v2007[1] + 8);
    do
      v346 = __ldaxr(v345);
    while (__stlxr(v346 - 1, v345));
    if (!v346)
    {
      ((void (*)(std::__shared_weak_count *))v344->__on_zero_shared)(v344);
      std::__shared_weak_count::__release_weak(v344);
    }
  }
  v2007[0] = v330;
  v2007[1] = v334;
  v347 = (std::__shared_weak_count *)v1994[1];
  if (v1994[1])
  {
    v348 = (unint64_t *)((char *)v1994[1] + 8);
    do
      v349 = __ldaxr(v348);
    while (__stlxr(v349 - 1, v348));
    if (!v349)
    {
      ((void (*)(std::__shared_weak_count *))v347->__on_zero_shared)(v347);
      std::__shared_weak_count::__release_weak(v347);
    }
  }
  v350 = *(_OWORD *)v1981;
  v1981[0] = 0;
  v1981[1] = 0;
  *(_OWORD *)&v1726[1] = *(_OWORD *)v1709;
  v1726[0] = &off_24EC49238;
  v1727 = v1709[2];
  memset(v1709, 0, sizeof(v1709));
  v1728 = *(_OWORD *)v1692;
  v351 = v1692[2];
  memset(v1692, 0, sizeof(v1692));
  v1730 = v350;
  v1994[1] = 0;
  v1994[0] = 0;
  v352 = v2007[0];
  v353 = (char *)v2007[1];
  v1729 = v351;
  v1731 = *(_OWORD *)v2007;
  v2007[0] = 0;
  v2007[1] = 0;
  if (*((_QWORD *)&v1731 + 1))
  {
    v354 = (unint64_t *)(v353 + 16);
    do
      v355 = __ldxr(v354);
    while (__stxr(v355 + 1, v354));
  }
  v1732 = &off_24EC49268;
  v356 = (_QWORD *)operator new();
  *v356 = &off_24EC4BC90;
  v356[1] = v352;
  v356[2] = v353;
  *(_QWORD *)&v1733 = v356;
  v358 = *((_QWORD *)&v1731 + 1);
  v357 = v1731;
  if (!*((_QWORD *)&v1731 + 1))
  {
    *((_QWORD *)&v1733 + 1) = v1731;
    v1734 = 0;
    if ((_QWORD)v1731)
      v362 = v1731 + 16;
    else
      v362 = 0;
    goto LABEL_569;
  }
  v359 = (unint64_t *)(*((_QWORD *)&v1731 + 1) + 16);
  do
    v360 = __ldxr(v359);
  while (__stxr(v360 + 1, v359));
  v361 = *((_QWORD *)&v1731 + 1);
  *((_QWORD *)&v1733 + 1) = v357;
  v1734 = v358;
  if ((_QWORD)v1731)
    v362 = v1731 + 16;
  else
    v362 = 0;
  if (!*((_QWORD *)&v1731 + 1))
  {
    v357 = v1731;
LABEL_569:
    v365 = 0;
    v1735 = &off_24EC45488;
    v1736 = v362;
    goto LABEL_570;
  }
  v363 = (unint64_t *)(*((_QWORD *)&v1731 + 1) + 16);
  do
    v364 = __ldxr(v363);
  while (__stxr(v364 + 1, v363));
  v365 = *((_QWORD *)&v1731 + 1);
  v357 = v1731;
  v1735 = &off_24EC45488;
  *(_QWORD *)&v1736 = v362;
  *((_QWORD *)&v1736 + 1) = v361;
  if (*((_QWORD *)&v1731 + 1))
  {
    v366 = (unint64_t *)(*((_QWORD *)&v1731 + 1) + 16);
    do
      v367 = __ldxr(v366);
    while (__stxr(v367 + 1, v366));
  }
LABEL_570:
  if (v357)
    v368 = v357 + 24;
  else
    v368 = 0;
  v1737 = &off_24EC2E850;
  *(_QWORD *)&v1738 = v368;
  *((_QWORD *)&v1738 + 1) = v365;
  if ((SHIBYTE(v1692[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1709[2]) & 0x80000000) == 0)
      goto LABEL_575;
LABEL_578:
    operator delete(v1709[0]);
    v369 = (std::__shared_weak_count *)v1968[1];
    if (!v1968[1])
      goto LABEL_583;
    goto LABEL_579;
  }
  operator delete(v1692[0]);
  if (SHIBYTE(v1709[2]) < 0)
    goto LABEL_578;
LABEL_575:
  v369 = (std::__shared_weak_count *)v1968[1];
  if (!v1968[1])
    goto LABEL_583;
LABEL_579:
  v370 = (unint64_t *)&v369->__shared_owners_;
  do
    v371 = __ldaxr(v370);
  while (__stlxr(v371 - 1, v370));
  if (!v371)
  {
    ((void (*)(std::__shared_weak_count *))v369->__on_zero_shared)(v369);
    std::__shared_weak_count::__release_weak(v369);
  }
LABEL_583:
  v372 = (std::__shared_weak_count *)v1981[1];
  if (!v1981[1])
    goto LABEL_587;
  v373 = (unint64_t *)((char *)v1981[1] + 8);
  do
    v374 = __ldaxr(v373);
  while (__stlxr(v374 - 1, v373));
  if (!v374)
  {
    ((void (*)(std::__shared_weak_count *))v372->__on_zero_shared)(v372);
    std::__shared_weak_count::__release_weak(v372);
    if ((SHIBYTE(v2020[2]) & 0x80000000) == 0)
    {
LABEL_588:
      if ((SHIBYTE(v2033[2]) & 0x80000000) == 0)
        goto LABEL_589;
LABEL_593:
      operator delete(v2033[0]);
      if (v1722)
        goto LABEL_595;
      goto LABEL_594;
    }
  }
  else
  {
LABEL_587:
    if ((SHIBYTE(v2020[2]) & 0x80000000) == 0)
      goto LABEL_588;
  }
  operator delete(v2020[0]);
  if (SHIBYTE(v2033[2]) < 0)
    goto LABEL_593;
LABEL_589:
  if (v1722)
    goto LABEL_595;
LABEL_594:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_595:
  v376 = *(void **)v4;
  v375 = *(unint64_t **)(v4 + 8);
  v1707 = *(void **)v4;
  v1708 = (std::__shared_weak_count *)v375;
  if (v375)
  {
    v377 = v375 + 1;
    do
      v378 = __ldxr(v377);
    while (__stxr(v378 + 1, v377));
  }
  v379 = *v2;
  v380 = (unint64_t *)v2[1];
  if (*v2)
    v381 = *v2 + 392;
  else
    v381 = 0;
  v1705 = v381;
  v1706 = (std::__shared_weak_count *)v380;
  if (v380)
  {
    v382 = v380 + 1;
    do
      v383 = __ldxr(v382);
    while (__stxr(v383 + 1, v382));
  }
  if (*(char *)(v381 + 31) < 0)
  {
    sub_223197FA4(v2020, *(void **)(v381 + 8), *(_QWORD *)(v381 + 16));
  }
  else
  {
    v384 = *(_OWORD *)(v381 + 8);
    v2020[2] = *(void **)(v381 + 24);
    *(_OWORD *)v2020 = v384;
  }
  if (*(char *)(v379 + 447) < 0)
  {
    sub_223197FA4(v2007, *(void **)(v379 + 424), *(_QWORD *)(v379 + 432));
  }
  else
  {
    *(_OWORD *)v2007 = *(_OWORD *)(v379 + 424);
    v2007[2] = *(void **)(v379 + 440);
  }
  v1968[0] = v376;
  v1968[1] = v375;
  v1708 = 0;
  v1707 = 0;
  v1955[0] = (void *)v381;
  v1955[1] = v380;
  if (v380)
  {
    v385 = v380 + 1;
    do
      v386 = __ldxr(v385);
    while (__stxr(v386 + 1, v385));
  }
  if (SHIBYTE(v2020[2]) < 0)
  {
    sub_223197FA4(v1692, v2020[0], (unint64_t)v2020[1]);
  }
  else
  {
    *(_OWORD *)v1692 = *(_OWORD *)v2020;
    v1692[2] = v2020[2];
  }
  if (SHIBYTE(v2007[2]) < 0)
  {
    sub_223197FA4(v2033, v2007[0], (unint64_t)v2007[1]);
  }
  else
  {
    *(_OWORD *)v2033 = *(_OWORD *)v2007;
    v2033[2] = v2007[2];
  }
  *(void **)((char *)v1916 + 7) = *(void **)((char *)&v2020[1] + 7);
  v387 = v2020[0];
  v1916[0] = v2020[1];
  v388 = HIBYTE(v2020[2]);
  memset(v2020, 0, sizeof(v2020));
  v1929[0] = v1916[0];
  *(void **)((char *)v1929 + 7) = *(void **)((char *)v1916 + 7);
  *(void **)((char *)v1916 + 7) = 0;
  v1916[0] = 0;
  v1981[0] = v376;
  v1981[1] = v375;
  if (v375)
  {
    v389 = v375 + 1;
    do
      v390 = __ldxr(v389);
    while (__stxr(v390 + 1, v389));
  }
  v391 = (char *)operator new();
  v1942[0] = v1929[0];
  *(void **)((char *)v1942 + 7) = *(void **)((char *)v1929 + 7);
  v1929[0] = 0;
  *(void **)((char *)v1929 + 7) = 0;
  v392 = *(_OWORD *)v1981;
  v1981[0] = 0;
  v1981[1] = 0;
  v391[8] = 1;
  *((_QWORD *)v391 + 4) = 0;
  *((_QWORD *)v391 + 5) = 0;
  *(_QWORD *)v391 = &off_24EC4BD08;
  *((_QWORD *)v391 + 2) = &unk_24EC4BD80;
  *((_QWORD *)v391 + 3) = &unk_24EC4BDC0;
  v393 = v1942[0];
  *(void **)(v391 + 63) = *(void **)((char *)v1942 + 7);
  *((_QWORD *)v391 + 6) = v387;
  *((_QWORD *)v391 + 7) = v393;
  v391[71] = v388;
  v1942[0] = 0;
  *(void **)((char *)v1942 + 7) = 0;
  *(_OWORD *)(v391 + 72) = v392;
  v1994[1] = 0;
  v1994[0] = 0;
  v394 = (_QWORD *)operator new();
  *v394 = &off_24EC4BEA8;
  v394[1] = v381;
  v394[2] = v380;
  v1955[1] = 0;
  v1955[0] = 0;
  *((_QWORD *)v391 + 18) = 0;
  *((_QWORD *)v391 + 11) = v394;
  *((_QWORD *)v391 + 12) = v391 + 96;
  *((_QWORD *)v391 + 13) = v391 + 96;
  *((_QWORD *)v391 + 14) = 0;
  *((_QWORD *)v391 + 15) = v391 + 120;
  *((_QWORD *)v391 + 16) = v391 + 120;
  *((_QWORD *)v391 + 17) = 0;
  if (!*((_QWORD *)v391 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v395 = (std::__shared_weak_count *)operator new();
  v395->__shared_owners_ = 0;
  v396 = (unint64_t *)&v395->__shared_owners_;
  v395->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4C348;
  v395->__shared_weak_owners_ = 0;
  v395[1].__vftable = (std::__shared_weak_count_vtbl *)v391;
  v397 = (std::__shared_weak_count *)*((_QWORD *)v391 + 5);
  if (v397)
  {
    if (v397->__shared_owners_ != -1)
      goto LABEL_637;
    do
      v398 = __ldxr(v396);
    while (__stxr(v398 + 1, v396));
    v399 = (unint64_t *)&v395->__shared_weak_owners_;
    do
      v400 = __ldxr(v399);
    while (__stxr(v400 + 1, v399));
    *((_QWORD *)v391 + 4) = v391;
    *((_QWORD *)v391 + 5) = v395;
    std::__shared_weak_count::__release_weak(v397);
  }
  else
  {
    do
      v401 = __ldxr(v396);
    while (__stxr(v401 + 1, v396));
    v402 = (unint64_t *)&v395->__shared_weak_owners_;
    do
      v403 = __ldxr(v402);
    while (__stxr(v403 + 1, v402));
    *((_QWORD *)v391 + 4) = v391;
    *((_QWORD *)v391 + 5) = v395;
  }
  do
    v404 = __ldaxr(v396);
  while (__stlxr(v404 - 1, v396));
  if (!v404)
  {
    ((void (*)(std::__shared_weak_count *))v395->__on_zero_shared)(v395);
    std::__shared_weak_count::__release_weak(v395);
  }
LABEL_637:
  v405 = (std::__shared_weak_count *)v1994[1];
  if (v1994[1])
  {
    v406 = (unint64_t *)((char *)v1994[1] + 8);
    do
      v407 = __ldaxr(v406);
    while (__stlxr(v407 - 1, v406));
    if (!v407)
    {
      ((void (*)(std::__shared_weak_count *))v405->__on_zero_shared)(v405);
      std::__shared_weak_count::__release_weak(v405);
    }
  }
  v1994[0] = v391;
  v1994[1] = v395;
  v408 = (std::__shared_weak_count *)v1981[1];
  if (v1981[1])
  {
    v409 = (unint64_t *)((char *)v1981[1] + 8);
    do
      v410 = __ldaxr(v409);
    while (__stlxr(v410 - 1, v409));
    if (!v410)
    {
      ((void (*)(std::__shared_weak_count *))v408->__on_zero_shared)(v408);
      std::__shared_weak_count::__release_weak(v408);
    }
  }
  v411 = *(_OWORD *)v1968;
  v1968[0] = 0;
  v1968[1] = 0;
  *(_OWORD *)&v1709[1] = *(_OWORD *)v1692;
  v1709[0] = &off_24EC491D0;
  v1710 = v1692[2];
  memset(v1692, 0, sizeof(v1692));
  v1711 = *(_OWORD *)v2033;
  v412 = v2033[2];
  memset(v2033, 0, sizeof(v2033));
  v1713 = v411;
  v1981[1] = 0;
  v1981[0] = 0;
  v413 = v1994[0];
  v414 = (char *)v1994[1];
  v1712 = v412;
  v1714 = *(_OWORD *)v1994;
  v1994[0] = 0;
  v1994[1] = 0;
  if (*((_QWORD *)&v1714 + 1))
  {
    v415 = (unint64_t *)(v414 + 16);
    do
      v416 = __ldxr(v415);
    while (__stxr(v416 + 1, v415));
  }
  v1715 = &off_24EC49200;
  v417 = (_QWORD *)operator new();
  *v417 = &off_24EC4C398;
  v417[1] = v413;
  v417[2] = v414;
  *(_QWORD *)&v1716 = v417;
  v419 = *((_QWORD *)&v1714 + 1);
  v418 = v1714;
  if (!*((_QWORD *)&v1714 + 1))
  {
    *((_QWORD *)&v1716 + 1) = v1714;
    v1717 = 0;
    if ((_QWORD)v1714)
      v423 = v1714 + 16;
    else
      v423 = 0;
    goto LABEL_667;
  }
  v420 = (unint64_t *)(*((_QWORD *)&v1714 + 1) + 16);
  do
    v421 = __ldxr(v420);
  while (__stxr(v421 + 1, v420));
  v422 = *((_QWORD *)&v1714 + 1);
  *((_QWORD *)&v1716 + 1) = v418;
  v1717 = v419;
  if ((_QWORD)v1714)
    v423 = v1714 + 16;
  else
    v423 = 0;
  if (!*((_QWORD *)&v1714 + 1))
  {
    v418 = v1714;
LABEL_667:
    v426 = 0;
    v1718 = &off_24EC454F0;
    v1719 = v423;
    goto LABEL_668;
  }
  v424 = (unint64_t *)(*((_QWORD *)&v1714 + 1) + 16);
  do
    v425 = __ldxr(v424);
  while (__stxr(v425 + 1, v424));
  v426 = *((_QWORD *)&v1714 + 1);
  v418 = v1714;
  v1718 = &off_24EC454F0;
  *(_QWORD *)&v1719 = v423;
  *((_QWORD *)&v1719 + 1) = v422;
  if (*((_QWORD *)&v1714 + 1))
  {
    v427 = (unint64_t *)(*((_QWORD *)&v1714 + 1) + 16);
    do
      v428 = __ldxr(v427);
    while (__stxr(v428 + 1, v427));
  }
LABEL_668:
  if (v418)
    v429 = v418 + 24;
  else
    v429 = 0;
  v1720 = &off_24EC2E850;
  *(_QWORD *)&v1721 = v429;
  *((_QWORD *)&v1721 + 1) = v426;
  if ((SHIBYTE(v2033[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1692[2]) & 0x80000000) == 0)
      goto LABEL_673;
LABEL_676:
    operator delete(v1692[0]);
    v430 = (std::__shared_weak_count *)v1955[1];
    if (!v1955[1])
      goto LABEL_681;
    goto LABEL_677;
  }
  operator delete(v2033[0]);
  if (SHIBYTE(v1692[2]) < 0)
    goto LABEL_676;
LABEL_673:
  v430 = (std::__shared_weak_count *)v1955[1];
  if (!v1955[1])
    goto LABEL_681;
LABEL_677:
  v431 = (unint64_t *)&v430->__shared_owners_;
  do
    v432 = __ldaxr(v431);
  while (__stlxr(v432 - 1, v431));
  if (!v432)
  {
    ((void (*)(std::__shared_weak_count *))v430->__on_zero_shared)(v430);
    std::__shared_weak_count::__release_weak(v430);
  }
LABEL_681:
  v433 = (std::__shared_weak_count *)v1968[1];
  if (!v1968[1])
    goto LABEL_685;
  v434 = (unint64_t *)((char *)v1968[1] + 8);
  do
    v435 = __ldaxr(v434);
  while (__stlxr(v435 - 1, v434));
  if (!v435)
  {
    ((void (*)(std::__shared_weak_count *))v433->__on_zero_shared)(v433);
    std::__shared_weak_count::__release_weak(v433);
    if ((SHIBYTE(v2007[2]) & 0x80000000) == 0)
    {
LABEL_686:
      if ((SHIBYTE(v2020[2]) & 0x80000000) == 0)
        goto LABEL_687;
LABEL_691:
      operator delete(v2020[0]);
      if (v1705)
        goto LABEL_693;
      goto LABEL_692;
    }
  }
  else
  {
LABEL_685:
    if ((SHIBYTE(v2007[2]) & 0x80000000) == 0)
      goto LABEL_686;
  }
  operator delete(v2007[0]);
  if (SHIBYTE(v2020[2]) < 0)
    goto LABEL_691;
LABEL_687:
  if (v1705)
    goto LABEL_693;
LABEL_692:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_693:
  v437 = *(void **)v4;
  v436 = *(unint64_t **)(v4 + 8);
  if (v436)
  {
    v438 = v436 + 1;
    do
      v439 = __ldxr(v438);
    while (__stxr(v439 + 1, v438));
  }
  v440 = *v2;
  v441 = (unint64_t *)v2[1];
  if (*v2)
    v442 = *v2 + 448;
  else
    v442 = 0;
  v1691 = (std::__shared_weak_count *)v2[1];
  if (v441)
  {
    v443 = v441 + 1;
    do
      v444 = __ldxr(v443);
    while (__stxr(v444 + 1, v443));
  }
  if (*(char *)(v442 + 31) < 0)
  {
    sub_223197FA4(v2007, *(void **)(v442 + 8), *(_QWORD *)(v442 + 16));
  }
  else
  {
    v445 = *(_OWORD *)(v442 + 8);
    v2007[2] = *(void **)(v442 + 24);
    *(_OWORD *)v2007 = v445;
  }
  if (*(char *)(v440 + 503) < 0)
  {
    sub_223197FA4(v1994, *(void **)(v440 + 480), *(_QWORD *)(v440 + 488));
  }
  else
  {
    *(_OWORD *)v1994 = *(_OWORD *)(v440 + 480);
    v1994[2] = *(void **)(v440 + 496);
  }
  v1955[0] = v437;
  v1955[1] = v436;
  v1942[0] = (void *)v442;
  v1942[1] = v441;
  if (v441)
  {
    v446 = v441 + 1;
    do
      v447 = __ldxr(v446);
    while (__stxr(v447 + 1, v446));
  }
  if (SHIBYTE(v2007[2]) < 0)
  {
    sub_223197FA4(v2033, v2007[0], (unint64_t)v2007[1]);
  }
  else
  {
    *(_OWORD *)v2033 = *(_OWORD *)v2007;
    v2033[2] = v2007[2];
  }
  if (SHIBYTE(v1994[2]) < 0)
  {
    sub_223197FA4(v2020, v1994[0], (unint64_t)v1994[1]);
  }
  else
  {
    *(_OWORD *)v2020 = *(_OWORD *)v1994;
    v2020[2] = v1994[2];
  }
  *(void **)((char *)v1903 + 7) = *(void **)((char *)&v2007[1] + 7);
  v448 = v2007[0];
  v1903[0] = v2007[1];
  v449 = HIBYTE(v2007[2]);
  memset(v2007, 0, sizeof(v2007));
  v1916[0] = v1903[0];
  *(void **)((char *)v1916 + 7) = *(void **)((char *)v1903 + 7);
  *(void **)((char *)v1903 + 7) = 0;
  v1903[0] = 0;
  v1968[0] = v437;
  v1968[1] = v436;
  if (v436)
  {
    v450 = v436 + 1;
    do
      v451 = __ldxr(v450);
    while (__stxr(v451 + 1, v450));
  }
  v452 = (char *)operator new();
  v1929[0] = v1916[0];
  *(void **)((char *)v1929 + 7) = *(void **)((char *)v1916 + 7);
  v1916[0] = 0;
  *(void **)((char *)v1916 + 7) = 0;
  v453 = *(_OWORD *)v1968;
  v1968[0] = 0;
  v1968[1] = 0;
  v452[8] = 1;
  *((_QWORD *)v452 + 4) = 0;
  *((_QWORD *)v452 + 5) = 0;
  *(_QWORD *)v452 = &off_24EC4C410;
  *((_QWORD *)v452 + 2) = &unk_24EC4C488;
  *((_QWORD *)v452 + 3) = &unk_24EC4C4C8;
  v454 = v1929[0];
  *(void **)(v452 + 63) = *(void **)((char *)v1929 + 7);
  *((_QWORD *)v452 + 6) = v448;
  *((_QWORD *)v452 + 7) = v454;
  v452[71] = v449;
  v1929[0] = 0;
  *(void **)((char *)v1929 + 7) = 0;
  *(_OWORD *)(v452 + 72) = v453;
  v1981[1] = 0;
  v1981[0] = 0;
  v455 = (_QWORD *)operator new();
  *v455 = &off_24EC4C5B0;
  v455[1] = v442;
  v455[2] = v441;
  v1942[1] = 0;
  v1942[0] = 0;
  *((_QWORD *)v452 + 18) = 0;
  *((_QWORD *)v452 + 11) = v455;
  *((_QWORD *)v452 + 12) = v452 + 96;
  *((_QWORD *)v452 + 13) = v452 + 96;
  *((_QWORD *)v452 + 14) = 0;
  *((_QWORD *)v452 + 15) = v452 + 120;
  *((_QWORD *)v452 + 16) = v452 + 120;
  *((_QWORD *)v452 + 17) = 0;
  if (!*((_QWORD *)v452 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v456 = (std::__shared_weak_count *)operator new();
  v456->__shared_owners_ = 0;
  v457 = (unint64_t *)&v456->__shared_owners_;
  v456->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4CA50;
  v456->__shared_weak_owners_ = 0;
  v456[1].__vftable = (std::__shared_weak_count_vtbl *)v452;
  v458 = (std::__shared_weak_count *)*((_QWORD *)v452 + 5);
  if (v458)
  {
    if (v458->__shared_owners_ != -1)
      goto LABEL_735;
    do
      v459 = __ldxr(v457);
    while (__stxr(v459 + 1, v457));
    v460 = (unint64_t *)&v456->__shared_weak_owners_;
    do
      v461 = __ldxr(v460);
    while (__stxr(v461 + 1, v460));
    *((_QWORD *)v452 + 4) = v452;
    *((_QWORD *)v452 + 5) = v456;
    std::__shared_weak_count::__release_weak(v458);
  }
  else
  {
    do
      v462 = __ldxr(v457);
    while (__stxr(v462 + 1, v457));
    v463 = (unint64_t *)&v456->__shared_weak_owners_;
    do
      v464 = __ldxr(v463);
    while (__stxr(v464 + 1, v463));
    *((_QWORD *)v452 + 4) = v452;
    *((_QWORD *)v452 + 5) = v456;
  }
  do
    v465 = __ldaxr(v457);
  while (__stlxr(v465 - 1, v457));
  if (!v465)
  {
    ((void (*)(std::__shared_weak_count *))v456->__on_zero_shared)(v456);
    std::__shared_weak_count::__release_weak(v456);
  }
LABEL_735:
  v466 = (std::__shared_weak_count *)v1981[1];
  if (v1981[1])
  {
    v467 = (unint64_t *)((char *)v1981[1] + 8);
    do
      v468 = __ldaxr(v467);
    while (__stlxr(v468 - 1, v467));
    if (!v468)
    {
      ((void (*)(std::__shared_weak_count *))v466->__on_zero_shared)(v466);
      std::__shared_weak_count::__release_weak(v466);
    }
  }
  v1981[0] = v452;
  v1981[1] = v456;
  v469 = (std::__shared_weak_count *)v1968[1];
  if (v1968[1])
  {
    v470 = (unint64_t *)((char *)v1968[1] + 8);
    do
      v471 = __ldaxr(v470);
    while (__stlxr(v471 - 1, v470));
    if (!v471)
    {
      ((void (*)(std::__shared_weak_count *))v469->__on_zero_shared)(v469);
      std::__shared_weak_count::__release_weak(v469);
    }
  }
  v472 = *(_OWORD *)v1955;
  v1955[0] = 0;
  v1955[1] = 0;
  *(_OWORD *)&v1692[1] = *(_OWORD *)v2033;
  v1692[0] = &off_24EC49168;
  v1693 = v2033[2];
  memset(v2033, 0, sizeof(v2033));
  v1694 = *(_OWORD *)v2020;
  v473 = v2020[2];
  memset(v2020, 0, sizeof(v2020));
  v1696 = v472;
  v1968[1] = 0;
  v1968[0] = 0;
  v474 = v1981[0];
  v475 = (char *)v1981[1];
  v1695 = v473;
  v1697 = *(_OWORD *)v1981;
  v1981[0] = 0;
  v1981[1] = 0;
  if (*((_QWORD *)&v1697 + 1))
  {
    v476 = (unint64_t *)(v475 + 16);
    do
      v477 = __ldxr(v476);
    while (__stxr(v477 + 1, v476));
  }
  v1698 = &off_24EC49198;
  v478 = (_QWORD *)operator new();
  *v478 = &off_24EC4CAA0;
  v478[1] = v474;
  v478[2] = v475;
  *(_QWORD *)&v1699 = v478;
  v480 = *((_QWORD *)&v1697 + 1);
  v479 = v1697;
  if (!*((_QWORD *)&v1697 + 1))
  {
    *((_QWORD *)&v1699 + 1) = v1697;
    v1700 = 0;
    if ((_QWORD)v1697)
      v484 = v1697 + 16;
    else
      v484 = 0;
    goto LABEL_765;
  }
  v481 = (unint64_t *)(*((_QWORD *)&v1697 + 1) + 16);
  do
    v482 = __ldxr(v481);
  while (__stxr(v482 + 1, v481));
  v483 = *((_QWORD *)&v1697 + 1);
  *((_QWORD *)&v1699 + 1) = v479;
  v1700 = v480;
  if ((_QWORD)v1697)
    v484 = v1697 + 16;
  else
    v484 = 0;
  if (!*((_QWORD *)&v1697 + 1))
  {
    v479 = v1697;
LABEL_765:
    v487 = 0;
    v1701 = &off_24EC45558;
    v1702 = v484;
    goto LABEL_766;
  }
  v485 = (unint64_t *)(*((_QWORD *)&v1697 + 1) + 16);
  do
    v486 = __ldxr(v485);
  while (__stxr(v486 + 1, v485));
  v487 = *((_QWORD *)&v1697 + 1);
  v479 = v1697;
  v1701 = &off_24EC45558;
  *(_QWORD *)&v1702 = v484;
  *((_QWORD *)&v1702 + 1) = v483;
  if (*((_QWORD *)&v1697 + 1))
  {
    v488 = (unint64_t *)(*((_QWORD *)&v1697 + 1) + 16);
    do
      v489 = __ldxr(v488);
    while (__stxr(v489 + 1, v488));
  }
LABEL_766:
  if (v479)
    v490 = v479 + 24;
  else
    v490 = 0;
  v1703 = &off_24EC2E850;
  *(_QWORD *)&v1704 = v490;
  *((_QWORD *)&v1704 + 1) = v487;
  if ((SHIBYTE(v2020[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v2033[2]) & 0x80000000) == 0)
      goto LABEL_771;
LABEL_774:
    operator delete(v2033[0]);
    v491 = (std::__shared_weak_count *)v1942[1];
    if (!v1942[1])
      goto LABEL_779;
    goto LABEL_775;
  }
  operator delete(v2020[0]);
  if (SHIBYTE(v2033[2]) < 0)
    goto LABEL_774;
LABEL_771:
  v491 = (std::__shared_weak_count *)v1942[1];
  if (!v1942[1])
    goto LABEL_779;
LABEL_775:
  v492 = (unint64_t *)&v491->__shared_owners_;
  do
    v493 = __ldaxr(v492);
  while (__stlxr(v493 - 1, v492));
  if (!v493)
  {
    ((void (*)(std::__shared_weak_count *))v491->__on_zero_shared)(v491);
    std::__shared_weak_count::__release_weak(v491);
  }
LABEL_779:
  v494 = (std::__shared_weak_count *)v1955[1];
  if (!v1955[1])
    goto LABEL_783;
  v495 = (unint64_t *)((char *)v1955[1] + 8);
  do
    v496 = __ldaxr(v495);
  while (__stlxr(v496 - 1, v495));
  if (!v496)
  {
    ((void (*)(std::__shared_weak_count *))v494->__on_zero_shared)(v494);
    std::__shared_weak_count::__release_weak(v494);
    if ((SHIBYTE(v1994[2]) & 0x80000000) == 0)
    {
LABEL_784:
      if ((SHIBYTE(v2007[2]) & 0x80000000) == 0)
        goto LABEL_785;
LABEL_789:
      operator delete(v2007[0]);
      if (v442)
        goto LABEL_791;
      goto LABEL_790;
    }
  }
  else
  {
LABEL_783:
    if ((SHIBYTE(v1994[2]) & 0x80000000) == 0)
      goto LABEL_784;
  }
  operator delete(v1994[0]);
  if (SHIBYTE(v2007[2]) < 0)
    goto LABEL_789;
LABEL_785:
  if (v442)
    goto LABEL_791;
LABEL_790:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_791:
  v498 = *(void **)v4;
  v497 = *(unint64_t **)(v4 + 8);
  if (v497)
  {
    v499 = v497 + 1;
    do
      v500 = __ldxr(v499);
    while (__stxr(v500 + 1, v499));
  }
  v501 = *v2;
  v502 = (unint64_t *)v2[1];
  if (*v2)
    v503 = *v2 + 504;
  else
    v503 = 0;
  v1690 = (std::__shared_weak_count *)v2[1];
  if (v502)
  {
    v504 = v502 + 1;
    do
      v505 = __ldxr(v504);
    while (__stxr(v505 + 1, v504));
  }
  if (*(char *)(v503 + 31) < 0)
  {
    sub_223197FA4(v1994, *(void **)(v503 + 8), *(_QWORD *)(v503 + 16));
  }
  else
  {
    v506 = *(_OWORD *)(v503 + 8);
    v1994[2] = *(void **)(v503 + 24);
    *(_OWORD *)v1994 = v506;
  }
  if (*(char *)(v501 + 559) < 0)
  {
    sub_223197FA4(v1981, *(void **)(v501 + 536), *(_QWORD *)(v501 + 544));
  }
  else
  {
    *(_OWORD *)v1981 = *(_OWORD *)(v501 + 536);
    v1981[2] = *(void **)(v501 + 552);
  }
  v1942[0] = v498;
  v1942[1] = v497;
  v1929[0] = (void *)v503;
  v1929[1] = v502;
  if (v502)
  {
    v507 = v502 + 1;
    do
      v508 = __ldxr(v507);
    while (__stxr(v508 + 1, v507));
  }
  if (SHIBYTE(v1994[2]) < 0)
  {
    sub_223197FA4(v2020, v1994[0], (unint64_t)v1994[1]);
  }
  else
  {
    *(_OWORD *)v2020 = *(_OWORD *)v1994;
    v2020[2] = v1994[2];
  }
  if (SHIBYTE(v1981[2]) < 0)
  {
    sub_223197FA4(v2007, v1981[0], (unint64_t)v1981[1]);
  }
  else
  {
    *(_OWORD *)v2007 = *(_OWORD *)v1981;
    v2007[2] = v1981[2];
  }
  *(void **)((char *)v1890 + 7) = *(void **)((char *)&v1994[1] + 7);
  v509 = v1994[0];
  v1890[0] = v1994[1];
  v510 = HIBYTE(v1994[2]);
  memset(v1994, 0, sizeof(v1994));
  v1903[0] = v1890[0];
  *(void **)((char *)v1903 + 7) = *(void **)((char *)v1890 + 7);
  *(void **)((char *)v1890 + 7) = 0;
  v1890[0] = 0;
  v1955[0] = v498;
  v1955[1] = v497;
  if (v497)
  {
    v511 = v497 + 1;
    do
      v512 = __ldxr(v511);
    while (__stxr(v512 + 1, v511));
  }
  v513 = (char *)operator new();
  v1916[0] = v1903[0];
  *(void **)((char *)v1916 + 7) = *(void **)((char *)v1903 + 7);
  v1903[0] = 0;
  *(void **)((char *)v1903 + 7) = 0;
  v514 = *(_OWORD *)v1955;
  v1955[0] = 0;
  v1955[1] = 0;
  v513[8] = 1;
  *((_QWORD *)v513 + 4) = 0;
  *((_QWORD *)v513 + 5) = 0;
  *(_QWORD *)v513 = &off_24EC4CB18;
  *((_QWORD *)v513 + 2) = &unk_24EC4CB90;
  *((_QWORD *)v513 + 3) = &unk_24EC4CBD0;
  v515 = v1916[0];
  *(void **)(v513 + 63) = *(void **)((char *)v1916 + 7);
  *((_QWORD *)v513 + 6) = v509;
  *((_QWORD *)v513 + 7) = v515;
  v513[71] = v510;
  v1916[0] = 0;
  *(void **)((char *)v1916 + 7) = 0;
  *(_OWORD *)(v513 + 72) = v514;
  v1968[1] = 0;
  v1968[0] = 0;
  v516 = (_QWORD *)operator new();
  *v516 = &off_24EC4CCB8;
  v516[1] = v503;
  v516[2] = v502;
  v1929[1] = 0;
  v1929[0] = 0;
  *((_QWORD *)v513 + 18) = 0;
  *((_QWORD *)v513 + 11) = v516;
  *((_QWORD *)v513 + 12) = v513 + 96;
  *((_QWORD *)v513 + 13) = v513 + 96;
  *((_QWORD *)v513 + 14) = 0;
  *((_QWORD *)v513 + 15) = v513 + 120;
  *((_QWORD *)v513 + 16) = v513 + 120;
  *((_QWORD *)v513 + 17) = 0;
  if (!*((_QWORD *)v513 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v517 = (std::__shared_weak_count *)operator new();
  v517->__shared_owners_ = 0;
  v518 = (unint64_t *)&v517->__shared_owners_;
  v517->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4D158;
  v517->__shared_weak_owners_ = 0;
  v517[1].__vftable = (std::__shared_weak_count_vtbl *)v513;
  v519 = (std::__shared_weak_count *)*((_QWORD *)v513 + 5);
  if (v519)
  {
    if (v519->__shared_owners_ != -1)
      goto LABEL_833;
    do
      v520 = __ldxr(v518);
    while (__stxr(v520 + 1, v518));
    v521 = (unint64_t *)&v517->__shared_weak_owners_;
    do
      v522 = __ldxr(v521);
    while (__stxr(v522 + 1, v521));
    *((_QWORD *)v513 + 4) = v513;
    *((_QWORD *)v513 + 5) = v517;
    std::__shared_weak_count::__release_weak(v519);
  }
  else
  {
    do
      v523 = __ldxr(v518);
    while (__stxr(v523 + 1, v518));
    v524 = (unint64_t *)&v517->__shared_weak_owners_;
    do
      v525 = __ldxr(v524);
    while (__stxr(v525 + 1, v524));
    *((_QWORD *)v513 + 4) = v513;
    *((_QWORD *)v513 + 5) = v517;
  }
  do
    v526 = __ldaxr(v518);
  while (__stlxr(v526 - 1, v518));
  if (!v526)
  {
    ((void (*)(std::__shared_weak_count *))v517->__on_zero_shared)(v517);
    std::__shared_weak_count::__release_weak(v517);
  }
LABEL_833:
  v527 = (std::__shared_weak_count *)v1968[1];
  if (v1968[1])
  {
    v528 = (unint64_t *)((char *)v1968[1] + 8);
    do
      v529 = __ldaxr(v528);
    while (__stlxr(v529 - 1, v528));
    if (!v529)
    {
      ((void (*)(std::__shared_weak_count *))v527->__on_zero_shared)(v527);
      std::__shared_weak_count::__release_weak(v527);
    }
  }
  v1968[0] = v513;
  v1968[1] = v517;
  v530 = (std::__shared_weak_count *)v1955[1];
  if (v1955[1])
  {
    v531 = (unint64_t *)((char *)v1955[1] + 8);
    do
      v532 = __ldaxr(v531);
    while (__stlxr(v532 - 1, v531));
    if (!v532)
    {
      ((void (*)(std::__shared_weak_count *))v530->__on_zero_shared)(v530);
      std::__shared_weak_count::__release_weak(v530);
    }
  }
  v533 = *(_OWORD *)v1942;
  v1942[0] = 0;
  v1942[1] = 0;
  *(_OWORD *)&v2033[1] = *(_OWORD *)v2020;
  v2033[0] = &off_24EC49100;
  v2034 = v2020[2];
  memset(v2020, 0, sizeof(v2020));
  v2035 = *(_OWORD *)v2007;
  v534 = v2007[2];
  memset(v2007, 0, sizeof(v2007));
  v2037 = v533;
  v1955[1] = 0;
  v1955[0] = 0;
  v535 = v1968[0];
  v536 = (char *)v1968[1];
  v2036 = v534;
  v2038 = *(_OWORD *)v1968;
  v1968[0] = 0;
  v1968[1] = 0;
  if (*((_QWORD *)&v2038 + 1))
  {
    v537 = (unint64_t *)(v536 + 16);
    do
      v538 = __ldxr(v537);
    while (__stxr(v538 + 1, v537));
  }
  v2039 = &off_24EC49130;
  v539 = (_QWORD *)operator new();
  *v539 = &off_24EC4D1A8;
  v539[1] = v535;
  v539[2] = v536;
  *(_QWORD *)&v2040 = v539;
  v541 = *((_QWORD *)&v2038 + 1);
  v540 = v2038;
  if (!*((_QWORD *)&v2038 + 1))
  {
    *((_QWORD *)&v2040 + 1) = v2038;
    v2041 = 0;
    if ((_QWORD)v2038)
      v545 = v2038 + 16;
    else
      v545 = 0;
    goto LABEL_863;
  }
  v542 = (unint64_t *)(*((_QWORD *)&v2038 + 1) + 16);
  do
    v543 = __ldxr(v542);
  while (__stxr(v543 + 1, v542));
  v544 = *((_QWORD *)&v2038 + 1);
  *((_QWORD *)&v2040 + 1) = v540;
  v2041 = v541;
  if ((_QWORD)v2038)
    v545 = v2038 + 16;
  else
    v545 = 0;
  if (!*((_QWORD *)&v2038 + 1))
  {
    v540 = v2038;
LABEL_863:
    v548 = 0;
    v2042 = &off_24EC455C0;
    v2043 = v545;
    goto LABEL_864;
  }
  v546 = (unint64_t *)(*((_QWORD *)&v2038 + 1) + 16);
  do
    v547 = __ldxr(v546);
  while (__stxr(v547 + 1, v546));
  v548 = *((_QWORD *)&v2038 + 1);
  v540 = v2038;
  v2042 = &off_24EC455C0;
  *(_QWORD *)&v2043 = v545;
  *((_QWORD *)&v2043 + 1) = v544;
  if (*((_QWORD *)&v2038 + 1))
  {
    v549 = (unint64_t *)(*((_QWORD *)&v2038 + 1) + 16);
    do
      v550 = __ldxr(v549);
    while (__stxr(v550 + 1, v549));
  }
LABEL_864:
  if (v540)
    v551 = v540 + 24;
  else
    v551 = 0;
  v2044 = &off_24EC2E850;
  *(_QWORD *)&v2045 = v551;
  *((_QWORD *)&v2045 + 1) = v548;
  if ((SHIBYTE(v2007[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v2020[2]) & 0x80000000) == 0)
      goto LABEL_869;
LABEL_872:
    operator delete(v2020[0]);
    v552 = (std::__shared_weak_count *)v1929[1];
    if (!v1929[1])
      goto LABEL_877;
    goto LABEL_873;
  }
  operator delete(v2007[0]);
  if (SHIBYTE(v2020[2]) < 0)
    goto LABEL_872;
LABEL_869:
  v552 = (std::__shared_weak_count *)v1929[1];
  if (!v1929[1])
    goto LABEL_877;
LABEL_873:
  v553 = (unint64_t *)&v552->__shared_owners_;
  do
    v554 = __ldaxr(v553);
  while (__stlxr(v554 - 1, v553));
  if (!v554)
  {
    ((void (*)(std::__shared_weak_count *))v552->__on_zero_shared)(v552);
    std::__shared_weak_count::__release_weak(v552);
  }
LABEL_877:
  v555 = (std::__shared_weak_count *)v1942[1];
  if (!v1942[1])
    goto LABEL_881;
  v556 = (unint64_t *)((char *)v1942[1] + 8);
  do
    v557 = __ldaxr(v556);
  while (__stlxr(v557 - 1, v556));
  if (!v557)
  {
    ((void (*)(std::__shared_weak_count *))v555->__on_zero_shared)(v555);
    std::__shared_weak_count::__release_weak(v555);
    if ((SHIBYTE(v1981[2]) & 0x80000000) == 0)
    {
LABEL_882:
      if ((SHIBYTE(v1994[2]) & 0x80000000) == 0)
        goto LABEL_883;
LABEL_887:
      operator delete(v1994[0]);
      if (v503)
        goto LABEL_889;
      goto LABEL_888;
    }
  }
  else
  {
LABEL_881:
    if ((SHIBYTE(v1981[2]) & 0x80000000) == 0)
      goto LABEL_882;
  }
  operator delete(v1981[0]);
  if (SHIBYTE(v1994[2]) < 0)
    goto LABEL_887;
LABEL_883:
  if (v503)
    goto LABEL_889;
LABEL_888:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_889:
  v559 = *(void **)v4;
  v558 = *(unint64_t **)(v4 + 8);
  if (v558)
  {
    v560 = v558 + 1;
    do
      v561 = __ldxr(v560);
    while (__stxr(v561 + 1, v560));
  }
  v562 = *v2;
  v563 = (unint64_t *)v2[1];
  if (*v2)
    v564 = *v2 + 560;
  else
    v564 = 0;
  v1689 = (std::__shared_weak_count *)v2[1];
  if (v563)
  {
    v565 = v563 + 1;
    do
      v566 = __ldxr(v565);
    while (__stxr(v566 + 1, v565));
  }
  if (*(char *)(v564 + 31) < 0)
  {
    sub_223197FA4(v1981, *(void **)(v564 + 8), *(_QWORD *)(v564 + 16));
  }
  else
  {
    v567 = *(_OWORD *)(v564 + 8);
    v1981[2] = *(void **)(v564 + 24);
    *(_OWORD *)v1981 = v567;
  }
  if (*(char *)(v562 + 615) < 0)
  {
    sub_223197FA4(v1968, *(void **)(v562 + 592), *(_QWORD *)(v562 + 600));
  }
  else
  {
    *(_OWORD *)v1968 = *(_OWORD *)(v562 + 592);
    v1968[2] = *(void **)(v562 + 608);
  }
  v1929[0] = v559;
  v1929[1] = v558;
  v1916[0] = (void *)v564;
  v1916[1] = v563;
  if (v563)
  {
    v568 = v563 + 1;
    do
      v569 = __ldxr(v568);
    while (__stxr(v569 + 1, v568));
  }
  if (SHIBYTE(v1981[2]) < 0)
  {
    sub_223197FA4(v2007, v1981[0], (unint64_t)v1981[1]);
  }
  else
  {
    *(_OWORD *)v2007 = *(_OWORD *)v1981;
    v2007[2] = v1981[2];
  }
  if (SHIBYTE(v1968[2]) < 0)
  {
    sub_223197FA4(v1994, v1968[0], (unint64_t)v1968[1]);
  }
  else
  {
    *(_OWORD *)v1994 = *(_OWORD *)v1968;
    v1994[2] = v1968[2];
  }
  *(void **)((char *)v1877 + 7) = *(void **)((char *)&v1981[1] + 7);
  v570 = v1981[0];
  v1877[0] = v1981[1];
  v571 = HIBYTE(v1981[2]);
  memset(v1981, 0, sizeof(v1981));
  v1890[0] = v1877[0];
  *(void **)((char *)v1890 + 7) = *(void **)((char *)v1877 + 7);
  *(void **)((char *)v1877 + 7) = 0;
  v1877[0] = 0;
  v1942[0] = v559;
  v1942[1] = v558;
  if (v558)
  {
    v572 = v558 + 1;
    do
      v573 = __ldxr(v572);
    while (__stxr(v573 + 1, v572));
  }
  v574 = (char *)operator new();
  v1903[0] = v1890[0];
  *(void **)((char *)v1903 + 7) = *(void **)((char *)v1890 + 7);
  v1890[0] = 0;
  *(void **)((char *)v1890 + 7) = 0;
  v575 = *(_OWORD *)v1942;
  v1942[0] = 0;
  v1942[1] = 0;
  v574[8] = 1;
  *((_QWORD *)v574 + 4) = 0;
  *((_QWORD *)v574 + 5) = 0;
  *(_QWORD *)v574 = &off_24EC4D220;
  *((_QWORD *)v574 + 2) = &unk_24EC4D298;
  *((_QWORD *)v574 + 3) = &unk_24EC4D2D8;
  v576 = v1903[0];
  *(void **)(v574 + 63) = *(void **)((char *)v1903 + 7);
  *((_QWORD *)v574 + 6) = v570;
  *((_QWORD *)v574 + 7) = v576;
  v574[71] = v571;
  v1903[0] = 0;
  *(void **)((char *)v1903 + 7) = 0;
  *(_OWORD *)(v574 + 72) = v575;
  v1955[1] = 0;
  v1955[0] = 0;
  v577 = (_QWORD *)operator new();
  *v577 = &off_24EC4D3C0;
  v577[1] = v564;
  v577[2] = v563;
  v1916[1] = 0;
  v1916[0] = 0;
  *((_QWORD *)v574 + 18) = 0;
  *((_QWORD *)v574 + 11) = v577;
  *((_QWORD *)v574 + 12) = v574 + 96;
  *((_QWORD *)v574 + 13) = v574 + 96;
  *((_QWORD *)v574 + 14) = 0;
  *((_QWORD *)v574 + 15) = v574 + 120;
  *((_QWORD *)v574 + 16) = v574 + 120;
  *((_QWORD *)v574 + 17) = 0;
  if (!*((_QWORD *)v574 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v578 = (std::__shared_weak_count *)operator new();
  v578->__shared_owners_ = 0;
  v579 = (unint64_t *)&v578->__shared_owners_;
  v578->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4D860;
  v578->__shared_weak_owners_ = 0;
  v578[1].__vftable = (std::__shared_weak_count_vtbl *)v574;
  v580 = (std::__shared_weak_count *)*((_QWORD *)v574 + 5);
  if (v580)
  {
    if (v580->__shared_owners_ != -1)
      goto LABEL_931;
    do
      v581 = __ldxr(v579);
    while (__stxr(v581 + 1, v579));
    v582 = (unint64_t *)&v578->__shared_weak_owners_;
    do
      v583 = __ldxr(v582);
    while (__stxr(v583 + 1, v582));
    *((_QWORD *)v574 + 4) = v574;
    *((_QWORD *)v574 + 5) = v578;
    std::__shared_weak_count::__release_weak(v580);
  }
  else
  {
    do
      v584 = __ldxr(v579);
    while (__stxr(v584 + 1, v579));
    v585 = (unint64_t *)&v578->__shared_weak_owners_;
    do
      v586 = __ldxr(v585);
    while (__stxr(v586 + 1, v585));
    *((_QWORD *)v574 + 4) = v574;
    *((_QWORD *)v574 + 5) = v578;
  }
  do
    v587 = __ldaxr(v579);
  while (__stlxr(v587 - 1, v579));
  if (!v587)
  {
    ((void (*)(std::__shared_weak_count *))v578->__on_zero_shared)(v578);
    std::__shared_weak_count::__release_weak(v578);
  }
LABEL_931:
  v588 = (std::__shared_weak_count *)v1955[1];
  if (v1955[1])
  {
    v589 = (unint64_t *)((char *)v1955[1] + 8);
    do
      v590 = __ldaxr(v589);
    while (__stlxr(v590 - 1, v589));
    if (!v590)
    {
      ((void (*)(std::__shared_weak_count *))v588->__on_zero_shared)(v588);
      std::__shared_weak_count::__release_weak(v588);
    }
  }
  v1955[0] = v574;
  v1955[1] = v578;
  v591 = (std::__shared_weak_count *)v1942[1];
  if (v1942[1])
  {
    v592 = (unint64_t *)((char *)v1942[1] + 8);
    do
      v593 = __ldaxr(v592);
    while (__stlxr(v593 - 1, v592));
    if (!v593)
    {
      ((void (*)(std::__shared_weak_count *))v591->__on_zero_shared)(v591);
      std::__shared_weak_count::__release_weak(v591);
    }
  }
  v594 = *(_OWORD *)v1929;
  v1929[0] = 0;
  v1929[1] = 0;
  *(_OWORD *)&v2020[1] = *(_OWORD *)v2007;
  v2020[0] = &off_24EC49098;
  v2021 = v2007[2];
  memset(v2007, 0, sizeof(v2007));
  v2022 = *(_OWORD *)v1994;
  v595 = v1994[2];
  memset(v1994, 0, sizeof(v1994));
  v2024 = v594;
  v1942[1] = 0;
  v1942[0] = 0;
  v596 = v1955[0];
  v597 = (char *)v1955[1];
  v2023 = v595;
  v2025 = *(_OWORD *)v1955;
  v1955[0] = 0;
  v1955[1] = 0;
  if (*((_QWORD *)&v2025 + 1))
  {
    v598 = (unint64_t *)(v597 + 16);
    do
      v599 = __ldxr(v598);
    while (__stxr(v599 + 1, v598));
  }
  v2026 = &off_24EC490C8;
  v600 = (_QWORD *)operator new();
  *v600 = &off_24EC4D8B0;
  v600[1] = v596;
  v600[2] = v597;
  *(_QWORD *)&v2027 = v600;
  v602 = *((_QWORD *)&v2025 + 1);
  v601 = v2025;
  if (!*((_QWORD *)&v2025 + 1))
  {
    *((_QWORD *)&v2027 + 1) = v2025;
    v2028 = 0;
    if ((_QWORD)v2025)
      v606 = v2025 + 16;
    else
      v606 = 0;
    goto LABEL_961;
  }
  v603 = (unint64_t *)(*((_QWORD *)&v2025 + 1) + 16);
  do
    v604 = __ldxr(v603);
  while (__stxr(v604 + 1, v603));
  v605 = *((_QWORD *)&v2025 + 1);
  *((_QWORD *)&v2027 + 1) = v601;
  v2028 = v602;
  if ((_QWORD)v2025)
    v606 = v2025 + 16;
  else
    v606 = 0;
  if (!*((_QWORD *)&v2025 + 1))
  {
    v601 = v2025;
LABEL_961:
    v609 = 0;
    v2029 = &off_24EC45628;
    v2030 = v606;
    goto LABEL_962;
  }
  v607 = (unint64_t *)(*((_QWORD *)&v2025 + 1) + 16);
  do
    v608 = __ldxr(v607);
  while (__stxr(v608 + 1, v607));
  v609 = *((_QWORD *)&v2025 + 1);
  v601 = v2025;
  v2029 = &off_24EC45628;
  *(_QWORD *)&v2030 = v606;
  *((_QWORD *)&v2030 + 1) = v605;
  if (*((_QWORD *)&v2025 + 1))
  {
    v610 = (unint64_t *)(*((_QWORD *)&v2025 + 1) + 16);
    do
      v611 = __ldxr(v610);
    while (__stxr(v611 + 1, v610));
  }
LABEL_962:
  if (v601)
    v612 = v601 + 24;
  else
    v612 = 0;
  v2031 = &off_24EC2E850;
  *(_QWORD *)&v2032 = v612;
  *((_QWORD *)&v2032 + 1) = v609;
  if ((SHIBYTE(v1994[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v2007[2]) & 0x80000000) == 0)
      goto LABEL_967;
LABEL_970:
    operator delete(v2007[0]);
    v613 = (std::__shared_weak_count *)v1916[1];
    if (!v1916[1])
      goto LABEL_975;
    goto LABEL_971;
  }
  operator delete(v1994[0]);
  if (SHIBYTE(v2007[2]) < 0)
    goto LABEL_970;
LABEL_967:
  v613 = (std::__shared_weak_count *)v1916[1];
  if (!v1916[1])
    goto LABEL_975;
LABEL_971:
  v614 = (unint64_t *)&v613->__shared_owners_;
  do
    v615 = __ldaxr(v614);
  while (__stlxr(v615 - 1, v614));
  if (!v615)
  {
    ((void (*)(std::__shared_weak_count *))v613->__on_zero_shared)(v613);
    std::__shared_weak_count::__release_weak(v613);
  }
LABEL_975:
  v616 = (std::__shared_weak_count *)v1929[1];
  if (!v1929[1])
    goto LABEL_979;
  v617 = (unint64_t *)((char *)v1929[1] + 8);
  do
    v618 = __ldaxr(v617);
  while (__stlxr(v618 - 1, v617));
  if (!v618)
  {
    ((void (*)(std::__shared_weak_count *))v616->__on_zero_shared)(v616);
    std::__shared_weak_count::__release_weak(v616);
    if ((SHIBYTE(v1968[2]) & 0x80000000) == 0)
    {
LABEL_980:
      if ((SHIBYTE(v1981[2]) & 0x80000000) == 0)
        goto LABEL_981;
LABEL_985:
      operator delete(v1981[0]);
      if (v564)
        goto LABEL_987;
      goto LABEL_986;
    }
  }
  else
  {
LABEL_979:
    if ((SHIBYTE(v1968[2]) & 0x80000000) == 0)
      goto LABEL_980;
  }
  operator delete(v1968[0]);
  if (SHIBYTE(v1981[2]) < 0)
    goto LABEL_985;
LABEL_981:
  if (v564)
    goto LABEL_987;
LABEL_986:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_987:
  v620 = *(void **)v4;
  v619 = *(unint64_t **)(v4 + 8);
  if (v619)
  {
    v621 = v619 + 1;
    do
      v622 = __ldxr(v621);
    while (__stxr(v622 + 1, v621));
  }
  v623 = *v2;
  v624 = (unint64_t *)v2[1];
  if (*v2)
    v625 = *v2 + 616;
  else
    v625 = 0;
  v1688 = (std::__shared_weak_count *)v2[1];
  if (v624)
  {
    v626 = v624 + 1;
    do
      v627 = __ldxr(v626);
    while (__stxr(v627 + 1, v626));
  }
  if (*(char *)(v625 + 31) < 0)
  {
    sub_223197FA4(v1968, *(void **)(v625 + 8), *(_QWORD *)(v625 + 16));
  }
  else
  {
    v628 = *(_OWORD *)(v625 + 8);
    v1968[2] = *(void **)(v625 + 24);
    *(_OWORD *)v1968 = v628;
  }
  if (*(char *)(v623 + 671) < 0)
  {
    sub_223197FA4(v1955, *(void **)(v623 + 648), *(_QWORD *)(v623 + 656));
  }
  else
  {
    *(_OWORD *)v1955 = *(_OWORD *)(v623 + 648);
    v1955[2] = *(void **)(v623 + 664);
  }
  v1916[0] = v620;
  v1916[1] = v619;
  v1903[0] = (void *)v625;
  v1903[1] = v624;
  if (v624)
  {
    v629 = v624 + 1;
    do
      v630 = __ldxr(v629);
    while (__stxr(v630 + 1, v629));
  }
  if (SHIBYTE(v1968[2]) < 0)
  {
    sub_223197FA4(v1994, v1968[0], (unint64_t)v1968[1]);
  }
  else
  {
    *(_OWORD *)v1994 = *(_OWORD *)v1968;
    v1994[2] = v1968[2];
  }
  if (SHIBYTE(v1955[2]) < 0)
  {
    sub_223197FA4(v1981, v1955[0], (unint64_t)v1955[1]);
  }
  else
  {
    *(_OWORD *)v1981 = *(_OWORD *)v1955;
    v1981[2] = v1955[2];
  }
  *(void **)((char *)v1864 + 7) = *(void **)((char *)&v1968[1] + 7);
  v631 = v1968[0];
  v1864[0] = v1968[1];
  v632 = HIBYTE(v1968[2]);
  memset(v1968, 0, sizeof(v1968));
  v1877[0] = v1864[0];
  *(void **)((char *)v1877 + 7) = *(void **)((char *)v1864 + 7);
  *(void **)((char *)v1864 + 7) = 0;
  v1864[0] = 0;
  v1929[0] = v620;
  v1929[1] = v619;
  if (v619)
  {
    v633 = v619 + 1;
    do
      v634 = __ldxr(v633);
    while (__stxr(v634 + 1, v633));
  }
  v635 = (char *)operator new();
  v1890[0] = v1877[0];
  *(void **)((char *)v1890 + 7) = *(void **)((char *)v1877 + 7);
  v1877[0] = 0;
  *(void **)((char *)v1877 + 7) = 0;
  v636 = *(_OWORD *)v1929;
  v1929[0] = 0;
  v1929[1] = 0;
  v635[8] = 1;
  *((_QWORD *)v635 + 4) = 0;
  *((_QWORD *)v635 + 5) = 0;
  *(_QWORD *)v635 = &off_24EC4D928;
  *((_QWORD *)v635 + 2) = &unk_24EC4D9A0;
  *((_QWORD *)v635 + 3) = &unk_24EC4D9E0;
  v637 = v1890[0];
  *(void **)(v635 + 63) = *(void **)((char *)v1890 + 7);
  *((_QWORD *)v635 + 6) = v631;
  *((_QWORD *)v635 + 7) = v637;
  v635[71] = v632;
  v1890[0] = 0;
  *(void **)((char *)v1890 + 7) = 0;
  *(_OWORD *)(v635 + 72) = v636;
  v1942[1] = 0;
  v1942[0] = 0;
  v638 = (_QWORD *)operator new();
  *v638 = &off_24EC4DAC8;
  v638[1] = v625;
  v638[2] = v624;
  v1903[1] = 0;
  v1903[0] = 0;
  *((_QWORD *)v635 + 18) = 0;
  *((_QWORD *)v635 + 11) = v638;
  *((_QWORD *)v635 + 12) = v635 + 96;
  *((_QWORD *)v635 + 13) = v635 + 96;
  *((_QWORD *)v635 + 14) = 0;
  *((_QWORD *)v635 + 15) = v635 + 120;
  *((_QWORD *)v635 + 16) = v635 + 120;
  *((_QWORD *)v635 + 17) = 0;
  if (!*((_QWORD *)v635 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v639 = (std::__shared_weak_count *)operator new();
  v639->__shared_owners_ = 0;
  v640 = (unint64_t *)&v639->__shared_owners_;
  v639->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4DF68;
  v639->__shared_weak_owners_ = 0;
  v639[1].__vftable = (std::__shared_weak_count_vtbl *)v635;
  v641 = (std::__shared_weak_count *)*((_QWORD *)v635 + 5);
  if (v641)
  {
    if (v641->__shared_owners_ != -1)
      goto LABEL_1029;
    do
      v642 = __ldxr(v640);
    while (__stxr(v642 + 1, v640));
    v643 = (unint64_t *)&v639->__shared_weak_owners_;
    do
      v644 = __ldxr(v643);
    while (__stxr(v644 + 1, v643));
    *((_QWORD *)v635 + 4) = v635;
    *((_QWORD *)v635 + 5) = v639;
    std::__shared_weak_count::__release_weak(v641);
  }
  else
  {
    do
      v645 = __ldxr(v640);
    while (__stxr(v645 + 1, v640));
    v646 = (unint64_t *)&v639->__shared_weak_owners_;
    do
      v647 = __ldxr(v646);
    while (__stxr(v647 + 1, v646));
    *((_QWORD *)v635 + 4) = v635;
    *((_QWORD *)v635 + 5) = v639;
  }
  do
    v648 = __ldaxr(v640);
  while (__stlxr(v648 - 1, v640));
  if (!v648)
  {
    ((void (*)(std::__shared_weak_count *))v639->__on_zero_shared)(v639);
    std::__shared_weak_count::__release_weak(v639);
  }
LABEL_1029:
  v649 = (std::__shared_weak_count *)v1942[1];
  if (v1942[1])
  {
    v650 = (unint64_t *)((char *)v1942[1] + 8);
    do
      v651 = __ldaxr(v650);
    while (__stlxr(v651 - 1, v650));
    if (!v651)
    {
      ((void (*)(std::__shared_weak_count *))v649->__on_zero_shared)(v649);
      std::__shared_weak_count::__release_weak(v649);
    }
  }
  v1942[0] = v635;
  v1942[1] = v639;
  v652 = (std::__shared_weak_count *)v1929[1];
  if (v1929[1])
  {
    v653 = (unint64_t *)((char *)v1929[1] + 8);
    do
      v654 = __ldaxr(v653);
    while (__stlxr(v654 - 1, v653));
    if (!v654)
    {
      ((void (*)(std::__shared_weak_count *))v652->__on_zero_shared)(v652);
      std::__shared_weak_count::__release_weak(v652);
    }
  }
  v655 = *(_OWORD *)v1916;
  v1916[0] = 0;
  v1916[1] = 0;
  *(_OWORD *)&v2007[1] = *(_OWORD *)v1994;
  v2007[0] = &off_24EC49068;
  v2008 = v1994[2];
  memset(v1994, 0, sizeof(v1994));
  v2009 = *(_OWORD *)v1981;
  v656 = v1981[2];
  memset(v1981, 0, sizeof(v1981));
  v2011 = v655;
  v1929[1] = 0;
  v1929[0] = 0;
  v657 = v1942[0];
  v658 = (char *)v1942[1];
  v2010 = v656;
  v2012 = *(_OWORD *)v1942;
  v1942[0] = 0;
  v1942[1] = 0;
  if (*((_QWORD *)&v2012 + 1))
  {
    v659 = (unint64_t *)(v658 + 16);
    do
      v660 = __ldxr(v659);
    while (__stxr(v660 + 1, v659));
  }
  v2013 = &off_24EC2C458;
  v661 = (_QWORD *)operator new();
  *v661 = &off_24EC4DFB8;
  v661[1] = v657;
  v661[2] = v658;
  *(_QWORD *)&v2014 = v661;
  v663 = *((_QWORD *)&v2012 + 1);
  v662 = v2012;
  if (!*((_QWORD *)&v2012 + 1))
  {
    *((_QWORD *)&v2014 + 1) = v2012;
    v2015 = 0;
    if ((_QWORD)v2012)
      v667 = v2012 + 16;
    else
      v667 = 0;
    goto LABEL_1059;
  }
  v664 = (unint64_t *)(*((_QWORD *)&v2012 + 1) + 16);
  do
    v665 = __ldxr(v664);
  while (__stxr(v665 + 1, v664));
  v666 = *((_QWORD *)&v2012 + 1);
  *((_QWORD *)&v2014 + 1) = v662;
  v2015 = v663;
  if ((_QWORD)v2012)
    v667 = v2012 + 16;
  else
    v667 = 0;
  if (!*((_QWORD *)&v2012 + 1))
  {
    v662 = v2012;
LABEL_1059:
    v670 = 0;
    v2016 = &off_24EC2E888;
    v2017 = v667;
    goto LABEL_1060;
  }
  v668 = (unint64_t *)(*((_QWORD *)&v2012 + 1) + 16);
  do
    v669 = __ldxr(v668);
  while (__stxr(v669 + 1, v668));
  v670 = *((_QWORD *)&v2012 + 1);
  v662 = v2012;
  v2016 = &off_24EC2E888;
  *(_QWORD *)&v2017 = v667;
  *((_QWORD *)&v2017 + 1) = v666;
  if (*((_QWORD *)&v2012 + 1))
  {
    v671 = (unint64_t *)(*((_QWORD *)&v2012 + 1) + 16);
    do
      v672 = __ldxr(v671);
    while (__stxr(v672 + 1, v671));
  }
LABEL_1060:
  if (v662)
    v673 = v662 + 24;
  else
    v673 = 0;
  v2018 = &off_24EC2E850;
  *(_QWORD *)&v2019 = v673;
  *((_QWORD *)&v2019 + 1) = v670;
  if ((SHIBYTE(v1981[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1994[2]) & 0x80000000) == 0)
      goto LABEL_1065;
LABEL_1068:
    operator delete(v1994[0]);
    v674 = (std::__shared_weak_count *)v1903[1];
    if (!v1903[1])
      goto LABEL_1073;
    goto LABEL_1069;
  }
  operator delete(v1981[0]);
  if (SHIBYTE(v1994[2]) < 0)
    goto LABEL_1068;
LABEL_1065:
  v674 = (std::__shared_weak_count *)v1903[1];
  if (!v1903[1])
    goto LABEL_1073;
LABEL_1069:
  v675 = (unint64_t *)&v674->__shared_owners_;
  do
    v676 = __ldaxr(v675);
  while (__stlxr(v676 - 1, v675));
  if (!v676)
  {
    ((void (*)(std::__shared_weak_count *))v674->__on_zero_shared)(v674);
    std::__shared_weak_count::__release_weak(v674);
  }
LABEL_1073:
  v677 = (std::__shared_weak_count *)v1916[1];
  if (!v1916[1])
    goto LABEL_1077;
  v678 = (unint64_t *)((char *)v1916[1] + 8);
  do
    v679 = __ldaxr(v678);
  while (__stlxr(v679 - 1, v678));
  if (!v679)
  {
    ((void (*)(std::__shared_weak_count *))v677->__on_zero_shared)(v677);
    std::__shared_weak_count::__release_weak(v677);
    if ((SHIBYTE(v1955[2]) & 0x80000000) == 0)
    {
LABEL_1078:
      if ((SHIBYTE(v1968[2]) & 0x80000000) == 0)
        goto LABEL_1079;
LABEL_1083:
      operator delete(v1968[0]);
      if (v625)
        goto LABEL_1085;
      goto LABEL_1084;
    }
  }
  else
  {
LABEL_1077:
    if ((SHIBYTE(v1955[2]) & 0x80000000) == 0)
      goto LABEL_1078;
  }
  operator delete(v1955[0]);
  if (SHIBYTE(v1968[2]) < 0)
    goto LABEL_1083;
LABEL_1079:
  if (v625)
    goto LABEL_1085;
LABEL_1084:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_1085:
  v681 = *(void **)v4;
  v680 = *(unint64_t **)(v4 + 8);
  if (v680)
  {
    v682 = v680 + 1;
    do
      v683 = __ldxr(v682);
    while (__stxr(v683 + 1, v682));
  }
  v684 = *v2;
  v685 = (unint64_t *)v2[1];
  if (*v2)
    v686 = *v2 + 672;
  else
    v686 = 0;
  v1687 = (std::__shared_weak_count *)v2[1];
  if (v685)
  {
    v687 = v685 + 1;
    do
      v688 = __ldxr(v687);
    while (__stxr(v688 + 1, v687));
  }
  if (*(char *)(v686 + 31) < 0)
  {
    sub_223197FA4(v1955, *(void **)(v686 + 8), *(_QWORD *)(v686 + 16));
  }
  else
  {
    v689 = *(_OWORD *)(v686 + 8);
    v1955[2] = *(void **)(v686 + 24);
    *(_OWORD *)v1955 = v689;
  }
  if (*(char *)(v684 + 727) < 0)
  {
    sub_223197FA4(v1942, *(void **)(v684 + 704), *(_QWORD *)(v684 + 712));
  }
  else
  {
    *(_OWORD *)v1942 = *(_OWORD *)(v684 + 704);
    v1942[2] = *(void **)(v684 + 720);
  }
  v1903[0] = v681;
  v1903[1] = v680;
  v1890[0] = (void *)v686;
  v1890[1] = v685;
  if (v685)
  {
    v690 = v685 + 1;
    do
      v691 = __ldxr(v690);
    while (__stxr(v691 + 1, v690));
  }
  if (SHIBYTE(v1955[2]) < 0)
  {
    sub_223197FA4(v1981, v1955[0], (unint64_t)v1955[1]);
  }
  else
  {
    *(_OWORD *)v1981 = *(_OWORD *)v1955;
    v1981[2] = v1955[2];
  }
  if (SHIBYTE(v1942[2]) < 0)
  {
    sub_223197FA4(v1968, v1942[0], (unint64_t)v1942[1]);
  }
  else
  {
    *(_OWORD *)v1968 = *(_OWORD *)v1942;
    v1968[2] = v1942[2];
  }
  *(void **)((char *)v1851 + 7) = *(void **)((char *)&v1955[1] + 7);
  v692 = v1955[0];
  v1851[0] = v1955[1];
  v693 = HIBYTE(v1955[2]);
  memset(v1955, 0, sizeof(v1955));
  v1864[0] = v1851[0];
  *(void **)((char *)v1864 + 7) = *(void **)((char *)v1851 + 7);
  *(void **)((char *)v1851 + 7) = 0;
  v1851[0] = 0;
  v1916[0] = v681;
  v1916[1] = v680;
  if (v680)
  {
    v694 = v680 + 1;
    do
      v695 = __ldxr(v694);
    while (__stxr(v695 + 1, v694));
  }
  v696 = (char *)operator new();
  v1877[0] = v1864[0];
  *(void **)((char *)v1877 + 7) = *(void **)((char *)v1864 + 7);
  v1864[0] = 0;
  *(void **)((char *)v1864 + 7) = 0;
  v697 = *(_OWORD *)v1916;
  v1916[0] = 0;
  v1916[1] = 0;
  v696[8] = 1;
  *((_QWORD *)v696 + 4) = 0;
  *((_QWORD *)v696 + 5) = 0;
  *(_QWORD *)v696 = &off_24EC4E020;
  *((_QWORD *)v696 + 2) = &unk_24EC4E098;
  *((_QWORD *)v696 + 3) = &unk_24EC4E0D8;
  v698 = v1877[0];
  *(void **)(v696 + 63) = *(void **)((char *)v1877 + 7);
  *((_QWORD *)v696 + 6) = v692;
  *((_QWORD *)v696 + 7) = v698;
  v696[71] = v693;
  v1877[0] = 0;
  *(void **)((char *)v1877 + 7) = 0;
  *(_OWORD *)(v696 + 72) = v697;
  v1929[1] = 0;
  v1929[0] = 0;
  v699 = (_QWORD *)operator new();
  *v699 = &off_24EC4E1C0;
  v699[1] = v686;
  v699[2] = v685;
  v1890[1] = 0;
  v1890[0] = 0;
  *((_QWORD *)v696 + 18) = 0;
  *((_QWORD *)v696 + 11) = v699;
  *((_QWORD *)v696 + 12) = v696 + 96;
  *((_QWORD *)v696 + 13) = v696 + 96;
  *((_QWORD *)v696 + 14) = 0;
  *((_QWORD *)v696 + 15) = v696 + 120;
  *((_QWORD *)v696 + 16) = v696 + 120;
  *((_QWORD *)v696 + 17) = 0;
  if (!*((_QWORD *)v696 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v700 = (std::__shared_weak_count *)operator new();
  v700->__shared_owners_ = 0;
  v701 = (unint64_t *)&v700->__shared_owners_;
  v700->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4E660;
  v700->__shared_weak_owners_ = 0;
  v700[1].__vftable = (std::__shared_weak_count_vtbl *)v696;
  v702 = (std::__shared_weak_count *)*((_QWORD *)v696 + 5);
  if (v702)
  {
    if (v702->__shared_owners_ != -1)
      goto LABEL_1127;
    do
      v703 = __ldxr(v701);
    while (__stxr(v703 + 1, v701));
    v704 = (unint64_t *)&v700->__shared_weak_owners_;
    do
      v705 = __ldxr(v704);
    while (__stxr(v705 + 1, v704));
    *((_QWORD *)v696 + 4) = v696;
    *((_QWORD *)v696 + 5) = v700;
    std::__shared_weak_count::__release_weak(v702);
  }
  else
  {
    do
      v706 = __ldxr(v701);
    while (__stxr(v706 + 1, v701));
    v707 = (unint64_t *)&v700->__shared_weak_owners_;
    do
      v708 = __ldxr(v707);
    while (__stxr(v708 + 1, v707));
    *((_QWORD *)v696 + 4) = v696;
    *((_QWORD *)v696 + 5) = v700;
  }
  do
    v709 = __ldaxr(v701);
  while (__stlxr(v709 - 1, v701));
  if (!v709)
  {
    ((void (*)(std::__shared_weak_count *))v700->__on_zero_shared)(v700);
    std::__shared_weak_count::__release_weak(v700);
  }
LABEL_1127:
  v710 = (std::__shared_weak_count *)v1929[1];
  if (v1929[1])
  {
    v711 = (unint64_t *)((char *)v1929[1] + 8);
    do
      v712 = __ldaxr(v711);
    while (__stlxr(v712 - 1, v711));
    if (!v712)
    {
      ((void (*)(std::__shared_weak_count *))v710->__on_zero_shared)(v710);
      std::__shared_weak_count::__release_weak(v710);
    }
  }
  v1929[0] = v696;
  v1929[1] = v700;
  v713 = (std::__shared_weak_count *)v1916[1];
  if (v1916[1])
  {
    v714 = (unint64_t *)((char *)v1916[1] + 8);
    do
      v715 = __ldaxr(v714);
    while (__stlxr(v715 - 1, v714));
    if (!v715)
    {
      ((void (*)(std::__shared_weak_count *))v713->__on_zero_shared)(v713);
      std::__shared_weak_count::__release_weak(v713);
    }
  }
  v716 = *(_OWORD *)v1903;
  v1903[0] = 0;
  v1903[1] = 0;
  *(_OWORD *)&v1994[1] = *(_OWORD *)v1981;
  v1994[0] = &off_24EC49038;
  v1995 = v1981[2];
  memset(v1981, 0, sizeof(v1981));
  v1996 = *(_OWORD *)v1968;
  v717 = v1968[2];
  memset(v1968, 0, sizeof(v1968));
  v1998 = v716;
  v1916[1] = 0;
  v1916[0] = 0;
  v718 = v1929[0];
  v719 = (char *)v1929[1];
  v1997 = v717;
  v1999 = *(_OWORD *)v1929;
  v1929[0] = 0;
  v1929[1] = 0;
  if (*((_QWORD *)&v1999 + 1))
  {
    v720 = (unint64_t *)(v719 + 16);
    do
      v721 = __ldxr(v720);
    while (__stxr(v721 + 1, v720));
  }
  v2000 = &off_24EC2B310;
  v722 = (_QWORD *)operator new();
  *v722 = &off_24EC4E6B0;
  v722[1] = v718;
  v722[2] = v719;
  *(_QWORD *)&v2001 = v722;
  v724 = *((_QWORD *)&v1999 + 1);
  v723 = v1999;
  if (!*((_QWORD *)&v1999 + 1))
  {
    *((_QWORD *)&v2001 + 1) = v1999;
    v2002 = 0;
    if ((_QWORD)v1999)
      v728 = v1999 + 16;
    else
      v728 = 0;
    goto LABEL_1157;
  }
  v725 = (unint64_t *)(*((_QWORD *)&v1999 + 1) + 16);
  do
    v726 = __ldxr(v725);
  while (__stxr(v726 + 1, v725));
  v727 = *((_QWORD *)&v1999 + 1);
  *((_QWORD *)&v2001 + 1) = v723;
  v2002 = v724;
  if ((_QWORD)v1999)
    v728 = v1999 + 16;
  else
    v728 = 0;
  if (!*((_QWORD *)&v1999 + 1))
  {
    v723 = v1999;
LABEL_1157:
    v731 = 0;
    v2003 = &off_24EC45488;
    v2004 = v728;
    goto LABEL_1158;
  }
  v729 = (unint64_t *)(*((_QWORD *)&v1999 + 1) + 16);
  do
    v730 = __ldxr(v729);
  while (__stxr(v730 + 1, v729));
  v731 = *((_QWORD *)&v1999 + 1);
  v723 = v1999;
  v2003 = &off_24EC45488;
  *(_QWORD *)&v2004 = v728;
  *((_QWORD *)&v2004 + 1) = v727;
  if (*((_QWORD *)&v1999 + 1))
  {
    v732 = (unint64_t *)(*((_QWORD *)&v1999 + 1) + 16);
    do
      v733 = __ldxr(v732);
    while (__stxr(v733 + 1, v732));
  }
LABEL_1158:
  if (v723)
    v734 = v723 + 24;
  else
    v734 = 0;
  v2005 = &off_24EC2E850;
  *(_QWORD *)&v2006 = v734;
  *((_QWORD *)&v2006 + 1) = v731;
  if ((SHIBYTE(v1968[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1981[2]) & 0x80000000) == 0)
      goto LABEL_1163;
LABEL_1166:
    operator delete(v1981[0]);
    v735 = (std::__shared_weak_count *)v1890[1];
    if (!v1890[1])
      goto LABEL_1171;
    goto LABEL_1167;
  }
  operator delete(v1968[0]);
  if (SHIBYTE(v1981[2]) < 0)
    goto LABEL_1166;
LABEL_1163:
  v735 = (std::__shared_weak_count *)v1890[1];
  if (!v1890[1])
    goto LABEL_1171;
LABEL_1167:
  v736 = (unint64_t *)&v735->__shared_owners_;
  do
    v737 = __ldaxr(v736);
  while (__stlxr(v737 - 1, v736));
  if (!v737)
  {
    ((void (*)(std::__shared_weak_count *))v735->__on_zero_shared)(v735);
    std::__shared_weak_count::__release_weak(v735);
  }
LABEL_1171:
  v738 = (std::__shared_weak_count *)v1903[1];
  if (!v1903[1])
    goto LABEL_1175;
  v739 = (unint64_t *)((char *)v1903[1] + 8);
  do
    v740 = __ldaxr(v739);
  while (__stlxr(v740 - 1, v739));
  if (!v740)
  {
    ((void (*)(std::__shared_weak_count *))v738->__on_zero_shared)(v738);
    std::__shared_weak_count::__release_weak(v738);
    if ((SHIBYTE(v1942[2]) & 0x80000000) == 0)
    {
LABEL_1176:
      if ((SHIBYTE(v1955[2]) & 0x80000000) == 0)
        goto LABEL_1177;
LABEL_1181:
      operator delete(v1955[0]);
      if (v686)
        goto LABEL_1183;
      goto LABEL_1182;
    }
  }
  else
  {
LABEL_1175:
    if ((SHIBYTE(v1942[2]) & 0x80000000) == 0)
      goto LABEL_1176;
  }
  operator delete(v1942[0]);
  if (SHIBYTE(v1955[2]) < 0)
    goto LABEL_1181;
LABEL_1177:
  if (v686)
    goto LABEL_1183;
LABEL_1182:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_1183:
  v742 = *(void **)v4;
  v741 = *(unint64_t **)(v4 + 8);
  if (v741)
  {
    v743 = v741 + 1;
    do
      v744 = __ldxr(v743);
    while (__stxr(v744 + 1, v743));
  }
  v745 = *v2;
  v746 = (unint64_t *)v2[1];
  if (*v2)
    v747 = *v2 + 728;
  else
    v747 = 0;
  v1686 = (std::__shared_weak_count *)v2[1];
  if (v746)
  {
    v748 = v746 + 1;
    do
      v749 = __ldxr(v748);
    while (__stxr(v749 + 1, v748));
  }
  if (*(char *)(v747 + 31) < 0)
  {
    sub_223197FA4(v1942, *(void **)(v747 + 8), *(_QWORD *)(v747 + 16));
  }
  else
  {
    v750 = *(_OWORD *)(v747 + 8);
    v1942[2] = *(void **)(v747 + 24);
    *(_OWORD *)v1942 = v750;
  }
  if (*(char *)(v745 + 783) < 0)
  {
    sub_223197FA4(v1929, *(void **)(v745 + 760), *(_QWORD *)(v745 + 768));
  }
  else
  {
    *(_OWORD *)v1929 = *(_OWORD *)(v745 + 760);
    v1929[2] = *(void **)(v745 + 776);
  }
  v1890[0] = v742;
  v1890[1] = v741;
  v1877[0] = (void *)v747;
  v1877[1] = v746;
  if (v746)
  {
    v751 = v746 + 1;
    do
      v752 = __ldxr(v751);
    while (__stxr(v752 + 1, v751));
  }
  if (SHIBYTE(v1942[2]) < 0)
  {
    sub_223197FA4(v1968, v1942[0], (unint64_t)v1942[1]);
  }
  else
  {
    *(_OWORD *)v1968 = *(_OWORD *)v1942;
    v1968[2] = v1942[2];
  }
  if (SHIBYTE(v1929[2]) < 0)
  {
    sub_223197FA4(v1955, v1929[0], (unint64_t)v1929[1]);
  }
  else
  {
    *(_OWORD *)v1955 = *(_OWORD *)v1929;
    v1955[2] = v1929[2];
  }
  *(void **)((char *)v1838 + 7) = *(void **)((char *)&v1942[1] + 7);
  v753 = v1942[0];
  v1838[0] = v1942[1];
  v754 = HIBYTE(v1942[2]);
  memset(v1942, 0, sizeof(v1942));
  v1851[0] = v1838[0];
  *(void **)((char *)v1851 + 7) = *(void **)((char *)v1838 + 7);
  *(void **)((char *)v1838 + 7) = 0;
  v1838[0] = 0;
  v1903[0] = v742;
  v1903[1] = v741;
  if (v741)
  {
    v755 = v741 + 1;
    do
      v756 = __ldxr(v755);
    while (__stxr(v756 + 1, v755));
  }
  v757 = (char *)operator new();
  v1864[0] = v1851[0];
  *(void **)((char *)v1864 + 7) = *(void **)((char *)v1851 + 7);
  v1851[0] = 0;
  *(void **)((char *)v1851 + 7) = 0;
  v758 = *(_OWORD *)v1903;
  v1903[0] = 0;
  v1903[1] = 0;
  v757[8] = 1;
  *((_QWORD *)v757 + 4) = 0;
  *((_QWORD *)v757 + 5) = 0;
  *(_QWORD *)v757 = &off_24EC4E718;
  *((_QWORD *)v757 + 2) = &unk_24EC4E790;
  *((_QWORD *)v757 + 3) = &unk_24EC4E7D0;
  v759 = v1864[0];
  *(void **)(v757 + 63) = *(void **)((char *)v1864 + 7);
  *((_QWORD *)v757 + 6) = v753;
  *((_QWORD *)v757 + 7) = v759;
  v757[71] = v754;
  v1864[0] = 0;
  *(void **)((char *)v1864 + 7) = 0;
  *(_OWORD *)(v757 + 72) = v758;
  v1916[1] = 0;
  v1916[0] = 0;
  v760 = (_QWORD *)operator new();
  *v760 = &off_24EC4E8B8;
  v760[1] = v747;
  v760[2] = v746;
  v1877[1] = 0;
  v1877[0] = 0;
  *((_QWORD *)v757 + 18) = 0;
  *((_QWORD *)v757 + 11) = v760;
  *((_QWORD *)v757 + 12) = v757 + 96;
  *((_QWORD *)v757 + 13) = v757 + 96;
  *((_QWORD *)v757 + 14) = 0;
  *((_QWORD *)v757 + 15) = v757 + 120;
  *((_QWORD *)v757 + 16) = v757 + 120;
  *((_QWORD *)v757 + 17) = 0;
  if (!*((_QWORD *)v757 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v761 = (std::__shared_weak_count *)operator new();
  v761->__shared_owners_ = 0;
  v762 = (unint64_t *)&v761->__shared_owners_;
  v761->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4ED58;
  v761->__shared_weak_owners_ = 0;
  v761[1].__vftable = (std::__shared_weak_count_vtbl *)v757;
  v763 = (std::__shared_weak_count *)*((_QWORD *)v757 + 5);
  if (v763)
  {
    if (v763->__shared_owners_ != -1)
      goto LABEL_1225;
    do
      v764 = __ldxr(v762);
    while (__stxr(v764 + 1, v762));
    v765 = (unint64_t *)&v761->__shared_weak_owners_;
    do
      v766 = __ldxr(v765);
    while (__stxr(v766 + 1, v765));
    *((_QWORD *)v757 + 4) = v757;
    *((_QWORD *)v757 + 5) = v761;
    std::__shared_weak_count::__release_weak(v763);
  }
  else
  {
    do
      v767 = __ldxr(v762);
    while (__stxr(v767 + 1, v762));
    v768 = (unint64_t *)&v761->__shared_weak_owners_;
    do
      v769 = __ldxr(v768);
    while (__stxr(v769 + 1, v768));
    *((_QWORD *)v757 + 4) = v757;
    *((_QWORD *)v757 + 5) = v761;
  }
  do
    v770 = __ldaxr(v762);
  while (__stlxr(v770 - 1, v762));
  if (!v770)
  {
    ((void (*)(std::__shared_weak_count *))v761->__on_zero_shared)(v761);
    std::__shared_weak_count::__release_weak(v761);
  }
LABEL_1225:
  v771 = (std::__shared_weak_count *)v1916[1];
  if (v1916[1])
  {
    v772 = (unint64_t *)((char *)v1916[1] + 8);
    do
      v773 = __ldaxr(v772);
    while (__stlxr(v773 - 1, v772));
    if (!v773)
    {
      ((void (*)(std::__shared_weak_count *))v771->__on_zero_shared)(v771);
      std::__shared_weak_count::__release_weak(v771);
    }
  }
  v1916[0] = v757;
  v1916[1] = v761;
  v774 = (std::__shared_weak_count *)v1903[1];
  if (v1903[1])
  {
    v775 = (unint64_t *)((char *)v1903[1] + 8);
    do
      v776 = __ldaxr(v775);
    while (__stlxr(v776 - 1, v775));
    if (!v776)
    {
      ((void (*)(std::__shared_weak_count *))v774->__on_zero_shared)(v774);
      std::__shared_weak_count::__release_weak(v774);
    }
  }
  v777 = *(_OWORD *)v1890;
  v1890[0] = 0;
  v1890[1] = 0;
  *(_OWORD *)&v1981[1] = *(_OWORD *)v1968;
  v1981[0] = &off_24EC48FD0;
  v1982 = v1968[2];
  memset(v1968, 0, sizeof(v1968));
  v1983 = *(_OWORD *)v1955;
  v778 = v1955[2];
  memset(v1955, 0, sizeof(v1955));
  v1985 = v777;
  v1903[1] = 0;
  v1903[0] = 0;
  v779 = v1916[0];
  v780 = (char *)v1916[1];
  v1984 = v778;
  v1986 = *(_OWORD *)v1916;
  v1916[0] = 0;
  v1916[1] = 0;
  if (*((_QWORD *)&v1986 + 1))
  {
    v781 = (unint64_t *)(v780 + 16);
    do
      v782 = __ldxr(v781);
    while (__stxr(v782 + 1, v781));
  }
  v1987 = &off_24EC49000;
  v783 = (_QWORD *)operator new();
  *v783 = &off_24EC4EDA8;
  v783[1] = v779;
  v783[2] = v780;
  *(_QWORD *)&v1988 = v783;
  v785 = *((_QWORD *)&v1986 + 1);
  v784 = v1986;
  if (!*((_QWORD *)&v1986 + 1))
  {
    *((_QWORD *)&v1988 + 1) = v1986;
    v1989 = 0;
    if ((_QWORD)v1986)
      v789 = v1986 + 16;
    else
      v789 = 0;
    goto LABEL_1255;
  }
  v786 = (unint64_t *)(*((_QWORD *)&v1986 + 1) + 16);
  do
    v787 = __ldxr(v786);
  while (__stxr(v787 + 1, v786));
  v788 = *((_QWORD *)&v1986 + 1);
  *((_QWORD *)&v1988 + 1) = v784;
  v1989 = v785;
  if ((_QWORD)v1986)
    v789 = v1986 + 16;
  else
    v789 = 0;
  if (!*((_QWORD *)&v1986 + 1))
  {
    v784 = v1986;
LABEL_1255:
    v792 = 0;
    v1990 = &off_24EC45690;
    v1991 = v789;
    goto LABEL_1256;
  }
  v790 = (unint64_t *)(*((_QWORD *)&v1986 + 1) + 16);
  do
    v791 = __ldxr(v790);
  while (__stxr(v791 + 1, v790));
  v792 = *((_QWORD *)&v1986 + 1);
  v784 = v1986;
  v1990 = &off_24EC45690;
  *(_QWORD *)&v1991 = v789;
  *((_QWORD *)&v1991 + 1) = v788;
  if (*((_QWORD *)&v1986 + 1))
  {
    v793 = (unint64_t *)(*((_QWORD *)&v1986 + 1) + 16);
    do
      v794 = __ldxr(v793);
    while (__stxr(v794 + 1, v793));
  }
LABEL_1256:
  if (v784)
    v795 = v784 + 24;
  else
    v795 = 0;
  v1992 = &off_24EC2E850;
  *(_QWORD *)&v1993 = v795;
  *((_QWORD *)&v1993 + 1) = v792;
  if ((SHIBYTE(v1955[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1968[2]) & 0x80000000) == 0)
      goto LABEL_1261;
LABEL_1264:
    operator delete(v1968[0]);
    v796 = (std::__shared_weak_count *)v1877[1];
    if (!v1877[1])
      goto LABEL_1269;
    goto LABEL_1265;
  }
  operator delete(v1955[0]);
  if (SHIBYTE(v1968[2]) < 0)
    goto LABEL_1264;
LABEL_1261:
  v796 = (std::__shared_weak_count *)v1877[1];
  if (!v1877[1])
    goto LABEL_1269;
LABEL_1265:
  v797 = (unint64_t *)&v796->__shared_owners_;
  do
    v798 = __ldaxr(v797);
  while (__stlxr(v798 - 1, v797));
  if (!v798)
  {
    ((void (*)(std::__shared_weak_count *))v796->__on_zero_shared)(v796);
    std::__shared_weak_count::__release_weak(v796);
  }
LABEL_1269:
  v799 = (std::__shared_weak_count *)v1890[1];
  if (!v1890[1])
    goto LABEL_1273;
  v800 = (unint64_t *)((char *)v1890[1] + 8);
  do
    v801 = __ldaxr(v800);
  while (__stlxr(v801 - 1, v800));
  if (!v801)
  {
    ((void (*)(std::__shared_weak_count *))v799->__on_zero_shared)(v799);
    std::__shared_weak_count::__release_weak(v799);
    if ((SHIBYTE(v1929[2]) & 0x80000000) == 0)
    {
LABEL_1274:
      if ((SHIBYTE(v1942[2]) & 0x80000000) == 0)
        goto LABEL_1275;
LABEL_1279:
      operator delete(v1942[0]);
      if (v747)
        goto LABEL_1281;
      goto LABEL_1280;
    }
  }
  else
  {
LABEL_1273:
    if ((SHIBYTE(v1929[2]) & 0x80000000) == 0)
      goto LABEL_1274;
  }
  operator delete(v1929[0]);
  if (SHIBYTE(v1942[2]) < 0)
    goto LABEL_1279;
LABEL_1275:
  if (v747)
    goto LABEL_1281;
LABEL_1280:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_1281:
  v803 = *(void **)v4;
  v802 = *(unint64_t **)(v4 + 8);
  if (v802)
  {
    v804 = v802 + 1;
    do
      v805 = __ldxr(v804);
    while (__stxr(v805 + 1, v804));
  }
  v806 = *v2;
  v807 = (unint64_t *)v2[1];
  if (*v2)
    v808 = *v2 + 784;
  else
    v808 = 0;
  v1685 = (std::__shared_weak_count *)v2[1];
  if (v807)
  {
    v809 = v807 + 1;
    do
      v810 = __ldxr(v809);
    while (__stxr(v810 + 1, v809));
  }
  if (*(char *)(v808 + 31) < 0)
  {
    sub_223197FA4(v1929, *(void **)(v808 + 8), *(_QWORD *)(v808 + 16));
  }
  else
  {
    v811 = *(_OWORD *)(v808 + 8);
    v1929[2] = *(void **)(v808 + 24);
    *(_OWORD *)v1929 = v811;
  }
  if (*(char *)(v806 + 839) < 0)
  {
    sub_223197FA4(v1916, *(void **)(v806 + 816), *(_QWORD *)(v806 + 824));
  }
  else
  {
    *(_OWORD *)v1916 = *(_OWORD *)(v806 + 816);
    v1916[2] = *(void **)(v806 + 832);
  }
  v1877[0] = v803;
  v1877[1] = v802;
  v1864[0] = (void *)v808;
  v1864[1] = v807;
  if (v807)
  {
    v812 = v807 + 1;
    do
      v813 = __ldxr(v812);
    while (__stxr(v813 + 1, v812));
  }
  if (SHIBYTE(v1929[2]) < 0)
  {
    sub_223197FA4(v1955, v1929[0], (unint64_t)v1929[1]);
  }
  else
  {
    *(_OWORD *)v1955 = *(_OWORD *)v1929;
    v1955[2] = v1929[2];
  }
  if (SHIBYTE(v1916[2]) < 0)
  {
    sub_223197FA4(v1942, v1916[0], (unint64_t)v1916[1]);
  }
  else
  {
    *(_OWORD *)v1942 = *(_OWORD *)v1916;
    v1942[2] = v1916[2];
  }
  *(void **)((char *)v2053 + 7) = *(void **)((char *)&v1929[1] + 7);
  v814 = v1929[0];
  v2053[0] = v1929[1];
  v815 = HIBYTE(v1929[2]);
  memset(v1929, 0, sizeof(v1929));
  v1838[0] = v2053[0];
  *(void **)((char *)v1838 + 7) = *(void **)((char *)v2053 + 7);
  *(void **)((char *)v2053 + 7) = 0;
  v2053[0] = 0;
  v1890[0] = v803;
  v1890[1] = v802;
  if (v802)
  {
    v816 = v802 + 1;
    do
      v817 = __ldxr(v816);
    while (__stxr(v817 + 1, v816));
  }
  v818 = (char *)operator new();
  v1851[0] = v1838[0];
  *(void **)((char *)v1851 + 7) = *(void **)((char *)v1838 + 7);
  v1838[0] = 0;
  *(void **)((char *)v1838 + 7) = 0;
  v819 = *(_OWORD *)v1890;
  v1890[0] = 0;
  v1890[1] = 0;
  v818[8] = 1;
  *((_QWORD *)v818 + 4) = 0;
  *((_QWORD *)v818 + 5) = 0;
  *(_QWORD *)v818 = &off_24EC4EE20;
  *((_QWORD *)v818 + 2) = &unk_24EC4EE98;
  *((_QWORD *)v818 + 3) = &unk_24EC4EED8;
  v820 = v1851[0];
  *(void **)(v818 + 63) = *(void **)((char *)v1851 + 7);
  *((_QWORD *)v818 + 6) = v814;
  *((_QWORD *)v818 + 7) = v820;
  v818[71] = v815;
  v1851[0] = 0;
  *(void **)((char *)v1851 + 7) = 0;
  *(_OWORD *)(v818 + 72) = v819;
  v1903[1] = 0;
  v1903[0] = 0;
  v821 = (_QWORD *)operator new();
  *v821 = &off_24EC4EFC0;
  v821[1] = v808;
  v821[2] = v807;
  v1864[1] = 0;
  v1864[0] = 0;
  *((_QWORD *)v818 + 18) = 0;
  *((_QWORD *)v818 + 11) = v821;
  *((_QWORD *)v818 + 12) = v818 + 96;
  *((_QWORD *)v818 + 13) = v818 + 96;
  *((_QWORD *)v818 + 14) = 0;
  *((_QWORD *)v818 + 15) = v818 + 120;
  *((_QWORD *)v818 + 16) = v818 + 120;
  *((_QWORD *)v818 + 17) = 0;
  if (!*((_QWORD *)v818 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v822 = (std::__shared_weak_count *)operator new();
  v822->__shared_owners_ = 0;
  v823 = (unint64_t *)&v822->__shared_owners_;
  v822->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4F460;
  v822->__shared_weak_owners_ = 0;
  v822[1].__vftable = (std::__shared_weak_count_vtbl *)v818;
  v824 = (std::__shared_weak_count *)*((_QWORD *)v818 + 5);
  if (v824)
  {
    if (v824->__shared_owners_ != -1)
      goto LABEL_1323;
    do
      v825 = __ldxr(v823);
    while (__stxr(v825 + 1, v823));
    v826 = (unint64_t *)&v822->__shared_weak_owners_;
    do
      v827 = __ldxr(v826);
    while (__stxr(v827 + 1, v826));
    *((_QWORD *)v818 + 4) = v818;
    *((_QWORD *)v818 + 5) = v822;
    std::__shared_weak_count::__release_weak(v824);
  }
  else
  {
    do
      v828 = __ldxr(v823);
    while (__stxr(v828 + 1, v823));
    v829 = (unint64_t *)&v822->__shared_weak_owners_;
    do
      v830 = __ldxr(v829);
    while (__stxr(v830 + 1, v829));
    *((_QWORD *)v818 + 4) = v818;
    *((_QWORD *)v818 + 5) = v822;
  }
  do
    v831 = __ldaxr(v823);
  while (__stlxr(v831 - 1, v823));
  if (!v831)
  {
    ((void (*)(std::__shared_weak_count *))v822->__on_zero_shared)(v822);
    std::__shared_weak_count::__release_weak(v822);
  }
LABEL_1323:
  v832 = (std::__shared_weak_count *)v1903[1];
  if (v1903[1])
  {
    v833 = (unint64_t *)((char *)v1903[1] + 8);
    do
      v834 = __ldaxr(v833);
    while (__stlxr(v834 - 1, v833));
    if (!v834)
    {
      ((void (*)(std::__shared_weak_count *))v832->__on_zero_shared)(v832);
      std::__shared_weak_count::__release_weak(v832);
    }
  }
  v1903[0] = v818;
  v1903[1] = v822;
  v835 = (std::__shared_weak_count *)v1890[1];
  if (v1890[1])
  {
    v836 = (unint64_t *)((char *)v1890[1] + 8);
    do
      v837 = __ldaxr(v836);
    while (__stlxr(v837 - 1, v836));
    if (!v837)
    {
      ((void (*)(std::__shared_weak_count *))v835->__on_zero_shared)(v835);
      std::__shared_weak_count::__release_weak(v835);
    }
  }
  v838 = *(_OWORD *)v1877;
  v1877[0] = 0;
  v1877[1] = 0;
  *(_OWORD *)&v1968[1] = *(_OWORD *)v1955;
  v1968[0] = &off_24EC48F68;
  v1969 = v1955[2];
  memset(v1955, 0, sizeof(v1955));
  v1970 = *(_OWORD *)v1942;
  v839 = v1942[2];
  memset(v1942, 0, sizeof(v1942));
  v1972 = v838;
  v1890[1] = 0;
  v1890[0] = 0;
  v840 = v1903[0];
  v841 = (char *)v1903[1];
  v1971 = v839;
  v1973 = *(_OWORD *)v1903;
  v1903[0] = 0;
  v1903[1] = 0;
  if (*((_QWORD *)&v1973 + 1))
  {
    v842 = (unint64_t *)(v841 + 16);
    do
      v843 = __ldxr(v842);
    while (__stxr(v843 + 1, v842));
  }
  v1974 = &off_24EC48F98;
  v844 = (_QWORD *)operator new();
  *v844 = &off_24EC4F4B0;
  v844[1] = v840;
  v844[2] = v841;
  *(_QWORD *)&v1975 = v844;
  v846 = *((_QWORD *)&v1973 + 1);
  v845 = v1973;
  if (!*((_QWORD *)&v1973 + 1))
  {
    *((_QWORD *)&v1975 + 1) = v1973;
    v1976 = 0;
    if ((_QWORD)v1973)
      v850 = v1973 + 16;
    else
      v850 = 0;
    goto LABEL_1353;
  }
  v847 = (unint64_t *)(*((_QWORD *)&v1973 + 1) + 16);
  do
    v848 = __ldxr(v847);
  while (__stxr(v848 + 1, v847));
  v849 = *((_QWORD *)&v1973 + 1);
  *((_QWORD *)&v1975 + 1) = v845;
  v1976 = v846;
  if ((_QWORD)v1973)
    v850 = v1973 + 16;
  else
    v850 = 0;
  if (!*((_QWORD *)&v1973 + 1))
  {
    v845 = v1973;
LABEL_1353:
    v853 = 0;
    v1977 = &off_24EC38370;
    v1978 = v850;
    goto LABEL_1354;
  }
  v851 = (unint64_t *)(*((_QWORD *)&v1973 + 1) + 16);
  do
    v852 = __ldxr(v851);
  while (__stxr(v852 + 1, v851));
  v853 = *((_QWORD *)&v1973 + 1);
  v845 = v1973;
  v1977 = &off_24EC38370;
  *(_QWORD *)&v1978 = v850;
  *((_QWORD *)&v1978 + 1) = v849;
  if (*((_QWORD *)&v1973 + 1))
  {
    v854 = (unint64_t *)(*((_QWORD *)&v1973 + 1) + 16);
    do
      v855 = __ldxr(v854);
    while (__stxr(v855 + 1, v854));
  }
LABEL_1354:
  if (v845)
    v856 = v845 + 24;
  else
    v856 = 0;
  v1979 = &off_24EC2E850;
  *(_QWORD *)&v1980 = v856;
  *((_QWORD *)&v1980 + 1) = v853;
  if ((SHIBYTE(v1942[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1955[2]) & 0x80000000) == 0)
      goto LABEL_1359;
LABEL_1362:
    operator delete(v1955[0]);
    v857 = (std::__shared_weak_count *)v1864[1];
    if (!v1864[1])
      goto LABEL_1367;
    goto LABEL_1363;
  }
  operator delete(v1942[0]);
  if (SHIBYTE(v1955[2]) < 0)
    goto LABEL_1362;
LABEL_1359:
  v857 = (std::__shared_weak_count *)v1864[1];
  if (!v1864[1])
    goto LABEL_1367;
LABEL_1363:
  v858 = (unint64_t *)&v857->__shared_owners_;
  do
    v859 = __ldaxr(v858);
  while (__stlxr(v859 - 1, v858));
  if (!v859)
  {
    ((void (*)(std::__shared_weak_count *))v857->__on_zero_shared)(v857);
    std::__shared_weak_count::__release_weak(v857);
  }
LABEL_1367:
  v860 = (std::__shared_weak_count *)v1877[1];
  if (!v1877[1])
    goto LABEL_1371;
  v861 = (unint64_t *)((char *)v1877[1] + 8);
  do
    v862 = __ldaxr(v861);
  while (__stlxr(v862 - 1, v861));
  if (!v862)
  {
    ((void (*)(std::__shared_weak_count *))v860->__on_zero_shared)(v860);
    std::__shared_weak_count::__release_weak(v860);
    if ((SHIBYTE(v1916[2]) & 0x80000000) == 0)
    {
LABEL_1372:
      if ((SHIBYTE(v1929[2]) & 0x80000000) == 0)
        goto LABEL_1373;
LABEL_1377:
      operator delete(v1929[0]);
      if (v808)
        goto LABEL_1379;
      goto LABEL_1378;
    }
  }
  else
  {
LABEL_1371:
    if ((SHIBYTE(v1916[2]) & 0x80000000) == 0)
      goto LABEL_1372;
  }
  operator delete(v1916[0]);
  if (SHIBYTE(v1929[2]) < 0)
    goto LABEL_1377;
LABEL_1373:
  if (v808)
    goto LABEL_1379;
LABEL_1378:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_1379:
  v864 = *(void **)v4;
  v863 = *(unint64_t **)(v4 + 8);
  if (v863)
  {
    v865 = v863 + 1;
    do
      v866 = __ldxr(v865);
    while (__stxr(v866 + 1, v865));
  }
  v867 = *v2;
  v868 = (unint64_t *)v2[1];
  if (*v2)
    v869 = *v2 + 840;
  else
    v869 = 0;
  v1684 = (std::__shared_weak_count *)v2[1];
  if (v868)
  {
    v870 = v868 + 1;
    do
      v871 = __ldxr(v870);
    while (__stxr(v871 + 1, v870));
  }
  if (*(char *)(v869 + 31) < 0)
  {
    sub_223197FA4(v1916, *(void **)(v869 + 8), *(_QWORD *)(v869 + 16));
  }
  else
  {
    v872 = *(_OWORD *)(v869 + 8);
    v1916[2] = *(void **)(v869 + 24);
    *(_OWORD *)v1916 = v872;
  }
  if (*(char *)(v867 + 895) < 0)
  {
    sub_223197FA4(v1903, *(void **)(v867 + 872), *(_QWORD *)(v867 + 880));
  }
  else
  {
    *(_OWORD *)v1903 = *(_OWORD *)(v867 + 872);
    v1903[2] = *(void **)(v867 + 888);
  }
  v1864[0] = v864;
  v1864[1] = v863;
  v1851[0] = (void *)v869;
  v1851[1] = v868;
  if (v868)
  {
    v873 = v868 + 1;
    do
      v874 = __ldxr(v873);
    while (__stxr(v874 + 1, v873));
  }
  if (SHIBYTE(v1916[2]) < 0)
  {
    sub_223197FA4(v1942, v1916[0], (unint64_t)v1916[1]);
  }
  else
  {
    *(_OWORD *)v1942 = *(_OWORD *)v1916;
    v1942[2] = v1916[2];
  }
  if (SHIBYTE(v1903[2]) < 0)
  {
    sub_223197FA4(v1929, v1903[0], (unint64_t)v1903[1]);
  }
  else
  {
    *(_OWORD *)v1929 = *(_OWORD *)v1903;
    v1929[2] = v1903[2];
  }
  *(void **)((char *)v2052 + 7) = *(void **)((char *)&v1916[1] + 7);
  v875 = v1916[0];
  v2052[0] = v1916[1];
  v876 = HIBYTE(v1916[2]);
  memset(v1916, 0, sizeof(v1916));
  v2053[0] = v2052[0];
  *(void **)((char *)v2053 + 7) = *(void **)((char *)v2052 + 7);
  *(void **)((char *)v2052 + 7) = 0;
  v2052[0] = 0;
  v1877[0] = v864;
  v1877[1] = v863;
  if (v863)
  {
    v877 = v863 + 1;
    do
      v878 = __ldxr(v877);
    while (__stxr(v878 + 1, v877));
  }
  v879 = (char *)operator new();
  v1838[0] = v2053[0];
  *(void **)((char *)v1838 + 7) = *(void **)((char *)v2053 + 7);
  v2053[0] = 0;
  *(void **)((char *)v2053 + 7) = 0;
  v880 = *(_OWORD *)v1877;
  v1877[0] = 0;
  v1877[1] = 0;
  v879[8] = 1;
  *((_QWORD *)v879 + 4) = 0;
  *((_QWORD *)v879 + 5) = 0;
  *(_QWORD *)v879 = &off_24EC4F528;
  *((_QWORD *)v879 + 2) = &unk_24EC4F5A0;
  *((_QWORD *)v879 + 3) = &unk_24EC4F5E0;
  v881 = v1838[0];
  *(void **)(v879 + 63) = *(void **)((char *)v1838 + 7);
  *((_QWORD *)v879 + 6) = v875;
  *((_QWORD *)v879 + 7) = v881;
  v879[71] = v876;
  v1838[0] = 0;
  *(void **)((char *)v1838 + 7) = 0;
  *(_OWORD *)(v879 + 72) = v880;
  v1890[1] = 0;
  v1890[0] = 0;
  v882 = (_QWORD *)operator new();
  *v882 = &off_24EC4F6D8;
  v882[1] = v869;
  v882[2] = v868;
  v1851[1] = 0;
  v1851[0] = 0;
  *((_QWORD *)v879 + 18) = 0;
  *((_QWORD *)v879 + 11) = v882;
  *((_QWORD *)v879 + 12) = v879 + 96;
  *((_QWORD *)v879 + 13) = v879 + 96;
  *((_QWORD *)v879 + 14) = 0;
  *((_QWORD *)v879 + 15) = v879 + 120;
  *((_QWORD *)v879 + 16) = v879 + 120;
  *((_QWORD *)v879 + 17) = 0;
  if (!*((_QWORD *)v879 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v883 = (std::__shared_weak_count *)operator new();
  v883->__shared_owners_ = 0;
  v884 = (unint64_t *)&v883->__shared_owners_;
  v883->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4FBC8;
  v883->__shared_weak_owners_ = 0;
  v883[1].__vftable = (std::__shared_weak_count_vtbl *)v879;
  v885 = (std::__shared_weak_count *)*((_QWORD *)v879 + 5);
  if (v885)
  {
    if (v885->__shared_owners_ != -1)
      goto LABEL_1421;
    do
      v886 = __ldxr(v884);
    while (__stxr(v886 + 1, v884));
    v887 = (unint64_t *)&v883->__shared_weak_owners_;
    do
      v888 = __ldxr(v887);
    while (__stxr(v888 + 1, v887));
    *((_QWORD *)v879 + 4) = v879;
    *((_QWORD *)v879 + 5) = v883;
    std::__shared_weak_count::__release_weak(v885);
  }
  else
  {
    do
      v889 = __ldxr(v884);
    while (__stxr(v889 + 1, v884));
    v890 = (unint64_t *)&v883->__shared_weak_owners_;
    do
      v891 = __ldxr(v890);
    while (__stxr(v891 + 1, v890));
    *((_QWORD *)v879 + 4) = v879;
    *((_QWORD *)v879 + 5) = v883;
  }
  do
    v892 = __ldaxr(v884);
  while (__stlxr(v892 - 1, v884));
  if (!v892)
  {
    ((void (*)(std::__shared_weak_count *))v883->__on_zero_shared)(v883);
    std::__shared_weak_count::__release_weak(v883);
  }
LABEL_1421:
  v893 = (std::__shared_weak_count *)v1890[1];
  if (v1890[1])
  {
    v894 = (unint64_t *)((char *)v1890[1] + 8);
    do
      v895 = __ldaxr(v894);
    while (__stlxr(v895 - 1, v894));
    if (!v895)
    {
      ((void (*)(std::__shared_weak_count *))v893->__on_zero_shared)(v893);
      std::__shared_weak_count::__release_weak(v893);
    }
  }
  v1890[0] = v879;
  v1890[1] = v883;
  v896 = (std::__shared_weak_count *)v1877[1];
  if (v1877[1])
  {
    v897 = (unint64_t *)((char *)v1877[1] + 8);
    do
      v898 = __ldaxr(v897);
    while (__stlxr(v898 - 1, v897));
    if (!v898)
    {
      ((void (*)(std::__shared_weak_count *))v896->__on_zero_shared)(v896);
      std::__shared_weak_count::__release_weak(v896);
    }
  }
  v899 = *(_OWORD *)v1864;
  v1864[0] = 0;
  v1864[1] = 0;
  *(_OWORD *)&v1955[1] = *(_OWORD *)v1942;
  v1955[0] = &off_24EC48E90;
  v1956 = v1942[2];
  memset(v1942, 0, sizeof(v1942));
  v1957 = *(_OWORD *)v1929;
  v900 = v1929[2];
  memset(v1929, 0, sizeof(v1929));
  v1959 = v899;
  v1877[1] = 0;
  v1877[0] = 0;
  v901 = v1890[0];
  v902 = (char *)v1890[1];
  v1958 = v900;
  v1960 = *(_OWORD *)v1890;
  v1890[0] = 0;
  v1890[1] = 0;
  if (*((_QWORD *)&v1960 + 1))
  {
    v903 = (unint64_t *)(v902 + 16);
    do
      v904 = __ldxr(v903);
    while (__stxr(v904 + 1, v903));
  }
  v1961 = &off_24EC48F30;
  v905 = (_QWORD *)operator new();
  *v905 = &off_24EC4FC18;
  v905[1] = v901;
  v905[2] = v902;
  *(_QWORD *)&v1962 = v905;
  v907 = *((_QWORD *)&v1960 + 1);
  v906 = v1960;
  if (!*((_QWORD *)&v1960 + 1))
  {
    *((_QWORD *)&v1962 + 1) = v1960;
    v1963 = 0;
    if ((_QWORD)v1960)
      v911 = v1960 + 16;
    else
      v911 = 0;
    goto LABEL_1451;
  }
  v908 = (unint64_t *)(*((_QWORD *)&v1960 + 1) + 16);
  do
    v909 = __ldxr(v908);
  while (__stxr(v909 + 1, v908));
  v910 = *((_QWORD *)&v1960 + 1);
  *((_QWORD *)&v1962 + 1) = v906;
  v1963 = v907;
  if ((_QWORD)v1960)
    v911 = v1960 + 16;
  else
    v911 = 0;
  if (!*((_QWORD *)&v1960 + 1))
  {
    v906 = v1960;
LABEL_1451:
    v914 = 0;
    v1964 = &off_24EC48EC0;
    v1965 = v911;
    goto LABEL_1452;
  }
  v912 = (unint64_t *)(*((_QWORD *)&v1960 + 1) + 16);
  do
    v913 = __ldxr(v912);
  while (__stxr(v913 + 1, v912));
  v914 = *((_QWORD *)&v1960 + 1);
  v906 = v1960;
  v1964 = &off_24EC48EC0;
  *(_QWORD *)&v1965 = v911;
  *((_QWORD *)&v1965 + 1) = v910;
  if (*((_QWORD *)&v1960 + 1))
  {
    v915 = (unint64_t *)(*((_QWORD *)&v1960 + 1) + 16);
    do
      v916 = __ldxr(v915);
    while (__stxr(v916 + 1, v915));
  }
LABEL_1452:
  if (v906)
    v917 = v906 + 24;
  else
    v917 = 0;
  v1966 = &off_24EC2E850;
  *(_QWORD *)&v1967 = v917;
  *((_QWORD *)&v1967 + 1) = v914;
  if ((SHIBYTE(v1929[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1942[2]) & 0x80000000) == 0)
      goto LABEL_1457;
LABEL_1460:
    operator delete(v1942[0]);
    v918 = (std::__shared_weak_count *)v1851[1];
    if (!v1851[1])
      goto LABEL_1465;
    goto LABEL_1461;
  }
  operator delete(v1929[0]);
  if (SHIBYTE(v1942[2]) < 0)
    goto LABEL_1460;
LABEL_1457:
  v918 = (std::__shared_weak_count *)v1851[1];
  if (!v1851[1])
    goto LABEL_1465;
LABEL_1461:
  v919 = (unint64_t *)&v918->__shared_owners_;
  do
    v920 = __ldaxr(v919);
  while (__stlxr(v920 - 1, v919));
  if (!v920)
  {
    ((void (*)(std::__shared_weak_count *))v918->__on_zero_shared)(v918);
    std::__shared_weak_count::__release_weak(v918);
  }
LABEL_1465:
  v921 = (std::__shared_weak_count *)v1864[1];
  if (!v1864[1])
    goto LABEL_1469;
  v922 = (unint64_t *)((char *)v1864[1] + 8);
  do
    v923 = __ldaxr(v922);
  while (__stlxr(v923 - 1, v922));
  if (!v923)
  {
    ((void (*)(std::__shared_weak_count *))v921->__on_zero_shared)(v921);
    std::__shared_weak_count::__release_weak(v921);
    if ((SHIBYTE(v1903[2]) & 0x80000000) == 0)
    {
LABEL_1470:
      if ((SHIBYTE(v1916[2]) & 0x80000000) == 0)
        goto LABEL_1471;
LABEL_1475:
      operator delete(v1916[0]);
      if (v869)
        goto LABEL_1477;
      goto LABEL_1476;
    }
  }
  else
  {
LABEL_1469:
    if ((SHIBYTE(v1903[2]) & 0x80000000) == 0)
      goto LABEL_1470;
  }
  operator delete(v1903[0]);
  if (SHIBYTE(v1916[2]) < 0)
    goto LABEL_1475;
LABEL_1471:
  if (v869)
    goto LABEL_1477;
LABEL_1476:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_1477:
  v925 = *(void **)v4;
  v924 = *(unint64_t **)(v4 + 8);
  if (v924)
  {
    v926 = v924 + 1;
    do
      v927 = __ldxr(v926);
    while (__stxr(v927 + 1, v926));
  }
  v928 = *v2;
  v929 = (unint64_t *)v2[1];
  if (*v2)
    v930 = *v2 + 896;
  else
    v930 = 0;
  v1683 = (std::__shared_weak_count *)v2[1];
  if (v929)
  {
    v931 = v929 + 1;
    do
      v932 = __ldxr(v931);
    while (__stxr(v932 + 1, v931));
  }
  if (*(char *)(v930 + 31) < 0)
  {
    sub_223197FA4(v1903, *(void **)(v930 + 8), *(_QWORD *)(v930 + 16));
  }
  else
  {
    v933 = *(_OWORD *)(v930 + 8);
    v1903[2] = *(void **)(v930 + 24);
    *(_OWORD *)v1903 = v933;
  }
  if (*(char *)(v928 + 951) < 0)
  {
    sub_223197FA4(v1890, *(void **)(v928 + 928), *(_QWORD *)(v928 + 936));
  }
  else
  {
    *(_OWORD *)v1890 = *(_OWORD *)(v928 + 928);
    v1890[2] = *(void **)(v928 + 944);
  }
  v1851[0] = v925;
  v1851[1] = v924;
  v1838[0] = (void *)v930;
  v1838[1] = v929;
  if (v929)
  {
    v934 = v929 + 1;
    do
      v935 = __ldxr(v934);
    while (__stxr(v935 + 1, v934));
  }
  if (SHIBYTE(v1903[2]) < 0)
  {
    sub_223197FA4(v1929, v1903[0], (unint64_t)v1903[1]);
  }
  else
  {
    *(_OWORD *)v1929 = *(_OWORD *)v1903;
    v1929[2] = v1903[2];
  }
  if (SHIBYTE(v1890[2]) < 0)
  {
    sub_223197FA4(v1916, v1890[0], (unint64_t)v1890[1]);
  }
  else
  {
    *(_OWORD *)v1916 = *(_OWORD *)v1890;
    v1916[2] = v1890[2];
  }
  *(void **)((char *)v2050 + 7) = *(void **)((char *)&v1903[1] + 7);
  v936 = v1903[0];
  v2050[0] = v1903[1];
  v937 = HIBYTE(v1903[2]);
  memset(v1903, 0, sizeof(v1903));
  v2052[0] = v2050[0];
  *(void **)((char *)v2052 + 7) = *(void **)((char *)v2050 + 7);
  *(void **)((char *)v2050 + 7) = 0;
  v2050[0] = 0;
  v1864[0] = v925;
  v1864[1] = v924;
  if (v924)
  {
    v938 = v924 + 1;
    do
      v939 = __ldxr(v938);
    while (__stxr(v939 + 1, v938));
  }
  v940 = (char *)operator new();
  v2053[0] = v2052[0];
  *(void **)((char *)v2053 + 7) = *(void **)((char *)v2052 + 7);
  v2052[0] = 0;
  *(void **)((char *)v2052 + 7) = 0;
  v941 = *(_OWORD *)v1864;
  v1864[0] = 0;
  v1864[1] = 0;
  v940[8] = 1;
  *((_QWORD *)v940 + 4) = 0;
  *((_QWORD *)v940 + 5) = 0;
  *(_QWORD *)v940 = &off_24EC4FC90;
  *((_QWORD *)v940 + 2) = &unk_24EC4FD08;
  *((_QWORD *)v940 + 3) = &unk_24EC4FD48;
  v942 = v2053[0];
  *(void **)(v940 + 63) = *(void **)((char *)v2053 + 7);
  *((_QWORD *)v940 + 6) = v936;
  *((_QWORD *)v940 + 7) = v942;
  v940[71] = v937;
  v2053[0] = 0;
  *(void **)((char *)v2053 + 7) = 0;
  *(_OWORD *)(v940 + 72) = v941;
  v1877[1] = 0;
  v1877[0] = 0;
  v943 = (_QWORD *)operator new();
  *v943 = &off_24EC4FE40;
  v943[1] = v930;
  v943[2] = v929;
  v1838[1] = 0;
  v1838[0] = 0;
  *((_QWORD *)v940 + 18) = 0;
  *((_QWORD *)v940 + 11) = v943;
  *((_QWORD *)v940 + 12) = v940 + 96;
  *((_QWORD *)v940 + 13) = v940 + 96;
  *((_QWORD *)v940 + 14) = 0;
  *((_QWORD *)v940 + 15) = v940 + 120;
  *((_QWORD *)v940 + 16) = v940 + 120;
  *((_QWORD *)v940 + 17) = 0;
  if (!*((_QWORD *)v940 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v944 = (std::__shared_weak_count *)operator new();
  v944->__shared_owners_ = 0;
  v945 = (unint64_t *)&v944->__shared_owners_;
  v944->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC50330;
  v944->__shared_weak_owners_ = 0;
  v944[1].__vftable = (std::__shared_weak_count_vtbl *)v940;
  v946 = (std::__shared_weak_count *)*((_QWORD *)v940 + 5);
  if (v946)
  {
    if (v946->__shared_owners_ != -1)
      goto LABEL_1519;
    do
      v947 = __ldxr(v945);
    while (__stxr(v947 + 1, v945));
    v948 = (unint64_t *)&v944->__shared_weak_owners_;
    do
      v949 = __ldxr(v948);
    while (__stxr(v949 + 1, v948));
    *((_QWORD *)v940 + 4) = v940;
    *((_QWORD *)v940 + 5) = v944;
    std::__shared_weak_count::__release_weak(v946);
  }
  else
  {
    do
      v950 = __ldxr(v945);
    while (__stxr(v950 + 1, v945));
    v951 = (unint64_t *)&v944->__shared_weak_owners_;
    do
      v952 = __ldxr(v951);
    while (__stxr(v952 + 1, v951));
    *((_QWORD *)v940 + 4) = v940;
    *((_QWORD *)v940 + 5) = v944;
  }
  do
    v953 = __ldaxr(v945);
  while (__stlxr(v953 - 1, v945));
  if (!v953)
  {
    ((void (*)(std::__shared_weak_count *))v944->__on_zero_shared)(v944);
    std::__shared_weak_count::__release_weak(v944);
  }
LABEL_1519:
  v954 = (std::__shared_weak_count *)v1877[1];
  if (v1877[1])
  {
    v955 = (unint64_t *)((char *)v1877[1] + 8);
    do
      v956 = __ldaxr(v955);
    while (__stlxr(v956 - 1, v955));
    if (!v956)
    {
      ((void (*)(std::__shared_weak_count *))v954->__on_zero_shared)(v954);
      std::__shared_weak_count::__release_weak(v954);
    }
  }
  v1877[0] = v940;
  v1877[1] = v944;
  v957 = (std::__shared_weak_count *)v1864[1];
  if (v1864[1])
  {
    v958 = (unint64_t *)((char *)v1864[1] + 8);
    do
      v959 = __ldaxr(v958);
    while (__stlxr(v959 - 1, v958));
    if (!v959)
    {
      ((void (*)(std::__shared_weak_count *))v957->__on_zero_shared)(v957);
      std::__shared_weak_count::__release_weak(v957);
    }
  }
  v960 = *(_OWORD *)v1851;
  v1851[0] = 0;
  v1851[1] = 0;
  *(_OWORD *)&v1942[1] = *(_OWORD *)v1929;
  v1942[0] = &off_24EC48E28;
  v1943 = v1929[2];
  memset(v1929, 0, sizeof(v1929));
  v1944 = *(_OWORD *)v1916;
  v961 = v1916[2];
  memset(v1916, 0, sizeof(v1916));
  v1946 = v960;
  v1864[1] = 0;
  v1864[0] = 0;
  v962 = v1877[0];
  v963 = (char *)v1877[1];
  v1945 = v961;
  v1947 = *(_OWORD *)v1877;
  v1877[0] = 0;
  v1877[1] = 0;
  if (*((_QWORD *)&v1947 + 1))
  {
    v964 = (unint64_t *)(v963 + 16);
    do
      v965 = __ldxr(v964);
    while (__stxr(v965 + 1, v964));
  }
  v1948 = &off_24EC48E58;
  v966 = (_QWORD *)operator new();
  *v966 = &off_24EC50380;
  v966[1] = v962;
  v966[2] = v963;
  *(_QWORD *)&v1949 = v966;
  v968 = *((_QWORD *)&v1947 + 1);
  v967 = v1947;
  if (!*((_QWORD *)&v1947 + 1))
  {
    *((_QWORD *)&v1949 + 1) = v1947;
    v1950 = 0;
    if ((_QWORD)v1947)
      v972 = v1947 + 16;
    else
      v972 = 0;
    goto LABEL_1549;
  }
  v969 = (unint64_t *)(*((_QWORD *)&v1947 + 1) + 16);
  do
    v970 = __ldxr(v969);
  while (__stxr(v970 + 1, v969));
  v971 = *((_QWORD *)&v1947 + 1);
  *((_QWORD *)&v1949 + 1) = v967;
  v1950 = v968;
  if ((_QWORD)v1947)
    v972 = v1947 + 16;
  else
    v972 = 0;
  if (!*((_QWORD *)&v1947 + 1))
  {
    v967 = v1947;
LABEL_1549:
    v975 = 0;
    v1951 = &off_24EC48D80;
    v1952 = v972;
    goto LABEL_1550;
  }
  v973 = (unint64_t *)(*((_QWORD *)&v1947 + 1) + 16);
  do
    v974 = __ldxr(v973);
  while (__stxr(v974 + 1, v973));
  v975 = *((_QWORD *)&v1947 + 1);
  v967 = v1947;
  v1951 = &off_24EC48D80;
  *(_QWORD *)&v1952 = v972;
  *((_QWORD *)&v1952 + 1) = v971;
  if (*((_QWORD *)&v1947 + 1))
  {
    v976 = (unint64_t *)(*((_QWORD *)&v1947 + 1) + 16);
    do
      v977 = __ldxr(v976);
    while (__stxr(v977 + 1, v976));
  }
LABEL_1550:
  if (v967)
    v978 = v967 + 24;
  else
    v978 = 0;
  v1953 = &off_24EC2E850;
  *(_QWORD *)&v1954 = v978;
  *((_QWORD *)&v1954 + 1) = v975;
  if ((SHIBYTE(v1916[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1929[2]) & 0x80000000) == 0)
      goto LABEL_1555;
LABEL_1558:
    operator delete(v1929[0]);
    v979 = (std::__shared_weak_count *)v1838[1];
    if (!v1838[1])
      goto LABEL_1563;
    goto LABEL_1559;
  }
  operator delete(v1916[0]);
  if (SHIBYTE(v1929[2]) < 0)
    goto LABEL_1558;
LABEL_1555:
  v979 = (std::__shared_weak_count *)v1838[1];
  if (!v1838[1])
    goto LABEL_1563;
LABEL_1559:
  v980 = (unint64_t *)&v979->__shared_owners_;
  do
    v981 = __ldaxr(v980);
  while (__stlxr(v981 - 1, v980));
  if (!v981)
  {
    ((void (*)(std::__shared_weak_count *))v979->__on_zero_shared)(v979);
    std::__shared_weak_count::__release_weak(v979);
  }
LABEL_1563:
  v982 = (std::__shared_weak_count *)v1851[1];
  if (!v1851[1])
    goto LABEL_1567;
  v983 = (unint64_t *)((char *)v1851[1] + 8);
  do
    v984 = __ldaxr(v983);
  while (__stlxr(v984 - 1, v983));
  if (!v984)
  {
    ((void (*)(std::__shared_weak_count *))v982->__on_zero_shared)(v982);
    std::__shared_weak_count::__release_weak(v982);
    if ((SHIBYTE(v1890[2]) & 0x80000000) == 0)
    {
LABEL_1568:
      if ((SHIBYTE(v1903[2]) & 0x80000000) == 0)
        goto LABEL_1569;
LABEL_1573:
      operator delete(v1903[0]);
      if (v930)
        goto LABEL_1575;
      goto LABEL_1574;
    }
  }
  else
  {
LABEL_1567:
    if ((SHIBYTE(v1890[2]) & 0x80000000) == 0)
      goto LABEL_1568;
  }
  operator delete(v1890[0]);
  if (SHIBYTE(v1903[2]) < 0)
    goto LABEL_1573;
LABEL_1569:
  if (v930)
    goto LABEL_1575;
LABEL_1574:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_1575:
  v986 = *(void **)v4;
  v985 = *(unint64_t **)(v4 + 8);
  if (v985)
  {
    v987 = v985 + 1;
    do
      v988 = __ldxr(v987);
    while (__stxr(v988 + 1, v987));
  }
  v989 = *v2;
  v990 = (unint64_t *)v2[1];
  if (*v2)
    v991 = *v2 + 952;
  else
    v991 = 0;
  v1682 = (std::__shared_weak_count *)v2[1];
  if (v990)
  {
    v992 = v990 + 1;
    do
      v993 = __ldxr(v992);
    while (__stxr(v993 + 1, v992));
  }
  if (*(char *)(v991 + 31) < 0)
  {
    sub_223197FA4(v1890, *(void **)(v991 + 8), *(_QWORD *)(v991 + 16));
  }
  else
  {
    v994 = *(_OWORD *)(v991 + 8);
    v1890[2] = *(void **)(v991 + 24);
    *(_OWORD *)v1890 = v994;
  }
  if (*(char *)(v989 + 1007) < 0)
  {
    sub_223197FA4(v1877, *(void **)(v989 + 984), *(_QWORD *)(v989 + 992));
  }
  else
  {
    *(_OWORD *)v1877 = *(_OWORD *)(v989 + 984);
    v1877[2] = *(void **)(v989 + 1000);
  }
  v1838[0] = v986;
  v1838[1] = v985;
  v2053[0] = (void *)v991;
  v2053[1] = v990;
  if (v990)
  {
    v995 = v990 + 1;
    do
      v996 = __ldxr(v995);
    while (__stxr(v996 + 1, v995));
  }
  if (SHIBYTE(v1890[2]) < 0)
  {
    sub_223197FA4(v1916, v1890[0], (unint64_t)v1890[1]);
  }
  else
  {
    *(_OWORD *)v1916 = *(_OWORD *)v1890;
    v1916[2] = v1890[2];
  }
  if (SHIBYTE(v1877[2]) < 0)
  {
    sub_223197FA4(v1903, v1877[0], (unint64_t)v1877[1]);
  }
  else
  {
    *(_OWORD *)v1903 = *(_OWORD *)v1877;
    v1903[2] = v1877[2];
  }
  *(void **)((char *)v2048 + 7) = *(void **)((char *)&v1890[1] + 7);
  v997 = v1890[0];
  v2048[0] = v1890[1];
  v998 = HIBYTE(v1890[2]);
  memset(v1890, 0, sizeof(v1890));
  v2050[0] = v2048[0];
  *(void **)((char *)v2050 + 7) = *(void **)((char *)v2048 + 7);
  *(void **)((char *)v2048 + 7) = 0;
  v2048[0] = 0;
  v1851[0] = v986;
  v1851[1] = v985;
  if (v985)
  {
    v999 = v985 + 1;
    do
      v1000 = __ldxr(v999);
    while (__stxr(v1000 + 1, v999));
  }
  v1001 = (char *)operator new();
  v2052[0] = v2050[0];
  *(void **)((char *)v2052 + 7) = *(void **)((char *)v2050 + 7);
  v2050[0] = 0;
  *(void **)((char *)v2050 + 7) = 0;
  v1002 = *(_OWORD *)v1851;
  v1851[0] = 0;
  v1851[1] = 0;
  v1001[8] = 1;
  *((_QWORD *)v1001 + 4) = 0;
  *((_QWORD *)v1001 + 5) = 0;
  *(_QWORD *)v1001 = &off_24EC503F8;
  *((_QWORD *)v1001 + 2) = &unk_24EC50470;
  *((_QWORD *)v1001 + 3) = &unk_24EC504B0;
  v1003 = v2052[0];
  *(void **)(v1001 + 63) = *(void **)((char *)v2052 + 7);
  *((_QWORD *)v1001 + 6) = v997;
  *((_QWORD *)v1001 + 7) = v1003;
  v1001[71] = v998;
  v2052[0] = 0;
  *(void **)((char *)v2052 + 7) = 0;
  *(_OWORD *)(v1001 + 72) = v1002;
  v1864[1] = 0;
  v1864[0] = 0;
  v1004 = (_QWORD *)operator new();
  *v1004 = &off_24EC50598;
  v1004[1] = v991;
  v1004[2] = v990;
  v2053[1] = 0;
  v2053[0] = 0;
  *((_QWORD *)v1001 + 18) = 0;
  *((_QWORD *)v1001 + 11) = v1004;
  *((_QWORD *)v1001 + 12) = v1001 + 96;
  *((_QWORD *)v1001 + 13) = v1001 + 96;
  *((_QWORD *)v1001 + 14) = 0;
  *((_QWORD *)v1001 + 15) = v1001 + 120;
  *((_QWORD *)v1001 + 16) = v1001 + 120;
  *((_QWORD *)v1001 + 17) = 0;
  if (!*((_QWORD *)v1001 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v1005 = (std::__shared_weak_count *)operator new();
  v1005->__shared_owners_ = 0;
  v1006 = (unint64_t *)&v1005->__shared_owners_;
  v1005->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC50A38;
  v1005->__shared_weak_owners_ = 0;
  v1005[1].__vftable = (std::__shared_weak_count_vtbl *)v1001;
  v1007 = (std::__shared_weak_count *)*((_QWORD *)v1001 + 5);
  if (v1007)
  {
    if (v1007->__shared_owners_ != -1)
      goto LABEL_1617;
    do
      v1008 = __ldxr(v1006);
    while (__stxr(v1008 + 1, v1006));
    v1009 = (unint64_t *)&v1005->__shared_weak_owners_;
    do
      v1010 = __ldxr(v1009);
    while (__stxr(v1010 + 1, v1009));
    *((_QWORD *)v1001 + 4) = v1001;
    *((_QWORD *)v1001 + 5) = v1005;
    std::__shared_weak_count::__release_weak(v1007);
  }
  else
  {
    do
      v1011 = __ldxr(v1006);
    while (__stxr(v1011 + 1, v1006));
    v1012 = (unint64_t *)&v1005->__shared_weak_owners_;
    do
      v1013 = __ldxr(v1012);
    while (__stxr(v1013 + 1, v1012));
    *((_QWORD *)v1001 + 4) = v1001;
    *((_QWORD *)v1001 + 5) = v1005;
  }
  do
    v1014 = __ldaxr(v1006);
  while (__stlxr(v1014 - 1, v1006));
  if (!v1014)
  {
    ((void (*)(std::__shared_weak_count *))v1005->__on_zero_shared)(v1005);
    std::__shared_weak_count::__release_weak(v1005);
  }
LABEL_1617:
  v1015 = (std::__shared_weak_count *)v1864[1];
  if (v1864[1])
  {
    v1016 = (unint64_t *)((char *)v1864[1] + 8);
    do
      v1017 = __ldaxr(v1016);
    while (__stlxr(v1017 - 1, v1016));
    if (!v1017)
    {
      ((void (*)(std::__shared_weak_count *))v1015->__on_zero_shared)(v1015);
      std::__shared_weak_count::__release_weak(v1015);
    }
  }
  v1864[0] = v1001;
  v1864[1] = v1005;
  v1018 = (std::__shared_weak_count *)v1851[1];
  if (v1851[1])
  {
    v1019 = (unint64_t *)((char *)v1851[1] + 8);
    do
      v1020 = __ldaxr(v1019);
    while (__stlxr(v1020 - 1, v1019));
    if (!v1020)
    {
      ((void (*)(std::__shared_weak_count *))v1018->__on_zero_shared)(v1018);
      std::__shared_weak_count::__release_weak(v1018);
    }
  }
  v1021 = *(_OWORD *)v1838;
  v1838[0] = 0;
  v1838[1] = 0;
  *(_OWORD *)&v1929[1] = *(_OWORD *)v1916;
  v1929[0] = &off_24EC48D50;
  v1930 = v1916[2];
  memset(v1916, 0, sizeof(v1916));
  v1931 = *(_OWORD *)v1903;
  v1022 = v1903[2];
  memset(v1903, 0, sizeof(v1903));
  v1933 = v1021;
  v1851[1] = 0;
  v1851[0] = 0;
  v1023 = v1864[0];
  v1024 = (char *)v1864[1];
  v1932 = v1022;
  v1934 = *(_OWORD *)v1864;
  v1864[0] = 0;
  v1864[1] = 0;
  if (*((_QWORD *)&v1934 + 1))
  {
    v1025 = (unint64_t *)(v1024 + 16);
    do
      v1026 = __ldxr(v1025);
    while (__stxr(v1026 + 1, v1025));
  }
  v1935 = &off_24EC48DF0;
  v1027 = (_QWORD *)operator new();
  *v1027 = &off_24EC50A88;
  v1027[1] = v1023;
  v1027[2] = v1024;
  *(_QWORD *)&v1936 = v1027;
  v1029 = *((_QWORD *)&v1934 + 1);
  v1028 = v1934;
  if (!*((_QWORD *)&v1934 + 1))
  {
    *((_QWORD *)&v1936 + 1) = v1934;
    v1937 = 0;
    if ((_QWORD)v1934)
      v1033 = v1934 + 16;
    else
      v1033 = 0;
    goto LABEL_1647;
  }
  v1030 = (unint64_t *)(*((_QWORD *)&v1934 + 1) + 16);
  do
    v1031 = __ldxr(v1030);
  while (__stxr(v1031 + 1, v1030));
  v1032 = *((_QWORD *)&v1934 + 1);
  *((_QWORD *)&v1936 + 1) = v1028;
  v1937 = v1029;
  if ((_QWORD)v1934)
    v1033 = v1934 + 16;
  else
    v1033 = 0;
  if (!*((_QWORD *)&v1934 + 1))
  {
    v1028 = v1934;
LABEL_1647:
    v1036 = 0;
    v1938 = &off_24EC48D80;
    v1939 = v1033;
    goto LABEL_1648;
  }
  v1034 = (unint64_t *)(*((_QWORD *)&v1934 + 1) + 16);
  do
    v1035 = __ldxr(v1034);
  while (__stxr(v1035 + 1, v1034));
  v1036 = *((_QWORD *)&v1934 + 1);
  v1028 = v1934;
  v1938 = &off_24EC48D80;
  *(_QWORD *)&v1939 = v1033;
  *((_QWORD *)&v1939 + 1) = v1032;
  if (*((_QWORD *)&v1934 + 1))
  {
    v1037 = (unint64_t *)(*((_QWORD *)&v1934 + 1) + 16);
    do
      v1038 = __ldxr(v1037);
    while (__stxr(v1038 + 1, v1037));
  }
LABEL_1648:
  if (v1028)
    v1039 = v1028 + 24;
  else
    v1039 = 0;
  v1940 = &off_24EC2E850;
  *(_QWORD *)&v1941 = v1039;
  *((_QWORD *)&v1941 + 1) = v1036;
  if ((SHIBYTE(v1903[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1916[2]) & 0x80000000) == 0)
      goto LABEL_1653;
LABEL_1656:
    operator delete(v1916[0]);
    v1040 = (std::__shared_weak_count *)v2053[1];
    if (!v2053[1])
      goto LABEL_1661;
    goto LABEL_1657;
  }
  operator delete(v1903[0]);
  if (SHIBYTE(v1916[2]) < 0)
    goto LABEL_1656;
LABEL_1653:
  v1040 = (std::__shared_weak_count *)v2053[1];
  if (!v2053[1])
    goto LABEL_1661;
LABEL_1657:
  v1041 = (unint64_t *)&v1040->__shared_owners_;
  do
    v1042 = __ldaxr(v1041);
  while (__stlxr(v1042 - 1, v1041));
  if (!v1042)
  {
    ((void (*)(std::__shared_weak_count *))v1040->__on_zero_shared)(v1040);
    std::__shared_weak_count::__release_weak(v1040);
  }
LABEL_1661:
  v1043 = (std::__shared_weak_count *)v1838[1];
  if (!v1838[1])
    goto LABEL_1665;
  v1044 = (unint64_t *)((char *)v1838[1] + 8);
  do
    v1045 = __ldaxr(v1044);
  while (__stlxr(v1045 - 1, v1044));
  if (!v1045)
  {
    ((void (*)(std::__shared_weak_count *))v1043->__on_zero_shared)(v1043);
    std::__shared_weak_count::__release_weak(v1043);
    if ((SHIBYTE(v1877[2]) & 0x80000000) == 0)
    {
LABEL_1666:
      if ((SHIBYTE(v1890[2]) & 0x80000000) == 0)
        goto LABEL_1667;
LABEL_1671:
      operator delete(v1890[0]);
      if (v991)
        goto LABEL_1673;
      goto LABEL_1672;
    }
  }
  else
  {
LABEL_1665:
    if ((SHIBYTE(v1877[2]) & 0x80000000) == 0)
      goto LABEL_1666;
  }
  operator delete(v1877[0]);
  if (SHIBYTE(v1890[2]) < 0)
    goto LABEL_1671;
LABEL_1667:
  if (v991)
    goto LABEL_1673;
LABEL_1672:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_1673:
  v1047 = *(void **)v4;
  v1046 = *(unint64_t **)(v4 + 8);
  if (v1046)
  {
    v1048 = v1046 + 1;
    do
      v1049 = __ldxr(v1048);
    while (__stxr(v1049 + 1, v1048));
  }
  v1050 = *v2;
  v1051 = (unint64_t *)v2[1];
  if (*v2)
    v1052 = *v2 + 1008;
  else
    v1052 = 0;
  v1681 = (std::__shared_weak_count *)v2[1];
  if (v1051)
  {
    v1053 = v1051 + 1;
    do
      v1054 = __ldxr(v1053);
    while (__stxr(v1054 + 1, v1053));
  }
  if (*(char *)(v1052 + 31) < 0)
  {
    sub_223197FA4(v1877, *(void **)(v1052 + 8), *(_QWORD *)(v1052 + 16));
  }
  else
  {
    v1055 = *(_OWORD *)(v1052 + 8);
    v1877[2] = *(void **)(v1052 + 24);
    *(_OWORD *)v1877 = v1055;
  }
  if (*(char *)(v1050 + 1063) < 0)
  {
    sub_223197FA4(v1864, *(void **)(v1050 + 1040), *(_QWORD *)(v1050 + 1048));
  }
  else
  {
    *(_OWORD *)v1864 = *(_OWORD *)(v1050 + 1040);
    v1864[2] = *(void **)(v1050 + 1056);
  }
  v2053[0] = v1047;
  v2053[1] = v1046;
  v2052[0] = (void *)v1052;
  v2052[1] = v1051;
  if (v1051)
  {
    v1056 = v1051 + 1;
    do
      v1057 = __ldxr(v1056);
    while (__stxr(v1057 + 1, v1056));
  }
  if (SHIBYTE(v1877[2]) < 0)
  {
    sub_223197FA4(v1903, v1877[0], (unint64_t)v1877[1]);
  }
  else
  {
    *(_OWORD *)v1903 = *(_OWORD *)v1877;
    v1903[2] = v1877[2];
  }
  if (SHIBYTE(v1864[2]) < 0)
  {
    sub_223197FA4(v1890, v1864[0], (unint64_t)v1864[1]);
  }
  else
  {
    *(_OWORD *)v1890 = *(_OWORD *)v1864;
    v1890[2] = v1864[2];
  }
  *(void **)((char *)&v2056 + 7) = *(void **)((char *)&v1877[1] + 7);
  v1058 = v1877[0];
  v1059 = v1877[1];
  BYTE7(v2056) = HIBYTE(v1877[1]);
  v1060 = HIBYTE(v1877[2]);
  memset(v1877, 0, sizeof(v1877));
  v2048[0] = v1059;
  *(void **)((char *)v2048 + 7) = *(void **)((char *)&v2056 + 7);
  *(_QWORD *)((char *)&v2056 + 7) = 0;
  *(_QWORD *)&v2056 = 0;
  v1838[0] = v1047;
  v1838[1] = v1046;
  if (v1046)
  {
    v1061 = v1046 + 1;
    do
      v1062 = __ldxr(v1061);
    while (__stxr(v1062 + 1, v1061));
  }
  v1063 = (char *)operator new();
  v2050[0] = v2048[0];
  *(void **)((char *)v2050 + 7) = *(void **)((char *)v2048 + 7);
  v2048[0] = 0;
  *(void **)((char *)v2048 + 7) = 0;
  v1064 = *(_OWORD *)v1838;
  v1838[0] = 0;
  v1838[1] = 0;
  v1063[8] = 1;
  *((_QWORD *)v1063 + 4) = 0;
  *((_QWORD *)v1063 + 5) = 0;
  *(_QWORD *)v1063 = &off_24EC50B00;
  *((_QWORD *)v1063 + 2) = &unk_24EC50B78;
  *((_QWORD *)v1063 + 3) = &unk_24EC50BB8;
  v1065 = v2050[0];
  *(void **)(v1063 + 63) = *(void **)((char *)v2050 + 7);
  *((_QWORD *)v1063 + 6) = v1058;
  *((_QWORD *)v1063 + 7) = v1065;
  v1063[71] = v1060;
  v2050[0] = 0;
  *(void **)((char *)v2050 + 7) = 0;
  *(_OWORD *)(v1063 + 72) = v1064;
  v1851[1] = 0;
  v1851[0] = 0;
  v1066 = (_QWORD *)operator new();
  *v1066 = &off_24EC50CA0;
  v1066[1] = v1052;
  v1066[2] = v1051;
  v2052[1] = 0;
  v2052[0] = 0;
  *((_QWORD *)v1063 + 18) = 0;
  *((_QWORD *)v1063 + 11) = v1066;
  *((_QWORD *)v1063 + 12) = v1063 + 96;
  *((_QWORD *)v1063 + 13) = v1063 + 96;
  *((_QWORD *)v1063 + 14) = 0;
  *((_QWORD *)v1063 + 15) = v1063 + 120;
  *((_QWORD *)v1063 + 16) = v1063 + 120;
  *((_QWORD *)v1063 + 17) = 0;
  if (!*((_QWORD *)v1063 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v1067 = (std::__shared_weak_count *)operator new();
  v1067->__shared_owners_ = 0;
  v1068 = (unint64_t *)&v1067->__shared_owners_;
  v1067->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC51140;
  v1067->__shared_weak_owners_ = 0;
  v1067[1].__vftable = (std::__shared_weak_count_vtbl *)v1063;
  v1069 = (std::__shared_weak_count *)*((_QWORD *)v1063 + 5);
  if (v1069)
  {
    if (v1069->__shared_owners_ != -1)
      goto LABEL_1715;
    do
      v1070 = __ldxr(v1068);
    while (__stxr(v1070 + 1, v1068));
    v1071 = (unint64_t *)&v1067->__shared_weak_owners_;
    do
      v1072 = __ldxr(v1071);
    while (__stxr(v1072 + 1, v1071));
    *((_QWORD *)v1063 + 4) = v1063;
    *((_QWORD *)v1063 + 5) = v1067;
    std::__shared_weak_count::__release_weak(v1069);
  }
  else
  {
    do
      v1073 = __ldxr(v1068);
    while (__stxr(v1073 + 1, v1068));
    v1074 = (unint64_t *)&v1067->__shared_weak_owners_;
    do
      v1075 = __ldxr(v1074);
    while (__stxr(v1075 + 1, v1074));
    *((_QWORD *)v1063 + 4) = v1063;
    *((_QWORD *)v1063 + 5) = v1067;
  }
  do
    v1076 = __ldaxr(v1068);
  while (__stlxr(v1076 - 1, v1068));
  if (!v1076)
  {
    ((void (*)(std::__shared_weak_count *))v1067->__on_zero_shared)(v1067);
    std::__shared_weak_count::__release_weak(v1067);
  }
LABEL_1715:
  v1077 = (std::__shared_weak_count *)v1851[1];
  if (v1851[1])
  {
    v1078 = (unint64_t *)((char *)v1851[1] + 8);
    do
      v1079 = __ldaxr(v1078);
    while (__stlxr(v1079 - 1, v1078));
    if (!v1079)
    {
      ((void (*)(std::__shared_weak_count *))v1077->__on_zero_shared)(v1077);
      std::__shared_weak_count::__release_weak(v1077);
    }
  }
  v1851[0] = v1063;
  v1851[1] = v1067;
  v1080 = (std::__shared_weak_count *)v1838[1];
  if (v1838[1])
  {
    v1081 = (unint64_t *)((char *)v1838[1] + 8);
    do
      v1082 = __ldaxr(v1081);
    while (__stlxr(v1082 - 1, v1081));
    if (!v1082)
    {
      ((void (*)(std::__shared_weak_count *))v1080->__on_zero_shared)(v1080);
      std::__shared_weak_count::__release_weak(v1080);
    }
  }
  v1083 = *(_OWORD *)v2053;
  v2053[0] = 0;
  v2053[1] = 0;
  *(_OWORD *)&v1916[1] = *(_OWORD *)v1903;
  v1916[0] = &off_24EC48CE8;
  v1917 = v1903[2];
  memset(v1903, 0, sizeof(v1903));
  v1918 = *(_OWORD *)v1890;
  v1084 = v1890[2];
  memset(v1890, 0, sizeof(v1890));
  v1920 = v1083;
  v1838[1] = 0;
  v1838[0] = 0;
  v1085 = v1851[0];
  v1086 = (char *)v1851[1];
  v1919 = v1084;
  v1921 = *(_OWORD *)v1851;
  v1851[0] = 0;
  v1851[1] = 0;
  if (*((_QWORD *)&v1921 + 1))
  {
    v1087 = (unint64_t *)(v1086 + 16);
    do
      v1088 = __ldxr(v1087);
    while (__stxr(v1088 + 1, v1087));
  }
  v1922 = &off_24EC48D18;
  v1089 = (_QWORD *)operator new();
  *v1089 = &off_24EC51190;
  v1089[1] = v1085;
  v1089[2] = v1086;
  *(_QWORD *)&v1923 = v1089;
  v1091 = *((_QWORD *)&v1921 + 1);
  v1090 = v1921;
  if (!*((_QWORD *)&v1921 + 1))
  {
    *((_QWORD *)&v1923 + 1) = v1921;
    v1924 = 0;
    if ((_QWORD)v1921)
      v1095 = v1921 + 16;
    else
      v1095 = 0;
    goto LABEL_1745;
  }
  v1092 = (unint64_t *)(*((_QWORD *)&v1921 + 1) + 16);
  do
    v1093 = __ldxr(v1092);
  while (__stxr(v1093 + 1, v1092));
  v1094 = *((_QWORD *)&v1921 + 1);
  *((_QWORD *)&v1923 + 1) = v1090;
  v1924 = v1091;
  if ((_QWORD)v1921)
    v1095 = v1921 + 16;
  else
    v1095 = 0;
  if (!*((_QWORD *)&v1921 + 1))
  {
    v1090 = v1921;
LABEL_1745:
    v1098 = 0;
    v1925 = &off_24EC2E888;
    v1926 = v1095;
    goto LABEL_1746;
  }
  v1096 = (unint64_t *)(*((_QWORD *)&v1921 + 1) + 16);
  do
    v1097 = __ldxr(v1096);
  while (__stxr(v1097 + 1, v1096));
  v1098 = *((_QWORD *)&v1921 + 1);
  v1090 = v1921;
  v1925 = &off_24EC2E888;
  *(_QWORD *)&v1926 = v1095;
  *((_QWORD *)&v1926 + 1) = v1094;
  if (*((_QWORD *)&v1921 + 1))
  {
    v1099 = (unint64_t *)(*((_QWORD *)&v1921 + 1) + 16);
    do
      v1100 = __ldxr(v1099);
    while (__stxr(v1100 + 1, v1099));
  }
LABEL_1746:
  if (v1090)
    v1101 = v1090 + 24;
  else
    v1101 = 0;
  v1927 = &off_24EC2E850;
  *(_QWORD *)&v1928 = v1101;
  *((_QWORD *)&v1928 + 1) = v1098;
  if ((SHIBYTE(v1890[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1903[2]) & 0x80000000) == 0)
      goto LABEL_1751;
LABEL_1754:
    operator delete(v1903[0]);
    v1102 = (std::__shared_weak_count *)v2052[1];
    if (!v2052[1])
      goto LABEL_1759;
    goto LABEL_1755;
  }
  operator delete(v1890[0]);
  if (SHIBYTE(v1903[2]) < 0)
    goto LABEL_1754;
LABEL_1751:
  v1102 = (std::__shared_weak_count *)v2052[1];
  if (!v2052[1])
    goto LABEL_1759;
LABEL_1755:
  v1103 = (unint64_t *)&v1102->__shared_owners_;
  do
    v1104 = __ldaxr(v1103);
  while (__stlxr(v1104 - 1, v1103));
  if (!v1104)
  {
    ((void (*)(std::__shared_weak_count *))v1102->__on_zero_shared)(v1102);
    std::__shared_weak_count::__release_weak(v1102);
  }
LABEL_1759:
  v1105 = (std::__shared_weak_count *)v2053[1];
  if (!v2053[1])
    goto LABEL_1763;
  v1106 = (unint64_t *)((char *)v2053[1] + 8);
  do
    v1107 = __ldaxr(v1106);
  while (__stlxr(v1107 - 1, v1106));
  if (!v1107)
  {
    ((void (*)(std::__shared_weak_count *))v1105->__on_zero_shared)(v1105);
    std::__shared_weak_count::__release_weak(v1105);
    if ((SHIBYTE(v1864[2]) & 0x80000000) == 0)
    {
LABEL_1764:
      if ((SHIBYTE(v1877[2]) & 0x80000000) == 0)
        goto LABEL_1765;
LABEL_1769:
      operator delete(v1877[0]);
      if (v1052)
        goto LABEL_1771;
      goto LABEL_1770;
    }
  }
  else
  {
LABEL_1763:
    if ((SHIBYTE(v1864[2]) & 0x80000000) == 0)
      goto LABEL_1764;
  }
  operator delete(v1864[0]);
  if (SHIBYTE(v1877[2]) < 0)
    goto LABEL_1769;
LABEL_1765:
  if (v1052)
    goto LABEL_1771;
LABEL_1770:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_1771:
  v1109 = *(void **)v4;
  v1108 = *(unint64_t **)(v4 + 8);
  if (v1108)
  {
    v1110 = v1108 + 1;
    do
      v1111 = __ldxr(v1110);
    while (__stxr(v1111 + 1, v1110));
  }
  v1112 = (unint64_t *)v2[1];
  if (*v2)
    v1113 = *v2 + 1064;
  else
    v1113 = 0;
  v1680 = (std::__shared_weak_count *)v2[1];
  if (v1112)
  {
    v1114 = v1112 + 1;
    do
      v1115 = __ldxr(v1114);
    while (__stxr(v1115 + 1, v1114));
  }
  if (*(char *)(v1113 + 31) < 0)
  {
    sub_223197FA4(v1864, *(void **)(v1113 + 8), *(_QWORD *)(v1113 + 16));
  }
  else
  {
    v1116 = *(_OWORD *)(v1113 + 8);
    v1864[2] = *(void **)(v1113 + 24);
    *(_OWORD *)v1864 = v1116;
  }
  if (*(char *)(v1113 + 55) < 0)
  {
    sub_223197FA4(v1851, *(void **)(v1113 + 32), *(_QWORD *)(v1113 + 40));
  }
  else
  {
    *(_OWORD *)v1851 = *(_OWORD *)(v1113 + 32);
    v1851[2] = *(void **)(v1113 + 48);
  }
  v2052[0] = v1109;
  v2052[1] = v1108;
  v2050[0] = (void *)v1113;
  v2050[1] = v1112;
  if (v1112)
  {
    v1117 = v1112 + 1;
    do
      v1118 = __ldxr(v1117);
    while (__stxr(v1118 + 1, v1117));
  }
  if (SHIBYTE(v1864[2]) < 0)
  {
    sub_223197FA4(v1890, v1864[0], (unint64_t)v1864[1]);
  }
  else
  {
    *(_OWORD *)v1890 = *(_OWORD *)v1864;
    v1890[2] = v1864[2];
  }
  if (SHIBYTE(v1851[2]) < 0)
  {
    sub_223197FA4(v1877, v1851[0], (unint64_t)v1851[1]);
  }
  else
  {
    *(_OWORD *)v1877 = *(_OWORD *)v1851;
    v1877[2] = v1851[2];
  }
  *(void **)((char *)&v2054 + 7) = *(void **)((char *)&v1864[1] + 7);
  v1119 = v1864[0];
  v1120 = v1864[1];
  BYTE7(v2054) = HIBYTE(v1864[1]);
  v1121 = HIBYTE(v1864[2]);
  memset(v1864, 0, sizeof(v1864));
  *(_QWORD *)&v2056 = v1120;
  *(_QWORD *)((char *)&v2056 + 7) = *(_QWORD *)((char *)&v2054 + 7);
  *(_QWORD *)((char *)&v2054 + 7) = 0;
  *(_QWORD *)&v2054 = 0;
  v2053[0] = v1109;
  v2053[1] = v1108;
  if (v1108)
  {
    v1122 = v1108 + 1;
    do
      v1123 = __ldxr(v1122);
    while (__stxr(v1123 + 1, v1122));
  }
  v1124 = (char *)operator new();
  v2048[0] = (void *)v2056;
  *(void **)((char *)v2048 + 7) = *(void **)((char *)&v2056 + 7);
  *(_QWORD *)&v2056 = 0;
  *(_QWORD *)((char *)&v2056 + 7) = 0;
  v1125 = *(_OWORD *)v2053;
  v2053[0] = 0;
  v2053[1] = 0;
  v1124[8] = 1;
  *((_QWORD *)v1124 + 4) = 0;
  *((_QWORD *)v1124 + 5) = 0;
  *(_QWORD *)v1124 = &off_24EC51208;
  *((_QWORD *)v1124 + 2) = &unk_24EC51280;
  *((_QWORD *)v1124 + 3) = &unk_24EC512C0;
  v1126 = v2048[0];
  *(void **)(v1124 + 63) = *(void **)((char *)v2048 + 7);
  *((_QWORD *)v1124 + 6) = v1119;
  *((_QWORD *)v1124 + 7) = v1126;
  v1124[71] = v1121;
  v2048[0] = 0;
  *(void **)((char *)v2048 + 7) = 0;
  *(_OWORD *)(v1124 + 72) = v1125;
  v1838[1] = 0;
  v1838[0] = 0;
  v1127 = (_QWORD *)operator new();
  *v1127 = &off_24EC513A8;
  v1127[1] = v1113;
  v1127[2] = v1112;
  v2050[1] = 0;
  v2050[0] = 0;
  *((_QWORD *)v1124 + 18) = 0;
  *((_QWORD *)v1124 + 11) = v1127;
  *((_QWORD *)v1124 + 12) = v1124 + 96;
  *((_QWORD *)v1124 + 13) = v1124 + 96;
  *((_QWORD *)v1124 + 14) = 0;
  *((_QWORD *)v1124 + 15) = v1124 + 120;
  *((_QWORD *)v1124 + 16) = v1124 + 120;
  *((_QWORD *)v1124 + 17) = 0;
  if (!*((_QWORD *)v1124 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v1128 = (std::__shared_weak_count *)operator new();
  v1128->__shared_owners_ = 0;
  v1129 = (unint64_t *)&v1128->__shared_owners_;
  v1128->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC51848;
  v1128->__shared_weak_owners_ = 0;
  v1128[1].__vftable = (std::__shared_weak_count_vtbl *)v1124;
  v1130 = (std::__shared_weak_count *)*((_QWORD *)v1124 + 5);
  if (v1130)
  {
    if (v1130->__shared_owners_ != -1)
      goto LABEL_1813;
    do
      v1131 = __ldxr(v1129);
    while (__stxr(v1131 + 1, v1129));
    v1132 = (unint64_t *)&v1128->__shared_weak_owners_;
    do
      v1133 = __ldxr(v1132);
    while (__stxr(v1133 + 1, v1132));
    *((_QWORD *)v1124 + 4) = v1124;
    *((_QWORD *)v1124 + 5) = v1128;
    std::__shared_weak_count::__release_weak(v1130);
  }
  else
  {
    do
      v1134 = __ldxr(v1129);
    while (__stxr(v1134 + 1, v1129));
    v1135 = (unint64_t *)&v1128->__shared_weak_owners_;
    do
      v1136 = __ldxr(v1135);
    while (__stxr(v1136 + 1, v1135));
    *((_QWORD *)v1124 + 4) = v1124;
    *((_QWORD *)v1124 + 5) = v1128;
  }
  do
    v1137 = __ldaxr(v1129);
  while (__stlxr(v1137 - 1, v1129));
  if (!v1137)
  {
    ((void (*)(std::__shared_weak_count *))v1128->__on_zero_shared)(v1128);
    std::__shared_weak_count::__release_weak(v1128);
  }
LABEL_1813:
  v1138 = (std::__shared_weak_count *)v1838[1];
  if (v1838[1])
  {
    v1139 = (unint64_t *)((char *)v1838[1] + 8);
    do
      v1140 = __ldaxr(v1139);
    while (__stlxr(v1140 - 1, v1139));
    if (!v1140)
    {
      ((void (*)(std::__shared_weak_count *))v1138->__on_zero_shared)(v1138);
      std::__shared_weak_count::__release_weak(v1138);
    }
  }
  v1838[0] = v1124;
  v1838[1] = v1128;
  v1141 = (std::__shared_weak_count *)v2053[1];
  if (v2053[1])
  {
    v1142 = (unint64_t *)((char *)v2053[1] + 8);
    do
      v1143 = __ldaxr(v1142);
    while (__stlxr(v1143 - 1, v1142));
    if (!v1143)
    {
      ((void (*)(std::__shared_weak_count *))v1141->__on_zero_shared)(v1141);
      std::__shared_weak_count::__release_weak(v1141);
    }
  }
  v1144 = *(_OWORD *)v2052;
  v2052[0] = 0;
  v2052[1] = 0;
  *(_OWORD *)&v1903[1] = *(_OWORD *)v1890;
  v1903[0] = &off_24EC48C80;
  v1904 = v1890[2];
  memset(v1890, 0, sizeof(v1890));
  v1905 = *(_OWORD *)v1877;
  v1145 = v1877[2];
  memset(v1877, 0, sizeof(v1877));
  v1907 = v1144;
  v2053[1] = 0;
  v2053[0] = 0;
  v1146 = v1838[0];
  v1147 = (char *)v1838[1];
  v1906 = v1145;
  v1908 = *(_OWORD *)v1838;
  v1838[0] = 0;
  v1838[1] = 0;
  if (*((_QWORD *)&v1908 + 1))
  {
    v1148 = (unint64_t *)(v1147 + 16);
    do
      v1149 = __ldxr(v1148);
    while (__stxr(v1149 + 1, v1148));
  }
  v1909 = &off_24EC48CB0;
  v1150 = (_QWORD *)operator new();
  *v1150 = &off_24EC51898;
  v1150[1] = v1146;
  v1150[2] = v1147;
  *(_QWORD *)&v1910 = v1150;
  v1152 = *((_QWORD *)&v1908 + 1);
  v1151 = v1908;
  if (!*((_QWORD *)&v1908 + 1))
  {
    *((_QWORD *)&v1910 + 1) = v1908;
    v1911 = 0;
    if ((_QWORD)v1908)
      v1156 = v1908 + 16;
    else
      v1156 = 0;
    goto LABEL_1843;
  }
  v1153 = (unint64_t *)(*((_QWORD *)&v1908 + 1) + 16);
  do
    v1154 = __ldxr(v1153);
  while (__stxr(v1154 + 1, v1153));
  v1155 = *((_QWORD *)&v1908 + 1);
  *((_QWORD *)&v1910 + 1) = v1151;
  v1911 = v1152;
  if ((_QWORD)v1908)
    v1156 = v1908 + 16;
  else
    v1156 = 0;
  if (!*((_QWORD *)&v1908 + 1))
  {
    v1151 = v1908;
LABEL_1843:
    v1159 = 0;
    v1912 = &off_24EC2E888;
    v1913 = v1156;
    goto LABEL_1844;
  }
  v1157 = (unint64_t *)(*((_QWORD *)&v1908 + 1) + 16);
  do
    v1158 = __ldxr(v1157);
  while (__stxr(v1158 + 1, v1157));
  v1159 = *((_QWORD *)&v1908 + 1);
  v1151 = v1908;
  v1912 = &off_24EC2E888;
  *(_QWORD *)&v1913 = v1156;
  *((_QWORD *)&v1913 + 1) = v1155;
  if (*((_QWORD *)&v1908 + 1))
  {
    v1160 = (unint64_t *)(*((_QWORD *)&v1908 + 1) + 16);
    do
      v1161 = __ldxr(v1160);
    while (__stxr(v1161 + 1, v1160));
  }
LABEL_1844:
  if (v1151)
    v1162 = v1151 + 24;
  else
    v1162 = 0;
  v1914 = &off_24EC2E850;
  *(_QWORD *)&v1915 = v1162;
  *((_QWORD *)&v1915 + 1) = v1159;
  if ((SHIBYTE(v1877[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1890[2]) & 0x80000000) == 0)
      goto LABEL_1849;
LABEL_1852:
    operator delete(v1890[0]);
    v1163 = (std::__shared_weak_count *)v2050[1];
    if (!v2050[1])
      goto LABEL_1857;
    goto LABEL_1853;
  }
  operator delete(v1877[0]);
  if (SHIBYTE(v1890[2]) < 0)
    goto LABEL_1852;
LABEL_1849:
  v1163 = (std::__shared_weak_count *)v2050[1];
  if (!v2050[1])
    goto LABEL_1857;
LABEL_1853:
  v1164 = (unint64_t *)&v1163->__shared_owners_;
  do
    v1165 = __ldaxr(v1164);
  while (__stlxr(v1165 - 1, v1164));
  if (!v1165)
  {
    ((void (*)(std::__shared_weak_count *))v1163->__on_zero_shared)(v1163);
    std::__shared_weak_count::__release_weak(v1163);
  }
LABEL_1857:
  v1166 = (std::__shared_weak_count *)v2052[1];
  if (!v2052[1])
    goto LABEL_1861;
  v1167 = (unint64_t *)((char *)v2052[1] + 8);
  do
    v1168 = __ldaxr(v1167);
  while (__stlxr(v1168 - 1, v1167));
  if (!v1168)
  {
    ((void (*)(std::__shared_weak_count *))v1166->__on_zero_shared)(v1166);
    std::__shared_weak_count::__release_weak(v1166);
    if ((SHIBYTE(v1851[2]) & 0x80000000) == 0)
    {
LABEL_1862:
      if ((SHIBYTE(v1864[2]) & 0x80000000) == 0)
        goto LABEL_1863;
LABEL_1867:
      operator delete(v1864[0]);
      if (v1113)
        goto LABEL_1869;
      goto LABEL_1868;
    }
  }
  else
  {
LABEL_1861:
    if ((SHIBYTE(v1851[2]) & 0x80000000) == 0)
      goto LABEL_1862;
  }
  operator delete(v1851[0]);
  if (SHIBYTE(v1864[2]) < 0)
    goto LABEL_1867;
LABEL_1863:
  if (v1113)
    goto LABEL_1869;
LABEL_1868:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_1869:
  v1170 = *(void **)v4;
  v1169 = *(unint64_t **)(v4 + 8);
  if (v1169)
  {
    v1171 = v1169 + 1;
    do
      v1172 = __ldxr(v1171);
    while (__stxr(v1172 + 1, v1171));
  }
  v1173 = (unint64_t *)v2[1];
  if (*v2)
    v1174 = *v2 + 1120;
  else
    v1174 = 0;
  v1679 = (std::__shared_weak_count *)v2[1];
  if (v1173)
  {
    v1175 = v1173 + 1;
    do
      v1176 = __ldxr(v1175);
    while (__stxr(v1176 + 1, v1175));
  }
  if (*(char *)(v1174 + 31) < 0)
  {
    sub_223197FA4(v1851, *(void **)(v1174 + 8), *(_QWORD *)(v1174 + 16));
  }
  else
  {
    v1177 = *(_OWORD *)(v1174 + 8);
    v1851[2] = *(void **)(v1174 + 24);
    *(_OWORD *)v1851 = v1177;
  }
  if (*(char *)(v1174 + 55) < 0)
  {
    sub_223197FA4(v1838, *(void **)(v1174 + 32), *(_QWORD *)(v1174 + 40));
  }
  else
  {
    *(_OWORD *)v1838 = *(_OWORD *)(v1174 + 32);
    v1838[2] = *(void **)(v1174 + 48);
  }
  v2050[0] = v1170;
  v2050[1] = v1169;
  v2048[0] = (void *)v1174;
  v2048[1] = v1173;
  if (v1173)
  {
    v1178 = v1173 + 1;
    do
      v1179 = __ldxr(v1178);
    while (__stxr(v1179 + 1, v1178));
  }
  if (SHIBYTE(v1851[2]) < 0)
  {
    sub_223197FA4(v1877, v1851[0], (unint64_t)v1851[1]);
  }
  else
  {
    *(_OWORD *)v1877 = *(_OWORD *)v1851;
    v1877[2] = v1851[2];
  }
  if (SHIBYTE(v1838[2]) < 0)
  {
    sub_223197FA4(v1864, v1838[0], (unint64_t)v1838[1]);
  }
  else
  {
    *(_OWORD *)v1864 = *(_OWORD *)v1838;
    v1864[2] = v1838[2];
  }
  *(void **)((char *)&v2047 + 7) = *(void **)((char *)&v1851[1] + 7);
  v1180 = v1851[0];
  *(void **)&v2047 = v1851[1];
  v1181 = HIBYTE(v1851[2]);
  memset(v1851, 0, sizeof(v1851));
  *(_QWORD *)&v2054 = v2047;
  *(_QWORD *)((char *)&v2054 + 7) = *(_QWORD *)((char *)&v2047 + 7);
  *(_QWORD *)((char *)&v2047 + 7) = 0;
  *(_QWORD *)&v2047 = 0;
  v2052[0] = v1170;
  v2052[1] = v1169;
  if (v1169)
  {
    v1182 = v1169 + 1;
    do
      v1183 = __ldxr(v1182);
    while (__stxr(v1183 + 1, v1182));
  }
  v1184 = (char *)operator new();
  *(_QWORD *)&v2056 = v2054;
  *(_QWORD *)((char *)&v2056 + 7) = *(_QWORD *)((char *)&v2054 + 7);
  *(_QWORD *)&v2054 = 0;
  *(_QWORD *)((char *)&v2054 + 7) = 0;
  v1185 = *(_OWORD *)v2052;
  v2052[0] = 0;
  v2052[1] = 0;
  v1184[8] = 1;
  *((_QWORD *)v1184 + 4) = 0;
  *((_QWORD *)v1184 + 5) = 0;
  *(_QWORD *)v1184 = &off_24EC51910;
  *((_QWORD *)v1184 + 2) = &unk_24EC51988;
  *((_QWORD *)v1184 + 3) = &unk_24EC519C8;
  v1186 = v2056;
  *(_QWORD *)(v1184 + 63) = *(_QWORD *)((char *)&v2056 + 7);
  *((_QWORD *)v1184 + 6) = v1180;
  *((_QWORD *)v1184 + 7) = v1186;
  v1184[71] = v1181;
  *(_QWORD *)&v2056 = 0;
  *(_QWORD *)((char *)&v2056 + 7) = 0;
  *(_OWORD *)(v1184 + 72) = v1185;
  v2053[1] = 0;
  v2053[0] = 0;
  v1187 = (_QWORD *)operator new();
  *v1187 = &off_24EC51AB0;
  v1187[1] = v1174;
  v1187[2] = v1173;
  v2048[1] = 0;
  v2048[0] = 0;
  *((_QWORD *)v1184 + 18) = 0;
  *((_QWORD *)v1184 + 11) = v1187;
  *((_QWORD *)v1184 + 12) = v1184 + 96;
  *((_QWORD *)v1184 + 13) = v1184 + 96;
  *((_QWORD *)v1184 + 14) = 0;
  *((_QWORD *)v1184 + 15) = v1184 + 120;
  *((_QWORD *)v1184 + 16) = v1184 + 120;
  *((_QWORD *)v1184 + 17) = 0;
  if (!*((_QWORD *)v1184 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v1188 = (std::__shared_weak_count *)operator new();
  v1188->__shared_owners_ = 0;
  v1189 = (unint64_t *)&v1188->__shared_owners_;
  v1188->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC51F50;
  v1188->__shared_weak_owners_ = 0;
  v1188[1].__vftable = (std::__shared_weak_count_vtbl *)v1184;
  v1190 = (std::__shared_weak_count *)*((_QWORD *)v1184 + 5);
  if (v1190)
  {
    if (v1190->__shared_owners_ != -1)
      goto LABEL_1911;
    do
      v1191 = __ldxr(v1189);
    while (__stxr(v1191 + 1, v1189));
    v1192 = (unint64_t *)&v1188->__shared_weak_owners_;
    do
      v1193 = __ldxr(v1192);
    while (__stxr(v1193 + 1, v1192));
    *((_QWORD *)v1184 + 4) = v1184;
    *((_QWORD *)v1184 + 5) = v1188;
    std::__shared_weak_count::__release_weak(v1190);
  }
  else
  {
    do
      v1194 = __ldxr(v1189);
    while (__stxr(v1194 + 1, v1189));
    v1195 = (unint64_t *)&v1188->__shared_weak_owners_;
    do
      v1196 = __ldxr(v1195);
    while (__stxr(v1196 + 1, v1195));
    *((_QWORD *)v1184 + 4) = v1184;
    *((_QWORD *)v1184 + 5) = v1188;
  }
  do
    v1197 = __ldaxr(v1189);
  while (__stlxr(v1197 - 1, v1189));
  if (!v1197)
  {
    ((void (*)(std::__shared_weak_count *))v1188->__on_zero_shared)(v1188);
    std::__shared_weak_count::__release_weak(v1188);
  }
LABEL_1911:
  v1198 = (std::__shared_weak_count *)v2053[1];
  if (v2053[1])
  {
    v1199 = (unint64_t *)((char *)v2053[1] + 8);
    do
      v1200 = __ldaxr(v1199);
    while (__stlxr(v1200 - 1, v1199));
    if (!v1200)
    {
      ((void (*)(std::__shared_weak_count *))v1198->__on_zero_shared)(v1198);
      std::__shared_weak_count::__release_weak(v1198);
    }
  }
  v2053[0] = v1184;
  v2053[1] = v1188;
  v1201 = (std::__shared_weak_count *)v2052[1];
  if (v2052[1])
  {
    v1202 = (unint64_t *)((char *)v2052[1] + 8);
    do
      v1203 = __ldaxr(v1202);
    while (__stlxr(v1203 - 1, v1202));
    if (!v1203)
    {
      ((void (*)(std::__shared_weak_count *))v1201->__on_zero_shared)(v1201);
      std::__shared_weak_count::__release_weak(v1201);
    }
  }
  v1204 = *(_OWORD *)v2050;
  v2050[0] = 0;
  v2050[1] = 0;
  *(_OWORD *)&v1890[1] = *(_OWORD *)v1877;
  v1890[0] = &off_24EC48C18;
  v1891 = v1877[2];
  memset(v1877, 0, sizeof(v1877));
  v1892 = *(_OWORD *)v1864;
  v1205 = v1864[2];
  memset(v1864, 0, sizeof(v1864));
  v1894 = v1204;
  v2052[1] = 0;
  v2052[0] = 0;
  v1206 = v2053[0];
  v1207 = (char *)v2053[1];
  v1893 = v1205;
  v1895 = *(_OWORD *)v2053;
  v2053[0] = 0;
  v2053[1] = 0;
  if (*((_QWORD *)&v1895 + 1))
  {
    v1208 = (unint64_t *)(v1207 + 16);
    do
      v1209 = __ldxr(v1208);
    while (__stxr(v1209 + 1, v1208));
  }
  v1896 = &off_24EC48C48;
  v1210 = (_QWORD *)operator new();
  *v1210 = &off_24EC51FA0;
  v1210[1] = v1206;
  v1210[2] = v1207;
  *(_QWORD *)&v1897 = v1210;
  v1212 = *((_QWORD *)&v1895 + 1);
  v1211 = v1895;
  if (!*((_QWORD *)&v1895 + 1))
  {
    *((_QWORD *)&v1897 + 1) = v1895;
    v1898 = 0;
    if ((_QWORD)v1895)
      v1216 = v1895 + 16;
    else
      v1216 = 0;
    goto LABEL_1941;
  }
  v1213 = (unint64_t *)(*((_QWORD *)&v1895 + 1) + 16);
  do
    v1214 = __ldxr(v1213);
  while (__stxr(v1214 + 1, v1213));
  v1215 = *((_QWORD *)&v1895 + 1);
  *((_QWORD *)&v1897 + 1) = v1211;
  v1898 = v1212;
  if ((_QWORD)v1895)
    v1216 = v1895 + 16;
  else
    v1216 = 0;
  if (!*((_QWORD *)&v1895 + 1))
  {
    v1211 = v1895;
LABEL_1941:
    v1219 = 0;
    v1899 = &off_24EC2E888;
    v1900 = v1216;
    goto LABEL_1942;
  }
  v1217 = (unint64_t *)(*((_QWORD *)&v1895 + 1) + 16);
  do
    v1218 = __ldxr(v1217);
  while (__stxr(v1218 + 1, v1217));
  v1219 = *((_QWORD *)&v1895 + 1);
  v1211 = v1895;
  v1899 = &off_24EC2E888;
  *(_QWORD *)&v1900 = v1216;
  *((_QWORD *)&v1900 + 1) = v1215;
  if (*((_QWORD *)&v1895 + 1))
  {
    v1220 = (unint64_t *)(*((_QWORD *)&v1895 + 1) + 16);
    do
      v1221 = __ldxr(v1220);
    while (__stxr(v1221 + 1, v1220));
  }
LABEL_1942:
  if (v1211)
    v1222 = v1211 + 24;
  else
    v1222 = 0;
  v1901 = &off_24EC2E850;
  *(_QWORD *)&v1902 = v1222;
  *((_QWORD *)&v1902 + 1) = v1219;
  if ((SHIBYTE(v1864[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1877[2]) & 0x80000000) == 0)
      goto LABEL_1947;
LABEL_1950:
    operator delete(v1877[0]);
    v1223 = (std::__shared_weak_count *)v2048[1];
    if (!v2048[1])
      goto LABEL_1955;
    goto LABEL_1951;
  }
  operator delete(v1864[0]);
  if (SHIBYTE(v1877[2]) < 0)
    goto LABEL_1950;
LABEL_1947:
  v1223 = (std::__shared_weak_count *)v2048[1];
  if (!v2048[1])
    goto LABEL_1955;
LABEL_1951:
  v1224 = (unint64_t *)&v1223->__shared_owners_;
  do
    v1225 = __ldaxr(v1224);
  while (__stlxr(v1225 - 1, v1224));
  if (!v1225)
  {
    ((void (*)(std::__shared_weak_count *))v1223->__on_zero_shared)(v1223);
    std::__shared_weak_count::__release_weak(v1223);
  }
LABEL_1955:
  v1226 = (std::__shared_weak_count *)v2050[1];
  if (!v2050[1])
    goto LABEL_1959;
  v1227 = (unint64_t *)((char *)v2050[1] + 8);
  do
    v1228 = __ldaxr(v1227);
  while (__stlxr(v1228 - 1, v1227));
  if (!v1228)
  {
    ((void (*)(std::__shared_weak_count *))v1226->__on_zero_shared)(v1226);
    std::__shared_weak_count::__release_weak(v1226);
    if ((SHIBYTE(v1838[2]) & 0x80000000) == 0)
    {
LABEL_1960:
      if ((SHIBYTE(v1851[2]) & 0x80000000) == 0)
        goto LABEL_1961;
LABEL_1965:
      operator delete(v1851[0]);
      if (v1174)
        goto LABEL_1967;
      goto LABEL_1966;
    }
  }
  else
  {
LABEL_1959:
    if ((SHIBYTE(v1838[2]) & 0x80000000) == 0)
      goto LABEL_1960;
  }
  operator delete(v1838[0]);
  if (SHIBYTE(v1851[2]) < 0)
    goto LABEL_1965;
LABEL_1961:
  if (v1174)
    goto LABEL_1967;
LABEL_1966:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_1967:
  v1230 = *(void **)v4;
  v1229 = *(unint64_t **)(v4 + 8);
  if (v1229)
  {
    v1231 = v1229 + 1;
    do
      v1232 = __ldxr(v1231);
    while (__stxr(v1232 + 1, v1231));
  }
  v1233 = v2[1];
  if (*v2)
    v1234 = *v2 + 1176;
  else
    v1234 = 0;
  v1677 = v1234;
  v1678 = (std::__shared_weak_count *)v2[1];
  if (v1233)
  {
    v1235 = (unint64_t *)(v1233 + 8);
    do
      v1236 = __ldxr(v1235);
    while (__stxr(v1236 + 1, v1235));
  }
  if (*(char *)(v1234 + 31) < 0)
  {
    sub_223197FA4(v1838, *(void **)(v1234 + 8), *(_QWORD *)(v1234 + 16));
  }
  else
  {
    v1237 = *(_OWORD *)(v1234 + 8);
    v1838[2] = *(void **)(v1234 + 24);
    *(_OWORD *)v1838 = v1237;
  }
  if (*(char *)(v1234 + 55) < 0)
  {
    sub_223197FA4(v2053, *(void **)(v1234 + 32), *(_QWORD *)(v1234 + 40));
  }
  else
  {
    *(_OWORD *)v2053 = *(_OWORD *)(v1234 + 32);
    v2053[2] = *(void **)(v1234 + 48);
  }
  v2048[0] = v1230;
  v2048[1] = v1229;
  *(_QWORD *)&v2056 = v1234;
  *((_QWORD *)&v2056 + 1) = v1233;
  if (v1233)
  {
    v1238 = (unint64_t *)(v1233 + 8);
    do
      v1239 = __ldxr(v1238);
    while (__stxr(v1239 + 1, v1238));
  }
  if (SHIBYTE(v1838[2]) < 0)
  {
    sub_223197FA4(v1864, v1838[0], (unint64_t)v1838[1]);
  }
  else
  {
    *(_OWORD *)v1864 = *(_OWORD *)v1838;
    v1864[2] = v1838[2];
  }
  if (SHIBYTE(v2053[2]) < 0)
  {
    sub_223197FA4(v1851, v2053[0], (unint64_t)v2053[1]);
  }
  else
  {
    *(_OWORD *)v1851 = *(_OWORD *)v2053;
    v1851[2] = v2053[2];
  }
  *(void **)((char *)&v2046 + 7) = *(void **)((char *)&v1838[1] + 7);
  v1240 = v1838[0];
  *(void **)&v2046 = v1838[1];
  v1241 = HIBYTE(v1838[2]);
  memset(v1838, 0, sizeof(v1838));
  *(_QWORD *)&v2047 = v2046;
  *(_QWORD *)((char *)&v2047 + 7) = *(_QWORD *)((char *)&v2046 + 7);
  *(_QWORD *)((char *)&v2046 + 7) = 0;
  *(_QWORD *)&v2046 = 0;
  v2050[0] = v1230;
  v2050[1] = v1229;
  if (v1229)
  {
    v1242 = v1229 + 1;
    do
      v1243 = __ldxr(v1242);
    while (__stxr(v1243 + 1, v1242));
  }
  v1244 = (char *)operator new();
  *(_QWORD *)&v2054 = v2047;
  *(_QWORD *)((char *)&v2054 + 7) = *(_QWORD *)((char *)&v2047 + 7);
  *(_QWORD *)&v2047 = 0;
  *(_QWORD *)((char *)&v2047 + 7) = 0;
  v1245 = *(_OWORD *)v2050;
  v2050[0] = 0;
  v2050[1] = 0;
  v1244[8] = 1;
  *((_QWORD *)v1244 + 4) = 0;
  *((_QWORD *)v1244 + 5) = 0;
  *(_QWORD *)v1244 = &off_24EC52018;
  *((_QWORD *)v1244 + 2) = &unk_24EC52090;
  *((_QWORD *)v1244 + 3) = &unk_24EC520D0;
  v1246 = v2054;
  *(_QWORD *)(v1244 + 63) = *(_QWORD *)((char *)&v2054 + 7);
  *((_QWORD *)v1244 + 6) = v1240;
  *((_QWORD *)v1244 + 7) = v1246;
  v1244[71] = v1241;
  *(_QWORD *)&v2054 = 0;
  *(_QWORD *)((char *)&v2054 + 7) = 0;
  *(_OWORD *)(v1244 + 72) = v1245;
  v2052[1] = 0;
  v2052[0] = 0;
  v1247 = (_QWORD *)operator new();
  *v1247 = &off_24EC521B8;
  v1247[1] = v1234;
  v1247[2] = v1233;
  v2056 = 0uLL;
  *((_QWORD *)v1244 + 18) = 0;
  *((_QWORD *)v1244 + 11) = v1247;
  *((_QWORD *)v1244 + 12) = v1244 + 96;
  *((_QWORD *)v1244 + 13) = v1244 + 96;
  *((_QWORD *)v1244 + 14) = 0;
  *((_QWORD *)v1244 + 15) = v1244 + 120;
  *((_QWORD *)v1244 + 16) = v1244 + 120;
  *((_QWORD *)v1244 + 17) = 0;
  if (!*((_QWORD *)v1244 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v1248 = (std::__shared_weak_count *)operator new();
  v1248->__shared_owners_ = 0;
  v1249 = (unint64_t *)&v1248->__shared_owners_;
  v1248->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC52658;
  v1248->__shared_weak_owners_ = 0;
  v1248[1].__vftable = (std::__shared_weak_count_vtbl *)v1244;
  v1250 = (std::__shared_weak_count *)*((_QWORD *)v1244 + 5);
  if (v1250)
  {
    if (v1250->__shared_owners_ != -1)
      goto LABEL_2009;
    do
      v1251 = __ldxr(v1249);
    while (__stxr(v1251 + 1, v1249));
    v1252 = (unint64_t *)&v1248->__shared_weak_owners_;
    do
      v1253 = __ldxr(v1252);
    while (__stxr(v1253 + 1, v1252));
    *((_QWORD *)v1244 + 4) = v1244;
    *((_QWORD *)v1244 + 5) = v1248;
    std::__shared_weak_count::__release_weak(v1250);
  }
  else
  {
    do
      v1254 = __ldxr(v1249);
    while (__stxr(v1254 + 1, v1249));
    v1255 = (unint64_t *)&v1248->__shared_weak_owners_;
    do
      v1256 = __ldxr(v1255);
    while (__stxr(v1256 + 1, v1255));
    *((_QWORD *)v1244 + 4) = v1244;
    *((_QWORD *)v1244 + 5) = v1248;
  }
  do
    v1257 = __ldaxr(v1249);
  while (__stlxr(v1257 - 1, v1249));
  if (!v1257)
  {
    ((void (*)(std::__shared_weak_count *))v1248->__on_zero_shared)(v1248);
    std::__shared_weak_count::__release_weak(v1248);
  }
LABEL_2009:
  v1258 = (std::__shared_weak_count *)v2052[1];
  if (v2052[1])
  {
    v1259 = (unint64_t *)((char *)v2052[1] + 8);
    do
      v1260 = __ldaxr(v1259);
    while (__stlxr(v1260 - 1, v1259));
    if (!v1260)
    {
      ((void (*)(std::__shared_weak_count *))v1258->__on_zero_shared)(v1258);
      std::__shared_weak_count::__release_weak(v1258);
    }
  }
  v2052[0] = v1244;
  v2052[1] = v1248;
  v1261 = (std::__shared_weak_count *)v2050[1];
  if (v2050[1])
  {
    v1262 = (unint64_t *)((char *)v2050[1] + 8);
    do
      v1263 = __ldaxr(v1262);
    while (__stlxr(v1263 - 1, v1262));
    if (!v1263)
    {
      ((void (*)(std::__shared_weak_count *))v1261->__on_zero_shared)(v1261);
      std::__shared_weak_count::__release_weak(v1261);
    }
  }
  v1264 = *(_OWORD *)v2048;
  v2048[0] = 0;
  v2048[1] = 0;
  *(_OWORD *)&v1877[1] = *(_OWORD *)v1864;
  v1877[0] = &off_24EC48BB0;
  v1878 = v1864[2];
  memset(v1864, 0, sizeof(v1864));
  v1879 = *(_OWORD *)v1851;
  v1265 = v1851[2];
  memset(v1851, 0, sizeof(v1851));
  v1881 = v1264;
  v2050[1] = 0;
  v2050[0] = 0;
  v1266 = v2052[0];
  v1267 = (char *)v2052[1];
  v1880 = v1265;
  v1882 = *(_OWORD *)v2052;
  v2052[0] = 0;
  v2052[1] = 0;
  if (*((_QWORD *)&v1882 + 1))
  {
    v1268 = (unint64_t *)(v1267 + 16);
    do
      v1269 = __ldxr(v1268);
    while (__stxr(v1269 + 1, v1268));
  }
  v1883 = &off_24EC48BE0;
  v1270 = (_QWORD *)operator new();
  *v1270 = &off_24EC526A8;
  v1270[1] = v1266;
  v1270[2] = v1267;
  *(_QWORD *)&v1884 = v1270;
  v1272 = *((_QWORD *)&v1882 + 1);
  v1271 = v1882;
  if (!*((_QWORD *)&v1882 + 1))
  {
    *((_QWORD *)&v1884 + 1) = v1882;
    v1885 = 0;
    if ((_QWORD)v1882)
      v1276 = v1882 + 16;
    else
      v1276 = 0;
    goto LABEL_2039;
  }
  v1273 = (unint64_t *)(*((_QWORD *)&v1882 + 1) + 16);
  do
    v1274 = __ldxr(v1273);
  while (__stxr(v1274 + 1, v1273));
  v1275 = *((_QWORD *)&v1882 + 1);
  *((_QWORD *)&v1884 + 1) = v1271;
  v1885 = v1272;
  if ((_QWORD)v1882)
    v1276 = v1882 + 16;
  else
    v1276 = 0;
  if (!*((_QWORD *)&v1882 + 1))
  {
    v1271 = v1882;
LABEL_2039:
    v1279 = 0;
    v1886 = &off_24EC2E888;
    v1887 = v1276;
    goto LABEL_2040;
  }
  v1277 = (unint64_t *)(*((_QWORD *)&v1882 + 1) + 16);
  do
    v1278 = __ldxr(v1277);
  while (__stxr(v1278 + 1, v1277));
  v1279 = *((_QWORD *)&v1882 + 1);
  v1271 = v1882;
  v1886 = &off_24EC2E888;
  *(_QWORD *)&v1887 = v1276;
  *((_QWORD *)&v1887 + 1) = v1275;
  if (*((_QWORD *)&v1882 + 1))
  {
    v1280 = (unint64_t *)(*((_QWORD *)&v1882 + 1) + 16);
    do
      v1281 = __ldxr(v1280);
    while (__stxr(v1281 + 1, v1280));
  }
LABEL_2040:
  if (v1271)
    v1282 = v1271 + 24;
  else
    v1282 = 0;
  v1888 = &off_24EC2E850;
  *(_QWORD *)&v1889 = v1282;
  *((_QWORD *)&v1889 + 1) = v1279;
  if ((SHIBYTE(v1851[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1864[2]) & 0x80000000) == 0)
      goto LABEL_2045;
LABEL_2048:
    operator delete(v1864[0]);
    v1283 = (std::__shared_weak_count *)*((_QWORD *)&v2056 + 1);
    if (!*((_QWORD *)&v2056 + 1))
      goto LABEL_2053;
    goto LABEL_2049;
  }
  operator delete(v1851[0]);
  if (SHIBYTE(v1864[2]) < 0)
    goto LABEL_2048;
LABEL_2045:
  v1283 = (std::__shared_weak_count *)*((_QWORD *)&v2056 + 1);
  if (!*((_QWORD *)&v2056 + 1))
    goto LABEL_2053;
LABEL_2049:
  v1284 = (unint64_t *)&v1283->__shared_owners_;
  do
    v1285 = __ldaxr(v1284);
  while (__stlxr(v1285 - 1, v1284));
  if (!v1285)
  {
    ((void (*)(std::__shared_weak_count *))v1283->__on_zero_shared)(v1283);
    std::__shared_weak_count::__release_weak(v1283);
  }
LABEL_2053:
  v1286 = (std::__shared_weak_count *)v2048[1];
  if (!v2048[1])
    goto LABEL_2057;
  v1287 = (unint64_t *)((char *)v2048[1] + 8);
  do
    v1288 = __ldaxr(v1287);
  while (__stlxr(v1288 - 1, v1287));
  if (!v1288)
  {
    ((void (*)(std::__shared_weak_count *))v1286->__on_zero_shared)(v1286);
    std::__shared_weak_count::__release_weak(v1286);
    if ((SHIBYTE(v2053[2]) & 0x80000000) == 0)
    {
LABEL_2058:
      if ((SHIBYTE(v1838[2]) & 0x80000000) == 0)
        goto LABEL_2059;
LABEL_2063:
      operator delete(v1838[0]);
      if (v1677)
        goto LABEL_2065;
      goto LABEL_2064;
    }
  }
  else
  {
LABEL_2057:
    if ((SHIBYTE(v2053[2]) & 0x80000000) == 0)
      goto LABEL_2058;
  }
  operator delete(v2053[0]);
  if (SHIBYTE(v1838[2]) < 0)
    goto LABEL_2063;
LABEL_2059:
  if (v1677)
    goto LABEL_2065;
LABEL_2064:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_2065:
  v1290 = *(void **)v4;
  v1289 = *(unint64_t **)(v4 + 8);
  if (v1289)
  {
    v1291 = v1289 + 1;
    do
      v1292 = __ldxr(v1291);
    while (__stxr(v1292 + 1, v1291));
  }
  v1293 = v2[1];
  if (*v2)
    v1294 = *v2 + 1232;
  else
    v1294 = 0;
  v1676 = (std::__shared_weak_count *)v2[1];
  if (v1293)
  {
    v1295 = (unint64_t *)(v1293 + 8);
    do
      v1296 = __ldxr(v1295);
    while (__stxr(v1296 + 1, v1295));
  }
  if (*(char *)(v1294 + 31) < 0)
  {
    sub_223197FA4(v2053, *(void **)(v1294 + 8), *(_QWORD *)(v1294 + 16));
  }
  else
  {
    v1297 = *(_OWORD *)(v1294 + 8);
    v2053[2] = *(void **)(v1294 + 24);
    *(_OWORD *)v2053 = v1297;
  }
  if (*(char *)(v1294 + 55) < 0)
  {
    sub_223197FA4(v2052, *(void **)(v1294 + 32), *(_QWORD *)(v1294 + 40));
  }
  else
  {
    *(_OWORD *)v2052 = *(_OWORD *)(v1294 + 32);
    v2052[2] = *(void **)(v1294 + 48);
  }
  *(_QWORD *)&v2056 = v1290;
  *((_QWORD *)&v2056 + 1) = v1289;
  *(_QWORD *)&v2054 = v1294;
  *((_QWORD *)&v2054 + 1) = v1293;
  if (v1293)
  {
    v1298 = (unint64_t *)(v1293 + 8);
    do
      v1299 = __ldxr(v1298);
    while (__stxr(v1299 + 1, v1298));
  }
  if (SHIBYTE(v2053[2]) < 0)
  {
    sub_223197FA4(v1851, v2053[0], (unint64_t)v2053[1]);
  }
  else
  {
    *(_OWORD *)v1851 = *(_OWORD *)v2053;
    v1851[2] = v2053[2];
  }
  if (SHIBYTE(v2052[2]) < 0)
  {
    sub_223197FA4(v1838, v2052[0], (unint64_t)v2052[1]);
  }
  else
  {
    *(_OWORD *)v1838 = *(_OWORD *)v2052;
    v1838[2] = v2052[2];
  }
  *(void **)((char *)v2057 + 7) = *(void **)((char *)&v2053[1] + 7);
  v1300 = v2053[0];
  v1301 = v2053[1];
  HIBYTE(v2057[0]) = HIBYTE(v2053[1]);
  v1302 = HIBYTE(v2053[2]);
  memset(v2053, 0, 24);
  *(_QWORD *)&v2046 = v1301;
  *(_QWORD *)((char *)&v2046 + 7) = *(_QWORD *)((char *)v2057 + 7);
  *(_QWORD *)((char *)v2057 + 7) = 0;
  v2057[0] = 0;
  v2048[0] = v1290;
  v2048[1] = v1289;
  if (v1289)
  {
    v1303 = v1289 + 1;
    do
      v1304 = __ldxr(v1303);
    while (__stxr(v1304 + 1, v1303));
  }
  v1305 = (char *)operator new();
  *(_QWORD *)&v2047 = v2046;
  *(_QWORD *)((char *)&v2047 + 7) = *(_QWORD *)((char *)&v2046 + 7);
  *(_QWORD *)&v2046 = 0;
  *(_QWORD *)((char *)&v2046 + 7) = 0;
  v1306 = *(_OWORD *)v2048;
  v2048[0] = 0;
  v2048[1] = 0;
  v1305[8] = 1;
  *((_QWORD *)v1305 + 4) = 0;
  *((_QWORD *)v1305 + 5) = 0;
  *(_QWORD *)v1305 = &off_24EC52720;
  *((_QWORD *)v1305 + 2) = &unk_24EC52798;
  *((_QWORD *)v1305 + 3) = &unk_24EC527D8;
  v1307 = v2047;
  *(_QWORD *)(v1305 + 63) = *(_QWORD *)((char *)&v2047 + 7);
  *((_QWORD *)v1305 + 6) = v1300;
  *((_QWORD *)v1305 + 7) = v1307;
  v1305[71] = v1302;
  *(_QWORD *)&v2047 = 0;
  *(_QWORD *)((char *)&v2047 + 7) = 0;
  *(_OWORD *)(v1305 + 72) = v1306;
  v2050[1] = 0;
  v2050[0] = 0;
  v1308 = (_QWORD *)operator new();
  *v1308 = &off_24EC528C0;
  v1308[1] = v1294;
  v1308[2] = v1293;
  v2054 = 0uLL;
  *((_QWORD *)v1305 + 18) = 0;
  *((_QWORD *)v1305 + 11) = v1308;
  *((_QWORD *)v1305 + 12) = v1305 + 96;
  *((_QWORD *)v1305 + 13) = v1305 + 96;
  *((_QWORD *)v1305 + 14) = 0;
  *((_QWORD *)v1305 + 15) = v1305 + 120;
  *((_QWORD *)v1305 + 16) = v1305 + 120;
  *((_QWORD *)v1305 + 17) = 0;
  if (!*((_QWORD *)v1305 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v1309 = (std::__shared_weak_count *)operator new();
  v1309->__shared_owners_ = 0;
  v1310 = (unint64_t *)&v1309->__shared_owners_;
  v1309->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC52D60;
  v1309->__shared_weak_owners_ = 0;
  v1309[1].__vftable = (std::__shared_weak_count_vtbl *)v1305;
  v1311 = (std::__shared_weak_count *)*((_QWORD *)v1305 + 5);
  if (v1311)
  {
    if (v1311->__shared_owners_ != -1)
      goto LABEL_2107;
    do
      v1312 = __ldxr(v1310);
    while (__stxr(v1312 + 1, v1310));
    v1313 = (unint64_t *)&v1309->__shared_weak_owners_;
    do
      v1314 = __ldxr(v1313);
    while (__stxr(v1314 + 1, v1313));
    *((_QWORD *)v1305 + 4) = v1305;
    *((_QWORD *)v1305 + 5) = v1309;
    std::__shared_weak_count::__release_weak(v1311);
  }
  else
  {
    do
      v1315 = __ldxr(v1310);
    while (__stxr(v1315 + 1, v1310));
    v1316 = (unint64_t *)&v1309->__shared_weak_owners_;
    do
      v1317 = __ldxr(v1316);
    while (__stxr(v1317 + 1, v1316));
    *((_QWORD *)v1305 + 4) = v1305;
    *((_QWORD *)v1305 + 5) = v1309;
  }
  do
    v1318 = __ldaxr(v1310);
  while (__stlxr(v1318 - 1, v1310));
  if (!v1318)
  {
    ((void (*)(std::__shared_weak_count *))v1309->__on_zero_shared)(v1309);
    std::__shared_weak_count::__release_weak(v1309);
  }
LABEL_2107:
  v1319 = (std::__shared_weak_count *)v2050[1];
  if (v2050[1])
  {
    v1320 = (unint64_t *)((char *)v2050[1] + 8);
    do
      v1321 = __ldaxr(v1320);
    while (__stlxr(v1321 - 1, v1320));
    if (!v1321)
    {
      ((void (*)(std::__shared_weak_count *))v1319->__on_zero_shared)(v1319);
      std::__shared_weak_count::__release_weak(v1319);
    }
  }
  v2050[0] = v1305;
  v2050[1] = v1309;
  v1322 = (std::__shared_weak_count *)v2048[1];
  if (v2048[1])
  {
    v1323 = (unint64_t *)((char *)v2048[1] + 8);
    do
      v1324 = __ldaxr(v1323);
    while (__stlxr(v1324 - 1, v1323));
    if (!v1324)
    {
      ((void (*)(std::__shared_weak_count *))v1322->__on_zero_shared)(v1322);
      std::__shared_weak_count::__release_weak(v1322);
    }
  }
  v1325 = v2056;
  v2056 = 0uLL;
  *(_OWORD *)&v1864[1] = *(_OWORD *)v1851;
  v1864[0] = &off_24EC48B48;
  v1865 = v1851[2];
  memset(v1851, 0, sizeof(v1851));
  v1866 = *(_OWORD *)v1838;
  v1326 = v1838[2];
  memset(v1838, 0, sizeof(v1838));
  v1868 = v1325;
  v2048[1] = 0;
  v2048[0] = 0;
  v1327 = v2050[0];
  v1328 = (char *)v2050[1];
  v1867 = v1326;
  v1869 = *(_OWORD *)v2050;
  v2050[0] = 0;
  v2050[1] = 0;
  if (*((_QWORD *)&v1869 + 1))
  {
    v1329 = (unint64_t *)(v1328 + 16);
    do
      v1330 = __ldxr(v1329);
    while (__stxr(v1330 + 1, v1329));
  }
  v1870 = &off_24EC48B78;
  v1331 = (_QWORD *)operator new();
  *v1331 = &off_24EC52DB0;
  v1331[1] = v1327;
  v1331[2] = v1328;
  *(_QWORD *)&v1871 = v1331;
  v1333 = *((_QWORD *)&v1869 + 1);
  v1332 = v1869;
  if (!*((_QWORD *)&v1869 + 1))
  {
    *((_QWORD *)&v1871 + 1) = v1869;
    v1872 = 0;
    if ((_QWORD)v1869)
      v1337 = v1869 + 16;
    else
      v1337 = 0;
    goto LABEL_2137;
  }
  v1334 = (unint64_t *)(*((_QWORD *)&v1869 + 1) + 16);
  do
    v1335 = __ldxr(v1334);
  while (__stxr(v1335 + 1, v1334));
  v1336 = *((_QWORD *)&v1869 + 1);
  *((_QWORD *)&v1871 + 1) = v1332;
  v1872 = v1333;
  if ((_QWORD)v1869)
    v1337 = v1869 + 16;
  else
    v1337 = 0;
  if (!*((_QWORD *)&v1869 + 1))
  {
    v1332 = v1869;
LABEL_2137:
    v1340 = 0;
    v1873 = &off_24EC2E888;
    v1874 = v1337;
    goto LABEL_2138;
  }
  v1338 = (unint64_t *)(*((_QWORD *)&v1869 + 1) + 16);
  do
    v1339 = __ldxr(v1338);
  while (__stxr(v1339 + 1, v1338));
  v1340 = *((_QWORD *)&v1869 + 1);
  v1332 = v1869;
  v1873 = &off_24EC2E888;
  *(_QWORD *)&v1874 = v1337;
  *((_QWORD *)&v1874 + 1) = v1336;
  if (*((_QWORD *)&v1869 + 1))
  {
    v1341 = (unint64_t *)(*((_QWORD *)&v1869 + 1) + 16);
    do
      v1342 = __ldxr(v1341);
    while (__stxr(v1342 + 1, v1341));
  }
LABEL_2138:
  if (v1332)
    v1343 = v1332 + 24;
  else
    v1343 = 0;
  v1875 = &off_24EC2E850;
  *(_QWORD *)&v1876 = v1343;
  *((_QWORD *)&v1876 + 1) = v1340;
  if ((SHIBYTE(v1838[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1851[2]) & 0x80000000) == 0)
      goto LABEL_2143;
LABEL_2146:
    operator delete(v1851[0]);
    v1344 = (std::__shared_weak_count *)*((_QWORD *)&v2054 + 1);
    if (!*((_QWORD *)&v2054 + 1))
      goto LABEL_2151;
    goto LABEL_2147;
  }
  operator delete(v1838[0]);
  if (SHIBYTE(v1851[2]) < 0)
    goto LABEL_2146;
LABEL_2143:
  v1344 = (std::__shared_weak_count *)*((_QWORD *)&v2054 + 1);
  if (!*((_QWORD *)&v2054 + 1))
    goto LABEL_2151;
LABEL_2147:
  v1345 = (unint64_t *)&v1344->__shared_owners_;
  do
    v1346 = __ldaxr(v1345);
  while (__stlxr(v1346 - 1, v1345));
  if (!v1346)
  {
    ((void (*)(std::__shared_weak_count *))v1344->__on_zero_shared)(v1344);
    std::__shared_weak_count::__release_weak(v1344);
  }
LABEL_2151:
  v1347 = (std::__shared_weak_count *)*((_QWORD *)&v2056 + 1);
  if (!*((_QWORD *)&v2056 + 1))
    goto LABEL_2155;
  v1348 = (unint64_t *)(*((_QWORD *)&v2056 + 1) + 8);
  do
    v1349 = __ldaxr(v1348);
  while (__stlxr(v1349 - 1, v1348));
  if (!v1349)
  {
    ((void (*)(std::__shared_weak_count *))v1347->__on_zero_shared)(v1347);
    std::__shared_weak_count::__release_weak(v1347);
    if ((SHIBYTE(v2052[2]) & 0x80000000) == 0)
    {
LABEL_2156:
      if ((SHIBYTE(v2053[2]) & 0x80000000) == 0)
        goto LABEL_2157;
LABEL_2161:
      operator delete(v2053[0]);
      if (v1294)
        goto LABEL_2163;
      goto LABEL_2162;
    }
  }
  else
  {
LABEL_2155:
    if ((SHIBYTE(v2052[2]) & 0x80000000) == 0)
      goto LABEL_2156;
  }
  operator delete(v2052[0]);
  if (SHIBYTE(v2053[2]) < 0)
    goto LABEL_2161;
LABEL_2157:
  if (v1294)
    goto LABEL_2163;
LABEL_2162:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_2163:
  v1351 = *(void **)v4;
  v1350 = *(_QWORD *)(v4 + 8);
  if (v1350)
  {
    v1352 = (unint64_t *)(v1350 + 8);
    do
      v1353 = __ldxr(v1352);
    while (__stxr(v1353 + 1, v1352));
  }
  v1354 = v2[1];
  if (*v2)
    v1355 = *v2 + 1288;
  else
    v1355 = 0;
  v1675 = (std::__shared_weak_count *)v2[1];
  if (v1354)
  {
    v1356 = (unint64_t *)(v1354 + 8);
    do
      v1357 = __ldxr(v1356);
    while (__stxr(v1357 + 1, v1356));
  }
  if (*(char *)(v1355 + 31) < 0)
  {
    sub_223197FA4(v2052, *(void **)(v1355 + 8), *(_QWORD *)(v1355 + 16));
  }
  else
  {
    v1358 = *(_OWORD *)(v1355 + 8);
    v2052[2] = *(void **)(v1355 + 24);
    *(_OWORD *)v2052 = v1358;
  }
  if (*(char *)(v1355 + 55) < 0)
  {
    sub_223197FA4(v2050, *(void **)(v1355 + 32), *(_QWORD *)(v1355 + 40));
  }
  else
  {
    *(_OWORD *)v2050 = *(_OWORD *)(v1355 + 32);
    v2050[2] = *(void **)(v1355 + 48);
  }
  *(_QWORD *)&v2054 = v1351;
  *((_QWORD *)&v2054 + 1) = v1350;
  *(_QWORD *)&v2047 = v1355;
  *((_QWORD *)&v2047 + 1) = v1354;
  if (v1354)
  {
    v1359 = (unint64_t *)(v1354 + 8);
    do
      v1360 = __ldxr(v1359);
    while (__stxr(v1360 + 1, v1359));
  }
  if (SHIBYTE(v2052[2]) < 0)
  {
    sub_223197FA4(v1838, v2052[0], (unint64_t)v2052[1]);
  }
  else
  {
    *(_OWORD *)v1838 = *(_OWORD *)v2052;
    v1838[2] = v2052[2];
  }
  if (SHIBYTE(v2050[2]) < 0)
  {
    sub_223197FA4(v2053, v2050[0], (unint64_t)v2050[1]);
  }
  else
  {
    *(_OWORD *)v2053 = *(_OWORD *)v2050;
    v2053[2] = v2050[2];
  }
  *(void **)((char *)v2055 + 7) = *(void **)((char *)&v2052[1] + 7);
  v1361 = v2052[0];
  v1362 = v2052[1];
  HIBYTE(v2055[0]) = HIBYTE(v2052[1]);
  v1363 = HIBYTE(v2052[2]);
  memset(v2052, 0, 24);
  v2057[0] = v1362;
  *(_QWORD *)((char *)v2057 + 7) = *(_QWORD *)((char *)v2055 + 7);
  *(_QWORD *)((char *)v2055 + 7) = 0;
  v2055[0] = 0;
  *(_QWORD *)&v2056 = v1351;
  *((_QWORD *)&v2056 + 1) = v1350;
  if (v1350)
  {
    v1364 = (unint64_t *)(v1350 + 8);
    do
      v1365 = __ldxr(v1364);
    while (__stxr(v1365 + 1, v1364));
  }
  v1366 = (char *)operator new();
  *(_QWORD *)&v2046 = v2057[0];
  *(_QWORD *)((char *)&v2046 + 7) = *(_QWORD *)((char *)v2057 + 7);
  v2057[0] = 0;
  *(_QWORD *)((char *)v2057 + 7) = 0;
  v1367 = v2056;
  v2056 = 0uLL;
  v1366[8] = 1;
  *((_QWORD *)v1366 + 4) = 0;
  *((_QWORD *)v1366 + 5) = 0;
  *(_QWORD *)v1366 = &off_24EC52E28;
  *((_QWORD *)v1366 + 2) = &unk_24EC52EA0;
  *((_QWORD *)v1366 + 3) = &unk_24EC52EE0;
  v1368 = v2046;
  *(_QWORD *)(v1366 + 63) = *(_QWORD *)((char *)&v2046 + 7);
  *((_QWORD *)v1366 + 6) = v1361;
  *((_QWORD *)v1366 + 7) = v1368;
  v1366[71] = v1363;
  *(_QWORD *)&v2046 = 0;
  *(_QWORD *)((char *)&v2046 + 7) = 0;
  *(_OWORD *)(v1366 + 72) = v1367;
  v2048[1] = 0;
  v2048[0] = 0;
  v1369 = (_QWORD *)operator new();
  *v1369 = &off_24EC52FC8;
  v1369[1] = v1355;
  v1369[2] = v1354;
  v2047 = 0uLL;
  *((_QWORD *)v1366 + 18) = 0;
  *((_QWORD *)v1366 + 11) = v1369;
  *((_QWORD *)v1366 + 12) = v1366 + 96;
  *((_QWORD *)v1366 + 13) = v1366 + 96;
  *((_QWORD *)v1366 + 14) = 0;
  *((_QWORD *)v1366 + 15) = v1366 + 120;
  *((_QWORD *)v1366 + 16) = v1366 + 120;
  *((_QWORD *)v1366 + 17) = 0;
  if (!*((_QWORD *)v1366 + 9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v1370 = (std::__shared_weak_count *)operator new();
  v1370->__shared_owners_ = 0;
  v1371 = (unint64_t *)&v1370->__shared_owners_;
  v1370->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC53468;
  v1370->__shared_weak_owners_ = 0;
  v1370[1].__vftable = (std::__shared_weak_count_vtbl *)v1366;
  v1372 = (std::__shared_weak_count *)*((_QWORD *)v1366 + 5);
  if (v1372)
  {
    if (v1372->__shared_owners_ != -1)
      goto LABEL_2205;
    do
      v1373 = __ldxr(v1371);
    while (__stxr(v1373 + 1, v1371));
    v1374 = (unint64_t *)&v1370->__shared_weak_owners_;
    do
      v1375 = __ldxr(v1374);
    while (__stxr(v1375 + 1, v1374));
    *((_QWORD *)v1366 + 4) = v1366;
    *((_QWORD *)v1366 + 5) = v1370;
    std::__shared_weak_count::__release_weak(v1372);
  }
  else
  {
    do
      v1376 = __ldxr(v1371);
    while (__stxr(v1376 + 1, v1371));
    v1377 = (unint64_t *)&v1370->__shared_weak_owners_;
    do
      v1378 = __ldxr(v1377);
    while (__stxr(v1378 + 1, v1377));
    *((_QWORD *)v1366 + 4) = v1366;
    *((_QWORD *)v1366 + 5) = v1370;
  }
  do
    v1379 = __ldaxr(v1371);
  while (__stlxr(v1379 - 1, v1371));
  if (!v1379)
  {
    ((void (*)(std::__shared_weak_count *))v1370->__on_zero_shared)(v1370);
    std::__shared_weak_count::__release_weak(v1370);
  }
LABEL_2205:
  v1380 = (std::__shared_weak_count *)v2048[1];
  if (v2048[1])
  {
    v1381 = (unint64_t *)((char *)v2048[1] + 8);
    do
      v1382 = __ldaxr(v1381);
    while (__stlxr(v1382 - 1, v1381));
    if (!v1382)
    {
      ((void (*)(std::__shared_weak_count *))v1380->__on_zero_shared)(v1380);
      std::__shared_weak_count::__release_weak(v1380);
    }
  }
  v2048[0] = v1366;
  v2048[1] = v1370;
  v1383 = (std::__shared_weak_count *)*((_QWORD *)&v2056 + 1);
  if (*((_QWORD *)&v2056 + 1))
  {
    v1384 = (unint64_t *)(*((_QWORD *)&v2056 + 1) + 8);
    do
      v1385 = __ldaxr(v1384);
    while (__stlxr(v1385 - 1, v1384));
    if (!v1385)
    {
      ((void (*)(std::__shared_weak_count *))v1383->__on_zero_shared)(v1383);
      std::__shared_weak_count::__release_weak(v1383);
    }
  }
  v1386 = v2054;
  v2054 = 0uLL;
  *(_OWORD *)&v1851[1] = *(_OWORD *)v1838;
  v1851[0] = &off_24EC48AE0;
  v1852 = v1838[2];
  memset(v1838, 0, sizeof(v1838));
  v1853 = *(_OWORD *)v2053;
  v1387 = v2053[2];
  memset(v2053, 0, 24);
  v1855 = v1386;
  v2056 = 0uLL;
  v1388 = v2048[0];
  v1389 = (char *)v2048[1];
  v1854 = v1387;
  v1856 = *(_OWORD *)v2048;
  v2048[0] = 0;
  v2048[1] = 0;
  if (*((_QWORD *)&v1856 + 1))
  {
    v1390 = (unint64_t *)(v1389 + 16);
    do
      v1391 = __ldxr(v1390);
    while (__stxr(v1391 + 1, v1390));
  }
  v1857 = &off_24EC48B10;
  v1392 = (_QWORD *)operator new();
  *v1392 = &off_24EC534B8;
  v1392[1] = v1388;
  v1392[2] = v1389;
  *(_QWORD *)&v1858 = v1392;
  v1394 = *((_QWORD *)&v1856 + 1);
  v1393 = v1856;
  if (!*((_QWORD *)&v1856 + 1))
  {
    *((_QWORD *)&v1858 + 1) = v1856;
    v1859 = 0;
    if ((_QWORD)v1856)
      v1398 = v1856 + 16;
    else
      v1398 = 0;
    goto LABEL_2235;
  }
  v1395 = (unint64_t *)(*((_QWORD *)&v1856 + 1) + 16);
  do
    v1396 = __ldxr(v1395);
  while (__stxr(v1396 + 1, v1395));
  v1397 = *((_QWORD *)&v1856 + 1);
  *((_QWORD *)&v1858 + 1) = v1393;
  v1859 = v1394;
  if ((_QWORD)v1856)
    v1398 = v1856 + 16;
  else
    v1398 = 0;
  if (!*((_QWORD *)&v1856 + 1))
  {
    v1393 = v1856;
LABEL_2235:
    v1401 = 0;
    v1860 = &off_24EC37DE0;
    v1861 = v1398;
    goto LABEL_2236;
  }
  v1399 = (unint64_t *)(*((_QWORD *)&v1856 + 1) + 16);
  do
    v1400 = __ldxr(v1399);
  while (__stxr(v1400 + 1, v1399));
  v1401 = *((_QWORD *)&v1856 + 1);
  v1393 = v1856;
  v1860 = &off_24EC37DE0;
  *(_QWORD *)&v1861 = v1398;
  *((_QWORD *)&v1861 + 1) = v1397;
  if (*((_QWORD *)&v1856 + 1))
  {
    v1402 = (unint64_t *)(*((_QWORD *)&v1856 + 1) + 16);
    do
      v1403 = __ldxr(v1402);
    while (__stxr(v1403 + 1, v1402));
  }
LABEL_2236:
  if (v1393)
    v1404 = v1393 + 24;
  else
    v1404 = 0;
  v1862 = &off_24EC2E850;
  *(_QWORD *)&v1863 = v1404;
  *((_QWORD *)&v1863 + 1) = v1401;
  if ((SHIBYTE(v2053[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v1838[2]) & 0x80000000) == 0)
      goto LABEL_2241;
LABEL_2244:
    operator delete(v1838[0]);
    v1405 = (std::__shared_weak_count *)*((_QWORD *)&v2047 + 1);
    if (!*((_QWORD *)&v2047 + 1))
      goto LABEL_2249;
    goto LABEL_2245;
  }
  operator delete(v2053[0]);
  if (SHIBYTE(v1838[2]) < 0)
    goto LABEL_2244;
LABEL_2241:
  v1405 = (std::__shared_weak_count *)*((_QWORD *)&v2047 + 1);
  if (!*((_QWORD *)&v2047 + 1))
    goto LABEL_2249;
LABEL_2245:
  v1406 = (unint64_t *)&v1405->__shared_owners_;
  do
    v1407 = __ldaxr(v1406);
  while (__stlxr(v1407 - 1, v1406));
  if (!v1407)
  {
    ((void (*)(std::__shared_weak_count *))v1405->__on_zero_shared)(v1405);
    std::__shared_weak_count::__release_weak(v1405);
  }
LABEL_2249:
  v1408 = (std::__shared_weak_count *)*((_QWORD *)&v2054 + 1);
  if (!*((_QWORD *)&v2054 + 1))
    goto LABEL_2253;
  v1409 = (unint64_t *)(*((_QWORD *)&v2054 + 1) + 8);
  do
    v1410 = __ldaxr(v1409);
  while (__stlxr(v1410 - 1, v1409));
  if (!v1410)
  {
    ((void (*)(std::__shared_weak_count *))v1408->__on_zero_shared)(v1408);
    std::__shared_weak_count::__release_weak(v1408);
    if ((SHIBYTE(v2050[2]) & 0x80000000) == 0)
    {
LABEL_2254:
      if ((SHIBYTE(v2052[2]) & 0x80000000) == 0)
        goto LABEL_2255;
LABEL_2259:
      operator delete(v2052[0]);
      if (v1355)
        goto LABEL_2261;
      goto LABEL_2260;
    }
  }
  else
  {
LABEL_2253:
    if ((SHIBYTE(v2050[2]) & 0x80000000) == 0)
      goto LABEL_2254;
  }
  operator delete(v2050[0]);
  if (SHIBYTE(v2052[2]) < 0)
    goto LABEL_2259;
LABEL_2255:
  if (v1355)
    goto LABEL_2261;
LABEL_2260:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_2261:
  v1411 = *(void **)v4;
  v1412 = *(_QWORD *)(v4 + 8);
  if (v1412)
  {
    v1413 = (unint64_t *)(v1412 + 8);
    do
      v1414 = __ldxr(v1413);
    while (__stxr(v1414 + 1, v1413));
  }
  v1415 = v2[1];
  if (*v2)
    v1416 = *v2 + 1344;
  else
    v1416 = 0;
  v1674 = (std::__shared_weak_count *)v2[1];
  if (v1415)
  {
    v1417 = (unint64_t *)(v1415 + 8);
    do
      v1418 = __ldxr(v1417);
    while (__stxr(v1418 + 1, v1417));
  }
  if (*(char *)(v1416 + 31) < 0)
  {
    sub_223197FA4(v2050, *(void **)(v1416 + 8), *(_QWORD *)(v1416 + 16));
  }
  else
  {
    v1419 = *(_OWORD *)(v1416 + 8);
    v2050[2] = *(void **)(v1416 + 24);
    *(_OWORD *)v2050 = v1419;
  }
  if (*(char *)(v1416 + 55) < 0)
  {
    sub_223197FA4(v2048, *(void **)(v1416 + 32), *(_QWORD *)(v1416 + 40));
  }
  else
  {
    *(_OWORD *)v2048 = *(_OWORD *)(v1416 + 32);
    v2049 = *(void **)(v1416 + 48);
  }
  *(_QWORD *)&v2047 = v1411;
  *((_QWORD *)&v2047 + 1) = v1412;
  *(_QWORD *)&v2046 = v1416;
  *((_QWORD *)&v2046 + 1) = v1415;
  if (v1415)
  {
    v1420 = (unint64_t *)(v1415 + 8);
    do
      v1421 = __ldxr(v1420);
    while (__stxr(v1421 + 1, v1420));
  }
  if (SHIBYTE(v2050[2]) < 0)
  {
    sub_223197FA4(v2053, v2050[0], (unint64_t)v2050[1]);
  }
  else
  {
    *(_OWORD *)v2053 = *(_OWORD *)v2050;
    v2053[2] = v2050[2];
  }
  if (SHIBYTE(v2049) < 0)
  {
    sub_223197FA4(v2052, v2048[0], (unint64_t)v2048[1]);
  }
  else
  {
    *(_OWORD *)v2052 = *(_OWORD *)v2048;
    v2052[2] = v2049;
  }
  *(void **)((char *)v2051 + 7) = *(void **)((char *)&v2050[1] + 7);
  v1422 = v2050[0];
  v1423 = v2050[1];
  HIBYTE(v2051[0]) = HIBYTE(v2050[1]);
  v1424 = HIBYTE(v2050[2]);
  memset(v2050, 0, 24);
  *((_QWORD *)&v2054 + 1) = v1412;
  v2055[0] = v1423;
  *(_QWORD *)((char *)v2055 + 7) = *(_QWORD *)((char *)v2051 + 7);
  *(_QWORD *)((char *)v2051 + 7) = 0;
  v2051[0] = 0;
  *(_QWORD *)&v2054 = v1411;
  if (v1412)
  {
    v1425 = (unint64_t *)(v1412 + 8);
    do
      v1426 = __ldxr(v1425);
    while (__stxr(v1426 + 1, v1425));
  }
  v1427 = operator new();
  v2057[0] = v2055[0];
  *(_QWORD *)((char *)v2057 + 7) = *(_QWORD *)((char *)v2055 + 7);
  v2055[0] = 0;
  *(_QWORD *)((char *)v2055 + 7) = 0;
  v1428 = v2054;
  v2054 = 0uLL;
  *(_BYTE *)(v1427 + 8) = 1;
  *(_QWORD *)(v1427 + 32) = 0;
  *(_QWORD *)(v1427 + 40) = 0;
  *(_QWORD *)v1427 = &off_24EC53530;
  *(_QWORD *)(v1427 + 16) = &unk_24EC535A8;
  *(_QWORD *)(v1427 + 24) = &unk_24EC535E8;
  v1429 = v2057[0];
  *(_QWORD *)(v1427 + 63) = *(_QWORD *)((char *)v2057 + 7);
  *(_QWORD *)(v1427 + 48) = v1422;
  *(_QWORD *)(v1427 + 56) = v1429;
  *(_BYTE *)(v1427 + 71) = v1424;
  v2057[0] = 0;
  *(_QWORD *)((char *)v2057 + 7) = 0;
  *(_OWORD *)(v1427 + 72) = v1428;
  v2056 = 0uLL;
  v1430 = (_QWORD *)operator new();
  *v1430 = &off_24EC536D0;
  v1430[1] = v1416;
  v1430[2] = v1415;
  v2046 = 0uLL;
  *(_QWORD *)(v1427 + 144) = 0;
  *(_QWORD *)(v1427 + 88) = v1430;
  *(_QWORD *)(v1427 + 96) = v1427 + 96;
  *(_QWORD *)(v1427 + 104) = v1427 + 96;
  *(_QWORD *)(v1427 + 112) = 0;
  *(_QWORD *)(v1427 + 120) = v1427 + 120;
  *(_QWORD *)(v1427 + 128) = v1427 + 120;
  *(_QWORD *)(v1427 + 136) = 0;
  if (!*(_QWORD *)(v1427 + 72)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v1431 = (std::__shared_weak_count *)operator new();
  v1431->__shared_owners_ = 0;
  v1432 = (unint64_t *)&v1431->__shared_owners_;
  v1431->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC53B70;
  v1431->__shared_weak_owners_ = 0;
  v1431[1].__vftable = (std::__shared_weak_count_vtbl *)v1427;
  v1433 = *(std::__shared_weak_count **)(v1427 + 40);
  if (v1433)
  {
    if (v1433->__shared_owners_ != -1)
      goto LABEL_2303;
    do
      v1434 = __ldxr(v1432);
    while (__stxr(v1434 + 1, v1432));
    v1435 = (unint64_t *)&v1431->__shared_weak_owners_;
    do
      v1436 = __ldxr(v1435);
    while (__stxr(v1436 + 1, v1435));
    *(_QWORD *)(v1427 + 32) = v1427;
    *(_QWORD *)(v1427 + 40) = v1431;
    std::__shared_weak_count::__release_weak(v1433);
  }
  else
  {
    do
      v1437 = __ldxr(v1432);
    while (__stxr(v1437 + 1, v1432));
    v1438 = (unint64_t *)&v1431->__shared_weak_owners_;
    do
      v1439 = __ldxr(v1438);
    while (__stxr(v1439 + 1, v1438));
    *(_QWORD *)(v1427 + 32) = v1427;
    *(_QWORD *)(v1427 + 40) = v1431;
  }
  do
    v1440 = __ldaxr(v1432);
  while (__stlxr(v1440 - 1, v1432));
  if (!v1440)
  {
    ((void (*)(std::__shared_weak_count *))v1431->__on_zero_shared)(v1431);
    std::__shared_weak_count::__release_weak(v1431);
  }
LABEL_2303:
  v1441 = (std::__shared_weak_count *)*((_QWORD *)&v2056 + 1);
  if (*((_QWORD *)&v2056 + 1))
  {
    v1442 = (unint64_t *)(*((_QWORD *)&v2056 + 1) + 8);
    do
      v1443 = __ldaxr(v1442);
    while (__stlxr(v1443 - 1, v1442));
    if (!v1443)
    {
      ((void (*)(std::__shared_weak_count *))v1441->__on_zero_shared)(v1441);
      std::__shared_weak_count::__release_weak(v1441);
    }
  }
  *(_QWORD *)&v2056 = v1427;
  *((_QWORD *)&v2056 + 1) = v1431;
  v1444 = (std::__shared_weak_count *)*((_QWORD *)&v2054 + 1);
  if (*((_QWORD *)&v2054 + 1))
  {
    v1445 = (unint64_t *)(*((_QWORD *)&v2054 + 1) + 8);
    do
      v1446 = __ldaxr(v1445);
    while (__stlxr(v1446 - 1, v1445));
    if (!v1446)
    {
      ((void (*)(std::__shared_weak_count *))v1444->__on_zero_shared)(v1444);
      std::__shared_weak_count::__release_weak(v1444);
    }
  }
  v1447 = v2047;
  v2047 = 0uLL;
  *(_OWORD *)&v1838[1] = *(_OWORD *)v2053;
  v1838[0] = &off_24EC48A78;
  v1839 = v2053[2];
  memset(v2053, 0, 24);
  v1840 = *(_OWORD *)v2052;
  v1448 = v2052[2];
  memset(v2052, 0, 24);
  v1842 = v1447;
  v2054 = 0uLL;
  v1449 = v2056;
  v1841 = v1448;
  v1843 = v2056;
  v2056 = 0uLL;
  if (*((_QWORD *)&v1843 + 1))
  {
    v1450 = (unint64_t *)(*((_QWORD *)&v1449 + 1) + 16);
    do
      v1451 = __ldxr(v1450);
    while (__stxr(v1451 + 1, v1450));
  }
  v1844 = &off_24EC48AA8;
  v1452 = operator new();
  *(_QWORD *)v1452 = &off_24EC53BC0;
  *(_OWORD *)(v1452 + 8) = v1449;
  *(_QWORD *)&v1845 = v1452;
  v1454 = *((_QWORD *)&v1843 + 1);
  v1453 = v1843;
  if (!*((_QWORD *)&v1843 + 1))
  {
    *((_QWORD *)&v1845 + 1) = v1843;
    v1846 = 0;
    if ((_QWORD)v1843)
      v1458 = v1843 + 16;
    else
      v1458 = 0;
    goto LABEL_2333;
  }
  v1455 = (unint64_t *)(*((_QWORD *)&v1843 + 1) + 16);
  do
    v1456 = __ldxr(v1455);
  while (__stxr(v1456 + 1, v1455));
  v1457 = *((_QWORD *)&v1843 + 1);
  *((_QWORD *)&v1845 + 1) = v1453;
  v1846 = v1454;
  if ((_QWORD)v1843)
    v1458 = v1843 + 16;
  else
    v1458 = 0;
  if (!*((_QWORD *)&v1843 + 1))
  {
    v1453 = v1843;
LABEL_2333:
    v1461 = 0;
    v1847 = &off_24EC37DE0;
    v1848 = v1458;
    goto LABEL_2334;
  }
  v1459 = (unint64_t *)(*((_QWORD *)&v1843 + 1) + 16);
  do
    v1460 = __ldxr(v1459);
  while (__stxr(v1460 + 1, v1459));
  v1461 = *((_QWORD *)&v1843 + 1);
  v1453 = v1843;
  v1847 = &off_24EC37DE0;
  *(_QWORD *)&v1848 = v1458;
  *((_QWORD *)&v1848 + 1) = v1457;
  if (*((_QWORD *)&v1843 + 1))
  {
    v1462 = (unint64_t *)(*((_QWORD *)&v1843 + 1) + 16);
    do
      v1463 = __ldxr(v1462);
    while (__stxr(v1463 + 1, v1462));
  }
LABEL_2334:
  if (v1453)
    v1464 = v1453 + 24;
  else
    v1464 = 0;
  v1849 = &off_24EC2E850;
  *(_QWORD *)&v1850 = v1464;
  *((_QWORD *)&v1850 + 1) = v1461;
  if ((SHIBYTE(v2052[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v2053[2]) & 0x80000000) == 0)
      goto LABEL_2339;
LABEL_2342:
    operator delete(v2053[0]);
    v1465 = (std::__shared_weak_count *)*((_QWORD *)&v2046 + 1);
    if (!*((_QWORD *)&v2046 + 1))
      goto LABEL_2347;
    goto LABEL_2343;
  }
  operator delete(v2052[0]);
  if (SHIBYTE(v2053[2]) < 0)
    goto LABEL_2342;
LABEL_2339:
  v1465 = (std::__shared_weak_count *)*((_QWORD *)&v2046 + 1);
  if (!*((_QWORD *)&v2046 + 1))
    goto LABEL_2347;
LABEL_2343:
  v1466 = (unint64_t *)&v1465->__shared_owners_;
  do
    v1467 = __ldaxr(v1466);
  while (__stlxr(v1467 - 1, v1466));
  if (!v1467)
  {
    ((void (*)(std::__shared_weak_count *))v1465->__on_zero_shared)(v1465);
    std::__shared_weak_count::__release_weak(v1465);
  }
LABEL_2347:
  v1468 = (std::__shared_weak_count *)*((_QWORD *)&v2047 + 1);
  if (!*((_QWORD *)&v2047 + 1))
    goto LABEL_2351;
  v1469 = (unint64_t *)(*((_QWORD *)&v2047 + 1) + 8);
  do
    v1470 = __ldaxr(v1469);
  while (__stlxr(v1470 - 1, v1469));
  if (!v1470)
  {
    ((void (*)(std::__shared_weak_count *))v1468->__on_zero_shared)(v1468);
    std::__shared_weak_count::__release_weak(v1468);
    if ((SHIBYTE(v2049) & 0x80000000) == 0)
    {
LABEL_2352:
      if ((SHIBYTE(v2050[2]) & 0x80000000) == 0)
        goto LABEL_2353;
      goto LABEL_2357;
    }
  }
  else
  {
LABEL_2351:
    if ((SHIBYTE(v2049) & 0x80000000) == 0)
      goto LABEL_2352;
  }
  operator delete(v2048[0]);
  if ((SHIBYTE(v2050[2]) & 0x80000000) == 0)
  {
LABEL_2353:
    if (v1416)
      goto LABEL_2359;
    goto LABEL_2358;
  }
LABEL_2357:
  operator delete(v2050[0]);
  if (v1416)
    goto LABEL_2359;
LABEL_2358:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Channel.h", 542, (uint64_t)"worker", 6, (uint64_t)"Callable must be valid", 22, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
LABEL_2359:
  v1471 = operator new();
  *(_QWORD *)v1471 = &off_24EC49408;
  *(_QWORD *)(v1471 + 88) = &off_24EC37B68;
  *(_QWORD *)(v1471 + 168) = &off_24EC493D8;
  *(_QWORD *)(v1471 + 256) = &off_24EC2B348;
  *(_QWORD *)(v1471 + 336) = &off_24EC49370;
  *(_QWORD *)(v1471 + 424) = &off_24EC493A0;
  *(_QWORD *)(v1471 + 504) = &off_24EC49308;
  *(_QWORD *)(v1471 + 592) = &off_24EC49338;
  *(_QWORD *)(v1471 + 840) = &off_24EC492A0;
  *(_QWORD *)(v1471 + 928) = &off_24EC492D0;
  *(_QWORD *)(v1471 + 1008) = &off_24EC49238;
  *(_QWORD *)(v1471 + 1096) = &off_24EC49268;
  *(_QWORD *)(v1471 + 1176) = &off_24EC491D0;
  *(_QWORD *)(v1471 + 1264) = &off_24EC49200;
  *(_QWORD *)(v1471 + 1296) = &off_24EC454F0;
  *(_QWORD *)(v1471 + 1344) = &off_24EC49168;
  *(_QWORD *)(v1471 + 1432) = &off_24EC49198;
  *(_QWORD *)(v1471 + 1464) = &off_24EC45558;
  *(_QWORD *)(v1471 + 1512) = &off_24EC49100;
  *(_QWORD *)(v1471 + 1600) = &off_24EC49130;
  *(_QWORD *)(v1471 + 1632) = &off_24EC455C0;
  v1671 = v2045;
  *(_QWORD *)(v1471 + 1680) = &off_24EC49098;
  *(_QWORD *)(v1471 + 1768) = &off_24EC490C8;
  *(_QWORD *)(v1471 + 1800) = &off_24EC45628;
  *(_QWORD *)(v1471 + 1848) = &off_24EC49068;
  *(_QWORD *)(v1471 + 1936) = &off_24EC2C458;
  *(_QWORD *)(v1471 + 2016) = &off_24EC49038;
  *(_QWORD *)(v1471 + 2104) = &off_24EC2B310;
  *(_QWORD *)(v1471 + 24) = v1826;
  v1472 = v1825;
  v1825 = 0uLL;
  v1826 = 0;
  *(_QWORD *)(v1471 + 48) = v1828;
  v1473 = v1827;
  v1827 = 0uLL;
  v1828 = 0;
  v1474 = v1829;
  v1829 = 0uLL;
  v1475 = v1830;
  v1830 = 0uLL;
  *(_QWORD *)(v1471 + 112) = v1833;
  v1476 = v1832;
  *((_QWORD *)&v1832 + 1) = 0;
  v1833 = 0;
  v1477 = v1837;
  v1837 = 0uLL;
  *(_QWORD *)(v1471 + 192) = v1808;
  v1478 = *(_OWORD *)&v1807[1];
  v1807[1] = 0;
  v1807[2] = 0;
  v1808 = 0;
  *(_QWORD *)(v1471 + 216) = v1810;
  v1479 = v1809;
  v1809 = 0uLL;
  v1810 = 0;
  v1480 = v1811;
  v1811 = 0uLL;
  v1481 = v1812;
  v1812 = 0uLL;
  *(_QWORD *)(v1471 + 280) = v1815;
  v1482 = v1814;
  *((_QWORD *)&v1814 + 1) = 0;
  v1815 = 0;
  v1483 = v1819;
  v1819 = 0uLL;
  *(_QWORD *)(v1471 + 360) = v1791;
  *(_OWORD *)(v1471 + 344) = *(_OWORD *)&__p[1];
  __p[1] = 0;
  __p[2] = 0;
  v1791 = 0;
  *(_QWORD *)(v1471 + 384) = v1793;
  v1484 = v1792;
  v1792 = 0uLL;
  v1793 = 0;
  v1485 = v1794;
  v1794 = 0uLL;
  v1486 = v1795;
  v1795 = 0uLL;
  *(_QWORD *)(v1471 + 448) = v1798;
  v1487 = v1797;
  *((_QWORD *)&v1797 + 1) = 0;
  v1798 = 0;
  v1488 = v1802;
  v1802 = 0uLL;
  *(_QWORD *)(v1471 + 528) = v1774;
  v1489 = *(_OWORD *)&__dst[1];
  __dst[1] = 0;
  __dst[2] = 0;
  v1774 = 0;
  *(_QWORD *)(v1471 + 552) = v1776;
  *(_OWORD *)(v1471 + 536) = v1775;
  v1775 = 0uLL;
  v1776 = 0;
  v1490 = v1777;
  v1777 = 0uLL;
  v1491 = v1778;
  v1778 = 0uLL;
  *(_QWORD *)(v1471 + 616) = v1781;
  v1492 = v1780;
  *((_QWORD *)&v1780 + 1) = 0;
  v1781 = 0;
  v1493 = v1785;
  v1785 = 0uLL;
  *(_QWORD *)(v1471 + 672) = &off_24EC37F58;
  *(_QWORD *)(v1471 + 696) = v1760;
  *(_OWORD *)(v1471 + 680) = *(_OWORD *)&__src[1];
  *(_QWORD *)(v1471 + 720) = v1762;
  *(_QWORD *)(v1471 + 760) = &off_24EC37F88;
  *(_QWORD *)(v1471 + 784) = v1766;
  v1494 = v1763;
  v1495 = v1764;
  v1496 = v1768;
  *(_QWORD *)(v1471 + 864) = v1744;
  v1497 = *(_OWORD *)&v1743[1];
  v1743[1] = 0;
  v1743[2] = 0;
  v1744 = 0;
  *(_QWORD *)(v1471 + 888) = v1746;
  *(_OWORD *)(v1471 + 872) = v1745;
  v1745 = 0uLL;
  v1746 = 0;
  v1498 = v1747;
  v1747 = 0uLL;
  v1499 = v1748;
  v1748 = 0uLL;
  *(_QWORD *)(v1471 + 952) = v1751;
  v1500 = v1750;
  *((_QWORD *)&v1750 + 1) = 0;
  v1751 = 0;
  v1501 = v1755;
  v1755 = 0uLL;
  *(_QWORD *)(v1471 + 1032) = v1727;
  *(_OWORD *)(v1471 + 1016) = *(_OWORD *)&v1726[1];
  v1726[1] = 0;
  v1726[2] = 0;
  v1727 = 0;
  *(_QWORD *)(v1471 + 1056) = v1729;
  *(_OWORD *)(v1471 + 1208) = v1711;
  *(_OWORD *)(v1471 + 1352) = *(_OWORD *)&v1692[1];
  *(_OWORD *)(v1471 + 1544) = v2035;
  *(_OWORD *)(v1471 + 1688) = *(_OWORD *)&v2020[1];
  *(_OWORD *)(v1471 + 1880) = v2009;
  *(_OWORD *)(v1471 + 2024) = *(_OWORD *)&v1994[1];
  v1502 = v1728;
  v1728 = 0uLL;
  v1729 = 0;
  *(_OWORD *)(v1471 + 8) = v1472;
  v1503 = v1730;
  v1730 = 0uLL;
  *(_OWORD *)(v1471 + 32) = v1473;
  *(_OWORD *)(v1471 + 56) = v1474;
  *(_OWORD *)(v1471 + 72) = v1475;
  v1504 = v1835;
  *(_QWORD *)&v1832 = 0;
  v1505 = v2004;
  *((_QWORD *)&v2004 + 1) = 0;
  *(_OWORD *)(v1471 + 2216) = v1983;
  *(_OWORD *)(v1471 + 2360) = *(_OWORD *)&v1968[1];
  *(_OWORD *)(v1471 + 2552) = v1957;
  *(_OWORD *)(v1471 + 2696) = *(_OWORD *)&v1942[1];
  *(_OWORD *)(v1471 + 2888) = v1931;
  *(_OWORD *)(v1471 + 3032) = *(_OWORD *)&v1916[1];
  *(_OWORD *)(v1471 + 3224) = v1905;
  *(_OWORD *)(v1471 + 3368) = *(_OWORD *)&v1890[1];
  *(_OWORD *)(v1471 + 3560) = v1879;
  *(_OWORD *)(v1471 + 3704) = *(_OWORD *)&v1864[1];
  *(_OWORD *)(v1471 + 3896) = v1853;
  *(_OWORD *)(v1471 + 4040) = *(_OWORD *)&v1838[1];
  v1506 = v1731;
  v1731 = 0uLL;
  *(_QWORD *)(v1471 + 1120) = v1734;
  *(_OWORD *)(v1471 + 96) = v1476;
  v1507 = v1733;
  *((_QWORD *)&v1733 + 1) = 0;
  v1734 = 0;
  *(_OWORD *)(v1471 + 128) = v1504;
  v1673 = v1738;
  v1738 = 0uLL;
  *(_QWORD *)(v1471 + 1200) = v1710;
  *(_OWORD *)(v1471 + 152) = v1477;
  v1508 = *(_OWORD *)&v1709[1];
  v1709[1] = 0;
  v1709[2] = 0;
  v1710 = 0;
  *(_QWORD *)(v1471 + 1224) = v1712;
  v1711 = 0uLL;
  v1712 = 0;
  *(_OWORD *)(v1471 + 176) = v1478;
  v1509 = v1713;
  v1713 = 0uLL;
  *(_OWORD *)(v1471 + 200) = v1479;
  v1510 = v1714;
  v1714 = 0uLL;
  *(_QWORD *)(v1471 + 1288) = v1717;
  *(_OWORD *)(v1471 + 224) = v1480;
  *(_OWORD *)(v1471 + 240) = v1481;
  v1511 = v1716;
  *((_QWORD *)&v1716 + 1) = 0;
  v1717 = 0;
  v1512 = v1721;
  v1721 = 0uLL;
  *(_QWORD *)(v1471 + 1368) = v1693;
  v1692[1] = 0;
  v1692[2] = 0;
  v1693 = 0;
  *(_QWORD *)(v1471 + 1392) = v1695;
  *(_OWORD *)(v1471 + 264) = v1482;
  *(_OWORD *)(v1471 + 296) = v1817;
  v1513 = v1694;
  v1694 = 0uLL;
  v1695 = 0;
  *(_OWORD *)(v1471 + 320) = v1483;
  v1514 = v1696;
  v1696 = 0uLL;
  *(_OWORD *)(v1471 + 368) = v1484;
  v1515 = v1697;
  v1697 = 0uLL;
  *(_QWORD *)(v1471 + 1456) = v1700;
  *(_OWORD *)(v1471 + 392) = v1485;
  *(_OWORD *)(v1471 + 408) = v1486;
  v1516 = v1699;
  *((_QWORD *)&v1699 + 1) = 0;
  v1700 = 0;
  v1517 = v1704;
  v1704 = 0uLL;
  *(_QWORD *)(v1471 + 1536) = v2034;
  *(_OWORD *)(v1471 + 432) = v1487;
  *(_OWORD *)(v1471 + 464) = v1800;
  v1518 = *(_OWORD *)&v2033[1];
  v2033[1] = 0;
  v2033[2] = 0;
  v2034 = 0;
  *(_QWORD *)(v1471 + 1560) = v2036;
  v2035 = 0uLL;
  v2036 = 0;
  *(_OWORD *)(v1471 + 488) = v1488;
  v1519 = v2037;
  v2037 = 0uLL;
  *(_OWORD *)(v1471 + 512) = v1489;
  v1520 = v2038;
  v2038 = 0uLL;
  *(_QWORD *)(v1471 + 1624) = v2041;
  *(_OWORD *)(v1471 + 560) = v1490;
  *(_OWORD *)(v1471 + 576) = v1491;
  v1521 = v2040;
  *((_QWORD *)&v2040 + 1) = 0;
  v2041 = 0;
  v2045 = 0uLL;
  *(_QWORD *)(v1471 + 1704) = v2021;
  v2020[1] = 0;
  v2020[2] = 0;
  v2021 = 0;
  *(_QWORD *)(v1471 + 1728) = v2023;
  v1522 = v2022;
  v2022 = 0uLL;
  v2023 = 0;
  *(_OWORD *)(v1471 + 600) = v1492;
  *(_OWORD *)(v1471 + 632) = v1783;
  v1523 = v2024;
  v2024 = 0uLL;
  *(_OWORD *)(v1471 + 656) = v1493;
  *(_OWORD *)(v1471 + 704) = v1761;
  v1524 = v2025;
  v2025 = 0uLL;
  *(_QWORD *)(v1471 + 1792) = v2028;
  *(_OWORD *)(v1471 + 728) = v1494;
  *(_OWORD *)(v1471 + 744) = v1495;
  v1525 = v2027;
  *((_QWORD *)&v2027 + 1) = 0;
  v2028 = 0;
  *(_OWORD *)(v1471 + 768) = v1765;
  *(_OWORD *)(v1471 + 800) = v1767;
  v1526 = v2032;
  v2032 = 0uLL;
  *(_QWORD *)(v1471 + 1872) = v2008;
  *(_OWORD *)(v1471 + 824) = v1496;
  v1527 = *(_OWORD *)&v2007[1];
  v2007[1] = 0;
  v2007[2] = 0;
  v2008 = 0;
  *(_QWORD *)(v1471 + 1896) = v2010;
  v2009 = 0uLL;
  v2010 = 0;
  *(_OWORD *)(v1471 + 848) = v1497;
  v1528 = v2011;
  v2011 = 0uLL;
  *(_OWORD *)(v1471 + 896) = v1498;
  *(_OWORD *)(v1471 + 912) = v1499;
  v1529 = v2012;
  v2012 = 0uLL;
  *(_QWORD *)(v1471 + 1960) = v2015;
  v1530 = v2014;
  *((_QWORD *)&v2014 + 1) = 0;
  v2015 = 0;
  *(_OWORD *)(v1471 + 936) = v1500;
  *(_OWORD *)(v1471 + 968) = v1753;
  v1531 = v2019;
  v2019 = 0uLL;
  *(_QWORD *)(v1471 + 2040) = v1995;
  v1994[1] = 0;
  v1994[2] = 0;
  v1995 = 0;
  *(_QWORD *)(v1471 + 2064) = v1997;
  *(_OWORD *)(v1471 + 992) = v1501;
  v1532 = v1962;
  v1533 = v1963;
  *((_QWORD *)&v1962 + 1) = 0;
  v1963 = 0;
  *(_QWORD *)(v1471 + 2640) = &off_24EC48EC0;
  *(_QWORD *)(v1471 + 2712) = v1943;
  *(_OWORD *)(v1471 + 1040) = v1502;
  *(_OWORD *)(v1471 + 2720) = v1944;
  *(_OWORD *)(v1471 + 2744) = v1946;
  *(_OWORD *)(v1471 + 2760) = v1947;
  v1534 = v1949;
  v1535 = v1950;
  *((_QWORD *)&v1949 + 1) = 0;
  v1950 = 0;
  v1947 = 0uLL;
  *(_QWORD *)(v1471 + 2776) = &off_24EC48E58;
  *(_QWORD *)(v1471 + 2800) = v1535;
  *(_OWORD *)(v1471 + 2784) = v1534;
  v1536 = v1952;
  *(_QWORD *)&v1949 = 0;
  v1946 = 0uLL;
  v1942[1] = 0;
  v1942[2] = 0;
  v1537 = v1945;
  *((_QWORD *)&v1944 + 1) = 0;
  v1945 = 0;
  v1943 = 0;
  *(_QWORD *)(v1471 + 2736) = v1537;
  *(_QWORD *)&v1944 = 0;
  *(_OWORD *)(v1471 + 1904) = v1528;
  *(_OWORD *)(v1471 + 2088) = v1999;
  *(_OWORD *)(v1471 + 2480) = v1978;
  *(_OWORD *)(v1471 + 2504) = v1980;
  *(_OWORD *)(v1471 + 2528) = *(_OWORD *)&v1955[1];
  *(_OWORD *)(v1471 + 2592) = v1960;
  v1538 = v1967;
  v1967 = 0uLL;
  *(_QWORD *)(v1471 + 2688) = &off_24EC48E28;
  *(_OWORD *)(v1471 + 2672) = v1538;
  *(_OWORD *)(v1471 + 2648) = v1965;
  v1539 = v1996;
  v1965 = 0uLL;
  *(_QWORD *)(v1471 + 2664) = &off_24EC2E850;
  v1996 = 0uLL;
  v1997 = 0;
  *(_QWORD *)(v1471 + 2608) = &off_24EC48F30;
  *(_QWORD *)(v1471 + 2632) = v1533;
  *(_QWORD *)&v1962 = 0;
  *(_OWORD *)(v1471 + 2616) = v1532;
  v1540 = v1959;
  v1959 = 0uLL;
  v1960 = 0uLL;
  v1957 = 0uLL;
  v1541 = v1958;
  v1958 = 0;
  *(_OWORD *)(v1471 + 2576) = v1540;
  v1542 = v1998;
  v1998 = 0uLL;
  *(_QWORD *)(v1471 + 2128) = v2002;
  *(_QWORD *)(v1471 + 2568) = v1541;
  v1543 = v1956;
  v1955[2] = 0;
  v1956 = 0;
  *(_QWORD *)(v1471 + 2400) = v1971;
  *(_QWORD *)(v1471 + 2544) = v1543;
  v1955[1] = 0;
  v1980 = 0uLL;
  *(_QWORD *)(v1471 + 2520) = &off_24EC48E90;
  *(_QWORD *)(v1471 + 2464) = v1976;
  v1978 = 0uLL;
  *(_QWORD *)(v1471 + 2496) = &off_24EC2E850;
  *(_OWORD *)(v1471 + 2144) = v1505;
  v1544 = v1975;
  *((_QWORD *)&v1975 + 1) = 0;
  v1976 = 0;
  *(_QWORD *)(v1471 + 2472) = &off_24EC38370;
  *(_OWORD *)(v1471 + 2448) = v1544;
  v1545 = v1973;
  v1973 = 0uLL;
  *(_QWORD *)(v1471 + 2440) = &off_24EC48F98;
  *(_QWORD *)&v1975 = 0;
  *(_OWORD *)(v1471 + 2424) = v1545;
  v1546 = v1972;
  v1972 = 0uLL;
  *(_OWORD *)(v1471 + 2408) = v1546;
  *(_OWORD *)(v1471 + 2240) = v1985;
  v1547 = v1970;
  v1971 = 0;
  v1970 = 0uLL;
  *(_OWORD *)(v1471 + 2384) = v1547;
  *(_OWORD *)(v1471 + 2280) = v1988;
  v1548 = v1993;
  v1968[1] = 0;
  v1968[2] = 0;
  v1549 = v1969;
  v1969 = 0;
  v1993 = 0uLL;
  *(_QWORD *)(v1471 + 2352) = &off_24EC48F68;
  *(_QWORD *)(v1471 + 2376) = v1549;
  *(_OWORD *)(v1471 + 2336) = v1548;
  v1550 = v1991;
  *(_QWORD *)&v1991 = 0;
  *(_QWORD *)(v1471 + 2328) = &off_24EC2E850;
  v1551 = v1989;
  *((_QWORD *)&v1988 + 1) = 0;
  v1989 = 0;
  *(_QWORD *)(v1471 + 2304) = &off_24EC45690;
  *(_OWORD *)(v1471 + 2312) = v1550;
  *((_QWORD *)&v1991 + 1) = 0;
  v1552 = v1986;
  v1986 = 0uLL;
  *(_QWORD *)(v1471 + 2272) = &off_24EC49000;
  *(_QWORD *)(v1471 + 2296) = v1551;
  *(_QWORD *)&v1988 = 0;
  *(_OWORD *)(v1471 + 2256) = v1552;
  v1553 = v2006;
  *(_QWORD *)(v1471 + 2232) = v1984;
  v1985 = 0uLL;
  v1983 = 0uLL;
  v1984 = 0;
  *(_OWORD *)(v1471 + 2168) = v1553;
  *(_OWORD *)(v1471 + 2192) = *(_OWORD *)&v1981[1];
  v1554 = v2001;
  v1555 = v1982;
  v1981[2] = 0;
  v1982 = 0;
  *((_QWORD *)&v2001 + 1) = 0;
  v2002 = 0;
  *(_QWORD *)(v1471 + 2208) = v1555;
  v1981[1] = 0;
  v2006 = 0uLL;
  *(_QWORD *)(v1471 + 2184) = &off_24EC48FD0;
  *(_QWORD *)&v2004 = 0;
  *(_QWORD *)(v1471 + 2160) = &off_24EC2E850;
  *(_QWORD *)(v1471 + 120) = &off_24EC45488;
  *(_QWORD *)(v1471 + 288) = &off_24EC45488;
  *(_QWORD *)(v1471 + 456) = &off_24EC45488;
  *(_QWORD *)(v1471 + 1128) = &off_24EC45488;
  *(_QWORD *)(v1471 + 2136) = &off_24EC45488;
  v1999 = 0uLL;
  *(_OWORD *)(v1471 + 2112) = v1554;
  v1556 = v1954;
  *(_QWORD *)&v2001 = 0;
  v1954 = 0uLL;
  *(_QWORD *)(v1471 + 2856) = &off_24EC48D50;
  *(_QWORD *)(v1471 + 2880) = v1930;
  *(_OWORD *)(v1471 + 2072) = v1542;
  v1557 = *(_OWORD *)&v1929[1];
  v1929[1] = 0;
  v1929[2] = 0;
  v1930 = 0;
  *(_QWORD *)(v1471 + 2904) = v1932;
  v1931 = 0uLL;
  v1932 = 0;
  *(_OWORD *)(v1471 + 2048) = v1539;
  v1558 = v1933;
  v1933 = 0uLL;
  *(_OWORD *)(v1471 + 1920) = v1529;
  v1559 = v1934;
  v1934 = 0uLL;
  *(_QWORD *)(v1471 + 2944) = &off_24EC48DF0;
  *(_OWORD *)(v1471 + 2000) = v1531;
  v1560 = v2017;
  *(_QWORD *)&v2017 = 0;
  *(_QWORD *)(v1471 + 1992) = &off_24EC2E850;
  *(_QWORD *)(v1471 + 2968) = v1937;
  *(_QWORD *)(v1471 + 1968) = &off_24EC2E888;
  *(_OWORD *)(v1471 + 1976) = v1560;
  *((_QWORD *)&v2017 + 1) = 0;
  v1561 = v1936;
  *((_QWORD *)&v1936 + 1) = 0;
  v1937 = 0;
  *(_QWORD *)(v1471 + 2808) = &off_24EC48D80;
  *(_QWORD *)(v1471 + 2976) = &off_24EC48D80;
  *(_OWORD *)(v1471 + 1944) = v1530;
  v1562 = v1941;
  v1941 = 0uLL;
  *(_QWORD *)&v2014 = 0;
  *(_QWORD *)(v1471 + 3024) = &off_24EC48CE8;
  *(_QWORD *)(v1471 + 3048) = v1917;
  v1916[1] = 0;
  v1916[2] = 0;
  v1917 = 0;
  *(_QWORD *)(v1471 + 3072) = v1919;
  *(_OWORD *)(v1471 + 1064) = v1503;
  *(_OWORD *)(v1471 + 1808) = v2030;
  v1563 = v1918;
  v1918 = 0uLL;
  v1919 = 0;
  *(_OWORD *)(v1471 + 1856) = v1527;
  v1564 = v1920;
  v1920 = 0uLL;
  *(_OWORD *)(v1471 + 1832) = v1526;
  v1565 = v1921;
  v1921 = 0uLL;
  *(_QWORD *)(v1471 + 3112) = &off_24EC48D18;
  *(_QWORD *)(v1471 + 3136) = v1924;
  v2030 = 0uLL;
  *(_QWORD *)(v1471 + 1824) = &off_24EC2E850;
  *(_OWORD *)(v1471 + 1736) = v1523;
  v1566 = v1923;
  *((_QWORD *)&v1923 + 1) = 0;
  v1924 = 0;
  *(_OWORD *)(v1471 + 1776) = v1525;
  v1567 = v1928;
  *(_QWORD *)&v2027 = 0;
  v1928 = 0uLL;
  *(_QWORD *)(v1471 + 3192) = &off_24EC48C80;
  *(_QWORD *)(v1471 + 3216) = v1904;
  *(_OWORD *)(v1471 + 1752) = v1524;
  v1568 = *(_OWORD *)&v1903[1];
  v1903[1] = 0;
  v1903[2] = 0;
  v1904 = 0;
  *(_QWORD *)(v1471 + 3240) = v1906;
  v1905 = 0uLL;
  v1906 = 0;
  *(_OWORD *)(v1471 + 1712) = v1522;
  v1569 = v1907;
  v1907 = 0uLL;
  *(_OWORD *)(v1471 + 1664) = v1671;
  v1570 = v1908;
  v1908 = 0uLL;
  *(_QWORD *)(v1471 + 3280) = &off_24EC48CB0;
  *(_QWORD *)(v1471 + 3304) = v1911;
  *(_QWORD *)(v1471 + 1656) = &off_24EC2E850;
  *(_OWORD *)(v1471 + 1568) = v1519;
  *(_OWORD *)(v1471 + 1608) = v1521;
  v1571 = v2043;
  v2043 = 0uLL;
  v1572 = v1910;
  *((_QWORD *)&v1910 + 1) = 0;
  v1911 = 0;
  *(_OWORD *)(v1471 + 1640) = v1571;
  v1573 = v1915;
  v1915 = 0uLL;
  *(_QWORD *)(v1471 + 3360) = &off_24EC48C18;
  *(_QWORD *)(v1471 + 3384) = v1891;
  *(_QWORD *)&v2040 = 0;
  v1890[1] = 0;
  v1890[2] = 0;
  v1891 = 0;
  *(_QWORD *)(v1471 + 3408) = v1893;
  *(_OWORD *)(v1471 + 1584) = v1520;
  v1574 = v1892;
  v1892 = 0uLL;
  v1893 = 0;
  *(_OWORD *)(v1471 + 1080) = v1506;
  v1575 = v1894;
  v1894 = 0uLL;
  *(_OWORD *)(v1471 + 1104) = v1507;
  v1576 = v1895;
  v1895 = 0uLL;
  *(_QWORD *)(v1471 + 3448) = &off_24EC48C48;
  *(_QWORD *)(v1471 + 3472) = v1898;
  *(_OWORD *)(v1471 + 1520) = v1518;
  *(_OWORD *)(v1471 + 1136) = v1736;
  v1577 = v1702;
  *(_QWORD *)&v1702 = 0;
  *(_QWORD *)(v1471 + 1488) = &off_24EC2E850;
  *(_OWORD *)(v1471 + 1496) = v1517;
  v1578 = v1897;
  *((_QWORD *)&v1897 + 1) = 0;
  v1898 = 0;
  *(_OWORD *)(v1471 + 1472) = v1577;
  v1579 = v1902;
  *((_QWORD *)&v1702 + 1) = 0;
  v1902 = 0uLL;
  *(_QWORD *)&v1699 = 0;
  *(_OWORD *)(v1471 + 1440) = v1516;
  v1580 = v1889;
  *(_OWORD *)(v1471 + 1160) = v1673;
  *(_OWORD *)(v1471 + 1400) = v1514;
  *(_OWORD *)(v1471 + 1416) = v1515;
  v1581 = v1881;
  v1582 = v1882;
  v1583 = v1876;
  *(_OWORD *)(v1471 + 1184) = v1508;
  *(_OWORD *)(v1471 + 1232) = v1509;
  *(_OWORD *)(v1471 + 1376) = v1513;
  v1584 = v1868;
  v1585 = v1869;
  v1586 = v1863;
  *(_OWORD *)(v1471 + 1248) = v1510;
  *(_OWORD *)(v1471 + 1272) = v1511;
  *(_OWORD *)(v1471 + 1304) = v1719;
  v1588 = v1842;
  v1587 = v1843;
  *(_OWORD *)(v1471 + 1328) = v1512;
  *(_QWORD *)&v1716 = 0;
  v1719 = 0uLL;
  *(_QWORD *)(v1471 + 1320) = &off_24EC2E850;
  *(_OWORD *)(v1471 + 2816) = v1536;
  *(_OWORD *)(v1471 + 2840) = v1556;
  *(_OWORD *)(v1471 + 2864) = v1557;
  *(_OWORD *)(v1471 + 2912) = v1558;
  *(_OWORD *)(v1471 + 2928) = v1559;
  *(_OWORD *)(v1471 + 2952) = v1561;
  *(_OWORD *)(v1471 + 2984) = v1939;
  *(_OWORD *)(v1471 + 3008) = v1562;
  *(_OWORD *)(v1471 + 3056) = v1563;
  *(_OWORD *)(v1471 + 3080) = v1564;
  *(_OWORD *)(v1471 + 3096) = v1565;
  *(_OWORD *)(v1471 + 3120) = v1566;
  *(_OWORD *)(v1471 + 3152) = v1926;
  *(_OWORD *)(v1471 + 3176) = v1567;
  *(_OWORD *)(v1471 + 3200) = v1568;
  *(_OWORD *)(v1471 + 3248) = v1569;
  *(_OWORD *)(v1471 + 3264) = v1570;
  *(_OWORD *)(v1471 + 3288) = v1572;
  *(_OWORD *)(v1471 + 3320) = v1913;
  *(_OWORD *)(v1471 + 3344) = v1573;
  *(_OWORD *)(v1471 + 3392) = v1574;
  *(_OWORD *)(v1471 + 3416) = v1575;
  *(_OWORD *)(v1471 + 3432) = v1576;
  *(_OWORD *)(v1471 + 3456) = v1578;
  *(_OWORD *)(v1471 + 3488) = v1900;
  *(_OWORD *)(v1471 + 3512) = v1579;
  *(_OWORD *)(v1471 + 3536) = *(_OWORD *)&v1877[1];
  *(_OWORD *)(v1471 + 3584) = v1581;
  *(_OWORD *)(v1471 + 3600) = v1582;
  *(_OWORD *)(v1471 + 3624) = v1884;
  *(_OWORD *)(v1471 + 3656) = v1887;
  *(_OWORD *)(v1471 + 3680) = v1580;
  *(_OWORD *)(v1471 + 3728) = v1866;
  *(_OWORD *)(v1471 + 3752) = v1584;
  *(_QWORD *)&v1733 = 0;
  v1736 = 0uLL;
  *(_QWORD *)(v1471 + 1152) = &off_24EC2E850;
  *(_OWORD *)(v1471 + 3768) = v1585;
  *(_OWORD *)(v1471 + 3792) = v1871;
  *(_OWORD *)(v1471 + 3824) = v1874;
  *(_OWORD *)(v1471 + 3848) = v1583;
  *(_OWORD *)(v1471 + 3872) = *(_OWORD *)&v1851[1];
  *(_OWORD *)(v1471 + 3920) = v1855;
  *(_OWORD *)(v1471 + 3936) = v1856;
  *(_OWORD *)(v1471 + 3960) = v1858;
  *(_OWORD *)(v1471 + 3992) = v1861;
  *(_OWORD *)(v1471 + 4016) = v1586;
  *(_OWORD *)(v1471 + 4064) = v1840;
  *(_OWORD *)(v1471 + 4088) = v1588;
  *(_QWORD *)(v1471 + 3528) = &off_24EC48BB0;
  *(_QWORD *)(v1471 + 3552) = v1878;
  v1877[1] = 0;
  v1877[2] = 0;
  v1878 = 0;
  *(_QWORD *)(v1471 + 3576) = v1880;
  v1879 = 0uLL;
  v1880 = 0;
  v1881 = 0uLL;
  *(_QWORD *)(v1471 + 144) = &off_24EC2E850;
  v1882 = 0uLL;
  *(_QWORD *)&v1750 = 0;
  v1753 = 0uLL;
  *(_QWORD *)(v1471 + 984) = &off_24EC2E850;
  *(_QWORD *)(v1471 + 3616) = &off_24EC48BE0;
  *(_QWORD *)(v1471 + 3640) = v1885;
  *(_QWORD *)(v1471 + 960) = &off_24EC37DE0;
  *((_QWORD *)&v1884 + 1) = 0;
  v1885 = 0;
  v1889 = 0uLL;
  v1835 = 0uLL;
  *(_QWORD *)&v1814 = 0;
  v1817 = 0uLL;
  *(_QWORD *)(v1471 + 312) = &off_24EC2E850;
  *(_QWORD *)&v1797 = 0;
  v1800 = 0uLL;
  *(_QWORD *)(v1471 + 480) = &off_24EC2E850;
  *(_QWORD *)(v1471 + 624) = &off_24EC2E888;
  *(_QWORD *)&v1780 = 0;
  v1783 = 0uLL;
  *(_QWORD *)(v1471 + 648) = &off_24EC2E850;
  *((_QWORD *)&v1767 + 1) = 0;
  v1768 = 0uLL;
  __src[2] = 0;
  __src[1] = 0;
  *(_QWORD *)(v1471 + 792) = &off_24EC37DE0;
  v1766 = 0;
  *(_QWORD *)&v1767 = 0;
  *(_QWORD *)(v1471 + 816) = &off_24EC2E850;
  v1760 = 0;
  v1761 = 0uLL;
  v1764 = 0uLL;
  v1765 = 0uLL;
  v1762 = 0;
  v1763 = 0uLL;
  v1952 = 0uLL;
  *(_QWORD *)(v1471 + 2832) = &off_24EC2E850;
  *(_QWORD *)&v1936 = 0;
  v1939 = 0uLL;
  *(_QWORD *)(v1471 + 3000) = &off_24EC2E850;
  *(_QWORD *)(v1471 + 3144) = &off_24EC2E888;
  *(_QWORD *)&v1923 = 0;
  v1926 = 0uLL;
  *(_QWORD *)(v1471 + 3168) = &off_24EC2E850;
  *(_QWORD *)(v1471 + 3312) = &off_24EC2E888;
  *(_QWORD *)&v1910 = 0;
  v1913 = 0uLL;
  *(_QWORD *)(v1471 + 3336) = &off_24EC2E850;
  *(_QWORD *)(v1471 + 3480) = &off_24EC2E888;
  *(_QWORD *)&v1897 = 0;
  v1900 = 0uLL;
  *(_QWORD *)(v1471 + 3504) = &off_24EC2E850;
  *(_QWORD *)(v1471 + 3648) = &off_24EC2E888;
  *(_QWORD *)&v1884 = 0;
  v1887 = 0uLL;
  *(_QWORD *)(v1471 + 3672) = &off_24EC2E850;
  *(_QWORD *)(v1471 + 3696) = &off_24EC48B48;
  *(_QWORD *)(v1471 + 3720) = v1865;
  v1864[1] = 0;
  v1864[2] = 0;
  v1865 = 0;
  *(_QWORD *)(v1471 + 3744) = v1867;
  v1866 = 0uLL;
  v1867 = 0;
  v1868 = 0uLL;
  v1869 = 0uLL;
  *(_QWORD *)(v1471 + 3784) = &off_24EC48B78;
  *(_QWORD *)(v1471 + 3808) = v1872;
  *((_QWORD *)&v1871 + 1) = 0;
  v1872 = 0;
  *(_QWORD *)(v1471 + 3816) = &off_24EC2E888;
  *(_QWORD *)&v1871 = 0;
  v1874 = 0uLL;
  *(_QWORD *)(v1471 + 3840) = &off_24EC2E850;
  v1876 = 0uLL;
  *(_QWORD *)(v1471 + 3864) = &off_24EC48AE0;
  *(_QWORD *)(v1471 + 3888) = v1852;
  v1851[1] = 0;
  v1851[2] = 0;
  v1852 = 0;
  *(_QWORD *)(v1471 + 3912) = v1854;
  v1853 = 0uLL;
  v1854 = 0;
  v1855 = 0uLL;
  v1856 = 0uLL;
  *(_QWORD *)(v1471 + 3952) = &off_24EC48B10;
  *(_QWORD *)(v1471 + 3976) = v1859;
  *((_QWORD *)&v1858 + 1) = 0;
  v1859 = 0;
  *(_QWORD *)(v1471 + 3984) = &off_24EC37DE0;
  *(_QWORD *)&v1858 = 0;
  v1861 = 0uLL;
  *(_QWORD *)(v1471 + 4008) = &off_24EC2E850;
  v1863 = 0uLL;
  *(_QWORD *)(v1471 + 4032) = &off_24EC48A78;
  *(_QWORD *)(v1471 + 4056) = v1839;
  v1838[1] = 0;
  v1838[2] = 0;
  v1839 = 0;
  *(_QWORD *)(v1471 + 4080) = v1841;
  v1840 = 0uLL;
  v1841 = 0;
  v1842 = 0uLL;
  *(_OWORD *)(v1471 + 4104) = v1587;
  v1843 = 0uLL;
  *(_QWORD *)(v1471 + 4120) = &off_24EC48AA8;
  *(_OWORD *)(v1471 + 4128) = v1845;
  *(_QWORD *)(v1471 + 4144) = v1846;
  *((_QWORD *)&v1845 + 1) = 0;
  v1846 = 0;
  *(_QWORD *)(v1471 + 4152) = &off_24EC37DE0;
  *(_OWORD *)(v1471 + 4160) = v1848;
  *(_QWORD *)&v1845 = 0;
  v1848 = 0uLL;
  *(_QWORD *)(v1471 + 4176) = &off_24EC2E850;
  *(_OWORD *)(v1471 + 4184) = v1850;
  v1850 = 0uLL;
  *v1672 = v1471;
  sub_223572228((uint64_t)v1838);
  if (v1674)
  {
    v1589 = (unint64_t *)&v1674->__shared_owners_;
    do
      v1590 = __ldaxr(v1589);
    while (__stlxr(v1590 - 1, v1589));
    if (!v1590)
    {
      ((void (*)(std::__shared_weak_count *))v1674->__on_zero_shared)(v1674);
      std::__shared_weak_count::__release_weak(v1674);
    }
  }
  sub_2235724D4((uint64_t)v1851);
  if (v1675)
  {
    v1591 = (unint64_t *)&v1675->__shared_owners_;
    do
      v1592 = __ldaxr(v1591);
    while (__stlxr(v1592 - 1, v1591));
    if (!v1592)
    {
      ((void (*)(std::__shared_weak_count *))v1675->__on_zero_shared)(v1675);
      std::__shared_weak_count::__release_weak(v1675);
    }
  }
  sub_223572780((uint64_t)v1864);
  if (v1676)
  {
    v1593 = (unint64_t *)&v1676->__shared_owners_;
    do
      v1594 = __ldaxr(v1593);
    while (__stlxr(v1594 - 1, v1593));
    if (!v1594)
    {
      ((void (*)(std::__shared_weak_count *))v1676->__on_zero_shared)(v1676);
      std::__shared_weak_count::__release_weak(v1676);
    }
  }
  sub_223572A2C((uint64_t)v1877);
  if (v1678)
  {
    v1595 = (unint64_t *)&v1678->__shared_owners_;
    do
      v1596 = __ldaxr(v1595);
    while (__stlxr(v1596 - 1, v1595));
    if (!v1596)
    {
      ((void (*)(std::__shared_weak_count *))v1678->__on_zero_shared)(v1678);
      std::__shared_weak_count::__release_weak(v1678);
    }
  }
  sub_223572CD8((uint64_t)v1890);
  if (v1679)
  {
    v1597 = (unint64_t *)&v1679->__shared_owners_;
    do
      v1598 = __ldaxr(v1597);
    while (__stlxr(v1598 - 1, v1597));
    if (!v1598)
    {
      ((void (*)(std::__shared_weak_count *))v1679->__on_zero_shared)(v1679);
      std::__shared_weak_count::__release_weak(v1679);
    }
  }
  sub_223572F84((uint64_t)v1903);
  if (v1680)
  {
    v1599 = (unint64_t *)&v1680->__shared_owners_;
    do
      v1600 = __ldaxr(v1599);
    while (__stlxr(v1600 - 1, v1599));
    if (!v1600)
    {
      ((void (*)(std::__shared_weak_count *))v1680->__on_zero_shared)(v1680);
      std::__shared_weak_count::__release_weak(v1680);
    }
  }
  sub_223573230((uint64_t)v1916);
  if (v1681)
  {
    v1601 = (unint64_t *)&v1681->__shared_owners_;
    do
      v1602 = __ldaxr(v1601);
    while (__stlxr(v1602 - 1, v1601));
    if (!v1602)
    {
      ((void (*)(std::__shared_weak_count *))v1681->__on_zero_shared)(v1681);
      std::__shared_weak_count::__release_weak(v1681);
    }
  }
  sub_2235734DC((uint64_t)v1929);
  if (v1682)
  {
    v1603 = (unint64_t *)&v1682->__shared_owners_;
    do
      v1604 = __ldaxr(v1603);
    while (__stlxr(v1604 - 1, v1603));
    if (!v1604)
    {
      ((void (*)(std::__shared_weak_count *))v1682->__on_zero_shared)(v1682);
      std::__shared_weak_count::__release_weak(v1682);
    }
  }
  sub_2235739A8((uint64_t)v1942);
  if (v1683)
  {
    v1605 = (unint64_t *)&v1683->__shared_owners_;
    do
      v1606 = __ldaxr(v1605);
    while (__stlxr(v1606 - 1, v1605));
    if (!v1606)
    {
      ((void (*)(std::__shared_weak_count *))v1683->__on_zero_shared)(v1683);
      std::__shared_weak_count::__release_weak(v1683);
    }
  }
  sub_223573C54((uint64_t)v1955);
  if (v1684)
  {
    v1607 = (unint64_t *)&v1684->__shared_owners_;
    do
      v1608 = __ldaxr(v1607);
    while (__stlxr(v1608 - 1, v1607));
    if (!v1608)
    {
      ((void (*)(std::__shared_weak_count *))v1684->__on_zero_shared)(v1684);
      std::__shared_weak_count::__release_weak(v1684);
    }
  }
  sub_223574120((uint64_t)v1968);
  if (v1685)
  {
    v1609 = (unint64_t *)&v1685->__shared_owners_;
    do
      v1610 = __ldaxr(v1609);
    while (__stlxr(v1610 - 1, v1609));
    if (!v1610)
    {
      ((void (*)(std::__shared_weak_count *))v1685->__on_zero_shared)(v1685);
      std::__shared_weak_count::__release_weak(v1685);
    }
  }
  sub_2235743CC((uint64_t)v1981);
  if (v1686)
  {
    v1611 = (unint64_t *)&v1686->__shared_owners_;
    do
      v1612 = __ldaxr(v1611);
    while (__stlxr(v1612 - 1, v1611));
    if (!v1612)
    {
      ((void (*)(std::__shared_weak_count *))v1686->__on_zero_shared)(v1686);
      std::__shared_weak_count::__release_weak(v1686);
    }
  }
  sub_223574678((uint64_t)v1994);
  if (v1687)
  {
    v1613 = (unint64_t *)&v1687->__shared_owners_;
    do
      v1614 = __ldaxr(v1613);
    while (__stlxr(v1614 - 1, v1613));
    if (!v1614)
    {
      ((void (*)(std::__shared_weak_count *))v1687->__on_zero_shared)(v1687);
      std::__shared_weak_count::__release_weak(v1687);
    }
  }
  sub_223574884((uint64_t)v2007);
  if (v1688)
  {
    v1615 = (unint64_t *)&v1688->__shared_owners_;
    do
      v1616 = __ldaxr(v1615);
    while (__stlxr(v1616 - 1, v1615));
    if (!v1616)
    {
      ((void (*)(std::__shared_weak_count *))v1688->__on_zero_shared)(v1688);
      std::__shared_weak_count::__release_weak(v1688);
    }
  }
  sub_223574A90((uint64_t)v2020);
  if (v1689)
  {
    v1617 = (unint64_t *)&v1689->__shared_owners_;
    do
      v1618 = __ldaxr(v1617);
    while (__stlxr(v1618 - 1, v1617));
    if (!v1618)
    {
      ((void (*)(std::__shared_weak_count *))v1689->__on_zero_shared)(v1689);
      std::__shared_weak_count::__release_weak(v1689);
    }
  }
  sub_223574D3C((uint64_t)v2033);
  if (v1690)
  {
    v1619 = (unint64_t *)&v1690->__shared_owners_;
    do
      v1620 = __ldaxr(v1619);
    while (__stlxr(v1620 - 1, v1619));
    if (!v1620)
    {
      ((void (*)(std::__shared_weak_count *))v1690->__on_zero_shared)(v1690);
      std::__shared_weak_count::__release_weak(v1690);
    }
  }
  sub_223574FE8((uint64_t)v1692);
  if (v1691)
  {
    v1621 = (unint64_t *)&v1691->__shared_owners_;
    do
      v1622 = __ldaxr(v1621);
    while (__stlxr(v1622 - 1, v1621));
    if (!v1622)
    {
      ((void (*)(std::__shared_weak_count *))v1691->__on_zero_shared)(v1691);
      std::__shared_weak_count::__release_weak(v1691);
    }
  }
  sub_223575294((uint64_t)v1709);
  v1623 = v1706;
  if (v1706)
  {
    v1624 = (unint64_t *)&v1706->__shared_owners_;
    do
      v1625 = __ldaxr(v1624);
    while (__stlxr(v1625 - 1, v1624));
    if (!v1625)
    {
      ((void (*)(std::__shared_weak_count *))v1623->__on_zero_shared)(v1623);
      std::__shared_weak_count::__release_weak(v1623);
    }
  }
  v1626 = v1708;
  if (v1708)
  {
    v1627 = (unint64_t *)&v1708->__shared_owners_;
    do
      v1628 = __ldaxr(v1627);
    while (__stlxr(v1628 - 1, v1627));
    if (!v1628)
    {
      ((void (*)(std::__shared_weak_count *))v1626->__on_zero_shared)(v1626);
      std::__shared_weak_count::__release_weak(v1626);
    }
  }
  sub_223575540((uint64_t)v1726);
  v1629 = v1723;
  if (v1723)
  {
    v1630 = (unint64_t *)&v1723->__shared_owners_;
    do
      v1631 = __ldaxr(v1630);
    while (__stlxr(v1631 - 1, v1630));
    if (!v1631)
    {
      ((void (*)(std::__shared_weak_count *))v1629->__on_zero_shared)(v1629);
      std::__shared_weak_count::__release_weak(v1629);
    }
  }
  v1632 = v1725;
  if (v1725)
  {
    v1633 = (unint64_t *)&v1725->__shared_owners_;
    do
      v1634 = __ldaxr(v1633);
    while (__stlxr(v1634 - 1, v1633));
    if (!v1634)
    {
      ((void (*)(std::__shared_weak_count *))v1632->__on_zero_shared)(v1632);
      std::__shared_weak_count::__release_weak(v1632);
    }
  }
  sub_2235757EC((uint64_t)v1743);
  v1635 = v1740;
  if (v1740)
  {
    v1636 = (unint64_t *)&v1740->__shared_owners_;
    do
      v1637 = __ldaxr(v1636);
    while (__stlxr(v1637 - 1, v1636));
    if (!v1637)
    {
      ((void (*)(std::__shared_weak_count *))v1635->__on_zero_shared)(v1635);
      std::__shared_weak_count::__release_weak(v1635);
    }
  }
  v1638 = v1742;
  if (v1742)
  {
    v1639 = (unint64_t *)&v1742->__shared_owners_;
    do
      v1640 = __ldaxr(v1639);
    while (__stlxr(v1640 - 1, v1639));
    if (!v1640)
    {
      ((void (*)(std::__shared_weak_count *))v1638->__on_zero_shared)(v1638);
      std::__shared_weak_count::__release_weak(v1638);
    }
  }
  sub_2234EE968((uint64_t)__src);
  v1641 = v1757;
  if (v1757)
  {
    v1642 = (unint64_t *)&v1757->__shared_owners_;
    do
      v1643 = __ldaxr(v1642);
    while (__stlxr(v1643 - 1, v1642));
    if (!v1643)
    {
      ((void (*)(std::__shared_weak_count *))v1641->__on_zero_shared)(v1641);
      std::__shared_weak_count::__release_weak(v1641);
    }
  }
  v1644 = (std::__shared_weak_count *)*((_QWORD *)&v1758 + 1);
  if (*((_QWORD *)&v1758 + 1))
  {
    v1645 = (unint64_t *)(*((_QWORD *)&v1758 + 1) + 8);
    do
      v1646 = __ldaxr(v1645);
    while (__stlxr(v1646 - 1, v1645));
    if (!v1646)
    {
      ((void (*)(std::__shared_weak_count *))v1644->__on_zero_shared)(v1644);
      std::__shared_weak_count::__release_weak(v1644);
    }
  }
  sub_223575A98((uint64_t)__dst);
  v1647 = v1770;
  if (v1770)
  {
    v1648 = (unint64_t *)&v1770->__shared_owners_;
    do
      v1649 = __ldaxr(v1648);
    while (__stlxr(v1649 - 1, v1648));
    if (!v1649)
    {
      ((void (*)(std::__shared_weak_count *))v1647->__on_zero_shared)(v1647);
      std::__shared_weak_count::__release_weak(v1647);
    }
  }
  v1650 = v1772;
  if (v1772)
  {
    v1651 = (unint64_t *)&v1772->__shared_owners_;
    do
      v1652 = __ldaxr(v1651);
    while (__stlxr(v1652 - 1, v1651));
    if (!v1652)
    {
      ((void (*)(std::__shared_weak_count *))v1650->__on_zero_shared)(v1650);
      std::__shared_weak_count::__release_weak(v1650);
    }
  }
  sub_223575D44((uint64_t)__p);
  v1653 = v1787;
  if (v1787)
  {
    v1654 = (unint64_t *)&v1787->__shared_owners_;
    do
      v1655 = __ldaxr(v1654);
    while (__stlxr(v1655 - 1, v1654));
    if (!v1655)
    {
      ((void (*)(std::__shared_weak_count *))v1653->__on_zero_shared)(v1653);
      std::__shared_weak_count::__release_weak(v1653);
    }
  }
  v1656 = v1789;
  if (v1789)
  {
    v1657 = (unint64_t *)&v1789->__shared_owners_;
    do
      v1658 = __ldaxr(v1657);
    while (__stlxr(v1658 - 1, v1657));
    if (!v1658)
    {
      ((void (*)(std::__shared_weak_count *))v1656->__on_zero_shared)(v1656);
      std::__shared_weak_count::__release_weak(v1656);
    }
  }
  sub_223575FF0((uint64_t)v1807);
  v1659 = v1804;
  if (v1804)
  {
    v1660 = (unint64_t *)&v1804->__shared_owners_;
    do
      v1661 = __ldaxr(v1660);
    while (__stlxr(v1661 - 1, v1660));
    if (!v1661)
    {
      ((void (*)(std::__shared_weak_count *))v1659->__on_zero_shared)(v1659);
      std::__shared_weak_count::__release_weak(v1659);
    }
  }
  v1662 = v1806;
  if (v1806)
  {
    v1663 = (unint64_t *)&v1806->__shared_owners_;
    do
      v1664 = __ldaxr(v1663);
    while (__stlxr(v1664 - 1, v1663));
    if (!v1664)
    {
      ((void (*)(std::__shared_weak_count *))v1662->__on_zero_shared)(v1662);
      std::__shared_weak_count::__release_weak(v1662);
    }
  }
  sub_2235761FC((uint64_t)&v1824);
  v1665 = v1821;
  if (v1821)
  {
    v1666 = (unint64_t *)&v1821->__shared_owners_;
    do
      v1667 = __ldaxr(v1666);
    while (__stlxr(v1667 - 1, v1666));
    if (!v1667)
    {
      ((void (*)(std::__shared_weak_count *))v1665->__on_zero_shared)(v1665);
      std::__shared_weak_count::__release_weak(v1665);
    }
  }
  v1668 = v1823;
  if (v1823)
  {
    v1669 = (unint64_t *)&v1823->__shared_owners_;
    do
      v1670 = __ldaxr(v1669);
    while (__stlxr(v1670 - 1, v1669));
    if (!v1670)
    {
      ((void (*)(std::__shared_weak_count *))v1668->__on_zero_shared)(v1668);
      std::__shared_weak_count::__release_weak(v1668);
    }
  }
}

void sub_223582F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,char a63)
{
  char a65;
  char a67;
  char a69;
  char a71;

  if (SLOBYTE(STACK[0x1687]) < 0)
    operator delete((void *)STACK[0x1670]);
  sub_223167354((uint64_t)&STACK[0x15E0]);
  sub_223167354((uint64_t)&STACK[0x15F0]);
  if (SLOBYTE(STACK[0x1617]) < 0)
    operator delete((void *)STACK[0x1600]);
  if (SLOBYTE(STACK[0x1637]) < 0)
    operator delete((void *)STACK[0x1620]);
  sub_223167354((uint64_t)&a61);
  sub_223167354((uint64_t)&a63);
  sub_2235724D4((uint64_t)&STACK[0xB90]);
  sub_223167354((uint64_t)&a65);
  sub_223167354((uint64_t)&a67);
  sub_223572780((uint64_t)&STACK[0xC40]);
  sub_223167354((uint64_t)&a69);
  sub_223167354((uint64_t)&a71);
  sub_223572A2C((uint64_t)&STACK[0xCF0]);
  sub_223167354((uint64_t)&STACK[0x200]);
  sub_223167354((uint64_t)&STACK[0x210]);
  sub_223572CD8((uint64_t)&STACK[0xDA0]);
  sub_223167354((uint64_t)&STACK[0x220]);
  sub_223167354((uint64_t)&STACK[0x230]);
  sub_223572F84((uint64_t)&STACK[0xE50]);
  sub_223167354((uint64_t)&STACK[0x240]);
  sub_223167354((uint64_t)&STACK[0x250]);
  sub_223573230((uint64_t)&STACK[0xF00]);
  sub_223167354((uint64_t)&STACK[0x260]);
  sub_223167354((uint64_t)&STACK[0x270]);
  sub_2235734DC((uint64_t)&STACK[0xFB0]);
  sub_223167354((uint64_t)&STACK[0x280]);
  sub_223167354((uint64_t)&STACK[0x290]);
  sub_2235739A8((uint64_t)&STACK[0x1060]);
  sub_223167354((uint64_t)&STACK[0x2A0]);
  sub_223167354((uint64_t)&STACK[0x2B0]);
  sub_223573C54((uint64_t)&STACK[0x1110]);
  sub_223167354((uint64_t)&STACK[0x2C0]);
  sub_223167354((uint64_t)&STACK[0x2D0]);
  sub_223574120((uint64_t)&STACK[0x11C0]);
  sub_223167354((uint64_t)&STACK[0x2E0]);
  sub_223167354((uint64_t)&STACK[0x2F0]);
  sub_2235743CC((uint64_t)&STACK[0x1270]);
  sub_223167354((uint64_t)&STACK[0x300]);
  sub_223167354((uint64_t)&STACK[0x310]);
  sub_223574678((uint64_t)&STACK[0x1320]);
  sub_223167354((uint64_t)&STACK[0x320]);
  sub_223167354((uint64_t)&STACK[0x330]);
  sub_223574884((uint64_t)&STACK[0x13D0]);
  sub_223167354((uint64_t)&STACK[0x340]);
  sub_223167354((uint64_t)&STACK[0x350]);
  sub_223574A90((uint64_t)&STACK[0x1480]);
  sub_223167354((uint64_t)&STACK[0x360]);
  sub_223167354((uint64_t)&STACK[0x370]);
  sub_223574D3C((uint64_t)&STACK[0x1530]);
  sub_223167354((uint64_t)&STACK[0x380]);
  sub_223167354((uint64_t)&STACK[0x390]);
  sub_223574FE8((uint64_t)&STACK[0x3C0]);
  sub_223167354((uint64_t)&STACK[0x3A0]);
  sub_223167354((uint64_t)&STACK[0x3B0]);
  sub_223575294((uint64_t)&STACK[0x490]);
  sub_223167354((uint64_t)&STACK[0x470]);
  sub_223167354((uint64_t)&STACK[0x480]);
  sub_223575540((uint64_t)&STACK[0x560]);
  sub_223167354((uint64_t)&STACK[0x540]);
  sub_223167354((uint64_t)&STACK[0x550]);
  sub_2235757EC((uint64_t)&STACK[0x630]);
  sub_223167354((uint64_t)&STACK[0x610]);
  sub_223167354((uint64_t)&STACK[0x620]);
  sub_2234EE968((uint64_t)&STACK[0x700]);
  sub_223167354((uint64_t)&STACK[0x6E0]);
  sub_223167354((uint64_t)&STACK[0x6F0]);
  sub_223575A98((uint64_t)&STACK[0x7D0]);
  sub_223167354((uint64_t)&STACK[0x7B0]);
  sub_223167354((uint64_t)&STACK[0x7C0]);
  sub_223575D44((uint64_t)&STACK[0x8A0]);
  sub_223167354((uint64_t)&STACK[0x880]);
  sub_223167354((uint64_t)&STACK[0x890]);
  sub_223575FF0((uint64_t)&STACK[0x970]);
  sub_223167354((uint64_t)&STACK[0x950]);
  sub_223167354((uint64_t)&STACK[0x960]);
  sub_2235761FC((uint64_t)&STACK[0xA38]);
  sub_223167354((uint64_t)&STACK[0xA18]);
  sub_223167354((uint64_t)&STACK[0xA28]);
  _Unwind_Resume(a1);
}

void sub_223583D50()
{
  int v0;
  void *v1;
  uint64_t v2;

  sub_223167354(v2 - 208);
  if (v0 < 0)
    operator delete(v1);
  JUMPOUT(0x223583A84);
}

void sub_223583D6C()
{
  uint64_t v0;
  std::__shared_weak_count *v1;
  uint64_t v2;

  if (v1)
  {
    std::__shared_weak_count::__release_weak(v1);
    sub_223167354(v2);
    sub_223167354(v0);
    if ((SLOBYTE(STACK[0xC77]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0xC5F]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x1600]);
        sub_223167354((uint64_t)&STACK[0x1620]);
        JUMPOUT(0x223583E70);
      }
LABEL_4:
      operator delete((void *)STACK[0xC48]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v0);
    if ((SLOBYTE(STACK[0xC77]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0xC60]);
  if ((SLOBYTE(STACK[0xC5F]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223583DF4()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x1620]);
  JUMPOUT(0x223583E64);
}

void sub_223583EF0()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x1600]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223583E70);
}

void sub_223583F10()
{
  uint64_t v0;
  std::__shared_weak_count *v1;
  uint64_t v2;

  if (v1)
  {
    std::__shared_weak_count::__release_weak(v1);
    sub_223167354(v0);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0xD27]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0xD0F]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x1620]);
        sub_223167354((uint64_t)&STACK[0x1650]);
        JUMPOUT(0x223584028);
      }
LABEL_4:
      operator delete((void *)STACK[0xCF8]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v0);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0xD27]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0xD10]);
  if ((SLOBYTE(STACK[0xD0F]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223583F9C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x1650]);
  JUMPOUT(0x22358401CLL);
}

void sub_223583FC8()
{
  JUMPOUT(0x223583FD4);
}

void sub_22358408C()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x1620]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223584028);
}

void sub_2235840AC()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0xDD7]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0xDBF]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x1650]);
        sub_223167354((uint64_t)&STACK[0x1670]);
        JUMPOUT(0x2235841B0);
      }
LABEL_4:
      operator delete((void *)STACK[0xDA8]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0xDD7]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0xDC0]);
  if ((SLOBYTE(STACK[0xDBF]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223584134()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x1670]);
  JUMPOUT(0x2235841A4);
}

void sub_223584218()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x1650]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x2235841B0);
}

void sub_223584238()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0xE87]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0xE6F]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x1670]);
        sub_223167354((uint64_t)&STACK[0xAE0]);
        JUMPOUT(0x22358432CLL);
      }
LABEL_4:
      operator delete((void *)STACK[0xE58]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0xE87]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0xE70]);
  if ((SLOBYTE(STACK[0xE6F]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_2235842B8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0xAE0]);
  JUMPOUT(0x223584320);
}

void sub_223584394()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x1670]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x22358432CLL);
}

void sub_2235843B4()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0xF37]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0xF1F]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0xAE0]);
        sub_223167354((uint64_t)&STACK[0xB90]);
        JUMPOUT(0x2235844A4);
      }
LABEL_4:
      operator delete((void *)STACK[0xF08]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0xF37]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0xF20]);
  if ((SLOBYTE(STACK[0xF1F]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223584434()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0xB90]);
  JUMPOUT(0x22358449CLL);
}

void sub_22358450C()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0xAE0]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x2235844A4);
}

void sub_223584528()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0xFE7]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0xFCF]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0xB90]);
        sub_223167354((uint64_t)&STACK[0xC40]);
        JUMPOUT(0x223584618);
      }
LABEL_4:
      operator delete((void *)STACK[0xFB8]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0xFE7]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0xFD0]);
  if ((SLOBYTE(STACK[0xFCF]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_2235845A8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0xC40]);
  JUMPOUT(0x223584610);
}

void sub_22358467C()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0xB90]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223584618);
}

void sub_223584698()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
    std::__shared_weak_count::__release_weak(v0);
  sub_223167354(v1);
  sub_223167354(v2);
  if (SLOBYTE(STACK[0x1097]) < 0)
    operator delete((void *)STACK[0x1080]);
  if (SLOBYTE(STACK[0x107F]) < 0)
    operator delete((void *)STACK[0x1068]);
  sub_223167354((uint64_t)&STACK[0xC40]);
  sub_223167354((uint64_t)&STACK[0xCF0]);
  JUMPOUT(0x223584768);
}

void sub_2235846F8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0xCF0]);
  JUMPOUT(0x223584760);
}

void sub_2235847E8()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0xC40]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223584768);
}

void sub_223584804()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 207) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0xCF0]);
        sub_223167354((uint64_t)&STACK[0xDA0]);
        JUMPOUT(0x2235848F4);
      }
LABEL_4:
      operator delete((void *)STACK[0x1118]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x1130]);
  if ((*(char *)(v1 + 207) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223584884()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0xDA0]);
  JUMPOUT(0x2235848ECLL);
}

void sub_22358497C()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0xCF0]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x2235848F4);
}

void sub_223584998()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 207) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0xDA0]);
        sub_223167354((uint64_t)&STACK[0xE50]);
        JUMPOUT(0x223584A88);
      }
LABEL_4:
      operator delete((void *)STACK[0x11C8]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x11E0]);
  if ((*(char *)(v1 + 207) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223584A18()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0xE50]);
  JUMPOUT(0x223584A80);
}

void sub_223584B1C()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0xDA0]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223584A88);
}

void sub_223584B38()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 207) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0xE50]);
        sub_223167354((uint64_t)&STACK[0xF00]);
        JUMPOUT(0x223584C28);
      }
LABEL_4:
      operator delete((void *)STACK[0x1278]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x1290]);
  if ((*(char *)(v1 + 207) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223584BB8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0xF00]);
  JUMPOUT(0x223584C20);
}

void sub_223584CC8()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0xE50]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223584C28);
}

void sub_223584CE4()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v3);
    sub_223167354(v2);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 207) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0xF00]);
        sub_223167354((uint64_t)&STACK[0xFB0]);
        JUMPOUT(0x223584DD4);
      }
LABEL_4:
      operator delete((void *)STACK[0x1328]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v3);
    sub_223167354(v2);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x1340]);
  if ((*(char *)(v1 + 207) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223584D64()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0xFB0]);
  JUMPOUT(0x223584DCCLL);
}

void sub_223584E58()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0xF00]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223584DD4);
}

void sub_223584E74()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 207) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0xFB0]);
        sub_223167354((uint64_t)&STACK[0x1060]);
        JUMPOUT(0x223584F70);
      }
LABEL_4:
      operator delete((void *)STACK[0x13D8]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x13F0]);
  if ((*(char *)(v1 + 207) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223584EF8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x1060]);
  JUMPOUT(0x223584F68);
}

void sub_223584FF8()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0xFB0]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223584F70);
}

void sub_223585014()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 207) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x1060]);
        sub_223167354((uint64_t)&STACK[0x1110]);
        JUMPOUT(0x223585118);
      }
LABEL_4:
      operator delete((void *)STACK[0x1488]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x14A0]);
  if ((*(char *)(v1 + 207) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_22358509C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x1110]);
  JUMPOUT(0x22358510CLL);
}

void sub_2235851A0()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x1060]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223585118);
}

void sub_2235851C0()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 207) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x1110]);
        sub_223167354((uint64_t)&STACK[0x11C0]);
        JUMPOUT(0x2235852C4);
      }
LABEL_4:
      operator delete((void *)STACK[0x1538]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v3);
    if ((*(char *)(v1 + 231) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x1550]);
  if ((*(char *)(v1 + 207) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223585248()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x11C0]);
  JUMPOUT(0x2235852B8);
}

void sub_223585350()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x1110]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x2235852C4);
}

void sub_223585370()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x3F7]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x3DF]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x11C0]);
        sub_223167354((uint64_t)&STACK[0x1270]);
        JUMPOUT(0x223585470);
      }
LABEL_4:
      operator delete((void *)STACK[0x3C8]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x3F7]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x3E0]);
  if ((SLOBYTE(STACK[0x3DF]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_2235853F4()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x1270]);
  JUMPOUT(0x223585464);
}

void sub_223585500()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x11C0]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223585470);
}

void sub_223585520()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x4C7]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x4AF]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x1270]);
        sub_223167354((uint64_t)&STACK[0x1320]);
        JUMPOUT(0x223585620);
      }
LABEL_4:
      operator delete((void *)STACK[0x498]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x4C7]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x4B0]);
  if ((SLOBYTE(STACK[0x4AF]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_2235855A4()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x1320]);
  JUMPOUT(0x223585614);
}

void sub_2235856A0()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x1270]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223585620);
}

void sub_2235856C0()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x597]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x57F]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x1320]);
        sub_223167354((uint64_t)&STACK[0x13D0]);
        JUMPOUT(0x2235857C4);
      }
LABEL_4:
      operator delete((void *)STACK[0x568]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x597]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x580]);
  if ((SLOBYTE(STACK[0x57F]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223585748()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x13D0]);
  JUMPOUT(0x2235857B8);
}

void sub_22358583C()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x1320]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x2235857C4);
}

void sub_22358585C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  std::__shared_weak_count *v50;
  uint64_t v51;

  if (v50)
  {
    std::__shared_weak_count::__release_weak(v50);
    sub_223167354(a50);
    sub_223167354(v51);
    if ((SLOBYTE(STACK[0x667]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x64F]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x13D0]);
        sub_223167354((uint64_t)&STACK[0x1480]);
        JUMPOUT(0x22358595CLL);
      }
LABEL_4:
      operator delete((void *)STACK[0x638]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(a50);
    sub_223167354(v51);
    if ((SLOBYTE(STACK[0x667]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x650]);
  if ((SLOBYTE(STACK[0x64F]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_2235858E0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x1480]);
  JUMPOUT(0x223585950);
}

void sub_2235859CC()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x13D0]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x22358595CLL);
}

void sub_2235859EC()
{
  JUMPOUT(0x223583CC4);
}

void sub_2235859F4()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0x807]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x7EF]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x1530]);
        sub_223167354((uint64_t)&STACK[0x3C0]);
        JUMPOUT(0x223585AECLL);
      }
LABEL_4:
      operator delete((void *)STACK[0x7D8]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0x807]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x7F0]);
  if ((SLOBYTE(STACK[0x7EF]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223585A78()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x3C0]);
  JUMPOUT(0x223585AE0);
}

void sub_223585B54()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x1530]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223585AECLL);
}

void sub_223585B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  std::__shared_weak_count *v54;
  uint64_t v55;

  if (v54)
  {
    std::__shared_weak_count::__release_weak(v54);
    sub_223167354(a54);
    sub_223167354(v55);
    if ((SLOBYTE(STACK[0x8D7]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x8BF]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x3C0]);
        sub_223167354((uint64_t)&STACK[0x490]);
        JUMPOUT(0x223585C90);
      }
LABEL_4:
      operator delete((void *)STACK[0x8A8]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(a54);
    sub_223167354(v55);
    if ((SLOBYTE(STACK[0x8D7]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x8C0]);
  if ((SLOBYTE(STACK[0x8BF]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223585BF0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x490]);
  JUMPOUT(0x223585C88);
}

void sub_223585C10()
{
  uint64_t v0;
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x1022C400958DFA3);
  sub_2234932E8(v0 + 16);
  JUMPOUT(0x223585C44);
}

void sub_223585CF8()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x3C0]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223585C90);
}

void sub_223585D14()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x9A7]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x98F]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x490]);
        sub_223167354((uint64_t)&STACK[0x560]);
        JUMPOUT(0x223585E30);
      }
LABEL_4:
      operator delete((void *)STACK[0x978]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v1);
    sub_223167354(v2);
    if ((SLOBYTE(STACK[0x9A7]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0x990]);
  if ((SLOBYTE(STACK[0x98F]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223585D90()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x560]);
  JUMPOUT(0x223585E28);
}

void sub_223585DB0()
{
  uint64_t v0;
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x1022C400958DFA3);
  sub_2234932E8(v0 + 16);
  JUMPOUT(0x223585DE4);
}

void sub_223585E94()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x490]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223585E30);
}

void sub_223585EB0()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0)
  {
    std::__shared_weak_count::__release_weak(v0);
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0xA6F]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0xA57]) & 0x80000000) == 0)
      {
LABEL_5:
        sub_223167354((uint64_t)&STACK[0x560]);
        sub_223167354((uint64_t)&STACK[0x630]);
        JUMPOUT(0x223585FD0);
      }
LABEL_4:
      operator delete((void *)STACK[0xA40]);
      goto LABEL_5;
    }
  }
  else
  {
    sub_223167354(v2);
    sub_223167354(v1);
    if ((SLOBYTE(STACK[0xA6F]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  operator delete((void *)STACK[0xA58]);
  if ((SLOBYTE(STACK[0xA57]) & 0x80000000) == 0)
    goto LABEL_5;
  goto LABEL_4;
}

void sub_223585F30()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 8))(v0);
  sub_223167354((uint64_t)&STACK[0x630]);
  JUMPOUT(0x223585FC8);
}

void sub_223585F50()
{
  uint64_t v0;
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x1022C400958DFA3);
  sub_2234932E8(v0 + 16);
  JUMPOUT(0x223585F84);
}

void sub_223586064()
{
  void *v0;
  int v1;

  sub_223167354((uint64_t)&STACK[0x560]);
  if (v1 < 0)
    operator delete(v0);
  JUMPOUT(0x223585FD0);
}

void sub_223586084(uint64_t a1)
{
  sub_2235879C4(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235860A8(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count **v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  std::mutex **v24;
  uint64_t **v25;
  std::__shared_weak_count *v26;
  std::__shared_weak_count *v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  unint64_t *p_shared_weak_owners;
  unint64_t v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t **v34;
  std::__shared_weak_count *v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  __int128 *v48;
  __int128 *v49;
  uint64_t v50;
  std::__shared_weak_count *v51[2];
  _QWORD v52[229];
  std::__shared_weak_count *v53;
  __int128 v54;
  uint64_t v55;
  __int128 *v56;
  _BYTE v57[24];
  _BYTE *v58;
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v25 = (uint64_t **)a1[9];
    *(_OWORD *)v51 = 0uLL;
    v26 = (std::__shared_weak_count *)a1[5];
    if (v26)
    {
      v27 = std::__shared_weak_count::lock(v26);
      if (v27)
      {
        v28 = v27;
        v29 = (std::__shared_weak_count *)a1[4];
        p_shared_weak_owners = (unint64_t *)&v27->__shared_weak_owners_;
        do
          v31 = __ldxr(p_shared_weak_owners);
        while (__stxr(v31 + 1, p_shared_weak_owners));
        v51[0] = v29;
        v51[1] = v27;
        p_shared_owners = (unint64_t *)&v27->__shared_owners_;
        do
          v33 = __ldaxr(p_shared_owners);
        while (__stlxr(v33 - 1, p_shared_owners));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      else
      {
        *(_OWORD *)v51 = 0uLL;
      }
    }
    sub_223257000((uint64_t)v52, a2);
    v56 = 0;
    v48 = (__int128 *)operator new(0x738uLL);
    *(_QWORD *)v48 = &off_24EC49698;
    *(__int128 *)((char *)v48 + 8) = *(_OWORD *)v51;
    sub_2232568B4((uint64_t)v48 + 24, (uint64_t)v52);
    v56 = v48;
    sub_2245022E4(*v25, (uint64_t)&v54);
    v49 = v56;
    if (v56 == &v54)
    {
      v50 = 4;
      v49 = &v54;
    }
    else
    {
      if (!v56)
      {
LABEL_58:
        sub_2232555B8((uint64_t)v52);
        return;
      }
      v50 = 5;
    }
    (*(void (**)(__int128 *))(*(_QWORD *)v49 + 8 * v50))(v49);
    goto LABEL_58;
  }
  v4 = (std::__shared_weak_count *)operator new(0x738uLL);
  v4->__shared_owners_ = 0;
  v5 = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC38750;
  v6 = v4 + 1;
  sub_223257000((uint64_t)&v4[1], a2);
  v52[228] = v4 + 1;
  v53 = v4;
  v7 = (unint64_t *)&v4->__shared_weak_owners_;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  v9 = (uint64_t *)a1[18];
  v10 = (_QWORD *)operator new();
  *v10 = v9 + 7;
  std::mutex::lock((std::mutex *)(v9 + 7));
  *(_QWORD *)&v54 = v10;
  *((_QWORD *)&v54 + 1) = v9;
  if (!*((_BYTE *)v9 + 48))
    sub_22324A974();
  v11 = v9[4];
  v12 = *v9;
  v13 = (std::__shared_weak_count **)(*v9 + 16 * v11);
  do
    v14 = __ldxr(v5);
  while (__stxr(v14 + 1, v5));
  *v13 = v6;
  v15 = v12 + 16 * v11;
  v16 = *(std::__shared_weak_count **)(v15 + 8);
  *(_QWORD *)(v15 + 8) = v4;
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v19 = (v9[1] - *v9) >> 4;
  v20 = v9[5];
  v21 = v9[4] + 1;
  if (v21 >= v19)
    v22 = (v9[1] - *v9) >> 4;
  else
    v22 = 0;
  v9[4] = v21 - v22;
  if (v20 != v19)
  {
    v9[5] = v20 + 1;
    v24 = (std::mutex **)v54;
    if (!(_QWORD)v54)
      goto LABEL_33;
    goto LABEL_32;
  }
  v23 = v9[3] + 1;
  if (v23 < v19)
    v19 = 0;
  v9[3] = v23 - v19;
  v24 = (std::mutex **)v54;
  if ((_QWORD)v54)
  {
LABEL_32:
    std::mutex::unlock(*v24);
    MEMORY[0x227684CE8](v24, 0x20C4093837F09);
  }
LABEL_33:
  v34 = (uint64_t **)a1[9];
  v54 = 0uLL;
  v35 = (std::__shared_weak_count *)a1[5];
  if (v35)
  {
    v36 = std::__shared_weak_count::lock(v35);
    if (v36)
    {
      v37 = v36;
      v38 = a1[4];
      v39 = (unint64_t *)&v36->__shared_weak_owners_;
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
      *(_QWORD *)&v54 = v38;
      *((_QWORD *)&v54 + 1) = v36;
      v41 = (unint64_t *)&v36->__shared_owners_;
      do
        v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    else
    {
      v54 = 0uLL;
    }
  }
  v43 = (char *)operator new(0x30uLL);
  *(_QWORD *)v43 = &off_24EC49618;
  *(_OWORD *)(v43 + 8) = v54;
  v54 = 0uLL;
  *((_QWORD *)v43 + 3) = v6;
  *((_QWORD *)v43 + 4) = v4;
  v55 = 0;
  v56 = 0;
  v58 = v43;
  sub_2245022E4(*v34, (uint64_t)v57);
  v44 = v58;
  if (v58 == v57)
  {
    v45 = 4;
    v44 = v57;
  }
  else
  {
    if (!v58)
      goto LABEL_47;
    v45 = 5;
  }
  (*(void (**)(void))(*v44 + 8 * v45))();
LABEL_47:
  if (v53)
  {
    v46 = &v53->__shared_owners_;
    do
      v47 = __ldaxr((unint64_t *)v46);
    while (__stlxr(v47 - 1, (unint64_t *)v46));
    if (!v47)
    {
      ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
      std::__shared_weak_count::__release_weak(v53);
    }
  }
}

void sub_223586500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v12 = *(_QWORD **)(v10 - 120);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 144);
  }
  else
  {
    if (!v12)
    {
      sub_223494F34((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
  sub_223494F34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223586554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_22358664C(_QWORD *a1, uint64_t a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_weak_owners;
  unint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count **v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  std::mutex **v29;
  uint64_t **v30;
  std::__shared_weak_count *v31;
  std::__shared_weak_count *v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t **v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  std::__shared_weak_count *v49;
  char *v50;
  std::string *v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  _QWORD *v59;
  __int128 *v60;
  __int128 *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  __int128 *v69;
  std::string *v70;
  std::runtime_error *exception;
  std::runtime_error *v72;
  std::__shared_weak_count *v73[2];
  _BYTE v74[1824];
  __int128 v75;
  std::__shared_weak_count *v76;
  std::__shared_weak_count *v77;
  std::__shared_weak_count *v78;
  std::__shared_weak_count *v79;
  std::runtime_error v80;
  std::__shared_weak_count *v81;
  std::__shared_weak_count *v82;
  __int128 v83;
  _QWORD *v84;
  __int128 *v85;
  _QWORD v86[3];
  std::string v87;
  std::string *v88;
  uint64_t v89;

  v89 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v83 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v83 + 1) = 45;
    v68 = (_QWORD *)a1[6];
    v67 = a1 + 6;
    v66 = v68;
    v69 = (__int128 *)*((unsigned __int8 *)v67 + 23);
    if ((char)v69 < 0)
      v69 = (__int128 *)v67[1];
    else
      v66 = v67;
    v84 = v66;
    v85 = v69;
    sub_2231A9820((uint64_t)&v83, (uint64_t)v86, 0, 0, &v87);
    if ((v87.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v70 = &v87;
    else
      v70 = (std::string *)v87.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v80, (const char *)v70);
    v80.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v72 = std::runtime_error::runtime_error(exception, &v80);
    v72->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v72, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v6 = (std::__shared_weak_count *)operator new(0x20uLL);
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC49718;
    v6[1].__vftable = *a3;
    v78 = v6 + 1;
    v79 = v6;
    v76 = v6 + 1;
    v77 = v6;
    v6->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    *a3 = 0;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    if (!a1[18]
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v9 = (std::__shared_weak_count *)operator new(0x738uLL);
    v9->__shared_owners_ = 0;
    v10 = (unint64_t *)&v9->__shared_owners_;
    v9->__shared_weak_owners_ = 0;
    v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC38750;
    v11 = v9 + 1;
    sub_223257000((uint64_t)&v9[1], a2);
    v81 = v9 + 1;
    v82 = v9;
    p_shared_weak_owners = (unint64_t *)&v9->__shared_weak_owners_;
    do
      v13 = __ldxr(p_shared_weak_owners);
    while (__stxr(v13 + 1, p_shared_weak_owners));
    v14 = (uint64_t *)a1[18];
    v15 = (_QWORD *)operator new();
    *v15 = v14 + 7;
    std::mutex::lock((std::mutex *)(v14 + 7));
    *(_QWORD *)&v83 = v15;
    *((_QWORD *)&v83 + 1) = v14;
    if (!*((_BYTE *)v14 + 48))
      sub_22324A974();
    v16 = v14[4];
    v17 = *v14;
    v18 = (std::__shared_weak_count **)(*v14 + 16 * v16);
    do
      v19 = __ldxr(v10);
    while (__stxr(v19 + 1, v10));
    *v18 = v11;
    v20 = v17 + 16 * v16;
    v21 = *(std::__shared_weak_count **)(v20 + 8);
    *(_QWORD *)(v20 + 8) = v9;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldaxr(v22);
      while (__stlxr(v23 - 1, v22));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
    v24 = (v14[1] - *v14) >> 4;
    v25 = v14[5];
    v26 = v14[4] + 1;
    if (v26 >= v24)
      v27 = (v14[1] - *v14) >> 4;
    else
      v27 = 0;
    v14[4] = v26 - v27;
    if (v25 == v24)
    {
      v28 = v14[3] + 1;
      if (v28 < v24)
        v24 = 0;
      v14[3] = v28 - v24;
      v29 = (std::mutex **)v83;
      if (!(_QWORD)v83)
      {
LABEL_37:
        v39 = (uint64_t **)a1[9];
        v83 = 0uLL;
        v40 = (std::__shared_weak_count *)a1[5];
        if (v40)
        {
          v41 = std::__shared_weak_count::lock(v40);
          if (v41)
          {
            v42 = v41;
            v43 = a1[4];
            v44 = (unint64_t *)&v41->__shared_weak_owners_;
            do
              v45 = __ldxr(v44);
            while (__stxr(v45 + 1, v44));
            *(_QWORD *)&v83 = v43;
            *((_QWORD *)&v83 + 1) = v41;
            v46 = (unint64_t *)&v41->__shared_owners_;
            do
              v47 = __ldaxr(v46);
            while (__stlxr(v47 - 1, v46));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
          else
          {
            v83 = 0uLL;
          }
        }
        v48 = v76;
        v49 = v77;
        v76 = 0;
        v77 = 0;
        v50 = (char *)operator new(0x38uLL);
        *(_QWORD *)v50 = &off_24EC49768;
        *(_OWORD *)(v50 + 8) = v83;
        v83 = 0uLL;
        *((_QWORD *)v50 + 3) = v11;
        *((_QWORD *)v50 + 4) = v9;
        v84 = 0;
        v85 = 0;
        *((_QWORD *)v50 + 5) = v48;
        *((_QWORD *)v50 + 6) = v49;
        v86[0] = 0;
        v86[1] = 0;
        v88 = (std::string *)v50;
        sub_2245022E4(*v39, (uint64_t)&v87);
        v51 = v88;
        if (v88 == &v87)
        {
          v52 = 4;
          v51 = &v87;
        }
        else
        {
          if (!v88)
            goto LABEL_51;
          v52 = 5;
        }
        (*(void (**)(void))(v51->__r_.__value_.__r.__words[0] + 8 * v52))();
LABEL_51:
        if (v82)
        {
          v53 = &v82->__shared_owners_;
          do
            v54 = __ldaxr((unint64_t *)v53);
          while (__stlxr(v54 - 1, (unint64_t *)v53));
          if (!v54)
          {
            ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
            std::__shared_weak_count::__release_weak(v82);
          }
        }
        if (v77)
        {
          v55 = &v77->__shared_owners_;
          do
            v56 = __ldaxr((unint64_t *)v55);
          while (__stlxr(v56 - 1, (unint64_t *)v55));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
            std::__shared_weak_count::__release_weak(v77);
          }
        }
        if (v79)
        {
          v57 = &v79->__shared_owners_;
          do
            v58 = __ldaxr((unint64_t *)v57);
          while (__stlxr(v58 - 1, (unint64_t *)v57));
          if (!v58)
          {
            ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
            std::__shared_weak_count::__release_weak(v79);
          }
        }
        return;
      }
    }
    else
    {
      v14[5] = v25 + 1;
      v29 = (std::mutex **)v83;
      if (!(_QWORD)v83)
        goto LABEL_37;
    }
    std::mutex::unlock(*v29);
    MEMORY[0x227684CE8](v29, 0x20C4093837F09);
    goto LABEL_37;
  }
  v30 = (uint64_t **)a1[9];
  *(_OWORD *)v73 = 0uLL;
  v31 = (std::__shared_weak_count *)a1[5];
  if (v31)
  {
    v32 = std::__shared_weak_count::lock(v31);
    if (v32)
    {
      v33 = v32;
      v34 = (std::__shared_weak_count *)a1[4];
      v35 = (unint64_t *)&v32->__shared_weak_owners_;
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 1, v35));
      v73[0] = v34;
      v73[1] = v32;
      v37 = (unint64_t *)&v32->__shared_owners_;
      do
        v38 = __ldaxr(v37);
      while (__stlxr(v38 - 1, v37));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
    else
    {
      *(_OWORD *)v73 = 0uLL;
    }
  }
  sub_223257000((uint64_t)v74, a2);
  v59 = operator new(0x20uLL);
  v59[1] = 0;
  v59[2] = 0;
  *v59 = &off_24EC49718;
  v59[3] = *a3;
  *a3 = 0;
  *(_QWORD *)&v75 = v59 + 3;
  *((_QWORD *)&v75 + 1) = v59;
  v85 = 0;
  v60 = (__int128 *)operator new(0x748uLL);
  *(_QWORD *)v60 = &off_24EC497E8;
  *(__int128 *)((char *)v60 + 8) = *(_OWORD *)v73;
  sub_2232568B4((uint64_t)v60 + 24, (uint64_t)v74);
  *(__int128 *)((char *)v60 + 1848) = v75;
  v75 = 0uLL;
  v85 = v60;
  sub_2245022E4(*v30, (uint64_t)&v83);
  v61 = v85;
  if (v85 == &v83)
  {
    v62 = 4;
    v61 = &v83;
  }
  else
  {
    if (!v85)
      goto LABEL_72;
    v62 = 5;
  }
  (*(void (**)(__int128 *))(*(_QWORD *)v61 + 8 * v62))(v61);
LABEL_72:
  v63 = (std::__shared_weak_count *)*((_QWORD *)&v75 + 1);
  if (*((_QWORD *)&v75 + 1))
  {
    v64 = (unint64_t *)(*((_QWORD *)&v75 + 1) + 8);
    do
      v65 = __ldaxr(v64);
    while (__stlxr(v65 - 1, v64));
    if (!v65)
    {
      ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
      std::__shared_weak_count::__release_weak(v63);
    }
  }
  sub_2232555B8((uint64_t)v74);
}

void sub_223586CD4(_Unwind_Exception *exception_object, int a2)
{
  std::__assoc_sub_state **v2;
  uint64_t v3;
  std::__assoc_sub_state *v4;
  std::exception_ptr v5;

  if (a2)
  {
    __cxa_begin_catch(exception_object);
    std::current_exception();
    __cxa_end_catch();
    v4 = *v2;
    if (*v2)
    {
      std::exception_ptr::exception_ptr((std::exception_ptr *)(v3 - 160), (const std::exception_ptr *)(v3 - 184));
      v5.__ptr_ = (void *)(v3 - 160);
      std::__assoc_sub_state::set_exception(v4, v5);
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v3 - 160));
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v3 - 184));
      std::runtime_error::~runtime_error((std::runtime_error *)(v3 - 200));
      if (*(char *)(v3 - 81) < 0)
        operator delete(*(void **)(v3 - 104));
      JUMPOUT(0x223586BE8);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(exception_object);
}

void sub_223586D48(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)(v1 - 184));
  std::runtime_error::~runtime_error((std::runtime_error *)(v1 - 200));
  if (*(char *)(v1 - 81) < 0)
  {
    operator delete(*(void **)(v1 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_223586D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v12 = *(_QWORD **)(v10 - 136);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 160);
  }
  else
  {
    if (!v12)
    {
      sub_223495C88((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
  sub_223495C88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223586DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  uint64_t v10;

  sub_2232555B8(v10);
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_223586E24(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 - 80);
  if (v4 == v1)
  {
    v5 = 4;
    v4 = (_QWORD *)(v2 - 104);
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  sub_22332429C((_QWORD *)(v2 - 160));
  sub_223167354(v2 - 176);
  sub_223167354(v2 - 232);
  sub_223167354(v2 - 216);
  _Unwind_Resume(a1);
}

void sub_223586EC4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  sub_223167354(v2 - 232);
  sub_223167354(v2 - 216);
  _Unwind_Resume(a1);
}

void sub_223586EEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 232);
  sub_223167354(v1 - 216);
  _Unwind_Resume(a1);
}

void sub_223586F08(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_223586F7C(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC49868;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B380;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_2235870AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_223587120(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC498E8;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_223587230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_223587294@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC49968;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235874AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_223587574@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC499E8;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22358778C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223587854(uint64_t a1)
{
  return sub_2235879C4(a1 - 16);
}

void sub_22358785C(uint64_t a1)
{
  sub_2235879C4(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223587884(uint64_t a1, uint64_t a2)
{
  return sub_223586F7C((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22358788C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_223587294((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_223587894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_223587574((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_22358789C(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_2235878A4(uint64_t a1)
{
  return sub_2235879C4(a1 - 24);
}

void sub_2235878AC(uint64_t a1)
{
  sub_2235879C4(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235878D4(uint64_t a1)
{
  return sub_223587120((_QWORD *)(a1 - 24));
}

uint64_t sub_2235878DC(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235878E4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22358794C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235879B4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235879C4(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC49438;
  *(_QWORD *)(a1 + 16) = &unk_24EC494B0;
  *(_QWORD *)(a1 + 24) = &unk_24EC494F0;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

_QWORD *sub_223587BC4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC49618;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_223587C08(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC49618;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223587C5C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC49618;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_223587CCC(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC49618;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_223587D1C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223587D58(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_223587D90(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_2235880B4((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_22358838C(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223587F58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_22358838C(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22358803C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUp"
                     "dateResultEvNSt3__18optionalIS8_EELb0EE25EnqueueMessageAndDispatchIZNKSC_4SendERKS6_EUlT_T0_E_EEvSF_SG_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27Meshin"
                                "gNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE25EnqueueMessageAndDispatchIZNKSC_4Sen"
                                "dERKS6_EUlT_T0_E_EEvSF_SG_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE25EnqueueMessageAndDispatchIZNKSC_4SendERKS6_EUlT_T0_E_EEvSF_SG_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE25EnqueueMessageAndDispatchIZNKSC_4SendERKS6_EUlT_T0_E_EEvSF_SG_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235880A8()
{
  return &unk_24EC49678;
}

void sub_2235880B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  _QWORD v9[55];
  char v10;

  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 251, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v9, v6, a2);
  if (v10)
  {
    v7 = a1 + 1;
    for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
      (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v9);
  }
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_2235882A8(*(_QWORD *)a3, (uint64_t)v9);
  }
  if (v10)
    sub_2232954B0((uint64_t)v9);
}

void sub_2235881B0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  if (a71)
    sub_2232954B0((uint64_t)&a18);
  if (a2 == 1)
  {
    v73 = (uint64_t *)__cxa_begin_catch(a1);
    v74 = *v73;
    a11 = *(_QWORD *)(*(_QWORD *)(*v73 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a10 = (*(uint64_t (**)(void))(v74 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", (const char *)&a11, "\n", "message: ", (const char *)&a10, "\n");
    if (a17 >= 0)
      v75 = (uint64_t)&a12;
    else
      v75 = a12;
    if (a17 >= 0)
      v76 = a17;
    else
      v76 = a13;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, v75, v76, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_22358827C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x22358829CLL);
}

void sub_2235882A8(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  uint64_t v5;
  std::exception_ptr v6;

  v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(_BYTE *)(a1 + 136) & 1) != 0
    || (v6.__ptr_ = 0, v5 = *(_QWORD *)(a1 + 16), std::exception_ptr::~exception_ptr(&v6), v5))
  {
    sub_2233236D4(2u);
  }
  *(_BYTE *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 584) = 0;
  if (*(_BYTE *)(a2 + 440))
  {
    sub_223299E34(a1 + 144, a2);
    *(_BYTE *)(a1 + 584) = 1;
  }
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock(v4);
}

void sub_223588354(_Unwind_Exception *a1)
{
  std::mutex *v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(v2 + 584))
  {
    sub_2232954B0(v3);
    std::mutex::unlock(v1);
    _Unwind_Resume(a1);
  }
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_22358838C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  const std::error_category *v7;
  std::logic_error *exception;
  std::logic_error *v9;
  std::logic_error v10;
  std::logic_error v11;
  std::exception_ptr v12;

  v2 = *a1;
  if (!v2)
    return a1;
  if ((*(_BYTE *)(v2 + 136) & 1) == 0)
  {
    v12.__ptr_ = 0;
    v3 = *(_QWORD *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v12);
    v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v7 = std::future_category();
      MEMORY[0x2276844A8](&v10, 4, v7);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      v9 = std::logic_error::logic_error(exception, &v10);
      v9->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB810] + 16);
      v9[1] = v11;
      __cxa_throw(v9, MEMORY[0x24BEDB6E0], (void (*)(void *))MEMORY[0x24BEDAD80]);
    }
  }
  v4 = (unint64_t *)(v2 + 8);
  do
    v5 = __ldaxr(v4);
  while (__stlxr(v5 - 1, v4));
  if (v5)
    return a1;
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  return a1;
}

void sub_223588478(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__assoc_sub_state *a10, char a11)
{
  uint64_t v11;
  std::exception_ptr v12;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v12.__ptr_ = (void *)(v11 - 32);
  std::__assoc_sub_state::set_exception(a10, v12);
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(v11 - 32));
  MEMORY[0x2276844B4](&a11);
  JUMPOUT(0x2235883D4);
}

_QWORD *sub_2235884B4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC49698;
  sub_2232555B8((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235884F0(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC49698;
  sub_2232555B8((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22358853C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x738uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC49698;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  sub_223257000((uint64_t)(v2 + 3), a1 + 24);
  return v3;
}

void sub_2235885A0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235885C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC49698;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return sub_223257000((uint64_t)(a2 + 3), a1 + 24);
}

void sub_223588618(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223588630(uint64_t a1)
{
  std::__shared_weak_count *v2;

  sub_2232555B8(a1 + 24);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
}

void sub_223588668(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  sub_2232555B8((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(a1);
}

void sub_22358869C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_2235880B4((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_22358838C(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223588744(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_22358838C(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223588790(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUp"
                     "dateResultEvNSt3__18optionalIS8_EELb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27Meshin"
                                "gNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235887FC()
{
  return &unk_24EC496F8;
}

void sub_223588808(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC49718;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223588818(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC49718;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t *sub_223588848(uint64_t a1)
{
  return sub_22358838C((uint64_t *)(a1 + 24));
}

_QWORD *sub_223588854(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC49768;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2235888DC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC49768;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_223588974(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC49768;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_223588A04(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC49768;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_223588A74(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_223588AF4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_223588B70(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_2235880B4(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_22358838C((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223588E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223588E78(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x223588C84);
    JUMPOUT(0x223588C54);
  }
  sub_2233236D4(3u);
}

void sub_223588ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223588F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_22358838C(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_223588FEC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUp"
                     "dateResultEvNSt3__18optionalIS8_EELb0EE25EnqueueMessageAndDispatchIZNKSC_7ProcessERKS6_NS9_7promise"
                     "ISB_EEEUlT_T0_E_EEvSF_SI_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27Meshin"
                                "gNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE25EnqueueMessageAndDispatchIZNKSC_7Pro"
                                "cessERKS6_NS9_7promiseISB_EEEUlT_T0_E_EEvSF_SI_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE25EnqueueMessageAndDispatchIZNKSC_7ProcessERKS6_NS9_7promiseISB_EEEUlT_T0_E_EEvSF_SI_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE25EnqueueMessageAndDispatchIZNKSC_7ProcessERKS6_NS9_7promiseISB_EEEUlT_T0_E_EEvSF_SI_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223589058()
{
  return &unk_24EC497C8;
}

_QWORD *sub_223589064(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC497E8;
  v2 = (std::__shared_weak_count *)a1[232];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2232555B8((uint64_t)(a1 + 3));
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  sub_2232555B8((uint64_t)(a1 + 3));
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_2235890F0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC497E8;
  v2 = (std::__shared_weak_count *)a1[232];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    sub_2232555B8((uint64_t)(a1 + 3));
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  else
  {
LABEL_5:
    sub_2232555B8((uint64_t)(a1 + 3));
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  std::__shared_weak_count::__release_weak(v5);
LABEL_9:
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22358918C(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = operator new(0x748uLL);
  v3 = v2;
  v5 = a1[1];
  v4 = a1[2];
  *v2 = &off_24EC497E8;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  sub_223257000((uint64_t)(v2 + 3), (uint64_t)(a1 + 3));
  v3[231] = a1[231];
  v8 = a1[232];
  v3[232] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return v3;
}

void sub_223589218(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223589238(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC497E8;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = sub_223257000((uint64_t)(a2 + 3), (uint64_t)(a1 + 3));
  a2[231] = a1[231];
  v9 = a1[232];
  a2[232] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235892B8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235892D0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 1856);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    sub_2232555B8(a1 + 24);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  sub_2232555B8(a1 + 24);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
}

void sub_223589350(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (std::__shared_weak_count *)a1[232];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2232555B8((uint64_t)(a1 + 3));
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  sub_2232555B8((uint64_t)(a1 + 3));
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  operator delete(a1);
}

void sub_2235893D0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[231];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_2235880B4((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_22358838C((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_2235894E0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_223589558(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x22358958CLL);
  JUMPOUT(0x2235895BCLL);
}

uint64_t sub_2235895C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUp"
                     "dateResultEvNSt3__18optionalIS8_EELb0EE7ProcessERKS6_NS9_7promiseISB_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27Meshin"
                                "gNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE7ProcessERKS6_NS9_7promiseISB_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE7ProcessERKS6_NS9_7promiseISB_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE7ProcessERKS6_NS9_7promiseISB_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223589630()
{
  return &unk_24EC49848;
}

_QWORD *sub_22358963C(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC49868;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_223589694(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC49868;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235896FC(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC49868;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B380;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_223589774(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223589794(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC49868;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B380;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_2235897FC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223589814(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223589864(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B380;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235898B0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B380;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223589964(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235899A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpd"
                     "ateResultEvNSt3__18optionalIS8_EELb0EE9SubscribeENS1_12ChannelInputIS8_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27Meshing"
                                "NodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE9SubscribeENS1_12ChannelInputIS8_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE9SubscribeENS1_12ChannelInputIS8_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE9SubscribeENS1_12ChannelInputIS8_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223589A0C()
{
  return &unk_24EC498C8;
}

_QWORD *sub_223589A18(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC498E8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223589A50(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC498E8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223589A98(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC498E8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_223589AE8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC498E8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_223589B18(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223589B28(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223589B54(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223589BE8(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223589C24(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpd"
                     "ateResultEvNSt3__18optionalIS8_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27Meshing"
                                "NodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223589C90()
{
  return &unk_24EC49948;
}

_QWORD *sub_223589C9C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC49968;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223589CD4(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC49968;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223589D1C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC49968;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_223589D74(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC49968;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_223589DAC(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223589DBC(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223589DE8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_223589F64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223589FD4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUp"
                     "dateResultEvNSt3__18optionalIS8_EELb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27Meshin"
                                "gNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22358A040()
{
  return &unk_24EC499C8;
}

_QWORD *sub_22358A04C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC499E8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22358A084(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC499E8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22358A0CC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC499E8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22358A124(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC499E8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22358A15C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22358A16C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22358A198(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22358A250(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22358A29C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUp"
                     "dateResultEvNSt3__18optionalIS8_EELb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27Meshin"
                                "gNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon5frame11FrameBundleENS4_3sng27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS8_EELb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22358A308()
{
  return &unk_24EC49A48;
}

void sub_22358A318(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22358A33C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_22358A354(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon5frame11FrameBundleENS6_3sng"
                     "27MeshingNodeMeshUpdateResultEvNS_8optionalISA_EELb0EEEE27__shared_ptr_default_deleteISD_SD_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon5frame11FrameBund"
                                "leENS6_3sng27MeshingNodeMeshUpdateResultEvNS_8optionalISA_EELb0EEEE27__shared_ptr_defaul"
                                "t_deleteISD_SD_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon5frame11FrameBundleENS6_3sng27MeshingNodeMeshUpdateResultEvNS_8optionalISA_EELb0EEEE27__shared_ptr_default_deleteISD_SD_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon5frame11FrameBundleENS6_3sng27MeshingNodeMeshUpdateResultEvNS_8optionalISA_EELb0EEEE27__shared_ptr_default_deleteISD_SD_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_22358A3C8(uint64_t a1)
{
  sub_22358C08C(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22358A3EC(_QWORD *a1, __int128 *a2)
{
  char *v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  _OWORD *v7;
  int v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t **v12;
  std::__shared_weak_count *v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *p_shared_weak_owners;
  unint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  std::mutex **v38;
  uint64_t **v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  char *v56;
  _OWORD *v57;
  int v58;
  uint64_t v59;
  __int128 *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64[2];
  __int128 v65;
  void *v66[2];
  uint64_t v67;
  char v68;
  void *v69[2];
  uint64_t v70;
  uint64_t v71;
  void *__p[2];
  uint64_t v73;
  char v74;
  char v75;
  unsigned __int8 v76;
  _OWORD *v77;
  std::__shared_weak_count *v78;
  __int128 v79;
  uint64_t v80;
  __int128 *v81;
  _BYTE v82[24];
  _BYTE *v83;
  uint64_t v84;

  v84 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v4 = (char *)operator new(0x98uLL);
    v5 = (std::__shared_weak_count *)v4;
    *((_QWORD *)v4 + 1) = 0;
    v6 = (unint64_t *)(v4 + 8);
    *((_QWORD *)v4 + 2) = 0;
    *(_QWORD *)v4 = &off_24EC41D40;
    v4[24] = 0;
    v7 = v4 + 24;
    v8 = *((unsigned __int8 *)a2 + 120);
    v4[144] = v8;
    if (v8)
    {
      v9 = *((_QWORD *)a2 + 1);
      *((_QWORD *)v4 + 3) = *(_QWORD *)a2;
      *((_QWORD *)v4 + 4) = v9;
      if (v9)
      {
        v10 = (unint64_t *)(v9 + 8);
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
      }
    }
    else
    {
      *v7 = *a2;
      sub_22319FFBC(v4 + 40, a2 + 1);
    }
    v77 = v7;
    v78 = v5;
    p_shared_weak_owners = (unint64_t *)&v5->__shared_weak_owners_;
    do
      v22 = __ldxr(p_shared_weak_owners);
    while (__stxr(v22 + 1, p_shared_weak_owners));
    v23 = (uint64_t *)a1[18];
    v24 = (_QWORD *)operator new();
    *v24 = v23 + 7;
    std::mutex::lock((std::mutex *)(v23 + 7));
    *(_QWORD *)&v79 = v24;
    *((_QWORD *)&v79 + 1) = v23;
    if (!*((_BYTE *)v23 + 48))
      sub_22324A974();
    v25 = v23[4];
    v26 = *v23;
    v27 = (_QWORD *)(*v23 + 16 * v25);
    do
      v28 = __ldxr(v6);
    while (__stxr(v28 + 1, v6));
    *v27 = v7;
    v29 = v26 + 16 * v25;
    v30 = *(std::__shared_weak_count **)(v29 + 8);
    *(_QWORD *)(v29 + 8) = v5;
    if (v30)
    {
      p_shared_owners = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldaxr(p_shared_owners);
      while (__stlxr(v32 - 1, p_shared_owners));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    v33 = (v23[1] - *v23) >> 4;
    v34 = v23[5];
    v35 = v23[4] + 1;
    if (v35 >= v33)
      v36 = (v23[1] - *v23) >> 4;
    else
      v36 = 0;
    v23[4] = v35 - v36;
    if (v34 == v33)
    {
      v37 = v23[3] + 1;
      if (v37 < v33)
        v33 = 0;
      v23[3] = v37 - v33;
      v38 = (std::mutex **)v79;
      if (!(_QWORD)v79)
      {
LABEL_39:
        v39 = (uint64_t **)a1[9];
        v79 = 0uLL;
        v40 = (std::__shared_weak_count *)a1[5];
        if (v40)
        {
          v41 = std::__shared_weak_count::lock(v40);
          if (v41)
          {
            v42 = v41;
            v43 = a1[4];
            v44 = (unint64_t *)&v41->__shared_weak_owners_;
            do
              v45 = __ldxr(v44);
            while (__stxr(v45 + 1, v44));
            *(_QWORD *)&v79 = v43;
            *((_QWORD *)&v79 + 1) = v41;
            v46 = (unint64_t *)&v41->__shared_owners_;
            do
              v47 = __ldaxr(v46);
            while (__stlxr(v47 - 1, v46));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
          else
          {
            v79 = 0uLL;
          }
        }
        v48 = (char *)operator new(0x30uLL);
        *(_QWORD *)v48 = &off_24EC49C98;
        *(_OWORD *)(v48 + 8) = v79;
        v79 = 0uLL;
        *((_QWORD *)v48 + 3) = v7;
        *((_QWORD *)v48 + 4) = v5;
        v80 = 0;
        v81 = 0;
        v83 = v48;
        sub_2245022E4(*v39, (uint64_t)v82);
        v49 = v83;
        if (v83 == v82)
        {
          v50 = 4;
          v49 = v82;
        }
        else
        {
          if (!v83)
            goto LABEL_53;
          v50 = 5;
        }
        (*(void (**)(void))(*v49 + 8 * v50))();
LABEL_53:
        if (v78)
        {
          v51 = &v78->__shared_owners_;
          do
            v52 = __ldaxr((unint64_t *)v51);
          while (__stlxr(v52 - 1, (unint64_t *)v51));
          if (!v52)
          {
            ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
            std::__shared_weak_count::__release_weak(v78);
          }
        }
        return;
      }
    }
    else
    {
      v23[5] = v34 + 1;
      v38 = (std::mutex **)v79;
      if (!(_QWORD)v79)
        goto LABEL_39;
    }
    std::mutex::unlock(*v38);
    MEMORY[0x227684CE8](v38, 0x20C4093837F09);
    goto LABEL_39;
  }
  v12 = (uint64_t **)a1[9];
  *(_OWORD *)v64 = 0uLL;
  v13 = (std::__shared_weak_count *)a1[5];
  if (v13)
  {
    v14 = std::__shared_weak_count::lock(v13);
    if (v14)
    {
      v15 = v14;
      v16 = (std::__shared_weak_count *)a1[4];
      v17 = (unint64_t *)&v14->__shared_weak_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      v64[0] = v16;
      v64[1] = v14;
      v19 = (unint64_t *)&v14->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    else
    {
      *(_OWORD *)v64 = 0uLL;
    }
  }
  v76 = *((_BYTE *)a2 + 120);
  if (v76)
  {
    v53 = *((_QWORD *)a2 + 1);
    *(_QWORD *)&v65 = *(_QWORD *)a2;
    *((_QWORD *)&v65 + 1) = v53;
    if (v53)
    {
      v54 = (unint64_t *)(v53 + 8);
      do
        v55 = __ldxr(v54);
      while (__stxr(v55 + 1, v54));
    }
  }
  else
  {
    v65 = *a2;
    sub_22319FFBC(v66, a2 + 1);
  }
  v81 = 0;
  v56 = (char *)operator new(0x98uLL);
  *(_QWORD *)v56 = &off_24EC49D18;
  *(_OWORD *)(v56 + 8) = *(_OWORD *)v64;
  v57 = v56 + 24;
  v58 = v76;
  v56[144] = v76;
  if (v58)
  {
    *v57 = v65;
    v65 = 0uLL;
  }
  else
  {
    *v57 = v65;
    v56[40] = 0;
    v56[136] = 0;
    if (v75)
    {
      v56[64] = 0;
      if (v68)
      {
        *(_OWORD *)(v56 + 40) = *(_OWORD *)v66;
        *((_QWORD *)v56 + 7) = v67;
        v66[1] = 0;
        v67 = 0;
        v66[0] = 0;
        v56[64] = 1;
      }
      v56[72] = 0;
      v56[128] = 0;
      if (v74)
      {
        v59 = v71;
        *((_QWORD *)v56 + 11) = v70;
        *(_OWORD *)(v56 + 72) = *(_OWORD *)v69;
        v69[0] = 0;
        v69[1] = 0;
        *((_QWORD *)v56 + 12) = v59;
        *(_OWORD *)(v56 + 104) = *(_OWORD *)__p;
        *((_QWORD *)v56 + 15) = v73;
        v70 = 0;
        __p[0] = 0;
        __p[1] = 0;
        v73 = 0;
        v56[128] = 1;
      }
      v56[136] = 1;
    }
  }
  v81 = (__int128 *)v56;
  sub_2245022E4(*v12, (uint64_t)&v79);
  v60 = v81;
  if (v81 == &v79)
  {
    v61 = 4;
    v60 = &v79;
  }
  else
  {
    if (!v81)
      goto LABEL_78;
    v61 = 5;
  }
  (*(void (**)(__int128 *))(*(_QWORD *)v60 + 8 * v61))(v60);
LABEL_78:
  if (v76)
  {
    if (*((_QWORD *)&v65 + 1))
    {
      v62 = (unint64_t *)(*((_QWORD *)&v65 + 1) + 8);
      do
        v63 = __ldaxr(v62);
      while (__stlxr(v63 - 1, v62));
      if (!v63)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v65 + 1) + 16))(*((_QWORD *)&v65 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v65 + 1));
      }
    }
  }
  else if (v75)
  {
    if (v74)
    {
      if (SHIBYTE(v73) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v70) < 0)
        operator delete(v69[0]);
    }
    if (v68 && SHIBYTE(v67) < 0)
      operator delete(v66[0]);
  }
}

void sub_22358A9F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_22358AA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v12 = *(_QWORD **)(v10 - 120);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 144);
  }
  else
  {
    if (!v12)
    {
      sub_2234F9EB0((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
  sub_2234F9EB0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22358AA74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;

  v30 = *(_QWORD **)(v28 - 80);
  if (v30 == v27)
  {
    v31 = 4;
    v30 = (_QWORD *)(v28 - 104);
  }
  else
  {
    if (!v30)
      goto LABEL_6;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_6:
  sub_223322894(v28 - 144);
  sub_223167354((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_22358AAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  std::__shared_weak_count *v27;
  uint64_t v28;

  sub_223322848((std::mutex ***)(v28 - 144));
  std::__shared_weak_count::__release_weak(v27);
  sub_223167354((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_22358AAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  std::__shared_weak_count *v27;
  uint64_t v28;

  MEMORY[0x227684CE8](v28, 0x20C4093837F09);
  std::__shared_weak_count::__release_weak(v27);
  sub_223167354((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_22358AB1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  std::__shared_weak_count *v27;

  std::__shared_weak_count::__release_weak(v27);
  sub_223167354((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_22358AB3C(_QWORD *a1, __int128 *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  char *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  _OWORD *v12;
  int v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t **v17;
  std::__shared_weak_count *v18;
  std::__shared_weak_count *v19;
  std::__shared_weak_count *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t *p_shared_weak_owners;
  unint64_t v30;
  uint64_t *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  std::mutex **v46;
  uint64_t **v47;
  std::__shared_weak_count *v48;
  std::__shared_weak_count *v49;
  std::__shared_weak_count *v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  std::__shared_weak_count *v57;
  char *v58;
  std::string *v59;
  uint64_t v60;
  uint64_t *v61;
  unint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  char *v68;
  _OWORD *v69;
  int v70;
  uint64_t v71;
  __int128 *v72;
  uint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  unint64_t *v77;
  unint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  __int128 *v82;
  std::string *v83;
  std::runtime_error *exception;
  std::runtime_error *v85;
  std::__shared_weak_count *v86[2];
  __int128 v87;
  void *v88[2];
  uint64_t v89;
  char v90;
  void *v91[2];
  uint64_t v92;
  uint64_t v93;
  void *__p[2];
  uint64_t v95;
  char v96;
  char v97;
  unsigned __int8 v98;
  _QWORD *v99;
  std::__shared_weak_count *v100;
  std::__shared_weak_count *v101;
  std::__shared_weak_count *v102;
  std::__shared_weak_count *v103;
  std::__shared_weak_count *v104;
  std::runtime_error v105;
  _OWORD *v106;
  std::__shared_weak_count *v107;
  __int128 v108;
  _QWORD *v109;
  __int128 *v110;
  _QWORD v111[3];
  std::string v112;
  std::string *v113;
  uint64_t v114;

  v114 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v108 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v108 + 1) = 45;
    v81 = (_QWORD *)a1[6];
    v80 = a1 + 6;
    v79 = v81;
    v82 = (__int128 *)*((unsigned __int8 *)v80 + 23);
    if ((char)v82 < 0)
      v82 = (__int128 *)v80[1];
    else
      v79 = v80;
    v109 = v79;
    v110 = v82;
    sub_2231A9820((uint64_t)&v108, (uint64_t)v111, 0, 0, &v112);
    if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v83 = &v112;
    else
      v83 = (std::string *)v112.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v105, (const char *)v83);
    v105.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v85 = std::runtime_error::runtime_error(exception, &v105);
    v85->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v85, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v6 = (std::__shared_weak_count *)operator new(0x20uLL);
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC49718;
    v6[1].__vftable = *a3;
    v103 = v6 + 1;
    v104 = v6;
    v101 = v6 + 1;
    v102 = v6;
    v6->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    *a3 = 0;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    if (!a1[18]
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v9 = (char *)operator new(0x98uLL);
    v10 = (std::__shared_weak_count *)v9;
    *((_QWORD *)v9 + 1) = 0;
    v11 = (unint64_t *)(v9 + 8);
    *((_QWORD *)v9 + 2) = 0;
    *(_QWORD *)v9 = &off_24EC41D40;
    v9[24] = 0;
    v12 = v9 + 24;
    v13 = *((unsigned __int8 *)a2 + 120);
    v9[144] = v13;
    if (v13)
    {
      v14 = *((_QWORD *)a2 + 1);
      *((_QWORD *)v9 + 3) = *(_QWORD *)a2;
      *((_QWORD *)v9 + 4) = v14;
      if (v14)
      {
        v15 = (unint64_t *)(v14 + 8);
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
      }
    }
    else
    {
      *v12 = *a2;
      sub_22319FFBC(v9 + 40, a2 + 1);
    }
    v106 = v12;
    v107 = v10;
    p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
    do
      v30 = __ldxr(p_shared_weak_owners);
    while (__stxr(v30 + 1, p_shared_weak_owners));
    v31 = (uint64_t *)a1[18];
    v32 = (_QWORD *)operator new();
    *v32 = v31 + 7;
    std::mutex::lock((std::mutex *)(v31 + 7));
    *(_QWORD *)&v108 = v32;
    *((_QWORD *)&v108 + 1) = v31;
    if (!*((_BYTE *)v31 + 48))
      sub_22324A974();
    v33 = v31[4];
    v34 = *v31;
    v35 = (_QWORD *)(*v31 + 16 * v33);
    do
      v36 = __ldxr(v11);
    while (__stxr(v36 + 1, v11));
    *v35 = v12;
    v37 = v34 + 16 * v33;
    v38 = *(std::__shared_weak_count **)(v37 + 8);
    *(_QWORD *)(v37 + 8) = v10;
    if (v38)
    {
      v39 = (unint64_t *)&v38->__shared_owners_;
      do
        v40 = __ldaxr(v39);
      while (__stlxr(v40 - 1, v39));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
      }
    }
    v41 = (v31[1] - *v31) >> 4;
    v42 = v31[5];
    v43 = v31[4] + 1;
    if (v43 >= v41)
      v44 = (v31[1] - *v31) >> 4;
    else
      v44 = 0;
    v31[4] = v43 - v44;
    if (v42 == v41)
    {
      v45 = v31[3] + 1;
      if (v45 < v41)
        v41 = 0;
      v31[3] = v45 - v41;
      v46 = (std::mutex **)v108;
      if (!(_QWORD)v108)
      {
LABEL_47:
        v47 = (uint64_t **)a1[9];
        v108 = 0uLL;
        v48 = (std::__shared_weak_count *)a1[5];
        if (v48)
        {
          v49 = std::__shared_weak_count::lock(v48);
          if (v49)
          {
            v50 = v49;
            v51 = a1[4];
            v52 = (unint64_t *)&v49->__shared_weak_owners_;
            do
              v53 = __ldxr(v52);
            while (__stxr(v53 + 1, v52));
            *(_QWORD *)&v108 = v51;
            *((_QWORD *)&v108 + 1) = v49;
            v54 = (unint64_t *)&v49->__shared_owners_;
            do
              v55 = __ldaxr(v54);
            while (__stlxr(v55 - 1, v54));
            if (!v55)
            {
              ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
              std::__shared_weak_count::__release_weak(v50);
            }
          }
          else
          {
            v108 = 0uLL;
          }
        }
        v56 = v101;
        v57 = v102;
        v101 = 0;
        v102 = 0;
        v58 = (char *)operator new(0x38uLL);
        *(_QWORD *)v58 = &off_24EC49D98;
        *(_OWORD *)(v58 + 8) = v108;
        v108 = 0uLL;
        *((_QWORD *)v58 + 3) = v12;
        *((_QWORD *)v58 + 4) = v10;
        v109 = 0;
        v110 = 0;
        *((_QWORD *)v58 + 5) = v56;
        *((_QWORD *)v58 + 6) = v57;
        v111[0] = 0;
        v111[1] = 0;
        v113 = (std::string *)v58;
        sub_2245022E4(*v47, (uint64_t)&v112);
        v59 = v113;
        if (v113 == &v112)
        {
          v60 = 4;
          v59 = &v112;
        }
        else
        {
          if (!v113)
            goto LABEL_61;
          v60 = 5;
        }
        (*(void (**)(void))(v59->__r_.__value_.__r.__words[0] + 8 * v60))();
LABEL_61:
        if (v107)
        {
          v61 = &v107->__shared_owners_;
          do
            v62 = __ldaxr((unint64_t *)v61);
          while (__stlxr(v62 - 1, (unint64_t *)v61));
          if (!v62)
          {
            ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
            std::__shared_weak_count::__release_weak(v107);
          }
        }
        if (v102)
        {
          v63 = &v102->__shared_owners_;
          do
            v64 = __ldaxr((unint64_t *)v63);
          while (__stlxr(v64 - 1, (unint64_t *)v63));
          if (!v64)
          {
            ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
            std::__shared_weak_count::__release_weak(v102);
          }
        }
        if (v104)
        {
          v65 = &v104->__shared_owners_;
          do
            v66 = __ldaxr((unint64_t *)v65);
          while (__stlxr(v66 - 1, (unint64_t *)v65));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
            std::__shared_weak_count::__release_weak(v104);
          }
        }
        return;
      }
    }
    else
    {
      v31[5] = v42 + 1;
      v46 = (std::mutex **)v108;
      if (!(_QWORD)v108)
        goto LABEL_47;
    }
    std::mutex::unlock(*v46);
    MEMORY[0x227684CE8](v46, 0x20C4093837F09);
    goto LABEL_47;
  }
  v17 = (uint64_t **)a1[9];
  *(_OWORD *)v86 = 0uLL;
  v18 = (std::__shared_weak_count *)a1[5];
  if (!v18)
  {
LABEL_21:
    v98 = *((_BYTE *)a2 + 120);
    if (v98)
      goto LABEL_22;
LABEL_77:
    v87 = *a2;
    sub_22319FFBC(v88, a2 + 1);
    goto LABEL_78;
  }
  v19 = std::__shared_weak_count::lock(v18);
  if (v19)
  {
    v20 = v19;
    v21 = (std::__shared_weak_count *)a1[4];
    v22 = (unint64_t *)&v19->__shared_weak_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    v86[0] = v21;
    v86[1] = v19;
    v24 = (unint64_t *)&v19->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (v25)
      goto LABEL_21;
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v20);
    v98 = *((_BYTE *)a2 + 120);
    if (!v98)
      goto LABEL_77;
  }
  else
  {
    *(_OWORD *)v86 = 0uLL;
    v98 = *((_BYTE *)a2 + 120);
    if (!v98)
      goto LABEL_77;
  }
LABEL_22:
  v26 = *((_QWORD *)a2 + 1);
  *(_QWORD *)&v87 = *(_QWORD *)a2;
  *((_QWORD *)&v87 + 1) = v26;
  if (v26)
  {
    v27 = (unint64_t *)(v26 + 8);
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
LABEL_78:
  v67 = (std::__shared_weak_count *)operator new(0x20uLL);
  v67->__shared_owners_ = 0;
  v67->__shared_weak_owners_ = 0;
  v67->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC49718;
  v67[1].__vftable = *a3;
  *a3 = 0;
  v99 = &v67[1].__vftable;
  v100 = v67;
  v110 = 0;
  v68 = (char *)operator new(0xA8uLL);
  *(_QWORD *)v68 = &off_24EC49E18;
  *(_OWORD *)(v68 + 8) = *(_OWORD *)v86;
  v69 = v68 + 24;
  v70 = v98;
  v68[144] = v98;
  if (v70)
  {
    *v69 = v87;
    v87 = 0uLL;
  }
  else
  {
    *v69 = v87;
    v68[40] = 0;
    v68[136] = 0;
    if (v97)
    {
      v68[64] = 0;
      if (v90)
      {
        *(_OWORD *)(v68 + 40) = *(_OWORD *)v88;
        *((_QWORD *)v68 + 7) = v89;
        v88[1] = 0;
        v89 = 0;
        v88[0] = 0;
        v68[64] = 1;
      }
      v68[72] = 0;
      v68[128] = 0;
      if (v96)
      {
        v71 = v93;
        *((_QWORD *)v68 + 11) = v92;
        *(_OWORD *)(v68 + 72) = *(_OWORD *)v91;
        v91[0] = 0;
        v91[1] = 0;
        *((_QWORD *)v68 + 12) = v71;
        *(_OWORD *)(v68 + 104) = *(_OWORD *)__p;
        *((_QWORD *)v68 + 15) = v95;
        v92 = 0;
        __p[0] = 0;
        __p[1] = 0;
        v95 = 0;
        v68[128] = 1;
      }
      v68[136] = 1;
    }
  }
  *((_QWORD *)v68 + 19) = v67 + 1;
  *((_QWORD *)v68 + 20) = v67;
  v99 = 0;
  v100 = 0;
  v110 = (__int128 *)v68;
  sub_2245022E4(*v17, (uint64_t)&v108);
  v72 = v110;
  if (v110 == &v108)
  {
    v73 = 4;
    v72 = &v108;
    goto LABEL_90;
  }
  if (v110)
  {
    v73 = 5;
LABEL_90:
    (*(void (**)(__int128 *))(*(_QWORD *)v72 + 8 * v73))(v72);
  }
  v74 = v100;
  if (!v100)
    goto LABEL_95;
  v75 = (unint64_t *)&v100->__shared_owners_;
  do
    v76 = __ldaxr(v75);
  while (__stlxr(v76 - 1, v75));
  if (!v76)
  {
    ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
    std::__shared_weak_count::__release_weak(v74);
    if (v98)
      goto LABEL_96;
  }
  else
  {
LABEL_95:
    if (v98)
    {
LABEL_96:
      if (*((_QWORD *)&v87 + 1))
      {
        v77 = (unint64_t *)(*((_QWORD *)&v87 + 1) + 8);
        do
          v78 = __ldaxr(v77);
        while (__stlxr(v78 - 1, v77));
        if (!v78)
        {
          (*(void (**)(_QWORD))(**((_QWORD **)&v87 + 1) + 16))(*((_QWORD *)&v87 + 1));
          std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v87 + 1));
        }
      }
      return;
    }
  }
  if (v97)
  {
    if (v96)
    {
      if (SHIBYTE(v95) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v92) < 0)
        operator delete(v91[0]);
    }
    if (v90 && SHIBYTE(v89) < 0)
      operator delete(v88[0]);
  }
}

void sub_22358B39C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_22358B3A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  std::__shared_weak_count *v32;
  void *v34;

  std::__shared_weak_count::~__shared_weak_count(v32);
  operator delete(v34);
  sub_223167354((uint64_t)&a30);
  sub_223167354((uint64_t)&a32);
  _Unwind_Resume(a1);
}

void sub_22358B3CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,std::runtime_error a34)
{
  std::__assoc_sub_state **v34;
  uint64_t v35;
  std::__assoc_sub_state *v36;
  std::exception_ptr v37;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v36 = *v34;
    if (*v34)
    {
      std::exception_ptr::exception_ptr((std::exception_ptr *)(v35 - 160), (const std::exception_ptr *)(v35 - 184));
      v37.__ptr_ = (void *)(v35 - 160);
      std::__assoc_sub_state::set_exception(v36, v37);
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v35 - 160));
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v35 - 184));
      std::runtime_error::~runtime_error(&a34);
      if (*(char *)(v35 - 81) < 0)
        operator delete(*(void **)(v35 - 104));
      JUMPOUT(0x22358B280);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_22358B440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,std::runtime_error a34)
{
  uint64_t v34;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)(v34 - 184));
  std::runtime_error::~runtime_error(&a34);
  if (*(char *)(v34 - 81) < 0)
  {
    operator delete(*(void **)(v34 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22358B494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v12 = *(_QWORD **)(v10 - 136);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 160);
  }
  else
  {
    if (!v12)
    {
      sub_2234FAC8C((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
  sub_2234FAC8C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22358B4E8()
{
  uint64_t v0;

  sub_2231A8D08(v0);
  JUMPOUT(0x22358B4F4);
}

void sub_22358B514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;

  v35 = *(_QWORD **)(v33 - 80);
  if (v35 == v32)
  {
    v36 = 4;
    v35 = (_QWORD *)(v33 - 104);
  }
  else
  {
    if (!v35)
      goto LABEL_6;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_6:
  sub_22332429C((_QWORD *)(v33 - 160));
  sub_223167354(v33 - 176);
  sub_223167354((uint64_t)&a30);
  sub_223167354((uint64_t)&a32);
  _Unwind_Resume(a1);
}

void sub_22358B5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  sub_223167354((uint64_t)&a30);
  sub_223167354((uint64_t)&a32);
  _Unwind_Resume(a1);
}

void sub_22358B5D0(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_22358B644(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC49E98;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B380;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_22358B774(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22358B7E8(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC49F18;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_22358B8F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_22358B95C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC49F98;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22358BB74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_22358BC3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4A018;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22358BE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22358BF1C(uint64_t a1)
{
  return sub_22358C08C(a1 - 16);
}

void sub_22358BF24(uint64_t a1)
{
  sub_22358C08C(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22358BF4C(uint64_t a1, uint64_t a2)
{
  return sub_22358B644((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22358BF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22358B95C((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22358BF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22358BC3C((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_22358BF64(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_22358BF6C(uint64_t a1)
{
  return sub_22358C08C(a1 - 24);
}

void sub_22358BF74(uint64_t a1)
{
  sub_22358C08C(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22358BF9C(uint64_t a1)
{
  return sub_22358B7E8((_QWORD *)(a1 - 24));
}

uint64_t sub_22358BFA4(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_22358BFAC(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22358C014(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22358C07C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_22358C08C(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC49AB8;
  *(_QWORD *)(a1 + 16) = &unk_24EC49B30;
  *(_QWORD *)(a1 + 24) = &unk_24EC49B70;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

_QWORD *sub_22358C28C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC49C98;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_22358C2D0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC49C98;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22358C324(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC49C98;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_22358C394(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC49C98;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_22358C3E4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_22358C420(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_22358C458(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_22358C77C((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_22358838C(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_22358C620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_22358838C(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22358C704(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon"
                     "2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG"
                     "_EELb0EE25EnqueueMessageAndDispatchIZNKSJ_4SendERKSE_EUlT_T0_E_EEvSM_SN_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateRe"
                                "sultEvNS6_8optionalISG_EELb0EE25EnqueueMessageAndDispatchIZNKSJ_4SendERKSE_EUlT_T0_E_EEvSM_SN_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE25EnqueueMessageAndDispatchIZNKSJ_4SendERKSE_EUlT_T0_E_EEvSM_SN_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE25EnqueueMessageAndDispatchIZNKSJ_4SendERKSE_EUlT_T0_E_EEvSM_SN_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22358C770()
{
  return &unk_24EC49CF8;
}

void sub_22358C77C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  _QWORD v9[55];
  char v10;

  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 251, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v9, v6, a2);
  if (v10)
  {
    v7 = a1 + 1;
    for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
      (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v9);
  }
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_2235882A8(*(_QWORD *)a3, (uint64_t)v9);
  }
  if (v10)
    sub_2232954B0((uint64_t)v9);
}

void sub_22358C878(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  if (a71)
    sub_2232954B0((uint64_t)&a18);
  if (a2 == 1)
  {
    v73 = (uint64_t *)__cxa_begin_catch(a1);
    v74 = *v73;
    a11 = *(_QWORD *)(*(_QWORD *)(*v73 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a10 = (*(uint64_t (**)(void))(v74 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", (const char *)&a11, "\n", "message: ", (const char *)&a10, "\n");
    if (a17 >= 0)
      v75 = (uint64_t)&a12;
    else
      v75 = a12;
    if (a17 >= 0)
      v76 = a17;
    else
      v76 = a13;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, v75, v76, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_22358C944(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x22358C964);
}

_QWORD *sub_22358C970(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC49D18;
  sub_2231A8D08((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22358C9AC(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC49D18;
  sub_2231A8D08((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  JUMPOUT(0x227684CE8);
}

char *sub_22358C9F8(uint64_t a1)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v2 = (char *)operator new(0x98uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v2 = &off_24EC49D18;
  *((_QWORD *)v2 + 1) = v5;
  *((_QWORD *)v2 + 2) = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[24] = 0;
  v8 = *(unsigned __int8 *)(a1 + 144);
  v2[144] = v8;
  if (v8)
  {
    v9 = *(_QWORD *)(a1 + 32);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
    *((_QWORD *)v2 + 4) = v9;
    if (v9)
    {
      v10 = (unint64_t *)(v9 + 8);
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
    }
  }
  else
  {
    *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
    sub_22319FFBC(v2 + 40, (__int128 *)(a1 + 40));
  }
  return v3;
}

void sub_22358CAA0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

_BYTE *sub_22358CAC0(_BYTE *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v3 = *((_QWORD *)result + 1);
  v2 = *((_QWORD *)result + 2);
  *(_QWORD *)a2 = &off_24EC49D18;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_BYTE *)(a2 + 24) = 0;
  v6 = result[144];
  *(_BYTE *)(a2 + 144) = v6;
  if (v6)
  {
    v7 = *((_QWORD *)result + 4);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)result + 3);
    *(_QWORD *)(a2 + 32) = v7;
    if (v7)
    {
      v8 = (unint64_t *)(v7 + 8);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
  }
  else
  {
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(result + 24);
    return sub_22319FFBC((_BYTE *)(a2 + 40), (__int128 *)(result + 40));
  }
  return result;
}

void sub_22358CB5C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22358CB74(uint64_t a1)
{
  std::__shared_weak_count *v2;

  sub_2231A8D08(a1 + 24);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
}

void sub_22358CBAC(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  sub_2231A8D08((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(a1);
}

void sub_22358CBE0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_22358C77C((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_22358838C(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22358CC88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_22358838C(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22358CCD4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon"
                     "2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG"
                     "_EELb0EE4SendERKSE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateRe"
                                "sultEvNS6_8optionalISG_EELb0EE4SendERKSE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE4SendERKSE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE4SendERKSE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22358CD40()
{
  return &unk_24EC49D78;
}

_QWORD *sub_22358CD4C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC49D98;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_22358CDD4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC49D98;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_22358CE6C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC49D98;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_22358CEFC(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC49D98;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_22358CF6C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_22358CFEC(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_22358D068(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_22358C77C(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_22358838C((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_22358D344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_22358D370(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x22358D17CLL);
    JUMPOUT(0x22358D14CLL);
  }
  sub_2233236D4(3u);
}

void sub_22358D3CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_22358D3F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_22358838C(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22358D4E4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon"
                     "2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG"
                     "_EELb0EE25EnqueueMessageAndDispatchIZNKSJ_7ProcessERKSE_NS6_7promiseISI_EEEUlT_T0_E_EEvSM_SP_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateRe"
                                "sultEvNS6_8optionalISG_EELb0EE25EnqueueMessageAndDispatchIZNKSJ_7ProcessERKSE_NS6_7promi"
                                "seISI_EEEUlT_T0_E_EEvSM_SP_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE25EnqueueMessageAndDispatchIZNKSJ_7ProcessERKSE_NS6_7promiseISI_EEEUlT_T0_E_EEvSM_SP_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE25EnqueueMessageAndDispatchIZNKSJ_7ProcessERKSE_NS6_7promiseISI_EEEUlT_T0_E_EEvSM_SP_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22358D550()
{
  return &unk_24EC49DF8;
}

_QWORD *sub_22358D55C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC49E18;
  v2 = (std::__shared_weak_count *)a1[20];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2231A8D08((uint64_t)(a1 + 3));
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  sub_2231A8D08((uint64_t)(a1 + 3));
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_22358D5E8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC49E18;
  v2 = (std::__shared_weak_count *)a1[20];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    sub_2231A8D08((uint64_t)(a1 + 3));
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  else
  {
LABEL_5:
    sub_2231A8D08((uint64_t)(a1 + 3));
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  std::__shared_weak_count::__release_weak(v5);
LABEL_9:
  JUMPOUT(0x227684CE8);
}

char *sub_22358D684(uint64_t a1)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;

  v2 = (char *)operator new(0xA8uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v2 = &off_24EC49E18;
  *((_QWORD *)v2 + 1) = v5;
  *((_QWORD *)v2 + 2) = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[24] = 0;
  v8 = *(unsigned __int8 *)(a1 + 144);
  v2[144] = v8;
  if (v8)
  {
    v9 = *(_QWORD *)(a1 + 32);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
    *((_QWORD *)v2 + 4) = v9;
    if (v9)
    {
      v10 = (unint64_t *)(v9 + 8);
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
    }
  }
  else
  {
    *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
    sub_22319FFBC(v2 + 40, (__int128 *)(a1 + 40));
  }
  v12 = *(_QWORD *)(a1 + 160);
  *((_QWORD *)v3 + 19) = *(_QWORD *)(a1 + 152);
  *((_QWORD *)v3 + 20) = v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  return v3;
}

void sub_22358D74C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

_BYTE *sub_22358D76C(_BYTE *result, uint64_t a2)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;

  v3 = result;
  v5 = *((_QWORD *)result + 1);
  v4 = *((_QWORD *)result + 2);
  *(_QWORD *)a2 = &off_24EC49E18;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  *(_BYTE *)(a2 + 24) = 0;
  v8 = result[144];
  *(_BYTE *)(a2 + 144) = v8;
  if (v8)
  {
    v9 = *((_QWORD *)result + 4);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)result + 3);
    *(_QWORD *)(a2 + 32) = v9;
    if (v9)
    {
      v10 = (unint64_t *)(v9 + 8);
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
    }
  }
  else
  {
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(result + 24);
    result = sub_22319FFBC((_BYTE *)(a2 + 40), (__int128 *)(result + 40));
  }
  v12 = *((_QWORD *)v3 + 20);
  *(_QWORD *)(a2 + 152) = *((_QWORD *)v3 + 19);
  *(_QWORD *)(a2 + 160) = v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  return result;
}

void sub_22358D828(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22358D840(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 160);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    sub_2231A8D08(a1 + 24);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  sub_2231A8D08(a1 + 24);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
}

void sub_22358D8C0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (std::__shared_weak_count *)a1[20];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2231A8D08((uint64_t)(a1 + 3));
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  sub_2231A8D08((uint64_t)(a1 + 3));
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  operator delete(a1);
}

void sub_22358D940(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[19];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_22358C77C((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_22358838C((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_22358DA50(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_22358DAC8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x22358DAFCLL);
  JUMPOUT(0x22358DB2CLL);
}

uint64_t sub_22358DB34(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon"
                     "2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG"
                     "_EELb0EE7ProcessERKSE_NS6_7promiseISI_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateRe"
                                "sultEvNS6_8optionalISG_EELb0EE7ProcessERKSE_NS6_7promiseISI_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE7ProcessERKSE_NS6_7promiseISI_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE7ProcessERKSE_NS6_7promiseISI_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22358DBA0()
{
  return &unk_24EC49E78;
}

_QWORD *sub_22358DBAC(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC49E98;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_22358DC04(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC49E98;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22358DC6C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC49E98;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B380;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_22358DCE4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_22358DD04(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC49E98;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B380;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_22358DD6C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22358DD84(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_22358DDD4(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B380;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_22358DE20(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B380;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22358DED4(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22358DF10(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2"
                     "kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_"
                     "EELb0EE9SubscribeENS1_12ChannelInputISG_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptr"
                                "INS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateRes"
                                "ultEvNS6_8optionalISG_EELb0EE9SubscribeENS1_12ChannelInputISG_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE9SubscribeENS1_12ChannelInputISG_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE9SubscribeENS1_12ChannelInputISG_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22358DF7C()
{
  return &unk_24EC49EF8;
}

_QWORD *sub_22358DF88(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC49F18;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22358DFC0(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC49F18;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22358E008(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC49F18;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_22358E058(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC49F18;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_22358E088(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22358E098(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22358E0C4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22358E158(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22358E194(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2"
                     "kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_"
                     "EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptr"
                                "INS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateRes"
                                "ultEvNS6_8optionalISG_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22358E200()
{
  return &unk_24EC49F78;
}

_QWORD *sub_22358E20C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC49F98;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22358E244(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC49F98;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22358E28C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC49F98;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22358E2E4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC49F98;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22358E31C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22358E32C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22358E358(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_22358E4D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22358E544(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon"
                     "2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG"
                     "_EELb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateRe"
                                "sultEvNS6_8optionalISG_EELb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22358E5B0()
{
  return &unk_24EC49FF8;
}

_QWORD *sub_22358E5BC(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4A018;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22358E5F4(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4A018;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22358E63C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4A018;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22358E694(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4A018;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22358E6CC(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22358E6DC(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22358E708(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22358E7C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22358E80C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon"
                     "2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG"
                     "_EELb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateRe"
                                "sultEvNS6_8optionalISG_EELb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrINS_5recon2kf20KeyframeEngineResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISG_EELb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22358E878()
{
  return &unk_24EC4A078;
}

void sub_22358E888(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22358E8AC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_22358E8C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINS0_INS1_5r"
                     "econ2kf20KeyframeEngineResultEEENS1_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS_8optiona"
                     "lISG_EELb0EEEE27__shared_ptr_default_deleteISJ_SJ_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedI"
                                "NS0_INS1_5recon2kf20KeyframeEngineResultEEENS1_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpd"
                                "ateResultEvNS_8optionalISG_EELb0EEEE27__shared_ptr_default_deleteISJ_SJ_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINS0_INS1_5recon2kf20KeyframeEngineResultEEENS1_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS_8optionalISG_EELb0EEEE27__shared_ptr_default_deleteISJ_SJ_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINS0_INS1_5recon2kf20KeyframeEngineResultEEENS1_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS_8optionalISG_EELb0EEEE27__shared_ptr_default_deleteISJ_SJ_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_22358E938(uint64_t a1)
{
  sub_2235902A8(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22358E95C(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count **v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  std::mutex **v24;
  uint64_t **v25;
  std::__shared_weak_count *v26;
  std::__shared_weak_count *v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  unint64_t *p_shared_weak_owners;
  unint64_t v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t **v34;
  std::__shared_weak_count *v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  __int128 *v48;
  __int128 *v49;
  uint64_t v50;
  std::__shared_weak_count *v51[2];
  _BYTE v52[2544];
  __int128 v53;
  uint64_t v54;
  __int128 *v55;
  _BYTE v56[24];
  _BYTE *v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v25 = (uint64_t **)a1[9];
    *(_OWORD *)v51 = 0uLL;
    v26 = (std::__shared_weak_count *)a1[5];
    if (v26)
    {
      v27 = std::__shared_weak_count::lock(v26);
      if (v27)
      {
        v28 = v27;
        v29 = (std::__shared_weak_count *)a1[4];
        p_shared_weak_owners = (unint64_t *)&v27->__shared_weak_owners_;
        do
          v31 = __ldxr(p_shared_weak_owners);
        while (__stxr(v31 + 1, p_shared_weak_owners));
        v51[0] = v29;
        v51[1] = v27;
        p_shared_owners = (unint64_t *)&v27->__shared_owners_;
        do
          v33 = __ldaxr(p_shared_owners);
        while (__stlxr(v33 - 1, p_shared_owners));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      else
      {
        *(_OWORD *)v51 = 0uLL;
      }
    }
    sub_223523E5C((uint64_t)v52, a2);
    v55 = 0;
    v48 = (__int128 *)operator new(0xA08uLL);
    *(_QWORD *)v48 = &off_24EC4A3A8;
    *(__int128 *)((char *)v48 + 8) = *(_OWORD *)v51;
    sub_2235146D4((uint64_t)v48 + 24, (uint64_t)v52);
    v55 = v48;
    sub_2245022E4(*v25, (uint64_t)&v53);
    v49 = v55;
    if (v55 == &v53)
    {
      v50 = 4;
      v49 = &v53;
    }
    else
    {
      if (!v55)
      {
LABEL_58:
        sub_2235141E0((uint64_t)v52);
        return;
      }
      v50 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v49 + 8 * v50))();
    goto LABEL_58;
  }
  v4 = (std::__shared_weak_count *)operator new(0xA08uLL);
  v4->__shared_owners_ = 0;
  v5 = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4A2D8;
  v6 = v4 + 1;
  sub_223523E5C((uint64_t)&v4[1], a2);
  v7 = (unint64_t *)&v4->__shared_weak_owners_;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  v9 = (uint64_t *)a1[18];
  v10 = (_QWORD *)operator new();
  *v10 = v9 + 7;
  std::mutex::lock((std::mutex *)(v9 + 7));
  *(_QWORD *)&v53 = v10;
  *((_QWORD *)&v53 + 1) = v9;
  if (!*((_BYTE *)v9 + 48))
    sub_22324A974();
  v11 = v9[4];
  v12 = *v9;
  v13 = (std::__shared_weak_count **)(*v9 + 16 * v11);
  do
    v14 = __ldxr(v5);
  while (__stxr(v14 + 1, v5));
  *v13 = v6;
  v15 = v12 + 16 * v11;
  v16 = *(std::__shared_weak_count **)(v15 + 8);
  *(_QWORD *)(v15 + 8) = v4;
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v19 = (v9[1] - *v9) >> 4;
  v20 = v9[5];
  v21 = v9[4] + 1;
  if (v21 >= v19)
    v22 = (v9[1] - *v9) >> 4;
  else
    v22 = 0;
  v9[4] = v21 - v22;
  if (v20 != v19)
  {
    v9[5] = v20 + 1;
    v24 = (std::mutex **)v53;
    if (!(_QWORD)v53)
      goto LABEL_33;
    goto LABEL_32;
  }
  v23 = v9[3] + 1;
  if (v23 < v19)
    v19 = 0;
  v9[3] = v23 - v19;
  v24 = (std::mutex **)v53;
  if ((_QWORD)v53)
  {
LABEL_32:
    std::mutex::unlock(*v24);
    MEMORY[0x227684CE8](v24, 0x20C4093837F09);
  }
LABEL_33:
  v34 = (uint64_t **)a1[9];
  v53 = 0uLL;
  v35 = (std::__shared_weak_count *)a1[5];
  if (v35)
  {
    v36 = std::__shared_weak_count::lock(v35);
    if (v36)
    {
      v37 = v36;
      v38 = a1[4];
      v39 = (unint64_t *)&v36->__shared_weak_owners_;
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
      *(_QWORD *)&v53 = v38;
      *((_QWORD *)&v53 + 1) = v36;
      v41 = (unint64_t *)&v36->__shared_owners_;
      do
        v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    else
    {
      v53 = 0uLL;
    }
  }
  v43 = (char *)operator new(0x30uLL);
  *(_QWORD *)v43 = &off_24EC4A328;
  *(_OWORD *)(v43 + 8) = v53;
  v53 = 0uLL;
  *((_QWORD *)v43 + 3) = v6;
  *((_QWORD *)v43 + 4) = v4;
  v54 = 0;
  v55 = 0;
  v57 = v43;
  sub_2245022E4(*v34, (uint64_t)v56);
  v44 = v57;
  if (v57 == v56)
  {
    v45 = 4;
    v44 = v56;
  }
  else
  {
    if (!v57)
      goto LABEL_47;
    v45 = 5;
  }
  (*(void (**)(_QWORD *))(*v44 + 8 * v45))(v44);
LABEL_47:
  if (v4)
  {
    v46 = (unint64_t *)&v4->__shared_owners_;
    do
      v47 = __ldaxr(v46);
    while (__stlxr(v47 - 1, v46));
    if (!v47)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_22358EDB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  va_list va;

  va_start(va, a3);
  v6 = *(_QWORD **)(v4 - 120);
  if (v6 == v3)
  {
    v7 = 4;
    v6 = (_QWORD *)(v4 - 144);
  }
  else
  {
    if (!v6)
    {
      sub_2235904A8((uint64_t)va);
      _Unwind_Resume(a1);
    }
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
  sub_2235904A8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22358EE08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12)
  {
    std::__shared_weak_count::__release_weak(a12);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22358EF00(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22358EF10(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22358EF1C(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_22358EF2C(_QWORD *a1, uint64_t a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count **v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  std::mutex **v29;
  uint64_t **v30;
  std::__shared_weak_count *v31;
  std::__shared_weak_count *v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  unint64_t *p_shared_weak_owners;
  unint64_t v36;
  unint64_t *p_shared_owners;
  unint64_t v38;
  uint64_t **v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  char *v48;
  std::string *v49;
  uint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  _QWORD *v56;
  __int128 *v57;
  __int128 *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  __int128 *v66;
  std::string *v67;
  std::runtime_error *exception;
  std::runtime_error *v69;
  _QWORD *v70;
  _QWORD *v71;
  std::__shared_weak_count *v72;
  std::runtime_error v73;
  std::__shared_weak_count *v74;
  std::__shared_weak_count *v75;
  std::__shared_weak_count *v76[2];
  _BYTE v77[2544];
  __int128 v78;
  __int128 v79;
  _QWORD *v80;
  __int128 *v81;
  _QWORD v82[3];
  std::string v83;
  std::string *v84;
  uint64_t v85;

  v85 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v79 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v79 + 1) = 45;
    v65 = (_QWORD *)a1[6];
    v64 = a1 + 6;
    v63 = v65;
    v66 = (__int128 *)*((unsigned __int8 *)v64 + 23);
    if ((char)v66 < 0)
      v66 = (__int128 *)v64[1];
    else
      v63 = v64;
    v80 = v63;
    v81 = v66;
    sub_2231A9820((uint64_t)&v79, (uint64_t)v82, 0, 0, &v83);
    if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v67 = &v83;
    else
      v67 = (std::string *)v83.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v73, (const char *)v67);
    v73.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v69 = std::runtime_error::runtime_error(exception, &v73);
    v69->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v69, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v30 = (uint64_t **)a1[9];
    v76[0] = 0;
    v76[1] = 0;
    v31 = (std::__shared_weak_count *)a1[5];
    if (v31)
    {
      v32 = std::__shared_weak_count::lock(v31);
      if (v32)
      {
        v33 = v32;
        v34 = (std::__shared_weak_count *)a1[4];
        p_shared_weak_owners = (unint64_t *)&v32->__shared_weak_owners_;
        do
          v36 = __ldxr(p_shared_weak_owners);
        while (__stxr(v36 + 1, p_shared_weak_owners));
        v76[0] = v34;
        v76[1] = v32;
        p_shared_owners = (unint64_t *)&v32->__shared_owners_;
        do
          v38 = __ldaxr(p_shared_owners);
        while (__stlxr(v38 - 1, p_shared_owners));
        if (!v38)
        {
          ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      else
      {
        v76[0] = 0;
        v76[1] = 0;
      }
    }
    sub_223523E5C((uint64_t)v77, a2);
    v56 = operator new(0x20uLL);
    v56[1] = 0;
    v56[2] = 0;
    *v56 = &off_24EC49718;
    v56[3] = *a3;
    *a3 = 0;
    *(_QWORD *)&v78 = v56 + 3;
    *((_QWORD *)&v78 + 1) = v56;
    v81 = 0;
    v57 = (__int128 *)operator new(0xA18uLL);
    *(_QWORD *)v57 = &off_24EC4A4A8;
    *(__int128 *)((char *)v57 + 8) = *(_OWORD *)v76;
    v76[0] = 0;
    v76[1] = 0;
    sub_2235146D4((uint64_t)v57 + 24, (uint64_t)v77);
    *(__int128 *)((char *)v57 + 2568) = v78;
    v78 = 0uLL;
    v81 = v57;
    sub_2245022E4(*v30, (uint64_t)&v79);
    v58 = v81;
    if (v81 == &v79)
    {
      v59 = 4;
      v58 = &v79;
    }
    else
    {
      if (!v81)
      {
LABEL_67:
        v60 = (std::__shared_weak_count *)*((_QWORD *)&v78 + 1);
        if (*((_QWORD *)&v78 + 1))
        {
          v61 = (unint64_t *)(*((_QWORD *)&v78 + 1) + 8);
          do
            v62 = __ldaxr(v61);
          while (__stlxr(v62 - 1, v61));
          if (!v62)
          {
            ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
            std::__shared_weak_count::__release_weak(v60);
          }
        }
        sub_2235141E0((uint64_t)v77);
        v55 = v76[1];
        if (v76[1])
          goto LABEL_73;
        return;
      }
      v59 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v58 + 8 * v59))();
    goto LABEL_67;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC49718;
  v6[1].__vftable = *a3;
  v72 = v6;
  v70 = &v6[1].__vftable;
  v71 = &v6->__vftable;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = (std::__shared_weak_count *)operator new(0xA08uLL);
  v9->__shared_owners_ = 0;
  v10 = (unint64_t *)&v9->__shared_owners_;
  v9->__shared_weak_owners_ = 0;
  v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4A2D8;
  v11 = v9 + 1;
  sub_223523E5C((uint64_t)&v9[1], a2);
  v74 = v9 + 1;
  v75 = v9;
  v12 = (unint64_t *)&v9->__shared_weak_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  v14 = (uint64_t *)a1[18];
  v15 = (_QWORD *)operator new();
  *v15 = v14 + 7;
  std::mutex::lock((std::mutex *)(v14 + 7));
  *(_QWORD *)&v79 = v15;
  *((_QWORD *)&v79 + 1) = v14;
  if (!*((_BYTE *)v14 + 48))
    sub_22324A974();
  v16 = v14[4];
  v17 = *v14;
  v18 = (std::__shared_weak_count **)(*v14 + 16 * v16);
  do
    v19 = __ldxr(v10);
  while (__stxr(v19 + 1, v10));
  *v18 = v11;
  v20 = v17 + 16 * v16;
  v21 = *(std::__shared_weak_count **)(v20 + 8);
  *(_QWORD *)(v20 + 8) = v9;
  if (v21)
  {
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v24 = (v14[1] - *v14) >> 4;
  v25 = v14[5];
  v26 = v14[4] + 1;
  if (v26 >= v24)
    v27 = (v14[1] - *v14) >> 4;
  else
    v27 = 0;
  v14[4] = v26 - v27;
  if (v25 != v24)
  {
    v14[5] = v25 + 1;
    v29 = (std::mutex **)v79;
    if (!(_QWORD)v79)
      goto LABEL_37;
    goto LABEL_36;
  }
  v28 = v14[3] + 1;
  if (v28 < v24)
    v24 = 0;
  v14[3] = v28 - v24;
  v29 = (std::mutex **)v79;
  if ((_QWORD)v79)
  {
LABEL_36:
    std::mutex::unlock(*v29);
    MEMORY[0x227684CE8](v29, 0x20C4093837F09);
  }
LABEL_37:
  v39 = (uint64_t **)a1[9];
  v79 = 0uLL;
  v40 = (std::__shared_weak_count *)a1[5];
  if (v40)
  {
    v41 = std::__shared_weak_count::lock(v40);
    if (v41)
    {
      v42 = v41;
      v43 = a1[4];
      v44 = (unint64_t *)&v41->__shared_weak_owners_;
      do
        v45 = __ldxr(v44);
      while (__stxr(v45 + 1, v44));
      *(_QWORD *)&v79 = v43;
      *((_QWORD *)&v79 + 1) = v41;
      v46 = (unint64_t *)&v41->__shared_owners_;
      do
        v47 = __ldaxr(v46);
      while (__stlxr(v47 - 1, v46));
      if (!v47)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v42);
      }
    }
    else
    {
      v79 = 0uLL;
    }
  }
  v48 = (char *)operator new(0x38uLL);
  *(_QWORD *)v48 = &off_24EC4A428;
  *(_OWORD *)(v48 + 8) = v79;
  v79 = 0uLL;
  *((_QWORD *)v48 + 3) = v11;
  *((_QWORD *)v48 + 4) = v9;
  v80 = 0;
  v81 = 0;
  *((_QWORD *)v48 + 5) = v70;
  *((_QWORD *)v48 + 6) = v71;
  v82[0] = 0;
  v82[1] = 0;
  v84 = (std::string *)v48;
  sub_2245022E4(*v39, (uint64_t)&v83);
  v49 = v84;
  if (v84 == &v83)
  {
    v50 = 4;
    v49 = &v83;
    goto LABEL_50;
  }
  if (v84)
  {
    v50 = 5;
LABEL_50:
    (*(void (**)(void))(v49->__r_.__value_.__r.__words[0] + 8 * v50))();
  }
  if (v75)
  {
    v51 = &v75->__shared_owners_;
    do
      v52 = __ldaxr((unint64_t *)v51);
    while (__stlxr(v52 - 1, (unint64_t *)v51));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
      std::__shared_weak_count::__release_weak(v75);
    }
  }
  if (v72)
  {
    v53 = (unint64_t *)&v72->__shared_owners_;
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
      v55 = v72;
LABEL_73:
      std::__shared_weak_count::__release_weak(v55);
    }
  }
}

void sub_22358F5B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15)
{
  std::__assoc_sub_state **v15;
  uint64_t v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  if (a2)
  {
    __cxa_begin_catch(exception_object);
    std::current_exception();
    __cxa_end_catch();
    v17 = *v15;
    if (*v15)
    {
      std::exception_ptr::exception_ptr((std::exception_ptr *)(v16 - 160), &a15);
      v18.__ptr_ = (void *)(v16 - 160);
      std::__assoc_sub_state::set_exception(v17, v18);
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v16 - 160));
      std::exception_ptr::~exception_ptr(&a15);
      std::runtime_error::~runtime_error(&a14);
      if (*(char *)(v16 - 81) < 0)
        operator delete(*(void **)(v16 - 104));
      JUMPOUT(0x22358F4CCLL);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(exception_object);
}

void sub_22358F62C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15)
{
  uint64_t v15;

  std::exception_ptr::~exception_ptr(&a15);
  std::runtime_error::~runtime_error(&a14);
  if (*(char *)(v15 - 81) < 0)
  {
    operator delete(*(void **)(v15 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22358F680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v14;
  uint64_t v15;
  va_list va;

  va_start(va, a11);
  v14 = *(_QWORD **)(v12 - 136);
  if (v14 == v11)
  {
    v15 = 4;
    v14 = (_QWORD *)(v12 - 160);
  }
  else
  {
    if (!v14)
    {
      sub_223590F60((uint64_t)va);
      _Unwind_Resume(a1);
    }
    v15 = 5;
  }
  (*(void (**)(void))(*v14 + 8 * v15))();
  sub_223590F60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22358F6D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  uint64_t v20;

  sub_2235141E0(v20);
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22358F708(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  va_list va1;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v10 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  v14 = va_arg(va2, _QWORD);
  v15 = va_arg(va2, _QWORD);
  v5 = *(_QWORD **)(v3 - 80);
  if (v5 == v2)
  {
    v6 = 4;
    v5 = (_QWORD *)(v3 - 104);
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  sub_22332429C((_QWORD *)(v3 - 160));
  sub_223167354((uint64_t)va2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22358F7A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  std::__shared_weak_count *v12;
  void *v14;

  std::__shared_weak_count::~__shared_weak_count(v12);
  operator delete(v14);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_22358F7D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22358F7EC(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_22358F860(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC4A528;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B380;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_22358F990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22358FA04(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4A5A8;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_22358FB14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_22358FB78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4A628;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22358FD90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_22358FE58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4A6A8;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_223590070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223590138(uint64_t a1)
{
  return sub_2235902A8(a1 - 16);
}

void sub_223590140(uint64_t a1)
{
  sub_2235902A8(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223590168(uint64_t a1, uint64_t a2)
{
  return sub_22358F860((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_223590170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22358FB78((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_223590178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22358FE58((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_223590180(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_223590188(uint64_t a1)
{
  return sub_2235902A8(a1 - 24);
}

void sub_223590190(uint64_t a1)
{
  sub_2235902A8(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235901B8(uint64_t a1)
{
  return sub_22358FA04((_QWORD *)(a1 - 24));
}

uint64_t sub_2235901C0(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235901C8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_223590230(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223590298(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235902A8(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4A0E8;
  *(_QWORD *)(a1 + 16) = &unk_24EC4A160;
  *(_QWORD *)(a1 + 24) = &unk_24EC4A1A0;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

uint64_t sub_2235904A8(uint64_t a1)
{
  std::__shared_weak_count *v2;

  sub_2235141E0(a1 + 16);
  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235904DC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4A2D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2235904EC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4A2D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22359051C(uint64_t a1)
{
  return sub_2235141E0(a1 + 24);
}

_QWORD *sub_223590528(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4A328;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_22359056C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4A328;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235905C0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4A328;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_223590630(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4A328;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_223590680(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235906BC(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235906F4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_223590A18((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_22358838C(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235908BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_22358838C(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235909A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNod"
                     "eMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE25EnqueueMessageAndDispatchIZNKSB_4SendERKS6_EUlT_T0_"
                     "E_EEvSE_SF_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_2"
                                "7MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE25EnqueueMessageAndDispatchIZNK"
                                "SB_4SendERKS6_EUlT_T0_E_EEvSE_SF_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE25EnqueueMessageAndDispatchIZNKSB_4SendERKS6_EUlT_T0_E_EEvSE_SF_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE25EnqueueMessageAndDispatchIZNKSB_4SendERKS6_EUlT_T0_E_EEvSE_SF_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223590A0C()
{
  return &unk_24EC4A388;
}

void sub_223590A18(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  _QWORD v9[55];
  char v10;

  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 251, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v9, v6, a2);
  if (v10)
  {
    v7 = a1 + 1;
    for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
      (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v9);
  }
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_2235882A8(*(_QWORD *)a3, (uint64_t)v9);
  }
  if (v10)
    sub_2232954B0((uint64_t)v9);
}

void sub_223590B14(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  if (a71)
    sub_2232954B0((uint64_t)&a18);
  if (a2 == 1)
  {
    v73 = (uint64_t *)__cxa_begin_catch(a1);
    v74 = *v73;
    a11 = *(_QWORD *)(*(_QWORD *)(*v73 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a10 = (*(uint64_t (**)(void))(v74 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", (const char *)&a11, "\n", "message: ", (const char *)&a10, "\n");
    if (a17 >= 0)
      v75 = (uint64_t)&a12;
    else
      v75 = a12;
    if (a17 >= 0)
      v76 = a17;
    else
      v76 = a13;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, v75, v76, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_223590BE0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x223590C00);
}

_QWORD *sub_223590C0C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4A3A8;
  sub_2235141E0((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223590C48(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4A3A8;
  sub_2235141E0((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223590C94(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0xA08uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC4A3A8;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  sub_223523E5C((uint64_t)(v2 + 3), a1 + 24);
  return v3;
}

void sub_223590CF8(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223590D18(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC4A3A8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return sub_223523E5C((uint64_t)(a2 + 3), a1 + 24);
}

void sub_223590D70(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223590D88(uint64_t a1)
{
  std::__shared_weak_count *v2;

  sub_2235141E0(a1 + 24);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
}

void sub_223590DC0(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  sub_2235141E0((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(a1);
}

void sub_223590DF4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_223590A18((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_22358838C(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223590E9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_22358838C(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223590EE8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNod"
                     "eMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_2"
                                "7MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223590F54()
{
  return &unk_24EC4A408;
}

uint64_t sub_223590F60(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 2568);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2235141E0(a1 + 16);
      v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  sub_2235141E0(a1 + 16);
  v5 = *(std::__shared_weak_count **)(a1 + 8);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

_QWORD *sub_223590FE0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4A428;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_223591068(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4A428;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_223591100(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4A428;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_223591190(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4A428;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_223591200(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_223591280(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_2235912FC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_223590A18(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_22358838C((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235915D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223591604(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x223591410);
    JUMPOUT(0x2235913E0);
  }
  sub_2233236D4(3u);
}

void sub_223591660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_22359168C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_22358838C(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_223591778(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNod"
                     "eMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE25EnqueueMessageAndDispatchIZNKSB_7ProcessERKS6_NS8_7"
                     "promiseISA_EEEUlT_T0_E_EEvSE_SH_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_2"
                                "7MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE25EnqueueMessageAndDispatchIZNK"
                                "SB_7ProcessERKS6_NS8_7promiseISA_EEEUlT_T0_E_EEvSE_SH_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE25EnqueueMessageAndDispatchIZNKSB_7ProcessERKS6_NS8_7promiseISA_EEEUlT_T0_E_EEvSE_SH_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE25EnqueueMessageAndDispatchIZNKSB_7ProcessERKS6_NS8_7promiseISA_EEEUlT_T0_E_EEvSE_SH_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235917E4()
{
  return &unk_24EC4A488;
}

_QWORD *sub_2235917F0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4A4A8;
  v2 = (std::__shared_weak_count *)a1[322];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2235141E0((uint64_t)(a1 + 3));
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  sub_2235141E0((uint64_t)(a1 + 3));
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_22359187C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4A4A8;
  v2 = (std::__shared_weak_count *)a1[322];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    sub_2235141E0((uint64_t)(a1 + 3));
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  else
  {
LABEL_5:
    sub_2235141E0((uint64_t)(a1 + 3));
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  std::__shared_weak_count::__release_weak(v5);
LABEL_9:
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223591918(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = operator new(0xA18uLL);
  v3 = v2;
  v5 = a1[1];
  v4 = a1[2];
  *v2 = &off_24EC4A4A8;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  sub_223523E5C((uint64_t)(v2 + 3), (uint64_t)(a1 + 3));
  v3[321] = a1[321];
  v8 = a1[322];
  v3[322] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return v3;
}

void sub_2235919A4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235919C4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC4A4A8;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = sub_223523E5C((uint64_t)(a2 + 3), (uint64_t)(a1 + 3));
  a2[321] = a1[321];
  v9 = a1[322];
  a2[322] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_223591A44(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223591A5C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 2576);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    sub_2235141E0(a1 + 24);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  sub_2235141E0(a1 + 24);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
}

void sub_223591ADC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (std::__shared_weak_count *)a1[322];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2235141E0((uint64_t)(a1 + 3));
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  sub_2235141E0((uint64_t)(a1 + 3));
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  operator delete(a1);
}

void sub_223591B5C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[321];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_223590A18((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_22358838C((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_223591C6C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_223591CE4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x223591D18);
  JUMPOUT(0x223591D48);
}

uint64_t sub_223591D50(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNod"
                     "eMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE7ProcessERKS6_NS8_7promiseISA_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_2"
                                "7MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE7ProcessERKS6_NS8_7promiseISA_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE7ProcessERKS6_NS8_7promiseISA_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE7ProcessERKS6_NS8_7promiseISA_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223591DBC()
{
  return &unk_24EC4A508;
}

_QWORD *sub_223591DC8(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4A528;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_223591E20(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4A528;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223591E88(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC4A528;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B380;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_223591F00(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223591F20(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC4A528;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B380;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_223591F88(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_223591FA0(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223591FF0(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B380;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_22359203C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B380;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235920F0(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359212C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNode"
                     "MeshUpdateResultEvNSt3__18optionalIS7_EELb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27"
                                "MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223592198()
{
  return &unk_24EC4A588;
}

_QWORD *sub_2235921A4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4A5A8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235921DC(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4A5A8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223592224(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4A5A8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_223592274(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4A5A8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235922A4(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235922B4(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235922E0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223592374(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235923B0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNode"
                     "MeshUpdateResultEvNSt3__18optionalIS7_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27"
                                "MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359241C()
{
  return &unk_24EC4A608;
}

_QWORD *sub_223592428(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4A628;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223592460(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4A628;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235924A8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4A628;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_223592500(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4A628;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_223592538(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223592548(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223592574(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_2235926F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223592760(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNod"
                     "eMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_2"
                                "7MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235927CC()
{
  return &unk_24EC4A688;
}

_QWORD *sub_2235927D8(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4A6A8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223592810(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4A6A8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223592858(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4A6A8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235928B0(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4A6A8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235928E8(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235928F8(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223592924(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235929DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223592A28(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNod"
                     "eMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_2"
                                "7MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng24KeyframeEngineResultSyncENS5_27MeshingNodeMeshUpdateResultEvNSt3__18optionalIS7_EELb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223592A94()
{
  return &unk_24EC4A708;
}

void sub_223592AA4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223592AC8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_223592AE0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng24KeyframeEngineResultSy"
                     "ncENS7_27MeshingNodeMeshUpdateResultEvNS_8optionalIS9_EELb0EEEE27__shared_ptr_default_deleteISC_SC_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng24KeyframeEng"
                                "ineResultSyncENS7_27MeshingNodeMeshUpdateResultEvNS_8optionalIS9_EELb0EEEE27__shared_ptr"
                                "_default_deleteISC_SC_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng24KeyframeEngineResultSyncENS7_27MeshingNodeMeshUpdateResultEvNS_8optionalIS9_EELb0EEEE27__shared_ptr_default_deleteISC_SC_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng24KeyframeEngineResultSyncENS7_27MeshingNodeMeshUpdateResultEvNS_8optionalIS9_EELb0EEEE27__shared_ptr_default_deleteISC_SC_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_223592B50(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223592B7C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223592BB8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4A778;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_223592C20(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223592CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223592CC4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223592D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223592D68(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_223592E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223592E40(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_223592F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223592F18(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223592FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223592FD4(uint64_t a1)
{
  sub_223594774(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223592FF8(_QWORD *a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t *p_shared_weak_owners;
  std::__shared_weak_count *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count **v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  std::mutex **v22;
  uint64_t **v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t **v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  __int128 *v46;
  __int128 *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 *v51;
  _BYTE v52[24];
  _BYTE *v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v2 = (uint64_t *)a1[18];
  if (v2)
  {
    v3 = (std::__shared_weak_count *)operator new(0x20uLL);
    v3->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    v3->__shared_weak_owners_ = 0;
    p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4A9E0;
    v6 = v3 + 1;
    do
      v7 = __ldxr(p_shared_weak_owners);
    while (__stxr(v7 + 1, p_shared_weak_owners));
    v8 = (_QWORD *)operator new();
    *v8 = v2 + 7;
    std::mutex::lock((std::mutex *)(v2 + 7));
    *(_QWORD *)&v49 = v8;
    *((_QWORD *)&v49 + 1) = v2;
    if (!*((_BYTE *)v2 + 48))
      sub_22324A974();
    v9 = v2[4];
    v10 = *v2;
    v11 = (std::__shared_weak_count **)(*v2 + 16 * v9);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *v11 = v6;
    v13 = v10 + 16 * v9;
    v14 = *(std::__shared_weak_count **)(v13 + 8);
    *(_QWORD *)(v13 + 8) = v3;
    if (v14)
    {
      v15 = (unint64_t *)&v14->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    v17 = (v2[1] - *v2) >> 4;
    v18 = v2[5];
    v19 = v2[4] + 1;
    if (v19 >= v17)
      v20 = (v2[1] - *v2) >> 4;
    else
      v20 = 0;
    v2[4] = v19 - v20;
    if (v18 == v17)
    {
      v21 = v2[3] + 1;
      if (v21 < v17)
        v17 = 0;
      v2[3] = v21 - v17;
      v22 = (std::mutex **)v49;
      if (!(_QWORD)v49)
      {
LABEL_33:
        v32 = (uint64_t **)a1[9];
        v49 = 0uLL;
        v33 = (std::__shared_weak_count *)a1[5];
        if (v33)
        {
          v34 = std::__shared_weak_count::lock(v33);
          if (v34)
          {
            v35 = v34;
            v36 = a1[4];
            v37 = (unint64_t *)&v34->__shared_weak_owners_;
            do
              v38 = __ldxr(v37);
            while (__stxr(v38 + 1, v37));
            *(_QWORD *)&v49 = v36;
            *((_QWORD *)&v49 + 1) = v34;
            v39 = (unint64_t *)&v34->__shared_owners_;
            do
              v40 = __ldaxr(v39);
            while (__stlxr(v40 - 1, v39));
            if (!v40)
            {
              ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
              std::__shared_weak_count::__release_weak(v35);
            }
          }
          else
          {
            v49 = 0uLL;
          }
        }
        v41 = (char *)operator new(0x30uLL);
        *(_QWORD *)v41 = &off_24EC4AA30;
        *(_OWORD *)(v41 + 8) = v49;
        v49 = 0uLL;
        *((_QWORD *)v41 + 3) = v6;
        *((_QWORD *)v41 + 4) = v3;
        v50 = 0;
        v51 = 0;
        v53 = v41;
        sub_2245022E4(*v32, (uint64_t)v52);
        v42 = v53;
        if (v53 == v52)
        {
          v43 = 4;
          v42 = v52;
        }
        else
        {
          if (!v53)
            goto LABEL_47;
          v43 = 5;
        }
        (*(void (**)(_QWORD *))(*v42 + 8 * v43))(v42);
LABEL_47:
        if (v3)
        {
          v44 = (unint64_t *)&v3->__shared_owners_;
          do
            v45 = __ldaxr(v44);
          while (__stlxr(v45 - 1, v44));
          if (!v45)
          {
            ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
            std::__shared_weak_count::__release_weak(v3);
          }
        }
        return;
      }
    }
    else
    {
      v2[5] = v18 + 1;
      v22 = (std::mutex **)v49;
      if (!(_QWORD)v49)
        goto LABEL_33;
    }
    std::mutex::unlock(*v22);
    MEMORY[0x227684CE8](v22, 0x20C4093837F09);
    goto LABEL_33;
  }
  v23 = (uint64_t **)a1[9];
  v24 = (std::__shared_weak_count *)a1[5];
  if (v24)
  {
    v25 = std::__shared_weak_count::lock(v24);
    v26 = v25;
    if (v25)
    {
      v27 = a1[4];
      v28 = (unint64_t *)&v25->__shared_weak_owners_;
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
      v30 = (unint64_t *)&v25->__shared_owners_;
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    else
    {
      v27 = 0;
    }
  }
  else
  {
    v27 = 0;
    v26 = 0;
  }
  v46 = (__int128 *)operator new(0x20uLL);
  *(_QWORD *)v46 = &off_24EC4AAB0;
  *((_QWORD *)v46 + 1) = v27;
  *((_QWORD *)v46 + 2) = v26;
  v51 = v46;
  sub_2245022E4(*v23, (uint64_t)&v49);
  v47 = v51;
  if (v51 == &v49)
  {
    v48 = 4;
    v47 = &v49;
  }
  else
  {
    if (!v51)
      return;
    v48 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v47 + 8 * v48))();
}

void sub_2235933F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;

  if (a14 == v19)
  {
    (*(void (**)(void))(a11 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a14)
  {
    (*(void (**)(void))(*(_QWORD *)a14 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235934EC(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235934FC(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_223593508(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_223593518(_QWORD *a1, uint64_t a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t *p_shared_weak_owners;
  std::__shared_weak_count *v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count **v17;
  unint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  std::mutex **v28;
  uint64_t **v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  std::__shared_weak_count *v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t **v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  char *v47;
  std::string *v48;
  uint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  __int128 *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  __int128 *v62;
  std::string *v63;
  std::runtime_error *exception;
  std::runtime_error *v65;
  __int128 v66;
  _QWORD *v67;
  std::__shared_weak_count *v68;
  std::__shared_weak_count *v69;
  std::runtime_error v70;
  std::__shared_weak_count *v71;
  std::__shared_weak_count *v72;
  __int128 v73;
  _QWORD *v74;
  __int128 *v75;
  _QWORD v76[3];
  std::string v77;
  std::string *v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v73 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v73 + 1) = 45;
    v61 = (_QWORD *)a1[6];
    v60 = a1 + 6;
    v59 = v61;
    v62 = (__int128 *)*((unsigned __int8 *)v60 + 23);
    if ((char)v62 < 0)
      v62 = (__int128 *)v60[1];
    else
      v59 = v60;
    v74 = v59;
    v75 = v62;
    sub_2231A9820((uint64_t)&v73, (uint64_t)v76, 0, 0, &v77);
    if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v63 = &v77;
    else
      v63 = (std::string *)v77.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v70, (const char *)v63);
    v70.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v65 = std::runtime_error::runtime_error(exception, &v70);
    v65->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v65, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v5 = (std::__shared_weak_count *)operator new(0x20uLL);
    v5->__shared_weak_owners_ = 0;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&unk_24EC2F420;
    v5[1].__vftable = *a3;
    v69 = v5;
    v67 = &v5[1].__vftable;
    v68 = v5;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    *a3 = 0;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    if (!a1[18]
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v8 = (std::__shared_weak_count *)operator new(0x20uLL);
    v8->__shared_owners_ = 0;
    v9 = (unint64_t *)&v8->__shared_owners_;
    v8->__shared_weak_owners_ = 0;
    p_shared_weak_owners = (unint64_t *)&v8->__shared_weak_owners_;
    v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4A9E0;
    v11 = v8 + 1;
    v71 = v8 + 1;
    v72 = v8;
    do
      v12 = __ldxr(p_shared_weak_owners);
    while (__stxr(v12 + 1, p_shared_weak_owners));
    v13 = (uint64_t *)a1[18];
    v14 = (_QWORD *)operator new();
    *v14 = v13 + 7;
    std::mutex::lock((std::mutex *)(v13 + 7));
    *(_QWORD *)&v73 = v14;
    *((_QWORD *)&v73 + 1) = v13;
    if (!*((_BYTE *)v13 + 48))
      sub_22324A974();
    v15 = v13[4];
    v16 = *v13;
    v17 = (std::__shared_weak_count **)(*v13 + 16 * v15);
    do
      v18 = __ldxr(v9);
    while (__stxr(v18 + 1, v9));
    *v17 = v11;
    v19 = v16 + 16 * v15;
    v20 = *(std::__shared_weak_count **)(v19 + 8);
    *(_QWORD *)(v19 + 8) = v8;
    if (v20)
    {
      v21 = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    v23 = (v13[1] - *v13) >> 4;
    v24 = v13[5];
    v25 = v13[4] + 1;
    if (v25 >= v23)
      v26 = (v13[1] - *v13) >> 4;
    else
      v26 = 0;
    v13[4] = v25 - v26;
    if (v24 == v23)
    {
      v27 = v13[3] + 1;
      if (v27 < v23)
        v23 = 0;
      v13[3] = v27 - v23;
      v28 = (std::mutex **)v73;
      if (!(_QWORD)v73)
      {
LABEL_37:
        v38 = (uint64_t **)a1[9];
        v73 = 0uLL;
        v39 = (std::__shared_weak_count *)a1[5];
        if (v39)
        {
          v40 = std::__shared_weak_count::lock(v39);
          if (v40)
          {
            v41 = v40;
            v42 = a1[4];
            v43 = (unint64_t *)&v40->__shared_weak_owners_;
            do
              v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
            *(_QWORD *)&v73 = v42;
            *((_QWORD *)&v73 + 1) = v40;
            v45 = (unint64_t *)&v40->__shared_owners_;
            do
              v46 = __ldaxr(v45);
            while (__stlxr(v46 - 1, v45));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
              std::__shared_weak_count::__release_weak(v41);
            }
          }
          else
          {
            v73 = 0uLL;
          }
        }
        v47 = (char *)operator new(0x38uLL);
        *(_QWORD *)v47 = &off_24EC4AB30;
        *(_OWORD *)(v47 + 8) = v73;
        v73 = 0uLL;
        *((_QWORD *)v47 + 3) = v11;
        *((_QWORD *)v47 + 4) = v8;
        v74 = 0;
        v75 = 0;
        *((_QWORD *)v47 + 5) = v67;
        *((_QWORD *)v47 + 6) = v68;
        v76[0] = 0;
        v76[1] = 0;
        v78 = (std::string *)v47;
        sub_2245022E4(*v38, (uint64_t)&v77);
        v48 = v78;
        if (v78 == &v77)
        {
          v49 = 4;
          v48 = &v77;
        }
        else
        {
          if (!v78)
            goto LABEL_51;
          v49 = 5;
        }
        (*(void (**)(void))(v48->__r_.__value_.__r.__words[0] + 8 * v49))();
LABEL_51:
        if (v72)
        {
          v50 = &v72->__shared_owners_;
          do
            v51 = __ldaxr((unint64_t *)v50);
          while (__stlxr(v51 - 1, (unint64_t *)v50));
          if (!v51)
          {
            ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
            std::__shared_weak_count::__release_weak(v72);
          }
        }
        if (v69)
        {
          v52 = (unint64_t *)&v69->__shared_owners_;
          do
            v53 = __ldaxr(v52);
          while (__stlxr(v53 - 1, v52));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
            std::__shared_weak_count::__release_weak(v69);
          }
        }
        return;
      }
    }
    else
    {
      v13[5] = v24 + 1;
      v28 = (std::mutex **)v73;
      if (!(_QWORD)v73)
        goto LABEL_37;
    }
    std::mutex::unlock(*v28);
    MEMORY[0x227684CE8](v28, 0x20C4093837F09);
    goto LABEL_37;
  }
  v29 = (uint64_t **)a1[9];
  v66 = 0uLL;
  v30 = (std::__shared_weak_count *)a1[5];
  if (v30)
  {
    v31 = std::__shared_weak_count::lock(v30);
    if (v31)
    {
      v32 = v31;
      v33 = a1[4];
      v34 = (unint64_t *)&v31->__shared_weak_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
      *(_QWORD *)&v66 = v33;
      *((_QWORD *)&v66 + 1) = v31;
      v36 = (unint64_t *)&v31->__shared_owners_;
      do
        v37 = __ldaxr(v36);
      while (__stlxr(v37 - 1, v36));
      if (!v37)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
    else
    {
      v66 = 0uLL;
    }
  }
  v54 = operator new(0x20uLL);
  v54[1] = 0;
  v54[2] = 0;
  *v54 = &unk_24EC2F420;
  v54[3] = *a3;
  *a3 = 0;
  v55 = (char *)operator new(0x30uLL);
  *(_QWORD *)v55 = &off_24EC4ABB0;
  *(_OWORD *)(v55 + 8) = v66;
  *((_QWORD *)v55 + 4) = v54 + 3;
  *((_QWORD *)v55 + 5) = v54;
  v75 = (__int128 *)v55;
  sub_2245022E4(*v29, (uint64_t)&v73);
  v57 = v75;
  if (v75 == &v73)
  {
    v58 = 4;
    v57 = &v73;
  }
  else
  {
    if (!v75)
      return;
    v58 = 5;
  }
  (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)v57 + 8 * v58))(v57, v56);
}

void sub_223593B24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::runtime_error a18, std::exception_ptr a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  std::promise<void> *v25;
  uint64_t v26;
  std::exception_ptr v27;

  if (a2)
  {
    __cxa_begin_catch(exception_object);
    std::current_exception();
    __cxa_end_catch();
    v27.__ptr_ = &a19;
    std::promise<void>::set_exception(v25, v27);
    std::exception_ptr::~exception_ptr(&a19);
    std::runtime_error::~runtime_error(&a18);
    if (*(char *)(v26 - 81) < 0)
      operator delete(*(void **)(v26 - 104));
    JUMPOUT(0x223593A38);
  }
  _Unwind_Resume(exception_object);
}

void sub_223593C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  va_list va1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va2;
  uint64_t v22;
  va_list va3;

  va_start(va3, a6);
  va_start(va2, a6);
  va_start(va1, a6);
  va_start(va, a6);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v14 = va_arg(va2, _QWORD);
  v16 = va_arg(va2, _QWORD);
  v17 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v20 = va_arg(va3, _QWORD);
  v22 = va_arg(va3, _QWORD);
  v9 = *(_QWORD **)(v7 - 80);
  if (v9 == v6)
  {
    v10 = 4;
    v9 = (_QWORD *)(v7 - 104);
  }
  else
  {
    if (!v9)
      goto LABEL_6;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_6:
  sub_22332429C((uint64_t *)va3);
  sub_223167354((uint64_t)va2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_223593CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v7;
  va_list va;
  uint64_t v9;
  va_list va1;

  va_start(va1, a6);
  va_start(va, a6);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_223593CE8(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_223593D5C(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4AC30;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_223593E6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_223593ED0(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4ACB0;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_223593FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_223594044@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4AD30;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22359425C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_223594324@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4ADB0;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22359453C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223594604(uint64_t a1)
{
  return sub_223594774(a1 - 16);
}

void sub_22359460C(uint64_t a1)
{
  sub_223594774(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223594634(uint64_t a1)
{
  return sub_223593D5C((_QWORD *)(a1 - 16));
}

uint64_t *sub_22359463C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_223594044((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_223594644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_223594324((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_22359464C(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_223594654(uint64_t a1)
{
  return sub_223594774(a1 - 24);
}

void sub_22359465C(uint64_t a1)
{
  sub_223594774(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223594684(uint64_t a1)
{
  return sub_223593ED0((_QWORD *)(a1 - 24));
}

uint64_t sub_22359468C(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_223594694(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2235946FC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223594764(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223594774(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4A7F0;
  *(_QWORD *)(a1 + 16) = &unk_24EC4A868;
  *(_QWORD *)(a1 + 24) = &unk_24EC4A8A8;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v14 = *(_QWORD *)(a1 + 96);
    v13 = *(uint64_t **)(a1 + 104);
    v15 = *v13;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v14 + 8);
    **(_QWORD **)(v14 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v13 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v13[1];
        operator delete(v13);
        v13 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

void sub_223594960(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4A9E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223594970(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4A9E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235949A8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4AA30;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235949EC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4AA30;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223594A40(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4AA30;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_223594AB0(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4AA30;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_223594B00(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223594B3C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_223594B74(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  _BYTE v20[8];
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      v20[0] = 0;
      v21 = 0;
      sub_223594E98((uint64_t *)(v8 + 88), v5, (uint64_t)v20);
      if (v21)
        MEMORY[0x227684B68](v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223594D3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    MEMORY[0x227684B68](&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223594E20(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE"
                     "25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeReque"
                                "stEvvvLb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223594E8C()
{
  return &unk_24EC4AA90;
}

void sub_223594E98(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 276, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v6, a2);
  if (*(_BYTE *)(a3 + 8))
    std::promise<void>::set_value((std::promise<void> *)a3);
}

void sub_223594F30()
{
  __break(1u);
}

void sub_223594FDC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x223594FFCLL);
}

_QWORD *sub_223595008(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4AAB0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223595040(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4AAB0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223595088(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4AAB0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_2235950D8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4AAB0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_223595108(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223595118(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223595144(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  _BYTE v8[8];
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v8[0] = 0;
        v9 = 0;
        sub_223594E98((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)v8);
        if (v9)
          MEMORY[0x227684B68](v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235951EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    MEMORY[0x227684B68](&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223595238(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE"
                     "4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeReque"
                                "stEvvvLb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235952A4()
{
  return &unk_24EC4AB10;
}

_QWORD *sub_2235952B0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4AB30;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_223595338(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4AB30;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_2235953D0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4AB30;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_223595460(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4AB30;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235954D0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_223595550(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_2235955CC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_223594E98(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    MEMORY[0x227684B68](&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223595880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11, std::exception_ptr a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235959D8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE"
                     "25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIvEEEUlT_T0_E_EEvSA_SE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeReque"
                                "stEvvvLb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIvEEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIvEEEUlT_T0_E_EEvSA_SE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIvEEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223595A44()
{
  return &unk_24EC4AB90;
}

_QWORD *sub_223595A50(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4ABB0;
  v2 = (std::__shared_weak_count *)a1[5];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_223595ACC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4ABB0;
  v2 = (std::__shared_weak_count *)a1[5];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  std::__shared_weak_count::__release_weak(v5);
LABEL_9:
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223595B58(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4ABB0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[5];
  result[4] = a1[4];
  result[5] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_223595BC8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4ABB0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[5];
  a2[4] = result[4];
  a2[5] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_223595C18(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
}

void sub_223595C88(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (std::__shared_weak_count *)__p[5];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (std::__shared_weak_count *)__p[2];
      if (!v5)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = (std::__shared_weak_count *)__p[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  operator delete(__p);
}

void sub_223595CF8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[4];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_223594E98((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    MEMORY[0x227684B68](&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_223595E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::runtime_error a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (LOBYTE(a11.__imp_.__imp_))
    MEMORY[0x227684B68](&a11);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223595EB4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE"
                     "7ProcessERKS6_NSt3__17promiseIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeReque"
                                "stEvvvLb0EE7ProcessERKS6_NSt3__17promiseIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE7ProcessERKS6_NSt3__17promiseIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE7ProcessERKS6_NSt3__17promiseIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223595F20()
{
  return &unk_24EC4AC10;
}

_QWORD *sub_223595F2C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4AC30;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223595F64(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4AC30;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223595FAC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4AC30;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_223595FFC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4AC30;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_22359602C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22359603C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223596068(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 96);
        v7 = (_QWORD *)(v5 + 96);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235960FC(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223596138(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE9"
                     "SubscribeENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeReques"
                                "tEvvvLb0EE9SubscribeENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE9SubscribeENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE9SubscribeENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235961A4()
{
  return &unk_24EC4AC90;
}

_QWORD *sub_2235961B0(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4ACB0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235961E8(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4ACB0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223596230(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4ACB0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_223596280(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4ACB0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235962B0(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235962C0(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235962EC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223596380(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235963BC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE1"
                     "5AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeReques"
                                "tEvvvLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223596428()
{
  return &unk_24EC4AD10;
}

_QWORD *sub_223596434(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4AD30;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22359646C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4AD30;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235964B4(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4AD30;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22359650C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4AD30;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_223596544(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_223596554(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223596580(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223596638(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223596684(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE"
                     "16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeReque"
                                "stEvvvLb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235966F0()
{
  return &unk_24EC4AD90;
}

_QWORD *sub_2235966FC(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4ADB0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223596734(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4ADB0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359677C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4ADB0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235967D4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4ADB0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22359680C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22359681C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_223596848(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223596900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359694C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE"
                     "15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeReque"
                                "stEvvvLb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235969B8()
{
  return &unk_24EC4AE10;
}

void sub_2235969C8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235969EC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_223596A04(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng32SpatialMappingResetVol"
                     "umeRequestEvvvLb0EEEE27__shared_ptr_default_deleteIS9_S9_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng32SpatialMapp"
                                "ingResetVolumeRequestEvvvLb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EEEE27__shared_ptr_default_deleteIS9_S9_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng32SpatialMappingResetVolumeRequestEvvvLb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_223596A74(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_223596AA0(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223596ADC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4AE80;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_223596B44(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223596BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223596BE8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223596C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223596C8C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_223596D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223596D64(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_223596E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223596E3C(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_223596EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223596EF8(uint64_t a1)
{
  sub_223598920(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223596F1C(_QWORD *a1, __int128 *a2)
{
  uint64_t *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  _OWORD *v8;
  uint64_t **v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *p_shared_weak_owners;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  std::mutex **v34;
  uint64_t **v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t *v47;
  unint64_t v48;
  char *v49;
  __int128 *v50;
  uint64_t v51;
  std::__shared_weak_count *v52[2];
  __int128 __p;
  uint64_t v54;
  _OWORD *v55;
  std::__shared_weak_count *v56;
  __int128 v57;
  uint64_t v58;
  __int128 *v59;
  _BYTE v60[24];
  _BYTE *v61;
  uint64_t v62;

  v62 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v4 = (uint64_t *)a1[18];
  if (v4)
  {
    v5 = (char *)operator new(0x30uLL);
    v6 = (std::__shared_weak_count *)v5;
    *((_QWORD *)v5 + 1) = 0;
    v7 = (unint64_t *)(v5 + 8);
    *((_QWORD *)v5 + 2) = 0;
    *(_QWORD *)v5 = &off_24EC4B0E8;
    v8 = v5 + 24;
    if (*((char *)a2 + 23) < 0)
    {
      sub_223197FA4(v5 + 24, *(void **)a2, *((_QWORD *)a2 + 1));
      v4 = (uint64_t *)a1[18];
    }
    else
    {
      *v8 = *a2;
      *((_QWORD *)v5 + 5) = *((_QWORD *)a2 + 2);
    }
    v55 = v8;
    v56 = v6;
    p_shared_weak_owners = (unint64_t *)&v6->__shared_weak_owners_;
    do
      v19 = __ldxr(p_shared_weak_owners);
    while (__stxr(v19 + 1, p_shared_weak_owners));
    v20 = (_QWORD *)operator new();
    *v20 = v4 + 7;
    std::mutex::lock((std::mutex *)(v4 + 7));
    *(_QWORD *)&v57 = v20;
    *((_QWORD *)&v57 + 1) = v4;
    if (!*((_BYTE *)v4 + 48))
      sub_22324A974();
    v21 = v4[4];
    v22 = *v4;
    v23 = (_QWORD *)(*v4 + 16 * v21);
    do
      v24 = __ldxr(v7);
    while (__stxr(v24 + 1, v7));
    *v23 = v8;
    v25 = v22 + 16 * v21;
    v26 = *(std::__shared_weak_count **)(v25 + 8);
    *(_QWORD *)(v25 + 8) = v6;
    if (v26)
    {
      p_shared_owners = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(p_shared_owners);
      while (__stlxr(v28 - 1, p_shared_owners));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    v29 = (v4[1] - *v4) >> 4;
    v30 = v4[5];
    v31 = v4[4] + 1;
    if (v31 >= v29)
      v32 = (v4[1] - *v4) >> 4;
    else
      v32 = 0;
    v4[4] = v31 - v32;
    if (v30 == v29)
    {
      v33 = v4[3] + 1;
      if (v33 < v29)
        v29 = 0;
      v4[3] = v33 - v29;
      v34 = (std::mutex **)v57;
      if (!(_QWORD)v57)
      {
LABEL_36:
        v35 = (uint64_t **)a1[9];
        v57 = 0uLL;
        v36 = (std::__shared_weak_count *)a1[5];
        if (v36)
        {
          v37 = std::__shared_weak_count::lock(v36);
          if (v37)
          {
            v38 = v37;
            v39 = a1[4];
            v40 = (unint64_t *)&v37->__shared_weak_owners_;
            do
              v41 = __ldxr(v40);
            while (__stxr(v41 + 1, v40));
            *(_QWORD *)&v57 = v39;
            *((_QWORD *)&v57 + 1) = v37;
            v42 = (unint64_t *)&v37->__shared_owners_;
            do
              v43 = __ldaxr(v42);
            while (__stlxr(v43 - 1, v42));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v38);
            }
          }
          else
          {
            v57 = 0uLL;
          }
        }
        v44 = (char *)operator new(0x30uLL);
        *(_QWORD *)v44 = &off_24EC4B138;
        *(_OWORD *)(v44 + 8) = v57;
        v57 = 0uLL;
        *((_QWORD *)v44 + 3) = v8;
        *((_QWORD *)v44 + 4) = v6;
        v58 = 0;
        v59 = 0;
        v61 = v44;
        sub_2245022E4(*v35, (uint64_t)v60);
        v45 = v61;
        if (v61 == v60)
        {
          v46 = 4;
          v45 = v60;
        }
        else
        {
          if (!v61)
            goto LABEL_50;
          v46 = 5;
        }
        (*(void (**)(void))(*v45 + 8 * v46))();
LABEL_50:
        if (v56)
        {
          v47 = &v56->__shared_owners_;
          do
            v48 = __ldaxr((unint64_t *)v47);
          while (__stlxr(v48 - 1, (unint64_t *)v47));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
            std::__shared_weak_count::__release_weak(v56);
          }
        }
        return;
      }
    }
    else
    {
      v4[5] = v30 + 1;
      v34 = (std::mutex **)v57;
      if (!(_QWORD)v57)
        goto LABEL_36;
    }
    std::mutex::unlock(*v34);
    MEMORY[0x227684CE8](v34, 0x20C4093837F09);
    goto LABEL_36;
  }
  v9 = (uint64_t **)a1[9];
  *(_OWORD *)v52 = 0uLL;
  v10 = (std::__shared_weak_count *)a1[5];
  if (v10)
  {
    v11 = std::__shared_weak_count::lock(v10);
    if (v11)
    {
      v12 = v11;
      v13 = (std::__shared_weak_count *)a1[4];
      v14 = (unint64_t *)&v11->__shared_weak_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      v52[0] = v13;
      v52[1] = v11;
      v16 = (unint64_t *)&v11->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    else
    {
      *(_OWORD *)v52 = 0uLL;
    }
  }
  if (*((char *)a2 + 23) < 0)
  {
    sub_223197FA4(&__p, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    __p = *a2;
    v54 = *((_QWORD *)a2 + 2);
  }
  v59 = 0;
  v49 = (char *)operator new(0x30uLL);
  *(_QWORD *)v49 = off_24EC4B1B8;
  *(_OWORD *)(v49 + 8) = *(_OWORD *)v52;
  *(_OWORD *)(v49 + 24) = __p;
  *((_QWORD *)v49 + 5) = v54;
  __p = 0uLL;
  v54 = 0;
  v59 = (__int128 *)v49;
  sub_2245022E4(*v9, (uint64_t)&v57);
  v50 = v59;
  if (v59 == &v57)
  {
    v51 = 4;
    v50 = &v57;
  }
  else
  {
    if (!v59)
      goto LABEL_64;
    v51 = 5;
  }
  (*(void (**)(__int128 *))(*(_QWORD *)v50 + 8 * v51))(v50);
LABEL_64:
  if (SHIBYTE(v54) < 0)
    operator delete((void *)__p);
}

void sub_2235973B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2235973E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char *a20)
{
  char *v20;
  char *v22;
  uint64_t v23;

  v22 = a20;
  if (a20 == v20)
  {
    v23 = 4;
    v22 = &a17;
  }
  else
  {
    if (!a20)
    {
      sub_2234BD5C0((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v23 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v22 + 8 * v23))();
  sub_2234BD5C0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223597438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  va_list va;
  uint64_t v14;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v10 = *(_QWORD **)(v8 - 64);
  if (v10 == v7)
  {
    v11 = 4;
    v10 = (_QWORD *)(v8 - 88);
  }
  else
  {
    if (!v10)
      goto LABEL_6;
    v11 = 5;
  }
  (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_6:
  sub_223322894((uint64_t)va1);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223597488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  std::__shared_weak_count *v7;
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  sub_223322848((std::mutex ***)va1);
  std::__shared_weak_count::__release_weak(v7);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2235974AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  std::__shared_weak_count *v7;
  uint64_t v8;
  va_list va;

  va_start(va, a7);
  MEMORY[0x227684CE8](v8, 0x20C4093837F09);
  std::__shared_weak_count::__release_weak(v7);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2235974E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  std::__shared_weak_count *v15;

  std::__shared_weak_count::__release_weak(v15);
  sub_223167354((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_223597500(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_223597510(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22359751C(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_22359752C(_QWORD *a1, __int128 *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  char *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  _OWORD *v12;
  uint64_t **v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_weak_owners;
  unint64_t v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  std::mutex **v39;
  uint64_t **v40;
  std::__shared_weak_count *v41;
  std::__shared_weak_count *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  std::__shared_weak_count *v50;
  char *v51;
  std::string *v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  char *v61;
  uint64_t v62;
  __int128 *v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  __int128 *v71;
  std::string *v72;
  std::runtime_error *exception;
  std::runtime_error *v74;
  std::__shared_weak_count *v75[2];
  __int128 __p;
  uint64_t v77;
  _QWORD *v78;
  std::__shared_weak_count *v79;
  std::__shared_weak_count *v80;
  std::__shared_weak_count *v81;
  std::__shared_weak_count *v82;
  std::__shared_weak_count *v83;
  std::runtime_error v84;
  _OWORD *v85;
  std::__shared_weak_count *v86;
  __int128 v87;
  _QWORD *v88;
  __int128 *v89;
  _QWORD v90[3];
  std::string v91;
  std::string *v92;
  uint64_t v93;

  v93 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v87 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v87 + 1) = 45;
    v70 = (_QWORD *)a1[6];
    v69 = a1 + 6;
    v68 = v70;
    v71 = (__int128 *)*((unsigned __int8 *)v69 + 23);
    if ((char)v71 < 0)
      v71 = (__int128 *)v69[1];
    else
      v68 = v69;
    v88 = v68;
    v89 = v71;
    sub_2231A9820((uint64_t)&v87, (uint64_t)v90, 0, 0, &v91);
    if ((v91.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v72 = &v91;
    else
      v72 = (std::string *)v91.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v84, (const char *)v72);
    v84.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v74 = std::runtime_error::runtime_error(exception, &v84);
    v74->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v74, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v13 = (uint64_t **)a1[9];
    *(_OWORD *)v75 = 0uLL;
    v14 = (std::__shared_weak_count *)a1[5];
    if (v14)
    {
      v15 = std::__shared_weak_count::lock(v14);
      if (!v15)
      {
        *(_OWORD *)v75 = 0uLL;
        if ((*((char *)a2 + 23) & 0x80000000) == 0)
          goto LABEL_19;
        goto LABEL_71;
      }
      v16 = v15;
      v17 = (std::__shared_weak_count *)a1[4];
      p_shared_weak_owners = (unint64_t *)&v15->__shared_weak_owners_;
      do
        v19 = __ldxr(p_shared_weak_owners);
      while (__stxr(v19 + 1, p_shared_weak_owners));
      v75[0] = v17;
      v75[1] = v15;
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v16);
        if ((*((char *)a2 + 23) & 0x80000000) == 0)
          goto LABEL_19;
        goto LABEL_71;
      }
    }
    if ((*((char *)a2 + 23) & 0x80000000) == 0)
    {
LABEL_19:
      __p = *a2;
      v77 = *((_QWORD *)a2 + 2);
      goto LABEL_72;
    }
LABEL_71:
    sub_223197FA4(&__p, *(void **)a2, *((_QWORD *)a2 + 1));
LABEL_72:
    v60 = (std::__shared_weak_count *)operator new(0x20uLL);
    v60->__shared_owners_ = 0;
    v60->__shared_weak_owners_ = 0;
    v60->__vftable = (std::__shared_weak_count_vtbl *)&unk_24EC3AC28;
    v60[1].__vftable = *a3;
    *a3 = 0;
    v78 = &v60[1].__vftable;
    v79 = v60;
    v89 = 0;
    v61 = (char *)operator new(0x40uLL);
    *(_QWORD *)v61 = off_24EC4B2B8;
    *(_OWORD *)(v61 + 8) = *(_OWORD *)v75;
    *(_OWORD *)(v61 + 24) = __p;
    v62 = v77;
    __p = 0uLL;
    v77 = 0;
    *((_QWORD *)v61 + 5) = v62;
    *((_QWORD *)v61 + 6) = v60 + 1;
    *((_QWORD *)v61 + 7) = v60;
    v78 = 0;
    v79 = 0;
    v89 = (__int128 *)v61;
    sub_2245022E4(*v13, (uint64_t)&v87);
    v63 = v89;
    if (v89 == &v87)
    {
      v64 = 4;
      v63 = &v87;
    }
    else
    {
      if (!v89)
      {
LABEL_77:
        v65 = v79;
        if (!v79)
          goto LABEL_81;
        v66 = (unint64_t *)&v79->__shared_owners_;
        do
          v67 = __ldaxr(v66);
        while (__stlxr(v67 - 1, v66));
        if (!v67)
        {
          ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
          std::__shared_weak_count::__release_weak(v65);
          if ((SHIBYTE(v77) & 0x80000000) == 0)
            return;
        }
        else
        {
LABEL_81:
          if ((SHIBYTE(v77) & 0x80000000) == 0)
            return;
        }
        operator delete((void *)__p);
        return;
      }
      v64 = 5;
    }
    (*(void (**)(__int128 *))(*(_QWORD *)v63 + 8 * v64))(v63);
    goto LABEL_77;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_24EC3AC28;
  v6[1].__vftable = *a3;
  v82 = v6 + 1;
  v83 = v6;
  v80 = v6 + 1;
  v81 = v6;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = (char *)operator new(0x30uLL);
  v10 = (std::__shared_weak_count *)v9;
  *((_QWORD *)v9 + 1) = 0;
  v11 = (unint64_t *)(v9 + 8);
  *((_QWORD *)v9 + 2) = 0;
  *(_QWORD *)v9 = &off_24EC4B0E8;
  v12 = v9 + 24;
  if (*((char *)a2 + 23) < 0)
  {
    sub_223197FA4(v9 + 24, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    *v12 = *a2;
    *((_QWORD *)v9 + 5) = *((_QWORD *)a2 + 2);
  }
  v85 = v12;
  v86 = v10;
  v22 = (unint64_t *)&v10->__shared_weak_owners_;
  do
    v23 = __ldxr(v22);
  while (__stxr(v23 + 1, v22));
  v24 = (uint64_t *)a1[18];
  v25 = (_QWORD *)operator new();
  *v25 = v24 + 7;
  std::mutex::lock((std::mutex *)(v24 + 7));
  *(_QWORD *)&v87 = v25;
  *((_QWORD *)&v87 + 1) = v24;
  if (!*((_BYTE *)v24 + 48))
    sub_22324A974();
  v26 = v24[4];
  v27 = *v24;
  v28 = (_QWORD *)(*v24 + 16 * v26);
  do
    v29 = __ldxr(v11);
  while (__stxr(v29 + 1, v11));
  *v28 = v12;
  v30 = v27 + 16 * v26;
  v31 = *(std::__shared_weak_count **)(v30 + 8);
  *(_QWORD *)(v30 + 8) = v10;
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = (v24[1] - *v24) >> 4;
  v35 = v24[5];
  v36 = v24[4] + 1;
  if (v36 >= v34)
    v37 = (v24[1] - *v24) >> 4;
  else
    v37 = 0;
  v24[4] = v36 - v37;
  if (v35 != v34)
  {
    v24[5] = v35 + 1;
    v39 = (std::mutex **)v87;
    if (!(_QWORD)v87)
      goto LABEL_41;
    goto LABEL_40;
  }
  v38 = v24[3] + 1;
  if (v38 < v34)
    v34 = 0;
  v24[3] = v38 - v34;
  v39 = (std::mutex **)v87;
  if ((_QWORD)v87)
  {
LABEL_40:
    std::mutex::unlock(*v39);
    MEMORY[0x227684CE8](v39, 0x20C4093837F09);
  }
LABEL_41:
  v40 = (uint64_t **)a1[9];
  v87 = 0uLL;
  v41 = (std::__shared_weak_count *)a1[5];
  if (v41)
  {
    v42 = std::__shared_weak_count::lock(v41);
    if (v42)
    {
      v43 = v42;
      v44 = a1[4];
      v45 = (unint64_t *)&v42->__shared_weak_owners_;
      do
        v46 = __ldxr(v45);
      while (__stxr(v46 + 1, v45));
      *(_QWORD *)&v87 = v44;
      *((_QWORD *)&v87 + 1) = v42;
      v47 = (unint64_t *)&v42->__shared_owners_;
      do
        v48 = __ldaxr(v47);
      while (__stlxr(v48 - 1, v47));
      if (!v48)
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v43);
      }
    }
    else
    {
      v87 = 0uLL;
    }
  }
  v49 = v80;
  v50 = v81;
  v80 = 0;
  v81 = 0;
  v51 = (char *)operator new(0x38uLL);
  *(_QWORD *)v51 = &off_24EC4B238;
  *(_OWORD *)(v51 + 8) = v87;
  v87 = 0uLL;
  *((_QWORD *)v51 + 3) = v12;
  *((_QWORD *)v51 + 4) = v10;
  v88 = 0;
  v89 = 0;
  *((_QWORD *)v51 + 5) = v49;
  *((_QWORD *)v51 + 6) = v50;
  v90[0] = 0;
  v90[1] = 0;
  v92 = (std::string *)v51;
  sub_2245022E4(*v40, (uint64_t)&v91);
  v52 = v92;
  if (v92 == &v91)
  {
    v53 = 4;
    v52 = &v91;
  }
  else
  {
    if (!v92)
      goto LABEL_55;
    v53 = 5;
  }
  (*(void (**)(void))(v52->__r_.__value_.__r.__words[0] + 8 * v53))();
LABEL_55:
  if (v86)
  {
    v54 = &v86->__shared_owners_;
    do
      v55 = __ldaxr((unint64_t *)v54);
    while (__stlxr(v55 - 1, (unint64_t *)v54));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
      std::__shared_weak_count::__release_weak(v86);
    }
  }
  if (v81)
  {
    v56 = &v81->__shared_owners_;
    do
      v57 = __ldaxr((unint64_t *)v56);
    while (__stlxr(v57 - 1, (unint64_t *)v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
      std::__shared_weak_count::__release_weak(v81);
    }
  }
  if (v83)
  {
    v58 = &v83->__shared_owners_;
    do
      v59 = __ldaxr((unint64_t *)v58);
    while (__stlxr(v59 - 1, (unint64_t *)v58));
    if (!v59)
    {
      ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
      std::__shared_weak_count::__release_weak(v83);
    }
  }
}

void sub_223597C28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_223597C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, char a18)
{
  std::__shared_weak_count *v18;
  void *v20;

  std::__shared_weak_count::~__shared_weak_count(v18);
  operator delete(v20);
  sub_223167354((uint64_t)&a16);
  sub_223167354((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_223597C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::runtime_error a20,std::exception_ptr a21,uint64_t a22,uint64_t a23,std::exception_ptr a24)
{
  std::__assoc_sub_state **v24;
  uint64_t v25;
  std::__assoc_sub_state *v26;
  std::exception_ptr v27;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v26 = *v24;
    if (*v24)
    {
      std::exception_ptr::exception_ptr(&a24, &a21);
      v27.__ptr_ = &a24;
      std::__assoc_sub_state::set_exception(v26, v27);
      std::exception_ptr::~exception_ptr(&a24);
      std::exception_ptr::~exception_ptr(&a21);
      std::runtime_error::~runtime_error(&a20);
      if (*(char *)(v25 - 81) < 0)
        operator delete(*(void **)(v25 - 104));
      JUMPOUT(0x223597AECLL);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_223597CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::runtime_error a20,std::exception_ptr a21,uint64_t a22,uint64_t a23,std::exception_ptr a24)
{
  uint64_t v24;

  std::exception_ptr::~exception_ptr(&a21);
  std::runtime_error::~runtime_error(&a20);
  if (*(char *)(v24 - 81) < 0)
  {
    operator delete(*(void **)(v24 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_223597D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,char *a28)
{
  char *v28;
  char *v30;
  uint64_t v31;

  v30 = a28;
  if (a28 == v28)
  {
    v31 = 4;
    v30 = &a25;
  }
  else
  {
    if (!a28)
    {
      sub_2234BE2AC((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v31 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v30 + 8 * v31))();
  sub_2234BE2AC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223597D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x223597DA0);
}

void sub_223597DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  va_list va1;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  va_list va2;
  uint64_t v24;
  va_list va3;

  va_start(va3, a8);
  va_start(va2, a8);
  va_start(va1, a8);
  va_start(va, a8);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v16 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  v20 = va_arg(va2, _QWORD);
  v21 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v22 = va_arg(va3, _QWORD);
  v24 = va_arg(va3, _QWORD);
  v11 = *(_QWORD **)(v9 - 80);
  if (v11 == v8)
  {
    v12 = 4;
    v11 = (_QWORD *)(v9 - 104);
  }
  else
  {
    if (!v11)
      goto LABEL_6;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_6:
  sub_22332429C((uint64_t *)va3);
  sub_223167354((uint64_t)va2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_223597E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_223597E64(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_223597ED8(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC4B338;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2DF48;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_223598008(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22359807C(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4B3B8;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_22359818C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2235981F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4B438;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_223598408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235984D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4B4B8;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235986E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235987B0(uint64_t a1)
{
  return sub_223598920(a1 - 16);
}

void sub_2235987B8(uint64_t a1)
{
  sub_223598920(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235987E0(uint64_t a1, uint64_t a2)
{
  return sub_223597ED8((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235987E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235981F0((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235987F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235984D0((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_2235987F8(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_223598800(uint64_t a1)
{
  return sub_223598920(a1 - 24);
}

void sub_223598808(uint64_t a1)
{
  sub_223598920(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223598830(uint64_t a1)
{
  return sub_22359807C((_QWORD *)(a1 - 24));
}

uint64_t sub_223598838(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_223598840(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2235988A8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223598910(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_223598920(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4AEF8;
  *(_QWORD *)(a1 + 16) = &unk_24EC4AF70;
  *(_QWORD *)(a1 + 24) = &unk_24EC4AFB0;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

void sub_223598B20(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4B0E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223598B30(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4B0E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223598B60(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
}

_QWORD *sub_223598B78(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4B138;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_223598BBC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4B138;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223598C10(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4B138;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_223598C80(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4B138;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_223598CD0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_223598D0C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_223598D44(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_223599068((uint64_t *)(v8 + 88), v5, &v20);
      if (v21)
        sub_2234AB028(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223598F0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_2234AB028(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223598FF0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE25EnqueueMessag"
                     "eAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE25En"
                                "queueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE25EnqueueMessageAndDispatchIZNKS7_4SendERKS6_EUlT_T0_E_EEvSA_SB_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359905C()
{
  return &unk_24EC4B198;
}

void sub_223599068(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  BOOL v8;
  uint64_t v9;
  uint64_t i;
  unsigned __int8 v11;
  _QWORD *v12;
  _QWORD *j;
  uint64_t v14;
  uint64_t v15;
  std::exception_ptr v16;
  char v17;

  v6 = *a1;
  if (!v6)
  {
    sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    v7 = atomic_load((unsigned __int8 *)&qword_255795680);
    if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
    {
      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
      __cxa_guard_release(&qword_255795680);
    }
    if (byte_255795670)
      v8 = byte_255795678 == 0;
    else
      v8 = 0;
    if (!v8)
    {
      v9 = qword_255795648;
      for (i = qword_255795650; v9 != i; v9 += 16)
        (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v9)(*(_QWORD *)(v9 + 8), "callable_", 9, "", 0);
    }
    v11 = atomic_load((unsigned __int8 *)&qword_255795680);
    if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
    {
      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
      __cxa_guard_release(&qword_255795680);
    }
    if (!byte_255795670)
      abort();
    qword_255795660(*(_QWORD *)algn_255795668, "callable_", 9, "", 0);
    v6 = *a1;
  }
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v6, a2);
  v12 = a1 + 1;
  for (j = (_QWORD *)a1[2]; j != v12; j = (_QWORD *)j[1])
    (*(void (**)(_QWORD *, char *))(j[2] + 16))(j + 2, &v17);
  if (*((_BYTE *)a3 + 8))
  {
    v14 = *a3;
    if (!v14)
      sub_2233236D4(3u);
    std::mutex::lock((std::mutex *)(v14 + 24));
    if ((*(_BYTE *)(v14 + 136) & 1) != 0
      || (v16.__ptr_ = 0, v15 = *(_QWORD *)(v14 + 16), std::exception_ptr::~exception_ptr(&v16), v15))
    {
      sub_2233236D4(2u);
    }
    *(_BYTE *)(v14 + 140) = v17;
    *(_DWORD *)(v14 + 136) |= 5u;
    std::condition_variable::notify_all((std::condition_variable *)(v14 + 88));
    std::mutex::unlock((std::mutex *)(v14 + 24));
  }
}

void sub_2235992D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, int a13, __int16 a14, char a15, unsigned __int8 a16)
{
  std::mutex *v16;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  std::mutex::unlock(v16);
  if (a2 == 1)
  {
    v19 = (uint64_t *)__cxa_begin_catch(a1);
    v20 = *v19;
    a10 = *(_QWORD *)(*(_QWORD *)(*v19 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a9 = (*(uint64_t (**)(void))(v20 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", (const char *)&a10, "\n", "message: ", (const char *)&a9, "\n");
    if ((a16 & 0x80u) == 0)
      v21 = (uint64_t *)&a11;
    else
      v21 = a11;
    if ((a16 & 0x80u) == 0)
      v22 = a16;
    else
      v22 = a12;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v21, v22, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_22359939C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x2235993BCLL);
}

uint64_t sub_2235993C8(uint64_t a1)
{
  std::__shared_weak_count *v2;

  *(_QWORD *)a1 = off_24EC4B1B8;
  if (*(char *)(a1 + 47) < 0)
  {
    operator delete(*(void **)(a1 + 24));
    v2 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v2)
      return a1;
    goto LABEL_3;
  }
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
LABEL_3:
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22359941C(uint64_t a1)
{
  std::__shared_weak_count *v2;

  *(_QWORD *)a1 = off_24EC4B1B8;
  if (*(char *)(a1 + 47) < 0)
  {
    operator delete(*(void **)(a1 + 24));
    v2 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v2)
      goto LABEL_6;
  }
  else
  {
    v2 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v2)
      goto LABEL_6;
  }
  std::__shared_weak_count::__release_weak(v2);
LABEL_6:
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223599480(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _BYTE *v8;

  v2 = operator new(0x30uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = off_24EC4B1B8;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = v2 + 3;
  if (*(char *)(a1 + 47) < 0)
  {
    sub_223197FA4(v8, *(void **)(a1 + 24), *(_QWORD *)(a1 + 32));
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)(a1 + 24);
    v3[5] = *(_QWORD *)(a1 + 40);
  }
  return v3;
}

void sub_223599510(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_223599530(char *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  __int128 v6;

  v3 = *((_QWORD *)result + 1);
  v2 = *((_QWORD *)result + 2);
  *(_QWORD *)a2 = off_24EC4B1B8;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  if (result[47] < 0)
    return (char *)sub_223197FA4((_BYTE *)(a2 + 24), *((void **)result + 3), *((_QWORD *)result + 4));
  v6 = *(_OWORD *)(result + 24);
  *(_QWORD *)(a2 + 40) = *((_QWORD *)result + 5);
  *(_OWORD *)(a2 + 24) = v6;
  return result;
}

void sub_2235995B0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235995C8(uint64_t a1)
{
  std::__shared_weak_count *v2;

  if ((*(char *)(a1 + 47) & 0x80000000) == 0)
  {
    v2 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v2)
      return;
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 24));
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
LABEL_3:
    std::__shared_weak_count::__release_weak(v2);
}

void sub_223599610(void **__p)
{
  std::__shared_weak_count *v2;

  if (*((char *)__p + 47) < 0)
  {
    operator delete(__p[3]);
    v2 = (std::__shared_weak_count *)__p[2];
    if (!v2)
      goto LABEL_4;
    goto LABEL_3;
  }
  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
LABEL_3:
    std::__shared_weak_count::__release_weak(v2);
LABEL_4:
  operator delete(__p);
}

void sub_223599658(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_223599068((uint64_t *)(v5 + 88), a1 + 24, &v8);
        if (v9)
          sub_2234AB028(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_223599700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_2234AB028(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359974C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235997B8()
{
  return &unk_24EC4B218;
}

_QWORD *sub_2235997C4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4B238;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_22359984C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4B238;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_2235998E4(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4B238;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_223599974(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4B238;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235999E4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_223599A64(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_223599AE0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_223599068(v13, v5, (uint64_t *)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_2234AB028((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_223599DBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223599DE8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x223599BF4);
    JUMPOUT(0x223599BC4);
  }
  sub_2233236D4(3u);
}

void sub_223599E44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_223599E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_2234AB028(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_223599F5C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE25EnqueueMessag"
                     "eAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIbEEEUlT_T0_E_EEvSA_SE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE25En"
                                "queueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIbEEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIbEEEUlT_T0_E_EEvSA_SE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE25EnqueueMessageAndDispatchIZNKS7_7ProcessERKS6_NSt3__17promiseIbEEEUlT_T0_E_EEvSA_SE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223599FC8()
{
  return &unk_24EC4B298;
}

uint64_t sub_223599FD4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *(_QWORD *)a1 = off_24EC4B2B8;
  v2 = *(std::__shared_weak_count **)(a1 + 56);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
      goto LABEL_6;
LABEL_10:
    operator delete(*(void **)(a1 + 24));
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return a1;
    goto LABEL_7;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  if (*(char *)(a1 + 47) < 0)
    goto LABEL_10;
LABEL_6:
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_7:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_22359A068(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *(_QWORD *)a1 = off_24EC4B2B8;
  v2 = *(std::__shared_weak_count **)(a1 + 56);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
    {
LABEL_6:
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      if (!v5)
        goto LABEL_11;
      goto LABEL_7;
    }
  }
  else
  {
LABEL_5:
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
      goto LABEL_6;
  }
  operator delete(*(void **)(a1 + 24));
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_11;
LABEL_7:
  std::__shared_weak_count::__release_weak(v5);
LABEL_11:
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359A10C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v2 = operator new(0x40uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = off_24EC4B2B8;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = v2 + 3;
  if (*(char *)(a1 + 47) < 0)
  {
    sub_223197FA4(v8, *(void **)(a1 + 24), *(_QWORD *)(a1 + 32));
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)(a1 + 24);
    v3[5] = *(_QWORD *)(a1 + 40);
  }
  v9 = *(_QWORD *)(a1 + 56);
  v3[6] = *(_QWORD *)(a1 + 48);
  v3[7] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return v3;
}

void sub_22359A1B0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

_BYTE *sub_22359A1D0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _BYTE *result;
  __int128 v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *a2 = off_24EC4B2B8;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a2 + 3;
  if (*(char *)(a1 + 47) < 0)
  {
    result = sub_223197FA4(result, *(void **)(a1 + 24), *(_QWORD *)(a1 + 32));
  }
  else
  {
    v9 = *(_OWORD *)(a1 + 24);
    a2[5] = *(_QWORD *)(a1 + 40);
    *(_OWORD *)result = v9;
  }
  v10 = *(_QWORD *)(a1 + 56);
  a2[6] = *(_QWORD *)(a1 + 48);
  a2[7] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

void sub_22359A268(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22359A280(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 56);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
    {
LABEL_6:
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      if (!v5)
        return;
      goto LABEL_7;
    }
  }
  else
  {
LABEL_5:
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
      goto LABEL_6;
  }
  operator delete(*(void **)(a1 + 24));
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_7:
    std::__shared_weak_count::__release_weak(v5);
}

void sub_22359A308(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 7);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    if ((__p[47] & 0x80000000) == 0)
      goto LABEL_6;
LABEL_10:
    operator delete(*((void **)__p + 3));
    v5 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
    if (!v5)
      goto LABEL_8;
    goto LABEL_7;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  if (__p[47] < 0)
    goto LABEL_10;
LABEL_6:
  v5 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v5)
LABEL_7:
    std::__shared_weak_count::__release_weak(v5);
LABEL_8:
  operator delete(__p);
}

void sub_22359A390(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[6];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_223599068((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t *)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_2234AB028((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_22359A4A0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_22359A518(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x22359A54CLL);
  JUMPOUT(0x22359A57CLL);
}

uint64_t sub_22359A584(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE7ProcessERKS6_N"
                     "St3__17promiseIbEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE7Pro"
                                "cessERKS6_NSt3__17promiseIbEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE7ProcessERKS6_NSt3__17promiseIbEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE7ProcessERKS6_NSt3__17promiseIbEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359A5F0()
{
  return &unk_24EC4B318;
}

_QWORD *sub_22359A5FC(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4B338;
  v2 = a1[4];
  a1[3] = &off_24EC2DF48;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_22359A654(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4B338;
  v2 = a1[4];
  a1[3] = &off_24EC2DF48;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359A6BC(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC4B338;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2DF48;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_22359A734(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_22359A754(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC4B338;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2DF48;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_22359A7BC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22359A7D4(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2DF48;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_22359A824(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2DF48;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_22359A870(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2DF48;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22359A924(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359A960(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE9SubscribeENS1_1"
                     "2ChannelInputIbEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE9Subs"
                                "cribeENS1_12ChannelInputIbEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE9SubscribeENS1_12ChannelInputIbEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE9SubscribeENS1_12ChannelInputIbEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359A9CC()
{
  return &unk_24EC4B398;
}

_QWORD *sub_22359A9D8(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4B3B8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22359AA10(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4B3B8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359AA58(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4B3B8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_22359AAA8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4B3B8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_22359AAD8(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22359AAE8(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22359AB14(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22359ABA8(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359ABE4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE15AddErrorHandle"
                     "rENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE15Add"
                                "ErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359AC50()
{
  return &unk_24EC4B418;
}

_QWORD *sub_22359AC5C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4B438;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22359AC94(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4B438;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359ACDC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4B438;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22359AD34(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4B438;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22359AD6C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22359AD7C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22359ADA8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_22359AF24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359AF94(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE16Ou"
                                "tputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359B000()
{
  return &unk_24EC4B498;
}

_QWORD *sub_22359B00C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4B4B8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22359B044(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4B4B8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359B08C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4B4B8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22359B0E4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4B4B8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22359B11C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22359B12C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22359B158(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22359B210(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359B25C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE15Er"
                                "rorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng17SaveMeshesRequestEbvbLb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359B2C8()
{
  return &unk_24EC4B518;
}

void sub_22359B2D8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22359B2FC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_22359B314(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng17SaveMeshesRequestEbvbL"
                     "b0EEEE27__shared_ptr_default_deleteIS9_S9_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng17SaveMeshesR"
                                "equestEbvbLb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng17SaveMeshesRequestEbvbLb0EEEE27__shared_ptr_default_deleteIS9_S9_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng17SaveMeshesRequestEbvbLb0EEEE27__shared_ptr_default_deleteIS9_S9_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_22359B384(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22359B3B0(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359B3EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4B588;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_22359B454(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22359B4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22359B4F8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22359B588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22359B59C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22359B660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22359B674(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22359B738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22359B74C(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_22359B7F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22359B808(uint64_t a1)
{
  sub_22359D008(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22359B82C(_QWORD *a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t *p_shared_weak_owners;
  std::__shared_weak_count *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count **v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  std::mutex **v22;
  uint64_t **v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t **v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  __int128 *v46;
  __int128 *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 *v51;
  _BYTE v52[24];
  _BYTE *v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v2 = (uint64_t *)a1[18];
  if (v2)
  {
    v3 = (std::__shared_weak_count *)operator new(0x20uLL);
    v3->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    v3->__shared_weak_owners_ = 0;
    p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4B7F0;
    v6 = v3 + 1;
    do
      v7 = __ldxr(p_shared_weak_owners);
    while (__stxr(v7 + 1, p_shared_weak_owners));
    v8 = (_QWORD *)operator new();
    *v8 = v2 + 7;
    std::mutex::lock((std::mutex *)(v2 + 7));
    *(_QWORD *)&v49 = v8;
    *((_QWORD *)&v49 + 1) = v2;
    if (!*((_BYTE *)v2 + 48))
      sub_22324A974();
    v9 = v2[4];
    v10 = *v2;
    v11 = (std::__shared_weak_count **)(*v2 + 16 * v9);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *v11 = v6;
    v13 = v10 + 16 * v9;
    v14 = *(std::__shared_weak_count **)(v13 + 8);
    *(_QWORD *)(v13 + 8) = v3;
    if (v14)
    {
      v15 = (unint64_t *)&v14->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    v17 = (v2[1] - *v2) >> 4;
    v18 = v2[5];
    v19 = v2[4] + 1;
    if (v19 >= v17)
      v20 = (v2[1] - *v2) >> 4;
    else
      v20 = 0;
    v2[4] = v19 - v20;
    if (v18 == v17)
    {
      v21 = v2[3] + 1;
      if (v21 < v17)
        v17 = 0;
      v2[3] = v21 - v17;
      v22 = (std::mutex **)v49;
      if (!(_QWORD)v49)
      {
LABEL_33:
        v32 = (uint64_t **)a1[9];
        v49 = 0uLL;
        v33 = (std::__shared_weak_count *)a1[5];
        if (v33)
        {
          v34 = std::__shared_weak_count::lock(v33);
          if (v34)
          {
            v35 = v34;
            v36 = a1[4];
            v37 = (unint64_t *)&v34->__shared_weak_owners_;
            do
              v38 = __ldxr(v37);
            while (__stxr(v38 + 1, v37));
            *(_QWORD *)&v49 = v36;
            *((_QWORD *)&v49 + 1) = v34;
            v39 = (unint64_t *)&v34->__shared_owners_;
            do
              v40 = __ldaxr(v39);
            while (__stlxr(v40 - 1, v39));
            if (!v40)
            {
              ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
              std::__shared_weak_count::__release_weak(v35);
            }
          }
          else
          {
            v49 = 0uLL;
          }
        }
        v41 = (char *)operator new(0x30uLL);
        *(_QWORD *)v41 = &off_24EC4B840;
        *(_OWORD *)(v41 + 8) = v49;
        v49 = 0uLL;
        *((_QWORD *)v41 + 3) = v6;
        *((_QWORD *)v41 + 4) = v3;
        v50 = 0;
        v51 = 0;
        v53 = v41;
        sub_2245022E4(*v32, (uint64_t)v52);
        v42 = v53;
        if (v53 == v52)
        {
          v43 = 4;
          v42 = v52;
        }
        else
        {
          if (!v53)
            goto LABEL_47;
          v43 = 5;
        }
        (*(void (**)(_QWORD *))(*v42 + 8 * v43))(v42);
LABEL_47:
        if (v3)
        {
          v44 = (unint64_t *)&v3->__shared_owners_;
          do
            v45 = __ldaxr(v44);
          while (__stlxr(v45 - 1, v44));
          if (!v45)
          {
            ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
            std::__shared_weak_count::__release_weak(v3);
          }
        }
        return;
      }
    }
    else
    {
      v2[5] = v18 + 1;
      v22 = (std::mutex **)v49;
      if (!(_QWORD)v49)
        goto LABEL_33;
    }
    std::mutex::unlock(*v22);
    MEMORY[0x227684CE8](v22, 0x20C4093837F09);
    goto LABEL_33;
  }
  v23 = (uint64_t **)a1[9];
  v24 = (std::__shared_weak_count *)a1[5];
  if (v24)
  {
    v25 = std::__shared_weak_count::lock(v24);
    v26 = v25;
    if (v25)
    {
      v27 = a1[4];
      v28 = (unint64_t *)&v25->__shared_weak_owners_;
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
      v30 = (unint64_t *)&v25->__shared_owners_;
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    else
    {
      v27 = 0;
    }
  }
  else
  {
    v27 = 0;
    v26 = 0;
  }
  v46 = (__int128 *)operator new(0x20uLL);
  *(_QWORD *)v46 = &off_24EC4B8C0;
  *((_QWORD *)v46 + 1) = v27;
  *((_QWORD *)v46 + 2) = v26;
  v51 = v46;
  sub_2245022E4(*v23, (uint64_t)&v49);
  v47 = v51;
  if (v51 == &v49)
  {
    v48 = 4;
    v47 = &v49;
  }
  else
  {
    if (!v51)
      return;
    v48 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v47 + 8 * v48))();
}

void sub_22359BC2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;

  if (a14 == v19)
  {
    (*(void (**)(void))(a11 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a14)
  {
    (*(void (**)(void))(*(_QWORD *)a14 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359BD20(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22359BD30(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_22359BD3C(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_22359BD4C(_QWORD *a1, uint64_t a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t *p_shared_weak_owners;
  std::__shared_weak_count *v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count **v17;
  unint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  std::mutex **v28;
  uint64_t **v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  std::__shared_weak_count *v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t **v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  char *v47;
  std::string *v48;
  uint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  __int128 *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  __int128 *v62;
  std::string *v63;
  std::runtime_error *exception;
  std::runtime_error *v65;
  __int128 v66;
  _QWORD *v67;
  std::__shared_weak_count *v68;
  std::__shared_weak_count *v69;
  std::runtime_error v70;
  std::__shared_weak_count *v71;
  std::__shared_weak_count *v72;
  __int128 v73;
  _QWORD *v74;
  __int128 *v75;
  _QWORD v76[3];
  std::string v77;
  std::string *v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v73 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v73 + 1) = 45;
    v61 = (_QWORD *)a1[6];
    v60 = a1 + 6;
    v59 = v61;
    v62 = (__int128 *)*((unsigned __int8 *)v60 + 23);
    if ((char)v62 < 0)
      v62 = (__int128 *)v60[1];
    else
      v59 = v60;
    v74 = v59;
    v75 = v62;
    sub_2231A9820((uint64_t)&v73, (uint64_t)v76, 0, 0, &v77);
    if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v63 = &v77;
    else
      v63 = (std::string *)v77.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v70, (const char *)v63);
    v70.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v65 = std::runtime_error::runtime_error(exception, &v70);
    v65->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v65, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v5 = (std::__shared_weak_count *)operator new(0x20uLL);
    v5->__shared_weak_owners_ = 0;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC45A18;
    v5[1].__vftable = *a3;
    v69 = v5;
    v67 = &v5[1].__vftable;
    v68 = v5;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    *a3 = 0;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    if (!a1[18]
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v8 = (std::__shared_weak_count *)operator new(0x20uLL);
    v8->__shared_owners_ = 0;
    v9 = (unint64_t *)&v8->__shared_owners_;
    v8->__shared_weak_owners_ = 0;
    p_shared_weak_owners = (unint64_t *)&v8->__shared_weak_owners_;
    v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4B7F0;
    v11 = v8 + 1;
    v71 = v8 + 1;
    v72 = v8;
    do
      v12 = __ldxr(p_shared_weak_owners);
    while (__stxr(v12 + 1, p_shared_weak_owners));
    v13 = (uint64_t *)a1[18];
    v14 = (_QWORD *)operator new();
    *v14 = v13 + 7;
    std::mutex::lock((std::mutex *)(v13 + 7));
    *(_QWORD *)&v73 = v14;
    *((_QWORD *)&v73 + 1) = v13;
    if (!*((_BYTE *)v13 + 48))
      sub_22324A974();
    v15 = v13[4];
    v16 = *v13;
    v17 = (std::__shared_weak_count **)(*v13 + 16 * v15);
    do
      v18 = __ldxr(v9);
    while (__stxr(v18 + 1, v9));
    *v17 = v11;
    v19 = v16 + 16 * v15;
    v20 = *(std::__shared_weak_count **)(v19 + 8);
    *(_QWORD *)(v19 + 8) = v8;
    if (v20)
    {
      v21 = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    v23 = (v13[1] - *v13) >> 4;
    v24 = v13[5];
    v25 = v13[4] + 1;
    if (v25 >= v23)
      v26 = (v13[1] - *v13) >> 4;
    else
      v26 = 0;
    v13[4] = v25 - v26;
    if (v24 == v23)
    {
      v27 = v13[3] + 1;
      if (v27 < v23)
        v23 = 0;
      v13[3] = v27 - v23;
      v28 = (std::mutex **)v73;
      if (!(_QWORD)v73)
      {
LABEL_37:
        v38 = (uint64_t **)a1[9];
        v73 = 0uLL;
        v39 = (std::__shared_weak_count *)a1[5];
        if (v39)
        {
          v40 = std::__shared_weak_count::lock(v39);
          if (v40)
          {
            v41 = v40;
            v42 = a1[4];
            v43 = (unint64_t *)&v40->__shared_weak_owners_;
            do
              v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
            *(_QWORD *)&v73 = v42;
            *((_QWORD *)&v73 + 1) = v40;
            v45 = (unint64_t *)&v40->__shared_owners_;
            do
              v46 = __ldaxr(v45);
            while (__stlxr(v46 - 1, v45));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
              std::__shared_weak_count::__release_weak(v41);
            }
          }
          else
          {
            v73 = 0uLL;
          }
        }
        v47 = (char *)operator new(0x38uLL);
        *(_QWORD *)v47 = &off_24EC4B940;
        *(_OWORD *)(v47 + 8) = v73;
        v73 = 0uLL;
        *((_QWORD *)v47 + 3) = v11;
        *((_QWORD *)v47 + 4) = v8;
        v74 = 0;
        v75 = 0;
        *((_QWORD *)v47 + 5) = v67;
        *((_QWORD *)v47 + 6) = v68;
        v76[0] = 0;
        v76[1] = 0;
        v78 = (std::string *)v47;
        sub_2245022E4(*v38, (uint64_t)&v77);
        v48 = v78;
        if (v78 == &v77)
        {
          v49 = 4;
          v48 = &v77;
        }
        else
        {
          if (!v78)
            goto LABEL_51;
          v49 = 5;
        }
        (*(void (**)(void))(v48->__r_.__value_.__r.__words[0] + 8 * v49))();
LABEL_51:
        if (v72)
        {
          v50 = &v72->__shared_owners_;
          do
            v51 = __ldaxr((unint64_t *)v50);
          while (__stlxr(v51 - 1, (unint64_t *)v50));
          if (!v51)
          {
            ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
            std::__shared_weak_count::__release_weak(v72);
          }
        }
        if (v69)
        {
          v52 = (unint64_t *)&v69->__shared_owners_;
          do
            v53 = __ldaxr(v52);
          while (__stlxr(v53 - 1, v52));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
            std::__shared_weak_count::__release_weak(v69);
          }
        }
        return;
      }
    }
    else
    {
      v13[5] = v24 + 1;
      v28 = (std::mutex **)v73;
      if (!(_QWORD)v73)
        goto LABEL_37;
    }
    std::mutex::unlock(*v28);
    MEMORY[0x227684CE8](v28, 0x20C4093837F09);
    goto LABEL_37;
  }
  v29 = (uint64_t **)a1[9];
  v66 = 0uLL;
  v30 = (std::__shared_weak_count *)a1[5];
  if (v30)
  {
    v31 = std::__shared_weak_count::lock(v30);
    if (v31)
    {
      v32 = v31;
      v33 = a1[4];
      v34 = (unint64_t *)&v31->__shared_weak_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
      *(_QWORD *)&v66 = v33;
      *((_QWORD *)&v66 + 1) = v31;
      v36 = (unint64_t *)&v31->__shared_owners_;
      do
        v37 = __ldaxr(v36);
      while (__stlxr(v37 - 1, v36));
      if (!v37)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
    else
    {
      v66 = 0uLL;
    }
  }
  v54 = operator new(0x20uLL);
  v54[1] = 0;
  v54[2] = 0;
  *v54 = &off_24EC45A18;
  v54[3] = *a3;
  *a3 = 0;
  v55 = (char *)operator new(0x30uLL);
  *(_QWORD *)v55 = &off_24EC4B9C0;
  *(_OWORD *)(v55 + 8) = v66;
  *((_QWORD *)v55 + 4) = v54 + 3;
  *((_QWORD *)v55 + 5) = v54;
  v75 = (__int128 *)v55;
  sub_2245022E4(*v29, (uint64_t)&v73);
  v57 = v75;
  if (v75 == &v73)
  {
    v58 = 4;
    v57 = &v73;
  }
  else
  {
    if (!v75)
      return;
    v58 = 5;
  }
  (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)v57 + 8 * v58))(v57, v56);
}

void sub_22359C350(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::runtime_error a18, std::exception_ptr a19, uint64_t a20,uint64_t a21,std::exception_ptr a22)
{
  std::__assoc_sub_state **v22;
  uint64_t v23;
  std::__assoc_sub_state *v24;
  std::exception_ptr v25;

  if (a2)
  {
    __cxa_begin_catch(exception_object);
    std::current_exception();
    __cxa_end_catch();
    v24 = *v22;
    if (*v22)
    {
      std::exception_ptr::exception_ptr(&a22, &a19);
      v25.__ptr_ = &a22;
      std::__assoc_sub_state::set_exception(v24, v25);
      std::exception_ptr::~exception_ptr(&a22);
      std::exception_ptr::~exception_ptr(&a19);
      std::runtime_error::~runtime_error(&a18);
      if (*(char *)(v23 - 81) < 0)
        operator delete(*(void **)(v23 - 104));
      JUMPOUT(0x22359C264);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(exception_object);
}

void sub_22359C3C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::runtime_error a18, std::exception_ptr a19, uint64_t a20,uint64_t a21,std::exception_ptr a22)
{
  uint64_t v22;

  std::exception_ptr::~exception_ptr(&a19);
  std::runtime_error::~runtime_error(&a18);
  if (*(char *)(v22 - 81) < 0)
  {
    operator delete(*(void **)(v22 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22359C418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,char *a26)
{
  char *v26;
  char *v28;
  uint64_t v29;

  v28 = a26;
  if (a26 == v26)
  {
    v29 = 4;
    v28 = &a23;
  }
  else
  {
    if (!a26)
    {
      sub_22334FD8C((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v29 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v28 + 8 * v29))();
  sub_22334FD8C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22359C46C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22359C490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  va_list va1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  va_list va2;
  uint64_t v22;
  va_list va3;

  va_start(va3, a6);
  va_start(va2, a6);
  va_start(va1, a6);
  va_start(va, a6);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v14 = va_arg(va2, _QWORD);
  v16 = va_arg(va2, _QWORD);
  v17 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v20 = va_arg(va3, _QWORD);
  v22 = va_arg(va3, _QWORD);
  v9 = *(_QWORD **)(v7 - 80);
  if (v9 == v6)
  {
    v10 = 4;
    v9 = (_QWORD *)(v7 - 104);
  }
  else
  {
    if (!v9)
      goto LABEL_6;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_6:
  sub_22332429C((uint64_t *)va3);
  sub_223167354((uint64_t)va2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22359C530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v7;
  va_list va;
  uint64_t v9;
  va_list va1;

  va_start(va1, a6);
  va_start(va, a6);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22359C54C(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_22359C5C0(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC4BA40;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B380;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_22359C6F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22359C764(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4BAC0;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_22359C874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_22359C8D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4BB40;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22359CAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_22359CBB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4BBC0;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_22359CDD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22359CE98(uint64_t a1)
{
  return sub_22359D008(a1 - 16);
}

void sub_22359CEA0(uint64_t a1)
{
  sub_22359D008(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359CEC8(uint64_t a1, uint64_t a2)
{
  return sub_22359C5C0((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22359CED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22359C8D8((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_22359CED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22359CBB8((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_22359CEE0(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_22359CEE8(uint64_t a1)
{
  return sub_22359D008(a1 - 24);
}

void sub_22359CEF0(uint64_t a1)
{
  sub_22359D008(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359CF18(uint64_t a1)
{
  return sub_22359C764((_QWORD *)(a1 - 24));
}

uint64_t sub_22359CF20(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_22359CF28(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22359CF90(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22359CFF8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_22359D008(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4B600;
  *(_QWORD *)(a1 + 16) = &unk_24EC4B678;
  *(_QWORD *)(a1 + 24) = &unk_24EC4B6B8;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

void sub_22359D208(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4B7F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_22359D218(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4B7F0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359D250(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4B840;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_22359D294(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4B840;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359D2E8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4B840;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_22359D358(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4B840;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_22359D3A8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_22359D3E4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_22359D41C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_22359D740((uint64_t *)(v8 + 88), v5, &v20);
      if (v21)
        sub_22353C4D0(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_22359D5E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_22353C4D0(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359D6C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27Meshing"
                     "NodeMeshUpdateResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS"
                                "5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EU"
                                "lT_T0_E_EEvSB_SC_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359D734()
{
  return &unk_24EC4B8A0;
}

uint64_t sub_22359D740(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  BOOL v8;
  uint64_t v9;
  uint64_t i;
  unsigned __int8 v11;
  _QWORD *v12;
  _QWORD *j;
  uint64_t v14;
  uint64_t v15;
  std::exception_ptr v17;
  _QWORD v18[55];

  v6 = *a1;
  if (!v6)
  {
    sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    v7 = atomic_load((unsigned __int8 *)&qword_255795680);
    if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
    {
      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
      __cxa_guard_release(&qword_255795680);
    }
    if (byte_255795670)
      v8 = byte_255795678 == 0;
    else
      v8 = 0;
    if (!v8)
    {
      v9 = qword_255795648;
      for (i = qword_255795650; v9 != i; v9 += 16)
        (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v9)(*(_QWORD *)(v9 + 8), "callable_", 9, "", 0);
    }
    v11 = atomic_load((unsigned __int8 *)&qword_255795680);
    if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
    {
      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
      __cxa_guard_release(&qword_255795680);
    }
    if (!byte_255795670)
      abort();
    qword_255795660(*(_QWORD *)algn_255795668, "callable_", 9, "", 0);
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v18, v6, a2);
  v12 = a1 + 1;
  for (j = (_QWORD *)a1[2]; j != v12; j = (_QWORD *)j[1])
    (*(void (**)(_QWORD *, _QWORD *))(j[2] + 16))(j + 2, v18);
  if (*((_BYTE *)a3 + 8))
  {
    v14 = *a3;
    if (!v14)
      sub_2233236D4(3u);
    std::mutex::lock((std::mutex *)(v14 + 24));
    if ((*(_BYTE *)(v14 + 136) & 1) != 0
      || (v17.__ptr_ = 0, v15 = *(_QWORD *)(v14 + 16), std::exception_ptr::~exception_ptr(&v17), v15))
    {
      sub_2233236D4(2u);
    }
    sub_223299E34(v14 + 144, (uint64_t)v18);
    *(_DWORD *)(v14 + 136) |= 5u;
    std::condition_variable::notify_all((std::condition_variable *)(v14 + 88));
    std::mutex::unlock((std::mutex *)(v14 + 24));
  }
  return sub_2232954B0((uint64_t)v18);
}

void sub_22359D9C0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11, uint64_t a12, int a13, __int16 a14, char a15, unsigned __int8 a16, char a17)
{
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  sub_2232954B0((uint64_t)&a17);
  if (a2 == 1)
  {
    v19 = (uint64_t *)__cxa_begin_catch(a1);
    v20 = *v19;
    a10 = *(_QWORD *)(*(_QWORD *)(*v19 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a9 = (*(uint64_t (**)(void))(v20 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", (const char *)&a10, "\n", "message: ", (const char *)&a9, "\n");
    if ((a16 & 0x80u) == 0)
      v21 = &a11;
    else
      v21 = a11;
    if ((a16 & 0x80u) == 0)
      v22 = a16;
    else
      v22 = a12;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v21, v22, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_22359DA9C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x22359DABCLL);
}

_QWORD *sub_22359DAC8(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4B8C0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22359DB00(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4B8C0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359DB48(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4B8C0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_22359DB98(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4B8C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_22359DBC8(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22359DBD8(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22359DC04(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_22359D740((uint64_t *)(v5 + 88), a1 + 24, &v8);
        if (v9)
          sub_22353C4D0(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22359DCAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_22353C4D0(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359DCF8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27Meshing"
                     "NodeMeshUpdateResultEvS7_Lb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS"
                                "5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359DD64()
{
  return &unk_24EC4B920;
}

_QWORD *sub_22359DD70(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4B940;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_22359DDF8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4B940;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_22359DE90(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4B940;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_22359DF20(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4B940;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_22359DF90(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_22359E010(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_22359E08C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_22359D740(v13, v5, (uint64_t *)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_22353C4D0((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_22359E368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_22359E394(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x22359E1A0);
    JUMPOUT(0x22359E170);
  }
  sub_2233236D4(3u);
}

void sub_22359E3F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_22359E41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_22353C4D0(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22359E508(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27Meshing"
                     "NodeMeshUpdateResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EE"
                     "EUlT_T0_E_EEvSB_SF_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS"
                                "5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6"
                                "_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359E574()
{
  return &unk_24EC4B9A0;
}

_QWORD *sub_22359E580(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4B9C0;
  v2 = (std::__shared_weak_count *)a1[5];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_22359E5FC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4B9C0;
  v2 = (std::__shared_weak_count *)a1[5];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  std::__shared_weak_count::__release_weak(v5);
LABEL_9:
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359E688(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4B9C0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[5];
  result[4] = a1[4];
  result[5] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_22359E6F8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4B9C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[5];
  a2[4] = result[4];
  a2[5] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_22359E748(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
}

void sub_22359E7B8(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (std::__shared_weak_count *)__p[5];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (std::__shared_weak_count *)__p[2];
      if (!v5)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = (std::__shared_weak_count *)__p[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  operator delete(__p);
}

void sub_22359E828(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[4];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_22359D740((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t *)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_22353C4D0((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_22359E938(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_22359E9B0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x22359E9E4);
  JUMPOUT(0x22359EA14);
}

uint64_t sub_22359EA1C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27Meshing"
                     "NodeMeshUpdateResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS"
                                "5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359EA88()
{
  return &unk_24EC4BA20;
}

_QWORD *sub_22359EA94(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4BA40;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_22359EAEC(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4BA40;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359EB54(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC4BA40;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B380;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_22359EBCC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_22359EBEC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC4BA40;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B380;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_22359EC54(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_22359EC6C(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_22359ECBC(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B380;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_22359ED08(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B380;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22359EDBC(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359EDF8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingN"
                     "odeMeshUpdateResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5"
                                "_27MeshingNodeMeshUpdateResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359EE64()
{
  return &unk_24EC4BAA0;
}

_QWORD *sub_22359EE70(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4BAC0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22359EEA8(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4BAC0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359EEF0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4BAC0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_22359EF40(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4BAC0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_22359EF70(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22359EF80(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22359EFAC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22359F040(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359F07C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingN"
                     "odeMeshUpdateResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5"
                                "_27MeshingNodeMeshUpdateResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359F0E8()
{
  return &unk_24EC4BB20;
}

_QWORD *sub_22359F0F4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4BB40;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22359F12C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4BB40;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359F174(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4BB40;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22359F1CC(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4BB40;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22359F204(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22359F214(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22359F240(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_22359F3BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359F42C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27Meshing"
                     "NodeMeshUpdateResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS"
                                "5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359F498()
{
  return &unk_24EC4BBA0;
}

_QWORD *sub_22359F4A4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4BBC0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22359F4DC(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4BBC0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359F524(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4BBC0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_22359F57C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4BBC0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_22359F5B4(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_22359F5C4(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_22359F5F0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22359F6A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22359F6F4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27Meshing"
                     "NodeMeshUpdateResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS"
                                "5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27SpatialMappingRemeshRequestENS5_27MeshingNodeMeshUpdateResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22359F760()
{
  return &unk_24EC4BC20;
}

void sub_22359F770(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22359F794(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_22359F7AC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27SpatialMappingRemeshRe"
                     "questENS7_27MeshingNodeMeshUpdateResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27SpatialMapp"
                                "ingRemeshRequestENS7_27MeshingNodeMeshUpdateResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27SpatialMappingRemeshRequestENS7_27MeshingNodeMeshUpdateResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27SpatialMappingRemeshRequestENS7_27MeshingNodeMeshUpdateResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_22359F81C(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22359F848(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_22359F884@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4BC90;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_22359F8EC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22359F97C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22359F990(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_22359FA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22359FA34(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22359FAF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22359FB0C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_22359FBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22359FBE4(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_22359FC88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22359FCA0(uint64_t a1)
{
  sub_2235A17F4(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22359FCC4(_QWORD *a1, _QWORD *a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  std::__shared_weak_count_vtbl *v6;
  uint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *p_shared_weak_owners;
  unint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  std::__shared_weak_count_vtbl **v23;
  unint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  std::mutex **v34;
  uint64_t **v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  __int128 *v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t v55;
  std::__shared_weak_count *v56[2];
  _QWORD v57[3];
  _QWORD *v58;
  __int128 v59;
  uint64_t v60;
  __int128 *v61;
  _BYTE v62[24];
  _BYTE *v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v4 = (std::__shared_weak_count *)operator new(0x38uLL);
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__shared_weak_owners_ = 0;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4BEF8;
    v6 = (std::__shared_weak_count_vtbl *)&v4[1];
    v7 = a2[3];
    if (v7)
    {
      if ((_QWORD *)v7 == a2)
      {
        v4[2].__vftable = v6;
        (*(void (**)(_QWORD *, std::__shared_weak_count_vtbl *))(*a2 + 24))(a2, v6);
        goto LABEL_18;
      }
      v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    }
    v4[2].__vftable = (std::__shared_weak_count_vtbl *)v7;
LABEL_18:
    p_shared_weak_owners = (unint64_t *)&v4->__shared_weak_owners_;
    do
      v18 = __ldxr(p_shared_weak_owners);
    while (__stxr(v18 + 1, p_shared_weak_owners));
    v19 = (uint64_t *)a1[18];
    v20 = (_QWORD *)operator new();
    *v20 = v19 + 7;
    std::mutex::lock((std::mutex *)(v19 + 7));
    *(_QWORD *)&v59 = v20;
    *((_QWORD *)&v59 + 1) = v19;
    if (!*((_BYTE *)v19 + 48))
      sub_22324A974();
    v21 = v19[4];
    v22 = *v19;
    v23 = (std::__shared_weak_count_vtbl **)(*v19 + 16 * v21);
    do
      v24 = __ldxr(p_shared_owners);
    while (__stxr(v24 + 1, p_shared_owners));
    *v23 = v6;
    v25 = v22 + 16 * v21;
    v26 = *(std::__shared_weak_count **)(v25 + 8);
    *(_QWORD *)(v25 + 8) = v4;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    v29 = (v19[1] - *v19) >> 4;
    v30 = v19[5];
    v31 = v19[4] + 1;
    if (v31 >= v29)
      v32 = (v19[1] - *v19) >> 4;
    else
      v32 = 0;
    v19[4] = v31 - v32;
    if (v30 == v29)
    {
      v33 = v19[3] + 1;
      if (v33 < v29)
        v29 = 0;
      v19[3] = v33 - v29;
      v34 = (std::mutex **)v59;
      if (!(_QWORD)v59)
      {
LABEL_38:
        v35 = (uint64_t **)a1[9];
        v59 = 0uLL;
        v36 = (std::__shared_weak_count *)a1[5];
        if (v36)
        {
          v37 = std::__shared_weak_count::lock(v36);
          if (v37)
          {
            v38 = v37;
            v39 = a1[4];
            v40 = (unint64_t *)&v37->__shared_weak_owners_;
            do
              v41 = __ldxr(v40);
            while (__stxr(v41 + 1, v40));
            *(_QWORD *)&v59 = v39;
            *((_QWORD *)&v59 + 1) = v37;
            v42 = (unint64_t *)&v37->__shared_owners_;
            do
              v43 = __ldaxr(v42);
            while (__stlxr(v43 - 1, v42));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v38);
            }
          }
          else
          {
            v59 = 0uLL;
          }
        }
        v44 = (char *)operator new(0x30uLL);
        *(_QWORD *)v44 = &off_24EC4BF48;
        *(_OWORD *)(v44 + 8) = v59;
        v59 = 0uLL;
        *((_QWORD *)v44 + 3) = v6;
        *((_QWORD *)v44 + 4) = v4;
        v60 = 0;
        v61 = 0;
        v63 = v44;
        sub_2245022E4(*v35, (uint64_t)v62);
        v45 = v63;
        if (v63 == v62)
        {
          v46 = 4;
          v45 = v62;
        }
        else
        {
          if (!v63)
            goto LABEL_52;
          v46 = 5;
        }
        (*(void (**)(_QWORD *))(*v45 + 8 * v46))(v45);
LABEL_52:
        if (v4)
        {
          v47 = (unint64_t *)&v4->__shared_owners_;
          do
            v48 = __ldaxr(v47);
          while (__stlxr(v48 - 1, v47));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
            std::__shared_weak_count::__release_weak(v4);
          }
        }
        return;
      }
    }
    else
    {
      v19[5] = v30 + 1;
      v34 = (std::mutex **)v59;
      if (!(_QWORD)v59)
        goto LABEL_38;
    }
    std::mutex::unlock(*v34);
    MEMORY[0x227684CE8](v34, 0x20C4093837F09);
    goto LABEL_38;
  }
  v8 = (uint64_t **)a1[9];
  *(_OWORD *)v56 = 0uLL;
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    if (v10)
    {
      v11 = v10;
      v12 = (std::__shared_weak_count *)a1[4];
      v13 = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v56[0] = v12;
      v56[1] = v10;
      v15 = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      *(_OWORD *)v56 = 0uLL;
    }
  }
  v49 = v57;
  v50 = a2[3];
  if (!v50)
    goto LABEL_61;
  if ((_QWORD *)v50 != a2)
  {
    v50 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 16))(v50);
LABEL_61:
    v58 = (_QWORD *)v50;
    goto LABEL_63;
  }
  v58 = v57;
  (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v57);
LABEL_63:
  v61 = 0;
  v51 = (char *)operator new(0x38uLL);
  v52 = (__int128 *)v51;
  *(_QWORD *)v51 = &off_24EC4BFC8;
  *(_OWORD *)(v51 + 8) = *(_OWORD *)v56;
  if (v58)
  {
    if (v58 == v57)
    {
      *((_QWORD *)v51 + 6) = v51 + 24;
      (*(void (**)(_QWORD *))(v57[0] + 24))(v57);
    }
    else
    {
      *((_QWORD *)v51 + 6) = v58;
      v58 = 0;
    }
  }
  else
  {
    *((_QWORD *)v51 + 6) = 0;
  }
  v61 = v52;
  sub_2245022E4(*v8, (uint64_t)&v59);
  v53 = v61;
  if (v61 == &v59)
  {
    v54 = 4;
    v53 = &v59;
    goto LABEL_72;
  }
  if (v61)
  {
    v54 = 5;
LABEL_72:
    (*(void (**)(void))(*(_QWORD *)v53 + 8 * v54))();
  }
  if (v58 == v57)
  {
    v55 = 4;
  }
  else
  {
    if (!v58)
      return;
    v55 = 5;
    v49 = v58;
  }
  (*(void (**)(_QWORD *))(*v49 + 8 * v55))(v49);
}

void sub_2235A01D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2235A0268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;

  v20 = *(_QWORD **)(v18 - 64);
  if (v20 == v17)
  {
    v21 = 4;
    v20 = (_QWORD *)(v18 - 88);
  }
  else
  {
    if (!v20)
      goto LABEL_6;
    v21 = 5;
  }
  (*(void (**)(void))(*v20 + 8 * v21))();
LABEL_6:
  sub_223322894((uint64_t)&a17);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A02B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::mutex **a17)
{
  std::__shared_weak_count *v17;

  sub_223322848(&a17);
  std::__shared_weak_count::__release_weak(v17);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A02DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  uint64_t v10;

  MEMORY[0x227684CE8](v10, 0x20C4093837F09);
  std::__shared_weak_count::__release_weak(v9);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A0310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;

  std::__shared_weak_count::__release_weak(v9);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A0330(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235A0340(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235A034C(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_2235A035C(_QWORD *a1, _QWORD *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  std::__shared_weak_count_vtbl *v11;
  uint64_t v12;
  uint64_t **v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_weak_owners;
  unint64_t v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  std::__shared_weak_count_vtbl **v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  std::mutex **v41;
  uint64_t **v42;
  std::__shared_weak_count *v43;
  std::__shared_weak_count *v44;
  std::__shared_weak_count *v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  char *v51;
  std::string *v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  std::__shared_weak_count *v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  __int128 *v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  __int128 *v73;
  std::string *v74;
  std::runtime_error *exception;
  std::runtime_error *v76;
  _QWORD *v77;
  _QWORD *v78;
  std::__shared_weak_count *v79;
  std::runtime_error v80;
  std::__shared_weak_count *v81;
  std::__shared_weak_count *v82;
  std::__shared_weak_count *v83[2];
  _QWORD v84[3];
  _QWORD *v85;
  _QWORD *v86;
  std::__shared_weak_count *v87;
  __int128 v88;
  _QWORD *v89;
  __int128 *v90;
  _QWORD v91[3];
  std::string v92;
  std::string *v93;
  uint64_t v94;

  v94 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v88 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v88 + 1) = 45;
    v72 = (_QWORD *)a1[6];
    v71 = a1 + 6;
    v70 = v72;
    v73 = (__int128 *)*((unsigned __int8 *)v71 + 23);
    if ((char)v73 < 0)
      v73 = (__int128 *)v71[1];
    else
      v70 = v71;
    v89 = v70;
    v90 = v73;
    sub_2231A9820((uint64_t)&v88, (uint64_t)v91, 0, 0, &v92);
    if ((v92.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v74 = &v92;
    else
      v74 = (std::string *)v92.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v80, (const char *)v74);
    v80.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v76 = std::runtime_error::runtime_error(exception, &v80);
    v76->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v76, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v13 = (uint64_t **)a1[9];
    v83[0] = 0;
    v83[1] = 0;
    v14 = (std::__shared_weak_count *)a1[5];
    if (!v14)
      goto LABEL_20;
    v15 = std::__shared_weak_count::lock(v14);
    if (v15)
    {
      v16 = v15;
      v17 = (std::__shared_weak_count *)a1[4];
      p_shared_weak_owners = (unint64_t *)&v15->__shared_weak_owners_;
      do
        v19 = __ldxr(p_shared_weak_owners);
      while (__stxr(v19 + 1, p_shared_weak_owners));
      v83[0] = v17;
      v83[1] = v15;
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (v21)
      {
LABEL_20:
        v22 = v84;
        v23 = a2[3];
        if (!v23)
          goto LABEL_23;
        goto LABEL_21;
      }
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v16);
      v22 = v84;
      v23 = a2[3];
      if (!v23)
        goto LABEL_23;
    }
    else
    {
      v83[0] = 0;
      v83[1] = 0;
      v22 = v84;
      v23 = a2[3];
      if (!v23)
        goto LABEL_23;
    }
LABEL_21:
    if ((_QWORD *)v23 == a2)
    {
      v85 = v84;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v84);
LABEL_72:
      v59 = (std::__shared_weak_count *)operator new(0x20uLL);
      v59->__shared_owners_ = 0;
      v59->__shared_weak_owners_ = 0;
      v59->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46170;
      v59[1].__vftable = *a3;
      v60 = &v59[1].__vftable;
      *a3 = 0;
      v86 = &v59[1].__vftable;
      v87 = v59;
      v90 = 0;
      v61 = (char *)operator new(0x48uLL);
      v62 = v61;
      *(_QWORD *)v61 = &off_24EC4C0C8;
      *(_OWORD *)(v61 + 8) = *(_OWORD *)v83;
      v83[0] = 0;
      v83[1] = 0;
      if (v85)
      {
        if (v85 == v84)
        {
          *((_QWORD *)v61 + 6) = v61 + 24;
          (*(void (**)(_QWORD *))(v84[0] + 24))(v84);
          v60 = v86;
          v59 = v87;
        }
        else
        {
          *((_QWORD *)v61 + 6) = v85;
          v85 = 0;
        }
      }
      else
      {
        *((_QWORD *)v61 + 6) = 0;
      }
      *((_QWORD *)v62 + 7) = v60;
      *((_QWORD *)v62 + 8) = v59;
      v86 = 0;
      v87 = 0;
      v90 = (__int128 *)v62;
      sub_2245022E4(*v13, (uint64_t)&v88);
      v63 = v90;
      if (v90 == &v88)
      {
        v64 = 4;
        v63 = &v88;
      }
      else
      {
        if (!v90)
        {
LABEL_82:
          v65 = v87;
          if (!v87)
            goto LABEL_86;
          v66 = (unint64_t *)&v87->__shared_owners_;
          do
            v67 = __ldaxr(v66);
          while (__stlxr(v67 - 1, v66));
          if (!v67)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
            v68 = v85;
            if (v85 != v84)
              goto LABEL_87;
          }
          else
          {
LABEL_86:
            v68 = v85;
            if (v85 != v84)
            {
LABEL_87:
              if (!v68)
                goto LABEL_92;
              v69 = 5;
              v22 = v68;
LABEL_91:
              (*(void (**)(_QWORD *))(*v22 + 8 * v69))(v22);
LABEL_92:
              v58 = v83[1];
              if (!v83[1])
                return;
              goto LABEL_93;
            }
          }
          v69 = 4;
          goto LABEL_91;
        }
        v64 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v63 + 8 * v64))();
      goto LABEL_82;
    }
    v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 16))(v23);
LABEL_23:
    v85 = (_QWORD *)v23;
    goto LABEL_72;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC46170;
  v6[1].__vftable = *a3;
  v79 = v6;
  v77 = &v6[1].__vftable;
  v78 = &v6->__vftable;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = (std::__shared_weak_count *)operator new(0x38uLL);
  v9->__shared_owners_ = 0;
  v10 = (unint64_t *)&v9->__shared_owners_;
  v9->__shared_weak_owners_ = 0;
  v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4BEF8;
  v11 = (std::__shared_weak_count_vtbl *)&v9[1];
  v12 = a2[3];
  if (v12)
  {
    if ((_QWORD *)v12 == a2)
    {
      v9[2].__vftable = v11;
      (*(void (**)(_QWORD *, std::__shared_weak_count_vtbl *))(*a2 + 24))(a2, v11);
      goto LABEL_25;
    }
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
  }
  v9[2].__vftable = (std::__shared_weak_count_vtbl *)v12;
LABEL_25:
  v81 = v9 + 1;
  v82 = v9;
  v24 = (unint64_t *)&v9->__shared_weak_owners_;
  do
    v25 = __ldxr(v24);
  while (__stxr(v25 + 1, v24));
  v26 = (uint64_t *)a1[18];
  v27 = (_QWORD *)operator new();
  *v27 = v26 + 7;
  std::mutex::lock((std::mutex *)(v26 + 7));
  *(_QWORD *)&v88 = v27;
  *((_QWORD *)&v88 + 1) = v26;
  if (!*((_BYTE *)v26 + 48))
    sub_22324A974();
  v28 = v26[4];
  v29 = *v26;
  v30 = (std::__shared_weak_count_vtbl **)(*v26 + 16 * v28);
  do
    v31 = __ldxr(v10);
  while (__stxr(v31 + 1, v10));
  *v30 = v11;
  v32 = v29 + 16 * v28;
  v33 = *(std::__shared_weak_count **)(v32 + 8);
  *(_QWORD *)(v32 + 8) = v9;
  if (v33)
  {
    v34 = (unint64_t *)&v33->__shared_owners_;
    do
      v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  v36 = (v26[1] - *v26) >> 4;
  v37 = v26[5];
  v38 = v26[4] + 1;
  if (v38 >= v36)
    v39 = (v26[1] - *v26) >> 4;
  else
    v39 = 0;
  v26[4] = v38 - v39;
  if (v37 != v36)
  {
    v26[5] = v37 + 1;
    v41 = (std::mutex **)v88;
    if (!(_QWORD)v88)
      goto LABEL_45;
    goto LABEL_44;
  }
  v40 = v26[3] + 1;
  if (v40 < v36)
    v36 = 0;
  v26[3] = v40 - v36;
  v41 = (std::mutex **)v88;
  if ((_QWORD)v88)
  {
LABEL_44:
    std::mutex::unlock(*v41);
    MEMORY[0x227684CE8](v41, 0x20C4093837F09);
  }
LABEL_45:
  v42 = (uint64_t **)a1[9];
  v88 = 0uLL;
  v43 = (std::__shared_weak_count *)a1[5];
  if (v43)
  {
    v44 = std::__shared_weak_count::lock(v43);
    if (v44)
    {
      v45 = v44;
      v46 = a1[4];
      v47 = (unint64_t *)&v44->__shared_weak_owners_;
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 1, v47));
      *(_QWORD *)&v88 = v46;
      *((_QWORD *)&v88 + 1) = v44;
      v49 = (unint64_t *)&v44->__shared_owners_;
      do
        v50 = __ldaxr(v49);
      while (__stlxr(v50 - 1, v49));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
        std::__shared_weak_count::__release_weak(v45);
      }
    }
    else
    {
      v88 = 0uLL;
    }
  }
  v51 = (char *)operator new(0x38uLL);
  *(_QWORD *)v51 = &off_24EC4C048;
  *(_OWORD *)(v51 + 8) = v88;
  v88 = 0uLL;
  *((_QWORD *)v51 + 3) = v11;
  *((_QWORD *)v51 + 4) = v9;
  v89 = 0;
  v90 = 0;
  *((_QWORD *)v51 + 5) = v77;
  *((_QWORD *)v51 + 6) = v78;
  v91[0] = 0;
  v91[1] = 0;
  v93 = (std::string *)v51;
  sub_2245022E4(*v42, (uint64_t)&v92);
  v52 = v93;
  if (v93 == &v92)
  {
    v53 = 4;
    v52 = &v92;
    goto LABEL_58;
  }
  if (v93)
  {
    v53 = 5;
LABEL_58:
    (*(void (**)(void))(v52->__r_.__value_.__r.__words[0] + 8 * v53))();
  }
  if (v82)
  {
    v54 = &v82->__shared_owners_;
    do
      v55 = __ldaxr((unint64_t *)v54);
    while (__stlxr(v55 - 1, (unint64_t *)v54));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
      std::__shared_weak_count::__release_weak(v82);
    }
  }
  if (v79)
  {
    v56 = (unint64_t *)&v79->__shared_owners_;
    do
      v57 = __ldaxr(v56);
    while (__stlxr(v57 - 1, v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
      v58 = v79;
LABEL_93:
      std::__shared_weak_count::__release_weak(v58);
    }
  }
}

void sub_2235A0AD0(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2235A0AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235A0AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::exception_ptr a26)
{
  std::__assoc_sub_state **v26;
  uint64_t v27;
  std::__assoc_sub_state *v28;
  std::exception_ptr v29;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v28 = *v26;
    if (*v26)
    {
      std::exception_ptr::exception_ptr(&a26, &a15);
      v29.__ptr_ = &a26;
      std::__assoc_sub_state::set_exception(v28, v29);
      std::exception_ptr::~exception_ptr(&a26);
      std::exception_ptr::~exception_ptr(&a15);
      std::runtime_error::~runtime_error(&a14);
      if (*(char *)(v27 - 81) < 0)
        operator delete(*(void **)(v27 - 104));
      JUMPOUT(0x2235A09B8);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_2235A0B5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::exception_ptr a26)
{
  uint64_t v26;

  std::exception_ptr::~exception_ptr(&a15);
  std::runtime_error::~runtime_error(&a14);
  if (*(char *)(v26 - 81) < 0)
  {
    operator delete(*(void **)(v26 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235A0BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,char *a30)
{
  char *v30;
  char *v32;
  uint64_t v33;

  v32 = a30;
  if (a30 == v30)
  {
    v33 = 4;
    v32 = &a27;
  }
  else
  {
    if (!a30)
    {
      sub_2235A26F4(&a19);
      _Unwind_Resume(a1);
    }
    v33 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v32 + 8 * v33))();
  sub_2235A26F4(&a19);
  _Unwind_Resume(a1);
}

void sub_2235A0C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24)
{
  _QWORD *v24;
  uint64_t v26;

  if (a24 == v24)
  {
    v26 = 4;
  }
  else
  {
    if (!a24)
      goto LABEL_6;
    v26 = 5;
    v24 = a24;
  }
  (*(void (**)(_QWORD *))(*v24 + 8 * v26))(v24);
LABEL_6:
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2235A0C74);
}

void sub_2235A0C48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  std::__shared_weak_count *v12;
  void *v14;

  std::__shared_weak_count::~__shared_weak_count(v12);
  operator delete(v14);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235A0C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;

  v30 = *(_QWORD **)(v28 - 80);
  if (v30 == v27)
  {
    v31 = 4;
    v30 = (_QWORD *)(v28 - 104);
  }
  else
  {
    if (!v30)
      goto LABEL_6;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_6:
  sub_22332429C(&a27);
  sub_223167354((uint64_t)&a17);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235A0D1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2235A0D38(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_2235A0DAC(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC4C148;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B3B8;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_2235A0EDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2235A0F50(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4C1C8;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_2235A1060(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2235A10C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4C248;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235A12DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235A13A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4C2C8;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235A15BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A1684(uint64_t a1)
{
  return sub_2235A17F4(a1 - 16);
}

void sub_2235A168C(uint64_t a1)
{
  sub_2235A17F4(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A16B4(uint64_t a1, uint64_t a2)
{
  return sub_2235A0DAC((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235A16BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235A10C4((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235A16C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235A13A4((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_2235A16CC(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_2235A16D4(uint64_t a1)
{
  return sub_2235A17F4(a1 - 24);
}

void sub_2235A16DC(uint64_t a1)
{
  sub_2235A17F4(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A1704(uint64_t a1)
{
  return sub_2235A0F50((_QWORD *)(a1 - 24));
}

uint64_t sub_2235A170C(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235A1714(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2235A177C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235A17E4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235A17F4(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4BD08;
  *(_QWORD *)(a1 + 16) = &unk_24EC4BD80;
  *(_QWORD *)(a1 + 24) = &unk_24EC4BDC0;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

uint64_t sub_2235A19F4(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)(a1 + 40);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(std::__shared_weak_count **)(a1 + 8);
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_2235A1A50(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4BEF8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2235A1A60(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4BEF8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235A1A90(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 24;
  result = *(_QWORD *)(a1 + 48);
  if (result == v1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

_QWORD *sub_2235A1AD0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4BF48;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235A1B14(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4BF48;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A1B68(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4BF48;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_2235A1BD8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4BF48;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_2235A1C28(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235A1C64(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235A1C9C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_2235A1FC0((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_223541448(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235A1E64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_223541448(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A1F48(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27Meshin"
                     "gNodeGlobalMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestEN"
                                "S5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_E"
                                "UlT_T0_E_EEvSB_SC_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A1FB4()
{
  return &unk_24EC4BFA8;
}

_QWORD *sub_2235A1FC0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  char *v9;
  char *v10;
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  _QWORD *result;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD *v18;
  void *__p;
  char *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v17, v6, a2);
  v7 = a1 + 1;
  for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
    (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v17);
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_223541320(*(_QWORD *)a3, (uint64_t)v17);
  }
  v9 = (char *)__p;
  if (__p)
  {
    v10 = v20;
    v11 = __p;
    if (v20 != __p)
    {
      do
      {
        v12 = (std::__shared_weak_count *)*((_QWORD *)v10 - 12);
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v14 = __ldaxr(p_shared_owners);
          while (__stlxr(v14 - 1, p_shared_owners));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        v10 -= 120;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v20 = v9;
    operator delete(v11);
  }
  result = v18;
  if (v18 == v17)
  {
    v16 = 4;
    result = v17;
  }
  else
  {
    if (!v18)
      return result;
    v16 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
}

void sub_2235A2170(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  uint64_t *v5;
  uint64_t v6;
  va_list v7;
  uint64_t v8;
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;
  va_list v13;
  va_list va2;
  uint64_t v15;
  uint64_t v16;
  va_list va3;

  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v11 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v13 = va_arg(va3, va_list);
  v15 = va_arg(va3, _QWORD);
  v16 = va_arg(va3, _QWORD);
  sub_223540AB8((uint64_t *)va3);
  if (a2 == 1)
  {
    v5 = (uint64_t *)__cxa_begin_catch(a1);
    v6 = *v5;
    v11 = *(_QWORD *)(*(_QWORD *)(*v5 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    v9 = (*(uint64_t (**)(void))(v6 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", va1, "\n", "message: ", va, "\n");
    if (v16 >= 0)
      va_copy(v7, va2);
    else
      v7 = v13;
    if (v16 >= 0)
      v8 = HIBYTE(v16);
    else
      v8 = v15;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v7, v8, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_2235A2238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2235A225C(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x2235A2264);
  sub_22316DC48(a1);
}

_QWORD *sub_2235A2274(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4BFC8;
  v2 = a1 + 3;
  v3 = (_QWORD *)a1[6];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_2235A22DC(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4BFC8;
  v2 = a1 + 3;
  v3 = (_QWORD *)a1[6];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A2354(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;

  v2 = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *v2 = &off_24EC4BFC8;
  v2[1] = v4;
  v2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[6];
  if (!v7)
    goto LABEL_7;
  if ((_QWORD *)v7 != a1 + 3)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
LABEL_7:
    v2[6] = v7;
    return v2;
  }
  v2[6] = v2 + 3;
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
  return v2;
}

void sub_2235A23F4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A2414(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t result;

  v4 = a1[1];
  v3 = a1[2];
  *a2 = &off_24EC4BFC8;
  a2[1] = v4;
  a2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = (_QWORD *)a1[6];
  if (v7)
  {
    if (v7 == a1 + 3)
    {
      a2[6] = a2 + 3;
      return (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[6] + 24))(a1[6]);
    }
    else
    {
      result = (*(uint64_t (**)(_QWORD))(*v7 + 16))(a1[6]);
      a2[6] = result;
    }
  }
  else
  {
    result = 0;
    a2[6] = 0;
  }
  return result;
}

void sub_2235A24B4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235A24CC(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 48);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
}

void sub_2235A252C(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  v2 = __p + 24;
  v3 = (char *)*((_QWORD *)__p + 6);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  operator delete(__p);
}

void sub_2235A2588(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_2235A1FC0((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_223541448(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A2630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_223541448(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A267C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27Meshin"
                     "gNodeGlobalMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestEN"
                                "S5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A26E8()
{
  return &unk_24EC4C028;
}

_QWORD *sub_2235A26F4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)a1[7];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = a1 + 2;
      v6 = (_QWORD *)a1[5];
      if (v6 != a1 + 2)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = a1 + 2;
  v6 = (_QWORD *)a1[5];
  if (v6 == a1 + 2)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[1];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

_QWORD *sub_2235A2798(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4C048;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2235A2820(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4C048;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_2235A28B8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4C048;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_2235A2948(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4C048;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235A29B8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_2235A2A38(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_2235A2AB4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_2235A1FC0(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_223541448((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235A2D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235A2DBC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x2235A2BC8);
    JUMPOUT(0x2235A2B98);
  }
  sub_2233236D4(3u);
}

void sub_2235A2E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235A2E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_223541448(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235A2F30(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27Meshin"
                     "gNodeGlobalMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_E"
                     "EEUlT_T0_E_EEvSB_SF_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestEN"
                                "S5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS"
                                "6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A2F9C()
{
  return &unk_24EC4C0A8;
}

_QWORD *sub_2235A2FA8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4C0C8;
  v2 = (std::__shared_weak_count *)a1[8];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = a1 + 3;
      v6 = (_QWORD *)a1[6];
      if (v6 != a1 + 3)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = a1 + 3;
  v6 = (_QWORD *)a1[6];
  if (v6 == a1 + 3)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_2235A3058(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4C0C8;
  v2 = (std::__shared_weak_count *)a1[8];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (_QWORD *)a1[6];
    if (v6 != a1 + 3)
      goto LABEL_6;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (_QWORD *)a1[6];
    if (v6 != a1 + 3)
    {
LABEL_6:
      if (!v6)
        goto LABEL_11;
      v7 = 5;
LABEL_10:
      (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
      v8 = (std::__shared_weak_count *)a1[2];
      if (v8)
        std::__shared_weak_count::__release_weak(v8);
      JUMPOUT(0x227684CE8);
    }
  }
  v7 = 4;
  v6 = v5;
  goto LABEL_10;
}

_QWORD *sub_2235A3118(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = operator new(0x48uLL);
  v4 = a1[1];
  v3 = a1[2];
  *v2 = &off_24EC4C0C8;
  v2[1] = v4;
  v2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[6];
  if (!v7)
    goto LABEL_7;
  if ((_QWORD *)v7 != a1 + 3)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
LABEL_7:
    v2[6] = v7;
    goto LABEL_9;
  }
  v2[6] = v2 + 3;
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
LABEL_9:
  v8 = a1[8];
  v2[7] = a1[7];
  v2[8] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return v2;
}

void sub_2235A31CC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A31EC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC4C0C8;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[6];
  if (!result)
    goto LABEL_7;
  if ((_QWORD *)result != a1 + 3)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
LABEL_7:
    a2[6] = result;
    goto LABEL_9;
  }
  a2[6] = a2 + 3;
  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[6] + 24))(a1[6]);
LABEL_9:
  v9 = a1[8];
  a2[7] = a1[7];
  a2[8] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235A3298(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235A32B0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)a1[8];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = a1 + 3;
      v6 = (_QWORD *)a1[6];
      if (v6 != a1 + 3)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = a1 + 3;
  v6 = (_QWORD *)a1[6];
  if (v6 == a1 + 3)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
}

void sub_2235A3358(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = __p + 24;
      v6 = (char *)*((_QWORD *)__p + 6);
      if (v6 != __p + 24)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = __p + 24;
  v6 = (char *)*((_QWORD *)__p + 6);
  if (v6 == __p + 24)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  operator delete(__p);
}

void sub_2235A33FC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[7];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_2235A1FC0((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_223541448((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_2235A350C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_2235A3584(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x2235A35B8);
  JUMPOUT(0x2235A35E8);
}

uint64_t sub_2235A35F0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27Meshin"
                     "gNodeGlobalMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestEN"
                                "S5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A365C()
{
  return &unk_24EC4C128;
}

_QWORD *sub_2235A3668(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4C148;
  v2 = a1[4];
  a1[3] = &off_24EC2B3B8;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235A36C0(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4C148;
  v2 = a1[4];
  a1[3] = &off_24EC2B3B8;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A3728(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC4C148;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B3B8;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_2235A37A0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A37C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC4C148;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B3B8;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_2235A3828(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235A3840(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B3B8;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235A3890(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B3B8;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235A38DC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B3B8;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A3990(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A39CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27Meshing"
                     "NodeGlobalMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS"
                                "5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A3A38()
{
  return &unk_24EC4C1A8;
}

_QWORD *sub_2235A3A44(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4C1C8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235A3A7C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4C1C8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A3AC4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4C1C8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_2235A3B14(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4C1C8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235A3B44(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235A3B54(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235A3B80(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A3C14(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A3C50(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27Meshing"
                     "NodeGlobalMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS"
                                "5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A3CBC()
{
  return &unk_24EC4C228;
}

_QWORD *sub_2235A3CC8(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4C248;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235A3D00(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4C248;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A3D48(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4C248;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235A3DA0(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4C248;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235A3DD8(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235A3DE8(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235A3E14(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_2235A3F90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A4000(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27Meshin"
                     "gNodeGlobalMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestEN"
                                "S5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A406C()
{
  return &unk_24EC4C2A8;
}

_QWORD *sub_2235A4078(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4C2C8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235A40B0(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4C2C8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A40F8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4C2C8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235A4150(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4C2C8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235A4188(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235A4198(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235A41C4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A427C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A42C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27Meshin"
                     "gNodeGlobalMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestEN"
                                "S5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng28MeshingNodeGlobalMeshRequestENS5_27MeshingNodeGlobalMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A4334()
{
  return &unk_24EC4C328;
}

void sub_2235A4344(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235A4368(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2235A4380(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng28MeshingNodeGlobalMeshR"
                     "equestENS7_27MeshingNodeGlobalMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng28MeshingNode"
                                "GlobalMeshRequestENS7_27MeshingNodeGlobalMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng28MeshingNodeGlobalMeshRequestENS7_27MeshingNodeGlobalMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng28MeshingNodeGlobalMeshRequestENS7_27MeshingNodeGlobalMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_2235A43F0(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235A441C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A4458@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4C398;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_2235A44C0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A4550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A4564(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A45F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A4608(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235A46CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A46E0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235A47A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A47B8(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_2235A485C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A4874(uint64_t a1)
{
  sub_2235A63C8(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235A4898(_QWORD *a1, _QWORD *a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  std::__shared_weak_count_vtbl *v6;
  uint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *p_shared_weak_owners;
  unint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  std::__shared_weak_count_vtbl **v23;
  unint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  std::mutex **v34;
  uint64_t **v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  __int128 *v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t v55;
  std::__shared_weak_count *v56[2];
  _QWORD v57[3];
  _QWORD *v58;
  __int128 v59;
  uint64_t v60;
  __int128 *v61;
  _BYTE v62[24];
  _BYTE *v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v4 = (std::__shared_weak_count *)operator new(0x38uLL);
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__shared_weak_owners_ = 0;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4C600;
    v6 = (std::__shared_weak_count_vtbl *)&v4[1];
    v7 = a2[3];
    if (v7)
    {
      if ((_QWORD *)v7 == a2)
      {
        v4[2].__vftable = v6;
        (*(void (**)(_QWORD *, std::__shared_weak_count_vtbl *))(*a2 + 24))(a2, v6);
        goto LABEL_18;
      }
      v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    }
    v4[2].__vftable = (std::__shared_weak_count_vtbl *)v7;
LABEL_18:
    p_shared_weak_owners = (unint64_t *)&v4->__shared_weak_owners_;
    do
      v18 = __ldxr(p_shared_weak_owners);
    while (__stxr(v18 + 1, p_shared_weak_owners));
    v19 = (uint64_t *)a1[18];
    v20 = (_QWORD *)operator new();
    *v20 = v19 + 7;
    std::mutex::lock((std::mutex *)(v19 + 7));
    *(_QWORD *)&v59 = v20;
    *((_QWORD *)&v59 + 1) = v19;
    if (!*((_BYTE *)v19 + 48))
      sub_22324A974();
    v21 = v19[4];
    v22 = *v19;
    v23 = (std::__shared_weak_count_vtbl **)(*v19 + 16 * v21);
    do
      v24 = __ldxr(p_shared_owners);
    while (__stxr(v24 + 1, p_shared_owners));
    *v23 = v6;
    v25 = v22 + 16 * v21;
    v26 = *(std::__shared_weak_count **)(v25 + 8);
    *(_QWORD *)(v25 + 8) = v4;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    v29 = (v19[1] - *v19) >> 4;
    v30 = v19[5];
    v31 = v19[4] + 1;
    if (v31 >= v29)
      v32 = (v19[1] - *v19) >> 4;
    else
      v32 = 0;
    v19[4] = v31 - v32;
    if (v30 == v29)
    {
      v33 = v19[3] + 1;
      if (v33 < v29)
        v29 = 0;
      v19[3] = v33 - v29;
      v34 = (std::mutex **)v59;
      if (!(_QWORD)v59)
      {
LABEL_38:
        v35 = (uint64_t **)a1[9];
        v59 = 0uLL;
        v36 = (std::__shared_weak_count *)a1[5];
        if (v36)
        {
          v37 = std::__shared_weak_count::lock(v36);
          if (v37)
          {
            v38 = v37;
            v39 = a1[4];
            v40 = (unint64_t *)&v37->__shared_weak_owners_;
            do
              v41 = __ldxr(v40);
            while (__stxr(v41 + 1, v40));
            *(_QWORD *)&v59 = v39;
            *((_QWORD *)&v59 + 1) = v37;
            v42 = (unint64_t *)&v37->__shared_owners_;
            do
              v43 = __ldaxr(v42);
            while (__stlxr(v43 - 1, v42));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v38);
            }
          }
          else
          {
            v59 = 0uLL;
          }
        }
        v44 = (char *)operator new(0x30uLL);
        *(_QWORD *)v44 = &off_24EC4C650;
        *(_OWORD *)(v44 + 8) = v59;
        v59 = 0uLL;
        *((_QWORD *)v44 + 3) = v6;
        *((_QWORD *)v44 + 4) = v4;
        v60 = 0;
        v61 = 0;
        v63 = v44;
        sub_2245022E4(*v35, (uint64_t)v62);
        v45 = v63;
        if (v63 == v62)
        {
          v46 = 4;
          v45 = v62;
        }
        else
        {
          if (!v63)
            goto LABEL_52;
          v46 = 5;
        }
        (*(void (**)(_QWORD *))(*v45 + 8 * v46))(v45);
LABEL_52:
        if (v4)
        {
          v47 = (unint64_t *)&v4->__shared_owners_;
          do
            v48 = __ldaxr(v47);
          while (__stlxr(v48 - 1, v47));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
            std::__shared_weak_count::__release_weak(v4);
          }
        }
        return;
      }
    }
    else
    {
      v19[5] = v30 + 1;
      v34 = (std::mutex **)v59;
      if (!(_QWORD)v59)
        goto LABEL_38;
    }
    std::mutex::unlock(*v34);
    MEMORY[0x227684CE8](v34, 0x20C4093837F09);
    goto LABEL_38;
  }
  v8 = (uint64_t **)a1[9];
  *(_OWORD *)v56 = 0uLL;
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    if (v10)
    {
      v11 = v10;
      v12 = (std::__shared_weak_count *)a1[4];
      v13 = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v56[0] = v12;
      v56[1] = v10;
      v15 = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      *(_OWORD *)v56 = 0uLL;
    }
  }
  v49 = v57;
  v50 = a2[3];
  if (!v50)
    goto LABEL_61;
  if ((_QWORD *)v50 != a2)
  {
    v50 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 16))(v50);
LABEL_61:
    v58 = (_QWORD *)v50;
    goto LABEL_63;
  }
  v58 = v57;
  (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v57);
LABEL_63:
  v61 = 0;
  v51 = (char *)operator new(0x38uLL);
  v52 = (__int128 *)v51;
  *(_QWORD *)v51 = &off_24EC4C6D0;
  *(_OWORD *)(v51 + 8) = *(_OWORD *)v56;
  if (v58)
  {
    if (v58 == v57)
    {
      *((_QWORD *)v51 + 6) = v51 + 24;
      (*(void (**)(_QWORD *))(v57[0] + 24))(v57);
    }
    else
    {
      *((_QWORD *)v51 + 6) = v58;
      v58 = 0;
    }
  }
  else
  {
    *((_QWORD *)v51 + 6) = 0;
  }
  v61 = v52;
  sub_2245022E4(*v8, (uint64_t)&v59);
  v53 = v61;
  if (v61 == &v59)
  {
    v54 = 4;
    v53 = &v59;
    goto LABEL_72;
  }
  if (v61)
  {
    v54 = 5;
LABEL_72:
    (*(void (**)(void))(*(_QWORD *)v53 + 8 * v54))();
  }
  if (v58 == v57)
  {
    v55 = 4;
  }
  else
  {
    if (!v58)
      return;
    v55 = 5;
    v49 = v58;
  }
  (*(void (**)(_QWORD *))(*v49 + 8 * v55))(v49);
}

void sub_2235A4DA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2235A4E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;

  v20 = *(_QWORD **)(v18 - 64);
  if (v20 == v17)
  {
    v21 = 4;
    v20 = (_QWORD *)(v18 - 88);
  }
  else
  {
    if (!v20)
      goto LABEL_6;
    v21 = 5;
  }
  (*(void (**)(void))(*v20 + 8 * v21))();
LABEL_6:
  sub_223322894((uint64_t)&a17);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A4E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::mutex **a17)
{
  std::__shared_weak_count *v17;

  sub_223322848(&a17);
  std::__shared_weak_count::__release_weak(v17);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A4EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  uint64_t v10;

  MEMORY[0x227684CE8](v10, 0x20C4093837F09);
  std::__shared_weak_count::__release_weak(v9);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A4EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;

  std::__shared_weak_count::__release_weak(v9);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A4F04(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235A4F14(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235A4F20(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_2235A4F30(_QWORD *a1, _QWORD *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  std::__shared_weak_count_vtbl *v11;
  uint64_t v12;
  uint64_t **v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_weak_owners;
  unint64_t v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  std::__shared_weak_count_vtbl **v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  std::mutex **v41;
  uint64_t **v42;
  std::__shared_weak_count *v43;
  std::__shared_weak_count *v44;
  std::__shared_weak_count *v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  char *v51;
  std::string *v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  std::__shared_weak_count *v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  __int128 *v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  __int128 *v73;
  std::string *v74;
  std::runtime_error *exception;
  std::runtime_error *v76;
  _QWORD *v77;
  _QWORD *v78;
  std::__shared_weak_count *v79;
  std::runtime_error v80;
  std::__shared_weak_count *v81;
  std::__shared_weak_count *v82;
  std::__shared_weak_count *v83[2];
  _QWORD v84[3];
  _QWORD *v85;
  _QWORD *v86;
  std::__shared_weak_count *v87;
  __int128 v88;
  _QWORD *v89;
  __int128 *v90;
  _QWORD v91[3];
  std::string v92;
  std::string *v93;
  uint64_t v94;

  v94 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v88 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v88 + 1) = 45;
    v72 = (_QWORD *)a1[6];
    v71 = a1 + 6;
    v70 = v72;
    v73 = (__int128 *)*((unsigned __int8 *)v71 + 23);
    if ((char)v73 < 0)
      v73 = (__int128 *)v71[1];
    else
      v70 = v71;
    v89 = v70;
    v90 = v73;
    sub_2231A9820((uint64_t)&v88, (uint64_t)v91, 0, 0, &v92);
    if ((v92.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v74 = &v92;
    else
      v74 = (std::string *)v92.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v80, (const char *)v74);
    v80.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v76 = std::runtime_error::runtime_error(exception, &v80);
    v76->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v76, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v13 = (uint64_t **)a1[9];
    v83[0] = 0;
    v83[1] = 0;
    v14 = (std::__shared_weak_count *)a1[5];
    if (!v14)
      goto LABEL_20;
    v15 = std::__shared_weak_count::lock(v14);
    if (v15)
    {
      v16 = v15;
      v17 = (std::__shared_weak_count *)a1[4];
      p_shared_weak_owners = (unint64_t *)&v15->__shared_weak_owners_;
      do
        v19 = __ldxr(p_shared_weak_owners);
      while (__stxr(v19 + 1, p_shared_weak_owners));
      v83[0] = v17;
      v83[1] = v15;
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (v21)
      {
LABEL_20:
        v22 = v84;
        v23 = a2[3];
        if (!v23)
          goto LABEL_23;
        goto LABEL_21;
      }
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v16);
      v22 = v84;
      v23 = a2[3];
      if (!v23)
        goto LABEL_23;
    }
    else
    {
      v83[0] = 0;
      v83[1] = 0;
      v22 = v84;
      v23 = a2[3];
      if (!v23)
        goto LABEL_23;
    }
LABEL_21:
    if ((_QWORD *)v23 == a2)
    {
      v85 = v84;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v84);
LABEL_72:
      v59 = (std::__shared_weak_count *)operator new(0x20uLL);
      v59->__shared_owners_ = 0;
      v59->__shared_weak_owners_ = 0;
      v59->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC468C8;
      v59[1].__vftable = *a3;
      v60 = &v59[1].__vftable;
      *a3 = 0;
      v86 = &v59[1].__vftable;
      v87 = v59;
      v90 = 0;
      v61 = (char *)operator new(0x48uLL);
      v62 = v61;
      *(_QWORD *)v61 = &off_24EC4C7D0;
      *(_OWORD *)(v61 + 8) = *(_OWORD *)v83;
      v83[0] = 0;
      v83[1] = 0;
      if (v85)
      {
        if (v85 == v84)
        {
          *((_QWORD *)v61 + 6) = v61 + 24;
          (*(void (**)(_QWORD *))(v84[0] + 24))(v84);
          v60 = v86;
          v59 = v87;
        }
        else
        {
          *((_QWORD *)v61 + 6) = v85;
          v85 = 0;
        }
      }
      else
      {
        *((_QWORD *)v61 + 6) = 0;
      }
      *((_QWORD *)v62 + 7) = v60;
      *((_QWORD *)v62 + 8) = v59;
      v86 = 0;
      v87 = 0;
      v90 = (__int128 *)v62;
      sub_2245022E4(*v13, (uint64_t)&v88);
      v63 = v90;
      if (v90 == &v88)
      {
        v64 = 4;
        v63 = &v88;
      }
      else
      {
        if (!v90)
        {
LABEL_82:
          v65 = v87;
          if (!v87)
            goto LABEL_86;
          v66 = (unint64_t *)&v87->__shared_owners_;
          do
            v67 = __ldaxr(v66);
          while (__stlxr(v67 - 1, v66));
          if (!v67)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
            v68 = v85;
            if (v85 != v84)
              goto LABEL_87;
          }
          else
          {
LABEL_86:
            v68 = v85;
            if (v85 != v84)
            {
LABEL_87:
              if (!v68)
                goto LABEL_92;
              v69 = 5;
              v22 = v68;
LABEL_91:
              (*(void (**)(_QWORD *))(*v22 + 8 * v69))(v22);
LABEL_92:
              v58 = v83[1];
              if (!v83[1])
                return;
              goto LABEL_93;
            }
          }
          v69 = 4;
          goto LABEL_91;
        }
        v64 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v63 + 8 * v64))();
      goto LABEL_82;
    }
    v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 16))(v23);
LABEL_23:
    v85 = (_QWORD *)v23;
    goto LABEL_72;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC468C8;
  v6[1].__vftable = *a3;
  v79 = v6;
  v77 = &v6[1].__vftable;
  v78 = &v6->__vftable;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = (std::__shared_weak_count *)operator new(0x38uLL);
  v9->__shared_owners_ = 0;
  v10 = (unint64_t *)&v9->__shared_owners_;
  v9->__shared_weak_owners_ = 0;
  v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4C600;
  v11 = (std::__shared_weak_count_vtbl *)&v9[1];
  v12 = a2[3];
  if (v12)
  {
    if ((_QWORD *)v12 == a2)
    {
      v9[2].__vftable = v11;
      (*(void (**)(_QWORD *, std::__shared_weak_count_vtbl *))(*a2 + 24))(a2, v11);
      goto LABEL_25;
    }
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
  }
  v9[2].__vftable = (std::__shared_weak_count_vtbl *)v12;
LABEL_25:
  v81 = v9 + 1;
  v82 = v9;
  v24 = (unint64_t *)&v9->__shared_weak_owners_;
  do
    v25 = __ldxr(v24);
  while (__stxr(v25 + 1, v24));
  v26 = (uint64_t *)a1[18];
  v27 = (_QWORD *)operator new();
  *v27 = v26 + 7;
  std::mutex::lock((std::mutex *)(v26 + 7));
  *(_QWORD *)&v88 = v27;
  *((_QWORD *)&v88 + 1) = v26;
  if (!*((_BYTE *)v26 + 48))
    sub_22324A974();
  v28 = v26[4];
  v29 = *v26;
  v30 = (std::__shared_weak_count_vtbl **)(*v26 + 16 * v28);
  do
    v31 = __ldxr(v10);
  while (__stxr(v31 + 1, v10));
  *v30 = v11;
  v32 = v29 + 16 * v28;
  v33 = *(std::__shared_weak_count **)(v32 + 8);
  *(_QWORD *)(v32 + 8) = v9;
  if (v33)
  {
    v34 = (unint64_t *)&v33->__shared_owners_;
    do
      v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  v36 = (v26[1] - *v26) >> 4;
  v37 = v26[5];
  v38 = v26[4] + 1;
  if (v38 >= v36)
    v39 = (v26[1] - *v26) >> 4;
  else
    v39 = 0;
  v26[4] = v38 - v39;
  if (v37 != v36)
  {
    v26[5] = v37 + 1;
    v41 = (std::mutex **)v88;
    if (!(_QWORD)v88)
      goto LABEL_45;
    goto LABEL_44;
  }
  v40 = v26[3] + 1;
  if (v40 < v36)
    v36 = 0;
  v26[3] = v40 - v36;
  v41 = (std::mutex **)v88;
  if ((_QWORD)v88)
  {
LABEL_44:
    std::mutex::unlock(*v41);
    MEMORY[0x227684CE8](v41, 0x20C4093837F09);
  }
LABEL_45:
  v42 = (uint64_t **)a1[9];
  v88 = 0uLL;
  v43 = (std::__shared_weak_count *)a1[5];
  if (v43)
  {
    v44 = std::__shared_weak_count::lock(v43);
    if (v44)
    {
      v45 = v44;
      v46 = a1[4];
      v47 = (unint64_t *)&v44->__shared_weak_owners_;
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 1, v47));
      *(_QWORD *)&v88 = v46;
      *((_QWORD *)&v88 + 1) = v44;
      v49 = (unint64_t *)&v44->__shared_owners_;
      do
        v50 = __ldaxr(v49);
      while (__stlxr(v50 - 1, v49));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
        std::__shared_weak_count::__release_weak(v45);
      }
    }
    else
    {
      v88 = 0uLL;
    }
  }
  v51 = (char *)operator new(0x38uLL);
  *(_QWORD *)v51 = &off_24EC4C750;
  *(_OWORD *)(v51 + 8) = v88;
  v88 = 0uLL;
  *((_QWORD *)v51 + 3) = v11;
  *((_QWORD *)v51 + 4) = v9;
  v89 = 0;
  v90 = 0;
  *((_QWORD *)v51 + 5) = v77;
  *((_QWORD *)v51 + 6) = v78;
  v91[0] = 0;
  v91[1] = 0;
  v93 = (std::string *)v51;
  sub_2245022E4(*v42, (uint64_t)&v92);
  v52 = v93;
  if (v93 == &v92)
  {
    v53 = 4;
    v52 = &v92;
    goto LABEL_58;
  }
  if (v93)
  {
    v53 = 5;
LABEL_58:
    (*(void (**)(void))(v52->__r_.__value_.__r.__words[0] + 8 * v53))();
  }
  if (v82)
  {
    v54 = &v82->__shared_owners_;
    do
      v55 = __ldaxr((unint64_t *)v54);
    while (__stlxr(v55 - 1, (unint64_t *)v54));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
      std::__shared_weak_count::__release_weak(v82);
    }
  }
  if (v79)
  {
    v56 = (unint64_t *)&v79->__shared_owners_;
    do
      v57 = __ldaxr(v56);
    while (__stlxr(v57 - 1, v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
      v58 = v79;
LABEL_93:
      std::__shared_weak_count::__release_weak(v58);
    }
  }
}

void sub_2235A56A4(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2235A56B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235A56BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::exception_ptr a26)
{
  std::__assoc_sub_state **v26;
  uint64_t v27;
  std::__assoc_sub_state *v28;
  std::exception_ptr v29;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v28 = *v26;
    if (*v26)
    {
      std::exception_ptr::exception_ptr(&a26, &a15);
      v29.__ptr_ = &a26;
      std::__assoc_sub_state::set_exception(v28, v29);
      std::exception_ptr::~exception_ptr(&a26);
      std::exception_ptr::~exception_ptr(&a15);
      std::runtime_error::~runtime_error(&a14);
      if (*(char *)(v27 - 81) < 0)
        operator delete(*(void **)(v27 - 104));
      JUMPOUT(0x2235A558CLL);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_2235A5730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::exception_ptr a26)
{
  uint64_t v26;

  std::exception_ptr::~exception_ptr(&a15);
  std::runtime_error::~runtime_error(&a14);
  if (*(char *)(v26 - 81) < 0)
  {
    operator delete(*(void **)(v26 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235A5780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,char *a30)
{
  char *v30;
  char *v32;
  uint64_t v33;

  v32 = a30;
  if (a30 == v30)
  {
    v33 = 4;
    v32 = &a27;
  }
  else
  {
    if (!a30)
    {
      sub_2235A26F4(&a19);
      _Unwind_Resume(a1);
    }
    v33 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v32 + 8 * v33))();
  sub_2235A26F4(&a19);
  _Unwind_Resume(a1);
}

void sub_2235A57D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24)
{
  _QWORD *v24;
  uint64_t v26;

  if (a24 == v24)
  {
    v26 = 4;
  }
  else
  {
    if (!a24)
      goto LABEL_6;
    v26 = 5;
    v24 = a24;
  }
  (*(void (**)(_QWORD *))(*v24 + 8 * v26))(v24);
LABEL_6:
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2235A5848);
}

void sub_2235A581C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  std::__shared_weak_count *v12;
  void *v14;

  std::__shared_weak_count::~__shared_weak_count(v12);
  operator delete(v14);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235A5850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;

  v30 = *(_QWORD **)(v28 - 80);
  if (v30 == v27)
  {
    v31 = 4;
    v30 = (_QWORD *)(v28 - 104);
  }
  else
  {
    if (!v30)
      goto LABEL_6;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_6:
  sub_22332429C(&a27);
  sub_223167354((uint64_t)&a17);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235A58F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2235A590C(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_2235A5980(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC4C850;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B3F0;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_2235A5AB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2235A5B24(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4C8D0;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_2235A5C34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2235A5C98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4C950;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235A5EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235A5F78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4C9D0;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235A6190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A6258(uint64_t a1)
{
  return sub_2235A63C8(a1 - 16);
}

void sub_2235A6260(uint64_t a1)
{
  sub_2235A63C8(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A6288(uint64_t a1, uint64_t a2)
{
  return sub_2235A5980((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235A6290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235A5C98((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235A6298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235A5F78((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_2235A62A0(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_2235A62A8(uint64_t a1)
{
  return sub_2235A63C8(a1 - 24);
}

void sub_2235A62B0(uint64_t a1)
{
  sub_2235A63C8(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A62D8(uint64_t a1)
{
  return sub_2235A5B24((_QWORD *)(a1 - 24));
}

uint64_t sub_2235A62E0(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235A62E8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2235A6350(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235A63B8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235A63C8(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4C410;
  *(_QWORD *)(a1 + 16) = &unk_24EC4C488;
  *(_QWORD *)(a1 + 24) = &unk_24EC4C4C8;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

void sub_2235A65C8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4C600;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2235A65D8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4C600;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235A6608(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 24;
  result = *(_QWORD *)(a1 + 48);
  if (result == v1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

_QWORD *sub_2235A6648(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4C650;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235A668C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4C650;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A66E0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4C650;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_2235A6750(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4C650;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_2235A67A0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235A67DC(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235A6814(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_2235A6B38((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_2235468B8(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235A69DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_2235468B8(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A6AC0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30Mes"
                     "hingNodeOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshReques"
                                "tENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendE"
                                "RKS6_EUlT_T0_E_EEvSB_SC_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A6B2C()
{
  return &unk_24EC4C6B0;
}

_QWORD *sub_2235A6B38(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  char *v9;
  char *v10;
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  _QWORD *result;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD *v18;
  void *__p;
  char *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v17, v6, a2);
  v7 = a1 + 1;
  for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
    (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v17);
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_223546790(*(_QWORD *)a3, (uint64_t)v17);
  }
  v9 = (char *)__p;
  if (__p)
  {
    v10 = v20;
    v11 = __p;
    if (v20 != __p)
    {
      do
      {
        v12 = (std::__shared_weak_count *)*((_QWORD *)v10 - 12);
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v14 = __ldaxr(p_shared_owners);
          while (__stlxr(v14 - 1, p_shared_owners));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        v10 -= 120;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v20 = v9;
    operator delete(v11);
  }
  result = v18;
  if (v18 == v17)
  {
    v16 = 4;
    result = v17;
  }
  else
  {
    if (!v18)
      return result;
    v16 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
}

void sub_2235A6CE8(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  uint64_t *v5;
  uint64_t v6;
  va_list v7;
  uint64_t v8;
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;
  va_list v13;
  va_list va2;
  uint64_t v15;
  uint64_t v16;
  va_list va3;

  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v11 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v13 = va_arg(va3, va_list);
  v15 = va_arg(va3, _QWORD);
  v16 = va_arg(va3, _QWORD);
  sub_223540AB8((uint64_t *)va3);
  if (a2 == 1)
  {
    v5 = (uint64_t *)__cxa_begin_catch(a1);
    v6 = *v5;
    v11 = *(_QWORD *)(*(_QWORD *)(*v5 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    v9 = (*(uint64_t (**)(void))(v6 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", va1, "\n", "message: ", va, "\n");
    if (v16 >= 0)
      va_copy(v7, va2);
    else
      v7 = v13;
    if (v16 >= 0)
      v8 = HIBYTE(v16);
    else
      v8 = v15;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v7, v8, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_2235A6DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2235A6DD4(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x2235A6DDCLL);
  sub_22316DC48(a1);
}

_QWORD *sub_2235A6DEC(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4C6D0;
  v2 = a1 + 3;
  v3 = (_QWORD *)a1[6];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_2235A6E54(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4C6D0;
  v2 = a1 + 3;
  v3 = (_QWORD *)a1[6];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A6ECC(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;

  v2 = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *v2 = &off_24EC4C6D0;
  v2[1] = v4;
  v2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[6];
  if (!v7)
    goto LABEL_7;
  if ((_QWORD *)v7 != a1 + 3)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
LABEL_7:
    v2[6] = v7;
    return v2;
  }
  v2[6] = v2 + 3;
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
  return v2;
}

void sub_2235A6F6C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A6F8C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t result;

  v4 = a1[1];
  v3 = a1[2];
  *a2 = &off_24EC4C6D0;
  a2[1] = v4;
  a2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = (_QWORD *)a1[6];
  if (v7)
  {
    if (v7 == a1 + 3)
    {
      a2[6] = a2 + 3;
      return (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[6] + 24))(a1[6]);
    }
    else
    {
      result = (*(uint64_t (**)(_QWORD))(*v7 + 16))(a1[6]);
      a2[6] = result;
    }
  }
  else
  {
    result = 0;
    a2[6] = 0;
  }
  return result;
}

void sub_2235A702C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235A7044(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 48);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
}

void sub_2235A70A4(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  v2 = __p + 24;
  v3 = (char *)*((_QWORD *)__p + 6);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  operator delete(__p);
}

void sub_2235A7100(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_2235A6B38((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_2235468B8(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A71A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_2235468B8(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A71F4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30Mes"
                     "hingNodeOccupancyMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshReques"
                                "tENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A7260()
{
  return &unk_24EC4C730;
}

_QWORD *sub_2235A726C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4C750;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2235A72F4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4C750;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_2235A738C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4C750;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_2235A741C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4C750;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235A748C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_2235A750C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_2235A7588(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_2235A6B38(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_2235468B8((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235A7864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235A7890(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x2235A769CLL);
    JUMPOUT(0x2235A766CLL);
  }
  sub_2233236D4(3u);
}

void sub_2235A78EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235A7918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_2235468B8(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235A7A04(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30Mes"
                     "hingNodeOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promis"
                     "eIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshReques"
                                "tENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7Proce"
                                "ssERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A7A70()
{
  return &unk_24EC4C7B0;
}

_QWORD *sub_2235A7A7C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4C7D0;
  v2 = (std::__shared_weak_count *)a1[8];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = a1 + 3;
      v6 = (_QWORD *)a1[6];
      if (v6 != a1 + 3)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = a1 + 3;
  v6 = (_QWORD *)a1[6];
  if (v6 == a1 + 3)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_2235A7B2C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4C7D0;
  v2 = (std::__shared_weak_count *)a1[8];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (_QWORD *)a1[6];
    if (v6 != a1 + 3)
      goto LABEL_6;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (_QWORD *)a1[6];
    if (v6 != a1 + 3)
    {
LABEL_6:
      if (!v6)
        goto LABEL_11;
      v7 = 5;
LABEL_10:
      (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
      v8 = (std::__shared_weak_count *)a1[2];
      if (v8)
        std::__shared_weak_count::__release_weak(v8);
      JUMPOUT(0x227684CE8);
    }
  }
  v7 = 4;
  v6 = v5;
  goto LABEL_10;
}

_QWORD *sub_2235A7BEC(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = operator new(0x48uLL);
  v4 = a1[1];
  v3 = a1[2];
  *v2 = &off_24EC4C7D0;
  v2[1] = v4;
  v2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[6];
  if (!v7)
    goto LABEL_7;
  if ((_QWORD *)v7 != a1 + 3)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
LABEL_7:
    v2[6] = v7;
    goto LABEL_9;
  }
  v2[6] = v2 + 3;
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
LABEL_9:
  v8 = a1[8];
  v2[7] = a1[7];
  v2[8] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return v2;
}

void sub_2235A7CA0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A7CC0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC4C7D0;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[6];
  if (!result)
    goto LABEL_7;
  if ((_QWORD *)result != a1 + 3)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
LABEL_7:
    a2[6] = result;
    goto LABEL_9;
  }
  a2[6] = a2 + 3;
  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[6] + 24))(a1[6]);
LABEL_9:
  v9 = a1[8];
  a2[7] = a1[7];
  a2[8] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235A7D6C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235A7D84(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)a1[8];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = a1 + 3;
      v6 = (_QWORD *)a1[6];
      if (v6 != a1 + 3)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = a1 + 3;
  v6 = (_QWORD *)a1[6];
  if (v6 == a1 + 3)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
}

void sub_2235A7E2C(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = __p + 24;
      v6 = (char *)*((_QWORD *)__p + 6);
      if (v6 != __p + 24)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = __p + 24;
  v6 = (char *)*((_QWORD *)__p + 6);
  if (v6 == __p + 24)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  operator delete(__p);
}

void sub_2235A7ED0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[7];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_2235A6B38((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_2235468B8((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_2235A7FE0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_2235A8058(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x2235A808CLL);
  JUMPOUT(0x2235A80BCLL);
}

uint64_t sub_2235A80C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30Mes"
                     "hingNodeOccupancyMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshReques"
                                "tENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A8130()
{
  return &unk_24EC4C830;
}

_QWORD *sub_2235A813C(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4C850;
  v2 = a1[4];
  a1[3] = &off_24EC2B3F0;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235A8194(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4C850;
  v2 = a1[4];
  a1[3] = &off_24EC2B3F0;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A81FC(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC4C850;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B3F0;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_2235A8274(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A8294(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC4C850;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B3F0;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_2235A82FC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235A8314(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B3F0;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235A8364(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B3F0;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235A83B0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B3F0;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A8464(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A84A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30Mesh"
                     "ingNodeOccupancyMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequest"
                                "ENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A850C()
{
  return &unk_24EC4C8B0;
}

_QWORD *sub_2235A8518(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4C8D0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235A8550(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4C8D0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A8598(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4C8D0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_2235A85E8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4C8D0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235A8618(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235A8628(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235A8654(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A86E8(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A8724(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30Mesh"
                     "ingNodeOccupancyMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequest"
                                "ENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A8790()
{
  return &unk_24EC4C930;
}

_QWORD *sub_2235A879C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4C950;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235A87D4(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4C950;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A881C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4C950;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235A8874(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4C950;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235A88AC(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235A88BC(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235A88E8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_2235A8A64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A8AD4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30Mes"
                     "hingNodeOccupancyMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshReques"
                                "tENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A8B40()
{
  return &unk_24EC4C9B0;
}

_QWORD *sub_2235A8B4C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4C9D0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235A8B84(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4C9D0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A8BCC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4C9D0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235A8C24(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4C9D0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235A8C5C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235A8C6C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235A8C98(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A8D50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235A8D9C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30Mes"
                     "hingNodeOccupancyMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshReques"
                                "tENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng31MeshingNodeOccupancyMeshRequestENS5_30MeshingNodeOccupancyMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235A8E08()
{
  return &unk_24EC4CA30;
}

void sub_2235A8E18(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235A8E3C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2235A8E54(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng31MeshingNodeOccupancyMe"
                     "shRequestENS7_30MeshingNodeOccupancyMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng31MeshingNode"
                                "OccupancyMeshRequestENS7_30MeshingNodeOccupancyMeshResultEvS9_Lb0EEEE27__shared_ptr_defa"
                                "ult_deleteISA_SA_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng31MeshingNodeOccupancyMeshRequestENS7_30MeshingNodeOccupancyMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng31MeshingNodeOccupancyMeshRequestENS7_30MeshingNodeOccupancyMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_2235A8EC4(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235A8EF0(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235A8F2C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4CAA0;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_2235A8F94(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A9024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A9038(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235A90C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A90DC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235A91A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A91B4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235A9278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A928C(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_2235A9330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A9348(uint64_t a1)
{
  sub_2235AAE9C(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235A936C(_QWORD *a1, _QWORD *a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  std::__shared_weak_count_vtbl *v6;
  uint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *p_shared_weak_owners;
  unint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  std::__shared_weak_count_vtbl **v23;
  unint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  std::mutex **v34;
  uint64_t **v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  __int128 *v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t v55;
  std::__shared_weak_count *v56[2];
  _QWORD v57[3];
  _QWORD *v58;
  __int128 v59;
  uint64_t v60;
  __int128 *v61;
  _BYTE v62[24];
  _BYTE *v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v4 = (std::__shared_weak_count *)operator new(0x38uLL);
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__shared_weak_owners_ = 0;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4CD08;
    v6 = (std::__shared_weak_count_vtbl *)&v4[1];
    v7 = a2[3];
    if (v7)
    {
      if ((_QWORD *)v7 == a2)
      {
        v4[2].__vftable = v6;
        (*(void (**)(_QWORD *, std::__shared_weak_count_vtbl *))(*a2 + 24))(a2, v6);
        goto LABEL_18;
      }
      v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    }
    v4[2].__vftable = (std::__shared_weak_count_vtbl *)v7;
LABEL_18:
    p_shared_weak_owners = (unint64_t *)&v4->__shared_weak_owners_;
    do
      v18 = __ldxr(p_shared_weak_owners);
    while (__stxr(v18 + 1, p_shared_weak_owners));
    v19 = (uint64_t *)a1[18];
    v20 = (_QWORD *)operator new();
    *v20 = v19 + 7;
    std::mutex::lock((std::mutex *)(v19 + 7));
    *(_QWORD *)&v59 = v20;
    *((_QWORD *)&v59 + 1) = v19;
    if (!*((_BYTE *)v19 + 48))
      sub_22324A974();
    v21 = v19[4];
    v22 = *v19;
    v23 = (std::__shared_weak_count_vtbl **)(*v19 + 16 * v21);
    do
      v24 = __ldxr(p_shared_owners);
    while (__stxr(v24 + 1, p_shared_owners));
    *v23 = v6;
    v25 = v22 + 16 * v21;
    v26 = *(std::__shared_weak_count **)(v25 + 8);
    *(_QWORD *)(v25 + 8) = v4;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    v29 = (v19[1] - *v19) >> 4;
    v30 = v19[5];
    v31 = v19[4] + 1;
    if (v31 >= v29)
      v32 = (v19[1] - *v19) >> 4;
    else
      v32 = 0;
    v19[4] = v31 - v32;
    if (v30 == v29)
    {
      v33 = v19[3] + 1;
      if (v33 < v29)
        v29 = 0;
      v19[3] = v33 - v29;
      v34 = (std::mutex **)v59;
      if (!(_QWORD)v59)
      {
LABEL_38:
        v35 = (uint64_t **)a1[9];
        v59 = 0uLL;
        v36 = (std::__shared_weak_count *)a1[5];
        if (v36)
        {
          v37 = std::__shared_weak_count::lock(v36);
          if (v37)
          {
            v38 = v37;
            v39 = a1[4];
            v40 = (unint64_t *)&v37->__shared_weak_owners_;
            do
              v41 = __ldxr(v40);
            while (__stxr(v41 + 1, v40));
            *(_QWORD *)&v59 = v39;
            *((_QWORD *)&v59 + 1) = v37;
            v42 = (unint64_t *)&v37->__shared_owners_;
            do
              v43 = __ldaxr(v42);
            while (__stlxr(v43 - 1, v42));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v38);
            }
          }
          else
          {
            v59 = 0uLL;
          }
        }
        v44 = (char *)operator new(0x30uLL);
        *(_QWORD *)v44 = &off_24EC4CD58;
        *(_OWORD *)(v44 + 8) = v59;
        v59 = 0uLL;
        *((_QWORD *)v44 + 3) = v6;
        *((_QWORD *)v44 + 4) = v4;
        v60 = 0;
        v61 = 0;
        v63 = v44;
        sub_2245022E4(*v35, (uint64_t)v62);
        v45 = v63;
        if (v63 == v62)
        {
          v46 = 4;
          v45 = v62;
        }
        else
        {
          if (!v63)
            goto LABEL_52;
          v46 = 5;
        }
        (*(void (**)(_QWORD *))(*v45 + 8 * v46))(v45);
LABEL_52:
        if (v4)
        {
          v47 = (unint64_t *)&v4->__shared_owners_;
          do
            v48 = __ldaxr(v47);
          while (__stlxr(v48 - 1, v47));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
            std::__shared_weak_count::__release_weak(v4);
          }
        }
        return;
      }
    }
    else
    {
      v19[5] = v30 + 1;
      v34 = (std::mutex **)v59;
      if (!(_QWORD)v59)
        goto LABEL_38;
    }
    std::mutex::unlock(*v34);
    MEMORY[0x227684CE8](v34, 0x20C4093837F09);
    goto LABEL_38;
  }
  v8 = (uint64_t **)a1[9];
  *(_OWORD *)v56 = 0uLL;
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    if (v10)
    {
      v11 = v10;
      v12 = (std::__shared_weak_count *)a1[4];
      v13 = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v56[0] = v12;
      v56[1] = v10;
      v15 = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      *(_OWORD *)v56 = 0uLL;
    }
  }
  v49 = v57;
  v50 = a2[3];
  if (!v50)
    goto LABEL_61;
  if ((_QWORD *)v50 != a2)
  {
    v50 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 16))(v50);
LABEL_61:
    v58 = (_QWORD *)v50;
    goto LABEL_63;
  }
  v58 = v57;
  (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v57);
LABEL_63:
  v61 = 0;
  v51 = (char *)operator new(0x38uLL);
  v52 = (__int128 *)v51;
  *(_QWORD *)v51 = &off_24EC4CDD8;
  *(_OWORD *)(v51 + 8) = *(_OWORD *)v56;
  if (v58)
  {
    if (v58 == v57)
    {
      *((_QWORD *)v51 + 6) = v51 + 24;
      (*(void (**)(_QWORD *))(v57[0] + 24))(v57);
    }
    else
    {
      *((_QWORD *)v51 + 6) = v58;
      v58 = 0;
    }
  }
  else
  {
    *((_QWORD *)v51 + 6) = 0;
  }
  v61 = v52;
  sub_2245022E4(*v8, (uint64_t)&v59);
  v53 = v61;
  if (v61 == &v59)
  {
    v54 = 4;
    v53 = &v59;
    goto LABEL_72;
  }
  if (v61)
  {
    v54 = 5;
LABEL_72:
    (*(void (**)(void))(*(_QWORD *)v53 + 8 * v54))();
  }
  if (v58 == v57)
  {
    v55 = 4;
  }
  else
  {
    if (!v58)
      return;
    v55 = 5;
    v49 = v58;
  }
  (*(void (**)(_QWORD *))(*v49 + 8 * v55))(v49);
}

void sub_2235A987C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2235A9910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;

  v20 = *(_QWORD **)(v18 - 64);
  if (v20 == v17)
  {
    v21 = 4;
    v20 = (_QWORD *)(v18 - 88);
  }
  else
  {
    if (!v20)
      goto LABEL_6;
    v21 = 5;
  }
  (*(void (**)(void))(*v20 + 8 * v21))();
LABEL_6:
  sub_223322894((uint64_t)&a17);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A9960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::mutex **a17)
{
  std::__shared_weak_count *v17;

  sub_223322848(&a17);
  std::__shared_weak_count::__release_weak(v17);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A9984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  uint64_t v10;

  MEMORY[0x227684CE8](v10, 0x20C4093837F09);
  std::__shared_weak_count::__release_weak(v9);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235A99B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;

  std::__shared_weak_count::__release_weak(v9);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235A99D8(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235A99E8(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235A99F4(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_2235A9A04(_QWORD *a1, _QWORD *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  std::__shared_weak_count_vtbl *v11;
  uint64_t v12;
  uint64_t **v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_weak_owners;
  unint64_t v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  std::__shared_weak_count_vtbl **v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  std::mutex **v41;
  uint64_t **v42;
  std::__shared_weak_count *v43;
  std::__shared_weak_count *v44;
  std::__shared_weak_count *v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  char *v51;
  std::string *v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  std::__shared_weak_count *v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  __int128 *v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  __int128 *v73;
  std::string *v74;
  std::runtime_error *exception;
  std::runtime_error *v76;
  _QWORD *v77;
  _QWORD *v78;
  std::__shared_weak_count *v79;
  std::runtime_error v80;
  std::__shared_weak_count *v81;
  std::__shared_weak_count *v82;
  std::__shared_weak_count *v83[2];
  _QWORD v84[3];
  _QWORD *v85;
  _QWORD *v86;
  std::__shared_weak_count *v87;
  __int128 v88;
  _QWORD *v89;
  __int128 *v90;
  _QWORD v91[3];
  std::string v92;
  std::string *v93;
  uint64_t v94;

  v94 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v88 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v88 + 1) = 45;
    v72 = (_QWORD *)a1[6];
    v71 = a1 + 6;
    v70 = v72;
    v73 = (__int128 *)*((unsigned __int8 *)v71 + 23);
    if ((char)v73 < 0)
      v73 = (__int128 *)v71[1];
    else
      v70 = v71;
    v89 = v70;
    v90 = v73;
    sub_2231A9820((uint64_t)&v88, (uint64_t)v91, 0, 0, &v92);
    if ((v92.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v74 = &v92;
    else
      v74 = (std::string *)v92.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v80, (const char *)v74);
    v80.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v76 = std::runtime_error::runtime_error(exception, &v80);
    v76->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v76, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v13 = (uint64_t **)a1[9];
    v83[0] = 0;
    v83[1] = 0;
    v14 = (std::__shared_weak_count *)a1[5];
    if (!v14)
      goto LABEL_20;
    v15 = std::__shared_weak_count::lock(v14);
    if (v15)
    {
      v16 = v15;
      v17 = (std::__shared_weak_count *)a1[4];
      p_shared_weak_owners = (unint64_t *)&v15->__shared_weak_owners_;
      do
        v19 = __ldxr(p_shared_weak_owners);
      while (__stxr(v19 + 1, p_shared_weak_owners));
      v83[0] = v17;
      v83[1] = v15;
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (v21)
      {
LABEL_20:
        v22 = v84;
        v23 = a2[3];
        if (!v23)
          goto LABEL_23;
        goto LABEL_21;
      }
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v16);
      v22 = v84;
      v23 = a2[3];
      if (!v23)
        goto LABEL_23;
    }
    else
    {
      v83[0] = 0;
      v83[1] = 0;
      v22 = v84;
      v23 = a2[3];
      if (!v23)
        goto LABEL_23;
    }
LABEL_21:
    if ((_QWORD *)v23 == a2)
    {
      v85 = v84;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v84);
LABEL_72:
      v59 = (std::__shared_weak_count *)operator new(0x20uLL);
      v59->__shared_owners_ = 0;
      v59->__shared_weak_owners_ = 0;
      v59->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47020;
      v59[1].__vftable = *a3;
      v60 = &v59[1].__vftable;
      *a3 = 0;
      v86 = &v59[1].__vftable;
      v87 = v59;
      v90 = 0;
      v61 = (char *)operator new(0x48uLL);
      v62 = v61;
      *(_QWORD *)v61 = &off_24EC4CED8;
      *(_OWORD *)(v61 + 8) = *(_OWORD *)v83;
      v83[0] = 0;
      v83[1] = 0;
      if (v85)
      {
        if (v85 == v84)
        {
          *((_QWORD *)v61 + 6) = v61 + 24;
          (*(void (**)(_QWORD *))(v84[0] + 24))(v84);
          v60 = v86;
          v59 = v87;
        }
        else
        {
          *((_QWORD *)v61 + 6) = v85;
          v85 = 0;
        }
      }
      else
      {
        *((_QWORD *)v61 + 6) = 0;
      }
      *((_QWORD *)v62 + 7) = v60;
      *((_QWORD *)v62 + 8) = v59;
      v86 = 0;
      v87 = 0;
      v90 = (__int128 *)v62;
      sub_2245022E4(*v13, (uint64_t)&v88);
      v63 = v90;
      if (v90 == &v88)
      {
        v64 = 4;
        v63 = &v88;
      }
      else
      {
        if (!v90)
        {
LABEL_82:
          v65 = v87;
          if (!v87)
            goto LABEL_86;
          v66 = (unint64_t *)&v87->__shared_owners_;
          do
            v67 = __ldaxr(v66);
          while (__stlxr(v67 - 1, v66));
          if (!v67)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
            v68 = v85;
            if (v85 != v84)
              goto LABEL_87;
          }
          else
          {
LABEL_86:
            v68 = v85;
            if (v85 != v84)
            {
LABEL_87:
              if (!v68)
                goto LABEL_92;
              v69 = 5;
              v22 = v68;
LABEL_91:
              (*(void (**)(_QWORD *))(*v22 + 8 * v69))(v22);
LABEL_92:
              v58 = v83[1];
              if (!v83[1])
                return;
              goto LABEL_93;
            }
          }
          v69 = 4;
          goto LABEL_91;
        }
        v64 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v63 + 8 * v64))();
      goto LABEL_82;
    }
    v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 16))(v23);
LABEL_23:
    v85 = (_QWORD *)v23;
    goto LABEL_72;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47020;
  v6[1].__vftable = *a3;
  v79 = v6;
  v77 = &v6[1].__vftable;
  v78 = &v6->__vftable;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = (std::__shared_weak_count *)operator new(0x38uLL);
  v9->__shared_owners_ = 0;
  v10 = (unint64_t *)&v9->__shared_owners_;
  v9->__shared_weak_owners_ = 0;
  v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4CD08;
  v11 = (std::__shared_weak_count_vtbl *)&v9[1];
  v12 = a2[3];
  if (v12)
  {
    if ((_QWORD *)v12 == a2)
    {
      v9[2].__vftable = v11;
      (*(void (**)(_QWORD *, std::__shared_weak_count_vtbl *))(*a2 + 24))(a2, v11);
      goto LABEL_25;
    }
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
  }
  v9[2].__vftable = (std::__shared_weak_count_vtbl *)v12;
LABEL_25:
  v81 = v9 + 1;
  v82 = v9;
  v24 = (unint64_t *)&v9->__shared_weak_owners_;
  do
    v25 = __ldxr(v24);
  while (__stxr(v25 + 1, v24));
  v26 = (uint64_t *)a1[18];
  v27 = (_QWORD *)operator new();
  *v27 = v26 + 7;
  std::mutex::lock((std::mutex *)(v26 + 7));
  *(_QWORD *)&v88 = v27;
  *((_QWORD *)&v88 + 1) = v26;
  if (!*((_BYTE *)v26 + 48))
    sub_22324A974();
  v28 = v26[4];
  v29 = *v26;
  v30 = (std::__shared_weak_count_vtbl **)(*v26 + 16 * v28);
  do
    v31 = __ldxr(v10);
  while (__stxr(v31 + 1, v10));
  *v30 = v11;
  v32 = v29 + 16 * v28;
  v33 = *(std::__shared_weak_count **)(v32 + 8);
  *(_QWORD *)(v32 + 8) = v9;
  if (v33)
  {
    v34 = (unint64_t *)&v33->__shared_owners_;
    do
      v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  v36 = (v26[1] - *v26) >> 4;
  v37 = v26[5];
  v38 = v26[4] + 1;
  if (v38 >= v36)
    v39 = (v26[1] - *v26) >> 4;
  else
    v39 = 0;
  v26[4] = v38 - v39;
  if (v37 != v36)
  {
    v26[5] = v37 + 1;
    v41 = (std::mutex **)v88;
    if (!(_QWORD)v88)
      goto LABEL_45;
    goto LABEL_44;
  }
  v40 = v26[3] + 1;
  if (v40 < v36)
    v36 = 0;
  v26[3] = v40 - v36;
  v41 = (std::mutex **)v88;
  if ((_QWORD)v88)
  {
LABEL_44:
    std::mutex::unlock(*v41);
    MEMORY[0x227684CE8](v41, 0x20C4093837F09);
  }
LABEL_45:
  v42 = (uint64_t **)a1[9];
  v88 = 0uLL;
  v43 = (std::__shared_weak_count *)a1[5];
  if (v43)
  {
    v44 = std::__shared_weak_count::lock(v43);
    if (v44)
    {
      v45 = v44;
      v46 = a1[4];
      v47 = (unint64_t *)&v44->__shared_weak_owners_;
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 1, v47));
      *(_QWORD *)&v88 = v46;
      *((_QWORD *)&v88 + 1) = v44;
      v49 = (unint64_t *)&v44->__shared_owners_;
      do
        v50 = __ldaxr(v49);
      while (__stlxr(v50 - 1, v49));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
        std::__shared_weak_count::__release_weak(v45);
      }
    }
    else
    {
      v88 = 0uLL;
    }
  }
  v51 = (char *)operator new(0x38uLL);
  *(_QWORD *)v51 = &off_24EC4CE58;
  *(_OWORD *)(v51 + 8) = v88;
  v88 = 0uLL;
  *((_QWORD *)v51 + 3) = v11;
  *((_QWORD *)v51 + 4) = v9;
  v89 = 0;
  v90 = 0;
  *((_QWORD *)v51 + 5) = v77;
  *((_QWORD *)v51 + 6) = v78;
  v91[0] = 0;
  v91[1] = 0;
  v93 = (std::string *)v51;
  sub_2245022E4(*v42, (uint64_t)&v92);
  v52 = v93;
  if (v93 == &v92)
  {
    v53 = 4;
    v52 = &v92;
    goto LABEL_58;
  }
  if (v93)
  {
    v53 = 5;
LABEL_58:
    (*(void (**)(void))(v52->__r_.__value_.__r.__words[0] + 8 * v53))();
  }
  if (v82)
  {
    v54 = &v82->__shared_owners_;
    do
      v55 = __ldaxr((unint64_t *)v54);
    while (__stlxr(v55 - 1, (unint64_t *)v54));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
      std::__shared_weak_count::__release_weak(v82);
    }
  }
  if (v79)
  {
    v56 = (unint64_t *)&v79->__shared_owners_;
    do
      v57 = __ldaxr(v56);
    while (__stlxr(v57 - 1, v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
      v58 = v79;
LABEL_93:
      std::__shared_weak_count::__release_weak(v58);
    }
  }
}

void sub_2235AA178(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2235AA188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235AA190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::exception_ptr a26)
{
  std::__assoc_sub_state **v26;
  uint64_t v27;
  std::__assoc_sub_state *v28;
  std::exception_ptr v29;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v28 = *v26;
    if (*v26)
    {
      std::exception_ptr::exception_ptr(&a26, &a15);
      v29.__ptr_ = &a26;
      std::__assoc_sub_state::set_exception(v28, v29);
      std::exception_ptr::~exception_ptr(&a26);
      std::exception_ptr::~exception_ptr(&a15);
      std::runtime_error::~runtime_error(&a14);
      if (*(char *)(v27 - 81) < 0)
        operator delete(*(void **)(v27 - 104));
      JUMPOUT(0x2235AA060);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_2235AA204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::exception_ptr a26)
{
  uint64_t v26;

  std::exception_ptr::~exception_ptr(&a15);
  std::runtime_error::~runtime_error(&a14);
  if (*(char *)(v26 - 81) < 0)
  {
    operator delete(*(void **)(v26 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235AA254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,char *a30)
{
  char *v30;
  char *v32;
  uint64_t v33;

  v32 = a30;
  if (a30 == v30)
  {
    v33 = 4;
    v32 = &a27;
  }
  else
  {
    if (!a30)
    {
      sub_2235A26F4(&a19);
      _Unwind_Resume(a1);
    }
    v33 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v32 + 8 * v33))();
  sub_2235A26F4(&a19);
  _Unwind_Resume(a1);
}

void sub_2235AA2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24)
{
  _QWORD *v24;
  uint64_t v26;

  if (a24 == v24)
  {
    v26 = 4;
  }
  else
  {
    if (!a24)
      goto LABEL_6;
    v26 = 5;
    v24 = a24;
  }
  (*(void (**)(_QWORD *))(*v24 + 8 * v26))(v24);
LABEL_6:
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2235AA31CLL);
}

void sub_2235AA2F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  std::__shared_weak_count *v12;
  void *v14;

  std::__shared_weak_count::~__shared_weak_count(v12);
  operator delete(v14);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235AA324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;

  v30 = *(_QWORD **)(v28 - 80);
  if (v30 == v27)
  {
    v31 = 4;
    v30 = (_QWORD *)(v28 - 104);
  }
  else
  {
    if (!v30)
      goto LABEL_6;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_6:
  sub_22332429C(&a27);
  sub_223167354((uint64_t)&a17);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235AA3C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2235AA3E0(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_2235AA454(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC4CF58;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B428;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_2235AA584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2235AA5F8(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4CFD8;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_2235AA708(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2235AA76C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4D058;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235AA984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235AAA4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4D0D8;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235AAC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235AAD2C(uint64_t a1)
{
  return sub_2235AAE9C(a1 - 16);
}

void sub_2235AAD34(uint64_t a1)
{
  sub_2235AAE9C(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235AAD5C(uint64_t a1, uint64_t a2)
{
  return sub_2235AA454((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235AAD64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235AA76C((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235AAD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235AAA4C((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_2235AAD74(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_2235AAD7C(uint64_t a1)
{
  return sub_2235AAE9C(a1 - 24);
}

void sub_2235AAD84(uint64_t a1)
{
  sub_2235AAE9C(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235AADAC(uint64_t a1)
{
  return sub_2235AA5F8((_QWORD *)(a1 - 24));
}

uint64_t sub_2235AADB4(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235AADBC(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2235AAE24(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235AAE8C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235AAE9C(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4CB18;
  *(_QWORD *)(a1 + 16) = &unk_24EC4CB90;
  *(_QWORD *)(a1 + 24) = &unk_24EC4CBD0;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

void sub_2235AB09C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4CD08;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2235AB0AC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4CD08;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235AB0DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 24;
  result = *(_QWORD *)(a1 + 48);
  if (result == v1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

_QWORD *sub_2235AB11C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4CD58;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235AB160(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4CD58;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235AB1B4(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4CD58;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_2235AB224(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4CD58;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_2235AB274(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235AB2B0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235AB2E8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_2235AB60C((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_22354BAD4(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235AB4B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_22354BAD4(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235AB594(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5"
                     "_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_"
                     "T0_E_EEvSB_SC_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMesh"
                                "RequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchI"
                                "ZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235AB600()
{
  return &unk_24EC4CDB8;
}

_QWORD *sub_2235AB60C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  char *v9;
  char *v10;
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  _QWORD *result;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD *v18;
  void *__p;
  char *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v17, v6, a2);
  v7 = a1 + 1;
  for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
    (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v17);
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_22354B9AC(*(_QWORD *)a3, (uint64_t)v17);
  }
  v9 = (char *)__p;
  if (__p)
  {
    v10 = v20;
    v11 = __p;
    if (v20 != __p)
    {
      do
      {
        v12 = (std::__shared_weak_count *)*((_QWORD *)v10 - 12);
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v14 = __ldaxr(p_shared_owners);
          while (__stlxr(v14 - 1, p_shared_owners));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        v10 -= 120;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v20 = v9;
    operator delete(v11);
  }
  result = v18;
  if (v18 == v17)
  {
    v16 = 4;
    result = v17;
  }
  else
  {
    if (!v18)
      return result;
    v16 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
}

void sub_2235AB7BC(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  uint64_t *v5;
  uint64_t v6;
  va_list v7;
  uint64_t v8;
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;
  va_list v13;
  va_list va2;
  uint64_t v15;
  uint64_t v16;
  va_list va3;

  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v11 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v13 = va_arg(va3, va_list);
  v15 = va_arg(va3, _QWORD);
  v16 = va_arg(va3, _QWORD);
  sub_223540AB8((uint64_t *)va3);
  if (a2 == 1)
  {
    v5 = (uint64_t *)__cxa_begin_catch(a1);
    v6 = *v5;
    v11 = *(_QWORD *)(*(_QWORD *)(*v5 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    v9 = (*(uint64_t (**)(void))(v6 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", va1, "\n", "message: ", va, "\n");
    if (v16 >= 0)
      va_copy(v7, va2);
    else
      v7 = v13;
    if (v16 >= 0)
      v8 = HIBYTE(v16);
    else
      v8 = v15;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v7, v8, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_2235AB884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2235AB8A8(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x2235AB8B0);
  sub_22316DC48(a1);
}

_QWORD *sub_2235AB8C0(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4CDD8;
  v2 = a1 + 3;
  v3 = (_QWORD *)a1[6];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_2235AB928(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4CDD8;
  v2 = a1 + 3;
  v3 = (_QWORD *)a1[6];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235AB9A0(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;

  v2 = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *v2 = &off_24EC4CDD8;
  v2[1] = v4;
  v2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[6];
  if (!v7)
    goto LABEL_7;
  if ((_QWORD *)v7 != a1 + 3)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
LABEL_7:
    v2[6] = v7;
    return v2;
  }
  v2[6] = v2 + 3;
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
  return v2;
}

void sub_2235ABA40(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235ABA60(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t result;

  v4 = a1[1];
  v3 = a1[2];
  *a2 = &off_24EC4CDD8;
  a2[1] = v4;
  a2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = (_QWORD *)a1[6];
  if (v7)
  {
    if (v7 == a1 + 3)
    {
      a2[6] = a2 + 3;
      return (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[6] + 24))(a1[6]);
    }
    else
    {
      result = (*(uint64_t (**)(_QWORD))(*v7 + 16))(a1[6]);
      a2[6] = result;
    }
  }
  else
  {
    result = 0;
    a2[6] = 0;
  }
  return result;
}

void sub_2235ABB00(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235ABB18(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 48);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
}

void sub_2235ABB78(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  v2 = __p + 24;
  v3 = (char *)*((_QWORD *)__p + 6);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  operator delete(__p);
}

void sub_2235ABBD4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_2235AB60C((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_22354BAD4(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235ABC7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_22354BAD4(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235ABCC8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5"
                     "_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMesh"
                                "RequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235ABD34()
{
  return &unk_24EC4CE38;
}

_QWORD *sub_2235ABD40(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4CE58;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2235ABDC8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4CE58;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_2235ABE60(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4CE58;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_2235ABEF0(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4CE58;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235ABF60(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_2235ABFE0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_2235AC05C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_2235AB60C(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_22354BAD4((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235AC338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235AC364(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x2235AC170);
    JUMPOUT(0x2235AC140);
  }
  sub_2233236D4(3u);
}

void sub_2235AC3C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235AC3EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_22354BAD4(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235AC4D8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5"
                     "_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NS"
                     "t3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMesh"
                                "RequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchI"
                                "ZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235AC544()
{
  return &unk_24EC4CEB8;
}

_QWORD *sub_2235AC550(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4CED8;
  v2 = (std::__shared_weak_count *)a1[8];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = a1 + 3;
      v6 = (_QWORD *)a1[6];
      if (v6 != a1 + 3)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = a1 + 3;
  v6 = (_QWORD *)a1[6];
  if (v6 == a1 + 3)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_2235AC600(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4CED8;
  v2 = (std::__shared_weak_count *)a1[8];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (_QWORD *)a1[6];
    if (v6 != a1 + 3)
      goto LABEL_6;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (_QWORD *)a1[6];
    if (v6 != a1 + 3)
    {
LABEL_6:
      if (!v6)
        goto LABEL_11;
      v7 = 5;
LABEL_10:
      (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
      v8 = (std::__shared_weak_count *)a1[2];
      if (v8)
        std::__shared_weak_count::__release_weak(v8);
      JUMPOUT(0x227684CE8);
    }
  }
  v7 = 4;
  v6 = v5;
  goto LABEL_10;
}

_QWORD *sub_2235AC6C0(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = operator new(0x48uLL);
  v4 = a1[1];
  v3 = a1[2];
  *v2 = &off_24EC4CED8;
  v2[1] = v4;
  v2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[6];
  if (!v7)
    goto LABEL_7;
  if ((_QWORD *)v7 != a1 + 3)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
LABEL_7:
    v2[6] = v7;
    goto LABEL_9;
  }
  v2[6] = v2 + 3;
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
LABEL_9:
  v8 = a1[8];
  v2[7] = a1[7];
  v2[8] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return v2;
}

void sub_2235AC774(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235AC794(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC4CED8;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[6];
  if (!result)
    goto LABEL_7;
  if ((_QWORD *)result != a1 + 3)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
LABEL_7:
    a2[6] = result;
    goto LABEL_9;
  }
  a2[6] = a2 + 3;
  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[6] + 24))(a1[6]);
LABEL_9:
  v9 = a1[8];
  a2[7] = a1[7];
  a2[8] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235AC840(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235AC858(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)a1[8];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = a1 + 3;
      v6 = (_QWORD *)a1[6];
      if (v6 != a1 + 3)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = a1 + 3;
  v6 = (_QWORD *)a1[6];
  if (v6 == a1 + 3)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
}

void sub_2235AC900(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = __p + 24;
      v6 = (char *)*((_QWORD *)__p + 6);
      if (v6 != __p + 24)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = __p + 24;
  v6 = (char *)*((_QWORD *)__p + 6);
  if (v6 == __p + 24)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  operator delete(__p);
}

void sub_2235AC9A4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[7];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_2235AB60C((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_22354BAD4((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_2235ACAB4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_2235ACB2C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x2235ACB60);
  JUMPOUT(0x2235ACB90);
}

uint64_t sub_2235ACB98(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5"
                     "_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMesh"
                                "RequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235ACC04()
{
  return &unk_24EC4CF38;
}

_QWORD *sub_2235ACC10(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4CF58;
  v2 = a1[4];
  a1[3] = &off_24EC2B428;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235ACC68(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4CF58;
  v2 = a1[4];
  a1[3] = &off_24EC2B428;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235ACCD0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC4CF58;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B428;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_2235ACD48(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235ACD68(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC4CF58;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B428;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_2235ACDD0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235ACDE8(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B428;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235ACE38(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B428;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235ACE84(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B428;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235ACF38(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235ACF74(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_"
                     "36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshR"
                                "equestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235ACFE0()
{
  return &unk_24EC4CFB8;
}

_QWORD *sub_2235ACFEC(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4CFD8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235AD024(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4CFD8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235AD06C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4CFD8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_2235AD0BC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4CFD8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235AD0EC(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235AD0FC(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235AD128(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235AD1BC(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235AD1F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_"
                     "36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshR"
                                "equestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12Chann"
                                "elInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235AD264()
{
  return &unk_24EC4D038;
}

_QWORD *sub_2235AD270(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4D058;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235AD2A8(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4D058;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235AD2F0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4D058;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235AD348(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4D058;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235AD380(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235AD390(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235AD3BC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_2235AD538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235AD5A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5"
                     "_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMesh"
                                "RequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235AD614()
{
  return &unk_24EC4D0B8;
}

_QWORD *sub_2235AD620(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4D0D8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235AD658(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4D0D8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235AD6A0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4D0D8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235AD6F8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4D0D8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235AD730(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235AD740(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235AD76C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235AD824(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235AD870(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5"
                     "_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMesh"
                                "RequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS5_36MeshingNodeGlobalOccupancyMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235AD8DC()
{
  return &unk_24EC4D138;
}

void sub_2235AD8EC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235AD910(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2235AD928(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng37MeshingNodeGlobalOccup"
                     "ancyMeshRequestENS7_36MeshingNodeGlobalOccupancyMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng37MeshingNode"
                                "GlobalOccupancyMeshRequestENS7_36MeshingNodeGlobalOccupancyMeshResultEvS9_Lb0EEEE27__sha"
                                "red_ptr_default_deleteISA_SA_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS7_36MeshingNodeGlobalOccupancyMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng37MeshingNodeGlobalOccupancyMeshRequestENS7_36MeshingNodeGlobalOccupancyMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_2235AD998(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235AD9C4(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235ADA00@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4D1A8;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_2235ADA68(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235ADAF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235ADB0C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235ADB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235ADBB0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235ADC74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235ADC88(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235ADD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235ADD60(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_2235ADE04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235ADE1C(uint64_t a1)
{
  sub_2235AF970(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235ADE40(_QWORD *a1, _QWORD *a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  std::__shared_weak_count_vtbl *v6;
  uint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *p_shared_weak_owners;
  unint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  std::__shared_weak_count_vtbl **v23;
  unint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  std::mutex **v34;
  uint64_t **v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  __int128 *v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t v55;
  std::__shared_weak_count *v56[2];
  _QWORD v57[3];
  _QWORD *v58;
  __int128 v59;
  uint64_t v60;
  __int128 *v61;
  _BYTE v62[24];
  _BYTE *v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v4 = (std::__shared_weak_count *)operator new(0x38uLL);
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__shared_weak_owners_ = 0;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4D410;
    v6 = (std::__shared_weak_count_vtbl *)&v4[1];
    v7 = a2[3];
    if (v7)
    {
      if ((_QWORD *)v7 == a2)
      {
        v4[2].__vftable = v6;
        (*(void (**)(_QWORD *, std::__shared_weak_count_vtbl *))(*a2 + 24))(a2, v6);
        goto LABEL_18;
      }
      v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    }
    v4[2].__vftable = (std::__shared_weak_count_vtbl *)v7;
LABEL_18:
    p_shared_weak_owners = (unint64_t *)&v4->__shared_weak_owners_;
    do
      v18 = __ldxr(p_shared_weak_owners);
    while (__stxr(v18 + 1, p_shared_weak_owners));
    v19 = (uint64_t *)a1[18];
    v20 = (_QWORD *)operator new();
    *v20 = v19 + 7;
    std::mutex::lock((std::mutex *)(v19 + 7));
    *(_QWORD *)&v59 = v20;
    *((_QWORD *)&v59 + 1) = v19;
    if (!*((_BYTE *)v19 + 48))
      sub_22324A974();
    v21 = v19[4];
    v22 = *v19;
    v23 = (std::__shared_weak_count_vtbl **)(*v19 + 16 * v21);
    do
      v24 = __ldxr(p_shared_owners);
    while (__stxr(v24 + 1, p_shared_owners));
    *v23 = v6;
    v25 = v22 + 16 * v21;
    v26 = *(std::__shared_weak_count **)(v25 + 8);
    *(_QWORD *)(v25 + 8) = v4;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    v29 = (v19[1] - *v19) >> 4;
    v30 = v19[5];
    v31 = v19[4] + 1;
    if (v31 >= v29)
      v32 = (v19[1] - *v19) >> 4;
    else
      v32 = 0;
    v19[4] = v31 - v32;
    if (v30 == v29)
    {
      v33 = v19[3] + 1;
      if (v33 < v29)
        v29 = 0;
      v19[3] = v33 - v29;
      v34 = (std::mutex **)v59;
      if (!(_QWORD)v59)
      {
LABEL_38:
        v35 = (uint64_t **)a1[9];
        v59 = 0uLL;
        v36 = (std::__shared_weak_count *)a1[5];
        if (v36)
        {
          v37 = std::__shared_weak_count::lock(v36);
          if (v37)
          {
            v38 = v37;
            v39 = a1[4];
            v40 = (unint64_t *)&v37->__shared_weak_owners_;
            do
              v41 = __ldxr(v40);
            while (__stxr(v41 + 1, v40));
            *(_QWORD *)&v59 = v39;
            *((_QWORD *)&v59 + 1) = v37;
            v42 = (unint64_t *)&v37->__shared_owners_;
            do
              v43 = __ldaxr(v42);
            while (__stlxr(v43 - 1, v42));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v38);
            }
          }
          else
          {
            v59 = 0uLL;
          }
        }
        v44 = (char *)operator new(0x30uLL);
        *(_QWORD *)v44 = &off_24EC4D460;
        *(_OWORD *)(v44 + 8) = v59;
        v59 = 0uLL;
        *((_QWORD *)v44 + 3) = v6;
        *((_QWORD *)v44 + 4) = v4;
        v60 = 0;
        v61 = 0;
        v63 = v44;
        sub_2245022E4(*v35, (uint64_t)v62);
        v45 = v63;
        if (v63 == v62)
        {
          v46 = 4;
          v45 = v62;
        }
        else
        {
          if (!v63)
            goto LABEL_52;
          v46 = 5;
        }
        (*(void (**)(_QWORD *))(*v45 + 8 * v46))(v45);
LABEL_52:
        if (v4)
        {
          v47 = (unint64_t *)&v4->__shared_owners_;
          do
            v48 = __ldaxr(v47);
          while (__stlxr(v48 - 1, v47));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
            std::__shared_weak_count::__release_weak(v4);
          }
        }
        return;
      }
    }
    else
    {
      v19[5] = v30 + 1;
      v34 = (std::mutex **)v59;
      if (!(_QWORD)v59)
        goto LABEL_38;
    }
    std::mutex::unlock(*v34);
    MEMORY[0x227684CE8](v34, 0x20C4093837F09);
    goto LABEL_38;
  }
  v8 = (uint64_t **)a1[9];
  *(_OWORD *)v56 = 0uLL;
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    if (v10)
    {
      v11 = v10;
      v12 = (std::__shared_weak_count *)a1[4];
      v13 = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v56[0] = v12;
      v56[1] = v10;
      v15 = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      *(_OWORD *)v56 = 0uLL;
    }
  }
  v49 = v57;
  v50 = a2[3];
  if (!v50)
    goto LABEL_61;
  if ((_QWORD *)v50 != a2)
  {
    v50 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 16))(v50);
LABEL_61:
    v58 = (_QWORD *)v50;
    goto LABEL_63;
  }
  v58 = v57;
  (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v57);
LABEL_63:
  v61 = 0;
  v51 = (char *)operator new(0x38uLL);
  v52 = (__int128 *)v51;
  *(_QWORD *)v51 = &off_24EC4D4E0;
  *(_OWORD *)(v51 + 8) = *(_OWORD *)v56;
  if (v58)
  {
    if (v58 == v57)
    {
      *((_QWORD *)v51 + 6) = v51 + 24;
      (*(void (**)(_QWORD *))(v57[0] + 24))(v57);
    }
    else
    {
      *((_QWORD *)v51 + 6) = v58;
      v58 = 0;
    }
  }
  else
  {
    *((_QWORD *)v51 + 6) = 0;
  }
  v61 = v52;
  sub_2245022E4(*v8, (uint64_t)&v59);
  v53 = v61;
  if (v61 == &v59)
  {
    v54 = 4;
    v53 = &v59;
    goto LABEL_72;
  }
  if (v61)
  {
    v54 = 5;
LABEL_72:
    (*(void (**)(void))(*(_QWORD *)v53 + 8 * v54))();
  }
  if (v58 == v57)
  {
    v55 = 4;
  }
  else
  {
    if (!v58)
      return;
    v55 = 5;
    v49 = v58;
  }
  (*(void (**)(_QWORD *))(*v49 + 8 * v55))(v49);
}

void sub_2235AE350(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2235AE3E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;

  v20 = *(_QWORD **)(v18 - 64);
  if (v20 == v17)
  {
    v21 = 4;
    v20 = (_QWORD *)(v18 - 88);
  }
  else
  {
    if (!v20)
      goto LABEL_6;
    v21 = 5;
  }
  (*(void (**)(void))(*v20 + 8 * v21))();
LABEL_6:
  sub_223322894((uint64_t)&a17);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235AE434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::mutex **a17)
{
  std::__shared_weak_count *v17;

  sub_223322848(&a17);
  std::__shared_weak_count::__release_weak(v17);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235AE458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  uint64_t v10;

  MEMORY[0x227684CE8](v10, 0x20C4093837F09);
  std::__shared_weak_count::__release_weak(v9);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235AE48C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;

  std::__shared_weak_count::__release_weak(v9);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235AE4AC(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235AE4BC(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235AE4C8(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_2235AE4D8(_QWORD *a1, _QWORD *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  std::__shared_weak_count_vtbl *v11;
  uint64_t v12;
  uint64_t **v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_weak_owners;
  unint64_t v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  std::__shared_weak_count_vtbl **v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  std::mutex **v41;
  uint64_t **v42;
  std::__shared_weak_count *v43;
  std::__shared_weak_count *v44;
  std::__shared_weak_count *v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  char *v51;
  std::string *v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  std::__shared_weak_count *v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  __int128 *v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  __int128 *v73;
  std::string *v74;
  std::runtime_error *exception;
  std::runtime_error *v76;
  _QWORD *v77;
  _QWORD *v78;
  std::__shared_weak_count *v79;
  std::runtime_error v80;
  std::__shared_weak_count *v81;
  std::__shared_weak_count *v82;
  std::__shared_weak_count *v83[2];
  _QWORD v84[3];
  _QWORD *v85;
  _QWORD *v86;
  std::__shared_weak_count *v87;
  __int128 v88;
  _QWORD *v89;
  __int128 *v90;
  _QWORD v91[3];
  std::string v92;
  std::string *v93;
  uint64_t v94;

  v94 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v88 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v88 + 1) = 45;
    v72 = (_QWORD *)a1[6];
    v71 = a1 + 6;
    v70 = v72;
    v73 = (__int128 *)*((unsigned __int8 *)v71 + 23);
    if ((char)v73 < 0)
      v73 = (__int128 *)v71[1];
    else
      v70 = v71;
    v89 = v70;
    v90 = v73;
    sub_2231A9820((uint64_t)&v88, (uint64_t)v91, 0, 0, &v92);
    if ((v92.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v74 = &v92;
    else
      v74 = (std::string *)v92.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v80, (const char *)v74);
    v80.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v76 = std::runtime_error::runtime_error(exception, &v80);
    v76->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v76, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v13 = (uint64_t **)a1[9];
    v83[0] = 0;
    v83[1] = 0;
    v14 = (std::__shared_weak_count *)a1[5];
    if (!v14)
      goto LABEL_20;
    v15 = std::__shared_weak_count::lock(v14);
    if (v15)
    {
      v16 = v15;
      v17 = (std::__shared_weak_count *)a1[4];
      p_shared_weak_owners = (unint64_t *)&v15->__shared_weak_owners_;
      do
        v19 = __ldxr(p_shared_weak_owners);
      while (__stxr(v19 + 1, p_shared_weak_owners));
      v83[0] = v17;
      v83[1] = v15;
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (v21)
      {
LABEL_20:
        v22 = v84;
        v23 = a2[3];
        if (!v23)
          goto LABEL_23;
        goto LABEL_21;
      }
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v16);
      v22 = v84;
      v23 = a2[3];
      if (!v23)
        goto LABEL_23;
    }
    else
    {
      v83[0] = 0;
      v83[1] = 0;
      v22 = v84;
      v23 = a2[3];
      if (!v23)
        goto LABEL_23;
    }
LABEL_21:
    if ((_QWORD *)v23 == a2)
    {
      v85 = v84;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v84);
LABEL_72:
      v59 = (std::__shared_weak_count *)operator new(0x20uLL);
      v59->__shared_owners_ = 0;
      v59->__shared_weak_owners_ = 0;
      v59->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47778;
      v59[1].__vftable = *a3;
      v60 = &v59[1].__vftable;
      *a3 = 0;
      v86 = &v59[1].__vftable;
      v87 = v59;
      v90 = 0;
      v61 = (char *)operator new(0x48uLL);
      v62 = v61;
      *(_QWORD *)v61 = &off_24EC4D5E0;
      *(_OWORD *)(v61 + 8) = *(_OWORD *)v83;
      v83[0] = 0;
      v83[1] = 0;
      if (v85)
      {
        if (v85 == v84)
        {
          *((_QWORD *)v61 + 6) = v61 + 24;
          (*(void (**)(_QWORD *))(v84[0] + 24))(v84);
          v60 = v86;
          v59 = v87;
        }
        else
        {
          *((_QWORD *)v61 + 6) = v85;
          v85 = 0;
        }
      }
      else
      {
        *((_QWORD *)v61 + 6) = 0;
      }
      *((_QWORD *)v62 + 7) = v60;
      *((_QWORD *)v62 + 8) = v59;
      v86 = 0;
      v87 = 0;
      v90 = (__int128 *)v62;
      sub_2245022E4(*v13, (uint64_t)&v88);
      v63 = v90;
      if (v90 == &v88)
      {
        v64 = 4;
        v63 = &v88;
      }
      else
      {
        if (!v90)
        {
LABEL_82:
          v65 = v87;
          if (!v87)
            goto LABEL_86;
          v66 = (unint64_t *)&v87->__shared_owners_;
          do
            v67 = __ldaxr(v66);
          while (__stlxr(v67 - 1, v66));
          if (!v67)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
            v68 = v85;
            if (v85 != v84)
              goto LABEL_87;
          }
          else
          {
LABEL_86:
            v68 = v85;
            if (v85 != v84)
            {
LABEL_87:
              if (!v68)
                goto LABEL_92;
              v69 = 5;
              v22 = v68;
LABEL_91:
              (*(void (**)(_QWORD *))(*v22 + 8 * v69))(v22);
LABEL_92:
              v58 = v83[1];
              if (!v83[1])
                return;
              goto LABEL_93;
            }
          }
          v69 = 4;
          goto LABEL_91;
        }
        v64 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v63 + 8 * v64))();
      goto LABEL_82;
    }
    v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 16))(v23);
LABEL_23:
    v85 = (_QWORD *)v23;
    goto LABEL_72;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47778;
  v6[1].__vftable = *a3;
  v79 = v6;
  v77 = &v6[1].__vftable;
  v78 = &v6->__vftable;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = (std::__shared_weak_count *)operator new(0x38uLL);
  v9->__shared_owners_ = 0;
  v10 = (unint64_t *)&v9->__shared_owners_;
  v9->__shared_weak_owners_ = 0;
  v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4D410;
  v11 = (std::__shared_weak_count_vtbl *)&v9[1];
  v12 = a2[3];
  if (v12)
  {
    if ((_QWORD *)v12 == a2)
    {
      v9[2].__vftable = v11;
      (*(void (**)(_QWORD *, std::__shared_weak_count_vtbl *))(*a2 + 24))(a2, v11);
      goto LABEL_25;
    }
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
  }
  v9[2].__vftable = (std::__shared_weak_count_vtbl *)v12;
LABEL_25:
  v81 = v9 + 1;
  v82 = v9;
  v24 = (unint64_t *)&v9->__shared_weak_owners_;
  do
    v25 = __ldxr(v24);
  while (__stxr(v25 + 1, v24));
  v26 = (uint64_t *)a1[18];
  v27 = (_QWORD *)operator new();
  *v27 = v26 + 7;
  std::mutex::lock((std::mutex *)(v26 + 7));
  *(_QWORD *)&v88 = v27;
  *((_QWORD *)&v88 + 1) = v26;
  if (!*((_BYTE *)v26 + 48))
    sub_22324A974();
  v28 = v26[4];
  v29 = *v26;
  v30 = (std::__shared_weak_count_vtbl **)(*v26 + 16 * v28);
  do
    v31 = __ldxr(v10);
  while (__stxr(v31 + 1, v10));
  *v30 = v11;
  v32 = v29 + 16 * v28;
  v33 = *(std::__shared_weak_count **)(v32 + 8);
  *(_QWORD *)(v32 + 8) = v9;
  if (v33)
  {
    v34 = (unint64_t *)&v33->__shared_owners_;
    do
      v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  v36 = (v26[1] - *v26) >> 4;
  v37 = v26[5];
  v38 = v26[4] + 1;
  if (v38 >= v36)
    v39 = (v26[1] - *v26) >> 4;
  else
    v39 = 0;
  v26[4] = v38 - v39;
  if (v37 != v36)
  {
    v26[5] = v37 + 1;
    v41 = (std::mutex **)v88;
    if (!(_QWORD)v88)
      goto LABEL_45;
    goto LABEL_44;
  }
  v40 = v26[3] + 1;
  if (v40 < v36)
    v36 = 0;
  v26[3] = v40 - v36;
  v41 = (std::mutex **)v88;
  if ((_QWORD)v88)
  {
LABEL_44:
    std::mutex::unlock(*v41);
    MEMORY[0x227684CE8](v41, 0x20C4093837F09);
  }
LABEL_45:
  v42 = (uint64_t **)a1[9];
  v88 = 0uLL;
  v43 = (std::__shared_weak_count *)a1[5];
  if (v43)
  {
    v44 = std::__shared_weak_count::lock(v43);
    if (v44)
    {
      v45 = v44;
      v46 = a1[4];
      v47 = (unint64_t *)&v44->__shared_weak_owners_;
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 1, v47));
      *(_QWORD *)&v88 = v46;
      *((_QWORD *)&v88 + 1) = v44;
      v49 = (unint64_t *)&v44->__shared_owners_;
      do
        v50 = __ldaxr(v49);
      while (__stlxr(v50 - 1, v49));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
        std::__shared_weak_count::__release_weak(v45);
      }
    }
    else
    {
      v88 = 0uLL;
    }
  }
  v51 = (char *)operator new(0x38uLL);
  *(_QWORD *)v51 = &off_24EC4D560;
  *(_OWORD *)(v51 + 8) = v88;
  v88 = 0uLL;
  *((_QWORD *)v51 + 3) = v11;
  *((_QWORD *)v51 + 4) = v9;
  v89 = 0;
  v90 = 0;
  *((_QWORD *)v51 + 5) = v77;
  *((_QWORD *)v51 + 6) = v78;
  v91[0] = 0;
  v91[1] = 0;
  v93 = (std::string *)v51;
  sub_2245022E4(*v42, (uint64_t)&v92);
  v52 = v93;
  if (v93 == &v92)
  {
    v53 = 4;
    v52 = &v92;
    goto LABEL_58;
  }
  if (v93)
  {
    v53 = 5;
LABEL_58:
    (*(void (**)(void))(v52->__r_.__value_.__r.__words[0] + 8 * v53))();
  }
  if (v82)
  {
    v54 = &v82->__shared_owners_;
    do
      v55 = __ldaxr((unint64_t *)v54);
    while (__stlxr(v55 - 1, (unint64_t *)v54));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
      std::__shared_weak_count::__release_weak(v82);
    }
  }
  if (v79)
  {
    v56 = (unint64_t *)&v79->__shared_owners_;
    do
      v57 = __ldaxr(v56);
    while (__stlxr(v57 - 1, v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
      v58 = v79;
LABEL_93:
      std::__shared_weak_count::__release_weak(v58);
    }
  }
}

void sub_2235AEC4C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2235AEC5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235AEC64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::exception_ptr a26)
{
  std::__assoc_sub_state **v26;
  uint64_t v27;
  std::__assoc_sub_state *v28;
  std::exception_ptr v29;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v28 = *v26;
    if (*v26)
    {
      std::exception_ptr::exception_ptr(&a26, &a15);
      v29.__ptr_ = &a26;
      std::__assoc_sub_state::set_exception(v28, v29);
      std::exception_ptr::~exception_ptr(&a26);
      std::exception_ptr::~exception_ptr(&a15);
      std::runtime_error::~runtime_error(&a14);
      if (*(char *)(v27 - 81) < 0)
        operator delete(*(void **)(v27 - 104));
      JUMPOUT(0x2235AEB34);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_2235AECD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::exception_ptr a26)
{
  uint64_t v26;

  std::exception_ptr::~exception_ptr(&a15);
  std::runtime_error::~runtime_error(&a14);
  if (*(char *)(v26 - 81) < 0)
  {
    operator delete(*(void **)(v26 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235AED28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,char *a30)
{
  char *v30;
  char *v32;
  uint64_t v33;

  v32 = a30;
  if (a30 == v30)
  {
    v33 = 4;
    v32 = &a27;
  }
  else
  {
    if (!a30)
    {
      sub_2235A26F4(&a19);
      _Unwind_Resume(a1);
    }
    v33 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v32 + 8 * v33))();
  sub_2235A26F4(&a19);
  _Unwind_Resume(a1);
}

void sub_2235AED7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24)
{
  _QWORD *v24;
  uint64_t v26;

  if (a24 == v24)
  {
    v26 = 4;
  }
  else
  {
    if (!a24)
      goto LABEL_6;
    v26 = 5;
    v24 = a24;
  }
  (*(void (**)(_QWORD *))(*v24 + 8 * v26))(v24);
LABEL_6:
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2235AEDF0);
}

void sub_2235AEDC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  std::__shared_weak_count *v12;
  void *v14;

  std::__shared_weak_count::~__shared_weak_count(v12);
  operator delete(v14);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235AEDF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;

  v30 = *(_QWORD **)(v28 - 80);
  if (v30 == v27)
  {
    v31 = 4;
    v30 = (_QWORD *)(v28 - 104);
  }
  else
  {
    if (!v30)
      goto LABEL_6;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_6:
  sub_22332429C(&a27);
  sub_223167354((uint64_t)&a17);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235AEE98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2235AEEB4(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_2235AEF28(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC4D660;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B460;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_2235AF058(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2235AF0CC(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4D6E0;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_2235AF1DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2235AF240@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4D760;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235AF458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235AF520@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4D7E0;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235AF738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235AF800(uint64_t a1)
{
  return sub_2235AF970(a1 - 16);
}

void sub_2235AF808(uint64_t a1)
{
  sub_2235AF970(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235AF830(uint64_t a1, uint64_t a2)
{
  return sub_2235AEF28((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235AF838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235AF240((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235AF840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235AF520((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_2235AF848(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_2235AF850(uint64_t a1)
{
  return sub_2235AF970(a1 - 24);
}

void sub_2235AF858(uint64_t a1)
{
  sub_2235AF970(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235AF880(uint64_t a1)
{
  return sub_2235AF0CC((_QWORD *)(a1 - 24));
}

uint64_t sub_2235AF888(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235AF890(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2235AF8F8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235AF960(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235AF970(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4D220;
  *(_QWORD *)(a1 + 16) = &unk_24EC4D298;
  *(_QWORD *)(a1 + 24) = &unk_24EC4D2D8;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

void sub_2235AFB70(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4D410;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2235AFB80(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4D410;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235AFBB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 24;
  result = *(_QWORD *)(a1 + 48);
  if (result == v1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

_QWORD *sub_2235AFBF0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4D460;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235AFC34(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4D460;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235AFC88(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4D460;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_2235AFCF8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4D460;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_2235AFD48(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235AFD84(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235AFDBC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_2235B00E0((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_223550CF0(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235AFF84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_223550CF0(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B0068(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_"
                     "35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0"
                     "_E_EEvSB_SC_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshR"
                                "equestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZN"
                                "KS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B00D4()
{
  return &unk_24EC4D4C0;
}

_QWORD *sub_2235B00E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  char *v9;
  char *v10;
  void *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  _QWORD *result;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD *v18;
  void *__p;
  char *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v17, v6, a2);
  v7 = a1 + 1;
  for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
    (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v17);
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_223550BC8(*(_QWORD *)a3, (uint64_t)v17);
  }
  v9 = (char *)__p;
  if (__p)
  {
    v10 = v20;
    v11 = __p;
    if (v20 != __p)
    {
      do
      {
        v12 = (std::__shared_weak_count *)*((_QWORD *)v10 - 12);
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v14 = __ldaxr(p_shared_owners);
          while (__stlxr(v14 - 1, p_shared_owners));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        v10 -= 120;
      }
      while (v10 != v9);
      v11 = __p;
    }
    v20 = v9;
    operator delete(v11);
  }
  result = v18;
  if (v18 == v17)
  {
    v16 = 4;
    result = v17;
  }
  else
  {
    if (!v18)
      return result;
    v16 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
}

void sub_2235B0290(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  uint64_t *v5;
  uint64_t v6;
  va_list v7;
  uint64_t v8;
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;
  va_list v13;
  va_list va2;
  uint64_t v15;
  uint64_t v16;
  va_list va3;

  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v11 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v13 = va_arg(va3, va_list);
  v15 = va_arg(va3, _QWORD);
  v16 = va_arg(va3, _QWORD);
  sub_223540AB8((uint64_t *)va3);
  if (a2 == 1)
  {
    v5 = (uint64_t *)__cxa_begin_catch(a1);
    v6 = *v5;
    v11 = *(_QWORD *)(*(_QWORD *)(*v5 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    v9 = (*(uint64_t (**)(void))(v6 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", va1, "\n", "message: ", va, "\n");
    if (v16 >= 0)
      va_copy(v7, va2);
    else
      v7 = v13;
    if (v16 >= 0)
      v8 = HIBYTE(v16);
    else
      v8 = v15;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v7, v8, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_2235B0358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2235B037C(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x2235B0384);
  sub_22316DC48(a1);
}

_QWORD *sub_2235B0394(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4D4E0;
  v2 = a1 + 3;
  v3 = (_QWORD *)a1[6];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_2235B03FC(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4D4E0;
  v2 = a1 + 3;
  v3 = (_QWORD *)a1[6];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B0474(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;

  v2 = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *v2 = &off_24EC4D4E0;
  v2[1] = v4;
  v2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[6];
  if (!v7)
    goto LABEL_7;
  if ((_QWORD *)v7 != a1 + 3)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
LABEL_7:
    v2[6] = v7;
    return v2;
  }
  v2[6] = v2 + 3;
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
  return v2;
}

void sub_2235B0514(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235B0534(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t result;

  v4 = a1[1];
  v3 = a1[2];
  *a2 = &off_24EC4D4E0;
  a2[1] = v4;
  a2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = (_QWORD *)a1[6];
  if (v7)
  {
    if (v7 == a1 + 3)
    {
      a2[6] = a2 + 3;
      return (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[6] + 24))(a1[6]);
    }
    else
    {
      result = (*(uint64_t (**)(_QWORD))(*v7 + 16))(a1[6]);
      a2[6] = result;
    }
  }
  else
  {
    result = 0;
    a2[6] = 0;
  }
  return result;
}

void sub_2235B05D4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235B05EC(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 48);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
}

void sub_2235B064C(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;

  v2 = __p + 24;
  v3 = (char *)*((_QWORD *)__p + 6);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
LABEL_6:
  v5 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v5)
    std::__shared_weak_count::__release_weak(v5);
  operator delete(__p);
}

void sub_2235B06A8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_2235B00E0((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_223550CF0(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B0750(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_223550CF0(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B079C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_"
                     "35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshR"
                                "equestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B0808()
{
  return &unk_24EC4D540;
}

_QWORD *sub_2235B0814(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4D560;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2235B089C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4D560;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_2235B0934(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4D560;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_2235B09C4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4D560;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235B0A34(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_2235B0AB4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_2235B0B30(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_2235B00E0(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_223550CF0((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235B0E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235B0E38(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x2235B0C44);
    JUMPOUT(0x2235B0C14);
  }
  sub_2233236D4(3u);
}

void sub_2235B0E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235B0EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_223550CF0(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235B0FAC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_"
                     "35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3"
                     "__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshR"
                                "equestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZN"
                                "KS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B1018()
{
  return &unk_24EC4D5C0;
}

_QWORD *sub_2235B1024(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4D5E0;
  v2 = (std::__shared_weak_count *)a1[8];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = a1 + 3;
      v6 = (_QWORD *)a1[6];
      if (v6 != a1 + 3)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = a1 + 3;
  v6 = (_QWORD *)a1[6];
  if (v6 == a1 + 3)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_2235B10D4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4D5E0;
  v2 = (std::__shared_weak_count *)a1[8];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (_QWORD *)a1[6];
    if (v6 != a1 + 3)
      goto LABEL_6;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (_QWORD *)a1[6];
    if (v6 != a1 + 3)
    {
LABEL_6:
      if (!v6)
        goto LABEL_11;
      v7 = 5;
LABEL_10:
      (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
      v8 = (std::__shared_weak_count *)a1[2];
      if (v8)
        std::__shared_weak_count::__release_weak(v8);
      JUMPOUT(0x227684CE8);
    }
  }
  v7 = 4;
  v6 = v5;
  goto LABEL_10;
}

_QWORD *sub_2235B1194(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = operator new(0x48uLL);
  v4 = a1[1];
  v3 = a1[2];
  *v2 = &off_24EC4D5E0;
  v2[1] = v4;
  v2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[6];
  if (!v7)
    goto LABEL_7;
  if ((_QWORD *)v7 != a1 + 3)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
LABEL_7:
    v2[6] = v7;
    goto LABEL_9;
  }
  v2[6] = v2 + 3;
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
LABEL_9:
  v8 = a1[8];
  v2[7] = a1[7];
  v2[8] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return v2;
}

void sub_2235B1248(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235B1268(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC4D5E0;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[6];
  if (!result)
    goto LABEL_7;
  if ((_QWORD *)result != a1 + 3)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
LABEL_7:
    a2[6] = result;
    goto LABEL_9;
  }
  a2[6] = a2 + 3;
  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[6] + 24))(a1[6]);
LABEL_9:
  v9 = a1[8];
  a2[7] = a1[7];
  a2[8] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235B1314(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235B132C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)a1[8];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = a1 + 3;
      v6 = (_QWORD *)a1[6];
      if (v6 != a1 + 3)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = a1 + 3;
  v6 = (_QWORD *)a1[6];
  if (v6 == a1 + 3)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
}

void sub_2235B13D4(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = __p + 24;
      v6 = (char *)*((_QWORD *)__p + 6);
      if (v6 != __p + 24)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = __p + 24;
  v6 = (char *)*((_QWORD *)__p + 6);
  if (v6 == __p + 24)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  operator delete(__p);
}

void sub_2235B1478(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[7];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_2235B00E0((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_223550CF0((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_2235B1588(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_2235B1600(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x2235B1634);
  JUMPOUT(0x2235B1664);
}

uint64_t sub_2235B166C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_"
                     "35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshR"
                                "equestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B16D8()
{
  return &unk_24EC4D640;
}

_QWORD *sub_2235B16E4(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4D660;
  v2 = a1[4];
  a1[3] = &off_24EC2B460;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235B173C(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4D660;
  v2 = a1[4];
  a1[3] = &off_24EC2B460;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B17A4(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC4D660;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B460;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_2235B181C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235B183C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC4D660;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B460;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_2235B18A4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235B18BC(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B460;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235B190C(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B460;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235B1958(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B460;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B1A0C(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B1A48(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_3"
                     "5MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRe"
                                "questENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B1AB4()
{
  return &unk_24EC4D6C0;
}

_QWORD *sub_2235B1AC0(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4D6E0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235B1AF8(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4D6E0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B1B40(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4D6E0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_2235B1B90(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4D6E0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235B1BC0(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235B1BD0(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235B1BFC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B1C90(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B1CCC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_3"
                     "5MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRe"
                                "questENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B1D38()
{
  return &unk_24EC4D740;
}

_QWORD *sub_2235B1D44(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4D760;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235B1D7C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4D760;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B1DC4(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4D760;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235B1E1C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4D760;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235B1E54(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235B1E64(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235B1E90(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_2235B200C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B207C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_"
                     "35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshR"
                                "equestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B20E8()
{
  return &unk_24EC4D7C0;
}

_QWORD *sub_2235B20F4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4D7E0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235B212C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4D7E0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B2174(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4D7E0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235B21CC(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4D7E0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235B2204(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235B2214(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235B2240(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B22F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B2344(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_"
                     "35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshR"
                                "equestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS5_35MeshingNodeOccupancyBlockMeshResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B23B0()
{
  return &unk_24EC4D840;
}

void sub_2235B23C0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235B23E4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2235B23FC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng36MeshingNodeOccupancyBl"
                     "ockMeshRequestENS7_35MeshingNodeOccupancyBlockMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng36MeshingNode"
                                "OccupancyBlockMeshRequestENS7_35MeshingNodeOccupancyBlockMeshResultEvS9_Lb0EEEE27__share"
                                "d_ptr_default_deleteISA_SA_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS7_35MeshingNodeOccupancyBlockMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng36MeshingNodeOccupancyBlockMeshRequestENS7_35MeshingNodeOccupancyBlockMeshResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_2235B246C(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235B2498(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B24D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4D8B0;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_2235B253C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B25CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235B25E0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B2670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235B2684(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235B2748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235B275C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235B2820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235B2834(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_2235B28D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235B28F0(uint64_t a1)
{
  sub_2235B41F8(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235B2914(_QWORD *a1, std::__shared_weak_count_vtbl **a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  uint64_t v8;
  _QWORD *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *p_shared_weak_owners;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  std::mutex **v28;
  uint64_t **v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  std::__shared_weak_count *v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t **v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  std::__shared_weak_count_vtbl *v52;
  std::__shared_weak_count_vtbl *v53;
  unint64_t *v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 *v60;
  uint64_t v61;
  __int128 v62;
  std::__shared_weak_count *v63;
  __int128 v64;
  uint64_t v65;
  __int128 *v66;
  _BYTE v67[24];
  _BYTE *v68;
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v4 = (uint64_t *)a1[18];
  if (v4)
  {
    v5 = (std::__shared_weak_count *)operator new(0x28uLL);
    v6 = v5;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__shared_weak_owners_ = 0;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4DB18;
    v8 = (uint64_t)a2[1];
    v5[1].__vftable = *a2;
    v9 = &v5[1].__vftable;
    v5[1].__shared_owners_ = v8;
    if (v8)
    {
      v10 = (unint64_t *)(v8 + 8);
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
      v4 = (uint64_t *)a1[18];
    }
    v63 = v5;
    p_shared_weak_owners = (unint64_t *)&v5->__shared_weak_owners_;
    do
      v13 = __ldxr(p_shared_weak_owners);
    while (__stxr(v13 + 1, p_shared_weak_owners));
    v14 = (_QWORD *)operator new();
    *v14 = v4 + 7;
    std::mutex::lock((std::mutex *)(v4 + 7));
    *(_QWORD *)&v64 = v14;
    *((_QWORD *)&v64 + 1) = v4;
    if (!*((_BYTE *)v4 + 48))
      sub_22324A974();
    v15 = v4[4];
    v16 = *v4;
    v17 = (_QWORD *)(*v4 + 16 * v15);
    do
      v18 = __ldxr(p_shared_owners);
    while (__stxr(v18 + 1, p_shared_owners));
    *v17 = v9;
    v19 = v16 + 16 * v15;
    v20 = *(std::__shared_weak_count **)(v19 + 8);
    *(_QWORD *)(v19 + 8) = v6;
    if (v20)
    {
      v21 = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    v23 = (v4[1] - *v4) >> 4;
    v24 = v4[5];
    v25 = v4[4] + 1;
    if (v25 >= v23)
      v26 = (v4[1] - *v4) >> 4;
    else
      v26 = 0;
    v4[4] = v25 - v26;
    if (v24 == v23)
    {
      v27 = v4[3] + 1;
      if (v27 < v23)
        v23 = 0;
      v4[3] = v27 - v23;
      v28 = (std::mutex **)v64;
      if (!(_QWORD)v64)
      {
LABEL_37:
        v38 = (uint64_t **)a1[9];
        v64 = 0uLL;
        v39 = (std::__shared_weak_count *)a1[5];
        if (v39)
        {
          v40 = std::__shared_weak_count::lock(v39);
          if (v40)
          {
            v41 = v40;
            v42 = a1[4];
            v43 = (unint64_t *)&v40->__shared_weak_owners_;
            do
              v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
            *(_QWORD *)&v64 = v42;
            *((_QWORD *)&v64 + 1) = v40;
            v45 = (unint64_t *)&v40->__shared_owners_;
            do
              v46 = __ldaxr(v45);
            while (__stlxr(v46 - 1, v45));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
              std::__shared_weak_count::__release_weak(v41);
            }
          }
          else
          {
            v64 = 0uLL;
          }
        }
        v47 = (char *)operator new(0x30uLL);
        *(_QWORD *)v47 = &off_24EC4DB68;
        *(_OWORD *)(v47 + 8) = v64;
        v64 = 0uLL;
        *((_QWORD *)v47 + 3) = v9;
        *((_QWORD *)v47 + 4) = v6;
        v65 = 0;
        v66 = 0;
        v68 = v47;
        sub_2245022E4(*v38, (uint64_t)v67);
        v48 = v68;
        if (v68 == v67)
        {
          v49 = 4;
          v48 = v67;
        }
        else
        {
          if (!v68)
            goto LABEL_51;
          v49 = 5;
        }
        (*(void (**)(void))(*v48 + 8 * v49))();
LABEL_51:
        if (v63)
        {
          v50 = (unint64_t *)&v63->__shared_owners_;
          do
            v51 = __ldaxr(v50);
          while (__stlxr(v51 - 1, v50));
          if (!v51)
          {
            ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
            std::__shared_weak_count::__release_weak(v63);
          }
        }
        return;
      }
    }
    else
    {
      v4[5] = v24 + 1;
      v28 = (std::mutex **)v64;
      if (!(_QWORD)v64)
        goto LABEL_37;
    }
    std::mutex::unlock(*v28);
    MEMORY[0x227684CE8](v28, 0x20C4093837F09);
    goto LABEL_37;
  }
  v29 = (uint64_t **)a1[9];
  v62 = 0uLL;
  v30 = (std::__shared_weak_count *)a1[5];
  if (v30)
  {
    v31 = std::__shared_weak_count::lock(v30);
    if (v31)
    {
      v32 = v31;
      v33 = a1[4];
      v34 = (unint64_t *)&v31->__shared_weak_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
      *(_QWORD *)&v62 = v33;
      *((_QWORD *)&v62 + 1) = v31;
      v36 = (unint64_t *)&v31->__shared_owners_;
      do
        v37 = __ldaxr(v36);
      while (__stlxr(v37 - 1, v36));
      if (!v37)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
    else
    {
      v62 = 0uLL;
    }
  }
  v52 = *a2;
  v53 = a2[1];
  if (v53)
  {
    v54 = (unint64_t *)&v53->~__shared_weak_count_0;
    do
      v55 = __ldxr(v54);
    while (__stxr(v55 + 1, v54));
  }
  v56 = (char *)operator new(0x28uLL);
  *(_QWORD *)v56 = &off_24EC4DBE8;
  *(_OWORD *)(v56 + 8) = v62;
  *((_QWORD *)v56 + 3) = v52;
  *((_QWORD *)v56 + 4) = v53;
  v66 = (__int128 *)v56;
  sub_2245022E4(*v29, (uint64_t)&v64);
  v60 = v66;
  if (v66 == &v64)
  {
    v61 = 4;
    v60 = &v64;
  }
  else
  {
    if (!v66)
      return;
    v61 = 5;
  }
  (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v60 + 8 * v61))(v60, v57, v58, v59);
}

void sub_2235B2D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char *a18)
{
  char *v18;
  char *v20;
  uint64_t v21;

  v20 = a18;
  if (a18 == v18)
  {
    v21 = 4;
    v20 = &a15;
  }
  else
  {
    if (!a18)
    {
      sub_2235B43E4((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v21 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v20 + 8 * v21))();
  sub_2235B43E4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235B2DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char *a23)
{
  char *v23;
  char *v25;
  uint64_t v26;

  v25 = a23;
  if (a23 == v23)
  {
    v26 = 4;
    v25 = &a20;
  }
  else
  {
    if (!a23)
      goto LABEL_6;
    v26 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v25 + 8 * v26))();
LABEL_6:
  sub_223322894((uint64_t)&a15);
  sub_223167354((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_2235B2E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  std::__shared_weak_count *v5;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_223322848((std::mutex ***)va1);
  std::__shared_weak_count::__release_weak(v5);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2235B2E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  std::__shared_weak_count *v5;
  uint64_t v6;
  va_list va;

  va_start(va, a5);
  MEMORY[0x227684CE8](v6, 0x20C4093837F09);
  std::__shared_weak_count::__release_weak(v5);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2235B2E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  std::__shared_weak_count *v13;

  std::__shared_weak_count::__release_weak(v13);
  sub_223167354((uint64_t)&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_2235B2E90(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235B2EA0(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235B2EAC(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_2235B2EBC(_QWORD *a1, std::__shared_weak_count_vtbl **a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *p_shared_weak_owners;
  unint64_t v17;
  uint64_t *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  std::__shared_weak_count **v22;
  unint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  std::mutex **v33;
  uint64_t **v34;
  std::__shared_weak_count *v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  uint64_t **v43;
  std::__shared_weak_count *v44;
  std::__shared_weak_count *v45;
  std::__shared_weak_count *v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  char *v52;
  std::string *v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count_vtbl *v59;
  std::__shared_weak_count_vtbl *v60;
  unint64_t *v61;
  unint64_t v62;
  _QWORD *v63;
  char *v64;
  __int128 *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  __int128 *v70;
  std::string *v71;
  std::runtime_error *exception;
  std::runtime_error *v73;
  std::__shared_weak_count *v74[2];
  _QWORD *v75;
  std::__shared_weak_count *v76;
  std::__shared_weak_count *v77;
  std::runtime_error v78;
  std::__shared_weak_count *v79;
  std::__shared_weak_count *v80;
  __int128 v81;
  _QWORD *v82;
  __int128 *v83;
  _QWORD v84[3];
  std::string v85;
  std::string *v86;
  uint64_t v87;

  v87 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v81 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v81 + 1) = 45;
    v69 = (_QWORD *)a1[6];
    v68 = a1 + 6;
    v67 = v69;
    v70 = (__int128 *)*((unsigned __int8 *)v68 + 23);
    if ((char)v70 < 0)
      v70 = (__int128 *)v68[1];
    else
      v67 = v68;
    v82 = v67;
    v83 = v70;
    sub_2231A9820((uint64_t)&v81, (uint64_t)v84, 0, 0, &v85);
    if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v71 = &v85;
    else
      v71 = (std::string *)v85.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v78, (const char *)v71);
    v78.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v73 = std::runtime_error::runtime_error(exception, &v78);
    v73->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v73, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v6 = (std::__shared_weak_count *)operator new(0x20uLL);
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_24EC2F420;
    v6[1].__vftable = *a3;
    v77 = v6;
    v75 = &v6[1].__vftable;
    v76 = v6;
    v6->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    *a3 = 0;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    if (!a1[18]
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v9 = (std::__shared_weak_count *)operator new(0x28uLL);
    v10 = v9;
    v9->__shared_owners_ = 0;
    v11 = (unint64_t *)&v9->__shared_owners_;
    v9->__shared_weak_owners_ = 0;
    v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4DB18;
    v12 = (uint64_t)a2[1];
    v9[1].__vftable = *a2;
    v13 = v9 + 1;
    v9[1].__shared_owners_ = v12;
    if (v12)
    {
      v14 = (unint64_t *)(v12 + 8);
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
    }
    v79 = v9 + 1;
    v80 = v9;
    p_shared_weak_owners = (unint64_t *)&v9->__shared_weak_owners_;
    do
      v17 = __ldxr(p_shared_weak_owners);
    while (__stxr(v17 + 1, p_shared_weak_owners));
    v18 = (uint64_t *)a1[18];
    v19 = (_QWORD *)operator new();
    *v19 = v18 + 7;
    std::mutex::lock((std::mutex *)(v18 + 7));
    *(_QWORD *)&v81 = v19;
    *((_QWORD *)&v81 + 1) = v18;
    if (!*((_BYTE *)v18 + 48))
      sub_22324A974();
    v20 = v18[4];
    v21 = *v18;
    v22 = (std::__shared_weak_count **)(*v18 + 16 * v20);
    do
      v23 = __ldxr(v11);
    while (__stxr(v23 + 1, v11));
    *v22 = v13;
    v24 = v21 + 16 * v20;
    v25 = *(std::__shared_weak_count **)(v24 + 8);
    *(_QWORD *)(v24 + 8) = v10;
    if (v25)
    {
      v26 = (unint64_t *)&v25->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
    v28 = (v18[1] - *v18) >> 4;
    v29 = v18[5];
    v30 = v18[4] + 1;
    if (v30 >= v28)
      v31 = (v18[1] - *v18) >> 4;
    else
      v31 = 0;
    v18[4] = v30 - v31;
    if (v29 == v28)
    {
      v32 = v18[3] + 1;
      if (v32 < v28)
        v28 = 0;
      v18[3] = v32 - v28;
      v33 = (std::mutex **)v81;
      if (!(_QWORD)v81)
      {
LABEL_40:
        v43 = (uint64_t **)a1[9];
        v81 = 0uLL;
        v44 = (std::__shared_weak_count *)a1[5];
        if (v44)
        {
          v45 = std::__shared_weak_count::lock(v44);
          if (v45)
          {
            v46 = v45;
            v47 = a1[4];
            v48 = (unint64_t *)&v45->__shared_weak_owners_;
            do
              v49 = __ldxr(v48);
            while (__stxr(v49 + 1, v48));
            *(_QWORD *)&v81 = v47;
            *((_QWORD *)&v81 + 1) = v45;
            v50 = (unint64_t *)&v45->__shared_owners_;
            do
              v51 = __ldaxr(v50);
            while (__stlxr(v51 - 1, v50));
            if (!v51)
            {
              ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
              std::__shared_weak_count::__release_weak(v46);
            }
          }
          else
          {
            v81 = 0uLL;
          }
        }
        v52 = (char *)operator new(0x38uLL);
        *(_QWORD *)v52 = &off_24EC4DC68;
        *(_OWORD *)(v52 + 8) = v81;
        v81 = 0uLL;
        *((_QWORD *)v52 + 3) = v13;
        *((_QWORD *)v52 + 4) = v10;
        v82 = 0;
        v83 = 0;
        *((_QWORD *)v52 + 5) = v75;
        *((_QWORD *)v52 + 6) = v76;
        v84[0] = 0;
        v84[1] = 0;
        v86 = (std::string *)v52;
        sub_2245022E4(*v43, (uint64_t)&v85);
        v53 = v86;
        if (v86 == &v85)
        {
          v54 = 4;
          v53 = &v85;
        }
        else
        {
          if (!v86)
            goto LABEL_54;
          v54 = 5;
        }
        (*(void (**)(void))(v53->__r_.__value_.__r.__words[0] + 8 * v54))();
LABEL_54:
        if (v80)
        {
          v55 = &v80->__shared_owners_;
          do
            v56 = __ldaxr((unint64_t *)v55);
          while (__stlxr(v56 - 1, (unint64_t *)v55));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
            std::__shared_weak_count::__release_weak(v80);
          }
        }
        if (v77)
        {
          v57 = (unint64_t *)&v77->__shared_owners_;
          do
            v58 = __ldaxr(v57);
          while (__stlxr(v58 - 1, v57));
          if (!v58)
          {
            ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
            std::__shared_weak_count::__release_weak(v77);
          }
        }
        return;
      }
    }
    else
    {
      v18[5] = v29 + 1;
      v33 = (std::mutex **)v81;
      if (!(_QWORD)v81)
        goto LABEL_40;
    }
    std::mutex::unlock(*v33);
    MEMORY[0x227684CE8](v33, 0x20C4093837F09);
    goto LABEL_40;
  }
  v34 = (uint64_t **)a1[9];
  *(_OWORD *)v74 = 0uLL;
  v35 = (std::__shared_weak_count *)a1[5];
  if (v35)
  {
    v36 = std::__shared_weak_count::lock(v35);
    if (v36)
    {
      v37 = v36;
      v38 = (std::__shared_weak_count *)a1[4];
      v39 = (unint64_t *)&v36->__shared_weak_owners_;
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
      v74[0] = v38;
      v74[1] = v36;
      v41 = (unint64_t *)&v36->__shared_owners_;
      do
        v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    else
    {
      *(_OWORD *)v74 = 0uLL;
    }
  }
  v59 = *a2;
  v60 = a2[1];
  if (v60)
  {
    v61 = (unint64_t *)&v60->~__shared_weak_count_0;
    do
      v62 = __ldxr(v61);
    while (__stxr(v62 + 1, v61));
  }
  v63 = operator new(0x20uLL);
  v63[1] = 0;
  v63[2] = 0;
  *v63 = &unk_24EC2F420;
  v63[3] = *a3;
  *a3 = 0;
  v64 = (char *)operator new(0x38uLL);
  *(_QWORD *)v64 = &off_24EC4DCE8;
  *(_OWORD *)(v64 + 8) = *(_OWORD *)v74;
  *((_QWORD *)v64 + 3) = v59;
  *((_QWORD *)v64 + 4) = v60;
  *((_QWORD *)v64 + 5) = v63 + 3;
  *((_QWORD *)v64 + 6) = v63;
  v83 = (__int128 *)v64;
  sub_2245022E4(*v34, (uint64_t)&v81);
  v65 = v83;
  if (v83 == &v81)
  {
    v66 = 4;
    v65 = &v81;
  }
  else
  {
    if (!v83)
      return;
    v66 = 5;
  }
  (*(void (**)(__int128 *))(*(_QWORD *)v65 + 8 * v66))(v65);
}

void sub_2235B35A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::runtime_error a20,std::exception_ptr a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  std::promise<void> *v27;
  uint64_t v28;
  std::exception_ptr v29;

  if (a2)
  {
    __cxa_begin_catch(exception_object);
    std::current_exception();
    __cxa_end_catch();
    v29.__ptr_ = &a21;
    std::promise<void>::set_exception(v27, v29);
    std::exception_ptr::~exception_ptr(&a21);
    std::runtime_error::~runtime_error(&a20);
    if (*(char *)(v28 - 97) < 0)
      operator delete(*(void **)(v28 - 120));
    JUMPOUT(0x2235B34B0);
  }
  _Unwind_Resume(exception_object);
}

void sub_2235B36B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  va_list va1;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  va_list va2;
  uint64_t v24;
  va_list va3;

  va_start(va3, a8);
  va_start(va2, a8);
  va_start(va1, a8);
  va_start(va, a8);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v16 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  v20 = va_arg(va2, _QWORD);
  v21 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v22 = va_arg(va3, _QWORD);
  v24 = va_arg(va3, _QWORD);
  v11 = *(_QWORD **)(v9 - 96);
  if (v11 == v8)
  {
    v12 = 4;
    v11 = (_QWORD *)(v9 - 120);
  }
  else
  {
    if (!v11)
      goto LABEL_6;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_6:
  sub_22332429C((uint64_t *)va3);
  sub_223167354((uint64_t)va2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2235B3750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2235B376C(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_2235B37E0(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4DD68;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_2235B38F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2235B3954(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4DDE8;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_2235B3A64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2235B3AC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4DE68;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235B3CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235B3DA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4DEE8;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235B3FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235B4088(uint64_t a1)
{
  return sub_2235B41F8(a1 - 16);
}

void sub_2235B4090(uint64_t a1)
{
  sub_2235B41F8(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B40B8(uint64_t a1)
{
  return sub_2235B37E0((_QWORD *)(a1 - 16));
}

uint64_t *sub_2235B40C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235B3AC8((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235B40C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235B3DA8((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_2235B40D0(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_2235B40D8(uint64_t a1)
{
  return sub_2235B41F8(a1 - 24);
}

void sub_2235B40E0(uint64_t a1)
{
  sub_2235B41F8(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B4108(uint64_t a1)
{
  return sub_2235B3954((_QWORD *)(a1 - 24));
}

uint64_t sub_2235B4110(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235B4118(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2235B4180(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235B41E8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235B41F8(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4D928;
  *(_QWORD *)(a1 + 16) = &unk_24EC4D9A0;
  *(_QWORD *)(a1 + 24) = &unk_24EC4D9E0;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v14 = *(_QWORD *)(a1 + 96);
    v13 = *(uint64_t **)(a1 + 104);
    v15 = *v13;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v14 + 8);
    **(_QWORD **)(v14 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v13 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v13[1];
        operator delete(v13);
        v13 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

uint64_t sub_2235B43E4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 8);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_2235B4454(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4DB18;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2235B4464(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4DB18;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235B4494(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

_QWORD *sub_2235B44F0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4DB68;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235B4534(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4DB68;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B4588(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4DB68;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_2235B45F8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4DB68;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_2235B4648(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235B4684(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235B46BC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  _BYTE v20[8];
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      v20[0] = 0;
      v21 = 0;
      sub_2235B49E0((uint64_t *)(v8 + 88), v5, (uint64_t)v20);
      if (v21)
        MEMORY[0x227684B68](v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235B4884(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    MEMORY[0x227684B68](&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B4968(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetecti"
                     "on24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE25EnqueueMessageAndDispatchIZNKSF_4Sen"
                     "dERKSE_EUlT_T0_E_EEvSI_SJ_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16sur"
                                "facedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE25EnqueueMessage"
                                "AndDispatchIZNKSF_4SendERKSE_EUlT_T0_E_EEvSI_SJ_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE25EnqueueMessageAndDispatchIZNKSF_4SendERKSE_EUlT_T0_E_EEvSI_SJ_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE25EnqueueMessageAndDispatchIZNKSF_4SendERKSE_EUlT_T0_E_EEvSI_SJ_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B49D4()
{
  return &unk_24EC4DBC8;
}

void sub_2235B49E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 276, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v6, a2);
  if (*(_BYTE *)(a3 + 8))
    std::promise<void>::set_value((std::promise<void> *)a3);
}

void sub_2235B4A78()
{
  __break(1u);
}

void sub_2235B4B24(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x2235B4B44);
}

_QWORD *sub_2235B4B50(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4DBE8;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_2235B4BCC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4DBE8;
  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  std::__shared_weak_count::__release_weak(v5);
LABEL_9:
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B4C58(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x28uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4DBE8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_2235B4CC8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4DBE8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_2235B4D18(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
}

void sub_2235B4D88(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (std::__shared_weak_count *)__p[2];
      if (!v5)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = (std::__shared_weak_count *)__p[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  operator delete(__p);
}

void sub_2235B4DF8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  _BYTE v8[8];
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v8[0] = 0;
        v9 = 0;
        sub_2235B49E0((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)v8);
        if (v9)
          MEMORY[0x227684B68](v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B4EA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    MEMORY[0x227684B68](&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B4EEC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetecti"
                     "on24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE4SendERKSE_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16sur"
                                "facedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE4SendERKSE_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE4SendERKSE_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE4SendERKSE_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B4F58()
{
  return &unk_24EC4DC48;
}

_QWORD *sub_2235B4F64(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)a1[5];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[3];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[3];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[1];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

_QWORD *sub_2235B500C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4DC68;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2235B5094(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4DC68;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_2235B512C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4DC68;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_2235B51BC(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4DC68;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235B522C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_2235B52AC(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_2235B5328(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_2235B49E0(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    MEMORY[0x227684B68](&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235B55DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11, std::exception_ptr a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235B5734(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetecti"
                     "on24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE25EnqueueMessageAndDispatchIZNKSF_7Pro"
                     "cessERKSE_NS4_7promiseIvEEEUlT_T0_E_EEvSI_SL_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16sur"
                                "facedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE25EnqueueMessage"
                                "AndDispatchIZNKSF_7ProcessERKSE_NS4_7promiseIvEEEUlT_T0_E_EEvSI_SL_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE25EnqueueMessageAndDispatchIZNKSF_7ProcessERKSE_NS4_7promiseIvEEEUlT_T0_E_EEvSI_SL_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE25EnqueueMessageAndDispatchIZNKSF_7ProcessERKSE_NS4_7promiseIvEEEUlT_T0_E_EEvSI_SL_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B57A0()
{
  return &unk_24EC4DCC8;
}

_QWORD *sub_2235B57AC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4DCE8;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_2235B5860(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4DCE8;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B5924(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4DCE8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_2235B59B4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4DCE8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235B5A24(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
}

void sub_2235B5AD0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)__p[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  operator delete(__p);
}

void sub_2235B5B78(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[5];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_2235B49E0((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    MEMORY[0x227684B68](&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_2235B5C8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::runtime_error a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (LOBYTE(a11.__imp_.__imp_))
    MEMORY[0x227684B68](&a11);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B5D34(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetecti"
                     "on24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE7ProcessERKSE_NS4_7promiseIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16sur"
                                "facedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE7ProcessERKSE_NS"
                                "4_7promiseIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE7ProcessERKSE_NS4_7promiseIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE7ProcessERKSE_NS4_7promiseIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B5DA0()
{
  return &unk_24EC4DD48;
}

_QWORD *sub_2235B5DAC(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4DD68;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235B5DE4(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4DD68;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B5E2C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4DD68;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_2235B5E7C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4DD68;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235B5EAC(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235B5EBC(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235B5EE8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 96);
        v7 = (_QWORD *)(v5 + 96);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B5F7C(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B5FB8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetectio"
                     "n24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE9SubscribeENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surf"
                                "acedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE9SubscribeENS1_12"
                                "ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE9SubscribeENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE9SubscribeENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B6024()
{
  return &unk_24EC4DDC8;
}

_QWORD *sub_2235B6030(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4DDE8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235B6068(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4DDE8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B60B0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4DDE8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_2235B6100(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4DDE8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235B6130(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235B6140(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235B616C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B6200(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B623C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetectio"
                     "n24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surf"
                                "acedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE15AddErrorHandler"
                                "ENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B62A8()
{
  return &unk_24EC4DE48;
}

_QWORD *sub_2235B62B4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4DE68;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235B62EC(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4DE68;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B6334(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4DE68;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235B638C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4DE68;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235B63C4(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235B63D4(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235B6400(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B64B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B6504(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetecti"
                     "on24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16sur"
                                "facedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B6570()
{
  return &unk_24EC4DEC8;
}

_QWORD *sub_2235B657C(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4DEE8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235B65B4(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4DEE8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B65FC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4DEE8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235B6654(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4DEE8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235B668C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235B669C(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235B66C8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B6780(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B67CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetecti"
                     "on24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16sur"
                                "facedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt3__110shared_ptrIKNS4_6vectorINS_3acv16surfacedetection24ContinuousTrackingResultENS4_9allocatorIS9_EEEEEEvvvLb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B6838()
{
  return &unk_24EC4DF48;
}

void sub_2235B6848(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235B686C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2235B6884(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS0_IKNS_6vectorINS1_3acv16surfacedete"
                     "ction24ContinuousTrackingResultENS_9allocatorIS9_EEEEEEvvvLb0EEEE27__shared_ptr_default_deleteISF_SF_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS0_IKNS_6vectorINS1_3acv16"
                                "surfacedetection24ContinuousTrackingResultENS_9allocatorIS9_EEEEEEvvvLb0EEEE27__shared_p"
                                "tr_default_deleteISF_SF_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS0_IKNS_6vectorINS1_3acv16surfacedetection24ContinuousTrackingResultENS_9allocatorIS9_EEEEEEvvvLb0EEEE27__shared_ptr_default_deleteISF_SF_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS0_IKNS_6vectorINS1_3acv16surfacedetection24ContinuousTrackingResultENS_9allocatorIS9_EEEEEEvvvLb0EEEE27__shared_ptr_default_deleteISF_SF_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_2235B68F4(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235B6920(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B695C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4DFB8;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_2235B69C4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B6A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235B6A68(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B6AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235B6B0C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235B6BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235B6BE4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235B6CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235B6CBC(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_2235B6D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235B6D78(uint64_t a1)
{
  sub_2235B8A68(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235B6D9C(_QWORD *a1, __int128 *a2)
{
  char *v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  _OWORD *v7;
  int v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t **v12;
  std::__shared_weak_count *v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *p_shared_weak_owners;
  unint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  std::mutex **v38;
  uint64_t **v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  char *v56;
  _OWORD *v57;
  int v58;
  uint64_t v59;
  __int128 *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64[2];
  __int128 v65;
  void *v66[2];
  uint64_t v67;
  char v68;
  void *v69[2];
  uint64_t v70;
  uint64_t v71;
  void *__p[2];
  uint64_t v73;
  char v74;
  char v75;
  unsigned __int8 v76;
  _OWORD *v77;
  std::__shared_weak_count *v78;
  __int128 v79;
  uint64_t v80;
  __int128 *v81;
  _BYTE v82[24];
  _BYTE *v83;
  uint64_t v84;

  v84 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v4 = (char *)operator new(0x98uLL);
    v5 = (std::__shared_weak_count *)v4;
    *((_QWORD *)v4 + 1) = 0;
    v6 = (unint64_t *)(v4 + 8);
    *((_QWORD *)v4 + 2) = 0;
    *(_QWORD *)v4 = &off_24EC4E210;
    v4[24] = 0;
    v7 = v4 + 24;
    v8 = *((unsigned __int8 *)a2 + 120);
    v4[144] = v8;
    if (v8)
    {
      v9 = *((_QWORD *)a2 + 1);
      *((_QWORD *)v4 + 3) = *(_QWORD *)a2;
      *((_QWORD *)v4 + 4) = v9;
      if (v9)
      {
        v10 = (unint64_t *)(v9 + 8);
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
      }
    }
    else
    {
      *v7 = *a2;
      sub_22319FFBC(v4 + 40, a2 + 1);
    }
    v77 = v7;
    v78 = v5;
    p_shared_weak_owners = (unint64_t *)&v5->__shared_weak_owners_;
    do
      v22 = __ldxr(p_shared_weak_owners);
    while (__stxr(v22 + 1, p_shared_weak_owners));
    v23 = (uint64_t *)a1[18];
    v24 = (_QWORD *)operator new();
    *v24 = v23 + 7;
    std::mutex::lock((std::mutex *)(v23 + 7));
    *(_QWORD *)&v79 = v24;
    *((_QWORD *)&v79 + 1) = v23;
    if (!*((_BYTE *)v23 + 48))
      sub_22324A974();
    v25 = v23[4];
    v26 = *v23;
    v27 = (_QWORD *)(*v23 + 16 * v25);
    do
      v28 = __ldxr(v6);
    while (__stxr(v28 + 1, v6));
    *v27 = v7;
    v29 = v26 + 16 * v25;
    v30 = *(std::__shared_weak_count **)(v29 + 8);
    *(_QWORD *)(v29 + 8) = v5;
    if (v30)
    {
      p_shared_owners = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldaxr(p_shared_owners);
      while (__stlxr(v32 - 1, p_shared_owners));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    v33 = (v23[1] - *v23) >> 4;
    v34 = v23[5];
    v35 = v23[4] + 1;
    if (v35 >= v33)
      v36 = (v23[1] - *v23) >> 4;
    else
      v36 = 0;
    v23[4] = v35 - v36;
    if (v34 == v33)
    {
      v37 = v23[3] + 1;
      if (v37 < v33)
        v33 = 0;
      v23[3] = v37 - v33;
      v38 = (std::mutex **)v79;
      if (!(_QWORD)v79)
      {
LABEL_39:
        v39 = (uint64_t **)a1[9];
        v79 = 0uLL;
        v40 = (std::__shared_weak_count *)a1[5];
        if (v40)
        {
          v41 = std::__shared_weak_count::lock(v40);
          if (v41)
          {
            v42 = v41;
            v43 = a1[4];
            v44 = (unint64_t *)&v41->__shared_weak_owners_;
            do
              v45 = __ldxr(v44);
            while (__stxr(v45 + 1, v44));
            *(_QWORD *)&v79 = v43;
            *((_QWORD *)&v79 + 1) = v41;
            v46 = (unint64_t *)&v41->__shared_owners_;
            do
              v47 = __ldaxr(v46);
            while (__stlxr(v47 - 1, v46));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
          else
          {
            v79 = 0uLL;
          }
        }
        v48 = (char *)operator new(0x30uLL);
        *(_QWORD *)v48 = &off_24EC4E260;
        *(_OWORD *)(v48 + 8) = v79;
        v79 = 0uLL;
        *((_QWORD *)v48 + 3) = v7;
        *((_QWORD *)v48 + 4) = v5;
        v80 = 0;
        v81 = 0;
        v83 = v48;
        sub_2245022E4(*v39, (uint64_t)v82);
        v49 = v83;
        if (v83 == v82)
        {
          v50 = 4;
          v49 = v82;
        }
        else
        {
          if (!v83)
            goto LABEL_53;
          v50 = 5;
        }
        (*(void (**)(void))(*v49 + 8 * v50))();
LABEL_53:
        if (v78)
        {
          v51 = &v78->__shared_owners_;
          do
            v52 = __ldaxr((unint64_t *)v51);
          while (__stlxr(v52 - 1, (unint64_t *)v51));
          if (!v52)
          {
            ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
            std::__shared_weak_count::__release_weak(v78);
          }
        }
        return;
      }
    }
    else
    {
      v23[5] = v34 + 1;
      v38 = (std::mutex **)v79;
      if (!(_QWORD)v79)
        goto LABEL_39;
    }
    std::mutex::unlock(*v38);
    MEMORY[0x227684CE8](v38, 0x20C4093837F09);
    goto LABEL_39;
  }
  v12 = (uint64_t **)a1[9];
  *(_OWORD *)v64 = 0uLL;
  v13 = (std::__shared_weak_count *)a1[5];
  if (v13)
  {
    v14 = std::__shared_weak_count::lock(v13);
    if (v14)
    {
      v15 = v14;
      v16 = (std::__shared_weak_count *)a1[4];
      v17 = (unint64_t *)&v14->__shared_weak_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      v64[0] = v16;
      v64[1] = v14;
      v19 = (unint64_t *)&v14->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    else
    {
      *(_OWORD *)v64 = 0uLL;
    }
  }
  v76 = *((_BYTE *)a2 + 120);
  if (v76)
  {
    v53 = *((_QWORD *)a2 + 1);
    *(_QWORD *)&v65 = *(_QWORD *)a2;
    *((_QWORD *)&v65 + 1) = v53;
    if (v53)
    {
      v54 = (unint64_t *)(v53 + 8);
      do
        v55 = __ldxr(v54);
      while (__stxr(v55 + 1, v54));
    }
  }
  else
  {
    v65 = *a2;
    sub_22319FFBC(v66, a2 + 1);
  }
  v81 = 0;
  v56 = (char *)operator new(0x98uLL);
  *(_QWORD *)v56 = &off_24EC4E2E0;
  *(_OWORD *)(v56 + 8) = *(_OWORD *)v64;
  v57 = v56 + 24;
  v58 = v76;
  v56[144] = v76;
  if (v58)
  {
    *v57 = v65;
    v65 = 0uLL;
  }
  else
  {
    *v57 = v65;
    v56[40] = 0;
    v56[136] = 0;
    if (v75)
    {
      v56[64] = 0;
      if (v68)
      {
        *(_OWORD *)(v56 + 40) = *(_OWORD *)v66;
        *((_QWORD *)v56 + 7) = v67;
        v66[1] = 0;
        v67 = 0;
        v66[0] = 0;
        v56[64] = 1;
      }
      v56[72] = 0;
      v56[128] = 0;
      if (v74)
      {
        v59 = v71;
        *((_QWORD *)v56 + 11) = v70;
        *(_OWORD *)(v56 + 72) = *(_OWORD *)v69;
        v69[0] = 0;
        v69[1] = 0;
        *((_QWORD *)v56 + 12) = v59;
        *(_OWORD *)(v56 + 104) = *(_OWORD *)__p;
        *((_QWORD *)v56 + 15) = v73;
        v70 = 0;
        __p[0] = 0;
        __p[1] = 0;
        v73 = 0;
        v56[128] = 1;
      }
      v56[136] = 1;
    }
  }
  v81 = (__int128 *)v56;
  sub_2245022E4(*v12, (uint64_t)&v79);
  v60 = v81;
  if (v81 == &v79)
  {
    v61 = 4;
    v60 = &v79;
  }
  else
  {
    if (!v81)
      goto LABEL_78;
    v61 = 5;
  }
  (*(void (**)(__int128 *))(*(_QWORD *)v60 + 8 * v61))(v60);
LABEL_78:
  if (v76)
  {
    if (*((_QWORD *)&v65 + 1))
    {
      v62 = (unint64_t *)(*((_QWORD *)&v65 + 1) + 8);
      do
        v63 = __ldaxr(v62);
      while (__stlxr(v63 - 1, v62));
      if (!v63)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v65 + 1) + 16))(*((_QWORD *)&v65 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v65 + 1));
      }
    }
  }
  else if (v75)
  {
    if (v74)
    {
      if (SHIBYTE(v73) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v70) < 0)
        operator delete(v69[0]);
    }
    if (v68 && SHIBYTE(v67) < 0)
      operator delete(v66[0]);
  }
}

void sub_2235B73A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2235B73D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v12 = *(_QWORD **)(v10 - 120);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 144);
  }
  else
  {
    if (!v12)
    {
      sub_2234F9EB0((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
  sub_2234F9EB0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235B7424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;

  v30 = *(_QWORD **)(v28 - 80);
  if (v30 == v27)
  {
    v31 = 4;
    v30 = (_QWORD *)(v28 - 104);
  }
  else
  {
    if (!v30)
      goto LABEL_6;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_6:
  sub_223322894(v28 - 144);
  sub_223167354((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_2235B7474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  std::__shared_weak_count *v27;
  uint64_t v28;

  sub_223322848((std::mutex ***)(v28 - 144));
  std::__shared_weak_count::__release_weak(v27);
  sub_223167354((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_2235B7498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  std::__shared_weak_count *v27;
  uint64_t v28;

  MEMORY[0x227684CE8](v28, 0x20C4093837F09);
  std::__shared_weak_count::__release_weak(v27);
  sub_223167354((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_2235B74CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  std::__shared_weak_count *v27;

  std::__shared_weak_count::__release_weak(v27);
  sub_223167354((uint64_t)&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_2235B74EC(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235B74FC(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235B7508(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_2235B7518(_QWORD *a1, __int128 *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  char *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  _OWORD *v12;
  int v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t **v17;
  std::__shared_weak_count *v18;
  std::__shared_weak_count *v19;
  std::__shared_weak_count *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t *p_shared_weak_owners;
  unint64_t v30;
  uint64_t *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  std::mutex **v46;
  uint64_t **v47;
  std::__shared_weak_count *v48;
  std::__shared_weak_count *v49;
  std::__shared_weak_count *v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  std::__shared_weak_count *v57;
  char *v58;
  std::string *v59;
  uint64_t v60;
  uint64_t *v61;
  unint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  char *v68;
  _OWORD *v69;
  int v70;
  uint64_t v71;
  __int128 *v72;
  uint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  unint64_t *v77;
  unint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  __int128 *v82;
  std::string *v83;
  std::runtime_error *exception;
  std::runtime_error *v85;
  std::__shared_weak_count *v86[2];
  __int128 v87;
  void *v88[2];
  uint64_t v89;
  char v90;
  void *v91[2];
  uint64_t v92;
  uint64_t v93;
  void *__p[2];
  uint64_t v95;
  char v96;
  char v97;
  unsigned __int8 v98;
  _QWORD *v99;
  std::__shared_weak_count *v100;
  std::__shared_weak_count *v101;
  std::__shared_weak_count *v102;
  std::__shared_weak_count *v103;
  std::__shared_weak_count *v104;
  std::runtime_error v105;
  _OWORD *v106;
  std::__shared_weak_count *v107;
  __int128 v108;
  _QWORD *v109;
  __int128 *v110;
  _QWORD v111[3];
  std::string v112;
  std::string *v113;
  uint64_t v114;

  v114 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v108 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v108 + 1) = 45;
    v81 = (_QWORD *)a1[6];
    v80 = a1 + 6;
    v79 = v81;
    v82 = (__int128 *)*((unsigned __int8 *)v80 + 23);
    if ((char)v82 < 0)
      v82 = (__int128 *)v80[1];
    else
      v79 = v80;
    v109 = v79;
    v110 = v82;
    sub_2231A9820((uint64_t)&v108, (uint64_t)v111, 0, 0, &v112);
    if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v83 = &v112;
    else
      v83 = (std::string *)v112.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v105, (const char *)v83);
    v105.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v85 = std::runtime_error::runtime_error(exception, &v105);
    v85->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v85, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v6 = (std::__shared_weak_count *)operator new(0x20uLL);
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC49718;
    v6[1].__vftable = *a3;
    v103 = v6 + 1;
    v104 = v6;
    v101 = v6 + 1;
    v102 = v6;
    v6->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    *a3 = 0;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    if (!a1[18]
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v9 = (char *)operator new(0x98uLL);
    v10 = (std::__shared_weak_count *)v9;
    *((_QWORD *)v9 + 1) = 0;
    v11 = (unint64_t *)(v9 + 8);
    *((_QWORD *)v9 + 2) = 0;
    *(_QWORD *)v9 = &off_24EC4E210;
    v9[24] = 0;
    v12 = v9 + 24;
    v13 = *((unsigned __int8 *)a2 + 120);
    v9[144] = v13;
    if (v13)
    {
      v14 = *((_QWORD *)a2 + 1);
      *((_QWORD *)v9 + 3) = *(_QWORD *)a2;
      *((_QWORD *)v9 + 4) = v14;
      if (v14)
      {
        v15 = (unint64_t *)(v14 + 8);
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
      }
    }
    else
    {
      *v12 = *a2;
      sub_22319FFBC(v9 + 40, a2 + 1);
    }
    v106 = v12;
    v107 = v10;
    p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
    do
      v30 = __ldxr(p_shared_weak_owners);
    while (__stxr(v30 + 1, p_shared_weak_owners));
    v31 = (uint64_t *)a1[18];
    v32 = (_QWORD *)operator new();
    *v32 = v31 + 7;
    std::mutex::lock((std::mutex *)(v31 + 7));
    *(_QWORD *)&v108 = v32;
    *((_QWORD *)&v108 + 1) = v31;
    if (!*((_BYTE *)v31 + 48))
      sub_22324A974();
    v33 = v31[4];
    v34 = *v31;
    v35 = (_QWORD *)(*v31 + 16 * v33);
    do
      v36 = __ldxr(v11);
    while (__stxr(v36 + 1, v11));
    *v35 = v12;
    v37 = v34 + 16 * v33;
    v38 = *(std::__shared_weak_count **)(v37 + 8);
    *(_QWORD *)(v37 + 8) = v10;
    if (v38)
    {
      v39 = (unint64_t *)&v38->__shared_owners_;
      do
        v40 = __ldaxr(v39);
      while (__stlxr(v40 - 1, v39));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
      }
    }
    v41 = (v31[1] - *v31) >> 4;
    v42 = v31[5];
    v43 = v31[4] + 1;
    if (v43 >= v41)
      v44 = (v31[1] - *v31) >> 4;
    else
      v44 = 0;
    v31[4] = v43 - v44;
    if (v42 == v41)
    {
      v45 = v31[3] + 1;
      if (v45 < v41)
        v41 = 0;
      v31[3] = v45 - v41;
      v46 = (std::mutex **)v108;
      if (!(_QWORD)v108)
      {
LABEL_47:
        v47 = (uint64_t **)a1[9];
        v108 = 0uLL;
        v48 = (std::__shared_weak_count *)a1[5];
        if (v48)
        {
          v49 = std::__shared_weak_count::lock(v48);
          if (v49)
          {
            v50 = v49;
            v51 = a1[4];
            v52 = (unint64_t *)&v49->__shared_weak_owners_;
            do
              v53 = __ldxr(v52);
            while (__stxr(v53 + 1, v52));
            *(_QWORD *)&v108 = v51;
            *((_QWORD *)&v108 + 1) = v49;
            v54 = (unint64_t *)&v49->__shared_owners_;
            do
              v55 = __ldaxr(v54);
            while (__stlxr(v55 - 1, v54));
            if (!v55)
            {
              ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
              std::__shared_weak_count::__release_weak(v50);
            }
          }
          else
          {
            v108 = 0uLL;
          }
        }
        v56 = v101;
        v57 = v102;
        v101 = 0;
        v102 = 0;
        v58 = (char *)operator new(0x38uLL);
        *(_QWORD *)v58 = &off_24EC4E360;
        *(_OWORD *)(v58 + 8) = v108;
        v108 = 0uLL;
        *((_QWORD *)v58 + 3) = v12;
        *((_QWORD *)v58 + 4) = v10;
        v109 = 0;
        v110 = 0;
        *((_QWORD *)v58 + 5) = v56;
        *((_QWORD *)v58 + 6) = v57;
        v111[0] = 0;
        v111[1] = 0;
        v113 = (std::string *)v58;
        sub_2245022E4(*v47, (uint64_t)&v112);
        v59 = v113;
        if (v113 == &v112)
        {
          v60 = 4;
          v59 = &v112;
        }
        else
        {
          if (!v113)
            goto LABEL_61;
          v60 = 5;
        }
        (*(void (**)(void))(v59->__r_.__value_.__r.__words[0] + 8 * v60))();
LABEL_61:
        if (v107)
        {
          v61 = &v107->__shared_owners_;
          do
            v62 = __ldaxr((unint64_t *)v61);
          while (__stlxr(v62 - 1, (unint64_t *)v61));
          if (!v62)
          {
            ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
            std::__shared_weak_count::__release_weak(v107);
          }
        }
        if (v102)
        {
          v63 = &v102->__shared_owners_;
          do
            v64 = __ldaxr((unint64_t *)v63);
          while (__stlxr(v64 - 1, (unint64_t *)v63));
          if (!v64)
          {
            ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
            std::__shared_weak_count::__release_weak(v102);
          }
        }
        if (v104)
        {
          v65 = &v104->__shared_owners_;
          do
            v66 = __ldaxr((unint64_t *)v65);
          while (__stlxr(v66 - 1, (unint64_t *)v65));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
            std::__shared_weak_count::__release_weak(v104);
          }
        }
        return;
      }
    }
    else
    {
      v31[5] = v42 + 1;
      v46 = (std::mutex **)v108;
      if (!(_QWORD)v108)
        goto LABEL_47;
    }
    std::mutex::unlock(*v46);
    MEMORY[0x227684CE8](v46, 0x20C4093837F09);
    goto LABEL_47;
  }
  v17 = (uint64_t **)a1[9];
  *(_OWORD *)v86 = 0uLL;
  v18 = (std::__shared_weak_count *)a1[5];
  if (!v18)
  {
LABEL_21:
    v98 = *((_BYTE *)a2 + 120);
    if (v98)
      goto LABEL_22;
LABEL_77:
    v87 = *a2;
    sub_22319FFBC(v88, a2 + 1);
    goto LABEL_78;
  }
  v19 = std::__shared_weak_count::lock(v18);
  if (v19)
  {
    v20 = v19;
    v21 = (std::__shared_weak_count *)a1[4];
    v22 = (unint64_t *)&v19->__shared_weak_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    v86[0] = v21;
    v86[1] = v19;
    v24 = (unint64_t *)&v19->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (v25)
      goto LABEL_21;
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v20);
    v98 = *((_BYTE *)a2 + 120);
    if (!v98)
      goto LABEL_77;
  }
  else
  {
    *(_OWORD *)v86 = 0uLL;
    v98 = *((_BYTE *)a2 + 120);
    if (!v98)
      goto LABEL_77;
  }
LABEL_22:
  v26 = *((_QWORD *)a2 + 1);
  *(_QWORD *)&v87 = *(_QWORD *)a2;
  *((_QWORD *)&v87 + 1) = v26;
  if (v26)
  {
    v27 = (unint64_t *)(v26 + 8);
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
LABEL_78:
  v67 = (std::__shared_weak_count *)operator new(0x20uLL);
  v67->__shared_owners_ = 0;
  v67->__shared_weak_owners_ = 0;
  v67->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC49718;
  v67[1].__vftable = *a3;
  *a3 = 0;
  v99 = &v67[1].__vftable;
  v100 = v67;
  v110 = 0;
  v68 = (char *)operator new(0xA8uLL);
  *(_QWORD *)v68 = &off_24EC4E3E0;
  *(_OWORD *)(v68 + 8) = *(_OWORD *)v86;
  v69 = v68 + 24;
  v70 = v98;
  v68[144] = v98;
  if (v70)
  {
    *v69 = v87;
    v87 = 0uLL;
  }
  else
  {
    *v69 = v87;
    v68[40] = 0;
    v68[136] = 0;
    if (v97)
    {
      v68[64] = 0;
      if (v90)
      {
        *(_OWORD *)(v68 + 40) = *(_OWORD *)v88;
        *((_QWORD *)v68 + 7) = v89;
        v88[1] = 0;
        v89 = 0;
        v88[0] = 0;
        v68[64] = 1;
      }
      v68[72] = 0;
      v68[128] = 0;
      if (v96)
      {
        v71 = v93;
        *((_QWORD *)v68 + 11) = v92;
        *(_OWORD *)(v68 + 72) = *(_OWORD *)v91;
        v91[0] = 0;
        v91[1] = 0;
        *((_QWORD *)v68 + 12) = v71;
        *(_OWORD *)(v68 + 104) = *(_OWORD *)__p;
        *((_QWORD *)v68 + 15) = v95;
        v92 = 0;
        __p[0] = 0;
        __p[1] = 0;
        v95 = 0;
        v68[128] = 1;
      }
      v68[136] = 1;
    }
  }
  *((_QWORD *)v68 + 19) = v67 + 1;
  *((_QWORD *)v68 + 20) = v67;
  v99 = 0;
  v100 = 0;
  v110 = (__int128 *)v68;
  sub_2245022E4(*v17, (uint64_t)&v108);
  v72 = v110;
  if (v110 == &v108)
  {
    v73 = 4;
    v72 = &v108;
    goto LABEL_90;
  }
  if (v110)
  {
    v73 = 5;
LABEL_90:
    (*(void (**)(__int128 *))(*(_QWORD *)v72 + 8 * v73))(v72);
  }
  v74 = v100;
  if (!v100)
    goto LABEL_95;
  v75 = (unint64_t *)&v100->__shared_owners_;
  do
    v76 = __ldaxr(v75);
  while (__stlxr(v76 - 1, v75));
  if (!v76)
  {
    ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
    std::__shared_weak_count::__release_weak(v74);
    if (v98)
      goto LABEL_96;
  }
  else
  {
LABEL_95:
    if (v98)
    {
LABEL_96:
      if (*((_QWORD *)&v87 + 1))
      {
        v77 = (unint64_t *)(*((_QWORD *)&v87 + 1) + 8);
        do
          v78 = __ldaxr(v77);
        while (__stlxr(v78 - 1, v77));
        if (!v78)
        {
          (*(void (**)(_QWORD))(**((_QWORD **)&v87 + 1) + 16))(*((_QWORD *)&v87 + 1));
          std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v87 + 1));
        }
      }
      return;
    }
  }
  if (v97)
  {
    if (v96)
    {
      if (SHIBYTE(v95) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v92) < 0)
        operator delete(v91[0]);
    }
    if (v90 && SHIBYTE(v89) < 0)
      operator delete(v88[0]);
  }
}

void sub_2235B7D78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2235B7D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  std::__shared_weak_count *v32;
  void *v34;

  std::__shared_weak_count::~__shared_weak_count(v32);
  operator delete(v34);
  sub_223167354((uint64_t)&a30);
  sub_223167354((uint64_t)&a32);
  _Unwind_Resume(a1);
}

void sub_2235B7DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,std::runtime_error a34)
{
  std::__assoc_sub_state **v34;
  uint64_t v35;
  std::__assoc_sub_state *v36;
  std::exception_ptr v37;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v36 = *v34;
    if (*v34)
    {
      std::exception_ptr::exception_ptr((std::exception_ptr *)(v35 - 160), (const std::exception_ptr *)(v35 - 184));
      v37.__ptr_ = (void *)(v35 - 160);
      std::__assoc_sub_state::set_exception(v36, v37);
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v35 - 160));
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v35 - 184));
      std::runtime_error::~runtime_error(&a34);
      if (*(char *)(v35 - 81) < 0)
        operator delete(*(void **)(v35 - 104));
      JUMPOUT(0x2235B7C5CLL);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_2235B7E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,std::runtime_error a34)
{
  uint64_t v34;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)(v34 - 184));
  std::runtime_error::~runtime_error(&a34);
  if (*(char *)(v34 - 81) < 0)
  {
    operator delete(*(void **)(v34 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235B7E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v12 = *(_QWORD **)(v10 - 136);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 160);
  }
  else
  {
    if (!v12)
    {
      sub_2234FAC8C((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
  sub_2234FAC8C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235B7EC4()
{
  uint64_t v0;

  sub_2231A8D08(v0);
  JUMPOUT(0x2235B7ED0);
}

void sub_2235B7EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;

  v35 = *(_QWORD **)(v33 - 80);
  if (v35 == v32)
  {
    v36 = 4;
    v35 = (_QWORD *)(v33 - 104);
  }
  else
  {
    if (!v35)
      goto LABEL_6;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_6:
  sub_22332429C((_QWORD *)(v33 - 160));
  sub_223167354(v33 - 176);
  sub_223167354((uint64_t)&a30);
  sub_223167354((uint64_t)&a32);
  _Unwind_Resume(a1);
}

void sub_2235B7F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  sub_223167354((uint64_t)&a30);
  sub_223167354((uint64_t)&a32);
  _Unwind_Resume(a1);
}

void sub_2235B7FAC(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_2235B8020(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC4E460;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B380;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_2235B8150(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2235B81C4(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4E4E0;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_2235B82D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2235B8338@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4E560;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235B8550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235B8618@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4E5E0;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235B8830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235B88F8(uint64_t a1)
{
  return sub_2235B8A68(a1 - 16);
}

void sub_2235B8900(uint64_t a1)
{
  sub_2235B8A68(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B8928(uint64_t a1, uint64_t a2)
{
  return sub_2235B8020((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235B8930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235B8338((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235B8938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235B8618((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_2235B8940(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_2235B8948(uint64_t a1)
{
  return sub_2235B8A68(a1 - 24);
}

void sub_2235B8950(uint64_t a1)
{
  sub_2235B8A68(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B8978(uint64_t a1)
{
  return sub_2235B81C4((_QWORD *)(a1 - 24));
}

uint64_t sub_2235B8980(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235B8988(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2235B89F0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235B8A58(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235B8A68(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4E020;
  *(_QWORD *)(a1 + 16) = &unk_24EC4E098;
  *(_QWORD *)(a1 + 24) = &unk_24EC4E0D8;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

void sub_2235B8C68(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4E210;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2235B8C78(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4E210;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235B8CA8(uint64_t a1)
{
  return sub_2231A8D08(a1 + 24);
}

_QWORD *sub_2235B8CB4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4E260;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235B8CF8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4E260;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235B8D4C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4E260;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_2235B8DBC(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4E260;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_2235B8E0C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235B8E48(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235B8E80(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_2235B91A4((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_22358838C(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235B9048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_22358838C(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B912C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5reco"
                     "n8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8opti"
                     "onalISH_EELb0EE25EnqueueMessageAndDispatchIZNKSK_4SendERKSF_EUlT_T0_E_EEvSN_SO_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshU"
                                "pdateResultEvNS6_8optionalISH_EELb0EE25EnqueueMessageAndDispatchIZNKSK_4SendERKSF_EUlT_T"
                                "0_E_EEvSN_SO_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE25EnqueueMessageAndDispatchIZNKSK_4SendERKSF_EUlT_T0_E_EEvSN_SO_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE25EnqueueMessageAndDispatchIZNKSK_4SendERKSF_EUlT_T0_E_EEvSN_SO_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B9198()
{
  return &unk_24EC4E2C0;
}

void sub_2235B91A4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  _QWORD v9[55];
  char v10;

  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 251, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v9, v6, a2);
  if (v10)
  {
    v7 = a1 + 1;
    for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
      (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v9);
  }
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_2235882A8(*(_QWORD *)a3, (uint64_t)v9);
  }
  if (v10)
    sub_2232954B0((uint64_t)v9);
}

void sub_2235B92A0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  if (a71)
    sub_2232954B0((uint64_t)&a18);
  if (a2 == 1)
  {
    v73 = (uint64_t *)__cxa_begin_catch(a1);
    v74 = *v73;
    a11 = *(_QWORD *)(*(_QWORD *)(*v73 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a10 = (*(uint64_t (**)(void))(v74 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", (const char *)&a11, "\n", "message: ", (const char *)&a10, "\n");
    if (a17 >= 0)
      v75 = (uint64_t)&a12;
    else
      v75 = a12;
    if (a17 >= 0)
      v76 = a17;
    else
      v76 = a13;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, v75, v76, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_2235B936C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x2235B938CLL);
}

_QWORD *sub_2235B9398(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4E2E0;
  sub_2231A8D08((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235B93D4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4E2E0;
  sub_2231A8D08((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  JUMPOUT(0x227684CE8);
}

char *sub_2235B9420(uint64_t a1)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v2 = (char *)operator new(0x98uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v2 = &off_24EC4E2E0;
  *((_QWORD *)v2 + 1) = v5;
  *((_QWORD *)v2 + 2) = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[24] = 0;
  v8 = *(unsigned __int8 *)(a1 + 144);
  v2[144] = v8;
  if (v8)
  {
    v9 = *(_QWORD *)(a1 + 32);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
    *((_QWORD *)v2 + 4) = v9;
    if (v9)
    {
      v10 = (unint64_t *)(v9 + 8);
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
    }
  }
  else
  {
    *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
    sub_22319FFBC(v2 + 40, (__int128 *)(a1 + 40));
  }
  return v3;
}

void sub_2235B94C8(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

_BYTE *sub_2235B94E8(_BYTE *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v3 = *((_QWORD *)result + 1);
  v2 = *((_QWORD *)result + 2);
  *(_QWORD *)a2 = &off_24EC4E2E0;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_BYTE *)(a2 + 24) = 0;
  v6 = result[144];
  *(_BYTE *)(a2 + 144) = v6;
  if (v6)
  {
    v7 = *((_QWORD *)result + 4);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)result + 3);
    *(_QWORD *)(a2 + 32) = v7;
    if (v7)
    {
      v8 = (unint64_t *)(v7 + 8);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
  }
  else
  {
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(result + 24);
    return sub_22319FFBC((_BYTE *)(a2 + 40), (__int128 *)(result + 40));
  }
  return result;
}

void sub_2235B9584(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235B959C(uint64_t a1)
{
  std::__shared_weak_count *v2;

  sub_2231A8D08(a1 + 24);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
}

void sub_2235B95D4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  sub_2231A8D08((uint64_t)(a1 + 3));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(a1);
}

void sub_2235B9608(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_2235B91A4((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_22358838C(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235B96B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_22358838C(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235B96FC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5reco"
                     "n8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8opti"
                     "onalISH_EELb0EE4SendERKSF_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshU"
                                "pdateResultEvNS6_8optionalISH_EELb0EE4SendERKSF_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE4SendERKSF_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE4SendERKSF_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B9768()
{
  return &unk_24EC4E340;
}

_QWORD *sub_2235B9774(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4E360;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2235B97FC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4E360;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_2235B9894(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4E360;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_2235B9924(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4E360;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235B9994(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_2235B9A14(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_2235B9A90(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_2235B91A4(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_22358838C((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235B9D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235B9D98(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x2235B9BA4);
    JUMPOUT(0x2235B9B74);
  }
  sub_2233236D4(3u);
}

void sub_2235B9DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235B9E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_22358838C(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235B9F0C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5reco"
                     "n8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8opti"
                     "onalISH_EELb0EE25EnqueueMessageAndDispatchIZNKSK_7ProcessERKSF_NS6_7promiseISJ_EEEUlT_T0_E_EEvSN_SQ_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshU"
                                "pdateResultEvNS6_8optionalISH_EELb0EE25EnqueueMessageAndDispatchIZNKSK_7ProcessERKSF_NS6"
                                "_7promiseISJ_EEEUlT_T0_E_EEvSN_SQ_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE25EnqueueMessageAndDispatchIZNKSK_7ProcessERKSF_NS6_7promiseISJ_EEEUlT_T0_E_EEvSN_SQ_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE25EnqueueMessageAndDispatchIZNKSK_7ProcessERKSF_NS6_7promiseISJ_EEEUlT_T0_E_EEvSN_SQ_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235B9F78()
{
  return &unk_24EC4E3C0;
}

_QWORD *sub_2235B9F84(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4E3E0;
  v2 = (std::__shared_weak_count *)a1[20];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2231A8D08((uint64_t)(a1 + 3));
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  sub_2231A8D08((uint64_t)(a1 + 3));
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_2235BA010(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  *a1 = &off_24EC4E3E0;
  v2 = (std::__shared_weak_count *)a1[20];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    sub_2231A8D08((uint64_t)(a1 + 3));
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  else
  {
LABEL_5:
    sub_2231A8D08((uint64_t)(a1 + 3));
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_9;
  }
  std::__shared_weak_count::__release_weak(v5);
LABEL_9:
  JUMPOUT(0x227684CE8);
}

char *sub_2235BA0AC(uint64_t a1)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;

  v2 = (char *)operator new(0xA8uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v2 = &off_24EC4E3E0;
  *((_QWORD *)v2 + 1) = v5;
  *((_QWORD *)v2 + 2) = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[24] = 0;
  v8 = *(unsigned __int8 *)(a1 + 144);
  v2[144] = v8;
  if (v8)
  {
    v9 = *(_QWORD *)(a1 + 32);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
    *((_QWORD *)v2 + 4) = v9;
    if (v9)
    {
      v10 = (unint64_t *)(v9 + 8);
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
    }
  }
  else
  {
    *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
    sub_22319FFBC(v2 + 40, (__int128 *)(a1 + 40));
  }
  v12 = *(_QWORD *)(a1 + 160);
  *((_QWORD *)v3 + 19) = *(_QWORD *)(a1 + 152);
  *((_QWORD *)v3 + 20) = v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  return v3;
}

void sub_2235BA174(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

_BYTE *sub_2235BA194(_BYTE *result, uint64_t a2)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;

  v3 = result;
  v5 = *((_QWORD *)result + 1);
  v4 = *((_QWORD *)result + 2);
  *(_QWORD *)a2 = &off_24EC4E3E0;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  *(_BYTE *)(a2 + 24) = 0;
  v8 = result[144];
  *(_BYTE *)(a2 + 144) = v8;
  if (v8)
  {
    v9 = *((_QWORD *)result + 4);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)result + 3);
    *(_QWORD *)(a2 + 32) = v9;
    if (v9)
    {
      v10 = (unint64_t *)(v9 + 8);
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
    }
  }
  else
  {
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(result + 24);
    result = sub_22319FFBC((_BYTE *)(a2 + 40), (__int128 *)(result + 40));
  }
  v12 = *((_QWORD *)v3 + 20);
  *(_QWORD *)(a2 + 152) = *((_QWORD *)v3 + 19);
  *(_QWORD *)(a2 + 160) = v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  return result;
}

void sub_2235BA250(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235BA268(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = *(std::__shared_weak_count **)(a1 + 160);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    sub_2231A8D08(a1 + 24);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  sub_2231A8D08(a1 + 24);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
}

void sub_2235BA2E8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;

  v2 = (std::__shared_weak_count *)a1[20];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      sub_2231A8D08((uint64_t)(a1 + 3));
      v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  sub_2231A8D08((uint64_t)(a1 + 3));
  v5 = (std::__shared_weak_count *)a1[2];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  operator delete(a1);
}

void sub_2235BA368(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[19];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_2235B91A4((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_22358838C((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_2235BA478(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_2235BA4F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x2235BA524);
  JUMPOUT(0x2235BA554);
}

uint64_t sub_2235BA55C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5reco"
                     "n8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8opti"
                     "onalISH_EELb0EE7ProcessERKSF_NS6_7promiseISJ_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshU"
                                "pdateResultEvNS6_8optionalISH_EELb0EE7ProcessERKSF_NS6_7promiseISJ_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE7ProcessERKSF_NS6_7promiseISJ_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE7ProcessERKSF_NS6_7promiseISJ_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BA5C8()
{
  return &unk_24EC4E440;
}

_QWORD *sub_2235BA5D4(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4E460;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235BA62C(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4E460;
  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BA694(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC4E460;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B380;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_2235BA70C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235BA72C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC4E460;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B380;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_2235BA794(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235BA7AC(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B380;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235BA7FC(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B380;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235BA848(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B380;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235BA8FC(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235BA938(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon"
                     "8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optio"
                     "nalISH_EELb0EE9SubscribeENS1_12ChannelInputISH_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptr"
                                "IKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUp"
                                "dateResultEvNS6_8optionalISH_EELb0EE9SubscribeENS1_12ChannelInputISH_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE9SubscribeENS1_12ChannelInputISH_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE9SubscribeENS1_12ChannelInputISH_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BA9A4()
{
  return &unk_24EC4E4C0;
}

_QWORD *sub_2235BA9B0(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4E4E0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235BA9E8(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4E4E0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BAA30(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4E4E0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_2235BAA80(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4E4E0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235BAAB0(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235BAAC0(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235BAAEC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235BAB80(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235BABBC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon"
                     "8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optio"
                     "nalISH_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptr"
                                "IKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUp"
                                "dateResultEvNS6_8optionalISH_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BAC28()
{
  return &unk_24EC4E540;
}

_QWORD *sub_2235BAC34(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4E560;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235BAC6C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4E560;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BACB4(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4E560;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235BAD0C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4E560;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235BAD44(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235BAD54(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235BAD80(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_2235BAEFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235BAF6C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5reco"
                     "n8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8opti"
                     "onalISH_EELb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshU"
                                "pdateResultEvNS6_8optionalISH_EELb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BAFD8()
{
  return &unk_24EC4E5C0;
}

_QWORD *sub_2235BAFE4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4E5E0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235BB01C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4E5E0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BB064(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4E5E0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235BB0BC(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4E5E0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235BB0F4(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235BB104(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235BB130(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235BB1E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235BB234(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5reco"
                     "n8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8opti"
                     "onalISH_EELb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_pt"
                                "rIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshU"
                                "pdateResultEvNS6_8optionalISH_EELb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINSt3__110shared_ptrIKNS_5recon8kfplanes20PlaneDetectionResultEEENS_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS6_8optionalISH_EELb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BB2A0()
{
  return &unk_24EC4E640;
}

void sub_2235BB2B0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235BB2D4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2235BB2EC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINS0_IKNS1_5"
                     "recon8kfplanes20PlaneDetectionResultEEENS1_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS_8"
                     "optionalISH_EELb0EEEE27__shared_ptr_default_deleteISK_SK_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedI"
                                "NS0_IKNS1_5recon8kfplanes20PlaneDetectionResultEEENS1_3esn5ErrorEEENS8_3sng27MeshingNode"
                                "MeshUpdateResultEvNS_8optionalISH_EELb0EEEE27__shared_ptr_default_deleteISK_SK_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINS0_IKNS1_5recon8kfplanes20PlaneDetectionResultEEENS1_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS_8optionalISH_EELb0EEEE27__shared_ptr_default_deleteISK_SK_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINSt12experimental8expectedINS0_IKNS1_5recon8kfplanes20PlaneDetectionResultEEENS1_3esn5ErrorEEENS8_3sng27MeshingNodeMeshUpdateResultEvNS_8optionalISH_EELb0EEEE27__shared_ptr_default_deleteISK_SK_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_2235BB35C(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235BB388(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BB3C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4E6B0;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_2235BB42C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235BB4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235BB4D0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235BB560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235BB574(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235BB638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235BB64C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235BB710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235BB724(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_2235BB7C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235BB7E0(uint64_t a1)
{
  sub_2235BD428(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235BB804(_QWORD *a1, _QWORD *a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  std::__shared_weak_count_vtbl *v6;
  uint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t *p_shared_weak_owners;
  unint64_t v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count_vtbl **v26;
  unint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  std::mutex **v37;
  uint64_t **v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  char *v57;
  __int128 *v58;
  __int128 *v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  std::__shared_weak_count *v65[2];
  _QWORD v66[3];
  _QWORD *v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  __int128 *v71;
  _BYTE v72[24];
  _BYTE *v73;
  uint64_t v74;

  v74 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v4 = (std::__shared_weak_count *)operator new(0x48uLL);
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__shared_weak_owners_ = 0;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4E908;
    v6 = (std::__shared_weak_count_vtbl *)&v4[1];
    v7 = a2[3];
    if (v7)
    {
      if ((_QWORD *)v7 == a2)
      {
        v4[2].__vftable = v6;
        (*(void (**)(_QWORD *, std::__shared_weak_count_vtbl *))(*a2 + 24))(a2, v6);
LABEL_18:
        v17 = a2[5];
        v4[2].__shared_owners_ = a2[4];
        v4[2].__shared_weak_owners_ = v17;
        if (v17)
        {
          v18 = (unint64_t *)(v17 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        p_shared_weak_owners = (unint64_t *)&v4->__shared_weak_owners_;
        do
          v21 = __ldxr(p_shared_weak_owners);
        while (__stxr(v21 + 1, p_shared_weak_owners));
        v22 = (uint64_t *)a1[18];
        v23 = (_QWORD *)operator new();
        *v23 = v22 + 7;
        std::mutex::lock((std::mutex *)(v22 + 7));
        *(_QWORD *)&v69 = v23;
        *((_QWORD *)&v69 + 1) = v22;
        if (!*((_BYTE *)v22 + 48))
          sub_22324A974();
        v24 = v22[4];
        v25 = *v22;
        v26 = (std::__shared_weak_count_vtbl **)(*v22 + 16 * v24);
        do
          v27 = __ldxr(p_shared_owners);
        while (__stxr(v27 + 1, p_shared_owners));
        *v26 = v6;
        v28 = v25 + 16 * v24;
        v29 = *(std::__shared_weak_count **)(v28 + 8);
        *(_QWORD *)(v28 + 8) = v4;
        if (v29)
        {
          v30 = (unint64_t *)&v29->__shared_owners_;
          do
            v31 = __ldaxr(v30);
          while (__stlxr(v31 - 1, v30));
          if (!v31)
          {
            ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
            std::__shared_weak_count::__release_weak(v29);
          }
        }
        v32 = (v22[1] - *v22) >> 4;
        v33 = v22[5];
        v34 = v22[4] + 1;
        if (v34 >= v32)
          v35 = (v22[1] - *v22) >> 4;
        else
          v35 = 0;
        v22[4] = v34 - v35;
        if (v33 == v32)
        {
          v36 = v22[3] + 1;
          if (v36 < v32)
            v32 = 0;
          v22[3] = v36 - v32;
          v37 = (std::mutex **)v69;
          if (!(_QWORD)v69)
          {
LABEL_41:
            v38 = (uint64_t **)a1[9];
            v69 = 0uLL;
            v39 = (std::__shared_weak_count *)a1[5];
            if (v39)
            {
              v40 = std::__shared_weak_count::lock(v39);
              if (v40)
              {
                v41 = v40;
                v42 = a1[4];
                v43 = (unint64_t *)&v40->__shared_weak_owners_;
                do
                  v44 = __ldxr(v43);
                while (__stxr(v44 + 1, v43));
                *(_QWORD *)&v69 = v42;
                *((_QWORD *)&v69 + 1) = v40;
                v45 = (unint64_t *)&v40->__shared_owners_;
                do
                  v46 = __ldaxr(v45);
                while (__stlxr(v46 - 1, v45));
                if (!v46)
                {
                  ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
                  std::__shared_weak_count::__release_weak(v41);
                }
              }
              else
              {
                v69 = 0uLL;
              }
            }
            v47 = (char *)operator new(0x30uLL);
            *(_QWORD *)v47 = &off_24EC4E958;
            *(_OWORD *)(v47 + 8) = v69;
            v69 = 0uLL;
            *((_QWORD *)v47 + 3) = v6;
            *((_QWORD *)v47 + 4) = v4;
            v70 = 0;
            v71 = 0;
            v73 = v47;
            sub_2245022E4(*v38, (uint64_t)v72);
            v48 = v73;
            if (v73 == v72)
            {
              v49 = 4;
              v48 = v72;
            }
            else
            {
              if (!v73)
                goto LABEL_55;
              v49 = 5;
            }
            (*(void (**)(_QWORD *))(*v48 + 8 * v49))(v48);
LABEL_55:
            if (v4)
            {
              v50 = (unint64_t *)&v4->__shared_owners_;
              do
                v51 = __ldaxr(v50);
              while (__stlxr(v51 - 1, v50));
              if (!v51)
              {
                ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
                std::__shared_weak_count::__release_weak(v4);
              }
            }
            return;
          }
        }
        else
        {
          v22[5] = v33 + 1;
          v37 = (std::mutex **)v69;
          if (!(_QWORD)v69)
            goto LABEL_41;
        }
        std::mutex::unlock(*v37);
        MEMORY[0x227684CE8](v37, 0x20C4093837F09);
        goto LABEL_41;
      }
      v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    }
    v4[2].__vftable = (std::__shared_weak_count_vtbl *)v7;
    goto LABEL_18;
  }
  v8 = (uint64_t **)a1[9];
  *(_OWORD *)v65 = 0uLL;
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    if (v10)
    {
      v11 = v10;
      v12 = (std::__shared_weak_count *)a1[4];
      v13 = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v65[0] = v12;
      v65[1] = v10;
      v15 = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      *(_OWORD *)v65 = 0uLL;
    }
  }
  v52 = v66;
  v53 = a2[3];
  if (!v53)
    goto LABEL_64;
  if ((_QWORD *)v53 != a2)
  {
    v53 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v53 + 16))(v53);
LABEL_64:
    v67 = (_QWORD *)v53;
    goto LABEL_66;
  }
  v67 = v66;
  (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v66);
LABEL_66:
  v54 = a2[5];
  *(_QWORD *)&v68 = a2[4];
  *((_QWORD *)&v68 + 1) = v54;
  if (v54)
  {
    v55 = (unint64_t *)(v54 + 8);
    do
      v56 = __ldxr(v55);
    while (__stxr(v56 + 1, v55));
  }
  v71 = 0;
  v57 = (char *)operator new(0x48uLL);
  v58 = (__int128 *)v57;
  *(_QWORD *)v57 = &off_24EC4E9D8;
  *(_OWORD *)(v57 + 8) = *(_OWORD *)v65;
  if (v67)
  {
    if (v67 == v66)
    {
      *((_QWORD *)v57 + 6) = v57 + 24;
      (*(void (**)(_QWORD *))(v66[0] + 24))(v66);
    }
    else
    {
      *((_QWORD *)v57 + 6) = v67;
      v67 = 0;
    }
  }
  else
  {
    *((_QWORD *)v57 + 6) = 0;
  }
  *(__int128 *)((char *)v58 + 56) = v68;
  v68 = 0uLL;
  v71 = v58;
  sub_2245022E4(*v8, (uint64_t)&v69);
  v59 = v71;
  if (v71 == &v69)
  {
    v60 = 4;
    v59 = &v69;
  }
  else
  {
    if (!v71)
      goto LABEL_79;
    v60 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v59 + 8 * v60))();
LABEL_79:
  v61 = (std::__shared_weak_count *)*((_QWORD *)&v68 + 1);
  if (*((_QWORD *)&v68 + 1))
  {
    v62 = (unint64_t *)(*((_QWORD *)&v68 + 1) + 8);
    do
      v63 = __ldaxr(v62);
    while (__stlxr(v63 - 1, v62));
    if (!v63)
    {
      ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
      std::__shared_weak_count::__release_weak(v61);
    }
  }
  if (v67 == v66)
  {
    v64 = 4;
  }
  else
  {
    if (!v67)
      return;
    v64 = 5;
    v52 = v67;
  }
  (*(void (**)(_QWORD *))(*v52 + 8 * v64))(v52);
}

void sub_2235BBD9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2235BBE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;

  v22 = *(_QWORD **)(v20 - 64);
  if (v22 == v19)
  {
    v23 = 4;
    v22 = (_QWORD *)(v20 - 88);
  }
  else
  {
    if (!v22)
      goto LABEL_6;
    v23 = 5;
  }
  (*(void (**)(void))(*v22 + 8 * v23))();
LABEL_6:
  sub_223322894((uint64_t)&a19);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235BBE80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, std::mutex **a19)
{
  std::__shared_weak_count *v19;

  sub_223322848(&a19);
  std::__shared_weak_count::__release_weak(v19);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235BBEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  uint64_t v10;

  MEMORY[0x227684CE8](v10, 0x20C4093837F09);
  std::__shared_weak_count::__release_weak(v9);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235BBED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;

  std::__shared_weak_count::__release_weak(v9);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235BBEF8(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235BBF08(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235BBF14(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_2235BBF24(_QWORD *a1, _QWORD *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  std::__shared_weak_count_vtbl *v11;
  uint64_t v12;
  uint64_t **v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_weak_owners;
  unint64_t v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  std::__shared_weak_count_vtbl **v33;
  unint64_t v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  std::mutex **v44;
  uint64_t **v45;
  std::__shared_weak_count *v46;
  std::__shared_weak_count *v47;
  std::__shared_weak_count *v48;
  uint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  char *v54;
  std::string *v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  uint64_t v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  _QWORD *v66;
  char *v67;
  char *v68;
  __int128 *v69;
  uint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  __int128 *v82;
  std::string *v83;
  std::runtime_error *exception;
  std::runtime_error *v85;
  _QWORD *v86;
  _QWORD *v87;
  std::__shared_weak_count *v88;
  std::runtime_error v89;
  std::__shared_weak_count *v90;
  std::__shared_weak_count *v91;
  std::__shared_weak_count *v92[2];
  _QWORD v93[3];
  _QWORD *v94;
  __int128 v95;
  _QWORD *v96;
  std::__shared_weak_count *v97;
  __int128 v98;
  _QWORD *v99;
  __int128 *v100;
  _QWORD v101[3];
  std::string v102;
  std::string *v103;
  uint64_t v104;

  v104 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v98 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v98 + 1) = 45;
    v81 = (_QWORD *)a1[6];
    v80 = a1 + 6;
    v79 = v81;
    v82 = (__int128 *)*((unsigned __int8 *)v80 + 23);
    if ((char)v82 < 0)
      v82 = (__int128 *)v80[1];
    else
      v79 = v80;
    v99 = v79;
    v100 = v82;
    sub_2231A9820((uint64_t)&v98, (uint64_t)v101, 0, 0, &v102);
    if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v83 = &v102;
    else
      v83 = (std::string *)v102.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v89, (const char *)v83);
    v89.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v85 = std::runtime_error::runtime_error(exception, &v89);
    v85->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v85, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!a1[18])
  {
    v13 = (uint64_t **)a1[9];
    v92[0] = 0;
    v92[1] = 0;
    v14 = (std::__shared_weak_count *)a1[5];
    if (!v14)
      goto LABEL_20;
    v15 = std::__shared_weak_count::lock(v14);
    if (v15)
    {
      v16 = v15;
      v17 = (std::__shared_weak_count *)a1[4];
      p_shared_weak_owners = (unint64_t *)&v15->__shared_weak_owners_;
      do
        v19 = __ldxr(p_shared_weak_owners);
      while (__stxr(v19 + 1, p_shared_weak_owners));
      v92[0] = v17;
      v92[1] = v15;
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (v21)
      {
LABEL_20:
        v22 = v93;
        v23 = a2[3];
        if (!v23)
          goto LABEL_23;
        goto LABEL_21;
      }
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v16);
      v22 = v93;
      v23 = a2[3];
      if (!v23)
        goto LABEL_23;
    }
    else
    {
      v92[0] = 0;
      v92[1] = 0;
      v22 = v93;
      v23 = a2[3];
      if (!v23)
        goto LABEL_23;
    }
LABEL_21:
    if ((_QWORD *)v23 == a2)
    {
      v94 = v93;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v93);
LABEL_75:
      v62 = a2[5];
      *(_QWORD *)&v95 = a2[4];
      *((_QWORD *)&v95 + 1) = v62;
      if (v62)
      {
        v63 = (unint64_t *)(v62 + 8);
        do
          v64 = __ldxr(v63);
        while (__stxr(v64 + 1, v63));
      }
      v65 = (std::__shared_weak_count *)operator new(0x20uLL);
      v65->__shared_owners_ = 0;
      v65->__shared_weak_owners_ = 0;
      v65->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47ED0;
      v65[1].__vftable = *a3;
      v66 = &v65[1].__vftable;
      *a3 = 0;
      v96 = &v65[1].__vftable;
      v97 = v65;
      v100 = 0;
      v67 = (char *)operator new(0x58uLL);
      v68 = v67;
      *(_QWORD *)v67 = &off_24EC4EAD8;
      *(_OWORD *)(v67 + 8) = *(_OWORD *)v92;
      v92[0] = 0;
      v92[1] = 0;
      if (v94)
      {
        if (v94 == v93)
        {
          *((_QWORD *)v67 + 6) = v67 + 24;
          (*(void (**)(_QWORD *))(v93[0] + 24))(v93);
          v66 = v96;
          v65 = v97;
        }
        else
        {
          *((_QWORD *)v67 + 6) = v94;
          v94 = 0;
        }
      }
      else
      {
        *((_QWORD *)v67 + 6) = 0;
      }
      *(_OWORD *)(v68 + 56) = v95;
      v95 = 0uLL;
      *((_QWORD *)v68 + 9) = v66;
      *((_QWORD *)v68 + 10) = v65;
      v96 = 0;
      v97 = 0;
      v100 = (__int128 *)v68;
      sub_2245022E4(*v13, (uint64_t)&v98);
      v69 = v100;
      if (v100 == &v98)
      {
        v70 = 4;
        v69 = &v98;
      }
      else
      {
        if (!v100)
        {
LABEL_88:
          v71 = v97;
          if (!v97)
            goto LABEL_92;
          v72 = (unint64_t *)&v97->__shared_owners_;
          do
            v73 = __ldaxr(v72);
          while (__stlxr(v73 - 1, v72));
          if (!v73)
          {
            ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
            std::__shared_weak_count::__release_weak(v71);
            v74 = (std::__shared_weak_count *)*((_QWORD *)&v95 + 1);
            if (!*((_QWORD *)&v95 + 1))
              goto LABEL_96;
          }
          else
          {
LABEL_92:
            v74 = (std::__shared_weak_count *)*((_QWORD *)&v95 + 1);
            if (!*((_QWORD *)&v95 + 1))
              goto LABEL_96;
          }
          v75 = (unint64_t *)&v74->__shared_owners_;
          do
            v76 = __ldaxr(v75);
          while (__stlxr(v76 - 1, v75));
          if (!v76)
          {
            ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
            std::__shared_weak_count::__release_weak(v74);
            v77 = v94;
            if (v94 != v93)
              goto LABEL_97;
            goto LABEL_102;
          }
LABEL_96:
          v77 = v94;
          if (v94 != v93)
          {
LABEL_97:
            if (!v77)
              goto LABEL_104;
            v78 = 5;
            v22 = v77;
LABEL_103:
            (*(void (**)(_QWORD *))(*v22 + 8 * v78))(v22);
LABEL_104:
            v61 = v92[1];
            if (!v92[1])
              return;
            goto LABEL_105;
          }
LABEL_102:
          v78 = 4;
          goto LABEL_103;
        }
        v70 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v69 + 8 * v70))();
      goto LABEL_88;
    }
    v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 16))(v23);
LABEL_23:
    v94 = (_QWORD *)v23;
    goto LABEL_75;
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC47ED0;
  v6[1].__vftable = *a3;
  v88 = v6;
  v86 = &v6[1].__vftable;
  v87 = &v6->__vftable;
  v6->__shared_owners_ = 0;
  v7 = (unint64_t *)&v6->__shared_owners_;
  *a3 = 0;
  do
    v8 = __ldxr(v7);
  while (__stxr(v8 + 1, v7));
  if (!a1[18]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = (std::__shared_weak_count *)operator new(0x48uLL);
  v9->__shared_owners_ = 0;
  v10 = (unint64_t *)&v9->__shared_owners_;
  v9->__shared_weak_owners_ = 0;
  v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4E908;
  v11 = (std::__shared_weak_count_vtbl *)&v9[1];
  v12 = a2[3];
  if (!v12)
    goto LABEL_12;
  if ((_QWORD *)v12 != a2)
  {
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
LABEL_12:
    v9[2].__vftable = (std::__shared_weak_count_vtbl *)v12;
    goto LABEL_25;
  }
  v9[2].__vftable = v11;
  (*(void (**)(_QWORD *, std::__shared_weak_count_vtbl *))(*a2 + 24))(a2, v11);
LABEL_25:
  v24 = a2[5];
  v9[2].__shared_owners_ = a2[4];
  v9[2].__shared_weak_owners_ = v24;
  if (v24)
  {
    v25 = (unint64_t *)(v24 + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  v90 = v9 + 1;
  v91 = v9;
  v27 = (unint64_t *)&v9->__shared_weak_owners_;
  do
    v28 = __ldxr(v27);
  while (__stxr(v28 + 1, v27));
  v29 = (uint64_t *)a1[18];
  v30 = (_QWORD *)operator new();
  *v30 = v29 + 7;
  std::mutex::lock((std::mutex *)(v29 + 7));
  *(_QWORD *)&v98 = v30;
  *((_QWORD *)&v98 + 1) = v29;
  if (!*((_BYTE *)v29 + 48))
    sub_22324A974();
  v31 = v29[4];
  v32 = *v29;
  v33 = (std::__shared_weak_count_vtbl **)(*v29 + 16 * v31);
  do
    v34 = __ldxr(v10);
  while (__stxr(v34 + 1, v10));
  *v33 = v11;
  v35 = v32 + 16 * v31;
  v36 = *(std::__shared_weak_count **)(v35 + 8);
  *(_QWORD *)(v35 + 8) = v9;
  if (v36)
  {
    v37 = (unint64_t *)&v36->__shared_owners_;
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  v39 = (v29[1] - *v29) >> 4;
  v40 = v29[5];
  v41 = v29[4] + 1;
  if (v41 >= v39)
    v42 = (v29[1] - *v29) >> 4;
  else
    v42 = 0;
  v29[4] = v41 - v42;
  if (v40 != v39)
  {
    v29[5] = v40 + 1;
    v44 = (std::mutex **)v98;
    if (!(_QWORD)v98)
      goto LABEL_48;
    goto LABEL_47;
  }
  v43 = v29[3] + 1;
  if (v43 < v39)
    v39 = 0;
  v29[3] = v43 - v39;
  v44 = (std::mutex **)v98;
  if ((_QWORD)v98)
  {
LABEL_47:
    std::mutex::unlock(*v44);
    MEMORY[0x227684CE8](v44, 0x20C4093837F09);
  }
LABEL_48:
  v45 = (uint64_t **)a1[9];
  v98 = 0uLL;
  v46 = (std::__shared_weak_count *)a1[5];
  if (v46)
  {
    v47 = std::__shared_weak_count::lock(v46);
    if (v47)
    {
      v48 = v47;
      v49 = a1[4];
      v50 = (unint64_t *)&v47->__shared_weak_owners_;
      do
        v51 = __ldxr(v50);
      while (__stxr(v51 + 1, v50));
      *(_QWORD *)&v98 = v49;
      *((_QWORD *)&v98 + 1) = v47;
      v52 = (unint64_t *)&v47->__shared_owners_;
      do
        v53 = __ldaxr(v52);
      while (__stlxr(v53 - 1, v52));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
        std::__shared_weak_count::__release_weak(v48);
      }
    }
    else
    {
      v98 = 0uLL;
    }
  }
  v54 = (char *)operator new(0x38uLL);
  *(_QWORD *)v54 = &off_24EC4EA58;
  *(_OWORD *)(v54 + 8) = v98;
  v98 = 0uLL;
  *((_QWORD *)v54 + 3) = v11;
  *((_QWORD *)v54 + 4) = v9;
  v99 = 0;
  v100 = 0;
  *((_QWORD *)v54 + 5) = v86;
  *((_QWORD *)v54 + 6) = v87;
  v101[0] = 0;
  v101[1] = 0;
  v103 = (std::string *)v54;
  sub_2245022E4(*v45, (uint64_t)&v102);
  v55 = v103;
  if (v103 == &v102)
  {
    v56 = 4;
    v55 = &v102;
    goto LABEL_61;
  }
  if (v103)
  {
    v56 = 5;
LABEL_61:
    (*(void (**)(void))(v55->__r_.__value_.__r.__words[0] + 8 * v56))();
  }
  if (v91)
  {
    v57 = &v91->__shared_owners_;
    do
      v58 = __ldaxr((unint64_t *)v57);
    while (__stlxr(v58 - 1, (unint64_t *)v57));
    if (!v58)
    {
      ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
      std::__shared_weak_count::__release_weak(v91);
    }
  }
  if (v88)
  {
    v59 = (unint64_t *)&v88->__shared_owners_;
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
      v61 = v88;
LABEL_105:
      std::__shared_weak_count::__release_weak(v61);
    }
  }
}

void sub_2235BC72C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2235BC73C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20)
  {
    std::__shared_weak_count::__release_weak(a20);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235BC744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,std::exception_ptr a28)
{
  std::__assoc_sub_state **v28;
  uint64_t v29;
  std::__assoc_sub_state *v30;
  std::exception_ptr v31;

  if (a2)
  {
    __cxa_begin_catch(a1);
    std::current_exception();
    __cxa_end_catch();
    v30 = *v28;
    if (*v28)
    {
      std::exception_ptr::exception_ptr(&a28, &a15);
      v31.__ptr_ = &a28;
      std::__assoc_sub_state::set_exception(v30, v31);
      std::exception_ptr::~exception_ptr(&a28);
      std::exception_ptr::~exception_ptr(&a15);
      std::runtime_error::~runtime_error(&a14);
      if (*(char *)(v29 - 81) < 0)
        operator delete(*(void **)(v29 - 104));
      JUMPOUT(0x2235BC614);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(a1);
}

void sub_2235BC7B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::runtime_error a14, std::exception_ptr a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,std::exception_ptr a28)
{
  uint64_t v28;

  std::exception_ptr::~exception_ptr(&a15);
  std::runtime_error::~runtime_error(&a14);
  if (*(char *)(v28 - 81) < 0)
  {
    operator delete(*(void **)(v28 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235BC808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,char *a32)
{
  char *v32;
  char *v34;
  uint64_t v35;

  v34 = a32;
  if (a32 == v32)
  {
    v35 = 4;
    v34 = &a29;
  }
  else
  {
    if (!a32)
    {
      sub_2235555A4(&a19);
      _Unwind_Resume(a1);
    }
    v35 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v34 + 8 * v35))();
  sub_2235555A4(&a19);
  _Unwind_Resume(a1);
}

void sub_2235BC85C()
{
  uint64_t v0;

  sub_2232D929C(v0);
  JUMPOUT(0x2235BC868);
}

void sub_2235BC87C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  std::__shared_weak_count *v12;
  void *v14;

  std::__shared_weak_count::~__shared_weak_count(v12);
  operator delete(v14);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235BC8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v32;
  uint64_t v33;

  v32 = *(_QWORD **)(v30 - 80);
  if (v32 == v29)
  {
    v33 = 4;
    v32 = (_QWORD *)(v30 - 104);
  }
  else
  {
    if (!v32)
      goto LABEL_6;
    v33 = 5;
  }
  (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_6:
  sub_22332429C(&a29);
  sub_223167354((uint64_t)&a17);
  sub_223167354((uint64_t)&a10);
  sub_223167354((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_2235BC950(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2235BC96C(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_2235BC9E0(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC4EB58;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2B498;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_2235BCB10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2235BCB84(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4EBD8;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_2235BCC94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2235BCCF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4EC58;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235BCF10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235BCFD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4ECD8;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235BD1F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235BD2B8(uint64_t a1)
{
  return sub_2235BD428(a1 - 16);
}

void sub_2235BD2C0(uint64_t a1)
{
  sub_2235BD428(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BD2E8(uint64_t a1, uint64_t a2)
{
  return sub_2235BC9E0((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235BD2F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235BCCF8((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235BD2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235BCFD8((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_2235BD300(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_2235BD308(uint64_t a1)
{
  return sub_2235BD428(a1 - 24);
}

void sub_2235BD310(uint64_t a1)
{
  sub_2235BD428(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BD338(uint64_t a1)
{
  return sub_2235BCB84((_QWORD *)(a1 - 24));
}

uint64_t sub_2235BD340(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235BD348(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2235BD3B0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235BD418(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235BD428(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4E718;
  *(_QWORD *)(a1 + 16) = &unk_24EC4E790;
  *(_QWORD *)(a1 + 24) = &unk_24EC4E7D0;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

_QWORD *sub_2235BD628(_QWORD *a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = a1 + 2;
  v3 = (std::__shared_weak_count *)a1[7];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      v6 = (_QWORD *)a1[5];
      if (v6 != v2)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v2;
      goto LABEL_10;
    }
  }
  v6 = (_QWORD *)a1[5];
  if (v6 == v2)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[1];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_2235BD6D0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4E908;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2235BD6E0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4E908;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235BD710(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t result;

  v2 = a1 + 24;
  v3 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v3)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
  {
LABEL_5:
    result = *(_QWORD *)(a1 + 48);
    if (result != v2)
      goto LABEL_6;
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2);
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  result = *(_QWORD *)(a1 + 48);
  if (result == v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2);
LABEL_6:
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

_QWORD *sub_2235BD7CC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4E958;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235BD810(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4E958;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BD864(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4E958;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_2235BD8D4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4E958;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_2235BD924(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235BD960(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235BD998(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_2235BDCBC((uint64_t *)(v8 + 88), v5, (uint64_t)&v20);
      if (v21)
        sub_2235562EC(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235BDB60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_2235562EC(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235BDC44(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26Meshing"
                     "NodeOccupancyResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS"
                                "5_26MeshingNodeOccupancyResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUl"
                                "T_T0_E_EEvSB_SC_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_4SendERKS6_EUlT_T0_E_EEvSB_SC_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BDCB0()
{
  return &unk_24EC4E9B8;
}

_QWORD *sub_2235BDCBC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  _QWORD *result;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD *v18;
  std::__shared_weak_count *v19;
  std::__shared_weak_count *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  if (!v6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v6 = *a1;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v17, v6, a2);
  v7 = a1 + 1;
  for (i = (_QWORD *)a1[2]; i != v7; i = (_QWORD *)i[1])
    (*(void (**)(_QWORD *, _QWORD *))(i[2] + 16))(i + 2, v17);
  if (*(_BYTE *)(a3 + 8))
  {
    if (!*(_QWORD *)a3)
      sub_2233236D4(3u);
    sub_223556164(*(_QWORD *)a3, v17);
  }
  v9 = v20;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v19;
  if (v19)
  {
    v13 = (unint64_t *)&v19->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
      result = v18;
      if (v18 != v17)
        goto LABEL_19;
LABEL_22:
      v16 = 4;
      result = v17;
      return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
    }
  }
  result = v18;
  if (v18 == v17)
    goto LABEL_22;
LABEL_19:
  if (!result)
    return result;
  v16 = 5;
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v16))();
}

void sub_2235BDE7C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11, uint64_t a12, int a13, __int16 a14, char a15, unsigned __int8 a16, uint64_t a17)
{
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  sub_2235558E8(&a17);
  if (a2 == 1)
  {
    v19 = (uint64_t *)__cxa_begin_catch(a1);
    v20 = *v19;
    a10 = *(_QWORD *)(*(_QWORD *)(*v19 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a9 = (*(uint64_t (**)(void))(v20 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", (const char *)&a10, "\n", "message: ", (const char *)&a9, "\n");
    if ((a16 & 0x80u) == 0)
      v21 = &a11;
    else
      v21 = a11;
    if ((a16 & 0x80u) == 0)
      v22 = a16;
    else
      v22 = a12;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v21, v22, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_2235BDF44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2235BDF68(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x2235BDF70);
  sub_22316DC48(a1);
}

_QWORD *sub_2235BDF80(_QWORD *a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4E9D8;
  v2 = a1 + 3;
  v3 = (std::__shared_weak_count *)a1[8];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      v6 = (_QWORD *)a1[6];
      if (v6 != v2)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v2;
      goto LABEL_10;
    }
  }
  v6 = (_QWORD *)a1[6];
  if (v6 == v2)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_2235BE034(_QWORD *a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24EC4E9D8;
  v2 = a1 + 3;
  v3 = (std::__shared_weak_count *)a1[8];
  if (!v3)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    v6 = (_QWORD *)a1[6];
    if (v6 != v2)
      goto LABEL_6;
  }
  else
  {
LABEL_5:
    v6 = (_QWORD *)a1[6];
    if (v6 != v2)
    {
LABEL_6:
      if (!v6)
        goto LABEL_11;
      v7 = 5;
LABEL_10:
      (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
      v8 = (std::__shared_weak_count *)a1[2];
      if (v8)
        std::__shared_weak_count::__release_weak(v8);
      JUMPOUT(0x227684CE8);
    }
  }
  v7 = 4;
  v6 = v2;
  goto LABEL_10;
}

_QWORD *sub_2235BE0F8(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = operator new(0x48uLL);
  v4 = a1[1];
  v3 = a1[2];
  *v2 = &off_24EC4E9D8;
  v2[1] = v4;
  v2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[6];
  if (!v7)
    goto LABEL_7;
  if ((_QWORD *)v7 != a1 + 3)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
LABEL_7:
    v2[6] = v7;
    goto LABEL_9;
  }
  v2[6] = v2 + 3;
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
LABEL_9:
  v8 = a1[8];
  v2[7] = a1[7];
  v2[8] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return v2;
}

void sub_2235BE1AC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235BE1CC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC4E9D8;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[6];
  if (!result)
    goto LABEL_7;
  if ((_QWORD *)result != a1 + 3)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
LABEL_7:
    a2[6] = result;
    goto LABEL_9;
  }
  a2[6] = a2 + 3;
  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[6] + 24))(a1[6]);
LABEL_9:
  v9 = a1[8];
  a2[7] = a1[7];
  a2[8] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235BE278(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235BE290(_QWORD *a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = a1 + 3;
  v3 = (std::__shared_weak_count *)a1[8];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      v6 = (_QWORD *)a1[6];
      if (v6 != v2)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v2;
      goto LABEL_10;
    }
  }
  v6 = (_QWORD *)a1[6];
  if (v6 == v2)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
}

void sub_2235BE340(char *__p)
{
  char *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v2 = __p + 24;
  v3 = (std::__shared_weak_count *)*((_QWORD *)__p + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      v6 = (char *)*((_QWORD *)__p + 6);
      if (v6 != v2)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v2;
      goto LABEL_10;
    }
  }
  v6 = (char *)*((_QWORD *)__p + 6);
  if (v6 == v2)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
LABEL_11:
  v8 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  operator delete(__p);
}

void sub_2235BE3E8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_2235BDCBC((uint64_t *)(v5 + 88), a1 + 24, (uint64_t)&v8);
        if (v9)
          sub_2235562EC(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235BE490(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_2235562EC(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235BE4DC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26Meshing"
                     "NodeOccupancyResultEvS7_Lb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS"
                                "5_26MeshingNodeOccupancyResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BE548()
{
  return &unk_24EC4EA38;
}

_QWORD *sub_2235BE554(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4EA58;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2235BE5DC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4EA58;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_2235BE674(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4EA58;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_2235BE704(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4EA58;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235BE774(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_2235BE7F4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_2235BE870(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v23, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v25, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_2235BDCBC(v13, v5, (uint64_t)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_2235562EC((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235BEB4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235BEB78(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x2235BE984);
    JUMPOUT(0x2235BE954);
  }
  sub_2233236D4(3u);
}

void sub_2235BEBD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2235BEC00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_2235562EC(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2235BECEC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26Meshing"
                     "NodeOccupancyResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEE"
                     "UlT_T0_E_EEvSB_SF_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS"
                                "5_26MeshingNodeOccupancyResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_"
                                "NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE25EnqueueMessageAndDispatchIZNKS8_7ProcessERKS6_NSt3__17promiseIS7_EEEUlT_T0_E_EEvSB_SF_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BED58()
{
  return &unk_24EC4EAB8;
}

_QWORD *sub_2235BED64(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC4EAD8;
  v2 = (std::__shared_weak_count *)a1[10];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_11:
  v9 = (_QWORD *)a1[6];
  if (v9 == v5)
  {
    v10 = 4;
    v9 = v5;
  }
  else
  {
    if (!v9)
      goto LABEL_16;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_16:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_2235BEE54(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24EC4EAD8;
  v2 = (std::__shared_weak_count *)a1[10];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_11:
  v9 = (_QWORD *)a1[6];
  if (v9 == v5)
  {
    v10 = 4;
    v9 = v5;
  }
  else
  {
    if (!v9)
      goto LABEL_16;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_16:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BEF54(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;

  v2 = operator new(0x58uLL);
  v4 = a1[1];
  v3 = a1[2];
  *v2 = &off_24EC4EAD8;
  v2[1] = v4;
  v2[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[6];
  if (!v7)
    goto LABEL_7;
  if ((_QWORD *)v7 != a1 + 3)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
LABEL_7:
    v2[6] = v7;
    goto LABEL_9;
  }
  v2[6] = v2 + 3;
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
LABEL_9:
  v8 = a1[8];
  v2[7] = a1[7];
  v2[8] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v11 = a1[10];
  v2[9] = a1[9];
  v2[10] = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  return v2;
}

void sub_2235BF028(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235BF048(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;

  v5 = a1[1];
  v4 = a1[2];
  *a2 = &off_24EC4EAD8;
  a2[1] = v5;
  a2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[6];
  if (!result)
    goto LABEL_7;
  if ((_QWORD *)result != a1 + 3)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
LABEL_7:
    a2[6] = result;
    goto LABEL_9;
  }
  a2[6] = a2 + 3;
  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[6] + 24))(a1[6]);
LABEL_9:
  v9 = a1[8];
  a2[7] = a1[7];
  a2[8] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  v12 = a1[10];
  a2[9] = a1[9];
  a2[10] = v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  return result;
}

void sub_2235BF114(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235BF12C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = (std::__shared_weak_count *)a1[10];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = a1 + 3;
    v6 = (std::__shared_weak_count *)a1[8];
    if (!v6)
      goto LABEL_11;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_11:
  v9 = (_QWORD *)a1[6];
  if (v9 == v5)
  {
    v10 = 4;
    v9 = v5;
  }
  else
  {
    if (!v9)
      goto LABEL_16;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_16:
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
}

void sub_2235BF218(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 10);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = __p + 24;
    v6 = (std::__shared_weak_count *)*((_QWORD *)__p + 8);
    if (!v6)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = __p + 24;
    v6 = (std::__shared_weak_count *)*((_QWORD *)__p + 8);
    if (!v6)
      goto LABEL_11;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_11:
  v9 = (char *)*((_QWORD *)__p + 6);
  if (v9 == v5)
  {
    v10 = 4;
    v9 = v5;
  }
  else
  {
    if (!v9)
      goto LABEL_16;
    v10 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v9 + 8 * v10))();
LABEL_16:
  v11 = (std::__shared_weak_count *)*((_QWORD *)__p + 2);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  operator delete(__p);
}

void sub_2235BF2FC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v9, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[9];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_2235BDCBC((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_2235562EC((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_2235BF40C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_2235BF484(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x2235BF4B8);
  JUMPOUT(0x2235BF4E8);
}

uint64_t sub_2235BF4F0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26Meshing"
                     "NodeOccupancyResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS"
                                "5_26MeshingNodeOccupancyResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE7ProcessERKS6_NSt3__17promiseIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BF55C()
{
  return &unk_24EC4EB38;
}

_QWORD *sub_2235BF568(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4EB58;
  v2 = a1[4];
  a1[3] = &off_24EC2B498;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235BF5C0(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4EB58;
  v2 = a1[4];
  a1[3] = &off_24EC2B498;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BF628(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24EC4EB58;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24EC2B498;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_2235BF6A0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2235BF6C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24EC4EB58;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24EC2B498;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_2235BF728(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_2235BF740(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24EC2B498;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235BF790(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24EC2B498;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235BF7DC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24EC2B498;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235BF890(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235BF8CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingN"
                     "odeOccupancyResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5"
                                "_26MeshingNodeOccupancyResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE9SubscribeENS1_12ChannelInputIS7_EEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BF938()
{
  return &unk_24EC4EBB8;
}

_QWORD *sub_2235BF944(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4EBD8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235BF97C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4EBD8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BF9C4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4EBD8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_2235BFA14(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24EC4EBD8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_2235BFA44(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235BFA54(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235BFA80(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235BFB14(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235BFB50(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingN"
                     "odeOccupancyResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5"
                                "_26MeshingNodeOccupancyResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BFBBC()
{
  return &unk_24EC4EC38;
}

_QWORD *sub_2235BFBC8(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4EC58;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235BFC00(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4EC58;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BFC48(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4EC58;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235BFCA0(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4EC58;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235BFCD8(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235BFCE8(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235BFD14(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_223323BA8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_223325CA4((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_223325BEC(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_2233236D4(3u);
    }
  }
}

void sub_2235BFE90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235BFF00(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26Meshing"
                     "NodeOccupancyResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS"
                                "5_26MeshingNodeOccupancyResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235BFF6C()
{
  return &unk_24EC4ECB8;
}

_QWORD *sub_2235BFF78(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4ECD8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235BFFB0(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4ECD8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235BFFF8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4ECD8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_2235C0050(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4ECD8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_2235C0088(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235C0098(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235C00C4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_2233236D4(3u);
        sub_223325BEC(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235C017C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235C01C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26Meshing"
                     "NodeOccupancyResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS"
                                "5_26MeshingNodeOccupancyResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng27MeshingNodeOccupancyRequestENS5_26MeshingNodeOccupancyResultEvS7_Lb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235C0234()
{
  return &unk_24EC4ED38;
}

void sub_2235C0244(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235C0268(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2235C0280(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNodeOccupancyRe"
                     "questENS7_26MeshingNodeOccupancyResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNode"
                                "OccupancyRequestENS7_26MeshingNodeOccupancyResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNodeOccupancyRequestENS7_26MeshingNodeOccupancyResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS1_5recon3sng27MeshingNodeOccupancyRequestENS7_26MeshingNodeOccupancyResultEvS9_Lb0EEEE27__shared_ptr_default_deleteISA_SA_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_2235C02F0(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235C031C(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235C0358@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24EC4EDA8;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_2235C03C0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235C0450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235C0464(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235C04F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235C0508(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235C05CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235C05E0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_2235C06A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235C06B8(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_2235C075C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235C0774(uint64_t a1)
{
  sub_2235C2044(a1);
  JUMPOUT(0x227684CE8);
}

void sub_2235C0798(_QWORD *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t *p_shared_weak_owners;
  __int128 v8;
  std::__shared_count v9;
  std::__shared_weak_count *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count **v15;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  std::mutex **v26;
  uint64_t **v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  uint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  uint64_t **v36;
  std::__shared_weak_count *v37;
  std::__shared_weak_count *v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  __int128 *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 *v57;
  _BYTE v58[24];
  _BYTE *v59;
  uint64_t v60;

  v60 = *MEMORY[0x24BDAC8D0];
  if (!(*(unsigned int (**)(_QWORD *))(*a1 + 48))(a1))
    return;
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v4 = (uint64_t *)a1[18];
  if (v4)
  {
    v5 = (std::__shared_weak_count *)operator new(0x68uLL);
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__shared_weak_owners_ = 0;
    p_shared_weak_owners = (unint64_t *)&v5->__shared_weak_owners_;
    v8 = *(_OWORD *)(a2 + 16);
    v5[1].std::__shared_count = *(std::__shared_count *)a2;
    *(_OWORD *)&v5[1].__shared_weak_owners_ = v8;
    v9 = *(std::__shared_count *)(a2 + 48);
    *(_OWORD *)&v5[2].__shared_owners_ = *(_OWORD *)(a2 + 32);
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4F010;
    v10 = v5 + 1;
    v5[3].std::__shared_count = v9;
    v5[3].__shared_weak_owners_ = *(_QWORD *)(a2 + 64);
    LODWORD(v5[4].__vftable) = *(_DWORD *)(a2 + 72);
    do
      v11 = __ldxr(p_shared_weak_owners);
    while (__stxr(v11 + 1, p_shared_weak_owners));
    v12 = (_QWORD *)operator new();
    *v12 = v4 + 7;
    std::mutex::lock((std::mutex *)(v4 + 7));
    *(_QWORD *)&v55 = v12;
    *((_QWORD *)&v55 + 1) = v4;
    if (!*((_BYTE *)v4 + 48))
      sub_22324A974();
    v13 = v4[4];
    v14 = *v4;
    v15 = (std::__shared_weak_count **)(*v4 + 16 * v13);
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    *v15 = v10;
    v17 = v14 + 16 * v13;
    v18 = *(std::__shared_weak_count **)(v17 + 8);
    *(_QWORD *)(v17 + 8) = v5;
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    v21 = (v4[1] - *v4) >> 4;
    v22 = v4[5];
    v23 = v4[4] + 1;
    if (v23 >= v21)
      v24 = (v4[1] - *v4) >> 4;
    else
      v24 = 0;
    v4[4] = v23 - v24;
    if (v22 == v21)
    {
      v25 = v4[3] + 1;
      if (v25 < v21)
        v21 = 0;
      v4[3] = v25 - v21;
      v26 = (std::mutex **)v55;
      if (!(_QWORD)v55)
      {
LABEL_33:
        v36 = (uint64_t **)a1[9];
        v55 = 0uLL;
        v37 = (std::__shared_weak_count *)a1[5];
        if (v37)
        {
          v38 = std::__shared_weak_count::lock(v37);
          if (v38)
          {
            v39 = v38;
            v40 = a1[4];
            v41 = (unint64_t *)&v38->__shared_weak_owners_;
            do
              v42 = __ldxr(v41);
            while (__stxr(v42 + 1, v41));
            *(_QWORD *)&v55 = v40;
            *((_QWORD *)&v55 + 1) = v38;
            v43 = (unint64_t *)&v38->__shared_owners_;
            do
              v44 = __ldaxr(v43);
            while (__stlxr(v44 - 1, v43));
            if (!v44)
            {
              ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
              std::__shared_weak_count::__release_weak(v39);
            }
          }
          else
          {
            v55 = 0uLL;
          }
        }
        v45 = (char *)operator new(0x30uLL);
        *(_QWORD *)v45 = &off_24EC4F060;
        *(_OWORD *)(v45 + 8) = v55;
        v55 = 0uLL;
        *((_QWORD *)v45 + 3) = v10;
        *((_QWORD *)v45 + 4) = v5;
        v56 = 0;
        v57 = 0;
        v59 = v45;
        sub_2245022E4(*v36, (uint64_t)v58);
        v46 = v59;
        if (v59 == v58)
        {
          v47 = 4;
          v46 = v58;
        }
        else
        {
          if (!v59)
            goto LABEL_47;
          v47 = 5;
        }
        (*(void (**)(_QWORD *))(*v46 + 8 * v47))(v46);
LABEL_47:
        if (v5)
        {
          v48 = (unint64_t *)&v5->__shared_owners_;
          do
            v49 = __ldaxr(v48);
          while (__stlxr(v49 - 1, v48));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
        return;
      }
    }
    else
    {
      v4[5] = v22 + 1;
      v26 = (std::mutex **)v55;
      if (!(_QWORD)v55)
        goto LABEL_33;
    }
    std::mutex::unlock(*v26);
    MEMORY[0x227684CE8](v26, 0x20C4093837F09);
    goto LABEL_33;
  }
  v27 = (uint64_t **)a1[9];
  v28 = (std::__shared_weak_count *)a1[5];
  if (v28)
  {
    v29 = std::__shared_weak_count::lock(v28);
    v30 = v29;
    if (v29)
    {
      v31 = a1[4];
      v32 = (unint64_t *)&v29->__shared_weak_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      v34 = (unint64_t *)&v29->__shared_owners_;
      do
        v35 = __ldaxr(v34);
      while (__stlxr(v35 - 1, v34));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    else
    {
      v31 = 0;
    }
  }
  else
  {
    v31 = 0;
    v30 = 0;
  }
  v50 = (char *)operator new(0x68uLL);
  v51 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v50 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v50 + 40) = v51;
  v52 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v50 + 56) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)v50 = &off_24EC4F0E0;
  *((_QWORD *)v50 + 1) = v31;
  *((_QWORD *)v50 + 2) = v30;
  *(_OWORD *)(v50 + 72) = v52;
  *((_QWORD *)v50 + 11) = *(_QWORD *)(a2 + 64);
  *((_DWORD *)v50 + 24) = *(_DWORD *)(a2 + 72);
  v57 = (__int128 *)v50;
  sub_2245022E4(*v27, (uint64_t)&v55);
  v53 = v57;
  if (v57 == &v55)
  {
    v54 = 4;
    v53 = &v55;
  }
  else
  {
    if (!v57)
      return;
    v54 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v53 + 8 * v54))();
}

void sub_2235C0BEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;

  if (a14 == v19)
  {
    (*(void (**)(void))(a11 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a14)
  {
    (*(void (**)(void))(*(_QWORD *)a14 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235C0CE0(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235C0CF0(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_2235C0CFC(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_2235C0D0C(_QWORD *a1, __int128 *a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  char *v9;
  unint64_t *v10;
  unint64_t *v11;
  __int128 v12;
  __int128 v13;
  char *v14;
  unint64_t v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  std::mutex **v31;
  uint64_t **v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  uint64_t **v41;
  std::__shared_weak_count *v42;
  std::__shared_weak_count *v43;
  std::__shared_weak_count *v44;
  uint64_t v45;
  unint64_t *p_shared_weak_owners;
  unint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  char *v50;
  std::string *v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  __int128 *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  __int128 *v65;
  std::string *v66;
  std::runtime_error *exception;
  std::runtime_error *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  int v75;
  _QWORD *v76;
  std::__shared_weak_count *v77;
  std::__shared_weak_count *v78;
  std::runtime_error v79;
  char *v80;
  std::__shared_weak_count *v81;
  __int128 v82;
  _QWORD *v83;
  __int128 *v84;
  _QWORD v85[3];
  std::string v86;
  std::string *v87;
  uint64_t v88;

  v88 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v82 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v82 + 1) = 45;
    v64 = (_QWORD *)a1[6];
    v63 = a1 + 6;
    v62 = v64;
    v65 = (__int128 *)*((unsigned __int8 *)v63 + 23);
    if ((char)v65 < 0)
      v65 = (__int128 *)v63[1];
    else
      v62 = v63;
    v83 = v62;
    v84 = v65;
    sub_2231A9820((uint64_t)&v82, (uint64_t)v85, 0, 0, &v86);
    if ((v86.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v66 = &v86;
    else
      v66 = (std::string *)v86.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v79, (const char *)v66);
    v79.__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v68 = std::runtime_error::runtime_error(exception, &v79);
    v68->__vftable = (std::runtime_error_vtbl *)&off_24EC77B58;
    __cxa_throw(v68, (struct type_info *)&unk_24EC77B70, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (a1[18])
  {
    v6 = (std::__shared_weak_count *)operator new(0x20uLL);
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC3FAA0;
    v6[1].__vftable = *a3;
    v78 = v6;
    v76 = &v6[1].__vftable;
    v77 = v6;
    v6->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    *a3 = 0;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    if (!a1[18]
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v9 = (char *)operator new(0x68uLL);
    *((_QWORD *)v9 + 1) = 0;
    v10 = (unint64_t *)(v9 + 8);
    *((_QWORD *)v9 + 2) = 0;
    v11 = (unint64_t *)(v9 + 16);
    v12 = a2[1];
    *(_OWORD *)(v9 + 24) = *a2;
    *(_OWORD *)(v9 + 40) = v12;
    v13 = a2[3];
    *(_OWORD *)(v9 + 56) = a2[2];
    *(_QWORD *)v9 = &off_24EC4F010;
    v14 = v9 + 24;
    *(_OWORD *)(v9 + 72) = v13;
    *((_QWORD *)v9 + 11) = *((_QWORD *)a2 + 8);
    *((_DWORD *)v9 + 24) = *((_DWORD *)a2 + 18);
    v80 = v9 + 24;
    v81 = (std::__shared_weak_count *)v9;
    do
      v15 = __ldxr(v11);
    while (__stxr(v15 + 1, v11));
    v16 = (uint64_t *)a1[18];
    v17 = (_QWORD *)operator new();
    *v17 = v16 + 7;
    std::mutex::lock((std::mutex *)(v16 + 7));
    *(_QWORD *)&v82 = v17;
    *((_QWORD *)&v82 + 1) = v16;
    if (!*((_BYTE *)v16 + 48))
      sub_22324A974();
    v18 = v16[4];
    v19 = *v16;
    v20 = (_QWORD *)(*v16 + 16 * v18);
    do
      v21 = __ldxr(v10);
    while (__stxr(v21 + 1, v10));
    *v20 = v14;
    v22 = v19 + 16 * v18;
    v23 = *(std::__shared_weak_count **)(v22 + 8);
    *(_QWORD *)(v22 + 8) = v9;
    if (v23)
    {
      v24 = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    v26 = (v16[1] - *v16) >> 4;
    v27 = v16[5];
    v28 = v16[4] + 1;
    if (v28 >= v26)
      v29 = (v16[1] - *v16) >> 4;
    else
      v29 = 0;
    v16[4] = v28 - v29;
    if (v27 == v26)
    {
      v30 = v16[3] + 1;
      if (v30 < v26)
        v26 = 0;
      v16[3] = v30 - v26;
      v31 = (std::mutex **)v82;
      if (!(_QWORD)v82)
      {
LABEL_37:
        v41 = (uint64_t **)a1[9];
        v82 = 0uLL;
        v42 = (std::__shared_weak_count *)a1[5];
        if (v42)
        {
          v43 = std::__shared_weak_count::lock(v42);
          if (v43)
          {
            v44 = v43;
            v45 = a1[4];
            p_shared_weak_owners = (unint64_t *)&v43->__shared_weak_owners_;
            do
              v47 = __ldxr(p_shared_weak_owners);
            while (__stxr(v47 + 1, p_shared_weak_owners));
            *(_QWORD *)&v82 = v45;
            *((_QWORD *)&v82 + 1) = v43;
            v48 = (unint64_t *)&v43->__shared_owners_;
            do
              v49 = __ldaxr(v48);
            while (__stlxr(v49 - 1, v48));
            if (!v49)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v44);
            }
          }
          else
          {
            v82 = 0uLL;
          }
        }
        v50 = (char *)operator new(0x38uLL);
        *(_QWORD *)v50 = &off_24EC4F160;
        *(_OWORD *)(v50 + 8) = v82;
        v82 = 0uLL;
        *((_QWORD *)v50 + 3) = v14;
        *((_QWORD *)v50 + 4) = v9;
        v83 = 0;
        v84 = 0;
        *((_QWORD *)v50 + 5) = v76;
        *((_QWORD *)v50 + 6) = v77;
        v85[0] = 0;
        v85[1] = 0;
        v87 = (std::string *)v50;
        sub_2245022E4(*v41, (uint64_t)&v86);
        v51 = v87;
        if (v87 == &v86)
        {
          v52 = 4;
          v51 = &v86;
        }
        else
        {
          if (!v87)
            goto LABEL_51;
          v52 = 5;
        }
        (*(void (**)(void))(v51->__r_.__value_.__r.__words[0] + 8 * v52))();
LABEL_51:
        if (v81)
        {
          v53 = &v81->__shared_owners_;
          do
            v54 = __ldaxr((unint64_t *)v53);
          while (__stlxr(v54 - 1, (unint64_t *)v53));
          if (!v54)
          {
            ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
            std::__shared_weak_count::__release_weak(v81);
          }
        }
        if (v78)
        {
          v55 = (unint64_t *)&v78->__shared_owners_;
          do
            v56 = __ldaxr(v55);
          while (__stlxr(v56 - 1, v55));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
            std::__shared_weak_count::__release_weak(v78);
          }
        }
        return;
      }
    }
    else
    {
      v16[5] = v27 + 1;
      v31 = (std::mutex **)v82;
      if (!(_QWORD)v82)
        goto LABEL_37;
    }
    std::mutex::unlock(*v31);
    MEMORY[0x227684CE8](v31, 0x20C4093837F09);
    goto LABEL_37;
  }
  v32 = (uint64_t **)a1[9];
  v69 = 0uLL;
  v33 = (std::__shared_weak_count *)a1[5];
  if (v33)
  {
    v34 = std::__shared_weak_count::lock(v33);
    if (v34)
    {
      v35 = v34;
      v36 = a1[4];
      v37 = (unint64_t *)&v34->__shared_weak_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      *(_QWORD *)&v69 = v36;
      *((_QWORD *)&v69 + 1) = v34;
      v39 = (unint64_t *)&v34->__shared_owners_;
      do
        v40 = __ldaxr(v39);
      while (__stlxr(v40 - 1, v39));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v35);
      }
    }
    else
    {
      v69 = 0uLL;
    }
  }
  v70 = *a2;
  v71 = a2[1];
  v72 = a2[2];
  v73 = a2[3];
  v74 = *((_QWORD *)a2 + 8);
  v75 = *((_DWORD *)a2 + 18);
  v57 = operator new(0x20uLL);
  v57[1] = 0;
  v57[2] = 0;
  *v57 = &off_24EC3FAA0;
  v57[3] = *a3;
  *a3 = 0;
  v58 = (char *)operator new(0x78uLL);
  *(_OWORD *)(v58 + 8) = v69;
  *(_OWORD *)(v58 + 24) = v70;
  *(_OWORD *)(v58 + 40) = v71;
  *(_OWORD *)(v58 + 56) = v72;
  *(_QWORD *)v58 = &off_24EC4F1E0;
  *(_OWORD *)(v58 + 72) = v73;
  *((_QWORD *)v58 + 11) = v74;
  *((_DWORD *)v58 + 24) = v75;
  *((_QWORD *)v58 + 13) = v57 + 3;
  *((_QWORD *)v58 + 14) = v57;
  v84 = (__int128 *)v58;
  sub_2245022E4(*v32, (uint64_t)&v82);
  v60 = v84;
  if (v84 == &v82)
  {
    v61 = 4;
    v60 = &v82;
  }
  else
  {
    if (!v84)
      return;
    v61 = 5;
  }
  (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)v60 + 8 * v61))(v60, v59);
}

void sub_2235C138C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,std::runtime_error a28,std::exception_ptr a29)
{
  std::__assoc_sub_state **v29;
  uint64_t v30;
  std::__assoc_sub_state *v31;
  std::exception_ptr v32;

  if (a2)
  {
    __cxa_begin_catch(exception_object);
    std::current_exception();
    __cxa_end_catch();
    v31 = *v29;
    if (*v29)
    {
      std::exception_ptr::exception_ptr((std::exception_ptr *)(v30 - 160), &a29);
      v32.__ptr_ = (void *)(v30 - 160);
      std::__assoc_sub_state::set_exception(v31, v32);
      std::exception_ptr::~exception_ptr((std::exception_ptr *)(v30 - 160));
      std::exception_ptr::~exception_ptr(&a29);
      std::runtime_error::~runtime_error(&a28);
      if (*(char *)(v30 - 81) < 0)
        operator delete(*(void **)(v30 - 104));
      JUMPOUT(0x2235C12A0);
    }
    sub_2233236D4(3u);
  }
  _Unwind_Resume(exception_object);
}

void sub_2235C1400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,std::runtime_error a28,std::exception_ptr a29)
{
  uint64_t v29;

  std::exception_ptr::~exception_ptr(&a29);
  std::runtime_error::~runtime_error(&a28);
  if (*(char *)(v29 - 81) < 0)
  {
    operator delete(*(void **)(v29 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235C1454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v12 = *(_QWORD **)(v10 - 136);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 160);
  }
  else
  {
    if (!v12)
    {
      sub_2234D9AE4((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
  sub_2234D9AE4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2235C14A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2235C14CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v34;
  uint64_t v35;

  v34 = *(_QWORD **)(v32 - 80);
  if (v34 == v31)
  {
    v35 = 4;
    v34 = (_QWORD *)(v32 - 104);
  }
  else
  {
    if (!v34)
      goto LABEL_6;
    v35 = 5;
  }
  (*(void (**)(void))(*v34 + 8 * v35))();
LABEL_6:
  sub_22332429C((_QWORD *)(v32 - 160));
  sub_223167354((uint64_t)&a31);
  sub_223167354((uint64_t)&a24);
  sub_223167354((uint64_t)&a26);
  _Unwind_Resume(a1);
}

void sub_2235C156C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,char a26)
{
  sub_223167354((uint64_t)&a24);
  sub_223167354((uint64_t)&a26);
  _Unwind_Resume(a1);
}

void sub_2235C1588(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_2245023F0(*v1);
  }
  else
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_2245023F0(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_2235C15FC(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24EC4F260;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24EC2E4A8;
  v10[4] = v9;
  v14 = v10;
  sub_2245022E4(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_2235C172C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2235C17A0(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24EC4F2E0;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_2245022E4(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_2235C18B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2235C1914@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4F360;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235C1B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_2235C1BF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24EC2E8D0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_2233236D4(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24EC4F3E0;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_2245022E4(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_223325E14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_223325EE8(&v22);
}

void sub_2235C1E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_223325EE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_223325EE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2235C1ED4(uint64_t a1)
{
  return sub_2235C2044(a1 - 16);
}

void sub_2235C1EDC(uint64_t a1)
{
  sub_2235C2044(a1 - 16);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235C1F04(uint64_t a1, uint64_t a2)
{
  return sub_2235C15FC((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235C1F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235C1914((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_2235C1F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2235C1BF4((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_2235C1F1C(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_2235C1F24(uint64_t a1)
{
  return sub_2235C2044(a1 - 24);
}

void sub_2235C1F2C(uint64_t a1)
{
  sub_2235C2044(a1 - 24);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235C1F54(uint64_t a1)
{
  return sub_2235C17A0((_QWORD *)(a1 - 24));
}

uint64_t sub_2235C1F5C(uint64_t a1)
{
  return a1 - 24;
}

uint64_t sub_2235C1F64(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2235C1FCC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2235C2034(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_2235C2044(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24EC4EE20;
  *(_QWORD *)(a1 + 16) = &unk_24EC4EE98;
  *(_QWORD *)(a1 + 24) = &unk_24EC4EED8;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x227684CE8](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

void sub_2235C2244(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4F010;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2235C2254(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC4F010;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235C228C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4F060;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2235C22D0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24EC4F060;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2235C2324(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4F060;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_2235C2394(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4F060;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_2235C23E4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_2235C2420(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_2235C2458(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_2235C277C((uint64_t *)(v8 + 88), v5, &v20);
      if (v21)
        sub_2234DDE8C(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2235C2620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_2234DDE8C(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235C2704(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng38GetListOfChunkUUIDInBoundingBoxRequestENS"
                     "t3__16vectorINS_3esn6random4UUIDENS7_9allocatorISB_EEEEvSE_Lb0EE25EnqueueMessageAndDispatchIZNKSF_4"
                     "SendERKS6_EUlT_T0_E_EEvSI_SJ_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng38GetListOfChunkUUIDInBoundingBo"
                                "xRequestENSt3__16vectorINS_3esn6random4UUIDENS7_9allocatorISB_EEEEvSE_Lb0EE25EnqueueMess"
                                "ageAndDispatchIZNKSF_4SendERKS6_EUlT_T0_E_EEvSI_SJ_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng38GetListOfChunkUUIDInBoundingBoxRequestENSt3__16vectorINS_3esn6random4UUIDENS7_9allocatorISB_EEEEvSE_Lb0EE25EnqueueMessageAndDispatchIZNKSF_4SendERKS6_EUlT_T0_E_EEvSI_SJ_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng38GetListOfChunkUUIDInBoundingBoxRequestENSt3__16vectorINS_3esn6random4UUIDENS7_9allocatorISB_EEEEvSE_Lb0EE25EnqueueMessageAndDispatchIZNKSF_4SendERKS6_EUlT_T0_E_EEvSI_SJ_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235C2770()
{
  return &unk_24EC4F0C0;
}

void sub_2235C277C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  BOOL v8;
  uint64_t v9;
  uint64_t i;
  unsigned __int8 v11;
  _QWORD *v12;
  _QWORD *j;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  int64_t v17;
  char *v18;
  char *v19;
  std::exception_ptr v20;
  void *__p;
  _BYTE *v22;

  v6 = *a1;
  if (!v6)
  {
    sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    v7 = atomic_load((unsigned __int8 *)&qword_255795680);
    if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
    {
      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
      __cxa_guard_release(&qword_255795680);
    }
    if (byte_255795670)
      v8 = byte_255795678 == 0;
    else
      v8 = 0;
    if (!v8)
    {
      v9 = qword_255795648;
      for (i = qword_255795650; v9 != i; v9 += 16)
        (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v9)(*(_QWORD *)(v9 + 8), "callable_", 9, "", 0);
    }
    v11 = atomic_load((unsigned __int8 *)&qword_255795680);
    if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
    {
      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
      __cxa_guard_release(&qword_255795680);
    }
    if (!byte_255795670)
      abort();
    qword_255795660(*(_QWORD *)algn_255795668, "callable_", 9, "", 0);
    v6 = *a1;
  }
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(&__p, v6, a2);
  v12 = a1 + 1;
  for (j = (_QWORD *)a1[2]; j != v12; j = (_QWORD *)j[1])
    (*(void (**)(_QWORD *, void **))(j[2] + 16))(j + 2, &__p);
  if (*((_BYTE *)a3 + 8))
  {
    v14 = *a3;
    if (!*a3)
      sub_2233236D4(3u);
    std::mutex::lock((std::mutex *)(v14 + 24));
    if ((*(_BYTE *)(v14 + 136) & 1) != 0
      || (v20.__ptr_ = 0, v15 = *(_QWORD *)(v14 + 16), std::exception_ptr::~exception_ptr(&v20), v15))
    {
      sub_2233236D4(2u);
    }
    *(_QWORD *)(v14 + 144) = 0;
    *(_QWORD *)(v14 + 152) = 0;
    *(_QWORD *)(v14 + 160) = 0;
    v16 = __p;
    v17 = v22 - (_BYTE *)__p;
    if (v22 != __p)
    {
      if (v17 < 0)
        sub_22316E078();
      v18 = (char *)operator new(v22 - (_BYTE *)__p);
      *(_QWORD *)(v14 + 144) = v18;
      *(_QWORD *)(v14 + 152) = v18;
      v19 = &v18[16 * (v17 >> 4)];
      *(_QWORD *)(v14 + 160) = v19;
      memcpy(v18, v16, v17);
      *(_QWORD *)(v14 + 152) = v19;
    }
    *(_DWORD *)(v14 + 136) |= 5u;
    std::condition_variable::notify_all((std::condition_variable *)(v14 + 88));
    std::mutex::unlock((std::mutex *)(v14 + 24));
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_2235C2A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, int a13, __int16 a14, char a15, unsigned __int8 a16, void *__p, uint64_t a18)
{
  std::mutex *v18;
  void **v19;
  uint64_t v20;
  void **v22;
  void *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v22 = v19;
  v24 = *v22;
  if (*v22)
  {
    *(_QWORD *)(v20 + 152) = v24;
    operator delete(v24);
  }
  std::mutex::unlock(v18);
  if (__p)
  {
    a18 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a2 == 1)
  {
    v25 = (uint64_t *)__cxa_begin_catch(a1);
    v26 = *v25;
    a10 = *(_QWORD *)(*(_QWORD *)(*v25 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a9 = (*(uint64_t (**)(void))(v26 + 16))();
    sub_2233233A4("Caught unexpected exception of type: ", (const char *)&a10, "\n", "message: ", (const char *)&a9, "\n");
    if ((a16 & 0x80u) == 0)
      v27 = (uint64_t *)&a11;
    else
      v27 = a11;
    if ((a16 & 0x80u) == 0)
      v28 = a16;
    else
      v28 = a12;
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v27, v28, (void (*)(void **))sub_22457406C);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_2235C2B44(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x2235C2B64);
}

_QWORD *sub_2235C2B70(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24EC4F0E0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2235C2BA8(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24EC4F0E0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x227684CE8);
}

__n128 sub_2235C2BF0(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __n128 result;

  v2 = (char *)operator new(0x68uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v2 = &off_24EC4F0E0;
  *((_QWORD *)v2 + 1) = v4;
  *((_QWORD *)v2 + 2) = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(a1 + 56);
  result = *(__n128 *)(a1 + 72);
  *(__n128 *)(v2 + 72) = result;
  *((_QWORD *)v2 + 11) = *(_QWORD *)(a1 + 88);
  *((_DWORD *)v2 + 24) = *(_DWORD *)(a1 + 96);
  return result;
}

__n128 sub_2235C2C70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  __n128 result;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a2 = &off_24EC4F0E0;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  result = *(__n128 *)(a1 + 24);
  v7 = *(_OWORD *)(a1 + 40);
  v8 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(a2 + 56) = v8;
  *(_OWORD *)(a2 + 40) = v7;
  *(__n128 *)(a2 + 24) = result;
  v9 = *(_QWORD *)(a1 + 88);
  *(_DWORD *)(a2 + 96) = *(_DWORD *)(a1 + 96);
  *(_QWORD *)(a2 + 88) = v9;
  return result;
}

void sub_2235C2CD0(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_2235C2CE0(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_2235C2D0C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_2235C277C((uint64_t *)(v5 + 88), a1 + 24, &v8);
        if (v9)
          sub_2234DDE8C(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_2235C2DB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_2234DDE8C(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2235C2E00(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng38GetListOfChunkUUIDInBoundingBoxRequestENS"
                     "t3__16vectorINS_3esn6random4UUIDENS7_9allocatorISB_EEEEvSE_Lb0EE4SendERKS6_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng38GetListOfChunkUUIDInBoundingBo"
                                "xRequestENSt3__16vectorINS_3esn6random4UUIDENS7_9allocatorISB_EEEEvSE_Lb0EE4SendERKS6_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng38GetListOfChunkUUIDInBoundingBoxRequestENSt3__16vectorINS_3esn6random4UUIDENS7_9allocatorISB_EEEEvSE_Lb0EE4SendERKS6_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS_5recon3sng38GetListOfChunkUUIDInBoundingBoxRequestENSt3__16vectorINS_3esn6random4UUIDENS7_9allocatorISB_EEEEvSE_Lb0EE4SendERKS6_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2235C2E6C()
{
  return &unk_24EC4F140;
}

_QWORD *sub_2235C2E78(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4F160;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2235C2F00(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24EC4F160;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x227684CE8);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_2235C2F98(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24EC4F160;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_2235C3028(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24EC4F160;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_2235C3098(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_2235C3118(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

